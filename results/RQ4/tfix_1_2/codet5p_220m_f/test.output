/*  * Copyright (c) 2008-2021, Hazelcast, Inc. All Rights Reserved.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.hazelcast.client.impl.protocol.task.map;  import com.hazelcast.client.impl.protocol.ClientMessage; import com.hazelcast.client.impl.protocol.codec.MapMessageCodec; import com.hazelcast.client.impl.protocol.task.AbstractMessageTask; import com.hazelcast.client.impl.protocol.task.MessageTask; import com.hazelcast.nio.Connection; import com.hazelcast.nio.ConnectionManager; import com.hazelcast.nio.serialization.Data; import com.hazelcast.nio.serialization.IdentifiedDataSerializable; import com.hazelcast.nio.serialization.IdentifiedDataSerializerHook; import com.hazelcast.nio.serialization.SerializationService; import com.hazelcast.nio.serialization.impl.AbstractSerializerHook;  import static com.hazelcast.client.impl.protocol.ClientMessage.*; import static com.hazelcast.client.impl.protocol.codec.MapMessageCodec.*;  /*  * This file is auto-generated by the Hazelcast Client Protocol Code Generator.  * To change this file, edit the templates or the protocol  * definitions on the https://github.com/hazelcast/hazelcast-client-protocol  * and regenerate it.  */  /**  * This class is auto-generated by the Hazelcast Client Protocol Code Generator.  * To change this template file, edit the templates or the
  if (typeDef) {     context.cache.set('types.defs', typeDef)   } else {     context.cache.set('types.defs', null)   } }  function getProp(root, cache) {   let typeDef = context.cache.get('types.defs')   if (typeDef) {     return typeDef   } else {     context.cache.set('types.defs', null)     return null   } }  function getTypeDef(root, cache) {   let typeDef = context.cache.get('types.defs')   if (typeDef) {     return typeDef   } else {     context.cache.set('types.defs', null)     return null   } }  function getType(root, cache) {   let type = context.cache.get('types.defs')   if (type) {     return type   } else {     context.cache.set('types.defs', null)     return null   } }  function getTypeDef(root, cache) {   let typeDef = context.cache.get('types.defs')   if (typeDef) {     return typeDef   } else {     context.cache.set('types.defs', null)     return null   } }  function getTypeDef(root, cache) {   let typeDef = context.cache.get('types.defs')   if (typeDef) {     return typeDef   } else {     context.cache.set('types.defs', null)     return null   } }  function getTypeDef(root, cache) {   let typeDef = context.cache.get('types.defs')   if (typeDef) {     return typeDef   } else {     context.cache.set('types.defs', null)     return null   } }  function getTypeDef(root, cache) {   let typeDef = context.cache.get('types.defs')   if (typeDef) {     return typeDef   } else {     context.cache.set('types.defs', null)     return
  const instance2 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance3 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance4 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance5 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance6 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance7 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance8 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance9 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance10 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance11 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance12 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance13 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance14 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance15 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance16 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance17 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance18 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance19 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance20 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance21 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance22 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance23 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance24 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance25 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance26 = mount(PageProposal, {       doBefore: ({}) => {} });  const instance27 = mount(PageProposal
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.con
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.yarn.server.nodemanager;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertTrue;  import java.util.ArrayList; import java.util.Arrays; import java.util.List;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.yarn.api.records.ApplicationAttemptId; import org.apache.hadoop.yarn.api.records.ApplicationId; import org.apache.hadoop.yarn.api.records.Container; import org.apache.hadoop.yarn.api.records.ContainerId; import org.apache.hadoop.yarn.api.records.Node; import org.apache.hadoop.yarn.api.records.NodeStatus; import org.apache.hadoop.yarn.api.records.Resource; import org.apache.hadoop.yarn.api.records.ResourceManager; import org.apache.hadoop.yarn.api.records.TaskAttemptId; import org.apache.hadoop.yarn.api.records.TaskInfo; import org.apache.hadoop.yarn.api.records.TaskStatus; import org
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
 // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h" #include "base/memory/scoped_vector.h"
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  const utils = require('./utils');  const constants = require('./constants');  const logger = require('./logger');  const version = require('./version');  const loggerFactory = require('./logger-factory');  const constantsFactory = require('./constants-factory');  const modelsFactory = require('./models-factory');  const loggerFactory = require('./logger-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./models-factory');  const modelsFactory = require('./
}  if(joint = isSegmentRayCross(p0, p1, p)){ 	if(joint = isSegmentRayCross(p0, p1, p)){ 		if(joint = isSegmentRayCross(p0, p1, p)){ 			if(joint = isSegmentRayCross(p0, p1, p)){ 				if(joint = isSegmentRayCross(p0, p1, p)){ 					if(joint = isSegmentRayCross(p0, p1, p)){ 						if(joint = isSegmentRayCross(p0, p1, p)){ 							if(joint = isSegmentRayCross(p0, p1, p)){ 								if(joint = isSegmentRayCross(p0, p1, p)){ 									if(joint = isSegmentRayCross(p0, p1, p)){ 										if(joint = isSegmentRayCross(p0, p1, p)){ 											if(joint = isSegmentRayCross(p0, p1, p)){ 												if(joint = isSegmentRayCross(p0, p1, p)){ 													if(joint = isSegmentRayCross(p0, p1, p)){ 														if(joint = isSegmentRayCross(p0, p1, p)){ 															if(joint = isSegmentRayCross(p0, p1, p)){ 																if(joint = isSegmentRayCross(p0, p1, p)){ 																	if(joint = isSegmentRayCross(p0, p1, p)){ 																		if(joint = isSegmentRayCross(p0, p1, p)){ 																	if(joint = isSegmentRayCross(p0, p1, p)){ 																		if(joint = isSegmentRayCross(p0, p1, p)){ 																	if(joint = isSegmentRayCross(p0, p
     }      @Override     public String toString() {         return getClass().getSimpleName();     }      @Override     public boolean equals(Object obj) {         if (this == obj) {             return true;         }         if (obj == null) {             return false;         }         if (getClass() != obj.getClass()) {             return false;         }         final Setting other = (Setting) obj;         return Objects.equals(this.id, other.id);     }      @Override     public int hashCode() {         return Objects.hash(id);     }      @Override     public String toString() {         return getClass().getSimpleName();     }      @Override     public boolean equals(Object obj) {         if (this == obj) {             return true;         }         if (obj == null) {             return false;         }         if (getClass() != obj.getClass()) {             return false;         }         final Setting other = (Setting) obj;         return Objects.equals(this.id, other.id);     }      @Override     public String toString() {         return getClass().getSimpleName();     }      @Override     public boolean equals(Object obj) {         if (this == obj) {             return true;         }         if (obj == null) {             return false;         }         if (getClass() != obj.getClass()) {             return false;         }         final Setting other = (Setting) obj;         return Objects.equals(this.id, other.id);     }      @Override     public int hashCode() {         return Objects.hash(id);     }      @Override     public String toString() {         return getClass().getSimpleName();     }      @Override     public boolean equals(Object obj) {         if (this == obj) {             return true;         }         if (obj == null) {             return false;         }         if (getClass() != obj.getClass()) {
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\Extension\Core\Type\SubmitType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolver;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class SubmitType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('submit', SubmitType::class)         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\SubmitType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'submit';     } } 


     var navSubItem = document.createElement('li');     navSubItem.className = navSubItemName;     navSubItem.setAttribute('id', navSubItemName);     navSubItem.setAttribute('class', navSubItemName);     document.body.appendChild(navSubItem);      var navItem = document.createElement('li');     navItem.className = navSubItemName;     navItem.setAttribute('id', navSubItemName);     navItem.setAttribute('class', navSubItemName);     document.body.appendChild(navItem);      navSubItem = document.createElement('li');     navSubItem.className = navSubItemName;     navSubItem.setAttribute('id', navSubItemName);     navSubItem.setAttribute('class', navSubItemName);     document.body.appendChild(navSubItem);      navSubItem = document.createElement('li');     navSubItem.className = navSubItemName;     navSubItem.setAttribute('id', navSubItemName);     navSubItem.setAttribute('class', navSubItemName);     document.body.appendChild(navSubItem);      navSubItem = document.createElement('li');     navSubItem.className = navSubItemName;     navSubItem.setAttribute('id', navSubItemName);     navSubItem.setAttribute('class', navSubItemName);     document.body.appendChild(navSubItem);      navSubItem = document.createElement('li');     navSubItem.className = navSubItemName;     navSubItem.setAttribute('id', navSubItemName);     navSubItem.setAttribute('class', navSubItemName);     document.body.appendChild(navSubItem);      navSubItem = document.createElement('li');     navSubItem.className = navSubItemName;     navSubItem.setAttribute('id', navSubItemName);     navSubItem.setAttribute('class', navSubItemName);     document.body.appendChild(navSubItem);      navSubItem = document.create
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.ComponentModel; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using Microsoft.EntityFrameworkCore; using Microsoft.EntityFrameworkCore.Infrastructure; using Microsoft.EntityFrameworkCore.Metadata; using Microsoft.EntityFrameworkCore.Storage; using Microsoft.EntityFrameworkCore.Storage.Internal; using Microsoft.EntityFrameworkCore.Storage.ValueConversion; using Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal; using Microsoft.EntityFrameworkCore.Storage.VersionControl; using Microsoft.EntityFrameworkCore.Storage.VersionControl.Extensions; using Microsoft.EntityFrameworkCore.Storage.VersionControl.Models; using Microsoft.EntityFrameworkCore.Storage.VersionControl.Providers; using Microsoft.EntityFrameworkCore.Storage.VersionControl.Services; using Microsoft.EntityFrameworkCore.Storage.VersionControl.ViewModels;  namespace Microsoft.EntityFrameworkCore.Storage.VersionControl {     /// <summary>     /// Interaction logic for VersionControl.xaml     /// </summary>     public partial class VersionControl : UserControl     {         public VersionControl()         {             this.InitializeComponent();             this.Suspending += OnSuspending;         }          /// <summary>         /// Invoked when the application is launched normally by the end user.  Other entry points         /// will be used such as when the application is launched to open a specific file.        
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "content/public/browser/browser_thread.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_observer.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_user_data_manager_observer.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_user_data_manager_observer.h" #include "content/public/browser/web_contents_user_data_manager_observer.h" #include "content/public/browser/web_contents_user_data
     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console.log(window.location.hash);     //console
 } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
.items.indexOf(item);   if (next === -1) {   next = this.items.length;   this.items.push(item);   }   res.push(item);   return res; }, this);   this.adapter = adapter;   this.items = this.items.reduce((res, item) => {   const next = parent.items.indexOf(item);   if (next === -1) {   next = this.items.length;   this.items.push(item);   }   res.push(item);   return res; }, this);   this.parent = parent;   this.parent = parent.reduce((res, item) => {   const next = parent.items.indexOf(item);   if (next === -1) {   next = this.items.length;   this.items.push(item);   }   res.push(item);   return res; }, this);   this.children = this.items.reduce((res, item) => {   const next = parent.children.indexOf(item);   if (next === -1) {   next = this.items.length;   this.items.push(item);   }   res.push(item);   return res; }, this);   this.children.sort((a, b) => {   if (a < b) {   return -1; }   if (a > b) {   return 1; }   return 0; });   this.parent.children.sort((a, b) => {   if (a < b) {   return -1; }   if (a > b) {   return 1; }   return 0; });   this.children.sort((a, b) => {   if (a < b) {   return 1; }   return 0; });   this.children.sort((a, b) => {   if (a < b) {   return -1; }   return 0; });   this.children.sort((a, b) => {   if (a < b) {   return 1; }   return 0; });   this.children.sort((a, b) => {   if (a < b) {   return -1; }   return 0; });   this.children.sort((a, b) => {   if
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.hyracks.algebricks.core.algebra.operators;  import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperator; import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperatorFactory; import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperatorDescriptor; import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperatorDescriptorFactory; import org.apache.hyracks.algebricks.core.algebra.base.IOperatorDescriptor; import org.apache.hyracks.algebricks.core.algebra.base.IOperatorDescriptorFactory; import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperatorDescriptorProvider; import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperatorDescriptorProviderFactory; import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperatorDescriptorRegistry; import org.apache.hyracks.algebricks.core.algebra.base.ILogicalOperatorDescriptorProviderFactory; import org.apache.hy
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',             ))         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'Symfony\Component\Form\Extension\Core\Type\TextType';     } } 
    for (let injection of baseGrammar.injections.injections) {         if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {             for (let injection of baseGrammar.injections.injections) {                 if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                     for (let injection of baseGrammar.injections.injections) {                         if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                             for (let injection of baseGrammar.injections.injections) {                                 if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                     for (let injection of baseGrammar.injections.injections) {                                         if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                             for (let injection of baseGrammar.injections.injections) {                                                 if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                                     for (let injection of baseGrammar.injections.injections) {                                                         if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                                             for (let injection of baseGrammar.injections.injections) {                                                                 if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                                                     for (let injection of baseGrammar.injections.injections) {                                                                         if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                                                             for (let injection of baseGrammar.injections.injections) {                                                                                 if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                                                                     for (let injection of baseGrammar.injections.injections) {                                                                                         if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                                                                             for (let injection of baseGrammar.injections.injections) {                                                                                                 if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {                                                                                                    
.apply(void 0, arguments);   }    if (arguments.length === 1) {     return arguments[0];   }    if (arguments.length === 2) {     return arguments[1];   }    if (arguments.length === 3) {     return arguments[2];   }    if (arguments.length === 4) {     return arguments[3];   }    if (arguments.length === 5) {     return arguments[4];   }    if (arguments.length === 6) {     return arguments[5];   }    if (arguments.length === 7) {     return arguments[6];   }    if (arguments.length === 8) {     return arguments[7];   }    if (arguments.length === 9) {     return arguments[8];   }    if (arguments.length === 10) {     return arguments[9];   }    if (arguments.length === 11) {     return arguments[10];   }    if (arguments.length === 12) {     return arguments[11];   }    if (arguments.length === 13) {     return arguments[12];   }    if (arguments.length === 14) {     return arguments[13];   }    if (arguments.length === 15) {     return arguments[14];   }    if (arguments.length === 16) {     return arguments[15];   }    if (arguments.length === 17) {     return arguments[16];   }    if (arguments.length === 18) {     return arguments[17];   }    if (arguments.length === 19) {     return arguments[18];   }    if (arguments.length === 20) {     return arguments[19];   }    if (arguments.length === 21) {     return arguments[20];   }    if (arguments.length === 22) {     return arguments[21];   }    if (arguments.length === 23) {     return
('gardr-validator'); var spawn = require('child_process').spawn; var fs = require('fs'); var path = require('path'); var spawnSync = require('child_process-sync').spawnSync; var exec = require('child_process').exec; var execSync = require('child_process-sync').execSync; var execSync = require('child_process-sync').execSync; var spawnSync = require('child_process-sync').spawnSync; var execSync = require('child_process-sync').execSync; var spawnSync = require('child_process-sync').spawnSync; var execSync = require('child_process-sync').execSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child_process-sync').spawnSync; var spawnSync = require('child
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
     var list = [];     var consumer = function(item) {         list.push(item);     };     var consumerCallback = function(item) {         list.splice(list.indexOf(item), 1);     };     var onDone = function() {         list.forEach(function(item) {             consumer(item);         });         onDone();     };     return {         runOrdered: function(list, consumer, consumerCallback, onDone) {             list.forEach(function(item) {                 consumer(item);             });             consumerCallback(onDone);         },         run: function(list, consumer, consumerCallback, onDone) {             list.forEach(function(item) {                 consumer(item);             });             consumerCallback(onDone);         }     }; }, {     name: 'runOrdered',     run: function(list, consumer, consumerCallback, onDone) {         var list = [];         var consumer = function(item) {             list.push(item);         };         var consumerCallback = function(item) {             list.splice(list.indexOf(item), 1);         };         var onDone = function() {             list.forEach(function(item) {                 consumer(item);             });             consumerCallback(onDone);         };         return {             run: function(list, consumer, consumerCallback, onDone) {                 list.forEach(function(item) {                     consumer(item);                 });                 consumerCallback(onDone);             },             run: function(list, consumer, consumerCallback, onDone) {                 list.forEach(function(item) {                     consumer(item);                 });                 consumerCallback(onDone);             },             run: function(list, consumer, consumerCallback, onDone) {                 list.forEach(function(item) {                     consumer(item);                 });                 consumerCallback(onDone);             },             run: function(list, consumer, consumerCallback, onDone) {                 list.forEach(function(item)
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.core.JsonProcessingException; import com.fasterxml.jackson.databind.ObjectMapper; import com.fasterxml.jackson.databind.node.ArrayNode; import com.fasterxml.jackson.databind.node.ObjectNode; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.query.aggregation.Aggregator; import org.apache.druid.query.aggregation.AggregatorFactory; import org.apache.druid.query.aggregation.AggregatorFactoryConfig; import org.apache.druid.query.aggregation.PostAggregator; import org.apache.druid.query.aggregation.PostAggregatorFactory; import org
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_View_Helper_Abstract  */ require_once 'Zend/View/Helper/Abstract.php';  /**  * @see Zend_View_Helper_File  */ require_once 'Zend/View/Helper/File.php';  /**  * @see Zend_View_Helper_Form  */ require_once 'Zend/View/Helper/Form.php';  /**  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_View_Helper_Form extends Zend_View_Helper_Abstract {     /**      * @var Zend_View_Helper_File      */     protected $_file;      /**      * @var Zend_View_Helper_Form      */     protected $_form;      /**      * @var Zend_View_Helper_Html      */     protected $_html;      /**      * @var Zend_View_Helper_HtmlForm      */     protected
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ReferenceCollection; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\Dependency
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Range; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('email')             ->add('subject')             ->add('message')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_email';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0001';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0002';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0003';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0004';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0005';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0006';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0007';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0008';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0009';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-000A';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-000B';   });   it("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@
var j = 1;  var names = {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names = names || {};  files.forEach(function(name) {  names[name] = name;  i++;  j++;  });  names =
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserManagementClient class.  * @constructor  * A user management client.  *  * @member {string} [baseUri] The base URI of the service.  *  * @member {object} [options] Options for the service.  *  * @member {string} [options.baseUri] The base URI of the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {object} [options.headers] Headers for the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {string} [options.baseUri] The base URI of the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {object} [options.headers] Headers for the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {string} [options.baseUri] The base URI of the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {object} [options.headers] Headers for the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {string} [options.baseUri] The base URI of the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {object} [options.headers] Headers for the service.  *  * @member {object} [options.credentials] Credentials for the service.  *  * @member {string} [options.baseUri] The base URI of the service.  *  * @member {object} [options.
     if (str.length === 0) {         return null;     }      if (str.length === 1) {         return str[0];     }      if (str.length === 2) {         return str[1];     }      if (str.length === 3) {         return str[2];     }      if (str.length === 4) {         return str[3];     }      if (str.length === 5) {         return str[4];     }      if (str.length === 6) {         return str[5];     }      if (str.length === 7) {         return str[6];     }      if (str.length === 8) {         return str[7];     }      if (str.length === 9) {         return str[8];     }      if (str.length === 10) {         return str[9];     }      if (str.length === 11) {         return str[10];     }      if (str.length === 12) {         return str[11];     }      if (str.length === 13) {         return str[12];     }      if (str.length === 14) {         return str[13];     }      if (str.length === 15) {         return str[14];     }      if (str.length === 16) {         return str[15];     }      if (str.length === 17) {         return str[16];     }      if (str.length === 18) {         return str[17];     }      if (str.length === 19) {         return str[18];     }      if (str.length === 20) {         return str[19];     }      if (str.length === 21) {         return str[20];     }      if (str.length === 22) {         return str[21];     }      if (str.

_write.apply(this, arguments); }  var _read = _read.apply(this, arguments);  var _read2 = _read2.apply(this, arguments);  var _read3 = _read3.apply(this, arguments);  var _read4 = _read4.apply(this, arguments);  var _read5 = _read5.apply(this, arguments);  var _read6 = _read6.apply(this, arguments);  var _read7 = _read7.apply(this, arguments);  var _read8 = _read8.apply(this, arguments);  var _read9 = _read9.apply(this, arguments);  var _read10 = _read10.apply(this, arguments);  var _read11 = _read11.apply(this, arguments);  var _read12 = _read12.apply(this, arguments);  var _read13 = _read13.apply(this, arguments);  var _read14 = _read14.apply(this, arguments);  var _read15 = _read15.apply(this, arguments);  var _read16 = _read16.apply(this, arguments);  var _read17 = _read17.apply(this, arguments);  var _read18 = _read18.apply(this, arguments);  var _read19 = _read19.apply(this, arguments);  var _read20 = _read20.apply(this, arguments);  var _read21 = _read21.apply(this, arguments);  var _read22 = _read22.apply(this, arguments);  var _read23 = _read23.apply(this, arguments);  var _read24 = _read24.apply(this, arguments);  var _read25 = _read25.apply(this, arguments);  var _read26 = _read26.apply(this, arguments);  var _read27 = _read27.apply(this, arguments);  var _read28 = _read28.apply(this, arguments);  var _read29 = _read29.apply(this, arguments);  var _read30 = _
 {   return {     publish,   }; }  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export { 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('email')             ->add('subject')             ->add('message')         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_email';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_
var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("gender") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("name") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("email") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("phone") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("gender") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("name") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("email") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("phone") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("gender") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("name") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("email") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("phone") });     if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a
 var events = mobx.EventEmitter();  function doStuff() {   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.call(this);   stop.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.internal.*; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.internal.util.typedef.internal.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.util.typedef.internal.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.util.typedef.internal.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('email')             ->add('subject')             ->add('message')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_email';     }      /**      * {@inheritdoc}      */     public function getParent()     {         return 'form';     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_email';     }      /** 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import java.util.ArrayList; import java.util.Collection; import java.util.Collections; import java.util.List; import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.affinity.AffinityTopologyVersion; import org.apache.ignite.internal.util.typedef.G; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.j
     var _active = activeElements();     if (_active) {         _active.focus();     } }  function handleBlurChange() {     var _active = activeElements();     if (_active) {         _active.blur();     } }  function activeElements() {     var _active = document.activeElements();     if (_active) {         return _active;     }     return null; }  function activeElements() {     var _active = document.activeElements();     if (_active) {         return _active;     }     return null; } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 /**  * @license  * Copyright Google Inc. All Rights Reserved.  *  * Use of this source code is governed by an MIT-style license that can be  * found in the LICENSE file at https://angular.io/license  */ "use strict"; var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {     var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; }; var __metadata = (this && this.__metadata) || function (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); }; var __param = (this && this.__param) || function (paramIndex, decorator) {     return function (target, key) { decorator(target, key, paramIndex); } }; Object.defineProperty(exports, "__esModule", { value: true }); var core_1 = require("@angular/core"); var grid_1 = require("./grid"); var grid_2 = require("./grid/grid"); var grid_3 = require("./grid/grid"); var grid_4 = require("./grid/grid"); var grid_5 = require("./grid/grid"); var grid_6 = require("./grid/grid"); var grid_7 = require("./grid/grid"); var grid_8 = require("./grid/grid"); var grid_9 = require("./grid/grid"); var grid_10 = require("./grid/
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts.WebPartsClient; using System.Web.UI.HtmlControls.WebParts.WebPartsClient.Client; using System.Web.UI.HtmlControls.WebParts.WebPartsClient.Data; using System.Web.UI.HtmlControls.WebParts.WebPartsClient.Html; using System.Web.UI.HtmlControls.WebParts.WebPartsClient.Html.Controls; using System.Web.UI.HtmlControls.WebParts.WebPartsClient.Html.Controls.Html; using System.Web.UI.HtmlControls.WebParts.WebPartsClient.Html.Controls.Html.Controls.Html.Controls.Html.Controls.Html.Controls.Html.Controls.Html.Controls.Html.Controls.Html.Controls.Html.Controls.Html
   mixins: [ReactCSSTransitionGroup],    render: function() {     return (       React.createElement('div', null,          React.createElement('div', null,            React.createElement('div', null,              React.createElement('div', null,                React.createElement('div', null,                  React.createElement('div', null,                    React.createElement('div', null,                      React.createElement('div', null,                        React.createElement('div', null,                          React.createElement('div', null,                            React.createElement('div', null,                              React.createElement('div', null,                            React.createElement('div', null,                              React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React.createElement('div', null,                            React
 function render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate(pageBody, pageData, file);     } else {         return pageBody;     } }  render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate(pageBody, pageData, file);     } else {         return pageBody;     } }  render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate(pageBody, pageData, file);     } else {         return pageBody;     } }  render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate(pageBody, pageData, file);     } else {         return pageBody;     } }  render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate(pageBody, pageData, file);     } else {         return pageBody;     } }  render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate(pageBody, pageData, file);     } else {         return pageBody;     } }  render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate(pageBody, pageData, file);     } else {         return pageBody;     } }  render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];      if (layoutTemplate) {         return layoutTemplate
 	$(this).bind('focusin.price_format', function()     { 		$(this).bind('focusin.price_format', function()     { 			$(this).bind('focusin.price_format', function()     { 				$(this).bind('focusin.price_format', function()     { 					$(this).bind('focusin.price_format', function()     { 						$(this).bind('focusin.price_format', function()     { 							$(this).bind('focusin.price_format', function()     { 								$(this).bind('focusin.price_format', function()     { 									$(this).bind('focusin.price_format', function()     { 										$(this).bind('focusin.price_format', function()     { 											$(this).bind('focusin.price_format', function()     { 												$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     { 													$(this).bind('focusin.price_format', function()     {
 (function(window, document, undefined) {   'use strict';    angular     .module('myApp')     .controller('LoginCtrl', LoginCtrl);    LoginCtrl.$inject = ['$scope', '$location', '$locationParams', 'Authentication', 'LoginService'];    function LoginCtrl($scope, $location, $locationParams, Authentication, LoginService) {     var vm = this;      vm.login = login;     vm.loginSuccess = loginSuccess;     vm.loginError = loginError;      vm.logout = logout;     vm.logoutSuccess = logoutSuccess;     vm.logoutError = logoutError;      vm.signup = signup;     vm.signupSuccess = signupSuccess;     vm.signupError = signupError;      vm.signin = signin;     vm.signinSuccess = signinSuccess;     vm.signinError = signinError;      $scope.signup = signup;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signout = signout;     $scope.signoutSuccess = signoutSuccess;     $scope.signoutError = signoutError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signout = signout;     $scope.signoutSuccess = signoutSuccess;     $scope.signoutError = signoutError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess
  this.minY <= tileRange.minY && this.maxY <= tileRange.maxY &&   this.minZ <= tileRange.minZ && this.maxZ <= tileRange.maxZ &&   this.minX >= tileRange.minX && this.maxX >= tileRange.maxX &&   this.minY >= tileRange.minY && this.maxY >= tileRange.maxY &&   this.minZ >= tileRange.minZ && this.maxZ >= tileRange.maxZ &&   this.minX >= tileRange.minX && this.maxX >= tileRange.maxX &&   this.minY >= tileRange.minY && this.maxY >= tileRange.maxY &&   this.minZ >= tileRange.minZ && this.maxZ >= tileRange.maxZ &&   this.minX >= tileRange.minX && this.maxX >= tileRange.maxX &&   this.minY >= tileRange.minY && this.maxY >= tileRange.maxY &&   this.minZ >= tileRange.minZ && this.maxZ >= tileRange.maxZ &&   this.minX >= tileRange.minX && this.maxX >= tileRange.maxX &&   this.minY >= tileRange.minY && this.maxY >= tileRange.maxY &&   this.minZ >= tileRange.minZ && this.maxZ >= tileRange.maxZ &&   this.minX >= tileRange.minX && this.maxX >= tileRange.maxX &&   this.minY >= tileRange.minY && this.maxY >= tileRange.maxY &&   this.minZ >= tileRange.minZ && this.maxZ >= tileRange.maxZ &&   this.minX >= tileRange.minX && this.maxX >= tileRange.maxX &&   this.minY >= tileRange.minY && this.maxY >= tileRange.maxY &&   this.minZ >= tileRange.minZ && this.maxZ >= tileRange.maxZ &&   this.minX >= tileRange.minX && this.maxX >= tileRange.maxX &&   this.minY >= tile
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.SumOfNumbers")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.SumOfNumbers")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
var charCode = e.which ? e.which : e.keyCode; case DOMEvents.KEYDOWN:     var charCode = e.which ? e.which : e.keyCode; case DOMEvents.KEYUP:     var charCode = e.which ? e.which : e.keyCode; case DOMEvents.MOUSEMOVE:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEDOWN:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEMOVE:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEUP:    var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEMOVE:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX = e.pageX, mouseY = e.pageY; case DOMEvents.MOUSEWHEEL:   var mouseX
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
﻿// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Models {     using Newtonsoft.Json;     using System.Linq;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Runtime.Serialization;     using Newtonsoft.Json;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using Newtonsoft.Json.Converters;     using System.ComponentModel.DataAnnotations;     using Newtonsoft.Json.Serialization;      /**      * Defines headers that will be added to request.      */     public class RequestHeaders     {         /**          * Create a RequestHeaders.          */         public RequestHeaders() { }          /**          * Create a RequestHeaders.          * @member {string} [x-ms-request-id] The request ID.          */         public string xmsRequestId { get; set; }          /**          * Create a RequestHeaders.          * @member {string} [x-ms-response-type] The response type.          */         public string xmsResponseType { get; set; }          /**          * Create a RequestHeaders.          * @member {string} [x-ms-response-body] The response body.          */         public string xmsResponseBody { get; set; }          /**          * Create a RequestHeaders.          * @member {string} [x-ms-response-header] The response header.          */         public string xmsResponseHeader { get; set; }          /**          * Create a RequestHeaders.          * @member {string} [x-ms-status] The status.          */         public string xmsStatus { get; set; }          /**          * Create a
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.DPI / 2.54;         break;         case 'out': return number * fabric.D
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceType; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceType; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceType; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyFile
  this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName, internalName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.thisName_ = thisName;   this.internalName_ = internalName; }  constructor(tempVarTransformer, protoName, thisName) {   this.tempVarTransformer_ = tempVarTransformer;   this.protoName_ = protoName;   this.this
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Drawing; using System.Windows.Shell; using System.Windows.Text; using System.Windows.Threading; using System.Windows.Threading.Tasks; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Media.Effects; using System.Windows.Media.Imaging.ImageEffects; using System.Windows.Media.Media3D; using System.Windows.Media.Media3D.Effects; using System.Windows.Media.Media3D.Media3DGraphics; using System.Windows.Media.Media3D.Media3DGraphics2D; using System.Windows.Media.Media3D.Media3DGraphics3D; using System.Windows.Media.Media3D.Media3DGraphics3DGraphics2D; using System.Windows.Media.Media3D.Media3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3DGraphics3D
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.ComponentModel; using System.Data; using System.Data.SqlClient; using System.Globalization; using System.IO; using System.Xml; using System.Xml.Linq; using System.Xml; using System.Xml.Serialization; using System.Xml.XPath; using System.Xml.XPath.XPathExpressions; using System.Xml.XPath; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Schema.Attributes; using System.ComponentModel.DataAnnotations.Schema.Properties; using System.ComponentModel.DataAnnotations.Schema.Types; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema.Utilities; using System.Diagnostics; using System.Diagnostics.CodeAnalysis; using System.Diagnostics.Contracts; using System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes") using System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity") using System.Diagnostics.Contracts; using System.Diagnostics.CodeAnalysis; using System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly") using System.Diagnostics.Contracts; using System.Diagnostics.CodeAnalysis; using System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcess
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState;  import com.google.common.base.Function; import com.google.common.base.Optional; import com.google.common.base.Preconditions; import com.google.common.base.Throwables; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import java.util.ArrayList; import java.util.Collection; import java.util.Collections; import java.util.HashMap; import java.util.HashSet; import java.util.List; import java.util.Map; import java.util.Set; import java.util.concurrent.ConcurrentHashMap; import java.util.concurrent.ConcurrentMap; import java.util.concurrent.atomic.AtomicBoolean; import java.util.concurrent.atomic.AtomicInteger; import java.util.concurrent.atomic.AtomicLong; import java.util.concurrent.atomic.AtomicReference; import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.IgniteInternalFuture; import org.apache.ignite.internal.IgniteInternalFutureListener; import org.apache.ignite.internal.IgniteInternalFutureListenerAdapter; import org.apache.ignite.internal.processors.cache.distributed.dht.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_vector.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSame
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
  (function(enyo, this) {      var $ = enyo.fn.extend,         _ = enyo.fn.extend,         _1 = enyo.fn.extend,         _2 = enyo.fn.extend,         _3 = enyo.fn.extend,         _4 = enyo.fn.extend,         _5 = enyo.fn.extend,         _6 = enyo.fn.extend,         _7 = enyo.fn.extend,         _8 = enyo.fn.extend,         _9 = enyo.fn.extend,         _10 = enyo.fn.extend,         _11 = enyo.fn.extend,         _12 = enyo.fn.extend,         _13 = enyo.fn.extend,         _14 = enyo.fn.extend,         _15 = enyo.fn.extend,         _16 = enyo.fn.extend,         _17 = enyo.fn.extend,         _18 = enyo.fn.extend,         _19 = enyo.fn.extend,         _20 = enyo.fn.extend,         _21 = enyo.fn.extend,         _22 = enyo.fn.extend,         _23 = enyo.fn.extend,         _24 = enyo.fn.extend,         _25 = enyo.fn.extend,         _26 = enyo.fn.extend,         _27 = enyo.fn.extend,         _28 = enyo.fn.extend,         _29 = enyo.fn.extend,         _30 = enyo.fn.extend,         _31 = enyo.fn.extend,         _32 = enyo.fn.extend,         _33 = enyo.fn.extend,         _34 = enyo.fn.extend,         _35 = enyo.fn.extend,         _36 = enyo.fn.extend,         _37
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('email')             ->add('subject')             ->add('message')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_email';     }      /**      * {@inheritdoc}      */     public function getParent()     {         return 'form';     }      /**      * {@inheritdoc}      */     public
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsCollection; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsType; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.dr
function *createPost() { 	var post = document.createElement('div'); 	post.id = 'post'; 	post.style.width = '100%'; 	post.style.height = '100%'; 	document.body.appendChild(post); 	return post; }  function *createPost2() { 	var post = document.createElement('div'); 	post.id = 'post2'; 	post.style.width = '100%'; 	post.style.height = '100%'; 	document.body.appendChild(post); 	return post; }  function *createPost3() { 	var post = document.createElement('div'); 	post.id = 'post3'; 	post.style.width = '100%'; 	post.style.height = '100%'; 	document.body.appendChild(post); 	return post; }  function *createPost4() { 	var post = document.createElement('div'); 	post.id = 'post4'; 	post.style.width = '100%'; 	post.style.height = '100%'; 	document.body.appendChild(post); 	return post; }  function *createPost5() { 	var post = document.createElement('div'); 	post.id = 'post5'; 	post.style.width = '100%'; 	post.style.height = '100%'; 	document.body.appendChild(post); 	return post; }  function *createPost6() { 	var post = document.createElement('div'); 	post.id = 'post6'; 	post.style.width = '100%'; 	post.style.height = '100%'; 	document.body.appendChild(post); 	return post; }  function *createPost7() { 	var post = document.createElement('div'); 	post.id = 'post7'; 	post.style.width = '100%'; 	post.style.height = '100%'; 	document.body.appendChild(post); 	return post; }  function
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
id = 'nonoonoono'; const ID_ALIAS2 = 'nonoonoono'; const ID_ALIAS3 = 'nonoonoono'; const ID_ALIAS4 = 'nonoonoono'; const ID_ALIAS5 = 'nonoonoono'; const ID_ALIAS6 = 'nonoonoono'; const ID_ALIAS7 = 'nonoonoono'; const ID_ALIAS8 = 'nonoonoono'; const ID_ALIAS9 = 'nonoonoono'; const ID_ALIAS10 = 'nonoonoono'; const ID_ALIAS11 = 'nonoonoono'; const ID_ALIAS12 = 'nonoonoono'; const ID_ALIAS13 = 'nonoonoono'; const ID_ALIAS14 = 'nonoonoono'; const ID_ALIAS15 = 'nonoonoono'; const ID_ALIAS16 = 'nonoonoono'; const ID_ALIAS17 = 'nonoonoono'; const ID_ALIAS18 = 'nonoonoono'; const ID_ALIAS19 = 'nonoonoono'; const ID_ALIAS20 = 'nonoonoono'; const ID_ALIAS21 = 'nonoonoono'; const ID_ALIAS22 = 'nonoonoono'; const ID_ALIAS23 = 'nonoonoono'; const ID_ALIAS24 = 'nonoonoono'; const ID_ALIAS25 = 'nonoonoono'; const ID_ALIAS26 = 'nonoonoono'; const ID_ALIAS27 = 'nonoonoono'; const ID_ALIAS28 = 'nonoonoono'; const ID_ALIAS29 = 'nonoonoono'; const ID_ALIAS30 = 'nonoonoono'; const ID_ALIAS31 = 'nonoonoono'; const ID_ALIAS32 = 'nonoonoono'; const ID_ALIAS33 = 'nonoonoono'; const ID_ALIAS34 = 'nonoonoono'; const ID_ALIAS35
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_text';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别</Text>           <Text style={{color: 'black', color: 18}}>             选�
.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRuleset
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceReference; use Symfony\Component
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.con
_error: function(msg, dest) {         debugger;         if (typeof msg === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         }         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         }         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object' }         }         if (typeof dest === 'object') {         if (typeof dest === 'object' }         }         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object' }         }         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === 'object') {         if (typeof dest === '
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\Config\Definition\Builder\TreeBuilder; use Symfony\Component\Config\Definition\ConfigurationInterface;  /**  * This is the class that validates and merges configuration from your app/config files  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}  */ class Configuration implements ConfigurationInterface {     /**      * {@inheritDoc}      */     public function getConfigTreeBuilder()     {         $treeBuilder = new TreeBuilder();         $rootNode = $treeBuilder->root('symfony_framework');          // Here you should define the parameters that are allowed to         // configure your bundle. See the documentation linked above for         // more information on that topic.          return $treeBuilder;     } } 
(this)); (function() {   var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {     var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r;   };   var __metadata = (this && this.__metadata) || function (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);   };   var __param = (this && this.__param) || function (paramIndex, decorator) {     return function (target, key) { decorator(target, key, paramIndex); };   };   var core_1 = require('@angular/core');   var router_1 = require('@angular/router');   var common_1 = require('@angular/common');   var common_2 = require('@angular/common');   var common_3 = require('@angular/common');   var common_4 = require('@angular/common');   var common_5 = require('@angular/common');   var common_6 = require('@angular/common');   var common_7 = require('@angular/common');   var common_8 = require('@angular/common');   var common_9 = require('@angular/common');   var common_10 = require('@angular/common');   var common_11 = require('@angular/common');   var common_12 = require('@angular/common');   var common_13 = require('@angular/common'); 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache
 this.showMessage("error", "Error while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while deleting script.");                                 }, this)  this.showMessage("warning", "Warning while
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
   if (startTime == 0) {     startTime = Date.now();     isStarted = false;   } else {     isStarted = true;     startTime = Date.now();   }   if (isStarted) {     play();   } else {     play(startTime);   } }  function play (startTime) {   if (startTime == 0) {     startTime = Date.now();     isStarted = false;   } else {     isStarted = true;     startTime = Date.now();   }   if (isStarted) {     play();   } else {     play(startTime);   } }  function play (startTime) {   if (startTime == 0) {     startTime = Date.now();     isStarted = false;   } else {     isStarted = true;     startTime = Date.now();   }   if (isStarted) {     play();   } else {     play(startTime);   } }  function play (startTime) {   if (startTime == 0) {     startTime = Date.now();     isStarted = false;   } else {     isStarted = true;     startTime = Date.now();   }   if (isStarted) {     play();   } else {     play(startTime);   } }  function play (startTime) {   if (startTime == 0) {     startTime = Date.now();     isStarted = false;   } else {     isStarted = true;     startTime = Date.now();   }   if (isStarted) {     play();   } else {     play(startTime);   } }  function play (startTime) {   if (startTime == 0) {     startTime = Date.now();     isStarted = false;   } else {     isStarted = true;     startTime = Date.now();   }   if (isStarted) {     play();   } else {     play(startTime);   } }  function play (startTime) {   if (startTime ==
game.add.audio('boden');     music.onDecoded.add(hasDecoded, this);     music.play();     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music.onDecoded.remove(hasDecoded, this);     music
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 var wrap = function(content, config) {   if (typeof content === 'string') {     return content;   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else if (typeof content === 'function') {     return content(config);   } else
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("AdminEventEditFormFeedController")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("AdminEventEditFormFeedController")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
     }      /**      * @param {string} storeName      * @param {function} callback      * @return {Promise}      */     createTransaction(storeName, callback) {         return new Promise(function(resolve, reject) {             var transaction = transaction.transaction(storeName);             transaction.on('complete', function() {                 resolve();             });             transaction.on('error', function(err) {                 reject(err);             });         });     }      /**      * @param {string} storeName      * @param {function} callback      * @return {Promise}      */     deleteTransaction(storeName, callback) {         return new Promise(function(resolve, reject) {             var transaction = transaction.transaction(storeName);             transaction.on('complete', function() {                 resolve();             });             transaction.on('error', function(err) {                 reject(err);             });         });     }      /**      * @param {string} storeName      * @param {function} callback      * @return {Promise}      */     rollbackTransaction(storeName, callback) {         return new Promise(function(resolve, reject) {             var transaction = transaction.transaction(storeName);             transaction.on('complete', function() {                 resolve();             });             transaction.on('error', function(err) {                 reject(err);             });         });     }      /**      * @param {string} storeName      * @param {function} callback      * @return {Promise}      */     commitTransaction(storeName, callback) {         return new Promise(function(resolve, reject) {             var transaction = transaction.transaction(storeName);             transaction.on('complete', function() {                 resolve();             });             transaction.on('error', function(err) {                 reject(err);             });         });     }      /**      * @param {string} storeName      * @param {function} callback      * @return {Promise}      */     rollbackTransaction(storeName, callback) {         return
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array('label' => 'sylius.form.product.name'))             ->add('description', 'textarea', array('label' => 'sylius.form.product.description'))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1d9d9d9d-1d9d-4d9d-9d9d-9d9d9d9d9d9d")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: ComVisible(false)]
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache
             type: 'button',             text: 'Log in',             onClick: function() {                 logged_in = true;                 $.ajax({                     type: 'POST',                     url: '/login',                     data: {                         username: $(this).data('model').username,                         password: $(this).data('model').password,                         remoteId: $(this).data('model').remoteId                     },                     dataType: 'json',                     success: function(data) {                         if (data.error) {                             alert(data.error);                             return false;                         }                         if (data.success) {                             $.ajax({                                 type: 'POST',                                 url: '/login',                                 data: {                                     username: $(this).data('model').username,                                     password: $(this).data('model').password,                                     remoteId: $(this).data('model').remoteId                                 },                                 dataType: 'json',                                 success: function(data) {                                     if (data.error) {                                         alert(data.error);                                         return false;                                     }                                     if (data.success) {                                         $.ajax({                                             type: 'POST',                                             url: '/login',                                             data: {                                                 username: $(this).data('model').username,                                                 password: $(this).data('model').password,                                                 remoteId: $(this).data('model').remoteId                                             },                                             dataType: 'json',                                             success: function(data) {                                                 if (data.error) {                                                     alert(data.error);                                                     return false;                                                 }                                                 if (data.success) {                                                     $.ajax({                                                         type: 'POST',                                                         url: '/login',                                                         data: {                                                             username: $(this).data('model').username,                                                             password: $(this).data('model').password,                                                             remoteId: $(this).data('model').remoteId                                                         },                                                         dataType: 'json',                                                         success: function(data

<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Parameter; use Symfony\Component\DependencyInjection\ReferenceCollection; use Symfony\Component\DependencyInjection\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootNamespace = 'gdata';     protected $_rootElement = 'feed';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
} } else if (format == 2) {     for (var i = 1; i < count + 1; i++) {       var first = aStream.getByte();       var second = aStream.getByte();       var third = aStream.getByte();       var fourth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.getByte();       var fifth = aStream.get
 if (typeof define === 'function' && define.amd) {     // AMD. Register as an anonymous module.     define(['jquery'], function($) {         return $;     }); } else if (typeof module === 'object' && module.exports) {     // Node. Does not work with strict CommonJS, but     // only CommonJS-like environments that support module.exports,     // like Node.     module.exports = function(root, factory) {         if (typeof exports === 'object' && typeof module !== 'undefined') {             // Node. Does not work with strict CommonJS, but             // only CommonJS-like environments that support module.exports,             // like Node.             module.exports = factory(require('jquery'), require('bkwld-tram-js'));         } else {             // Browser globals (root is window)             root.bkwldTram = factory(root.jQuery);         }     }; } else {     // Browser globals (root is window)     root.bkwldTram = factory(root.jQuery); }  if (typeof define === 'function' && define.amd) {     // AMD. Register as an anonymous module.     define(['jquery'], function($) {         return $;     }); } else if (typeof module === 'object' && module.exports) {     // Node. Does not work with strict CommonJS, but     // only CommonJS-like environments that support module.exports,     // like Node.     module.exports = function(root, factory) {         if (typeof exports === 'object' && typeof module !== 'undefined') {             // Node. Does not work with strict CommonJS, but             // only CommonJS-like environments that support module.exports,             // like Node.             module.exports = factory(root.jQuery);         } else {             // Browser globals (root is window)             root.bkwldTram = factory(root.jQuery);         }     }; } else {     // Browser globals (root is window)     root.bkwldTram = factory(root.jQuery); } 
 /*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.GridCacheContext; import org.apache.ignite.internal.processors.cache.GridCacheMode; import org.apache.ignite.internal.processors.cache.GridCacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ // require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param string $text (optional) The text content of the feed.      */     public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct();         $this->_text = $text;     }      /**      * Gets the text content of the feed.      *      * @return string The text content of the
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using Microsoft.AspNet.Identity; using Microsoft.AspNet.Identity.EntityFramework; using Microsoft.AspNet.Identity.Owin; using Microsoft.Owin; using Microsoft.Owin.Security; using Microsoft.Owin.Security.Cookies; using Microsoft.Owin.Security.Google; using Microsoft.Owin.Security.Facebook; using Microsoft.Owin.Security.Facebook.OAuth; using Microsoft.Owin.Security.Twitter; using Microsoft.Owin.Security.Facebook.OAuth2; using Microsoft.Owin.Security.Facebook.OAuth3; using Microsoft.Owin.Security.Google.OAuth; using Microsoft.Owin.Security.Facebook.OAuth2.Providers; using Microsoft.Owin.Security.Facebook.OAuth3.Providers.Google; using Microsoft.Owin.Security.Google.OAuth.Providers.Facebook; using Microsoft.Owin
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES); this.classList.remove.
     spyService = spyService || new Target(); });  describe('spyService', () => {     it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.a('function');     });      it('should be a function', () => {         expect(spyService).to.be.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class CategoryType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('slug')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Category'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_category';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java
    case '--ecma2':           e = '--ecma2'; break;     case '--ecma4':           e = '--ecma4'; break;     case '--ecma5':           e = '--ecma5'; break;     case '--ecma6':           e = '--ecma6'; break;     case '--ecma7':           e = '--ecma7'; break;     case '--ecma8':           e = '--ecma8'; break;     case '--ecma9':           e = '--ecma9'; break;     case '--ecma10':           e = '--ecma10'; break;     case '--ecma11':           e = '--ecma11'; break;     case '--ecma12':           e = '--ecma12'; break;     case '--ecma13':           e = '--ecma13'; break;     case '--ecma14':           e = '--ecma14'; break;     case '--ecma15':           e = '--ecma15'; break;     case '--ecma16':           e = '--ecma16'; break;     case '--ecma17':           e = '--ecma17'; break;     case '--ecma18':           e = '--ecma18'; break;     case '--ecma19':           e = '--ecma19'; break;     case '--ecma20':           e = '--ecma20'; break;     case '--ecma21':           e = '--ecma21'; break;     case '--ecma22':           e = '--ecma22'; break;     case '--ecma23':           e = '--ecma23'; break;     case '--ecma24':           e = '--ecma24'; break;     case '--ecma25':           e = '--ecma25'; break;     case '--ecma26':           e = '--ecma26'; break;     case '--ecma27':           e = '--ecma27'; break;     case '--ecma28':           e = '--ecma28'; break;     case '--ecma29':           e = '--ecma29'; break;     case '--ecma30':           e = '--ecma30'; break;     case '--ecma31':
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 }  function mockResult(request, mock.value) {   if (mock.value === undefined) {     mock.value = undefined;   } else {     mock.value = mock.value;   } }  module.exports = {   mock: mock,   request: request,   mockResult: mockResult }; 
   [MP_REGEX]: MP_REGEX,   [URL_REGEX]: URL_REGEX,   [RESPONSES]: RESPONSES, };  module.exports = {   MP_REGEX: MP_REGEX,   URL_REGEX: URL_REGEX,   RESPONSES: RESPONSES, }; 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_text';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
;  test.before(function (done) {   dbidx++;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.after(function (done) {   dbidx--;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.beforeEach(function (done) {   dbidx++;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.afterEach(function (done) {   dbidx--;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.beforeEach(function (done) {   dbidx++;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.afterEach(function (done) {   dbidx--;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.beforeEach(function (done) {   dbidx++;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.afterEach(function (done) {   dbidx--;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.beforeEach(function (done) {   dbidx++;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.afterEach(function (done) {   dbidx--;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.beforeEach(function (done) {   dbidx++;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.afterEach(function (done) {   dbidx--;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.beforeEach(function (done) {   dbidx++;   rimraf.sync(__dirname + '/fixtures');   done(); });  test.after
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Models {     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest;     using Microsoft.Rest.Azure;     using Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using Newtonsoft.Json.Converters;     using System.Runtime;     using System.Runtime.Serialization;     using System.Runtime.Serialization.Json;     using System.Security;     using System.Security.Permissions;     using System.Resources;     using System.Resources.Serialization;     using System.Web;     using System.Web.Http;     using System.Web.Http.Headers;     using System.Web.Http.Description;     using System.Web.Http.Headers.Authorization;     using System.Web.Http.Headers.ContentDisposition;     using System.Web.Http.Headers.ContentEncoding;     using System.Web.Http.Headers.ContentLength;     using System.Web.Http.Header;     using System.Web.Http.Headers.ContentLocation;     using System.Web.Http.Headers.Accept;     using System.Web.Http.Header;     using System.Web.Http.Headers.ContentDisposition;     using System.Web.Http.Header;     using System.Web.Http.Headers.ContentLength;     using System.Web.Http.Header;     using System.Web.Http.Header;     using System.Web.Http.Header;     using System.Web.Http.Header;     using System.Web.Http.Headers
 console.log(formResult); console.log(formResult[0]); console.log(formResult[1]); console.log(formResult[2]); console.log(formResult[3]); console.log(formResult[4]); console.log(formResult[5]); console.log(formResult[6]); console.log(formResult[7]); console.log(formResult[8]); console.log(formResult[9]); console.log(formResult[10]); console.log(formResult[11]); console.log(formResult[12]); console.log(formResult[13]); console.log(formResult[14]); console.log(formResult[15]); console.log(formResult[16]); console.log(formResult[17]); console.log(formResult[18]); console.log(formResult[19]); console.log(formResult[20]); console.log(formResult[21]); console.log(formResult[22]); console.log(formResult[23]); console.log(formResult[24]); console.log(formResult[25]); console.log(formResult[26]); console.log(formResult[27]); console.log(formResult[28]); console.log(formResult[29]); console.log(formResult[30]); console.log(formResult[31]); console.log(formResult[32]); console.log(formResult[33]); console.log(formResult[34]); console.log(formResult[35]); console.log(formResult[36]); console.log(formResult[37]); console.log(formResult[38]); console.log(formResult[39]); console.log(formResult[40]); console.log(formResult[41]); console.log(formResult[42]); console.log(formResult[43]); console.log(formResult[44]); console.log(formResult[45]); console.log(formResult[46]); console.log(formResult[47]); console.log(formResult[48]); console.log(formResult[49]); console
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.ignite.testframework.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <netdb.h> #include <errno.h> #include <fcntl.h> #include <errno.h> #include <stdarg.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <netinet/in_systm.h> #include <netinet/ip.h> #include <netinet/tcp.h> #include <netinet/udp.h> #include <netinet/udp4.h> #include <netinet/udp6.h> #include <netinet/tcp6.h> #include <netinet/tcpip.h> #include <netinet/tcpip4.h> #include <netinet/tcpip6.h> #include <netinet/tcpip.h> #include <netinet/ip6.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton4.h> #include <netinet/ip6_pton6.h> #include <netinet/ip6_pton8.h> #include <netinet/ip6_pton16.h> #include <netinet/ip6_pton32.h> #include <netinet/ip6_pton64.h> #include <netinet/ip6_pton128.h> #include <netinet/ip6_pton256.h> #include <netinet/ip6_pton512.h> #include <netinet/ip6_pton1024.h> #include <netinet/ip6_pt
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 var tok = this.nextToken();         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(tok && tok.type === lexer.TOKEN_BLOCK_END) { }         if(
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * @see Zend_Gdata_Extension_Feed  */ require_once 'Zend/Gdata/Extension/Feed.php';  /**  * @see Zend_Gdata_Extension_Image  */ require_once 'Zend/Gdata/Extension/Image.php';  /**  * @see Zend_Gdata_Extension_Link  */ require_once 'Zend/Gdata/Extension/Link.php';  /**  * @see Zend_Gdata_Extension_Media  */ require_once 'Zend/Gdata/Extension/Media.php';  /**  * @see Zend_Gdata_Extension_Text  */ require_once 'Zend/Gdata/Extension/Text.php';  /**  * @see Zend_Gdata_Extension_Url  */ require_once 'Zend/Gdata/Extension/Url.php';  /**  * @see Zend_Gdata_Extension_Video  */ require_once 'Zend/Gdata/Extension/Video.php';  /**  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using Microsoft.Phone.Controls; using Microsoft.Phone.Shell; using Microsoft.Phone.Shell.Interop;  // The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238  namespace PhoneApplication1 {     /// <summary>     /// An empty page that can be used on its own or navigated to within a Frame.     /// </summary>     public sealed partial class MainPage : PhoneApplicationPage     {         public MainPage()         {             this.InitializeComponent();             this.Suspending += OnSuspending;         }          /// <summary>         /// Invoked when the application is launched normally by the end user.  Other entry points         /// will be used such as when the application is launched to open a specific file.         /// </summary>         /// <param name="e">Details about the launch request and process.</param>         protected override void OnLaunched(LaunchActivatedEventArgs e)         { #if DEBUG             if (System.Diagnostics.Debugger.IsAttached)             {                 this.DebugSettings.EnableFrameRateCounter = true;             } #endif              Frame rootFrame = Window.Current.Content as Frame;              // Do not repeat app initialization when the Window already has content,             // just ensure that the window is active             if (rootFrame == null)             {                 // Create a Frame to act as the navigation context and navigate to the first page                 rootFrame = new Frame();                  rootFrame.NavigationFailed += OnNavigationFailed;                  if (e.PreviousExecutionState == ApplicationExecutionState.Terminated)                 {                     //TODO: Load state from previously suspended application                
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
.push(this._currentSnapshot[i]);         }         this._currentSnapshot = oldSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._currentSnapshot;     },      /**      * Get the current snapshot.      *      * @return {Array} The current snapshot.      */     getCurrentSnapshot: function() {         return this._
     }      @Override     public String toString() {         return name;     }      @Override     public int hashCode() {         final int prime = 31;         int result = 1;         result = prime * result + ((name == null) ? 0 : name.hashCode());         return result;     }      @Override     public boolean equals(Object obj) {         if (this == obj) {             return true;         }         if (obj == null) {             return false;         }         if (getClass() != obj.getClass()) {             return false;         }         User other = (User) obj;         if (name == null) {             if (other.name != null) {                 return false;             }         } else if (!name.equals(other.name)) {             return false;         }         return true;     }      @Override     public User clone() {         try {             return (User) super.clone();         } catch (CloneNotSupportedException e) {             throw new IllegalStateException("Got a CloneNotSupportedException from Object.clone() " + "even though we're Cloneable!", e);         }     }      @com.amazonaws.annotation.SdkInternalApi     @Override     public void marshall(ProtocolMarshaller protocolMarshaller) {         com.amazonaws.services.ec2.model.transform.UserMarshaller.getInstance().marshall(this, protocolMarshaller);     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.
 // Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders(IList<VpnGateway> vpnGateways)         {             VpnGateways = vpnGateways;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the list of vpn gateways.         /// </summary>         [JsonProperty(PropertyName = "vpnGateways")]         public IList<VpnGateway> VpnGateways { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (VpnGateways == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "VpnGateways");             }         }     } } 
exports = function (context) {   var exports = getExports(context);   if (context && context.__esModule) {     return exports;   }   if (typeof exports === 'object' && typeof module === 'object') {     for (var key in exports) {       if (Object.prototype.hasOwnProperty.call(exports, key)) {         context[key] = exports[key];       }     }   } else {     context[key] = exports;   }   return exports; }; var __extends = (this && this.__extends) || function (d, b) {   for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];   function __() { this.constructor = d; }   d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __()); }; var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {   var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;   if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);   else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;   return c > 3 && r && Object.defineProperty(target, key, r), r; }; var __metadata = (this && this.__metadata) || function (k, v) {   if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); }; var core_1 = require('@angular/core'); var core_2 = require('@angular/core'); var common_1 = require('@angular/common'); var common_2 = require('@angular/common'); var router_1 = require
 } catch (e) {   console.log(e);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(e.stack);   console.log(
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ign
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data

: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user }); progress(null, "Fetching repositories ...");         CONFIG._github
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.dataflow;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.annotations.VisibleForTesting; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_form_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_ptr_util.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector_hash.h" #include "base/memory/weak_vector_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for DeleteVpnGateway operation.     /// </summary>     public partial class DeleteVpnGatewayHeaders     {         /// <summary>         /// Initializes a new instance of the DeleteVpnGatewayHeaders class.         /// </summary>         public DeleteVpnGatewayHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the DeleteVpnGatewayHeaders class.         /// </summary>         /// <param name="customHeaders">The headers that will be added to request.         /// </param>         public DeleteVpnGatewayHeaders(IDictionary<string, List<string>> customHeaders = null)         {             CustomInit(customHeaders);         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets headers that will be added to request.         /// </summary>         [JsonProperty(PropertyName = "headers")]         public IDictionary<string, List<string>> Headers { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (Headers == null) 
 if (this.options.display === 'form') {             this.renderForm();             } else if (this.options.display === 'list') {             this.renderList();             } else if (this.options.display === 'select') {             this.renderSelect();             } else if (this.options.display === 'textarea') {             this.renderTextarea();             } else if (this.options.display === 'button') {             this.renderButton();             } else if (this.options.display === 'checkbox') {             this.renderCheckbox();             } else if (this.options.display === 'radio') {             this.renderRadio();             } else if (this.options.display === 'select') {             this.renderSelect();             } else if (this.options.display === 'textarea') {             this.renderTextarea();             } else if (this.options.display === 'button') {             this.renderButton();             } else if (this.options.display === 'checkbox') {             this.renderCheckbox();             } else if (this.options.display === 'radio') {             this.renderRadio();             } else if (this.options.display === 'select') {             this.renderSelect();             } else if (this.options.display === 'textarea') {             this.renderTextarea();             } else if (this.options.display === 'button') {             this.renderButton();             } else if (this.options.display === 'checkbox') {             this.renderCheckbox();             } else if (this.options.display === 'radio') {             this.renderRadio();             } else if (this.options.display === 'select') {             this.renderSelect();             } else if (this.options.display === 'textarea') {             this.renderTextarea();             } else if (this.options.display === 'button') {             this.renderButton();             } else if (this.options.display === 'checkbox') {             this.renderCheckbox();             } else if (this.options.display === 'radio') {             this.renderRadio();             } else if (this.options.display === 'select') {             this.renderSelect();             } else if (this.options.display === 'textarea') {             this.renderTextarea();             } else if
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.
 function saveFile(key) {     var file = document.getElementById(key);     if (!file) {         file = document.createElement('file');         file.setAttribute('name', key);         document.body.appendChild(file);     }     file.onload = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onloadend = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onload = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onloadend = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onload = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onloadend = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onload = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onloadend = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onload = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onloadend = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.onload = function () {         saveAllFiles();     };     file.onerror = function () {         saveAllFiles();     };     file.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
        tasks[i].available = true;         _allCompleted(tasks[i].tasks);         tasks[i].available = false;         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);         _allCompleted(tasks[i].tasks);
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'text';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 import React, { Component } from 'react'; import PropTypes from 'prop-types'; import { connect } from 'react-redux'; import { Link } from 'react-router-dom'; import { withRouter } from 'react-router-dom'; import { withState } from 'react-router-dom'; import { withRouterHistory } from 'react-router-dom'; import { withRouterRouter } from 'react-router-dom'; import { withRouterRouterHistory } from 'react-router-dom'; import { withRouterRouterState } from 'react-router-dom'; import { withRouterHistoryHistory } from 'react-router-dom'; import { withRouterStateHistory } from 'react-router-dom'; import { withHistory } from 'react-router-dom'; import { withRouterHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistoryHistory } from 'react-router-dom'; import { withRouterStateHistory
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.Fibonacci")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.Fibonacci")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.Fibonacci")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this
 soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("cuehit",    undefined, this); soundManager.play("
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (see http://semver.org) of the client. func Version() string { 	return "2021-06-01-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (see http://semver.org) of the client. func Version() string { 	return "2021-06-01-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (see http://semver.org) of the client. func Version() string { 	return "2021-06-01-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (
 ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          setValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _getHtml(this);   return html.value; }, ownerType: 'mixin',          getValue: () =>  {   let html = _
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
( "Bug? already seen request" );     debugger;  var request = new XMLHttpRequest(); request.onreadystatechange = function() {     if ( request.readyState == 4 ) {         if ( request.status == 200 ) {             if ( request.status == 200 ) {                 if ( request.status == 200 ) {                     if ( request.status == 200 ) {                         if ( request.status == 200 ) {                             if ( request.status == 200 ) {                                 if ( request.status == 200 ) {                                     if ( request.status == 200 ) {                                         if ( request.status == 200 ) {                                             if ( request.status == 200 ) {                                                 request.status = 200;                                             }                                         }                                     }                                 }                             }                         }                     }                 }             }         }     } }; request.open( "GET", "http://www.google.com/", true ); request.send( null ); request.onreadystatechange = function() {     if ( request.readyState == 4 ) {         if ( request.status == 200 ) {             if ( request.status == 200 ) {                 if ( request.status == 200 ) {                     if ( request.status == 200 ) {                         if ( request.status == 200 ) {                             if ( request.status == 200 ) {                                 if ( request.status == 200 ) {                                     if ( request.status == 200 ) {                                         if ( request.status == 200 ) {                                             if ( request.status == 200 ) {                                                 request.status = 200;                                             }                                         }                                     }                                 }                             }                         }                     }                 }             }         }     } }; request.open( "POST", "http://www.google.com/", true ); request.send( null ); request.onreadystatechange = function() {     if ( request.readyState == 4 ) {         if ( request.status == 200 ) {             if ( request.status == 200 ) {                 if ( request.status == 200 ) {                     if ( request.status == 200 ) {
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.ignite.testframework.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Copyright (c) Facebook, Inc. and its affiliates.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.facebook.buck.android;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue;  import com.facebook.buck.core.model.BuildTarget; import com.facebook.buck.core.model.BuildTargetFactory; import com.facebook.buck.core.rules.BuildRule; import com.facebook.buck.core.rules.BuildRuleParams; import com.facebook.buck.core.rules.BuildRuleResolver; import com.facebook.buck.core.sourcepath.SourcePath; import com.facebook.buck.core.sourcepath.resolver.SourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.DefaultSourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.DefaultSourcePathResolverFactory; import com.facebook.buck.core.sourcepath.resolver.impl.FakeSourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.FakeSourcePathResolverFactory; import com.facebook.buck.core.sourcepath.resolver.impl.TestSourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.TestSourcePathResolverFactory; import
  this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false;   this.autoClear = false
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\Dependency
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommon
 		if(!uid){ 			return false; 		} 		if(!uid.length){ 			return false; 		} 		if(!uid.charAt(0)){ 			return false; 		} 		if(!uid.charAt(1)){ 			return false; 		} 		if(!uid.charAt(2)){ 			return false; 		} 		if(!uid.charAt(3)){ 			return false; 		} 		if(!uid.charAt(4)){ 			return false; 		} 		if(!uid.charAt(5)){ 			return false; 		} 		if(!uid.charAt(6)){ 			return false; 		} 		if(!uid.charAt(7)){ 			return false; 		} 		if(!uid.charAt(8)){ 			return false; 		} 		if(!uid.charAt(9)){ 			return false; 		} 		if(!uid.charAt(10)){ 			return false; 		} 		if(!uid.charAt(11)){ 			return false; 		} 		if(!uid.charAt(12)){ 			return false; 		} 		if(!uid.charAt(13)){ 			return false; 		} 		if(!uid.charAt(14)){ 			return false; 		} 		if(!uid.charAt(15)){ 			return false; 		} 		if(!uid.charAt(16)){ 			return false; 		} 		if(!uid.charAt(17)){ 			return false; 		} 		if(!uid.charAt(18)){ 			return false; 		} 		if(!uid.charAt(19)){ 		
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util
.sequence(         func.createConstructor('Number', 2, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 3, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 4, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 5, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 6, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 7, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 8, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 9, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 10, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 11, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 12, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 13, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 14, number_ref.NumberPrototype, number_ref.Number.setValue(new Number()))),     compute.sequence(         func.createConstructor('Number', 15, number_ref.NumberPrototype, number_ref.Number.setValue(
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
(this.authorizer.isPermittedAll(permissions)) { this.authorizer.isPermittedAll(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsType; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid
 (this.hasID(nodeID) || this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                  this.nodesByID[ nodeID ] = node; }  if (!this.hasOwnID(nodeID)) {   if (!node.isLive()) debugger                                 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param string $text (optional) The text content of the feed.      */     public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct();         $this->_text = $text;     }      /**      * Gets the text content of the feed.      *      * @return string The text content of the
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
     if (command == SET_PROJECT_TYPE) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (command == GET_PROJECT_TYPE) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (command == UPDATE_PROJECT_TYPE) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (command == DELETE_PROJECT_TYPE) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (command == GET_PROJECT_TYPES) {         const {projectTypes} = payload         if (projectTypes) {             options.projectTypes = projectTypes         }     }      if (command == UPDATE_PROJECT_TYPES) {         const {projectTypes} = payload         if (projectTypes) {             options.projectTypes = projectTypes         }     }      if (command == DELETE_PROJECT_TYPES) {         const {projectTypes} = payload         if (projectTypes) {             options.projectTypes = projectTypes         }     }      if (command == CREATE_PROJECT_TYPE) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (command == UPDATE_PROJECT_TYPES) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (command == DELETE_PROJECT_TYPES) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (command == DELETE_PROJECT_TYPES) {         const {projectType} = payload         if (projectType) {             options.projectType = projectType         }     }      if (
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Compute.Models {     using Microsoft.Azure;     using Microsoft.Azure.Management;     using Microsoft.Azure.Management.Compute;     using Microsoft.Azure.Management.Compute.Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Text;     using System.Text.RegularExpressions;     using System.Collections;     using System.Collections.ObjectModel;     using Newtonsoft.Json.Converters;     using System.Runtime;     using System.Runtime.Serialization;     using System.ComponentModel.DataAnnotations;     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Collections.Specialized;     using System.Runtime.Serialization;     using System.Runtime.Serialization.Formatters.Binary;     using System.Text.RegularExpressions;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Collections.Specialized;     using System.Runtime.Serialization;     using System.Text;     using System.Text.RegularExpressions;     using System.Collections.Specialized;     using System.Runtime.Serialization.Formatters.Binary;     using System.Text.RegularExpressions;     using System.Text.RegularExpressions;     using System.Text.RegularExpressions;     using System.Text.RegularExpressions;     using System.Text.RegularExpressions;     using System.Text.RegularExpressions;     using System.Text.RegularExpressions; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.atomic.AtomicBoolean; import com.google.common.util.concurrent.atomic.AtomicInteger; import com.google.common.util.concurrent.atomic.AtomicReference; import com.google.common.util
     'click': function(e) {         e.preventDefault();         var $this = $(this);         if ($this.hasClass('active')) {             $this.removeClass('active');         } else {             $this.addClass('active');         }     },      'click': function(e) {         e.preventDefault();         var $this = $(this);         if ($this.hasClass('active')) {             $this.removeClass('active');         } else {             $this.addClass('active');         }     },      'click': function(e) {         e.preventDefault();         var $this = $(this);         if ($this.hasClass('active')) {             $this.removeClass('active');         } else {             $this.addClass('active');         }     },      'click': function(e) {         e.preventDefault();         var $this = $(this);         if ($this.hasClass('active')) {             $this.removeClass('active');         } else {             $this.addClass('active');         }     },      'click': function(e) {         e.preventDefault();         var $this = $(this);         if ($this.hasClass('active')) {             $this.removeClass('active');         } else {             $this.addClass('active');         }     },      'click': function(e) {         e.preventDefault();         var $this = $(this);         if ($this.hasClass('active')) {             $this.removeClass('active');         } else {             $this.addClass('active');         }     },      'click': function(e) {         e.preventDefault();         var $this = $(this);         if ($this.hasClass('active')) {             $this.removeClass('active');         } else {             $this.addClass('active');         }     },      'click': function(e) {         e.preventDefault();         var
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
var message = message.data10[0]; var message = message.data10[1]; var message = message.data10[2]; var message = message.data10[3]; var message = message.data10[4]; var message = message.data10[5]; var message = message.data10[6]; var message = message.data10[7]; var message = message.data10[8]; var message = message.data10[9]; var message = message.data10[10]; var message = message.data10[11]; var message = message.data10[12]; var message = message.data10[13]; var message = message.data10[14]; var message = message.data10[15]; var message = message.data10[16]; var message = message.data10[17]; var message = message.data10[18]; var message = message.data10[19]; var message = message.data10[20]; var message = message.data10[21]; var message = message.data10[22]; var message = message.data10[23]; var message = message.data10[24]; var message = message.data10[25]; var message = message.data10[26]; var message = message.data10[27]; var message = message.data10[28]; var message = message.data10[29]; var message = message.data10[30]; var message = message.data10[31]; var message = message.data10[32]; var message = message.data10[33]; var message = message.data10[34]; var message = message.data10[35]; var message = message.data10[36]; var message = message.data10[37]; var message = message.data10[38]; var message = message.data10[39]; var message = message.data10[40]; var message = message.data10[41]; var message = message.data10[42]; var message = message.data10[43]; var message = message.data10[44]; var message = message.data10[45]; var message = message.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.sleepSpeedLimit = parseInt(this.data.sleepSpeedLimit); 		this.data.
  this.rootPattern = rootPattern;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;   this.callback = callback; }  constructor(rootPattern, referencer, callback) {   super(this);   this.rootPattern = rootPattern;   this.referencer = referencer;  
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls
(function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})(); (function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})(); (function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})(); (function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})(); (function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})(); (function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";var b=document.get
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 return false         break       } else if (comparison > 0) { return false         break       } else if (comparison < 0) { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false         break       } else { return false        
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\Validator\Constraints as Assert; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Min; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\ConstraintValidatorInterface; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ReferenceCollection; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceType; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Speed extends AbstractTag {      protected $Id = '0010,0011';      protected $Name = 'Speed';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Speed';  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
 }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; }     return; 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', [                 'label' => 'sylius.form.product.name',                 'required' => false,             ])             ->add('description', 'textarea', [                 'label' => 'sylius.form.product.description',                 'required' => false,             ])         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults([             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ]);     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart(...this.configs) var merge = merge.smart
  describe('DatabaseManager', () => {   let databaseManager    beforeEach(() => {     databaseManager = new DatabaseManager()   })    afterEach(() => {     databaseManager = null   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeDefined()   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstanceOf(DatabaseManager)   })    it('should create a new instance of DatabaseManager', () => {     expect(databaseManager).toBeInstance
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints as Assert;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'text';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.FutureCallback; import org.apache.druid.java.util.common.util.concurrent.Futures; import org.apache
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.Cache
﻿//------------------------------------------------------------------------------ // <auto-generated> //     This code was generated by a tool. //     Runtime Version:4.0.30319.42000 // //     Changes to this file may cause incorrect behavior and will be lost if //     the code is regenerated. // </auto-generated> //------------------------------------------------------------------------------  using System; using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Test1")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("Test1")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e1e1e1e1e1")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: ComVisible(false)]  // The following GUID is for the
 		//console.log(this); 		//console.log(arguments); 		//console.log(arguments[0]); 		//console.log(arguments[1]); 		//console.log(arguments[2]); 		//console.log(arguments[3]); 		//console.log(arguments[4]); 		//console.log(arguments[5]); 		//console.log(arguments[6]); 		//console.log(arguments[7]); 		//console.log(arguments[8]); 		//console.log(arguments[9]); 		//console.log(arguments[10]); 		//console.log(arguments[11]); 		//console.log(arguments[12]); 		//console.log(arguments[13]); 		//console.log(arguments[14]); 		//console.log(arguments[15]); 		//console.log(arguments[16]); 		//console.log(arguments[17]); 		//console.log(arguments[18]); 		//console.log(arguments[19]); 		//console.log(arguments[20]); 		//console.log(arguments[21]); 		//console.log(arguments[22]); 		//console.log(arguments[23]); 		//console.log(arguments[24]); 		//console.log(arguments[25]); 		//console.log(arguments[26]); 		//console.log(arguments[27]); 		//console.log(arguments[28]); 		//console.log(arguments[29]); 		//console.log(arguments[30]); 		//console.log(arguments[31]); 		//console.log(arguments[32]); 		//console.log(arguments[33]); 		//console.log(arguments[34]); 		//console.log(arguments[35]); 		//console.log(arguments[36]); 		//console.log(arguments[37]); 		//console.log(arguments[38]); 		//console.log(arguments[39]); 		//console.log(arguments[
case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case 'numbers':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', ''); case
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.Iterables; import com.google.common.collect.Ordering; import java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.Map; import java.util.Set; import org.apache.beam.runners.core.Pipeline; import org.apache.beam.runners.core.PipelineRunner; import org.apache.beam.runners.core.PipelineRunnerFactory; import org.
 pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT = 15; pc.extend(pc, function () {     var SAMPLE_COUNT
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 const co2Color = getCo2(co2ColorScale);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);   const co2Intensity = getProductionCo2Intensity
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 if (!user.email)         throw 'no email'       else if (!user.password)         throw 'no password'       else if (!user.password_confirmation) throw 'no password confirmation' else if (!user.password_reset_token) throw 'no password reset token' else if (!user.password_reset_token_expires) throw 'no password reset token expires' else if (!user.password_reset_token_expires_in) throw 'no password reset token expires in' else if (!user.password_reset_token_expires_in_days) throw 'no password reset token expires in days' else if (!user.password_reset_token_expires_in_hours) throw 'no password reset token expires in hours' else if (!user.password_reset_token_expires_in_minutes) throw 'no password reset token expires in minutes' else if (!user.password_reset_token_expires_in_seconds) throw 'no password reset token expires in seconds' else if (!user.password_reset_token_expires_in_days) throw 'no password reset token expires in days' else if (!user.password_reset_token_expires_in_hours) throw 'no password reset token expires in hours' else if (!user.password_reset_token_expires_in_minutes) throw 'no password reset token expires in minutes' else if (!user.password_reset_token_expires_in_seconds) throw 'no password reset token expires in seconds' else if (!user.password_reset_token_expires_in_days) throw 'no password reset token expires in days' else if (!user.password_reset_token_expires_in_hours) throw 'no password reset token expires in hours' else if (!user.password_reset_token_expires_in_minutes) throw 'no password reset token expires in minutes' else if (!user.password_reset_token_expires_in_seconds) throw 'no password reset token expires in seconds' else if (!user.password_reset_token_expires_in_days) throw 'no password reset token expires in days' else if (!user.password_reset_token_expires_in_hours) throw 'no password reset token expires in hours' else if (!user.password
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class CategoryType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.category.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('slug', 'text', array(                 'label' => 'sylius.form.category.slug',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Category'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_category';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; }   break; 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Globalization; using System.IO; using System.Net; using System.Net.Http; using System.Net.Http.Headers; using System.Web; using System.Web.Http; using System.Web.Http.Controllers; using System.Web.Http.Description; using System.Web.Http.Filters; using System.Web.Http.Routing; using System.Web.Optimization; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebParts; using System.Web.UI.HtmlControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls.WebComponents; using System.Web.UI.HtmlControls.WebComponents.Client; using System.Web.UI.HtmlControls.WebParts.Client; using System.Web.UI.HtmlControls.WebComponents.WebComponentsClient; using System.Web.UI.HtmlControls.WebComponentsClient.Client; using System.Web.UI.HtmlControls.WebComponentsClient.WebComponentsClient; using System.Web.UI.HtmlControls.WebComponentsClient.WebComponentsClient; using System.Web.UI.HtmlControls.WebComponentsClient.WebComponentsClient.WebComponentsClient; using System.Web.UI.HtmlControls.WebComponentsClient.WebComponentsClient.WebComponentsClient; using System.Web.UI.HtmlControls.WebComponentsClient.WebComponentsClient.WebComponentsClient; using System.Web.UI.HtmlControls.WebComponentsClient.WebComponentsClient.WebComponentsClient; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
 /*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.Hyrack
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
 }     },     _onWindowFocus : function( event ) {       this._showCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _showCalendar : function() {       this._showCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }     },     _hideCalendar : function() {       this._hideCalendar(); }    
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
 // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_SCREEN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_SCREEN_MANAGER_H_  #include "base/basictypes.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "chrome/browser/chromeos/login/screen_manager_delegate.h" #include "chrome/browser/chromeos/login/screen_manager_observer.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/browser_thread.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_reg
 Mergeatron.prototype.constructor = Mergeatron;  function Mergeatron(db) { 	this.db = db; }  Mergeatron.prototype.init = function() { 	var self = this; 	this.db.on('error', function(err) { 		self.emit('error', err); 	}); 	this.db.on('connect', function() { 		self.emit('connect'); 	}); 	this.db.on('close', function() { 		self.emit('close'); 	}); 	this.db.on('error', function(err) { 		self.emit('error', err); 	}); 	this.db.on('connect', function() { 		self.emit('connect'); 	}); 	this.db.on('close', function() { 		self.emit('close'); 	}); 	this.db.on('error', function(err) { 		self.emit('error', err); 	}); 	this.db.on('connect', function() { 		self.emit('connect'); 	}); 	this.db.on('close', function() { 		self.emit('close'); 	}); 	this.db.on('error', function(err) { 		self.emit('error', err); 	}); 	this.db.on('connect', function() { 		self.emit('connect'); 	}); 	this.db.on('close', function() { 		self.emit('close'); 	}); 	this.db.on('error', function(err) { 		self.emit('error', err); 	}); 	this.db.on('connect', function() { 		self.emit('connect'); 	}); 	this.db.on('close', function() { 		self.emit('close'); 	}); 	this.db.on('error', function(err) { 		self.emit('error', err); 	}); 	this.db.on('connect', function() { 		self.emit('connect'); 	}); 	this.db.on('close
     if (buttonType === 'toggle') {       this.module.setConfiguration('toggle', !this.module.getConfiguration('toggle'));     } else {       this.module.setConfiguration('toggle', !this.module.getConfiguration('toggle'));     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', true);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', true);     } else {       this.module.setConfiguration('toggle', false);     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', false);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', true);     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', false);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', true);     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', false);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', true);     } else {       this.module.setConfiguration('toggle', false);     }
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.junit.Test;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache.ignite.cache.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class SubmitType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('submit', 'submit')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\SubmitType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'form_submit';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.cache.*; import org.apache.ignite.configuration.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.cache.distributed.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.internal.*; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.lang.*; import org.apache.ignite.spi.discovery.tcp.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vmvm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vmvm.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
     it("move should be 2 ", function*() {              const stemGroup=file.createGroup('pmc/Trajectories');     const stemGroup2=file.createGroup('pmc/Trajectories');     const stemGroup3=file.createGroup('pmc/Trajectories');     const stemGroup4=file.createGroup('pmc/Trajectories');     const stemGroup5=file.createGroup('pmc/Trajectories');     const stemGroup6=file.createGroup('pmc/Trajectories');     const stemGroup7=file.createGroup('pmc/Trajectories');     const stemGroup8=file.createGroup('pmc/Trajectories');     const stemGroup9=file.createGroup('pmc/Trajectories');     const stemGroup10=file.createGroup('pmc/Trajectories');     const stemGroup11=file.createGroup('pmc/Trajectories');     const stemGroup12=file.createGroup('pmc/Trajectories');     const stemGroup13=file.createGroup('pmc/Trajectories');     const stemGroup14=file.createGroup('pmc/Trajectories');     const stemGroup15=file.createGroup('pmc/Trajectories');     const stemGroup16=file.createGroup('pmc/Trajectories');     const stemGroup17=file.createGroup('pmc/Trajectories');     const stemGroup18=file.createGroup('pmc/Trajectories');     const stemGroup19=file.createGroup('pmc/Trajectories');     const stemGroup20=file.createGroup('pmc/Trajectories');     const stemGroup21=file.createGroup('pmc/Trajectories');     const stemGroup22=file.createGroup('pmc/Trajectories');     const stemGroup23=file.createGroup('pmc/Trajectories');     const stemGroup24=file.createGroup('pmc/Trajectories');     const stemGroup25=file.createGroup('pmc/Trajectories');     const stemGroup26=file.createGroup('pmc/Trajectories');     const stemGroup27
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.core.algebra.functions.FunctionIdentifier; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.FrameTupleReference; import org.apache.hyracks.
var ee4 = new EventEmitter4(); var ee5 = new EventEmitter5(); var ee6 = new EventEmitter6(); var ee7 = new EventEmitter7(); var ee8 = new EventEmitter8(); var ee9 = new EventEmitter9(); var ee10 = new EventEmitter10(); var ee11 = new EventEmitter11(); var ee12 = new EventEmitter12(); var ee13 = new EventEmitter13(); var ee14 = new EventEmitter14(); var ee15 = new EventEmitter15(); var ee16 = new EventEmitter16(); var ee17 = new EventEmitter17(); var ee18 = new EventEmitter18(); var ee19 = new EventEmitter19(); var ee20 = new EventEmitter20(); var ee21 = new EventEmitter21(); var ee22 = new EventEmitter22(); var ee23 = new EventEmitter23(); var ee24 = new EventEmitter24(); var ee25 = new EventEmitter25(); var ee26 = new EventEmitter26(); var ee27 = new EventEmitter27(); var ee28 = new EventEmitter28(); var ee29 = new EventEmitter29(); var ee30 = new EventEmitter30(); var ee31 = new EventEmitter31(); var ee32 = new EventEmitter32(); var ee33 = new EventEmitter33(); var ee34 = new EventEmitter34(); var ee35 = new EventEmitter35(); var ee36 = new EventEmitter36(); var ee37 = new EventEmitter37(); var ee38 = new EventEmitter38(); var ee39 = new EventEmitter39(); var ee40 = new EventEmitter40(); var ee41 = new EventEmitter41(); var ee42 = new EventEmitter42(); var ee43 = new EventEmitter43(); var ee44 = new EventEmitter44(); var ee45 = new EventEmitter45(); var ee46 = new EventEmitter46(); var ee47 = new EventEmitter47(); var ee48 = new EventEmitter48(); var ee49 = new EventEmitter49(); var ee50 = new EventEmitter50(); var ee51 = new EventEmitter51(); var ee52 = new EventEmitter52(); var ee53 = new EventEmitter53(); var ee54 = new EventEmitter54(); var ee55 = new EventEmitter55(); var ee56 = new EventEmitter56(); var ee57 = new EventEmitter57(); var ee58 = new EventEmitter58(); var ee59 = new EventEmitter59(); var ee60 = new EventEmitter60
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for CreateOrUpdateOperation.     /// </summary>     public partial class CreateOrUpdateOperationHeaders     {         /// <summary>         /// Initializes a new instance of the CreateOrUpdateOperationHeaders         /// class.         /// </summary>         public CreateOrUpdateOperationHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the CreateOrUpdateOperationHeaders         /// class.         /// </summary>         public CreateOrUpdateOperationHeaders(string name = default(string))         {             Name = name;             CustomInit();         }          /// <summary>         /// Initializes a new instance of the CreateOrUpdateOperationHeaders         /// class.         /// </summary>         public CreateOrUpdateOperationHeaders(string name = default(string))         {             Name = name;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets name of the operation.         /// </summary>         [JsonProperty(PropertyName = "name")]         public string Name { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (Name == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull
 },     setContractsByCity(result) {debugger       if (result&&result.success) {  },     setContractsByCountry(result) {debugger       if (result&&result.success) {  },     setContractsByPostalCode(result) {debugger       if (result&&result.success) {  },     setContractsByPhone(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByEmail(result) {debugger       if (result&&result.success) {  },     setContractsByPhone(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByEmail(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByEmail(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result) {debugger       if (result&&result.success) {  },     setContractsByFax(result)
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_POPUP_POPUP_CONTROLLER_H_ #define CHROME_BROWSER_UI_VIEWS_POPUP_POPUP_CONTROLLER_H_  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_view.h" #include "content/public/browser/web_contents_view_delegate.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_view_host.h" #include "content/public/browser/web_contents_view_host_delegate.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_user_data_manager_observer.h" #include "content/public/browser/web_contents_user_data_
  return this.removeEventListener.apply(this, arguments) }  var elementAddEventListener = ElementProto.addEventListener ? function() {     return this.addEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.addEventListener.apply(this, arguments) }  var elementRemoveEventListener = ElementProto.removeEventListener ? function() {     return this.removeEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.removeEventListener.apply(this, arguments) }  var elementAddEventListener = ElementProto.addEventListener ? function() {     return this.addEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.addEventListener.apply(this, arguments) }  var elementRemoveEventListener = ElementProto.removeEventListener ? function() {     return this.removeEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.removeEventListener.apply(this, arguments) }  var elementAddEventListener = ElementProto.addEventListener ? function() {     return this.addEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.addEventListener.apply(this, arguments) }  var elementAddEventListener = ElementProto.addEventListener ? function() {     return this.addEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.addEventListener.apply(this, arguments) }  var elementRemoveEventListener = ElementProto.removeEventListener ? function() {     return this.removeEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.removeEventListener.apply(this, arguments) }  var elementAddEventListener = ElementProto.addEventListener ? function() {     return this.addEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.addEventListener.apply(this, arguments) }  var elementRemoveEventListener = ElementProto.removeEventListener ? function() {     return this.removeEventListener.apply(this, arguments) } : function(eventName, listener) {   return this.removeEventListener.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.mockito.Matchers.any; import static org.mockito.Matchers.anyString; import static org.mockito.Matchers.eq; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.Settable
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.hadoop.hbase.regionserver;  import java.io.IOException; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.HRegionInfo; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.client.Get; import org.apache.hadoop.hbase.client.Put; import org.apache.hadoop.hbase.client.Result; import org.apache.hadoop.hbase.client.ResultScanner; import org.apache.hadoop.hbase.client.Scan; import org.apache.hadoop.hbase.client.Table; import org.apache.hadoop.hbase.client.TableDescriptor; import org.apache.hadoop.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.Xaml; using System.Web.UI.HtmlControls.Xaml.Data; using System.Web.UI.HtmlControls.Xaml.Documents; using System.Web.UI.HtmlControls.Xaml.Input; using System.Web.UI.HtmlControls.Xaml.Media; using System.Web.UI.HtmlControls.Xaml.Navigation; using System.Web.UI.HtmlControls.Xaml.Shapes;  // The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409  namespace WebFormsDemo {     /// <summary>     /// An empty page that can be used
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 var a = makeReactive(2);     debugger; var b = makeReactive(3);     debugger; var b = makeReactive(4);     debugger; var b = makeReactive(5);     debugger; var b = makeReactive(6);     debugger; var b = makeReactive(7);     debugger; var b = makeReactive(8);     debugger; var b = makeReactive(9);     debugger; var b = makeReactive(10);     debugger; var b = makeReactive(11);     debugger; var b = makeReactive(12);     debugger; var b = makeReactive(13);     debugger; var b = makeReactive(14);     debugger; var b = makeReactive(15);     debugger; var b = makeReactive(16);     debugger; var b = makeReactive(17);     debugger; var b = makeReactive(18);     debugger; var b = makeReactive(19);     debugger; var b = makeReactive(20);     debugger; var b = makeReactive(21);     debugger; var b = makeReactive(22);     debugger; var b = makeReactive(23);     debugger; var b = makeReactive(24);     debugger; var b = makeReactive(25);     debugger; var b = makeReactive(26);     debugger; var b = makeReactive(27);     debugger; var b = makeReactive(28);     debugger; var b = makeReactive(29);     debugger; var b = makeReactive(30);     debugger; var b = makeReactive(31);     debugger; var b = makeReactive(32);     debugger; var b = makeReactive(33);     debugger; var b = makeReactive(34);     debugger; var b = makeReactive(35);     debugger; var b = makeReactive(36);     debugger; var b = makeReactive(37);     debugger; var b = makeReactive(38);     debugger; var b = makeReactive(39);     debugger; var b = makeReactive(40);     debugger; var b =
var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); var info = new Array(); 
 stopDrag(e) {     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<span class="glyphicon glyphicon-refresh decoy-el-spinner" aria-hidden="true"></span>'   , spinner_width = 20    , spinner_height = 20    , spinner_class = 'decoy-el-spinner decoy-el-spinner-active'   , spinner_class_active = 'decoy-el-spinner decoy-el-spinner-active'   , spinner_class_disabled = 'decoy-el-spinner decoy-el-spinner-disabled'   , spinner_class_disabled_active = 'decoy-el-spinner decoy-el-spinner-disabled-active'   , spinner_class_disabled_disabled = 'decoy-el-spinner decoy-el-spinner-disabled-disabled'   , spinner_class_disabled_disabled = 'decoy-el-spinner decoy-el-spinner-disabled-disabled'   , spinner_class_disabled_disabled_active = 'decoy-el-spinner decoy-el-spinner-disabled-disabled-active'   , spinner_class_disabled_disabled = 'decoy-el-spinner decoy-el-spinner-disabled-disabled'   , spinner_class_disabled = 'decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner decoy-el-spinner dec
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Shell.Interop; using System.Diagnostics; using System.Diagnostics.CodeAnalysis; using System.Globalization; using System.IO; using System.Xml; using System.Xml.Linq; using System.Xml.XPath; using System.Xml.XPath.XPathConstants; using System.Xml.XPath; using System.Xml.XPath.XPathExpressions; using System.Xml; using System.Xml.XPath; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Binary; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.XmlSerializer; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationContext; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatting; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Properties; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Schema; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.XmlSerializerSettings; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.XmlSerializerSettings.Converters; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters.Binary; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters.Binary.SerializationContext; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters.Binary.SerializationInfo; using System.Xml.Serialization
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Azure;     using Microsoft.Azure.Management;     using Microsoft.Azure.Management.RecoveryServices;     using Microsoft.Azure.Management.RecoveryServices.Backup;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Text;     using System.Text.RegularExpressions;     using System.Collections;     using System.Collections.ObjectModel;     using Newtonsoft.Json.Converters;     using System.Runtime;     using System.Runtime.Serialization;     using System.Resources;     using System.Resources.Serialization;     using System.Web;     using System.Web.Http;     using System.Web.Http.Formatting;     using System.Web.Http.Headers;     using System.Web.Http.Headers.Accept;     using System.Web.Http.Headers.Authorization;     using System.Web.Http.Headers.ContentDisposition;     using System.Web.Http.Headers.ContentEncoding;     using System.Web.Http.Headers.ContentDisposition;     using System.Web.Http.Headers.ContentLength;     using System.Web.Http.Headers.ContentDisposition;     using System.Web.Http.Headers.ContentLocation;     using System.Web.Http.Headers.Accept;     using System.Web.Http.Headers.ContentDisposition;     using System.Web.Http.Headers.ContentType;     using System.Xml.Serialization;     using System.Xml.Serialization.Converters;     using System.Xml.Serialization.Configuration;     using System.Xml.Serialization.SerializationContext;     using System.Xml.Serialization;     using System.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 ;(function () {   var __extends = (this && this.__extends) || (function () {     var extendStatics = function (d, b) {       extendStatics = Object.setPrototypeOf ||         ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||         function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };       return extendStatics(d, b);     };     return function (d, b) {       extendStatics(d, b);       function __() { this.constructor = d; }       d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());     };   })());  var __extends = (this && this.__extends) || (function () {   var extendStatics = function (d, b) {     extendStatics = Object.setPrototypeOf ||         ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||         function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };     return extendStatics(d, b);   };   return function (d, b) {     extendStatics(d, b);     function __() { this.constructor = d; }     d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());   });   var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {     var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserServiceClient class.  * @constructor  * A user service client.  * @member {string} [baseUri] The base URI of the service.  * @member {object} [options] Parameters for the service.  * @member {string} [options.baseUri] The base URI of the service.  * @member {object} [options.options] Parameters for the service.  * @member {object} [options.credentials] Credentials for the service.  * @member {string} [options.credentials.token] Credentials for the service.  * @member {string} [options.credentials.token.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [options.credentials.token.accessToken.accessToken] Credentials for the service.  * @member {string} [
   if (data && data.then && isFunction(data.then)) {     return data.then(this.context, this._providerSetLocal)   } else {     return data   } }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.toString.call(obj) === '[object Function]' }  function isFunction(obj) {   return Object.prototype.
 await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger; await writeData     debugger;
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.Xaml; using System.Web.UI.HtmlControls.Xaml.Data; using System.Web.UI.HtmlControls.Xaml.Documents; using System.Web.UI.HtmlControls.Xaml.Input; using System.Web.UI.HtmlControls.Xaml.Media; using System.Web.UI.HtmlControls.Xaml.Navigation; using System.Web.UI.HtmlControls.Xaml.Shapes;  // The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409  namespace Web.UI.WebControls {     /// <summary>     /// An empty page that can be used on its own or navigated to
 import {TypeDecorator, makeParamDecorator, makePropDecorator} from './util/decorators'; import {TypeDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecoratorDecoratorDecorator} from './util/decorators/decorators'; import {TypeDecorator
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid.java.util.common.util.concurrent.Thread
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Range; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('subject', 'text', array(                 'label' => 'subject',                 'required' => false,             ))             ->add('message', 'textarea', array(                 'label' => 'message',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_email';     } } 
/*  * Copyright (c) 2008-2021, Hazelcast, Inc. All Rights Reserved.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.hazelcast.map.impl.operation;  import com.hazelcast.map.impl.MapDataSerializerHook; import com.hazelcast.nio.ObjectDataInput; import com.hazelcast.nio.ObjectDataOutput; import com.hazelcast.nio.serialization.Data; import com.hazelcast.nio.serialization.IdentifiedDataSerializable; import com.hazelcast.nio.serialization.IdentifiedDataSerializerHook; import com.hazelcast.nio.serialization.SerializationService; import com.hazelcast.spi.Operation;  import java.io.IOException; import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.HashMap; import java.util.HashSet; import java.util.Iterator; import java.util.List; import java.util.Map; import java.util.Set; import java.util.concurrent.ConcurrentHashMap; import java.util.concurrent.ConcurrentMap; import java.util.concurrent.atomic.AtomicBoolean;  import static com.hazelcast.nio.serialization.DataSerializerHook.ON_DELETE; import static com.hazelcast.nio.serialization.DataSerializerHook.ON_PUT; import static com.hazelcast.nio.serialization.DataSerializerHook.ON_REMOVE; import static com.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
module.exports = EventEmitter.extend({   constructor: function(options) {     EventEmitter.call(this);     this.options = options;     this.logger = new Logger(this.options.logger);     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level;     this.logger.level = this.options.logger.level
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr_hash_map.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_ptr.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 export default new DeviceCard({   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card: {     c: c,     styles: styles,   },   card:
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy(); 		this._destroy();
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.ComponentModel; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.Core; using System.Data.Entity.Core.Metadata; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using Microsoft.EntityFrameworkCore; using Microsoft.EntityFrameworkCore.Infrastructure; using Microsoft.EntityFrameworkCore.Metadata; using Microsoft.EntityFrameworkCore.Storage; using Microsoft.EntityFrameworkCore.Storage.Internal; using Microsoft.EntityFrameworkCore.Storage.Internal.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.Metadata; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.QueryableExtensions.QueryableExtensions; using Microsoft.EntityFrameworkCore.Storage.QueryableExtensions.Queryable
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.ignite.testframework.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactoryService; import org.apache.hyracks.algebricks.runtime.base
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.security;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.whenZeroInteractions; import static org.mockito.Mockito.whenZeroInteractions; import static org.mockito.Mockito.whenZeroInteractions; import static org.mockito.Mockito.whenZeroInteractions; import static org.mockito.Mockito.whenZeroInteractions; import static org.mockito.Mockito.whenZeroInteractions; import static org.mockito.Mockito.whenZeroInteractions; import static org.mockito.Mockito.whenZero
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
;     var model = model.load( module, {     name: 'driver' });  module.exports = {     name: 'driver',     init: function() {         logger = model.load( module, {             name: 'logger'         });         context = model.load( module, {             name: 'context'         });         driver = model.load( module, {             name: 'driver'         });         return {             logger: logger,             context: context,             driver: driver         };     } }; 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_text';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
 {   if (typeof PARAMS_END_PATTERN === 'string') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof PARAMS_END_PATTERN === 'function') {     return PARAMS_END_PATTERN;   } else if (typeof
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.asterix.runtime.evaluators.base.AbstractEvaluator; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluator; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactory; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactoryProvider; import org.apache.asterix.runtime.evaluators.base.IEvaluatorContext; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactory; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactoryProvider; import org.apache.asterix.runtime.evaluators.common.AbstractScalarEvaluator; import org.apache.asterix.runtime.evaluators.common.AbstractScalarEvaluatorFactory; import org.apache.asterix.runtime.evaluators.common.AbstractScalarEvaluatorFactoryProvider; import org.apache.asterix.runtime
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } }   } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 (function() {     'use strict';      angular         .module('app')         .directive('element', element);      element.$inject = ['$timeout'];      function element($timeout) {         var directive = {             restrict: 'A',             link: link         };          return directive;          function link(scope, element, attrs) {             scope.$on('$destroy', function() {                 element.remove();             });         }     } })(); 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
 function drawCharts () {         d3Selection.selectAll('.grouped-bar').remove(); d3Selection.selectAll('.grouped-bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').selectAll('.bar').remove(); d3Selection.selectAll('.bar').select
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/string_util.h" #include "base/strings/utf_string_conversions.h" #include "base/values.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_service_observer.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_delegate.h" #include "content/public/browser/web_ui_data_source_factory.h" #include "content/
{     name: arguments[i],     type: arguments[i],     dataType: arguments[i],     data: arguments[i]   }); }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {     return Session.get("height");   } });  Meteor.methods({   height: function() {    
 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.toJavaScript = function(context, tableid, defcols) { 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.toJavaScript = function(context, tableid, defcols) { 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.toJavaScript = function(context, tableid, defcols) { 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, table
(options = {}) {   const res = id => this.resolve(id)   function transformer(tree) {   return res(tree)   }   function transformer2(tree) {   return res(tree)   }   function transformer3(tree) {   return res(tree)   }   function transformer4(tree) {   return res(tree)   }   function transformer5(tree) {   return res(tree)   }   function transformer6(tree) {   return res(tree)   }   function transformer7(tree) {   return res(tree)   }   function transformer8(tree) {   return res(tree)   }   function transformer9(tree) {   return res(tree)   }   function transformer10(tree) {   return res(tree)   }   function transformer11(tree) {   return res(tree)   }   function transformer12(tree) {   return res(tree)   }   function transformer13(tree) {   return res(tree)   }   function transformer14(tree) {   return res(tree)   }   function transformer15(tree) {   return res(tree)   }   function transformer16(tree) {   return res(tree)   }   function transformer17(tree) {   return res(tree)   }   function transformer18(tree) {   return res(tree)   }   function transformer19(tree) {   return res(tree)   }   function transformer20(tree) {   return res(tree)   }   function transformer21(tree) {   return res(tree)   }   function transformer22(tree) {   return res(tree)   }   function transformer23(tree) {   return res(tree)   }   function transformer24(tree) {   return res(tree)   }   function transformer25(tree) {   return res(tree)   }   function transformer26(tree) {   return res(tree)   }   function transformer27(tree) {   return res(tree)   }   function transformer28(tree) {   return res(tree)   }   function transformer29(tree) {   return res(tree)   }   function transformer30(tree) {   return res(tree)   }   function transformer31(tree) {   return res(tree)
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.primitives.Ints; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
     $.when.apply(promises, promises).done(function () {         $.when.apply(promises, promises).done(function () {             $.when.apply(promises, promises).done(function () {                 $.when.apply(promises, promises).done(function () {                     $.when.apply(promises, promises).done(function () {                         $.when.apply(promises, promises).done(function () {                             $.when.apply(promises, promises).done(function () {                                 $.when.apply(promises, promises).done(function () {                                     $.when.apply(promises, promises).done(function () {                                         $.when.apply(promises, promises).done(function () {                                             $.when.apply(promises, promises).done(function () {                                                 $.when.apply(promises, promises).done(function () {                                                     $.when.apply(promises, promises).done(function () {                                                         $.when.apply(promises, promises).done(function () {                                                             $.when.apply(promises, promises).done(function () {                                                                 $.when.apply(promises, promises).done(function () {                                                                     $.when.apply(promises, promises).done(function () {                                                                         $.when.apply(promises, promises).done(function () {                                                                             $.when.apply(promises, promises).done(function () {                                                                                 $.when.apply(promises, promises).done(function () {                                                                                     $.when.apply(promises, promises).done(function () {                                                                                         $.when.apply(promises, promises).done(function () {                                                                                             $.when.apply(promises, promises).done(function () {                                                                                                 $.when.apply(promises, promises).done(function () {                                                                                                     $.when.apply(promises, promises).done(function () {                                                                                                         $.when.apply(promises, promises).done(function () {                                                                                                             $.when.apply(promises, promises).done(function () {                                                                                                 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
/*  * Copyright (c) Facebook, Inc. and its affiliates.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.facebook.buck.jvm.java;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertTrue;  import com.facebook.buck.core.model.BuildTarget; import com.facebook.buck.core.model.BuildTargetFactory; import com.facebook.buck.core.model.Flavor; import com.facebook.buck.core.model.ImmutableFlavor; import com.facebook.buck.core.model.impl.BuildTargetFactoryImpl; import com.facebook.buck.core.rules.BuildRule; import com.facebook.buck.core.rules.BuildRuleParams; import com.facebook.buck.core.rules.BuildRuleResolver; import com.facebook.buck.core.sourcepath.SourcePath; import com.facebook.buck.core.sourcepath.resolver.SourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.DefaultSourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.FakeSourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.TestSourcePathResolver; import com.facebook.buck.core.sourcepath.resolver.impl.impl.FakeSourcePathResolverFactory; import com.facebook.buck.core.sourcepath.resolver.impl.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
[r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/', r.lastIndexOf('/
  for ( i = 0; i < props.length; i++ ) {       prop = props[i];       if ( i in props ) {       prop = props[i];       if ( i in props ) {       prop = props[i];       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];       }       if ( i in props ) {       prop = props[i];
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.Hyrack
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootNamespace = 'gdata';     protected $_rootElement = 'feed';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.FutureCallback; import org.apache.druid.
  /*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.storm.topology;  import java.util.ArrayList; import java.util.HashMap; import java.util.HashSet; import java.util.List; import java.util.Map; import java.util.Map.Entry; import java.util.Set; import java.util.TreeMap; import java.util.TreeMap.Entry; import java.util.TreeSet; import java.util.concurrent.ConcurrentHashMap; import java.util.concurrent.ConcurrentMap; import java.util.concurrent.TimeUnit; import java.util.concurrent.atomic.AtomicBoolean; import java.util.concurrent.atomic.AtomicInteger; import java.util.concurrent.atomic.AtomicLong; import java.util.concurrent.atomic.AtomicReference; import java.util.concurrent.atomic.AtomicReferenceArray; import java.util.concurrent.atomic.AtomicBoolean; import java.util.concurrent.atomic.AtomicBooleanArray; import java.util.concurrent.atomic.AtomicInteger; import java.util.concurrent.atomic.AtomicReferenceArray; import java.util.concurrent.atomic.AtomicBooleanArray; import java.util.concurrent.atomic.AtomicLong; import java.util.concurrent.atomic
   this.ns_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null   this.handles_ = null
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * @see Zend_Gdata_Extension_Feed  */ require_once 'Zend/Gdata/Extension/Feed.php';  /**  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Extension_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Extension_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
}).catch(function(responses3){ console.log(responses3); });                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
  describe('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;     before(function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. longrawProcedureBind_inout.js', function() {   this.timeout(100000);   var connection = null;    });     it('133. long
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
   = require("./query-mask") , VariableMask = require("./variable-mask") , ObjectMask = require("./object-mask") , QueryMask = require("./query-mask") , VariablesMask = require("./variables-mask") , ObjectMask = require("./object-mask") , MaskUpdater = require("./mask-updater") , VariableUpdater = require("./variable-updater") , ObjectUpdater = require("./object-updater") , QueryUpdater = require("./query-updater") , VariablesUpdater = require("./variables-updater") , ObjectUpdater = require("./object-updater") , MaskUpdater = require("./mask-updater") , VariableUpdater = require("./variable-updater") , ObjectUpdater = require("./object-updater") , QueryUpdater = require("./query-updater") , VariablesUpdater = require("./variables-updater") , ObjectUpdater = require("./object-updater") , MaskUpdater = require("./mask-updater") , VariableUpdater = require("./variable-updater") , ObjectUpdater = require("./object-updater") , QueryUpdater = require("./query-updater") , VariablesUpdater = require("./variables-updater") , ObjectUpdater = require("./object-updater") , MaskUpdater = require("./mask-updater") , VariableUpdater = require("./variable-updater") , ObjectUpdater = require("./object-updater") , QueryUpdater = require("./query-updater") , VariablesUpdater = require("./variables-updater") , ObjectUpdater = require("./object-updater") , MaskUpdater = require("./mask-updater") , VariableUpdater = require("./variable-updater") , ObjectUpdater = require("./object-updater") , QueryUpdater = require("./query-updater") , VariablesUpdater = require("./variables-updater") , ObjectUpdater = require("./object-updater") , MaskUpdater = require("./mask-updater") , VariableUpdater = require("./variable-updater") , ObjectUpdater = require("./object-updater") , QueryUpdater = require("
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
     }      this.updateDialInNumber(matchedPhoneNumber.phoneNumber);      this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSaveAsDefault = false;     this._showSave
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('subject', 'text', array(                 'label' => 'subject',                 'required' => false,             ))             ->add('message', 'textarea', array(                 'label' => 'message',                 'required' => false,             ))         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache
const initialValue = initialValue; const initialValue2 = initialValue; const initialValue3 = initialValue; const initialValue4 = initialValue; const initialValue5 = initialValue; const initialValue6 = initialValue; const initialValue7 = initialValue; const initialValue8 = initialValue; const initialValue9 = initialValue; const initialValue10 = initialValue; const initialValue11 = initialValue; const initialValue12 = initialValue; const initialValue13 = initialValue; const initialValue14 = initialValue; const initialValue15 = initialValue; const initialValue16 = initialValue; const initialValue17 = initialValue; const initialValue18 = initialValue; const initialValue19 = initialValue; const initialValue20 = initialValue; const initialValue21 = initialValue; const initialValue22 = initialValue; const initialValue23 = initialValue; const initialValue24 = initialValue; const initialValue25 = initialValue; const initialValue26 = initialValue; const initialValue27 = initialValue; const initialValue28 = initialValue; const initialValue29 = initialValue; const initialValue30 = initialValue; const initialValue31 = initialValue; const initialValue32 = initialValue; const initialValue33 = initialValue; const initialValue34 = initialValue; const initialValue35 = initialValue; const initialValue36 = initialValue; const initialValue37 = initialValue; const initialValue38 = initialValue; const initialValue39 = initialValue; const initialValue40 = initialValue; const initialValue41 = initialValue; const initialValue42 = initialValue; const initialValue43 = initialValue; const initialValue44 = initialValue; const initialValue45 = initialValue; const initialValue46 = initialValue; const initialValue47 = initialValue; const initialValue48 = initialValue; const initialValue49 = initialValue; const initialValue50 = initialValue; const initialValue51 = initialValue; const initialValue52 = initialValue; const initialValue53 = initialValue; const initialValue54 = initialValue; const initialValue55 = initialValue; const initialValue56 = initialValue; const initialValue57 = initialValue; const initialValue58 = initialValue; const initialValue59 = initialValue; const initialValue60 = initialValue; const initialValue61 = initialValue; const initialValue62 = initialValue; const initialValue63 = initialValue; const initialValue64 = initialValue; const initialValue65 = initialValue; const initialValue66 = initialValue; const initialValue67 = initialValue; const initialValue68 = initialValue; const initialValue69 = initialValue; const initialValue70 = initialValue; const initialValue71 = initialValue; const initialValue72 = initialValue; const initialValue73 = initialValue; const
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.pulsar.client.impl;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.List;  import org.apache.pulsar.client.api.PulsarClient; import org.apache.pulsar.client.api.PulsarClientException; import org.apache.pulsar.client.api.PulsarClientExceptionFactory; import org.apache.pulsar.client.api.PulsarClientExceptionFactoryFactory; import org.apache.pulsar.client.api.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api.PulsarClientExceptionFactoryFactoryFactory; import org.

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
 }     case 'PANEL_DELETE': const { payload } = action  }     case 'PANEL_UPDATE': const { payload } = action  }     case 'PANEL_RESIZE': const { payload } = action  }     case 'PANEL_RESIZE_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RESIZE_PANEL_PANEL': const { payload } = action  }     case 'PANEL_RE
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view_delegate.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "
(function(ignoreTime) {     var _this = this;     var _ref;     var _ref1;     var _ref2;     var _ref3;     var _ref4;     var _ref5;     var _ref6;     var _ref7;     var _ref8;     var _ref9;     var _ref10;     var _ref11;     var _ref12;     var _ref13;     var _ref14;     var _ref15;     var _ref16;     var _ref17;     var _ref18;     var _ref19;     var _ref20;     var _ref21;     var _ref22;     var _ref23;     var _ref24;     var _ref25;     var _ref26;     var _ref27;     var _ref28;     var _ref29;     var _ref30;     var _ref31;     var _ref32;     var _ref33;     var _ref34;     var _ref35;     var _ref36;     var _ref37;     var _ref38;     var _ref39;     var _ref40;     var _ref41;     var _ref42;     var _ref43;     var _ref44;     var _ref45;     var _ref46;     var _ref47;     var _ref48;     var _ref49;     var _ref50;     var _ref51;     var _ref52;     var _ref53;     var _ref54;     var _ref55;     var _ref56;     var _ref57;     var _ref58;     var _ref59;     var _ref60;     var _ref61;     var _ref62;     var _ref63;     var _ref64;     var _ref65;     var _ref66;     var _ref67;     var _ref68;     var _ref69;     var _ref70
 }  this.renderBuffer = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes(); }   this.renderBuffer
if (typeof module !== 'undefined' && module.exports) {     module.exports = Concur; } else if (typeof define === 'function' && define.amd) {     define(function () {         return Concur;     }); } else {     var Concur = require('Concur')   , object = require('isomorph/object')   , validators = require('isomorph/validators'); }  module.exports = Concur; module.exports.object = object; module.exports.validators = validators; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.hamcrest.Matchers.equalTo; import static org.hamcrest.Matchers.is; import static org.hamcrest.Matchers.notNullValue; import static org.hamcrest.Matchers.nullValue; import static org.junit.Assert.assertThat; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito
 };     WhileStatement.prototype,setCondition = function(condition) {         this._condition = condition; };  };     WhileStatement.prototype,getBody = function() {         return this._body; };  };     WhileStatement.prototype,setBody = function(body) {         this._body = body; };  };     WhileStatement.prototype,getIfStatement = function() {         return this._ifStatement; };  };     WhileStatement.prototype,setIfStatement = function(ifStatement) {         this._ifStatement = ifStatement; };  };     WhileStatement.prototype,getElseStatement = function() {         return this._elseStatement; };  };     WhileStatement.prototype,setElseStatement = function(elseStatement) {         this._elseStatement = elseStatement; };  };     WhileStatement.prototype,getThenStatement = function() {         return this._thenStatement; };  };     WhileStatement.prototype,setThenStatement = function(thenStatement) {         this._thenStatement = thenStatement; };  };     WhileStatement.prototype,getElseStatement = function() {         return this._elseStatement; };  };     WhileStatement.prototype,setElseStatement = function(elseStatement) {         this._elseStatement = elseStatement; };  };     WhileStatement.prototype,getBody = function() {         return this._body; };  };     WhileStatement.prototype,setBody = function(body) {         this._body = body; };  };     WhileStatement.prototype,getIfStatement = function() {         return this._ifStatement; };  };     WhileStatement.prototype,setIfStatement = function(ifStatement) {         this._ifStatement = ifStatement; };  };     WhileStatement.prototype,getElseStatement = function() {         return this._elseStatement; };  };     WhileStatement.prototype,setElseStatement = function(elseStatement) {         this._elseStatement = elseStatement; };  };     WhileStatement.prototype,getThenStatement = function() {         return this._thenStatement; };  };     WhileStatement.prototype,setThenStatement = function(thenStatement) {         this._thenStatement = thenStatement; };  };
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.regionserver;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue;  import java.io.IOException; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.List;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.HConstants; import org.apache.hadoop.hbase.HRegionInfo; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.testclassification.SmallTests; import org.apache.hadoop.hbase.testclassification.MediumTests; import org.apache.hadoop.hbase.util.Bytes; import org.apache.hadoop.hbase.util.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; 
.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $.extend( hx , { KeyMap : KeyMap }); }     $
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronization
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.GridCacheAbstractTest; import org.apache.ignite.internal.processors.cache.GridCacheSharedContext; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommon
     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement("img");     this._createElement
 = constructTree(mappedLabel, mappedChildren);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.set(stringify(path), mappedTree);       debugger       pathMap.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
         var b = 0         var c = 0         var d = 0         var e = 0         var f = 0         var g = 0         var h = 0         var i = 0         var j = 0         var k = 0         var l = 0         var m = 0         var n = 0         var o = 0         var p = 0         var q = 0         var r = 0         var s = 0         var t = 0         var u = 0         var v = 0         var w = 0         var x = 0         var y = 0         var z = 0         var w1 = 0         var w2 = 0         var w3 = 0         var w4 = 0         var w5 = 0         var w6 = 0         var w7 = 0         var w8 = 0         var w9 = 0         var w10 = 0         var w11 = 0         var w12 = 0         var w13 = 0         var w14 = 0         var w15 = 0         var w16 = 0         var w17 = 0         var w18 = 0         var w19 = 0         var w20 = 0         var w21 = 0         var w22 = 0         var w23 = 0         var w24 = 0         var w25 = 0         var w26 = 0         var w27 = 0         var w28 = 0         var w29 = 0         var w30 = 0         var w31 = 0         var w32 = 0         var w33 = 0         var w34 = 0         var w35 = 0         var w36 = 0         var w37 = 0         var w38 = 0         var w39 = 0         var w40 = 0         var w41 = 0         var w42 = 0         var w43 = 0         var w44 = 0         var w45 = 0         var w46 = 0         var w47 = 0         var w48 = 0         var w49 = 0         var w50 = 0         var w51 = 0         var w52 = 0         var w53 = 0         var w54 = 0         var w55 = 0         var w56 = 0         var w57 = 0         var w58 = 0         var w59 = 0         var w60 = 0         var w61 = 0         var w62 = 0         var w63 = 0         var w64 = 0         var
    this.emoticons[i].text = text;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;    
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.regionserver;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertTrue;  import java.io.IOException; import java.util.ArrayList; import java.util.List;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.testclassification.SmallTests; import org.apache.hadoop.hbase.util.Bytes; import org.junit.After; import org.junit.Before; import org.junit.ClassRule; import org.junit.Test; import org.junit.experimental.categories.Category; import org.junit.rules.ExpectedException; import org.junit.runner.RunWith; import org.junit.runners.JUnit4;  @RunWith(JUnit4.class) @Category({SmallTests.class}) public class TestRegionServer {    @ClassRule   public static final HBaseTestingUtility TEST_UTIL = new HBaseTestingUtility();    @Before  
onBroadcast (callback
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Form  * @subpackage UnitTests  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  require_once 'Zend/Form/Element/Text.php';  /**  * @category   Zend  * @package    Zend_Form  * @subpackage UnitTests  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @group      Zend_Form  * @group      Zend_Form_Element  */ class Zend_Form_Element_TextTest extends PHPUnit_Framework_TestCase {     public function setUp()     {         $this->element = new Zend_Form_Element_Text('foo');     }      public function tearDown()     {         unset($this->element);     }      public function testGetText()     {         $this->assertEquals('foo', $this->element->getText());     }      public function testSetText()     {         $this->element->setText('foo');         $this->assertEquals('foo', $this->element->getText());     }      public function testSetValue()     {         $this->element->setValue('
 test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();  test();
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.Iterables; import com.google.common.collect.Maps; import com.google.common.collect.SortedMap; import com.google.common.collect.SortedSet; import com.google.common.collect.SortedSetMultimap; import com.google.common.collect.Multimap; import com.google.common.collect.TreeMultimap; import com.google.common.collect.TreeSetMultimap; import java.util.ArrayList; import java.util.List; import java
 return compareStats('size', first, second, firstName, secondName) * descending;       break; case 5: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 6: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 7: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 8: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 9: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 10: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 11: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 12: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 13: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 14: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 15: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 16: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 17: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 18: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 19: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 20: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 21: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 22: return compareStats('size', first, second, firstName, secondName) * descending;       break; case 23: return compareStats('size', first, second, firstName, secondName) *
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
.fail( function() {                 alert( WPAuth0EmailVerification.e_msg );             } );  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').validate();     }); });  $(document).ready( function() {     $('#email-verification-form').submit( function() {         $('#email-verification-form').
   var server = http.createServer(function (req, res) {     res.writeHead(200, {       'Content-Type': 'text/html'     });     res.write(req.url);     res.end();   });    server.on('error', function (err) {     console.log(err);   });    server.on('listening', function () {     console.log('Listening on port ' + server.address().port);   });    server.listen(server.address().port, function () {     console.log('Listening on port ' + server.address().port);   });    server.on('error', function (err) {     console.log('Listening on port ' + server.address().port);   });    server.on('close', function () {     console.log('Listening on port ' + server.address().port);   });    server.on('close', function () {     console.log('Listening on port ' + server.address().port);   });    server.on('error', function (err) {     console.log('Listening on port ' + server.address().port);   });    server.on('close', function () {     console.log('Listening on port ' + server.address().port);   });    server.on('error', function (err) {     console.log('Listening on port ' + server.address().port);   });    server.on('close', function () {     console.log('Listening on port ' + server.address().port);   });    server.on('error', function (err) {     console.log('Listening on port ' + server.address().port);   });    server.on('close', function () {     console.log('Listening on port ' + server.address().port);   });    server.on('error', function (err) {     console.log('Listening on port ' + server.address().port);   });    server.on('close', function () {     console.log('Listening on port ' + server.address
case 'ms_sqlitefilename':                 configuration.data.filename = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];             case 'website_auth_signing_
 module.exports = {   resolve: resolve,   dirname: dirname,   read: read,   write: write,   exists: exists,   isAbs: isAbs,   JSONChain: JSONChain } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
    case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"):     case("top"):     case("bottom"):     case("left"):     case("right"): 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Pattern; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony
 import Button from 'ui/components/buttons/flavors/button/index.react'; import ButtonList from 'ui/components/buttons/flavors/button/index.react'; import PickList from 'ui/components/picklists/index.react'; import { prefix as pf } from 'app_modules/ui/util/component'; import { prefix as pf2 } from 'app_modules/ui/util/component'; import { prefix as pf3 } from 'app_modules/ui/util/component'; import { prefix as pf4 } from 'app_modules/ui/util/component'; import { prefix as pf5 } from 'app_modules/ui/util/component'; import { prefix as pf6 } from 'app_modules/ui/util/component'; import { prefix as pf7 } from 'app_modules/ui/util/component'; import { prefix as pf8 } from 'app_modules/ui/util/component'; import { prefix as pf9 } from 'app_modules/ui/util/component'; import { prefix as pf10 } from 'app_modules/ui/util/component'; import { prefix as pf11 } from 'app_modules/ui/util/component'; import { prefix as pf12 } from 'app_modules/ui/util/component'; import { prefix as pf13 } from 'app_modules/ui/util/component'; import { prefix as pf14 } from 'app_modules/ui/util/component'; import { prefix as pf15 } from 'app_modules/ui/util/component'; import { prefix as pf16 } from 'app_modules/ui/util/component'; import { prefix as pf17 } from 'app_modules/ui/util/component'; import { prefix as pf18 } from 'app_modules/ui/util/component'; import { prefix as pf19 } from 'app_modules/ui/util/component'; import { prefix as pf20 } from 'app_modules/ui/util/component'; import { prefix as pf21 } from 'app_modules/ui/util/component'; import { prefix as pf22 } from 'app_modules/ui/util/component'; import { prefix as pf23 } from 'app_
             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {             return MM.click
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Text;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to the next set of results.</param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "Next
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.asterix.runtime.evaluators.base.AbstractScalarFunctionDynamicDescriptor; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluator; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactory; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.core.algebra.functions.FunctionIdentifier; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IS
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.completeAction(action); }, function () { this.complete
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_ptr_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_handler.h" #include "content/public/browser/web_ui_util.h" #include "content/
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new Date()) === "0":           case JSON3.stringify(new
 (function() {     'use strict';      if (typeof define === 'function' && define.amd) {         // AMD. Register as an anonymous module.         define(['jquery'], function($) {             return $;         });     } else if (typeof exports === 'object') {         // Node. Does not work with strict CommonJS, but         // only CommonJS-like environments that support module.exports,         // like Node.         module.exports = $;     } else {         // Browser globals         $ = window.jQuery;     } }).call(this); 
  case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phonenumber_countrycode':   case 'phon
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_text_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Configuration; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.Core; using System.Data.Entity.Core.Metadata; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts.DataAnnotations; using System.Web.UI.HtmlControls.WebParts.DataAnnotations.Schema; using System.Web.UI.HtmlControls.WebParts.Controls; using System.Web.UI.HtmlControls.WebParts.Controls.DataAnnotations; using System.Web.UI.HtmlControls.WebParts.Controls.DataAnnotations.Schema; using System.Web.UI.HtmlControls.WebParts.Controls.DataAnnotations; using System.Web.UI.HtmlControls.WebParts.Controls.DataAnnotations.ViewModels; using System.Web.UI.HtmlControls.WebParts.Controls.DataAnnotations; using System.Web.UI.HtmlControls.WebParts
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class UserType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('username')             ->add('password')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\User'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_user';     } } 
