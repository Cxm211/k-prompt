Namespace(log_name='./RQ5/bugsinpy_500_2/codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='RQ5/bugsinpy_500_2/codet5p_220m', data_dir='./data/RQ5/bugsinpy_500_2', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=8, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class TestGetItem:      def test_dti_business_getitem(self):          rng = pd.bdate_range(START, END)          smaller = rng[:5]         exp = DatetimeIndex(rng.view(np.ndarray)[:5])          tm.assert_index_equal(smaller, exp)          assert smaller.freq == rng.freq', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class TestGetItem:      def test_dti_business_getitem(self):          rng = pd.bdate_range(START, END)          smaller = rng[:5]         exp = DatetimeIndex(rng.view(np.ndarray)[:5], freq="B")          tm.assert_index_equal(smaller, exp)         assert smaller.freq == exp.freq          assert smaller.freq == rng.freq'}]
***** Running training *****
  Num examples = 500
  Batch size = 8
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 64
  train_loss = 64.1952
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 74.74 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.74
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 127
  train_loss = 37.8999
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 75.35 	 Previous best codebleu 74.74
  ********************
 Achieve Best bleu:75.35
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 190
  train_loss = 25.9488
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 77.18 	 Previous best codebleu 75.35
  ********************
 Achieve Best bleu:77.18
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 253
  train_loss = 18.5558
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 76.94 	 Previous best codebleu 77.18
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 316
  train_loss = 13.512
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 76.94 	 Previous best codebleu 77.18
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 379
  train_loss = 10.2082
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 77.69 	 Previous best codebleu 77.18
  ********************
 Achieve Best bleu:77.69
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 442
  train_loss = 7.8089
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 78.18 	 Previous best codebleu 77.69
  ********************
 Achieve Best bleu:78.18
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 505
  train_loss = 6.0033
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 79.21 	 Previous best codebleu 78.18
  ********************
 Achieve Best bleu:79.21
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 568
  train_loss = 4.8473
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 79.01 	 Previous best codebleu 79.21
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 631
  train_loss = 4.3822
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_500_2/validation.jsonl
  codebleu-4 = 78.31 	 Previous best codebleu 79.21
  ********************
reload model from RQ5/bugsinpy_500_2/codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/RQ5/bugsinpy_500_2/test.jsonl
  codebleu = 78.85 
  Total = 117 
  Exact Fixed = 13 
[9, 13, 20, 33, 35, 38, 42, 54, 76, 82, 89, 90, 111]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 117 
  Exact Fixed = 13 
[9, 13, 20, 33, 35, 38, 42, 54, 76, 82, 89, 90, 111]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 78.85 
[0.6939112308588368, 0.676525822803221, 0.8096114788906146, 0.8962096929024133, 0.8782734899756608, 0.7420541780659815, 0.8611544762176193, 0.8754861943073293, 1.0, 0.8736270526063763, 0.8773104352365284, 0.8674433454759134, 1.0, 0.4740532618616287, 0.8981805222922898, 0.8631855387221548, 0.8573638305228279, 0.9474759345795825, 0.782053171927164, 1.0, 0.8385834949297515, 0.8884573785188872, 0.6883720951974961, 0.884250182279102, 0.7884485258508804, 0.7715012035371895, 0.6623090658678863, 0.7318286091585733, 0.8107806147142924, 0.9063467386633746, 0.8231560738418289, 0.8195330229945343, 1.0, 0.8300638244826566, 0.949504537888815, 0.767723111687518, 0.610067068626702, 1.0, 0.8703246706459902, 0.8434652034268404, 0.8358395384567638, 1.0, 0.7896354401872717, 0.8789801838086921, 0.9178662308912058, 0.6441425627537012, 0.6728230800934798, 0.8871978499693505, 0.6994074932894399, 0.6374410208386678, 0.8352894783834772, 0.7042953619649426, 0.7953587603777192, 1.0, 0.6508693332230462, 0.5037077119806818, 0.8475332565755729, 0.8346354401872718, 0.47166395418323315, 0.7507982187182929, 0.8077895563342797, 0.6530224530296921, 0.7639654153934541, 0.9411542454583528, 0.6853803599169206, 0.9666856331752072, 0.6601281703247908, 0.9056583090096291, 0.8971695160234401, 0.8359779415288562, 0.8808919461147899, 0.6356257812621184, 0.8853004704636518, 0.8814955038434287, 0.3031200238102166, 1.0, 0.8807926879441415, 0.6039839094628371, 0.49150427670545643, 0.8856389378075658, 0.7243849758480987, 1.0, 0.7714650156104186, 0.5911195501972704, 0.7332519354895861, 0.6913513004703498, 0.583933634540305, 0.7449734989717058, 0.9399649879642329, 1.0, 0.7531797171538064, 0.788050295413492, 0.46694054865928003, 0.7205089220380079, 0.8234479137638847, 0.9472873156881443, 0.8548397899287874, 0.6413921957402942, 0.7684009548948627, 0.9309470682699423, 0.8362747318435784, 0.4545507520171642, 0.8594942629236695, 0.9204219587780458, 0.7164493834577911, 0.5571314709024371, 0.631282340524122, 0.7225931341121177, 0.5117566728908322, 0.6086253391771707, 1.0, 0.7443181170763433, 0.9142445273649933, 0.7768711691119308, 0.7733604490538593, 0.7093853536262804, 0.7572098935987482]
Finish training and take 17m
