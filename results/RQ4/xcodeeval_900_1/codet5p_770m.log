Namespace(log_name='./RQ5/xcodeeval_900_1/codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='c', output_dir='RQ5/xcodeeval_900_1/codet5p_770m', data_dir='./data/RQ5/xcodeeval_900_1', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include <stdio.h>  #include <string.h>  #include <stdlib.h>    int max(int a, int b) { return a > b ? a : b; }    int main()  {       int x, y, z, i, j, k, a, b, c, n, m, t, w, h;       scanf("%d",&t);       while(t--)       {             c = 0;                 scanf("%d %d", &w, &h);             for(x = 0; x < 4; x++)             {                   scanf("%d", &k);                   for(y = 0; y < k; y++)                   {                        scanf("%d", &a);                        if(!y) b = a;                        else if(y == k - 1) b = a - b;                        }                                      if(x < 2) c = max(c, b * h);                   else c = max(c, b * w);             }                          printf("%d\\n", c);       }       return 0;  }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include <stdio.h>  #include <string.h>  #include <stdlib.h>    long long max(long long a, long long b) { return a > b ? a : b; }    int main()  {       int x, y, z, i, j, k, n, m, t;       long long a, b, c, w, h;              scanf("%d",&t);       while(t--)       {             c = 0;                 scanf("%lld %lld", &w, &h);             for(x = 0; x < 4; x++)             {                   scanf("%d", &k);                   for(y = 0; y < k; y++)                   {                        scanf("%lld", &a);                        if(!y) b = a;                        else if(y == k - 1) b = a - b;                        }                                      if(x < 2) c = max(c, b * h);                   else c = max(c, b * w);             }                          printf("%lld\\n", c);       }       return 0;  }'}]
***** Running training *****
  Num examples = 900
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 226
  train_loss = 63.8836
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/xcodeeval_900_1/validation.jsonl
  codebleu-4 = 74.18 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.18
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 451
  train_loss = 51.7911
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/xcodeeval_900_1/validation.jsonl
  codebleu-4 = 74.83 	 Previous best codebleu 74.18
  ********************
 Achieve Best bleu:74.83
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 676
  train_loss = 37.8764
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/xcodeeval_900_1/validation.jsonl
  codebleu-4 = 74.75 	 Previous best codebleu 74.83
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 901
  train_loss = 26.7462
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/xcodeeval_900_1/validation.jsonl
  codebleu-4 = 74.1 	 Previous best codebleu 74.83
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1126
  train_loss = 19.2209
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/xcodeeval_900_1/validation.jsonl
  codebleu-4 = 74.42 	 Previous best codebleu 74.83
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1351
  train_loss = 12.4838
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/xcodeeval_900_1/validation.jsonl
  codebleu-4 = 74.48 	 Previous best codebleu 74.83
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1576
  train_loss = 8.2161
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/xcodeeval_900_1/validation.jsonl
  codebleu-4 = 74.81 	 Previous best codebleu 74.83
  ********************
early stopping!!!
reload model from RQ5/xcodeeval_900_1/codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/RQ5/xcodeeval_900_1/test.jsonl
  codebleu = 74.85 
  Total = 500 
  Exact Fixed = 11 
[54, 59, 63, 136, 169, 188, 316, 322, 350, 359, 407]
  Syntax Fixed = 1 
[45]
  Cleaned Fixed = 5 
[254, 268, 276, 424, 455]
  ********************
  Total = 500 
  Exact Fixed = 11 
[54, 59, 63, 136, 169, 188, 316, 322, 350, 359, 407]
  Syntax Fixed = 1 
[45]
  Cleaned Fixed = 5 
[254, 268, 276, 424, 455]
  codebleu = 74.85 
[0.6906751815123662, 0.4658094583130275, 0.8702165828687908, 0.9841559872486547, 0.94502845638256, 0.9544741722900356, 0.9334580759528754, 0.2930837534053943, 0.28590084848815933, 0.5812499999999999, 0.33757627523685907, 0.8239908684888106, 0.8840280108223306, 0.9081263598480036, 0.9320028922042589, 0.9904619066549505, 0.8694464017012884, 0.968864963241663, 0.8944958165491306, 0.8960614087063516, 0.8193236358223526, 0.896734987325442, 0.9888412502412365, 0.9310129219080789, 0.4011929009233417, 0.9657582590366391, 0.9900076373246287, 0.7042466967023711, 0.9552731235682033, 0.5800323580497375, 0.9536558559879766, 0.9039048770966918, 0.5821043776456312, 0.7138182723577209, 0.9735441531161189, 0.7480983802318328, 0.7810019348324313, 0.8172796747159843, 0.9462589975455047, 0.03914807619997354, 0.8036605977879999, 0.6439737215147783, 0.7646504374656518, 0.4262386448606621, 0.9744751689257993, 0.9673001684656128, 0.9722452161669002, 0.9620084641589606, 0.7693582389764291, 0.8458233745010357, 0.7860054491592668, 0.6932485940047782, 0.4096453519493349, 1.0, 0.035053425263124334, 0.2652100539123435, 0.8267820318104704, 0.8817623929694763, 0.9753396087264441, 0.8827108485449091, 0.9837171835242919, 0.9447089104540864, 1.0, 0.347162812695482, 0.9821809817650384, 0.4982318233525185, 0.9829433066762787, 0.934387097307501, 0.9220017344612644, 0.4954735182274035, 0.9006357204322055, 0.3294036734712466, 0.6463782423660047, 0.770385221463259, 0.4284201796189373, 0.4080703027889234, 0.6666962650203826, 0.9421953806476688, 0.37613929647805266, 0.8612986647888846, 0.9564084233825603, 0.9738014890069033, 0.751057511765648, 0.9809329721714535, 0.8856519382976222, 0.9295279223019721, 0.8859407157558806, 0.5559256974856127, 0.4443730302862996, 0.7075727841380755, 0.9168021557818813, 0.03281115469695418, 0.9106033686427741, 0.3532450248136815, 0.8375795025499561, 0.49643876062226794, 0.4420093605524046, 0.522003190576563, 0.9659330238290955, 0.48795243922324283, 0.8668858102395753, 0.8884437011415969, 0.8203495978509039, 0.9193864599685562, 0.8947330957271415, 0.5961510984329409, 0.5003909451993059, 0.7833636144245735, 0.9168539881373812, 0.5609883778095345, 0.8324183912964096, 0.14992380558663324, 0.7914278759686615, 0.9617458190493637, 0.9092903522106406, 0.9268555414820475, 0.2849664187950911, 0.9728421777783798, 0.41093966321126485, 0.7480407185735214, 0.9374523007440652, 0.9566283907946067, 0.4542071293267559, 0.9717916167891165, 0.7684232762284017, 0.7614331493899362, 0.9368495847081082, 0.976435199722677, 0.9656770287836146, 0.33945728624618854, 0.9416744734511042, 0.8165996742814894, 0.9739901642593853, 0.9631318837364407, 0.9678539444631555, 1.0, 0.9798219468937557, 0.36159688659291117, 0.9560322423864296, 0.5739579759923696, 0.9732129467715989, 0.9150833522873736, 0.7332328509698608, 0.47428344360309693, 0.3930721576814807, 0.7651306809345775, 0.27086338909565627, 0.46622047742046324, 0.6877917301640358, 0.8909413311613839, 0.5010923309399078, 0.8267162447332495, 0.5031028066634594, 0.8624100358037953, 0.9435407234863082, 0.4775369858583672, 0.7223951844558967, 0.927982876787582, 0.9602403186628621, 0.9793040838341944, 0.7110307145936695, 0.6567874018519466, 0.7787797669196548, 0.3931548138311015, 0.3821796477166763, 0.408600022348932, 0.9654461577493623, 0.9598135790579945, 0.8591066465296282, 0.782794014430714, 0.8815079864399178, 0.8695346475752126, 0.6052970083217083, 0.9384697992732594, 0.9842551012740206, 0.3706598417143405, 0.8792228737352459, 0.9902911708211317, 0.3723443145512656, 0.7065722131859199, 0.8042710150175236, 0.7692662300405619, 0.5370318012864018, 0.8992562005799716, 0.9931785684115373, 0.9498158986114876, 0.8829948461632615, 0.946689158675359, 0.956301548538977, 0.9172004740789947, 0.981793787791766, 0.8856566772820293, 0.6163950321676452, 0.8662102750218581, 0.9744119964056819, 0.8908110243776604, 0.5492010360849566, 0.41395796030346144, 0.3475222634058708, 0.9346720862236988, 0.9351207548844165, 0.4841195614277229, 0.8396431642664623, 0.9130555191813399, 0.9757745973711676, 0.825040224285887, 0.9080441504666455, 0.7207550074832697, 0.41474785475115006, 0.8712547010751163, 0.43419770508491723, 0.940598945729278, 0.5315782939047562, 0.6895051363145968, 0.7945502142295664, 0.2632327198499751, 0.9589077111122837, 0.7507483205316109, 0.9241259138437765, 0.6386890640788627, 0.9699392701042773, 0.9840867555998587, 0.8198387442649027, 0.3541587417472071, 0.9425018741615083, 0.5313357348360503, 0.6297029892537214, 0.8898733743967635, 0.608736922144949, 0.20906455911542446, 0.7836353492903962, 0.5439420078074064, 0.42497916943931774, 0.9345121855559886, 0.6121051294344302, 0.578502292273178, 0.8207174296242723, 0.5831163274893049, 0.6916629272878606, 0.9533257646563149, 0.774674995957515, 0.6871897384788783, 0.8980438351581705, 0.2854336277000177, 0.5362395483988209, 0.9059801416992133, 0.4920928783231675, 0.9802031318403173, 0.938899487965138, 0.915465568076623, 0.9772597588062424, 0.9789628153220145, 0.4234097157305317, 0.9414326940648792, 0.6922592432779943, 0.9251375134812259, 0.9089815080638761, 0.713357448673426, 0.5177405757219062, 0.939230675483474, 0.38163008179290037, 0.4183274319332942, 0.6486630160206606, 0.8703232021938421, 0.6928192511783815, 0.9798514722492089, 0.38035740917095934, 0.9428491633077438, 0.9179853420852879, 0.9617720754477719, 0.8344780346578161, 0.9239858991360816, 0.9522217025290924, 0.23899729367746342, 0.27949142984930087, 0.9259714761461866, 0.927607533719276, 0.9286279274366336, 0.4155596630877777, 0.7596454142574642, 0.9581930467118089, 0.48228443707897417, 0.9352829048891074, 0.9596628528083495, 0.7253639326470425, 0.9322263155732342, 0.7729580558472922, 0.7110639912399511, 0.9770479547618027, 0.8588461682692663, 0.8984188648676468, 0.9238932796791619, 0.9473491006263874, 0.9747232059340507, 0.9309226445867909, 0.8855808153415308, 0.1650080698375859, 0.9341110513082564, 0.5157443236412498, 0.5750582617526012, 0.7738062382871427, 0.5790261988125887, 0.8710393395645104, 0.849729607166194, 0.8121978155567737, 0.857366514241093, 0.9121176482601447, 0.6283052858442292, 0.8302530908052741, 0.7485066002648197, 0.7565223878095697, 0.8086811749495997, 0.9881263545755623, 0.7698315590133648, 0.9726116006390206, 1.0, 0.5012143983741278, 0.0690457230554116, 0.9664437619662871, 0.9147509231273736, 0.7766555135572375, 1.0, 0.9108828752117699, 0.4140319065100101, 0.41243081325512787, 0.8861971446522757, 0.8154187738366516, 0.7015252862450747, 0.5809523809523809, 0.9707135589044302, 0.9100561171054498, 0.9713651945608406, 0.9047620153320637, 0.9785132817927387, 0.8171220069513339, 0.8376879559724024, 0.97633392937918, 0.19832929234074576, 0.9706304665534506, 0.9887423993227424, 0.7786642529241632, 0.3776268460097124, 0.7425449690488907, 0.3273472980821144, 0.5074834355521683, 0.9743114564383237, 0.7772868173384335, 0.9332689017753089, 0.6688983661442429, 1.0, 0.6516235135434673, 0.904647919869322, 0.8164468849403668, 0.4748750210569687, 0.7852033214625844, 0.9693408639384966, 0.9454632184934535, 0.27459370351787593, 0.9701742405810041, 0.704137667465099, 0.6136084613959742, 0.4349339178998015, 0.8617675603039494, 0.4532830736687707, 0.8674701285162645, 0.06299812421396885, 0.56926112019934, 0.8216531240477458, 0.7852960010452446, 0.9728742867739708, 0.8242816812765809, 0.4966154218075377, 0.8437436803649183, 0.584684973565248, 0.7146371215272531, 0.3028445555596091, 0.9359586398047126, 0.933792626439619, 0.6806042168843407, 0.6567079107412255, 0.8936598047708784, 0.3723588344016272, 0.9731496374915098, 0.7821061097382379, 0.33295797590328613, 0.8415834056802387, 0.8467013377193615, 0.9747348871931607, 0.9016204944152904, 0.3516351378936848, 0.8712420862261012, 0.4198136333318135, 0.9323453252450715, 0.9006848455688443, 0.461329065338275, 0.0864718984572822, 0.9176516704321582, 0.7822614585502394, 0.5135793600096521, 0.3907515160696653, 0.9686198599811506, 0.25436280187207577, 0.8834217951950976, 0.6549057600812135, 0.7706648767181559, 0.907558018935852, 1.0, 0.9778801105259323, 0.5588208186817714, 0.9157728873149173, 0.5452287811589471, 0.30387397503062613, 0.4329395571954886, 0.8961704370267427, 0.9027309916196755, 0.3039533002867709, 0.9714552656085744, 0.9190922894214792, 0.9732456940628658, 0.2579343193335908, 0.9654855521209342, 0.9270078518894367, 0.9128071327141931, 0.9541895950679766, 0.9668495847081082, 0.8019711204854889, 0.7348529689836785, 0.3532301871931892, 0.7153099526991196, 0.5864458370254797, 0.687542465552887, 0.9469672199403614, 0.5587912679655723, 0.05987019451564787, 0.9630540715975315, 0.8807613352737074, 0.9549636479816477, 0.6805160084450854, 0.8230038183585568, 0.8216258903091462, 0.9685698290675941, 0.3478242508876328, 0.9427008679312978, 0.9582017829875438, 0.7141494776867402, 0.38466031842423953, 0.38538461538461544, 0.8055864673667326, 0.5475329309937669, 0.8905074545882428, 0.37333812510379816, 0.9117475844136459, 0.9635847916815603, 0.96804234407929, 0.9306848398433412, 0.36168412495357327, 0.7270998991360063, 0.9296835011666059, 0.5649828078733281, 0.9399257675249202, 0.9205724657465093, 0.8122136254293291, 0.9498733743967636, 0.9714834981320903, 0.7488923610303595, 0.8728375908477501, 0.2973434798199742, 0.9526474078906453, 0.7657538252330831, 0.796166197021682, 0.36085543562898953, 0.587190039861028, 0.8804232565396799, 0.8896531297074333, 0.8960729821237088, 0.6575319963393351, 0.9086210618726622, 0.9078336364448021, 0.8664855589488811, 0.9417139803454657, 0.8757845494319172, 0.7752855690103572, 0.3824686492796324, 0.576816427634421, 0.5608973553048435, 0.5763413299251462, 0.8698366814058456, 0.9508336769881993, 0.9799994844046029, 0.9819992034986089, 0.9758294505908078, 0.9166795416411146, 0.6008587815258186, 0.9064913890104815, 0.9788598843598264, 0.8270021204349962, 0.5852842064212694, 0.9403437700960667, 0.8190595233656908, 0.3559429663587866]
Finish training and take 1h14m
