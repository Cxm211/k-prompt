Namespace(log_name='./RQ5/bugsinpy_700_3/codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='RQ5/bugsinpy_700_3/codet5p_220m', data_dir='./data/RQ5/bugsinpy_700_3', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=8, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'def iter_sequence_infinite(seq):      while True:          for item in seq:              yield item', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': "def iter_sequence_infinite(seq):      while True:          for item in seq:              yield item def is_sequence(seq):     return (getattr(seq, 'use_sequence_api', False)             or set(dir(Sequence())).issubset(set(dir(seq) + ['use_sequence_api'])))"}]
***** Running training *****
  Num examples = 700
  Batch size = 8
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 89
  train_loss = 61.3526
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 76.49 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:76.49
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 177
  train_loss = 38.2441
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 76.59 	 Previous best codebleu 76.49
  ********************
 Achieve Best bleu:76.59
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 265
  train_loss = 26.4815
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 76.84 	 Previous best codebleu 76.59
  ********************
 Achieve Best bleu:76.84
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 353
  train_loss = 18.9688
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 77.37 	 Previous best codebleu 76.84
  ********************
 Achieve Best bleu:77.37
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 441
  train_loss = 13.8907
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 78.78 	 Previous best codebleu 77.37
  ********************
 Achieve Best bleu:78.78
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 529
  train_loss = 10.1852
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 78.62 	 Previous best codebleu 78.78
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 617
  train_loss = 7.8641
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 78.31 	 Previous best codebleu 78.78
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 705
  train_loss = 6.2978
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 79.15 	 Previous best codebleu 78.78
  ********************
 Achieve Best bleu:79.15
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 793
  train_loss = 5.3604
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 79.05 	 Previous best codebleu 79.15
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 881
  train_loss = 4.5596
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_3/validation.jsonl
  codebleu-4 = 79.52 	 Previous best codebleu 79.15
  ********************
 Achieve Best bleu:79.52
  ********************
reload model from RQ5/bugsinpy_700_3/codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/RQ5/bugsinpy_700_3/test.jsonl
  codebleu = 76.61 
  Total = 117 
  Exact Fixed = 12 
[9, 23, 29, 42, 58, 66, 73, 79, 85, 107, 109, 116]
  Syntax Fixed = 1 
[76]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 117 
  Exact Fixed = 12 
[9, 23, 29, 42, 58, 66, 73, 79, 85, 107, 109, 116]
  Syntax Fixed = 1 
[76]
  Cleaned Fixed = 0 
[]
  codebleu = 76.61 
[0.8856389378075658, 0.8736270526063763, 0.7313821813372119, 0.7042953619649426, 0.8814955038434287, 0.9666856331752072, 0.8703246706459902, 0.8631855387221548, 1.0, 0.5037077119806818, 0.8962096929024133, 0.49150427670545643, 0.7398658182365634, 0.8853004704636518, 0.7093853536262804, 0.8808919461147899, 0.9056583090096291, 0.6065019447973778, 0.5803135373863274, 0.9204219587780458, 0.8280405710545513, 0.8923125000332248, 1.0, 0.6883720951974961, 0.9063467386633746, 0.8352894783834772, 0.8022604263379136, 0.8754861943073293, 1.0, 0.7572098935987482, 0.8231560738418289, 0.6601281703247908, 0.6853803599169206, 0.7714650156104186, 0.7884485258508804, 0.7890003035062592, 0.9309470682699423, 0.9411542454583528, 0.7205089220380079, 0.8475864225311183, 0.8884573785188872, 1.0, 0.6493367645086796, 0.9142445273649933, 0.7443181170763433, 0.6146050605164374, 0.583933634540305, 0.39686614731832626, 0.782053171927164, 0.47166395418323315, 0.6508693332230462, 0.7225931341121177, 0.8773104352365284, 0.8434652034268404, 0.6937900700678725, 0.9474759345795825, 0.8077895563342797, 1.0, 0.8573638305228279, 0.5117566728908322, 0.8782734899756608, 0.860117164263619, 0.8234479137638847, 0.14238824731193672, 0.4545507520171642, 0.9399649879642329, 0.9472873156881443, 0.6615425185582952, 0.31378985771560564, 0.8871978499693505, 0.9178662308912058, 0.7449734989717058, 1.0, 0.7681899150975824, 0.8358395384567638, 0.9114766235414771, 0.7531797171538064, 0.3031200238102166, 1.0, 0.6439159728717962, 0.5889485444382039, 0.767723111687518, 0.7318286091585733, 0.8971695160234401, 1.0, 0.5750974938187585, 0.8807926879441415, 0.676525822803221, 0.7507982187182929, 0.6902260446833343, 0.4223937626298856, 0.7896354401872717, 0.8096114788906146, 0.5218510181581382, 0.6939112308588368, 0.6455419079523765, 0.7420541780659815, 0.7360482315899812, 0.6053644918489358, 0.5911195501972704, 0.6530224530296921, 0.7639654153934541, 0.7164493834577911, 0.8548397899287874, 0.6728230800934798, 0.68965030200429, 1.0, 0.7332519354895861, 1.0, 0.884250182279102, 0.8079202508222725, 0.471990985151336, 0.8300638244826566, 0.8789801838086921, 0.7243849758480987, 1.0, 0.6533914430854055]
Finish training and take 18m
