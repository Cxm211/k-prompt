Namespace(log_name='./RQ5/sstubs_500_2/codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='java', output_dir='RQ5/sstubs_500_2/codet5p_770m', data_dir='./data/RQ5/sstubs_500_2', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'query = "start root=node:node_auto_index(name = \'FileRoot\') match root-[:contains*0..]->()-[:leaf]->file<-[:owns]-user return file, user";          gen.get().addSnippet( "query2", createCypherSnippet( query ) );          result = engine.execute( query )                 .toString();          assertTrue( result.contains("File1") );          assertTrue( result.contains("User1") );          assertTrue( result.contains("User2") );', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'query = "start root=node:node_auto_index(name = \'FileRoot\') match root-[:contains*0..]->()-[:leaf]->file<-[:owns]-user return file, user";          gen.get().addSnippet( "query2", createCypherSnippet( query ) );          result = engine.execute( query )                 .dumpToString();          assertTrue( result.contains("File1") );          assertTrue( result.contains("User1") );          assertTrue( result.contains("User2") );'}]
***** Running training *****
  Num examples = 500
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 126
  train_loss = 12.4516
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 93.29 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:93.29
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 251
  train_loss = 3.3933
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 93.66 	 Previous best codebleu 93.29
  ********************
 Achieve Best bleu:93.66
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 376
  train_loss = 1.6249
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 94.15 	 Previous best codebleu 93.66
  ********************
 Achieve Best bleu:94.15
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 501
  train_loss = 1.1456
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 93.61 	 Previous best codebleu 94.15
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 626
  train_loss = 0.6199
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 94.02 	 Previous best codebleu 94.15
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 751
  train_loss = 0.3603
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 94.05 	 Previous best codebleu 94.15
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 876
  train_loss = 0.1539
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 94.23 	 Previous best codebleu 94.15
  ********************
 Achieve Best bleu:94.23
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1001
  train_loss = 0.1679
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 94.15 	 Previous best codebleu 94.23
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 1126
  train_loss = 0.0708
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 94.15 	 Previous best codebleu 94.23
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 1251
  train_loss = 0.0799
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_500_2/validation.jsonl
  codebleu-4 = 94.15 	 Previous best codebleu 94.23
  ********************
early stopping!!!
reload model from RQ5/sstubs_500_2/codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/RQ5/sstubs_500_2/test.jsonl
  codebleu = 93.98 
  Total = 500 
  Exact Fixed = 300 
[2, 3, 5, 7, 8, 9, 11, 14, 16, 17, 18, 19, 22, 24, 27, 28, 29, 37, 38, 39, 40, 41, 42, 44, 49, 52, 55, 59, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 105, 111, 113, 114, 115, 116, 122, 124, 125, 127, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 160, 165, 166, 167, 169, 171, 173, 174, 175, 177, 181, 182, 184, 185, 187, 189, 191, 192, 194, 196, 197, 198, 200, 201, 203, 204, 209, 211, 216, 217, 220, 221, 223, 224, 227, 228, 234, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 266, 268, 269, 270, 274, 276, 277, 280, 281, 283, 284, 287, 288, 291, 294, 295, 296, 297, 298, 299, 300, 302, 303, 307, 308, 309, 310, 312, 313, 314, 315, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 338, 340, 341, 345, 346, 347, 348, 350, 351, 353, 354, 355, 357, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 374, 375, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 395, 396, 398, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 420, 421, 424, 425, 426, 428, 430, 431, 432, 437, 438, 439, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 475, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 497, 499, 500]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 500 
  Exact Fixed = 300 
[2, 3, 5, 7, 8, 9, 11, 14, 16, 17, 18, 19, 22, 24, 27, 28, 29, 37, 38, 39, 40, 41, 42, 44, 49, 52, 55, 59, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 105, 111, 113, 114, 115, 116, 122, 124, 125, 127, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 160, 165, 166, 167, 169, 171, 173, 174, 175, 177, 181, 182, 184, 185, 187, 189, 191, 192, 194, 196, 197, 198, 200, 201, 203, 204, 209, 211, 216, 217, 220, 221, 223, 224, 227, 228, 234, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 266, 268, 269, 270, 274, 276, 277, 280, 281, 283, 284, 287, 288, 291, 294, 295, 296, 297, 298, 299, 300, 302, 303, 307, 308, 309, 310, 312, 313, 314, 315, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 338, 340, 341, 345, 346, 347, 348, 350, 351, 353, 354, 355, 357, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 374, 375, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 395, 396, 398, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 420, 421, 424, 425, 426, 428, 430, 431, 432, 437, 438, 439, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 475, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 497, 499, 500]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 93.98 
[0.7633002255730409, 1.0, 1.0, 0.7518926435998933, 1.0, 0.461936477113848, 0.9794339527758515, 1.0, 1.0, 0.940598945729278, 1.0, 0.8222725521291268, 0.8056751756510949, 1.0, 0.9411690661254029, 1.0, 1.0, 1.0, 1.0, 0.9655267507815484, 0.8158463815378669, 1.0, 0.8707360186992235, 1.0, 0.8697836446510707, 0.9830124435719327, 1.0, 1.0, 1.0, 0.9472873156881443, 0.8965296466431494, 0.822851316815723, 0.9676665036259338, 0.8821296454239946, 0.9141000841539659, 0.9156471681629372, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8186396203812509, 1.0, 0.9145980101874507, 0.7350948805844232, 0.5288056133514245, 0.7345133623014264, 1.0, 0.6861542078368468, 0.7229730981438639, 1.0, 0.8953661348226227, 0.896013967469204, 1.0, 0.9262222844116816, 0.5369017003238533, 0.8986766170158926, 1.0, 0.910233087519547, 0.9600948805844232, 0.8509588599283562, 1.0, 0.9765440084058021, 1.0, 1.0, 1.0, 1.0, 1.0, 0.793975543926688, 0.9637364956234171, 1.0, 1.0, 1.0, 0.9891483218006352, 1.0, 1.0, 1.0, 0.8955980328281301, 0.9026321368482364, 1.0, 0.8387796716807858, 1.0, 0.5132104694946933, 0.6887796716807858, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9266829146927709, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6268736649990799, 0.8194184206145404, 1.0, 1.0, 0.9166076129557432, 0.900291645780765, 0.6731716191316424, 0.8952738864082956, 0.8642470965743208, 1.0, 0.936923058378295, 1.0, 1.0, 1.0, 1.0, 0.8772724139191397, 0.6577095841418729, 0.8399114554115357, 0.8325303364721384, 0.8665518607362566, 1.0, 0.9188441984944269, 1.0, 1.0, 0.801169789534145, 1.0, 0.8655056700329364, 0.8394141655908587, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5288056133514245, 1.0, 0.9500330416345475, 1.0, 0.5288056133514245, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8651650731090275, 0.9145980101874507, 1.0, 1.0, 1.0, 0.551623347703528, 1.0, 1.0, 1.0, 1.0, 1.0, 0.928067052222928, 0.9209300112883179, 1.0, 0.8194184206145404, 0.9437985500759485, 0.910233087519547, 0.8894185928819611, 1.0, 1.0, 1.0, 0.7549491302505903, 1.0, 0.719859844317331, 1.0, 0.9274843030447293, 1.0, 1.0, 1.0, 0.9443755095409017, 1.0, 0.8020772327457721, 0.8531462888634065, 0.9495565333799167, 1.0, 1.0, 0.9524183912964097, 1.0, 1.0, 0.8263400048588452, 1.0, 0.9090440252597953, 1.0, 0.8490506294864315, 1.0, 1.0, 0.8488639150612545, 1.0, 0.9630476148256921, 1.0, 1.0, 1.0, 0.9479527984830745, 1.0, 1.0, 0.7830011774921302, 1.0, 1.0, 0.681072945544059, 0.9535682301774412, 0.9072571488256155, 0.9583676774082095, 1.0, 0.9714741186824503, 1.0, 0.7133434750181247, 0.9748004580725187, 0.7571043044738265, 0.9372110492852396, 1.0, 1.0, 0.8689975336408694, 0.9468351265733028, 1.0, 1.0, 0.9711766444291812, 1.0, 1.0, 0.6040692180123179, 0.8387796716807858, 1.0, 1.0, 0.9201281281538001, 0.9296190778846383, 0.9830124435719327, 0.6229661941006033, 0.9498733743967636, 1.0, 0.970114879479065, 0.9706304665534506, 0.9015688472130516, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8981449415543648, 0.9675420713984233, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7554783858090635, 0.7165518607362565, 1.0, 1.0, 0.7618988228386825, 1.0, 1.0, 0.818505060958896, 1.0, 1.0, 1.0, 0.8077681112388688, 0.9343920430664012, 0.957982876787582, 1.0, 0.7698548656934749, 1.0, 1.0, 0.6229661941006033, 0.9211131842675646, 1.0, 1.0, 0.9608514269956967, 1.0, 1.0, 0.8991143708627416, 0.8228404231788209, 1.0, 1.0, 0.9108242908590016, 0.8671763677889426, 1.0, 0.9059642451028274, 0.7071109850677817, 1.0, 1.0, 0.9891483218006352, 1.0, 1.0, 1.0, 1.0, 0.7032463562196102, 1.0, 1.0, 0.9193114455112912, 0.7486246705124127, 0.9355163382076239, 1.0, 1.0, 1.0, 1.0, 0.9090440252597953, 1.0, 1.0, 1.0, 1.0, 0.8425810755896723, 1.0, 0.8848468039511168, 1.0, 0.9498733743967636, 0.9489900112686158, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9155105345510666, 0.954646559321255, 0.8116616458799049, 1.0, 1.0, 0.8165138781676962, 0.6526670151860275, 0.8845572237610086, 1.0, 0.5666302487737696, 1.0, 1.0, 0.8606751756510949, 0.973200733636699, 0.6508081453961951, 1.0, 1.0, 1.0, 1.0, 0.6103531181632182, 1.0, 1.0, 0.8731838768910194, 1.0, 1.0, 1.0, 0.7026615485512439, 1.0, 1.0, 0.9241497117221709, 0.726332468260181, 1.0, 1.0, 1.0, 1.0, 0.8750501938749425, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8149139863647084, 0.7383403869893825, 1.0, 1.0, 0.9581095565874824, 0.9660210594050409, 1.0, 1.0, 1.0, 0.8045788816545087, 1.0, 1.0, 0.9266829146927709, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9495565333799167, 0.8357712991769117, 0.8642470965743208, 0.9116788368020918, 0.9697350684883432, 1.0, 1.0, 0.9116788368020918, 1.0, 1.0, 1.0, 0.8806751756510949, 1.0, 1.0, 0.8892259799760112, 0.9524183912964097, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7016265496309229, 1.0, 0.9711218088844558, 0.8707360186992235, 0.940598945729278, 1.0, 1.0, 0.8504974795043785, 0.9746774581465578, 1.0, 1.0, 1.0, 0.793992508705015, 1.0, 0.9698138929646263, 1.0, 1.0, 1.0, 0.8987231460844378, 0.851862659420344, 0.882842712474619, 0.8380551848499416, 1.0, 1.0, 1.0, 0.8940816483943355, 0.9361684767997713, 0.9706304665534506, 1.0, 1.0, 1.0, 0.8472367293037075, 1.0, 0.9427895563342799, 1.0, 1.0, 1.0, 0.9602891460062635, 1.0, 1.0, 1.0, 1.0, 0.8098590091001723, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9519682498738435, 1.0, 0.9523104352365284, 1.0, 1.0, 1.0, 0.7725467844187697, 0.9493239030379825, 1.0, 0.9660493922322488, 0.4923642256494745, 1.0, 1.0, 1.0, 0.7830011774921302, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9023338728659691, 1.0, 1.0, 1.0, 1.0, 0.8476460351025821, 0.8504617810620385, 0.9270405384522935, 0.8667343878768172, 0.9309949427736264, 1.0, 0.7292149374693833, 1.0, 1.0]
Finish training and take 30m
