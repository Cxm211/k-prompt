.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_EXTENSIONS_API_EXTENSIONS_API_H_ #define CHROME_BROWSER_EXTENSIONS_API_EXTENSIONS_API_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/extensions/api/extension_api.h" #include "chrome/browser/extensions/api/extension_service.h" #include "chrome/browser/extensions/extension_system.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h"
: function() {     var self = this;      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e
module.exports = function(app) {   app.get('/', function(req, res) {     res.render('index');   });    app.post('/', function(req, res) {     res.render('create');   });    app.put('/', function(req, res) {     res.render('update');   });    app.delete('/', function(req, res) {     res.render('destroy');   }); };
= checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createReadStream(entry.path, range) fileWriteStream = checkoutFS.createWriteStream(entry.path, range) fileReadStream = checkoutFS.createRead
.delete(id); } catch (e) { console.log(e); } };  var getMemberById = function*(id) {     var member = getMemberById(id);     if (member) {         return member;     } else {         return null;     } };  var getMemberByName = function*(name) {     var member = getMemberByName(name);     if (member) {         return member;     } else {         return null;     } };  var getMemberById = function*(id) {     var member = getMemberById(id);     if (member) {         return member;     } else {         return null;     } };  var getMemberByName = function*(name) {     var member = getMemberByName(name);     if (member) {         return member;     } else {         return null;     } };  var getMemberById = function*(id) {     var member = getMemberById(id);     if (member) {         return member;     } else {         return null;     } };  var getMemberByName = function*(name) {     var member = getMemberByName(name);     if (member) {         return member;     } else {         return null;     } };  var getMemberById = function*(id) {     var member = getMemberById(id);     if (member) {         return member;     } else {         return null;     } };  var getMemberByName = function*(name) {     var member = getMemberByName(name);     if (member) {         return member;     } else {         return null;     } };  var getMemberById = function*(id) {     var member = getMemberById(id);     if (member) {         return member;     } else {         return null;     } };  var getMemberByName = function*(name) {     var member = getMemberByName(name);     if (member) {         return member;     } else {         return null;     } };  var getMemberById = function*(id)
.prototype.render = function() {     var self = this;      this.$el.html(this.template());      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseenter', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseleave', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseout', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseout', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('mouseover', function(e) {
: function() {     var self = this;     this.dropdown = new Backbone.Model({         defaults: {             text: ''         },         initialize: function(options) {             _.extend(this, options);             this.render();         },         render: function() {             this.$el.html(template({                 text: this.model.get('text')             }));             return this;         }     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {         this.model.set('text', this.model.get('text'));         this.render();     });     this.dropdown.bind('change:text', function() {
.prototype.eval = function() {     if (!this.input.max.eval()) {         this.input.max.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.max.eval()) {         this.input.max.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.max.eval()) {         this.input.max.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.max.eval()) {         this.input.max.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.max.eval()) {         this.input.max.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.max.eval()) {         this.input.max.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.max.eval()) {         this.input.max.eval();     }     if (!this.input.min.eval()) {         this.input.min.eval();     }     if (!this.input.
(config.datasources[i], datasource); }
(StickRightLocationDirective); StickRightLocationDirective.$inject = ['StickRightLocationDirective']; function StickRightLocationDirective(StickRightLocationDirective) {     StickRightLocationDirective.super_.apply(this, arguments); } StickRightLocationDirective.prototype = Object.create(AbstractLocationDirective.prototype); StickRightLocationDirective.prototype.constructor = StickRightLocationDirective; StickRightLocationDirective.prototype.restrict = 'A'; StickRightLocationDirective.prototype.restrictTo = 'A'; StickRightLocationDirective.prototype.link = function (scope, element, attrs) {     var stickRightLocation = element.find('.stick-right-location');     if (stickRightLocation) {         stickRightLocation.addClass('stick-right-location');     } }; StickRightLocationDirective.$inject = ['StickRightLocationDirective']; function StickRightLocationDirective(StickRightLocationDirective) {     StickRightLocationDirective.super_.apply(this, arguments); } StickRightLocationDirective.prototype = Object.create(AbstractLocationDirective.prototype); StickRightLocationDirective.prototype.constructor = StickRightLocationDirective; StickRightLocationDirective.prototype.restrict = 'A'; StickRightLocationDirective.prototype.restrictTo = 'A'; StickRightLocationDirective.prototype.link = function (scope, element, attrs) {     var stickRightLocation = element.find('.stick-right-location');     if (stickRightLocation) {         stickRightLocation.removeClass('stick-right-location');     } }; StickRightLocationDirective.$inject = ['StickRightLocationDirective']; function StickRightLocationDirective(StickRightLocationDirective) {     StickRightLocationDirective.super_.apply(this, arguments); } StickRightLocationDirective.prototype = Object.create(AbstractLocationDirective.prototype); StickRightLocationDirective.prototype.constructor = StickRightLocationDirective; StickRightLocationDirective.prototype.restrict = 'A'; StickRightLocationDirective.prototype.restrictTo = 'A'; StickRightLocationDirective.prototype.link = function (scope, element, attrs
= m && m[1] && m[1].trim() && m[2] && m[2].trim() && m[3] && m[3].trim() && m[4] && m[4].trim() && m[5] && m[5].trim() && m[6] && m[6].trim() && m[7] && m[7].trim() && m[8] && m[8].trim() && m[9] && m[9].trim() && m[10] && m[10].trim() && m[11] && m[11].trim() && m[12] && m[12].trim() && m[13] && m[13].trim() && m[14] && m[14].trim() && m[15] && m[15].trim() && m[16] && m[16].trim() && m[17] && m[17].trim() && m[18] && m[18].trim() && m[19] && m[19].trim() && m[20] && m[20].trim() && m[21] && m[21].trim() && m[22] && m[22].trim() && m[23] && m[23].trim() && m[24] && m[24].trim() && m[25] && m[25].trim() && m[26] && m[26].trim() && m[27] && m[27].trim() && m[28] && m[28].trim() && m[29] && m[29].trim() && m[30] && m[30].trim() && m[31] && m[31].trim() && m[32] && m[32].trim() && m[33] && m[33].trim() && m[34] && m[34].trim() && m[35] && m[35].trim() && m[36] && m[36].trim() && m[37] && m[37].trim() && m[38] && m[38].trim() && m[39] && m[39].trim() && m[40] && m[40].trim() && m[41] && m[41].trim() && m[42] && m[42].trim() && m[43
(DB, function(err, result) {     t.ifError(err);     t.equal(result, true);     t.end(); });  RTT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there', function(t) { RPT test('Couch is not there
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web
(state, action.payload.connectionUri, won.WON.Opened); }  function changeConnectionState(state, action.payload.connectionUri, actionType) {     switch (actionType) {         case actionTypes.messages.closeMessageReceived:             return won.WON.Closed;         case actionTypes.messages.openMessageReceived:             return won.WON.Opened;         case actionTypes.messages.connectMessageReceived:             return won.WON.Connected;         case actionTypes.messages.closeMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.openMessageReceived:             return won.WON.Connected;         case actionTypes.messages.openMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.connectMessageReceived:             return won.WON.Connected;         case actionTypes.messages.closeMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.openMessageReceived:             return won.WON.Connected;         case actionTypes.messages.openMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.connectMessageReceived:             return won.WON.Connected;         case actionTypes.messages.closeMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.openMessageReceived:             return won.WON.Connected;         case actionTypes.messages.openMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.connectMessageReceived:             return won.WON.Connected;         case actionTypes.messages.closeMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.openMessageReceived:             return won.WON.Connected;         case actionTypes.messages.openMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.connectMessageReceived:             return won.WON.Connected;         case actionTypes.messages.closeMessageReceived:             return won.WON.Disconnected;         case actionTypes.messages.openMessageReceived:             return won.WON.Connected;
: function(req, res) {     if (!req.body.id) return onError(req, res, 'Id is required');     if (!req.body.name) return onError(req, res, 'Name is required');     if (!req.body.email) return onError(req, res, 'Email is required');     if (!req.body.phone) return onError(req, res, 'Phone is required');     if (!req.body.address) return onError(req, res, 'Address is required');     if (!req.body.city) return onError(req, res, 'City is required');     if (!req.body.state) return onError(req, res, 'State is required');     if (!req.body.zip) return onError(req, res, 'Zip code is required');     if (!req.body.country) return onError(req, res, 'Country is required');     if (!req.body.phone_number) return onError(req, res, 'Phone number is required');     if (!req.body.email_address) return onError(req, res, 'Email address is required');     if (!req.body.email_city) return onError(req, res, 'Email city is required');     if (!req.body.email_state) return onError(req, res, 'Email state is required');     if (!req.body.email_zip) return onError(req, res, 'Email zip code is required');     if (!req.body.email_country) return onError(req, res, 'Email country is required');     if (!req.body.email_phone_number) return onError(req, res, 'Email phone number is required');     if (!req.body.email_email_address) return onError(req, res, 'Email address is required');     if (!req.body.email_email_city) return onError(req, res, 'Email city is required');     if (!req.body.email_email_state) return onError(req, res, 'Email state is required');     if (!req.body.email_email_zip) return onError(req, res, 'Email zip code is required');     if (!req.body.email_email_country) return
.prototype.render = function() {     var self = this;     this.$el.html('');     this.$el.append('<div class="btn-group">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal2">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal3">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal4">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal5">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal6">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal7">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal8">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal9">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal10">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#myModal11">');     this.$el.append('<button type="button" class="btn btn-default btn-xs" data-toggle="modal"
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "components/keyed_service/core/keyed_service.h" #include "components/keyed_service/core/keyed_service_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_util.h"
.prototype = {      /**      * @param {Object} options      */     initialize: function(options) {         this.options = options || {};     },      /**      * @param {Object} options      * @param {Function} callback      */     save: function(options, callback) {         var self = this;          if (typeof options === 'function') {             callback = options;             options = {};         }          if (typeof callback === 'function') {             callback = options;             options = {};         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options === 'object') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options             };         }          if (typeof options ==='string') {             options = {                 filename: options
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append('<div class="container">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col
.addEventListener('click', function(e) {     e.preventDefault();     if (e.target.tagName.toLowerCase() == 'input') {         e.preventDefault();         e.stopPropagation();     } });  var nLi = document.createElement('li'); nLi.appendChild(document.createTextNode('Recycle')); var span = nLi.appendChild(document.createElement("span")); span.appendChild(document.createTextNode('1')); span.appendChild(document.createTextNode('2')); span.appendChild(document.createTextNode('3')); span.appendChild(document.createTextNode('4')); span.appendChild(document.createTextNode('5')); span.appendChild(document.createTextNode('6')); span.appendChild(document.createTextNode('7')); span.appendChild(document.createTextNode('8')); span.appendChild(document.createTextNode('9')); span.appendChild(document.createTextNode('10')); span.appendChild(document.createTextNode('11')); span.appendChild(document.createTextNode('12')); span.appendChild(document.createTextNode('13')); span.appendChild(document.createTextNode('14')); span.appendChild(document.createTextNode('15')); span.appendChild(document.createTextNode('16')); span.appendChild(document.createTextNode('17')); span.appendChild(document.createTextNode('18')); span.appendChild(document.createTextNode('19')); span.appendChild(document.createTextNode('20')); span.appendChild(document.createTextNode('21')); span.appendChild(document.createTextNode('22')); span.appendChild(document.createTextNode('23')); span.appendChild(document.createTextNode('24')); span.appendChild(document.createTextNode('25')); span.appendChild(document.createTextNode('26')); span.appendChild(document.createTextNode('27')); span.appendChild(document.createTextNode('28')); span.appendChild(document.createTextNode('29'));
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_OBSERVER_NAMESPACE_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_OBSERVER_NAMESPACE_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_service.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_view.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_view_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager
.prototype = {      init: function() {          var self = this;          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', 'a', function(e) {             e.preventDefault();             self.toggle();         });
.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].signals.any_one) {   result.push(terms[i]); } if (terms[r].
.call(this, this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this._collection.indexOf(this
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_views.h" #include
: function(config, bootstrap, types, resolvers, args, guards) {     return __awaiter(this, void 0, void 0, function* () {         return bootstrap(config, types, resolvers, args, guards);     }); }, __awaiter(this, void 0, void 0, function* () {     return __awaiter(this, void 0, void 0, function* () {         return __awaiter(this, void 0, void 0, function* () {             return __awaiter(this, void 0, void 0, function* () {                 return __awaiter(this, void 0, void 0, function* () {                     return __awaiter(this, void 0, void 0, function* () {                         return __awaiter(this, void 0, void 0, function* () {                             return __awaiter(this, void 0, void 0, function* () {                                 return __awaiter(this, void 0, void 0, function* () {                                     return __awaiter(this, void 0, void 0, function* () {                                         return __awaiter(this, void 0, void 0, function* () {                                             return __awaiter(this, void 0, void 0, function* () {                                                 return __awaiter(this, void 0, void 0, function* () {                                                     return __awaiter(this, void 0, void 0, function* () {                                                         return __awaiter(this, void 0, void 0, function* () {                                                             return __awaiter(this, void 0, void 0, function* () {                                                                 return __awaiter(this, void 0, void 0, function* () {                                                                     return __awaiter(this, void 0, void 0, function* () {                                                                         return __awaiter(this, void 0, void 0, function* () {                                                                             return __awaiter(this, void 0, void 0, function* () {                                                                                 return __awaiter(this, void 0, void 0, function* () {                                                                                     return __awaiter(this, void 0, void 0, function* () {                                                                                         return __awaiter(this, void 0, void 0, function* () {                                                                                             return __
(function() {     var $ = require('jquery');     var _ = require('underscore');     var _1 = require('underscore.string');     var _2 = require('underscore.number');     var _3 = require('underscore.array');     var _4 = require('underscore.object');     var _5 = require('underscore.function');     var _6 = require('underscore.array');     var _7 = require('underscore.string');     var _8 = require('underscore.number');     var _9 = require('underscore.object');     var _10 = require('underscore.function');     var _11 = require('underscore.array');     var _12 = require('underscore.string');     var _13 = require('underscore.number');     var _14 = require('underscore.object');     var _15 = require('underscore.function');     var _16 = require('underscore.array');     var _17 = require('underscore.string');     var _18 = require('underscore.number');     var _19 = require('underscore.object');     var _20 = require('underscore.function');     var _21 = require('underscore.array');     var _22 = require('underscore.string');     var _23 = require('underscore.number');     var _24 = require('underscore.object');     var _25 = require('underscore.function');     var _26 = require('underscore.array');     var _27 = require('underscore.string');     var _28 = require('underscore.number');     var _29 = require('underscore.object');     var _30 = require('underscore.function');     var _31 = require('underscore.array');     var _32 = require('underscore.string');     var _33 = require('underscore.number');     var _34 = require('underscore.object');     var _35 = require('underscore.function');     var _36 = require('underscore.array');     var _37 = require('underscore.string');     var _38 =
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_APP_LIST_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_APP_LIST_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/browser/ui/tabs/tab_strip_model_observer.h" #include "chrome/common/chrome_notification_types.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #
.addEventListener('click', function(e) {     e.preventDefault();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'textarea') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() ==='select') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'textarea') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();     } else if (e.target.tagName.toLowerCase() === 'button') {         e.preventDefault();         e
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web
.getTextOrder(i);     if (text_order) {       orderByCode = text_order;       break;     }   }   if (!orderByCode) {     return;   }   if (orderByCode == null) {     return;   }   if (orderByCode.length == 0) {     return;   }   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderByCode.substring(0, orderByCode.length - 1);   orderByCode = orderBy
(pg, result)     result.push(npg)   }    return result }
(itsPath, alwaysRemove); }  function updateDependencies(itsPath, alwaysRemove) {   return function(_doc, _next) {     if (!doc) return next(null);      if (alwaysRemove) {       doc.removeChild(itsPath);     } else {       doc.insertBefore(itsPath, doc.firstChild);     }   }; }  function updateDependencies(itsPath, alwaysRemove) {   return function(_doc, _next) {     if (!doc) return next(null);      if (alwaysRemove) {       doc.removeChild(itsPath);     } else {       doc.insertBefore(itsPath, doc.firstChild);     }   }; }  function updateDependencies(itsPath, alwaysRemove) {   return function(_doc, _next) {     if (!doc) return next(null);      if (alwaysRemove) {       doc.removeChild(itsPath);     } else {       doc.insertBefore(itsPath, doc.firstChild);     }   }; }  function updateDependencies(itsPath, alwaysRemove) {   return function(_doc, _next) {     if (!doc) return next(null);      if (alwaysRemove) {       doc.removeChild(itsPath);     } else {       doc.insertBefore(itsPath, doc.firstChild);     }   }; }  function updateDependencies(itsPath, alwaysRemove) {   return function(_doc, _next) {     if (!doc) return next(null);      if (alwaysRemove) {       doc.removeChild(itsPath);     } else {       doc.insertBefore(itsPath, doc.firstChild);     }   }; }  function updateDependencies(itsPath, alwaysRemove) {   return function(_doc, _next) {     if (!doc) return next(null);      if (alwaysRemove) {       doc.removeChild(itsPath);     } else {       doc.insertBefore(itsPath, doc.firstChild);     }   }; }  function
.prototype.render = function() {     var _this = this;     if (this.rendering) {         return;     }     this.rendering = true;     this.$el.html(this.template);     this.rendering = false;     this.$el.addClass('rendering');     this.render();     this.$el.removeClass('rendering');     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this.rendering = false;     this
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_EXTENSIONS_API_EXTENSIONS_API_H_ #define CHROME_BROWSER_EXTENSIONS_API_EXTENSIONS_API_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/extensions/api/extension.h" #include "chrome/browser/extensions/api/extension_registry.h" #include "chrome/browser/extensions/extension_system.h" #include "chrome/browser/extensions/extension_system_observer.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_util.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h"
.vue = Vue.extend({   template: `     <div class="container">       <div class="row">         <div class="col-md-12">           <div class="box box-primary">             <div class="box-header with-border">               <h3 class="box-title">                 <i class="fa fa-user"></i>               </h3>               <div class="box-tools pull-right">                 <button type="button" class="btn btn-box-tool" data-widget="collapse">                   <i class="fa fa-minus"></i>                 </button>                 <button type="button" class="btn btn-box-tool" data-widget="remove">                   <i class="fa fa-times"></i>                 </button>               </div>             </div>             <div class="box-body">               <div class="row">                 <div class="col-md-12">                   <div class="box-header with-border">                     <h3 class="box-title">                       <i class="fa fa-user"></i>                     </h3>                     <div class="box-tools pull-right">                       <button type="button" class="btn btn-box-tool" data-widget="collapse">                         <i class="fa fa-minus"></i>                       </button>                       <button type="button" class="btn btn-box-tool" data-widget="remove">                         <i class="fa fa-times"></i>                       </button>                     </div>                   </div>                 </div>                 <div class="col-md-12">                   <div class="box-header with-border">                     <h3 class="box-title">                       <i class="fa fa-user"></i>                     </h3>                     <div class="box-tools pull-right">                       <button type="button" class="btn btn-box-tool" data-widget="collapse">                         <i class="fa fa-minus"></i>                       </button>                       <button type="button" class="btn btn-box-tool" data
.addEventListener('click', function (e) {     e.preventDefault(); });  $(document).ready(function () {     $('#myModal').modal('show'); });  $(document).ready(function () {     $('#myModal').on('hidden.bs.modal', function () {         $('#myModal').modal('hide');     }); });  $(document).ready(function () {     $('#myModal').on('shown.bs.modal', function () {         $('#myModal').modal('show');     }); });  $(document).ready(function () {     $('#myModal').on('hidden.bs.modal', function () {         $('#myModal').modal('hide');     }); });  $(document).ready(function () {     $('#myModal').on('shown.bs.modal', function () {         $('#myModal').modal('show');     }); });  $(document).ready(function () {     $('#myModal').on('hidden.bs.modal', function () {         $('#myModal').modal('hide');     }); });  $(document).ready(function () {     $('#myModal').on('shown.bs.modal', function () {         $('#myModal').modal('show');     }); });  $(document).ready(function () {     $('#myModal').on('hidden.bs.modal', function () {         $('#myModal').modal('hide');     }); });  $(document).ready(function () {     $('#myModal').on('shown.bs.modal', function () {         $('#myModal').modal('show');     }); });  $(document).ready(function () {     $('#myModal').on('hidden.bs.modal', function () {         $('#myModal').modal('hide');     }); });  $(document).ready(function () {     $('#myModal').on('shown.bs.modal', function () {         $('#myModal
.prototype.render = function() {     var self = this;      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if (this._sPrettyPrintDelayedCallID) {         jQuery.sap.clearDelayedCall(this._sPrettyPrintDelayedCallID);     }      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if (this._sPrettyPrintDelayedCallID) {         jQuery.sap.clearDelayedCall(this._sPrettyPrintDelayedCallID);     }      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if (this._sPrettyPrintDelayedCallID) {         jQuery.sap.clearDelayedCall(this._sPrettyPrintDelayedCallID);     }      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if (this._sPrettyPrintDelayedCallID) {         jQuery.sap.clearDelayedCall(this._sPrettyPrintDelayedCallID);     }      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if (this._sPrettyPrintDelayedCallID) {         jQuery.sap.clearDelayedCall(this._sPrettyPrintDelayedCallID);     }      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if (this._sPrettyPrintDelayedCallID) {         jQuery.sap.clearDelayedCall(this._sPrettyPrintDelayedCallID);     }      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if (this._sPrettyPrintDelayedCallID) {         jQuery.sap.clearDelayedCall(this._sPrettyPrintDelayedCallID);     }      this._sPrettyPrintDelayedCallID = jQuery.sap.getDelayedCallID(this._sPrettyPrintDelayedCallID);     if
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_util.h" #include "content/public
(this.data.totalReceived[this.currency], this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.data.keyspace);     case 'balance':         return this.formatCurrency(this.data.totalReceived[this.currency] - this.data.totalSpent[this.currency], this.
: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onVMouseDown: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onVMouseUp: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onVMouseWheel: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onMouseDown: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onMouseMove: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onMouseUp: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onMouseWheel: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onTouchStart: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onTouchMove: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onTouchEnd: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     }, this),     onTouchCancel: React.autoBind(function(event) {         if (this.props.floating) {             event.preventDefault();         }     },
.find(".forum-post.subject").on(MM.clickType, function(e) {     $(this).parent().find(".content").toggle(); });
(changes, isFromOuter); }  function slotOwnDelete(changes, isFromOuter) {     var me = this;     if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && nodeEvalExpr(me, me.nameBind.expr)!== me.name) { idxs.splice(idxs.indexOf(me.name), 1); }      if (me.nameBind && node
(resultSet); processImplicitResult(ix); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(0); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(1); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(2); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(3); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(4); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(5); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(6); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(7); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(8); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(9); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(10); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(11); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(12); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(13); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(14); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(15); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(16); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(17); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(18); }  if (resultSet &&!executeOpts.resultSet) {     processImplicitResult(19);
= vmDetail.getTokenBindings(); if (tokenBindings) {   for (var i = 0; i < tokenBindings.length; i++) {     tokens = tokenBindings[i];     binding = vmDetail.getBinding(tokens);     highlight = vmDetail.getHighlight(tokens);     root = vmDetail.getRoot(tokens);     targets = vmDetail.getTargets(tokens);     highlighted = vmDetail.getHighlighted(tokens);   } } else {   tokens = vmDetail.getTokens();   binding = vmDetail.getBinding(tokens);   highlight = vmDetail.getHighlight(tokens);   root = vmDetail.getRoot(tokens);   targets = vmDetail.getTargets(tokens);   highlighted = vmDetail.getHighlighted(tokens); } if (highlighted) {   vmDetail.setHighlighted(tokens);   vmDetail.setHighlighted(binding);   vmDetail.setHighlighted(root);   vmDetail.setHighlighted(targets);   vmDetail.setHighlighted(highlighted); } else {   vmDetail.setHighlighted(tokens);   vmDetail.setHighlighted(binding);   vmDetail.setHighlighted(root);   vmDetail.setHighlighted(targets);   vmDetail.setHighlighted(highlighted); } vmDetail.setHighlighted(tokens); vmDetail.setHighlighted(binding); vmDetail.setHighlighted(root); vmDetail.setHighlighted(targets); vmDetail.setHighlighted(highlighted); vmDetail.setHighlighted(tokens); vmDetail.setHighlighted(binding); vmDetail.setHighlighted(root); vmDetail.setHighlighted(targets); vmDetail.setHighlighted(highlighted); vmDetail.setHighlighted(tokens); vmDetail.setHighlighted(binding); vmDetail.setHighlighted(root); vmDetail.setHighlighted(targets); vmDetail.setHighlighted(highlighted); vmDetail.setHighlighted(tokens); vmDetail.setHighlighted(binding); vmDetail.setHighlighted(root); vmDetail.setHighlighted(targets); vmDetail.setHighlighted(
($data, function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2? 0 : (key1 > key2? 1 : -1)); })     $result = $result.sort(function (key1, key2){ return (key1 === key2
.prototype.isInteger = function(value) {     return isInteger(value); };  exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports.isInteger = isInteger; exports
.prototype.create = function() {     var self = this;     this._opposite.on('start', function() {         self.destroy();     });     this._opposite.on('end', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function() {         self.destroy();     });     this._opposite.on('error', function
: function() {     var atts = document.getElementsByTagName('a');     for (var i = 0; i < atts.length; i++) {         if (atts[i].href) {             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts[i].href = atts[i].href.replace(/^\//, '');             atts
(browsers[i]);  function getBrowser() {     var browsers = document.getElementsByTagName('head');     for (var i = 0; i < browsers.length; i++) {         var browser = browsers[i];         if (browser.tagName.toLowerCase() === 'head') {             return browser;         }     }     return null; }  function getGlobber() {     var browsers = document.getElementsByTagName('head');     for (var i = 0; i < browsers.length; i++) {         var browser = browsers[i];         if (browser.tagName.toLowerCase() ==='script') {             return browser;         }     }     return null; }  function getGlobber2() {     var browsers = document.getElementsByTagName('head');     for (var i = 0; i < browsers.length; i++) {         var browser = browsers[i];         if (browser.tagName.toLowerCase() ==='script') {             return browser;         }     }     return null; }  function getGlobber3() {     var browsers = document.getElementsByTagName('head');     for (var i = 0; i < browsers.length; i++) {         var browser = browsers[i];         if (browser.tagName.toLowerCase() ==='script') {             return browser;         }     }     return null; }  function getGlobber4() {     var browsers = document.getElementsByTagName('head');     for (var i = 0; i < browsers.length; i++) {         var browser = browsers[i];         if (browser.tagName.toLowerCase() ==='script') {             return browser;         }     }     return null; }  function getGlobber5() {     var browsers = document.getElementsByTagName('head');     for (var i = 0; i < browsers.length; i++) {         var browser = browsers[i];         if (browser.tagName.toLowerCase() ==='script') {             return browser;         }     }     return null; }  function
(curAst); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); curAst.file = camelize(replaceVue(fileLowerCase)); cur
: true }  export default class Header extends React.Component {   render() {     return (       <div>         <Breadcrumb />         <Tabs />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />         <Tab />
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_ptr_util.h" #include "base/memory/weak_vector.h" #include "base/strings/string16.h" #include "base/strings/string_number_conversions.h" #include "base/strings/string_util.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "content/public/browser/browser_thread.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web
: function() {     if (!_is_initial_settings_set) {         _is_initial_settings_set = true;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set = false;         _is_initial_settings_set =
.js (function() {   'use strict';    angular    .module('app')    .controller('AppCtrl', AppCtrl);    AppCtrl.$inject = ['$scope', '$stateParams', '$location'];    function AppCtrl($scope, $stateParams, $location) {     var vm = this;      vm.title = $stateParams.title;     vm.description = $stateParams.description;     vm.image = $stateParams.image;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;     vm.imageTitle = $stateParams.imageTitle;     vm.imageDescription = $stateParams.imageDescription;     vm.imageUrl = $stateParams.imageUrl;
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_
.prototype.setAttribute = function (name, oldValue, newValue) {       var info = (0, _data['default'])(this);       var attributeToPropertyMap = info.attributeToPropertyMap || {};       attributeToPropertyMap[name] = oldValue;       info.attributeToPropertyMap[name] = newValue;       return this; };
.prototype.addNote = function(note) {     this.notes.push(note);     return this; };  /**  * @param {string} name  * @param {string} value  * @param {string} type  * @return {string}  */ module.exports = function(name, value, type) {     if (!type) {         type = 'note';     }     if (type == 'note') {         return this.notes[name];     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {         return this.notes[name] + value;     } else if (type == 'note') {
.addEventListener('click', function(e) {   e.preventDefault();   var url = $(this).attr('href');   if (url.indexOf('?')!== -1) {     url = url.substring(0, url.indexOf('?'));   } else {     url = url.substring(0, url.indexOf('?'));   }   window.location.href = url; });  window.addEventListener('hashchange', function(e) {   e.preventDefault();   var url = $(this).attr('href');   if (url.indexOf('?')!== -1) {     url = url.substring(0, url.indexOf('?'));   } else {     url = url.substring(0, url.indexOf('?'));   }   window.location.href = url; });  window.addEventListener('keydown', function(e) {   e.preventDefault();   var url = $(this).attr('href');   if (url.indexOf('?')!== -1) {     url = url.substring(0, url.indexOf('?'));   } else {     url = url.substring(0, url.indexOf('?'));   }   window.location.href = url; });  window.addEventListener('keyup', function(e) {   e.preventDefault();   var url = $(this).attr('href');   if (url.indexOf('?')!== -1) {     url = url.substring(0, url.indexOf('?'));   } else {     url = url.substring(0, url.indexOf('?'));   }   window.location.href = url; });  window.addEventListener('keydown', function(e) {   e.preventDefault();   var url = $(this).attr('href');   if (url.indexOf('?')!== -1) {     url = url.substring(0, url.indexOf('?'));   } else {     url = url.substring(0, url.indexOf('?'));   }   window.location.href = url; });  window.addEventListener('keyup', function
.findCompatibleDFU = function() { return document.querySelectorAll('.dfu-wrapper'); };  var dfuWrapper = document.querySelector('.dfu-wrapper');  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.removeEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {   e.preventDefault(); });  dfuWrapper.addEventListener('click', function(e) {
.addEventListener('click', (event) => {   event.preventDefault();   const comments = action.comments;   const newList = concatList(comments,state.comments.list);   state.comments.list = newList; });  module.exports = {
.prototype.render = function (target, prepend) {   var target = target || null;   var prepend = typeof prepend === 'boolean'? prepend : true;           if (typeof target ==='string') {   target = document.getElementById(target); }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {   target = document.body; }        if (typeof target === 'undefined') {
: parts[0].split(",")[1].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split(",")[0].split
.prototype.addClass = function(class) {     if (classRe.test(class)) {         this.classes.push(class);     } };  SelectorSet.prototype.removeClass = function(class) {     if (classRe.test(class)) {         this.classes.splice(this.classes.indexOf(class), 1);     } };  SelectorSet.prototype.removeAllClasses = function() {     for (var i = 0; i < this.classes.length; i++) {         this.removeClass(this.classes[i]);     } };  SelectorSet.prototype.addClass = function(class) {     this.classes.push(class); };  SelectorSet.prototype.removeClass = function(class) {     if (classRe.test(class)) {         this.classes.splice(this.classes.indexOf(class), 1);     } };  SelectorSet.prototype.removeAllClasses = function() {     for (var i = 0; i < this.classes.length; i++) {         this.removeClass(this.classes[i]);     } };  SelectorSet.prototype.addClass = function(class) {     this.classes.push(class); };  SelectorSet.prototype.removeClass = function(class) {     if (classRe.test(class)) {         this.classes.splice(this.classes.indexOf(class), 1);     } };  SelectorSet.prototype.removeAllClasses = function() {     for (var i = 0; i < this.classes.length; i++) {         this.removeClass(this.classes[i]);     } };  SelectorSet.prototype.addClass = function(class) {     this.classes.push(class); };  SelectorSet.prototype.removeClass = function(class) {     if (classRe.test(class)) {         this.classes.splice(this.classes.indexOf(class), 1);     } };  SelectorSet.prototype.removeAllClasses = function() {     for (var i = 0; i < this.classes.length; i++) {
.prototype.renderGlyph = function(context, acc_x, acc_y, font_scale, code) {     if (this.paren_left.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_left.code);     }     if (this.paren_right.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_right.code);     }     if (this.paren_top.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_top.code);     }     if (this.paren_bottom.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_bottom.code);     }     if (this.paren_left.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_left.code);     }     if (this.paren_right.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_right.code);     }     if (this.paren_top.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_top.code);     }     if (this.paren_bottom.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_bottom.code);     }     if (this.paren_left.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_left.code);     }     if (this.paren_right.code) {         Vex.Flow.renderGlyph(context, acc_x, acc_y, font_scale, this.paren_right.code);     }     if (this
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/login_manager_delegate.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/
.prototype.createEl = function(){   return vjs.Button.prototype.createEl.call(this, 'div', {     className: 'vjs-volume-menu-button vjs-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CERTIFICATES_CERTIFICATE_STORE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CERTIFICATES_CERTIFICATE_STORE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector_hash_map.h" #include "base/memory/weak_vector_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector
import React, { Component } from'react'; import PropTypes from 'prop-types'; import { connect } from'react-redux'; import { Link } from'react-router-dom'; import { withRouter } from'react-router-dom'; import { withStyles } from '@material-ui/core/styles'; import styles from './index.scss';  class Index extends Component {   static propTypes = {     connections: PropTypes.array.isRequired,   };    static defaultProps = {     connections: [],   };    render() {     const { connections } = this.props;      return (       <div className={styles.container}>         <div className={styles.row}>           <div className={styles.col}>             <div className={styles.label}>               <Link to="/" className={styles.link}>                 <i className={styles.icon}></i>               </Link>             </div>           </div>           <div className={styles.col}>             <div className={styles.label}>               <Link to="/" className={styles.link}>                 <i className={styles.icon}></i>               </Link>             </div>           </div>           <div className={styles.col}>             <div className={styles.label}>               <Link to="/" className={styles.link}>                 <i className={styles.icon}></i>               </Link>             </div>           </div>           <div className={styles.col}>             <div className={styles.label}>               <Link to="/" className={styles.link}>                 <i className={styles.icon}></i>               </Link>             </div>           </div>           <div className={styles.col}>             <div className={styles.label}>               <Link to="/" className={styles.link}>                 <i className={styles.icon}></i>               </Link>             </div>           </div>           <div className={styles.col}>
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_delegate.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h"
.prototype.update = function(oldState, newState) {     if (this._state === oldState) return;     if (this._state === newState) return;     this._state = assign(this._state, newState);     this._changed = true;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this._changed = false;     this
.prototype = {     init: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(e) {             e.preventDefault();             self.toggle();         });     },     toggle: function() {         var self = this;         this.$el.on('click', function(
: function(options) {     var self = this;      this.options = options || {};      if (!this.options) {         this.options = {};     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.limit) {         this.options.limit = 10;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.limit) {         this.options.limit = 10;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this.options.page = 1;     }      if (!this.options.page) {         this
(out); }; this.testSamePrereqTwice = function () {     h.exec('../bin/cli.js foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf foo:asdf
(helper);  describe('xep-0085', function() {   beforeEach(function(done) {     helper.run('xep-0085', function(err) {       if (err) {         return done(err);       }       helper.run('xep-0308', function(err) {         if (err) {           return done(err);         }         helper.run('xep-0308', function(err) {           if (err) {             return done(err);           }           helper.run('xep-0308', function(err) {             if (err) {               return done(err);             }             helper.run('xep-0308', function(err) {               if (err) {                 return done(err);               }               helper.run('xep-0308', function(err) {                 if (err) {                   return done(err);                 }                 helper.run('xep-0308', function(err) {                   if (err) {                     return done(err);                   }                   helper.run('xep-0308', function(err) {                     if (err) {                       return done(err);                     }                     helper.run('xep-0308', function(err) {                       if (err) {                         return done(err);                       }                       helper.run('xep-0308', function(err) {                         if (err) {                           return done(err);                         }                         helper.run('xep-0308', function(err) {                           if (err) {                             return done(err);                           }                           helper.run('xep-0308', function(err) {                             if (err) {                               return done(err);                             }                             helper.run('xep-0308', function(err) {                               if (err) {                                 return done(err);                               }                               helper.run('xep-0308', function(err) {                                 if (err) {                                   return done(err);                                 }                                 helper.run('xep
.prototype = {     init: function() {         var self = this;          this.$el = $(this.el);         this.el = this.$el[0];          this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this));         this.$el.on('click', this.toggle.bind(this
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/url_constants.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_RESOLVE_NAMESPACE_DESCRIPTOR_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_RESOLVE_NAMESPACE_DESCRIPTOR_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/string_util.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chromeos/login/login_manager.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui
(replay.nodeBuffer, nodeBuffer, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.nodeBuffer.length, replay.node
.add(function(callback) {     _doc.published = true;     callback(); });  _doc.publish = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = true;     callback(); };  _doc.publishAll = function(callback) {     _doc.published = false;     callback(); };  _doc.publishAll = function(callback)
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_
= (function() {     var modules = ['game', 'cookiedata', 'controls'];     return {         init: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.init();             }         },         init: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++) {                 var module = modules[i];                 module.load();             }         },         load: function() {             for (var i = 0; i < modules.length; i++)
.prototype.addEventListener = function(eventName, listener) {     if (this.listeners[eventName]) {         this.listeners[eventName].push(listener);     } else {         this.listeners[eventName] = [];         this.listeners[eventName].push(listener);     } };  var createTrigger = function(eventName) {     var trigger = document.createElement('div');     trigger.id = eventName;     trigger.className = 'trigger';     trigger.innerHTML = eventName;     document.body.appendChild(trigger);     return trigger; };  module.exports = function(definition) {     definition = definition || {};     definition.events = definition.events || {};     definition.events[eventName] = definition.events[eventName] || {};     definition.events[eventName][eventName] = definition.events[eventName][eventName] || {};     definition.events[eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][eventName][
.prototype.onItemUnselectedChange.apply(this, arguments);   jQuery.sap.delayedCall(0, this, function() {    this.updateSelectAllCheckbox();   });  };  ListBase.prototype.updateSelectAllCheckbox = function() {     var that = this;     var checkboxes = this.getCheckboxes();     if (checkboxes.length > 0) {         for (var i = 0; i < checkboxes.length; i++) {             var checkbox = checkboxes[i];             if (checkbox.getSelected()) {                 checkbox.setSelected(false);             } else {                 checkbox.setSelected(true);             }         }     } };  ListBase.prototype.getCheckboxes = function() {     var checkboxes = [];     for (var i = 0; i < this.getItems().length; i++) {         var item = this.getItems()[i];         if (item.getSelected()) {             checkboxes.push(item);         }     }     return checkboxes; };  ListBase.prototype.updateSelectAllCheckbox = function() {     var that = this;     var checkboxes = this.getCheckboxes();     if (checkboxes.length > 0) {         for (var i = 0; i < checkboxes.length; i++) {             var checkbox = checkboxes[i];             if (checkbox.getSelected()) {                 checkbox.setSelected(true);             } else {                 checkbox.setSelected(false);             }         }     } };  module.exports = ListBase;
.prototype._create_user_identity = function() {     var self = this;     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });     this.app.on( 'new_session', function() {         self._create_user_identity.apply( self, arguments );     });
.prototype.init = function() {     var self = this;     this.css = '';     this.width  = null;     this.height  = null;     this.onShow  = null;     this.onHide = null;     this.onResize = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;     this.onResizeStart = null;     this.onResizeEnd = null;
: true,     };  export default {   name: 'NodeHealthStore',   mixins: [GetSetMixin],   props: {     id: {       type: String,       required: true,     },     name: {       type: String,       required: true,     },     description: {       type: String,       required: true,     },     status: {       type: String,       required: true,     },     createdAt: {       type: Date,       required: true,     },     updatedAt: {       type: Date,       required: true,     },   },   computed: {     id() {       return this.get('id');     },     name() {       return this.get('name');     },     description() {       return this.get('description');     },     status() {       return this.get('status');     },     createdAt() {       return this.get('createdAt');     },     updatedAt() {       return this.get('updatedAt');     },   },   data() {     return {       id: this.get('id'),       name: this.get('name'),       description: this.get('description'),       status: this.get('status'),       createdAt: this.get('createdAt'),       updatedAt: this.get('updatedAt'),     };   },   computed: {     id() {       return this.get('id');     },     name() {       return this.get('name');     },     description() {       return this.get('description');     },     status() {       return this.get('status');     },     createdAt() {       return this.get('createdAt');     },     updatedAt() {       return this.get('updatedAt');     },   },   computed: {     id() {       return this.get('id');     },     name() {       return this.get('name');     },     description() {       return this.get
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar_observer_list.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_ENVIRONMENT_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_ENVIRONMENT_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_
import React from'react'; import PropTypes from 'prop-types'; import { connect } from'react-redux'; import { Link } from'react-router-dom'; import { withRouter } from'react-router-dom/router'; import { withRouterParams } from'react-router-dom/router-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterRouter } from'react-router-dom/router-router'; import { withRouterRouterParams } from'react-router-dom/router-router-params'; import { withRouterRouterHistory } from'react-router-dom/router-router-history-params'; import { withRouterHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistory } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import { withRouterHistoryHistoryParams } from'react-router-dom/router-router-history-params'; import {
: function(grunt) {     grunt.initConfig({         jshint: {             options: {                 curly: true,                 eqeqeq: true,                 immed: true,                 latedef: true,                 newcap: true,                 noarg: true,                 sub: true,                 undef: true,                 boss: true,                 eqnull: true,                 browser: true,                 globals: {                     jQuery: true                 }             },             all: [                 'Gruntfile.js',                 'tasks/*.js',                 'test/**/*.js'             ]         },         jshinttest: {             options: {                 curly: true,                 eqeqeq: true,                 immed: true,                 latedef: true,                 newcap: true,                 noarg: true,                 sub: true,                 undef: true,                 boss: true,                 eqnull: true,                 browser: true,                 globals: {                     jQuery: true                 }             },             all: [                 'Gruntfile.js',                 'tasks/*.js',                 'test/**/*.js'             ]         },         jshint: {             options: {                 curly: true,                 eqeqeq: true,                 immed: true,                 latedef: true,                 newcap: true,                 noarg: true,                 sub: true,                 undef: true,                 boss: true,                 eqnull: true,                 browser: true,                 globals: {                     jQuery: true                 }             },             all: [                 'Gruntfile.js',                 'tasks/*.js',                 'test/**/*.js'             ]         },         jshinttest: {             options: {                 curly: true,                 eqeqeq: true,                 immed: true,                 latedef: true,                 newcap: true,                 noarg: true,                 sub: true,                 undef: true,                 boss: true,                 eqnull: true,                 browser: true,
: compose(   compose(     compose(       compose(         compose(           compose(             compose(               compose(                 compose(                   compose(                     compose(                       compose(                         compose(                           compose(                             compose(                               compose(                                 compose(                                     compose(                                       compose(                                         compose(                                           compose(                                             compose(                                               compose(                                                 compose(                                                   compose(                                                     compose(                                                       compose(                                                         compose(                                                           compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                           compose(                                                             compose(                                                             compose(                                                           compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(                                                             compose(
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public
.prototype.options = function() {     var options = [];     for (var i = 0; i < this.options.length; i++) {         options.push(this.options[i]);     }     return options; };  module.exports = function(options) {     if (typeof options ==='string') {         options = [options];     } else if (typeof options === 'number') {         options = [options];     } else if (typeof options === 'boolean') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'object') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else if (typeof options === 'function') {         options = [options];     } else
.js  import React from'react' import { connect } from'react-redux' import { Link } from'react-router-dom' import { withRouter } from'react-router-dom' import { withStyles } from '@material-ui/core/styles' import { withTheme } from '@material-ui/core/styles/theme'  import styles from './styles.scss'  const mapStateToProps = (state) => {   return state }  const mapDispatchToProps = (dispatch) => {   return {     dispatch: dispatch   } }  export default connect(   mapStateToProps,   mapDispatchToProps )(Logo)
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append(this.$el.html());     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append
.prototype.set = function(key, value) {     this.options[key] = value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '=' + value;     this.payload += '&' + key + '='
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_APP_LIST_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_APP_LIST_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/browser/ui/tabs/tab_strip_model_observer.h" #include "chrome/common/chrome_notification_types.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "
.prototype.setState = function(key, value) {     if(!this.hasOwnProperty(key)) return;     this._states[key] = value; };  exports.getState = function(key) {     if(!this.hasOwnProperty(key)) return null;     return this._states[key]; };  exports.addState = function(key, value) {     if(!this.hasOwnProperty(key)) return;     this._states[key] = value; };  exports.removeState = function(key) {     if(!this.hasOwnProperty(key)) return;     delete this._states[key]; };  exports.getAllStates = function() {     return Object.keys(this._states); };  exports.getState = function(key) {     if(!this.hasOwnProperty(key)) return null;     return this._states[key]; };  exports.addState = function(key, value) {     if(!this.hasOwnProperty(key)) return;     this._states[key] = value; };  exports.removeState = function(key) {     if(!this.hasOwnProperty(key)) return;     delete this._states[key]; };  exports.getAllStates = function() {     return Object.keys(this._states); };  exports.getState = function(key) {     if(!this.hasOwnProperty(key)) return null;     return this._states[key]; };  exports.addState = function(key, value) {     if(!this.hasOwnProperty(key)) return;     this._states[key] = value; };  exports.removeState = function(key) {     if(!this.hasOwnProperty(key)) return;     delete this._states[key]; };  exports.getAllStates = function() {     return Object.keys(this._states); };  exports.getState = function(key) {     if(!this.hasOwnProperty(key)) return null;     return this._states[key]; };  exports.addState = function(key, value
: function(modelParam) {     if (!modelParam) {         modelParam = {};     }     if (typeof model ==='string') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined') {         modelParam[model] = {};     }     if (typeof modelParam[model] === 'undefined
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web
(this$, request, function(err, snapshot) {     if (err) {       return cb(err);     }     return cb(null, snapshot);   }); };  module.exports = {   requestToSave: requestToSave };
.prototype.addItem = function (item) {     this.items.push(item);     return this; };  GameSession.prototype.removeItem = function (item) {     this.items.splice(this.items.indexOf(item), 1);     return this; };  GameSession.prototype.getItem = function (item) {     return this.items[item]; };  GameSession.prototype.setItem = function (item, value) {     this.items[item] = value;     return this; };  GameSession.prototype.clearItem = function (item) {     this.items.splice(this.items.indexOf(item), 1);     return this; };  GameSession.prototype.getItems = function () {     return this.items; };  GameSession.prototype.addItem = function (item) {     this.items.push(item);     return this; };  GameSession.prototype.removeItem = function (item) {     this.items.splice(this.items.indexOf(item), 1);     return this; };  GameSession.prototype.getItem = function (item) {     return this.items[item]; };  GameSession.prototype.setItem = function (item, value) {     this.items[item] = value;     return this; };  GameSession.prototype.clearItem = function (item) {     this.items.splice(this.items.indexOf(item), 1);     return this; };  GameSession.prototype.getItems = function () {     return this.items; };  GameSession.prototype.addItem = function (item) {     this.items.push(item);     return this; };  GameSession.prototype.removeItem = function (item) {     this.items.splice(this.items.indexOf(item), 1);     return this; };  GameSession.prototype.getItem = function (item) {     return this.items[item]; };  GameSession.prototype.setItem = function (item, value) {     this.items[item] = value;     return this; };  GameSession.prototype.
module.exports = {   name: name,   id: id,   deps: deps,   getDependencies: getDependencies }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.name   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.id   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.name   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.id   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.name   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.id   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.name   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.id   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.name   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.id   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.name   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.id   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.name   }) }  function getDependencies(mod) {   return mod.deps.map(function(dep) {     return dep.id   }) }
(j, levels); }  function reverseBits(n, levels) {     var i = Math.floor(Math.random() * n);     var j = Math.floor(Math.random() * n);     var k = Math.floor(Math.random() * n);     return levels[i] + levels[j] + levels[k]; }
.prototype.render = function() {     var self = this;      if ( ds.test_mode ) { return; }      ds.test_mode = true;      ds.test_mode = false;      ds.test_mode = true;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_mode = false;      ds.test_
: true,   } }  export class TargetWithNoDropResult2 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult3 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult4 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult5 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult6 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult7 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult8 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult9 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult10 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult11 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult12 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult13 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDropResult14 extends DropTarget {   constructor() {     super()     this.didCallDrop = false;   } }  export class TargetWithNoDrop
.prototype._onDestroy = function() {     this._destroyed = true;     this.actor.disconnect('destroy');     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;     this.actor = null;
= require('../../../../lib/features/columns/field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field-field
: function() {     var self = this;      self.get = function(key) {         return document.getElementById(key);     };      self.set = function(key, value) {         document.getElementById(key).value = value;     };      self.remove = function(key) {         document.getElementById(key).parentNode.removeChild(document.getElementById(key));     };      self.clear = function() {         document.body.innerHTML = "";     };      return self; };
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_utils.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_
(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventListEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) { idxs(list, passedMessage, defaultMessage); } assertEventList
: function() {     var convData = getConverById(this.params.convId).fetch()[0];     if (!convData) {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status === 'active') {         return;     }     if (convData.status === 'closed') {         return;     }     if (convData.status
.add(seqs[seqs.length - 1]); seqs.splice(seqs.length - 1, 1); seqs.splice(seqs.length - 2, 1); seqs.splice(seqs.length - 3, 1); seqs.splice(seqs.length - 4, 1); seqs.splice(seqs.length - 5, 1); seqs.splice(seqs.length - 6, 1); seqs.splice(seqs.length - 7, 1); seqs.splice(seqs.length - 8, 1); seqs.splice(seqs.length - 9, 1); seqs.splice(seqs.length - 10, 1); seqs.splice(seqs.length - 11, 1); seqs.splice(seqs.length - 12, 1); seqs.splice(seqs.length - 13, 1); seqs.splice(seqs.length - 14, 1); seqs.splice(seqs.length - 15, 1); seqs.splice(seqs.length - 16, 1); seqs.splice(seqs.length - 17, 1); seqs.splice(seqs.length - 18, 1); seqs.splice(seqs.length - 19, 1); seqs.splice(seqs.length - 20, 1); seqs.splice(seqs.length - 21, 1); seqs.splice(seqs.length - 22, 1); seqs.splice(seqs.length - 23, 1); seqs.splice(seqs.length - 24, 1); seqs.splice(seqs.length - 25, 1); seqs.splice(seqs.length - 26, 1); seqs.splice(seqs.length - 27, 1); seqs.splice(seqs.length - 28, 1); seqs.splice(seqs.length - 29, 1); seqs.splice(seqs.length - 30, 1); seqs.splice(seqs.length - 31, 1); seqs.splice(seqs.length - 32, 1); seqs.splice(seqs.length - 33, 1); seqs.splice(seqs.length - 34, 1); seqs.splice(seqs.length - 35, 1); seqs.splice(seqs.length - 36, 1); seqs.splice(seqs.length - 37, 1); seqs.splice(seqs.length - 38, 1); seqs.splice(
= require('./helpers/service-tester');  describe('ServiceTester', () => {   let t;    beforeEach(() => {     t = new ServiceTester({ id: 'bower', title: 'Bower' });   });    afterEach(() => {     t = null;   });    it('should create a service tester', () => {     t.should.be.an('object');     t.should.have.property('id');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have.property('title');     t.should.have
: function(queueitem) {     if (!queueitem) {         return false;     }     if (!queueitem.hasOwnProperty('id')) {         return false;     }     if (!queueitem.hasOwnProperty('name')) {         return false;     }     if (!queueitem.hasOwnProperty('description')) {         return false;     }     if (!queueitem.hasOwnProperty('type')) {         return false;     }     if (!queueitem.hasOwnProperty('priority')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_type')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_id')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_name')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_description')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_type')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_id')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_name')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_description')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_type')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_id')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_name')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_description')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_type')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_id')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_name')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_description')) {         return false;     }     if (!queueitem.hasOwnProperty('priority_type'))
.prototype.save = function(){     var self = this;     var data = this.data;      if(!data){         data = {};         this.data = data;     }      if(!data[this.key]){         data[this.key] = [];     }      data[this.key].push(this.value);      return data; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.get = function(key){     return this.data[key]; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.set = function(key, value){     this.data[key] = value; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.delete = function(key){     delete this.data[key]; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.getString = function(key){     return this.data[key]; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.setString = function(key, value){     this.data[key] = value; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.deleteString = function(key){     delete this.data[key]; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.getArray = function(key){     return this.data[key]; };  /**  * @param {string} key  * @param {string} value  * @return {string}  */ Cat.prototype.setArray = function(key, value){     this.data[key
= require('./index.js');  module.exports = {   index: function(req, res, next) {     res.render('index', {       title: req.query.title,       description: req.query.description,       tags: req.query.tags     });   },   show: function(req, res, next) {     res.render('show', {       title: req.query.title,       description: req.query.description,       tags: req.query.tags     });   },   edit: function(req, res, next) {     res.render('edit', {       title: req.query.title,       description: req.query.description,       tags: req.query.tags     });   },   update: function(req, res, next) {     res.render('update', {       title: req.query.title,       description: req.query.description,       tags: req.query.tags     });   },   delete: function(req, res, next) {     res.render('delete', {       title: req.query.title,       description: req.query.description,       tags: req.query.tags     });   } };
.addEventListener('click', function(e) {     e.preventDefault();     var name = args.data.jsonObj.name;     var newValue = args.data.jsonObj.newValue;     var oldValue = args.data.jsonObj.oldValue;      if (newValue == oldValue) {         return;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null) {         oldValue = null;     }      if (newValue == null) {         newValue = null;     }      if (oldValue == null)
.prototype.foo = function() { this.foo = true; };  class Foo {   constructor() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo = true; }    foo() { this.foo
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_TAB_CONTENTS_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_TAB_CONTENTS_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_view.h" #include "content/public/browser/web_contents_view_delegate.h" #include "content/public/browser/web_contents_view_host.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_util.h" #include
(dom, context, mountQueue);         }     } }  function updateVnode(lastVnode, nextVnode, context, mountQueue) {     if (lastVnode === nextVnode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.nextSibling === nextVnode.nextSibling) {         return;     }     if (lastVnode.previousSibling === nextVnode.previousSibling) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.nextSibling === nextVnode.nextSibling) {         return;     }     if (lastVnode.previousSibling === nextVnode.previousSibling) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode === nextVnode.parentNode) {         return;     }     if (lastVnode.parentNode ===
Controller = function(controller) {     this.controller = controller; };  module.exports = AdGroupController;  AdGroupController.$inject = ['AdGroupController'];  function AdGroupController(AdGroupController) {     this.controller = AdGroupController; }  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController'];  AdGroupController.$inject = ['AdGroupController']
: function() {     var ia = aindex[ka];     if (!ia) {         ia = {};         aindex[ka] = ia;     }     return ia; };  var aindex = document.querySelectorAll('.aindex'); for (var i = 0; i < aindex.length; i++) {     var ia = aindex[i];     if (!ia) {         ia = {};         aindex[i] = ia;     }     ia = ia.parentNode;     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (ia) {         ia = ia.parentNode;     }     if (
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "components/keyed_service/core/keyed_service.h" #include "components/keyed_service/core/keyed_service_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource_bundle.h" #include "ui/gfx/canvas.h"
= require('../../');  module.exports = function () {   var self = this;    self.create = function () {     return new Base(this);   };    self.update = function () {     return new Base(this);   };    self.delete = function () {     return new Base(this);   };    self.deleteAll = function () {     return new Base(this);   };    self.get = function () {     return new Base(this);   };    self.getAll = function () {     return new Base(this);   };    self.getById = function (id) {     return new Base(this);   };    self.createById = function (id) {     return new Base(this);   };    self.updateById = function (id) {     return new Base(this);   };    self.deleteById = function (id) {     return new Base(this);   };    self.deleteAllById = function (id) {     return new Base(this);   };    self.getById = function (id) {     return new Base(this);   };    self.createById = function (id) {     return new Base(this);   };    self.updateById = function (id) {     return new Base(this);   };    self.deleteById = function (id) {     return new Base(this);   };    self.deleteAllById = function (id) {     return new Base(this);   };    self.getById = function (id) {     return new Base(this);   };    self.createById = function (id) {     return new Base(this);   };    self.updateById = function (id) {     return new Base(this);   };    self.deleteById = function (id) {     return new Base(this);   };
.prototype.addCollection = function(collection) {     if (!this.collections[collection]) {         this.collections[collection] = [];     }     this.collections[collection].push(collection);     return this.collections[collection].length; };  /**  * @param {Object} collection  * @param {Object} options  * @param {Function} callback  * @return {Object}  * @api public  */ exports.addCollection = function(collection, options, callback) {     if (!this.collections[collection]) {         this.collections[collection] = [];     }     this.collections[collection].push(options);     return this.collections[collection].length; };  /**  * @param {Object} collection  * @param {Object} options  * @param {Function} callback  * @return {Object}  * @api public  */ exports.removeCollection = function(collection, options, callback) {     if (!this.collections[collection]) {         this.collections[collection] = [];     }     this.collections[collection].splice(this.collections[collection].indexOf(options), 1);     return this.collections[collection].length; };  /**  * @param {Object} collection  * @param {Object} options  * @param {Function} callback  * @return {Object}  * @api public  */ exports.removeCollection = function(collection, options, callback) {     if (!this.collections[collection]) {         this.collections[collection] = [];     }     this.collections[collection].splice(this.collections[collection].indexOf(options), 1);     return this.collections[collection].length; };  /**  * @param {Object} collection  * @param {Object} options  * @param {Function} callback  * @return {Object}  * @api public  */ exports.removeCollection = function(collection, options, callback) {     if (!this.collections[collection]) {         this.collections[collection] = [];     }     this.collections[collection].splice(this.collections[collection].indexOf(options), 1);     return this.collections[collection
(info, line); }  function parseAuthor(line) {     if (line.indexOf('author')!== -1) {         var author = line.replace('author ', '');         info.author = author;         return true;     }     return false; }  module.exports = function (info, line) {     if (line.indexOf('author')!== -1) {         var author = line.replace('author ', '');         info.author = author;         return true;     }     return false; };
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/time/time.h" #include "base/values.h" #include "chrome/browser/chromeos/login/login_manager.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "grit/theme_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource_bundle.h" #include "ui/gfx/image/image.h" #include "ui/gfx/image/image_skia.h" #include "ui/views/controls/button/button.h" #include "ui/views/
: computed('childComponents.@each._isHeader', function() {debugger;     return this.get('childComponents').findBy('_isHeader');}) });
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/login_manager_delegate.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content
.js','memcached://127.0.0.1:' + cbIndex);     connections[i].url = url;     cbIndex++; }  var connections = {}; for (var i = 0; i < cbCount; i++) {     connections[i].url = connections[i].url.replace('memcached://127.0.0.1:' + cbIndex,'memcached://127.0.0.1:' + cbIndex);     cbIndex++; }  $(document).ready(function() {     $('.memcached').on('click', function(e) {         e.preventDefault();         var url = $(this).attr('href');         if (url.indexOf('memcached://127.0.0.1:' + cbIndex) > -1) {             $(this).attr('href', url.replace('memcached://127.0.0.1:' + cbIndex,'memcached://127.0.0.1:' + cbIndex));         } else {             $(this).attr('href', url.replace('memcached://127.0.0.1:' + cbIndex,'memcached://127.0.0.1:' + cbIndex));         }     });     $('.memcached').on('click', function(e) {         e.preventDefault();         var url = $(this).attr('href');         if (url.indexOf('memcached://127.0.0.1:' + cbIndex) > -1) {             $(this).attr('href', url.replace('memcached://127.0.0.1:' + cbIndex,'memcached://127.0.0.1:' + cbIndex));         } else {             $(this).attr('href', url.replace('memcached://127.0.0.1:' + cbIndex,'memcached://127.0.0.1:' + cbIndex));         }     });     $('.memcached').on('click', function(e) {         e.preventDefault();         var url = $(this).attr('href');         if (url.indexOf('memcached://127.0.0.1:' + cbIndex
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_PROVIDER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_PROVIDER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/login_manager.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_source.h" #include "content/public/browser/web_ui_util.h" #include "content/public/
.addEventListener('click', function(e) {   e.preventDefault()   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue(e.target.classList.contains('active'))   test.assertTrue
.prototype.render = function() {   var self = this;    this.$el.html('');   this.$el.append(this.$el.find('body'));   this.$el.append(this.$el.find('h1'));   this.$el.append(this.$el.find('h2'));   this.$el.append(this.$el.find('h3'));   this.$el.append(this.$el.find('h4'));   this.$el.append(this.$el.find('h5'));   this.$el.append(this.$el.find('h6'));   this.$el.append(this.$el.find('h7'));   this.$el.append(this.$el.find('h8'));   this.$el.append(this.$el.find('h9'));   this.$el.append(this.$el.find('h10'));   this.$el.append(this.$el.find('h11'));   this.$el.append(this.$el.find('h12'));   this.$el.append(this.$el.find('h13'));   this.$el.append(this.$el.find('h14'));   this.$el.append(this.$el.find('h15'));   this.$el.append(this.$el.find('h16'));   this.$el.append(this.$el.find('h17'));   this.$el.append(this.$el.find('h18'));   this.$el.append(this.$el.find('h19'));   this.$el.append(this.$el.find('h20'));   this.$el.append(this.$el.find('h21'));   this.$el.append(this.$el.find('h22'));   this.$el.append(this.$el.find('h23'));   this.$el.append(this.$el.find('h24'));   this.$el.append(this.$el.find('h25'));   this.$el.append(this.$el.find('h26'));
:'mb.core.printclient.btn.deactivate';                     $(this).val(Mapbender.trans(buttonText));                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplateSize();                     self._getTemplate
: function() {     var self = this;      wd.addEventListener("keydown", function(e) {         if (e.keyCode === 13) {             self.handleKeyDown(e);         }     });      wd.addEventListener("keyup", function(e) {         if (e.keyCode === 13) {             self.handleKeyUp(e);         }     });      wd.addEventListener("keydown", function(e) {         if (e.keyCode === 13) {             self.handleKeyDown(e);         }     });      wd.addEventListener("keyup", function(e) {         if (e.keyCode === 13) {             self.handleKeyUp(e);         }     });      wd.addEventListener("keydown", function(e) {         if (e.keyCode === 13) {             self.handleKeyDown(e);         }     });      wd.addEventListener("keyup", function(e) {         if (e.keyCode === 13) {             self.handleKeyUp(e);         }     });      wd.addEventListener("keydown", function(e) {         if (e.keyCode === 13) {             self.handleKeyDown(e);         }     });      wd.addEventListener("keyup", function(e) {         if (e.keyCode === 13) {             self.handleKeyUp(e);         }     });      wd.addEventListener("keydown", function(e) {         if (e.keyCode === 13) {             self.handleKeyDown(e);         }     });      wd.addEventListener("keyup", function(e) {         if (e.keyCode === 13) {             self.handleKeyUp(e);         }     });      wd.addEventListener("keydown", function(e) {         if (e.keyCode === 13) {             self.handleKeyDown(e);         }     });      wd.addEventListener("keyup", function(e) {         if (e
= Shade.Types[type];     if (_.isUndefined(bound_buffer)) throw "attribute requires valid bound buffer";     var bound_buffer_type = Shade.Types[bound_buffer.type];     if (_.isUndefined(bound_buffer_type)) throw "attribute requires valid bound buffer type";     var bound_buffer_name = Shade.Types[bound_buffer.name];     if (_.isUndefined(bound_buffer_name)) throw "attribute requires valid bound buffer name";     var bound_buffer_value = Shade.Types[bound_buffer.value];     if (_.isUndefined(bound_buffer_value)) throw "attribute requires valid bound buffer value";     var bound_buffer_type = Shade.Types[bound_buffer.type];     if (_.isUndefined(bound_buffer_type)) throw "attribute requires valid bound buffer type";     var bound_buffer_name = Shade.Types[bound_buffer.name];     if (_.isUndefined(bound_buffer_name)) throw "attribute requires valid bound buffer name";     var bound_buffer_value = Shade.Types[bound_buffer.value];     if (_.isUndefined(bound_buffer_value)) throw "attribute requires valid bound buffer value";     var bound_buffer_type = Shade.Types[bound_buffer.type];     if (_.isUndefined(bound_buffer_type)) throw "attribute requires valid bound buffer type";     var bound_buffer_name = Shade.Types[bound_buffer.name];     if (_.isUndefined(bound_buffer_name)) throw "attribute requires valid bound buffer name";     var bound_buffer_value = Shade.Types[bound_buffer.value];     if (_.isUndefined(bound_buffer_value)) throw "attribute requires valid bound buffer value";     var bound_buffer_type = Shade.Types[bound_buffer.type];     if (_.isUndefined(bound_buffer_type)) throw "attribute requires valid bound buffer type";     var bound_buffer_name = Shade.Types[bound_buffer.name];     if (_.isUndefined(bound_buffer_name)) throw "attribute requires valid bound buffer name";     var bound_buffer_value = Shade.Types[bound_buffer.value];     if (_.isUndefined(bound_buffer_value))
.initTabs(TW.TabManager.tabs); TW.TabManager.addTab(TW.TabManager.tabs[0]); TW.TabManager.addTab(TW.TabManager.tabs[1]); TW.TabManager.addTab(TW.TabManager.tabs[2]); TW.TabManager.addTab(TW.TabManager.tabs[3]); TW.TabManager.addTab(TW.TabManager.tabs[4]); TW.TabManager.addTab(TW.TabManager.tabs[5]); TW.TabManager.addTab(TW.TabManager.tabs[6]); TW.TabManager.addTab(TW.TabManager.tabs[7]); TW.TabManager.addTab(TW.TabManager.tabs[8]); TW.TabManager.addTab(TW.TabManager.tabs[9]); TW.TabManager.addTab(TW.TabManager.tabs[10]); TW.TabManager.addTab(TW.TabManager.tabs[11]); TW.TabManager.addTab(TW.TabManager.tabs[12]); TW.TabManager.addTab(TW.TabManager.tabs[13]); TW.TabManager.addTab(TW.TabManager.tabs[14]); TW.TabManager.addTab(TW.TabManager.tabs[15]); TW.TabManager.addTab(TW.TabManager.tabs[16]); TW.TabManager.addTab(TW.TabManager.tabs[17]); TW.TabManager.addTab(TW.TabManager.tabs[18]); TW.TabManager.addTab(TW.TabManager.tabs[19]); TW.TabManager.addTab(TW.TabManager.tabs[20]); TW.TabManager.addTab(TW.TabManager.tabs[21]); TW.TabManager.addTab(TW.TabManager.tabs[22]); TW.TabManager.addTab(TW.TabManager.tabs[23]); TW.TabManager.addTab(TW.TabManager.tabs[24]); TW.TabManager.addTab(TW.TabManager.tabs[25]); TW.TabManager.addTab(TW.TabManager.tabs[26]); TW.TabManager.addTab(TW.TabManager
= Blockly.Language.logic_compare.MSG_GT; break; case Blockly.Language.logic_compare.MSG_LT:       operator = '<'; WebACL = Blockly.Language.logic_compare.MSG_LT; break; case Blockly.Language.logic_compare.MSG_EQ:       operator = '='; WebACL = Blockly.Language.logic_compare.MSG_EQ; break; case Blockly.Language.logic_compare.MSG_NE:       operator = '!='; WebACL = Blockly.Language.logic_compare.MSG_NE; break; case Blockly.Language.logic_compare.MSG_GE:       operator = '>='; WebACL = Blockly.Language.logic_compare.MSG_GE; break; case Blockly.Language.logic_compare.MSG_LE:       operator = '<='; WebACL = Blockly.Language.logic_compare.MSG_LE; break; case Blockly.Language.logic_compare.MSG_LT:       operator = '<'; WebACL = Blockly.Language.logic_compare.MSG_LT; break; case Blockly.Language.logic_compare.MSG_EQ:       operator = '='; WebACL = Blockly.Language.logic_compare.MSG_EQ; break; case Blockly.Language.logic_compare.MSG_NE:       operator = '!='; WebACL = Blockly.Language.logic_compare.MSG_NE; break; case Blockly.Language.logic_compare.MSG_GE:       operator = '>='; WebACL = Blockly.Language.logic_compare.MSG_GE; break; case Blockly.Language.logic_compare.MSG_LE:       operator = '<='; WebACL = Blockly.Language.logic_compare.MSG_LE; break; case Blockly.Language.logic_compare.MSG_LT:       operator = '<'; WebACL = Blockly.Language.logic_compare.MSG_LT; break; case Blockly.Language.logic_compare.MSG_EQ:       operator = '='; WebACL = Blockly.Language.logic_compare.MSG_EQ; break; case Blockly.Language.logic_compare.MSG_NE:       operator = '!='; WebACL = Blockly.Language.logic_compare.MSG_NE; break; case Blockly.Language.logic_compare.MSG_GE:       operator = '>='; WebACL = Blockly.Language.logic_compare.MSG_GE; break; case Blockly.Language
: function() {     this.situation.loops = false;     this.situation.loops = true;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;
.addEventListener('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('ajax:error', function() {     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-empty');     $(this).toggleClass('glyphicon-star'); });  $('.star a').bind('click', function(e) {     e.preventDefault();     $(this).toggleClass('glyphicon-star-
.java  /*  * #%L  * Matos  * $Id:$  * $HeadURL:$  * %%  * Copyright (C) 2010 - 2014 Orange SA  * %%  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  * #L%  */  package org.matos.domain;  import java.io.Serializable; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.FetchType; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.JoinColumn; import javax.persistence.ManyToOne; import javax.persistence.OneToMany; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; import javax.validation.constraints.NotNull; import javax.validation.constraints.Size; import javax.xml.bind.annotation.XmlAccessType; import javax.xml.bind.annotation.XmlAccessorType; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlElementWrapper; import javax.xml.bind.annotation.XmlRootElement; import javax.xml.bind.annotation.XmlType;   /**  * <p>  * Java class for anonymous complex type.  *   * <p>  * The following schema fragment specifies the expected content contained within this class.  *   * <pre>  * &lt;complexType>  *   &lt;complexContent>  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType
.prototype = {      /**      * @param {String} className      * @param {Object} icons      */     constructor: function(className, icons) {         this.className = className;         this.icons = icons;     },      /**      * @return {String}      */     getClassName: function() {         return this.className;     },      /**      * @return {Object}      */     getIcons: function() {         return this.icons;     },      /**      * @param {String} name      * @return {Boolean}      */     hasIcon: function(name) {         return this.icons.hasOwnProperty(name);     },      /**      * @param {String} name      * @return {Boolean}      */     hasName: function(name) {         return this.names.hasOwnProperty(name);     },      /**      * @param {String} name      * @return {Boolean}      */     hasIcon: function(name) {         return this.hasIcon(name);     },      /**      * @param {String} name      * @return {Boolean}      */     hasName: function(name) {         return this.hasName(name);     },      /**      * @param {String} name      * @return {Boolean}      */     hasIcon: function(name) {         return this.hasIcon(name);     },      /**      * @param {String} name      * @return {Boolean}      */     hasName: function(name) {         return this.hasName(name);     },      /**      * @param {String} name      * @return {Boolean}      */     hasIcon: function(name) {         return this.hasIcon(name);     },      /**      * @param {String} name      * @return {Boolean}      */     hasName: function(name) {         return this.hasName(name);     },      /**
(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return float.test(str); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str, options) { return isFloat(str, options); }  /**  * @param {string} str  * @param {object} options  * @returns {boolean}  */ function isFloat(str,
import React, { Component } from'react'; import { connect } from'react-redux'; import { bindActionCreators } from'redux'; import { Link } from'react-router-dom'; import { withRouter } from'react-router-dom'; import * as actions from '../actions/index';  const mapStateToProps = (state) => {   return state; };  const mapDispatchToProps = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps2 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps3 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps4 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps5 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps6 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps7 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps8 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps9 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps10 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps11 = (dispatch) => {   return {     actions: bindActionCreators(actions, dispatch)   }; };  const mapDispatchToProps12 =
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/chromeos/login/user_manager_observer.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/
: function () {     var self = this;      this.add = function (item) {         if (!item) {             return;         }          if (self.items.indexOf(item) === -1) {             self.items.push(item);         } else {             self.items.splice(self.items.indexOf(item), 1);         }     };      this.remove = function (item) {         if (!item) {             return;         }          if (self.items.indexOf(item) === -1) {             self.items.splice(self.items.indexOf(item), 1);         } else {             self.items.splice(self.items.indexOf(item), 0, item);         }     };      this.list = function () {         var self = this;          self.items.forEach(function (item) {             if (!item) {                 return;             }              if (self.items.indexOf(item) === -1) {                 self.items.splice(self.items.indexOf(item), 1);             } else {                 self.items.splice(self.items.indexOf(item), 0, item);             }         });     };      this.clear = function () {         var self = this;          self.items.forEach(function (item) {             if (!item) {                 return;             }              if (self.items.indexOf(item) === -1) {                 self.items.splice(self.items.indexOf(item), 1);             } else {                 self.items.splice(self.items.indexOf(item), 0, item);             }         });     };      this.clearAll = function () {         var self = this;          self.items.forEach(function (item) {             if (!item) {                 return;             }              if (self.items.indexOf(item) === -1) {                 self.items.splice(self.items.indexOf(item), 1);             } else
.prototype = {      /**      * @param {string} name      * @param {string} value      */     set: function(name, value) {         this[name] = value;     },      /**      * @param {string} name      * @return {string}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {string}      */     remove: function(name) {         delete this[name];     },      /**      * @param {string} name      * @return {boolean}      */     has: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {string}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {string}      */     set: function(name, value) {         this[name] = value;     },      /**      * @param {string} name      * @return {boolean}      */     has: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {string}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {string}      */     remove: function(name) {         delete this[name];     },      /**      * @param {string} name      * @return {boolean}      */     has: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {string}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_observer.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_utils.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_view.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_view_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_view_utils.h" #include "chrome/browser/ui/webui/ch
import React, { Component } from'react' import { connect } from'react-redux' import { bindActionCreators } from'redux' import { bindActionCreatorsWithRouter } from'redux-router-dom' import { connectWithRouter } from'redux-router-redux' import { withRouter } from'react-router-redux' import { withState } from'react-router-redux' import { withRouterHistory } from'react-router-history' import { withRouterRouter } from'react-router-redux' import { withRouterHistoryWithRouter } from'react-router-history-with-router' import { withStateWithRouter } from'react-router-redux-with-router' import { withStateWithRouterHistory } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-history' import { withStateWithRouterHistoryWithRouter } from'react-router-redux-with-router-
(bind) {   if (typeof bind!=='string') {     console.error(bind +'is not a string')     process.exit(1)   }   if (typeof bind!== 'number') {     console.error(bind +'is not a number')     process.exit(1)   }   if (typeof bind!== 'boolean') {     console.error(bind +'is not a boolean')     process.exit(1)   }   if (typeof bind!=='string') {     console.error(bind +'is not a string')     process.exit(1)   }   if (typeof bind!== 'number') {     console.error(bind +'is not a number')     process.exit(1)   }   if (typeof bind!== 'boolean') {     console.error(bind +'is not a boolean')     process.exit(1)   }   if (typeof bind!=='string') {     console.error(bind +'is not a string')     process.exit(1)   }   if (typeof bind!== 'number') {     console.error(bind +'is not a number')     process.exit(1)   }   if (typeof bind!== 'boolean') {     console.error(bind +'is not a boolean')     process.exit(1)   }   if (typeof bind!=='string') {     console.error(bind +'is not a string')     process.exit(1)   }   if (typeof bind!== 'number') {     console.error(bind +'is not a number')     process.exit(1)   }   if (typeof bind!== 'boolean') {     console.error(bind +'is not a boolean')     process.exit(1)   }   if (typeof bind!=='string') {     console.error(bind +'is not a string')     process.exit(1)   }   if (typeof bind!== 'number') {     console.error(bind +'is not a number')     process.exit(1)   }
.prototype.render = function() {     var self = this;     this.domNode.classList.add('menu-item');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add('menu-item-active');     this.domNode.classList.add
.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()   document.location.href = "/world.html#" + hoodie.account.username + '/' + worldName })  document.addEventListener('click', function(e) {   e.preventDefault()
.prototype.render = function() {   var self = this;   var scale = this.state.scale;    if (scale.range()[0] < 0) {     scale.range()[0] = 0;   }    if (scale.range()[1] < 0) {     scale.range()[1] = 0;   }    if (scale.range()[2] < 0) {     scale.range()[2] = 0;   }    if (scale.range()[3] < 0) {     scale.range()[3] = 0;   }    if (scale.range()[4] < 0) {     scale.range()[4] = 0;   }    if (scale.range()[5] < 0) {     scale.range()[5] = 0;   }    if (scale.range()[6] < 0) {     scale.range()[6] = 0;   }    if (scale.range()[7] < 0) {     scale.range()[7] = 0;   }    if (scale.range()[8] < 0) {     scale.range()[8] = 0;   }    if (scale.range()[9] < 0) {     scale.range()[9] = 0;   }    if (scale.range()[10] < 0) {     scale.range()[10] = 0;   }    if (scale.range()[11] < 0) {     scale.range()[11] = 0;   }    if (scale.range()[12] < 0) {     scale.range()[12] = 0;   }    if (scale.range()[13] < 0) {     scale.range()[13] = 0;   }    if (scale.range()[14] < 0) {     scale.range()[14] = 0;   }    if (scale.range()[15] < 0) {     scale
.controller('FlowLayoutController', ['$scope', '$stateParams', '$location', '$locationParams',     function($scope, $stateParams, $location, $locationParams) {          $scope.currentPage = 1;         $scope.currentPageNumber = 1;         $scope.currentPageTitle = 1;         $scope.currentPageDescription = 1;         $scope.currentPageKeywords = 1;         $scope.currentPageLinks = 1;         $scope.currentPageLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;         $scope.currentPageLinksDescription = 1;         $scope.currentPageLinksKeywords = 1;         $scope.currentPageLinksLinks = 1;         $scope.currentPageLinksLinksTitle = 1;
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/time/time.h" #include "base/values.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_
: this.data[i] })                 this.headers.push(row)             }         }     }      this.headers.sort(cmp(function(h){         return this.order.indexOf(h)     }))      this.data.sort(cmp(function(d){         return this.order.indexOf(d)     }))      for(var i in this.data) {         var row = new JsonRow(this.data[i])         this.headers.push(row)     }      this.headers.sort(cmp(function(h){         return this.order.indexOf(h)     }))      this.data.sort(cmp(function(d){         return this.order.indexOf(d)     }))      for(var i in this.data) {         var row = new JsonRow(this.data[i])         this.headers.push(row)     }      this.headers.sort(cmp(function(h){         return this.order.indexOf(h)     }))      this.data.sort(cmp(function(d){         return this.order.indexOf(d)     }))      for(var i in this.data) {         var row = new JsonRow(this.data[i])         this.headers.push(row)     }      this.headers.sort(cmp(function(h){         return this.order.indexOf(h)     }))      this.data.sort(cmp(function(d){         return this.order.indexOf(d)     }))      for(var i in this.data) {         var row = new JsonRow(this.data[i])         this.headers.push(row)     }      this.headers.sort(cmp(function(h){         return this.order.indexOf(h)     }))      this.data.sort(cmp(function(d){         return this.order.indexOf(d)     }))      for(var i in this.data) {         var row =
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public
.filter = function(args) {     if (!args) {         args = [];     }     if (args.length === 0) {         return false;     }     if (args.length === 1) {         return args[0];     }     if (args.length === 2) {         return args[1];     }     if (args.length === 3) {         return args[2];     }     if (args.length === 4) {         return args[3];     }     if (args.length === 5) {         return args[4];     }     if (args.length === 6) {         return args[5];     }     if (args.length === 7) {         return args[6];     }     if (args.length === 8) {         return args[7];     }     if (args.length === 9) {         return args[8];     }     if (args.length === 10) {         return args[9];     }     if (args.length === 11) {         return args[10];     }     if (args.length === 12) {         return args[11];     }     if (args.length === 13) {         return args[12];     }     if (args.length === 14) {         return args[13];     }     if (args.length === 15) {         return args[14];     }     if (args.length === 16) {         return args[15];     }     if (args.length === 17) {         return args[16];     }     if (args.length === 18) {         return args[17];     }     if (args.length === 19) {         return args[18];     }     if (args.length === 20) {         return args[19];     }     if (args.length === 21) {         return args[20];     }     if (args.length === 22) {         return args[21];     }     if (args
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this.$el.children());     this.$el.append(this
(sendData) if (option.type === 'PUT') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'PATCH') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'DELETE') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'HEAD') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'OPTIONS') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'HEAD') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'OPTIONS') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'HEAD') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')       sendData = {} } if (option.type === 'OPTIONS') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-
.prototype.unbind = function (metricsService) {     $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send", this.sendOverride);        $A.uninstallOverride("ClientService.send
= function(p) {     if (p[0] === '!') {      throw "didn't handle special property " + p;     } else if (p === "prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype.prototype" || p === "prototype
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_EXTENSIONS_API_EXTENSION_SETUP_H_ #define CHROME_BROWSER_EXTENSIONS_API_EXTENSION_SETUP_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/extensions/api/extension_api.h" #include "chrome/browser/extensions/api/extension_set.h" #include "chrome/browser/extensions/extension_system.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web
: function() {     var self = this;     $(document).ready(function() {         $(window).resize(function() {             self.resize();         });     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {         self.resize();     });     $(window).resize(function() {
.java  /*  * #%L  * Matos  * $Id:$  * $HeadURL:$  * %%  * Copyright (C) 2010 - 2014 Orange SA  * %%  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  * #L%  */  package org.matos.domain;  import java.io.Serializable; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.FetchType; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.JoinColumn; import javax.persistence.ManyToOne; import javax.persistence.OneToMany; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; import javax.validation.constraints.NotNull; import javax.validation.constraints.Size; import javax.xml.bind.annotation.XmlAccessType; import javax.xml.bind.annotation.XmlAccessorType; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlElementWrapper; import javax.xml.bind.annotation.XmlRootElement; import javax.xml.bind.annotation.XmlTransient; import javax.xml.bind.annotation.XmlType; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder; import org.apache.commons.lang.builder.ToStringStyle; import org.apache.commons.lang.builder.
: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   date: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   time: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   url: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   email: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   url: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   url: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   url: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/;     return regex.test(value) && params[field] && params[field].match(regex);   },   url: function(field, value, params) {     var regex = /^\-?[0-9]*\.?[0-9]+$/
: function(point) {     //console.log('>>>', point);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);     //console.log('>>>', point.phase);
.prototype.get = function(cmd, args, cb) {     var rs = this._db[cmd].apply(this._db, args);     if (cb) process.nextTick(() => { cb(rs); });        return rs; };  module.exports = Jedis;
(olds, news); };  export default function (olds, news) {     if (!olds || olds.length!== news.length) {         return news;     }      return olds.slice(0, news.length).concat(news.slice(0, olds.length)); };
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/prefs/pref_service.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/
.addEventListener('click', function (e) {     e.preventDefault();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();     } else {         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stop
(gitlabHost).then(function (projectName) {         var regexParseProjectName = new RegExp(".+[:/](.+\/.+)\.git");         var gitlabPort = URL.parse(gitlabURL).port;         var gitlabUser = URL.parse(gitlabURL).user;         var gitlabPassword = URL.parse(gitlabURL).password;         var regexParseProjectName = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName2 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName3 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName4 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName5 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName6 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName7 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName8 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName9 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName10 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName11 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName12 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName13 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName14 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName15 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName16 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName17 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName18 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName19 = new RegExp(".+[:/](.+\/.+)\.git");         var regexParseProjectName20 = new RegExp("
.prototype.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function toString(it){ return $toString.call(this, it); }  module.exports.toString = function
(__executed); __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=1; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=2; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=3; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=4; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=5; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=6; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=7; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=8; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=9; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=10; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["abcdefghi"]; __expected.index=11; __executed = /a[a-z]{2,4}/.exec(new Object("abcdefghi")); __expected = ["
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_views.h" #include "content/public/browser/web_ui_views_delegate.h" #include "content/public/browser/web_ui_views
('#1: The Date.prototype.getUTCSeconds.getUTCSeconds has the attribute DontEnum');}?>  <?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\MXF;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Time extends AbstractTag {      protected $Id = 'Time';      protected $Name = 'Time';      protected $FullName = 'MXF::Main';      protected $GroupName = 'MXF';      protected $g0 = 'MXF';      protected $g1 = 'MXF';      protected $g2 = 'Video';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Time';  }
.h"  #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <netdb.h> #include <errno.h> #include <fcntl.h> #include <errno.h> #include <stdarg.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/stat.h> #include <sys/types.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <netinet/tcp.h> #include <netinet/ip.h> #include <netinet/ip6.h> #include <arpa/inet_pton.h> #include <netinet/ip6_pton.h> #include <netinet/tcpip.h> #include <netinet/ip6_pton.h> #include <netinet/udp.h> #include <arpa/inet_pton.h> #include <netinet/udp4.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h> #include <arpa/inet_pton.h>
.prototype.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$.logger(this, data)     this.emit('log', data) }  module.exports.log = function(data) {     this.private$
.addEventListener('click', function (e) {   e.preventDefault();   var div = document.getElementById(e.target.id);   if (div) {     div.style.display = 'none';   } else {     div = document.createElement('div');     div.id = e.target.id;     div.style.display = 'block';     div.style.width = '100%';     div.style.height = '100%';     div.style.position = 'absolute';     div.style.top = '0';     div.style.left = '0';     div.style.width = '100%';     div.style.height = '100%';     div.style.position = 'absolute';     div.style.top = '0';     div.style.left = '0';     div.style.width = '100%';     div.style.height = '100%';     div.style.position = 'absolute';     div.style.top = '0';     div.style.left = '0';     div.style.width = '100%';     div.style.height = '100%';     div.style.position = 'absolute';     div.style.top = '0';     div.style.left = '0';     div.style.width = '100%';     div.style.height = '100%';     div.style.position = 'absolute';     div.style.top = '0';     div.style.left = '0';     div.style.width = '100%';     div.style.height = '100%';     div.style.position = 'absolute';     div.style.top = '0';     div.style.left = '0';     div.style.width = '100%';     div.style.height = '100%';     div.style.position = 'absolute';     div.style.top = '0';     div.style.left = '0';     div.style.width = '100%';     div.style.height = '
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_JSON_SCHEMA_TABLE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_JSON_SCHEMA_TABLE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_version.h" #include "content/public/browser/web_ui_
= require('./index');  module.exports = function(app) {   app.use(favicon(__dirname + '/public/favicon.ico'));   app.use(logger('dev'));   app.use(service);   app.use(function(req, res, next) {     res.header('Access-Control-Allow-Origin', '*');     res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');     res.header('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');     next();   });    app.use(function(req, res, next) {     res.header('Access-Control-Allow-Origin', '*');     res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');     res.header('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');     next();   });    app.use(function(req, res, next) {     res.header('Access-Control-Allow-Origin', '*');     res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');     res.header('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');     next();   });    app.use(function(req, res, next) {     res.header('Access-Control-Allow-Origin', '*');     res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');     res.header('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');     next();   });    app.use(function(req, res, next) {     res.header('Access-Control-Allow-Origin', '*');     res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');     res.header('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');     next();   });    app.use(function
import React, { Component } from'react'; import PropTypes from 'prop-types'; import { connect } from'react-redux'; import { Link } from'react-router-dom'; import { withRouter } from'react-router-dom'; import styles from './styles.scss';  class App extends Component {   render() {     return (       <div>         <div className={styles.container}>           <div className={styles.header}>             <h1 className={styles.title}>{this.props.title}</h1>           </div>           <div className={styles.content}>             {this.props.content}           </div>         </div>       </div>     );   } }  App.propTypes = {   title: PropTypes.string.isRequired,   content: PropTypes.string.isRequired };  const mapStateToProps = state => ({   title: state.title,   content: state.content });  App.contextTypes = {   router: PropTypes.object.isRequired };  const mapDispatchToProps = dispatch => {   return {     dispatch: dispatch   }; };  export default connect(   mapStateToProps,   mapDispatchToProps )(App);
: function(line) {     if (typeof line ==='string') {       var data = /^([^\(]+)\s*(<([^>]*)>)?\s*(\((https?:\/\/[^\)]+)\))?/.exec(line)     if (data) {         return data[1]     } else {         return line     } }  module.exports = function(line) {     if (typeof line ==='string') {       var data = /^([^\(]+)\s*(<([^>]*)>)?\s*(\((https?:\/\/[^\)]+)\))?/.exec(line)     if (data) {         return data[1]     } else {         return line     } }  module.exports = function(line) {     if (typeof line ==='string') {       var data = /^([^\(]+)\s*(<([^>]*)>)?\s*(\((https?:\/\/[^\)]+)\))?/.exec(line)     if (data) {         return data[1]     } else {         return line     } }  module.exports = function(line) {     if (typeof line ==='string') {       var data = /^([^\(]+)\s*(<([^>]*)>)?\s*(\((https?:\/\/[^\)]+)\))?/.exec(line)     if (data) {         return data[1]     } else {         return line     } }  module.exports = function(line) {     if (typeof line ==='string') {       var data = /^([^\(]+)\s*(<([^>]*)>)?\s*(\((https?:\/\/[^\)]+)\))?/.exec(line)     if (data) {         return data[1]     } else {         return line     } }  module.exports = function(line) {     if (typeof line ==='string') {       var data = /^([^\(]+)\s*(<([^>]*)>)?\s*(\((https?:\/\/[^\)]+)\))?/.exec(line)     if (data) {         return data[1]     } else {         return line     } }  module.exports
.prototype.parseFeature = function(feature) {     if (typeof feature ==='string') {         feature = feature.trim();     }     if (!feature) {         return null;     }     if (feature.length === 0) {         return null;     }     if (feature.charAt(0) === '#') {         feature = feature.substr(1);     }     if (feature.charAt(feature.length - 1) === '#') {         feature = feature.substr(0, feature.length - 1);     }     if (feature.charAt(feature.length - 2) === '#') {         feature = feature.substr(0, feature.length - 2);     }     if (feature.charAt(feature.length - 3) === '#') {         feature = feature.substr(0, feature.length - 3);     }     if (feature.charAt(feature.length - 4) === '#') {         feature = feature.substr(0, feature.length - 4);     }     if (feature.charAt(feature.length - 5) === '#') {         feature = feature.substr(0, feature.length - 5);     }     if (feature.charAt(feature.length - 6) === '#') {         feature = feature.substr(0, feature.length - 6);     }     if (feature.charAt(feature.length - 7) === '#') {         feature = feature.substr(0, feature.length - 7);     }     if (feature.charAt(feature.length - 8) === '#') {         feature = feature.substr(0, feature.length - 8);     }     if (feature.charAt(feature.length - 9) === '#') {         feature = feature.substr(0, feature.length - 9);     }     if (feature.charAt(feature.length - 10) === '#') {         feature = feature.substr(0, feature.length - 10);     }     if (feature.charAt(feature.length - 11) === '#') {         feature = feature.substr(0, feature.length - 11);
: (subscriptionData) => {          debugger;           const returnResult = Immutable.Map(subscriptionData); }  export default {   query: query,   updateQuery: updateQuery,   subscriptionData: subscriptionData };
.prototype.render = function() {     var self = this;     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel(this._hScaler).apply(this._hScaler, arguments);     this._hScaler.scaler.getTransformerFromModel
(this.favoriteColors);     this.updateFastColorPickMenu();     this.setUiColor(rgbaToHex(this.favoriteColors[0].color));   }  function rgbaToHex(color) {     return color.toString(16); }  function updateFastColorPickMenu() {     if (this.favoriteColors && this.favoriteColors.length) {         for (var i = 0; i < this.favoriteColors.length; i++) {             this.setUiColor(rgbaToHex(this.favoriteColors[i].color));         }     } }  function updateFastColorPickMenu() {     if (this.favoriteColors && this.favoriteColors.length) {         for (var i = 0; i < this.favoriteColors.length; i++) {             this.setUiColor(rgbaToHex(this.favoriteColors[i].color));         }     } }  function updateFastColorPickMenu() {     if (this.favoriteColors && this.favoriteColors.length) {         for (var i = 0; i < this.favoriteColors.length; i++) {             this.setUiColor(rgbaToHex(this.favoriteColors[i].color));         }     } }  function updateFastColorPickMenu() {     if (this.favoriteColors && this.favoriteColors.length) {         for (var i = 0; i < this.favoriteColors.length; i++) {             this.setUiColor(rgbaToHex(this.favoriteColors[i].color));         }     } }  function updateFastColorPickMenu() {     if (this.favoriteColors && this.favoriteColors.length) {         for (var i = 0; i < this.favoriteColors.length; i++) {             this.setUiColor(rgbaToHex(this.favoriteColors[i].color));         }     } }  function updateFastColorPickMenu() {     if (this.favoriteColors && this.
: function() {     var self = this;      this.asset_swf_v = "http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf";     this.admin_props = false;      this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf", "");     this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf", "");     this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf", "");     this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf", "");     this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf", "");     this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf", "");     this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c2.glitch.bz\/items\/2012_04\/upgrade_card_reshuffle-1334013016.swf", "");     this.asset_swf_v = this.asset_swf_v.replace("http:\/\/c
.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.preventDefault();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();     e.stopPropagation();
: function () {     var _this = this;      return function () {         if (_this._isInitialized) {             return;         }          _this._isInitialized = true;          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_this._isInitialized) {             return;         }          if (_
: function(params) {     if (!params) {         params = {};     }     if (!params.use) {         params.use = '';     }     if (!params.useid) {         params.useid = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {         params.use = '';     }     if (!params.use) {
: function () {     var _this = this;      if (!_this.logoImage) {         _this.logoImage = document.createElement('img');         _this.logoImage.src = 'images/logo.png';         document.body.appendChild(_this.logoImage);     }      if (!_this.logoScale) {         _this.logoScale = 1;     }      if (_this.logoScale === 1) {         _this.logoScale = 2;     }      if (_this.logoScale === 2) {         _this.logoScale = 3;     }      if (_this.logoScale === 3) {         _this.logoScale = 4;     }      if (_this.logoScale === 4) {         _this.logoScale = 5;     }      if (_this.logoScale === 5) {         _this.logoScale = 6;     }      if (_this.logoScale === 6) {         _this.logoScale = 7;     }      if (_this.logoScale === 7) {         _this.logoScale = 8;     }      if (_this.logoScale === 8) {         _this.logoScale = 9;     }      if (_this.logoScale === 9) {         _this.logoScale = 10;     }      if (_this.logoScale === 10) {         _this.logoScale = 11;     }      if (_this.logoScale === 11) {         _this.logoScale = 12;     }      if (_this.logoScale === 12) {         _this.logoScale = 13;     }      if (_this.logoScale === 13) {         _this.logoScale = 14;     }      if (_this.logoScale === 14) {         _this.logoScale = 15;     }      if (_this.logoScale === 15) {         _this.logoScale = 16;     }      if (_this
.prototype.utils = {     formatTime: function( start_date ) {         var date = new Date( start_date.getTime() );         var hours = date.getHours();         var minutes = date.getMinutes();         var seconds = date.getSeconds();         return hours + ':' + minutes + ':' + seconds;     },     formatDate: function( start_date ) {         var date = new Date( start_date.getTime() );         var hours = date.getHours();         var minutes = date.getMinutes();         var seconds = date.getSeconds();         return hours + ':' + minutes + ':' + seconds;     } };  Eventbrite.prototype.utils.formatTime = function( start_date ) {     var date = new Date( start_date.getTime() );     var hours = date.getHours();     var minutes = date.getMinutes();     var seconds = date.getSeconds();     return hours + ':' + minutes + ':' + seconds; };  Eventbrite.prototype.utils.formatDate = function( start_date ) {     var date = new Date( start_date.getTime() );     var hours = date.getHours();     var minutes = date.getMinutes();     var seconds = date.getSeconds();     return hours + ':' + minutes + ':' + seconds; };  Eventbrite.prototype.utils.formatHours = function( start_date ) {     var date = new Date( start_date.getTime() );     var hours = date.getHours();     var minutes = date.getMinutes();     var seconds = date.getSeconds();     return hours + ':' + minutes + ':' + seconds; };  Eventbrite.prototype.utils.formatMinutes = function( start_date ) {     var date = new Date( start_date.getTime() );     var hours = date.getHours();     var minutes = date.getMinutes();     var seconds = date.getSeconds();     return hours + ':' + minutes + ':' + seconds; };  Eventbrite.prototype.utils.formatSeconds = function( start_date ) {     var date = new Date( start_date
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_EXTENSIONS_EXTENSION_BROWSER_DATA_STORE_H_ #define CHROME_BROWSER_EXTENSIONS_EXTENSION_BROWSER_DATA_STORE_H_  #include <map> #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_vector_hash_map.h" #include "base/memory/weak_set.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable_observer.h" #include "base/prefs/pref_service_syncable_user.h" #include "base/prefs/pref_service_syncable_version.h" #include "base/prefs/pref_service_syncable_version_info.h" #include "base/prefs/pref_service_syncable_version_tracker.h" #include "base/prefs/pref_service_syncable_version_tracker_factory.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable_version.h" #include "base/prefs/pref_service_syncable_version_tracker.h" #include "base/prefs/pref_service_syncable_version_tracker_factory.h" #include "base/prefs/pref_service_syncable_
: function() {     var self = this;     $(document).ready(function() {         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.toggle();         });         $(document).on('click', '[data-toggle="tooltip"]', function(e) {             e.preventDefault();             self.
.prototype, {     constructor: function() {         var that = this;         this.columns_ = this.columns_.getKeys().map(function(colName) {             that[colName] = new lf.schema.BaseColumn(that[colName]);             return that[colName];         });     },      getColumns: function() {         return this.columns_;     },      addColumn: function(column) {         this.columns_.push(column);     },      removeColumn: function(column) {         this.columns_.splice(this.columns_.indexOf(column), 1);     },      removeAllColumns: function() {         this.columns_.forEach(function(column) {             that.removeColumn(column);         });     },      getColumn: function(colName) {         return this.columns_.get(colName);     },      addColumn: function(column) {         this.columns_.push(column);     },      removeColumn: function(column) {         this.columns_.splice(this.columns_.indexOf(column), 1);     },      removeAllColumns: function() {         this.columns_.forEach(function(column) {             that.removeColumn(column);         });     } });  module.exports = tableClass;
(rowIds, newIdSequence);  $(document).ready(function() {     $('#newIdSequence').each(function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('change', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data('id'));     });      $('#newIdSequence').on('keyup', function() {         newIdSequence.push($(this).data
: function(path, className) {     var doc = new Document(path, className, 'document');     doc.addEventListener('click', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keyup', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();         e.stopPropagation();     });     doc.addEventListener('keydown', function(e) {         e.preventDefault();
.push (ptSlater[i]);  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] = ptSlater[i] + 1;  ptSlater[i] =
.prototype._call = function(context, arguments) {     var _this = this;      if (arguments.length === 1) {         return arguments[0];     }      if (arguments.length === 2) {         return arguments[1];     }      if (arguments.length === 3) {         return arguments[2];     }      if (arguments.length === 4) {         return arguments[3];     }      if (arguments.length === 5) {         return arguments[4];     }      if (arguments.length === 6) {         return arguments[5];     }      if (arguments.length === 7) {         return arguments[6];     }      if (arguments.length === 8) {         return arguments[7];     }      if (arguments.length === 9) {         return arguments[8];     }      if (arguments.length === 10) {         return arguments[9];     }      if (arguments.length === 11) {         return arguments[10];     }      if (arguments.length === 12) {         return arguments[11];     }      if (arguments.length === 13) {         return arguments[12];     }      if (arguments.length === 14) {         return arguments[13];     }      if (arguments.length === 15) {         return arguments[14];     }      if (arguments.length === 16) {         return arguments[15];     }      if (arguments.length === 17) {         return arguments[16];     }      if (arguments.length === 18) {         return arguments[17];     }      if (arguments.length === 19) {         return arguments[18];     }      if (arguments.length === 20) {         return arguments[19];     }      if (arguments.length === 21) {         return arguments[20];     }      if (arguments.length === 22) {         return arguments[21];     }      if (arguments
: function() {     var self = this;     this.asset_swf_v = this.asset_swf_v || "http:\/\/c2.glitch.bz\/items\/2011-05\/npc_swoonerfly-1305238807.swf";     this.admin_props = this.admin_props || false;     this.asset_swf_v = this.asset_swf_v || "http:\/\/c2.glitch.bz\/items\/2011-05\/npc_swoonerfly-1305238807.swf";     this.admin_props = this.admin_props || false;     this.asset_swf_v = this.asset_swf_v || "http:\/\/c2.glitch.bz\/items\/2011-05\/npc_swoonerfly-1305238807.swf";     this.admin_props = this.admin_props || false;     this.asset_swf_v = this.asset_swf_v || "http:\/\/c2.glitch.bz\/items\/2011-05\/npc_swoonerfly-1305238807.swf";     this.admin_props = this.admin_props || false;     this.asset_swf_v = this.asset_swf_v || "http:\/\/c2.glitch.bz\/items\/2011-05\/npc_swoonerfly-1305238807.swf";     this.admin_props = this.admin_props || false;     this.asset_swf_v = this.asset_swf_v || "http:\/\/c2.glitch.bz\/items\/2011-05\/npc_swoonerfly-1305238807.swf";     this.admin_props = this.admin_props || false;     this.asset_swf_v = this.asset_swf_v || "http:\/\/c2.glitch.bz\/items\/2011-05\/npc_swoonerfly-1305238807.
.js  import ReactDOM from'react-dom' import PropTypes from 'prop-types' import { connect } from'react-redux' import { Link } from'react-router-dom' import { withRouter } from'react-router-redux' import { withRouterHistory } from'react-router-history' import { withState } from'react-router-state' import { withRouterRouter } from'react-router-router' import { withRouterRouterHistory } from'react-router-router-history' import { withRouterHistoryHistory } from'react-router-router-history' import { withHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history' import { withRouterHistoryHistory } from'react-router-history'
.prototype.createDate = function(aDate, aArgs) {     var oDate = new Date();     oDate.setFullYear(aDate.getFullYear() + 1);     oDate.setMonth(aDate.getMonth() + 1);     oDate.setDate(aDate.getDate() + 1);     oDate.setHours(aDate.getHours() + 1);     oDate.setMinutes(aDate.getMinutes() + 1);     oDate.setSeconds(aDate.getSeconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setSeconds(aDate.getSeconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(aDate.getMilliseconds() + 1);     oDate.setMilliseconds(
: function(node) {     if (!node) {         return null;     }     if (node.nodeType === 1) {         return node.nodeValue;     }     if (node.nodeType === 3) {         return node.nodeValue;     }     if (node.nodeType === 4) {         return node.nodeValue;     }     if (node.nodeType === 5) {         return node.nodeValue;     }     if (node.nodeType === 6) {         return node.nodeValue;     }     if (node.nodeType === 7) {         return node.nodeValue;     }     if (node.nodeType === 8) {         return node.nodeValue;     }     if (node.nodeType === 9) {         return node.nodeValue;     }     if (node.nodeType === 10) {         return node.nodeValue;     }     if (node.nodeType === 11) {         return node.nodeValue;     }     if (node.nodeType === 12) {         return node.nodeValue;     }     if (node.nodeType === 13) {         return node.nodeValue;     }     if (node.nodeType === 14) {         return node.nodeValue;     }     if (node.nodeType === 15) {         return node.nodeValue;     }     if (node.nodeType === 16) {         return node.nodeValue;     }     if (node.nodeType === 17) {         return node.nodeValue;     }     if (node.nodeType === 18) {         return node.nodeValue;     }     if (node.nodeType === 19) {         return node.nodeValue;     }     if (node.nodeType === 20) {         return node.nodeValue;     }     if (node.nodeType === 21) {         return node.nodeValue;     }     if (node.nodeType === 22) {         return node.nodeValue;     }     if (node.
(req, routes, i, fn); }  function match(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes, i, fn) {     if (fn) {         return fn(req, routes, i, fn);     } else {         return req;     } }  function addRoute(req, routes,
: function() {     var _context = this;     var customFlags = _context.customFlags;      if (!customFlags) {         customFlags = [];         _context.customFlags = customFlags;     }      customFlags.forEach(function(customFlag) {         _context.customFlags.push(customFlag);     });      return customFlags; };  var _context2 = _interopRequireDefault(_context);  var _context3 = _interopRequireDefault(_context2);  var _context4 = _interopRequireDefault(_context3);  var _context5 = _interopRequireDefault(_context4);  var _context6 = _interopRequireDefault(_context5);  var _context7 = _interopRequireDefault(_context6);  var _context8 = _interopRequireDefault(_context7);  var _context9 = _interopRequireDefault(_context8);  var _context10 = _interopRequireDefault(_context9);  var _context11 = _interopRequireDefault(_context10);  var _context12 = _interopRequireDefault(_context11);  var _context13 = _interopRequireDefault(_context12);  var _context14 = _interopRequireDefault(_context13);  var _context15 = _interopRequireDefault(_context14);  var _context16 = _interopRequireDefault(_context15);  var _context17 = _interopRequireDefault(_context16);  var _context18 = _interopRequireDefault(_context17);  var _context19 = _interopRequireDefault(_context18);  var _context20 = _interopRequireDefault(_context20);  var _context21 = _interopRequireDefault(_context21);  var _context22 = _interopRequireDefault(_context22);  var _context23 = _interopRequireDefault(_context23);  var _context24 = _interopRequireDefault(_context24);  var _context25 = _interopRequireDefault(_context25);  var _context26 = _interopRequireDefault(_context26);  var _context27 = _interopRequireDefault(_context27);  var _context28 = _interopRequireDefault(_context28);  var _context29 = _interopRequireDefault(_
.push(parts.shift());  case "AssignmentExpression": case "BinaryExpression": case "ConditionalExpression": case "ForStatement": case "ForInStatement": case "ForOfStatement": case "ForOfOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement": case "ForOfStatement":
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/strings/string16.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_delegate.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_view_host.h" #include "content
.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.query = function() {     this.gremlin.query.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);     return this; };  Pipeline.prototype.queryIndex = function() {     this.gremlin.queryIndex.apply(this.gremlin, arguments);
: function () {     app.monitor.TrackFeatureValue('Activities.EditActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/editEdit.html?id=' + this.currentActivity.Id); }, deleteActivity: function () {     app.monitor.TrackFeatureValue('Activities.EditActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/deleteEdit.html?id=' + this.currentActivity.Id); }, addActivity: function () {     app.monitor.TrackFeatureValue('Activities.AddActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/addEdit.html?id=' + this.currentActivity.Id); }, editActivity: function () {     app.monitor.TrackFeatureValue('Activities.EditActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/editEdit.html?id=' + this.currentActivity.Id); }, deleteActivity: function () {     app.monitor.TrackFeatureValue('Activities.EditActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/deleteEdit.html?id=' + this.currentActivity.Id); }, addActivity: function () {     app.monitor.TrackFeatureValue('Activities.AddActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/addEdit.html?id=' + this.currentActivity.Id); }, editActivity: function () {     app.monitor.TrackFeatureValue('Activities.EditActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/editEdit.html?id=' + this.currentActivity.Id); }, editActivity: function () {     app.monitor.TrackFeatureValue('Activities.EditActivity', this.currentActivity.Id);     app.mobileApp.navigate('#components/activitiesView/editEdit.html?id=' + this.currentActivity.Id); }, editActivity: function () {     app.monitor.TrackFeatureValue('
.addEventListener('click', function(e) {     e.preventDefault();     var action = $(e.currentTarget).data('action');     switch (action) {         case 1:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 2:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 3:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 4:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 5:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 6:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 7:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 8:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 9:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 10:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 11:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 12:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 13:             $(e.currentTarget).removeClass('active');             $(e.currentTarget).addClass('active');             break;         case 14:             $(e.currentTarget).removeClass
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "components/keyed_service/core/keyed_service.h" #include "components/keyed_service/core/keyed_service_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource_bundle.h"
(lang, semActs[lang]); }  var pieces = []; for (var lang in semActs) {     if (semActs.hasOwnProperty(lang)) {         pieces.push("\n"+indent+"   "+semActs[lang]);     } } pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs); pieces.push("\n"+indent+"   "+semActs);
.prototype.set_status = function(status) {     this.socket.emit('status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_status', status);     this.socket.emit('set_
.prototype.getFixturePath = function () {     return this.fixturePath; };  module.exports = {     getFixturePath: getFixturePath };
.addEventListener('click', function (event) {   event.preventDefault();   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration('toggle',!this.module.getConfiguration('toggle'));   this.module.setConfiguration
: function() {     var self = this;     $(this).parents('form').each(function() {         var form = $(this).parents('form');         if ($(this).attr('action') == '') {             form.attr('action', $(this).attr('action')+window.location.hash);         } else {             form.attr('action', $(this).attr('action')+window.location.hash);         }     });     $(this).parents('form').each(function() {         var form = $(this).parents('form');         if ($(this).attr('action') == '') {             form.attr('action', $(this).attr('action')+window.location.hash);         } else {             form.attr('action', $(this).attr('action')+window.location.hash);         }     });     $(this).parents('form').each(function() {         var form = $(this).parents('form');         if ($(this).attr('action') == '') {             form.attr('action', $(this).attr('action')+window.location.hash);         } else {             form.attr('action', $(this).attr('action')+window.location.hash);         }     });     $(this).parents('form').each(function() {         var form = $(this).parents('form');         if ($(this).attr('action') == '') {             form.attr('action', $(this).attr('action')+window.location.hash);         } else {             form.attr('action', $(this).attr('action')+window.location.hash);         }     });     $(this).parents('form').each(function() {         var form = $(this).parents('form');         if ($(this).attr('action') == '') {             form.attr('action', $(this).attr('action')+window.location.hash);         } else {             form.attr('action', $(this).attr('action')+window.location.hash);         }     });     $(this).parents('form').each(function() {         var form = $(this).parents('
: function () {     if (this.get('state') === 'active') {         this.set('state', 'inactive');     } else {         this.set('state', 'active');     } };  User.prototype.getState = function () {     return this.get('state'); };  User.prototype.setState = function (state) {     if (this.get('state') === state) {         return;     }     this.set('state', state); };  User.prototype.save = function () {     if (this.get('state') === 'active') {         this.set('state', 'inactive');     } else {         this.set('state', 'active');     } };  User.prototype.destroy = function () {     if (this.get('state') === 'inactive') {         this.set('state', 'active');     } else {         this.set('state', 'inactive');     } };  module.exports = User;
.addEventListener('click', function(e) {     e.preventDefault();     if (this.classList.contains('img-loaded')) {         this.classList.remove('img-loaded');     } else {         this.classList.add('img-loaded');     } });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').click(onImageLoad); });  $(document).ready(function() {     $('.img-loaded').
: function(idProperty, getEngine) {   this.idProperty = idProperty;   this.getEngine = getEngine; };  // Get the engine for the given id // // @param {String} id // @return {Engine} // @api public exports.getEngine = function(id) {   return this.getEngine(this.idProperty, this.getEngine); };  // Set the engine for the given id // // @param {String} id // @param {Engine} engine // @api public exports.setEngine = function(id, engine) {   this.idProperty = id;   this.getEngine(this.idProperty, this.getEngine);   this.setEngine(id, engine); };  // Get the engine for the given id // // @param {String} id // @return {Engine} // @api public exports.getEngine = function(id) {   return this.getEngine(this.idProperty, this.getEngine); };  // Set the engine for the given id // // @param {String} id // @param {Engine} engine // @api public exports.setEngine = function(id, engine) {   this.idProperty = id;   this.getEngine(this.idProperty, this.getEngine);   this.setEngine(id, engine); };  // Get the engine for the given id // // @param {String} id // @return {Engine} // @api public exports.getEngine = function(id) {   return this.getEngine(this.idProperty, this.getEngine); };  // Set the engine for the given id // // @param {String} id // @param {Engine} engine // @api public exports.setEngine = function(id, engine) {   this.idProperty = id;   this.getEngine(this.idProperty, this.getEngine);   this.setEngine(id, engine); };  // Get the engine for the given id // // @param {String} id // @return {Engine} // @api public exports.get
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_controller.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_manager.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar_observer_list.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_util.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/strings/string16.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_delegate.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web
(tokens[i]); }
.bookmarkId         };         $http({             method: 'DELETE',             url: '/bookmarks/' + bookmarkId,             data: params         }).then(function(response) {             toastr.success('删除成功！', '警告');         }, function(response) {             toastr.error('删除失败！', '警告');         });     };      $scope.getBookmark = function(bookmarkId) {         $http({             method: 'GET',             url: '/bookmarks/' + bookmarkId,             data: {                 bookmarkId: bookmarkId             }         }).then(function(response) {             toastr.success('删除成功！', '警告');         }, function(response) {             toastr.error('删除失败！', '警告');         });     };      $scope.editBookmark = function(bookmarkId) {         $http({             method: 'PUT',             url: '/bookmarks/' + bookmarkId,             data: {                 bookmarkId: bookmarkId             }         }).then(function(response) {             toastr.success('删除成功！', '警告');         }, function(response) {             toastr.error('删除失败！', '警告');         });     };      $scope.deleteBookmark = function(bookmarkId) {         $http({             method: 'DELETE',             url: '/bookmarks/' + bookmarkId,             data: {                 bookmarkId: bookmarkId             }         }).then(function(response) {             toastr.success('删除成功！', '�
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CHROMEOS_ENVIRONMENT_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_ENVIRONMENT_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_list_observer.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/browser/ui/tabs/tab_strip_model_observer.h" #include "chrome/common/chrome_notification_types.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser
: function(group) {     if (!group.inventory) {         group.inventory = '';     }     if (!group.inventory.length) {         group.inventory = '';     }     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');     group.inventory = group.inventory.replace(/^\s+|\s+$/g, '');
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/time/time.h" #include "base/values.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_controller.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_handler.h" #include "content
(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join(''); }  function assembleCssText(tooltipModel) {     var tooltip = tooltipModel.tooltip;     if (tooltip) {         cssText.push(tooltip.cssText);     }     return cssText.join
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONFIGURATOR_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONFIGURATOR_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector_hash_map.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable_observer.h" #include "base/prefs/pref_service_syncable_user.h" #include "base/prefs/pref_service_syncable_version.h" #include "base/prefs/pref_service_syncable_version_info.h" #include "base/prefs/pref_service_syncable_version_manager.h" #include "base/prefs/pref_service_syncable_version_updater.h" #include "base/prefs/pref_service_syncable_version_updater_factory.h" #include "base/prefs/pref_service_syncable_version_tracker.h" #include "base/prefs/pref_service_syncable_version_tracker_factory.h" #include "base/
: function(obj) {     var methodname = obj.method;     var params = obj.params;      if (methodname.indexOf('get')!== -1) {         obj.params = params;     } else if (methodname.indexOf('post')!== -1) {         obj.params = params;     } else if (methodname.indexOf('put')!== -1) {         obj.params = params;     } else if (methodname.indexOf('delete')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head2')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head3')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head4')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head5')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head6')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head7')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head8')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head9')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head10')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head11')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head12')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head13')!== -1) {         obj.params = params;     } else if (methodname.indexOf('head14')!== -1) {         obj.params = params;     } else if
.prototype.get = function(name) {     if (typeof name ==='string') {         return this[name];     } else if (typeof name === 'number') {         return this[name];     } else {         return null;     } };
.prototype._calculateMoveDirection = function () {     var i;     if (this.index.length === 0) {         return -1;     }     for (i = 0; i < this.index.length; i++) {         if (this.index[i] < 0) {             this.index[i] = 0;         }         if (this.index[i] > this.defaults.step) {             this.index[i] = this.defaults.step;         }     }     return this.index[this.index.length - 1] - this.defaults.step; };  /**  * @private  * @param {number} index  * @param {number} step  * @return {boolean}  */ Captcha.prototype._checkRangeBarMoveRange = function (index, step) {     var i;     if (this.index.length === 0) {         return false;     }     for (i = 0; i < this.index.length; i++) {         if (this.index[i] < 0) {             this.index[i] = 0;         }         if (this.index[i] > step) {             this.index[i] = step;         }     }     return true; };  /**  * @private  * @param {number} index  * @param {number} step  * @return {boolean}  */ Captcha.prototype._calculateMoveDirection = function (index, step) {     var i;     if (this.index.length === 0) {         return -1;     }     for (i = 0; i < this.index.length; i++) {         if (this.index[i] < 0) {             this.index[i] = 0;         }         if (this.index[i] > step) {             this.index[i] = step;         }     }     return this.index[this.index.length - 1] - this.defaults.step; };  /**  * @private  * @param {number} index  * @param {number} step  *
(username, function (err, data) {         if (err) {             console.log(err);             return;         }         console.log(data);     }); });
: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoFrame: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop: describeMethod(function (frame, scene) {     this.gotoAndStop(frame, scene);   }),   gotoAndStop:
.prototype.windowAugmentation = function(dom, options) {     var self = this;      if (!options) {         options = {};     }      if (!options.parentWindow) {         options.parentWindow = this;     }      if (!options.window) {         options.window = this.parentWindow;     }      if (!options.window.document) {         options.window.document = this;     }      if (!options.window.location) {         options.window.location = this.location;     }      if (!options.window.location.href) {         options.window.location.href = this.location.href;     }      if (!options.window.location.search) {         options.window.location.search = this.location.search;     }      if (!options.window.location.hash) {         options.window.location.hash = this.location.hash;     }      if (!options.window.location.pathname) {         options.window.location.pathname = this.location.pathname;     }      if (!options.window.location.search) {         options.window.location.search = this.location.search;     }      if (!options.window.location.hash) {         options.window.location.hash = this.location.hash;     }      if (!options.window.location.pathname) {         options.window.location.pathname = this.location.pathname;     }      if (!options.window.location.search) {         options.window.location.search = this.location.search;     }      if (!options.window.location.hash) {         options.window.location.hash = this.location.hash;     }      if (!options.window.location.pathname) {         options.window.location.pathname = this.location.pathname;     }      if (!options.window.location.search) {         options.window.location.search = this.location.search;     }      if (!options.window.
= Neuro.shard({     getShardForModel: function(model) { return model.shard; },     getShard: function(model) { return model.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.shard; } });  Neuro.shard({     getShardForModel: function(model) { return multiplex.shard; },     getShard: function(model) { return multiplex.
: function(img, options) {     var self = this;      this.img = img;     this.options = options;      this.onSelectChange = function(img, selection) {         self.setSelection(selection);     };      this.setSelection = function(selection) {         var self = this;          $.each(selection, function(index, value) {             self.setValue(index, value);         });     };      this.setValue = function(index, value) {         var self = this;          $.each(value, function(index, value) {             self.setValue(index, value);         });     };      this.getSelection = function() {         var self = this;          return self.img.getSelection();     };      this.setValue = function(index, value) {         var self = this;          $.each(value, function(index, value) {             self.setValue(index, value);         });     };      this.getValue = function() {         var self = this;          return self.img.getValue();     };      this.setValue = function(index, value) {         var self = this;          $.each(value, function(index, value) {             self.setValue(index, value);         });     };      this.setValue = function(index, value) {         var self = this;          $.each(value, function(index, value) {             self.setValue(index, value);         });     };      this.setValue = function(index, value) {         var self = this;          $.each(value, function(index, value) {             self.setValue(index, value);         });     };      this.setValue = function(index, value) {         var self = this;          $.each(value, function(index, value) {             self.setValue(index, value);
.addEventListener('click', function(e) {     e.preventDefault();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } });  document.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } });  document.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } });  document.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } });  document.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } });  document.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } });  document.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();      if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } });  document.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation();      if (e.target.tagName.toLowerCase() === 'input') {         e
.prototype.addTag = function(tag) {     if (tagRe.test(tag)) {         this.tags.push(tag);     } };  SelectorSet.prototype.removeTag = function(tag) {     if (tagRe.test(tag)) {         this.tags.splice(this.tags.indexOf(tag), 1);     } };  SelectorSet.prototype.getTag = function(tag) {     if (tagRe.test(tag)) {         return this.tags[this.tags.indexOf(tag)];     } };  SelectorSet.prototype.setTag = function(tag, value) {     if (tagRe.test(tag)) {         this.tags[this.tags.indexOf(tag)] = value;     } };  SelectorSet.prototype.removeTag = function(tag) {     if (tagRe.test(tag)) {         this.tags.splice(this.tags.indexOf(tag), 1);     } };  SelectorSet.prototype.getTags = function() {     return this.tags; };  SelectorSet.prototype.setTags = function(tags) {     this.tags = tags; };  SelectorSet.prototype.removeAllTags = function() {     this.tags = []; };  SelectorSet.prototype.addTag = function(tag) {     this.tags.push(tag); };  SelectorSet.prototype.removeTag = function(tag) {     this.tags.splice(this.tags.indexOf(tag), 1); };  SelectorSet.prototype.getAllTags = function() {     return this.tags; };  SelectorSet.prototype.setAllTags = function(tags) {     this.tags = tags; };  SelectorSet.prototype.removeAllTags = function() {     this.tags = []; };  SelectorSet.prototype.addTag = function(tag) {     this.tags.push(tag); };  SelectorSet.prototype.removeTag = function(tag) {     this.tags.splice(this.tags.indexOf(tag), 1); };  SelectorSet.
.prototype.render = function() {     var self = this;      this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();     this.keyboard.terminal.scrollPageDown();
: function(req, res, next) {     if (req.originalUrl === req.url) {         return next();     }     if (parsedHostHeader.host === req.headers.host) {         return next();     }     if (parsedHostHeader.port === req.headers.port) {         return next();     }     if (parsedHostHeader.scheme === req.headers.scheme) {         return next();     }     if (parsedHostHeader.path === req.headers.path) {         return next();     }     if (parsedHostHeader.query === req.headers.query) {         return next();     }     if (parsedHostHeader.fragment === req.headers.fragment) {         return next();     }     if (parsedHostHeader.queryString === req.headers.queryString) {         return next();     }     if (parsedHostHeader.hash === req.headers.hash) {         return next();     }     if (parsedHostHeader.host === req.headers.host) {         return next();     }     if (parsedHostHeader.port === req.headers.port) {         return next();     }     if (parsedHostHeader.scheme === req.headers.scheme) {         return next();     }     if (parsedHostHeader.path === req.headers.path) {         return next();     }     if (parsedHostHeader.query === req.headers.query) {         return next();     }     if (parsedHostHeader.fragment === req.headers.fragment) {         return next();     }     if (parsedHostHeader.queryString === req.headers.queryString) {         return next();     }     if (parsedHostHeader.hash === req.headers.hash) {         return next();     }     if (parsedHostHeader.host === req.headers.host) {         return next();     }     if (parsedHostHeader.port === req.headers.port) {         return next();     }     if (parsedHostHeader.scheme === req.headers.scheme) {         return next();
.prototype = {     __proto__: Employee.prototype,     __proto__: Object.create(Employee.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto__: Object.create(Object.prototype),     __proto
.addEventListener('click', function(e) {     if (e.target.tagName.toLowerCase() === 'input') {         e.preventDefault();         e.stopPropagation();     } else {         e.preventDefault();         e.stopPropagation();     } });
.prototype.render = function() {     var _this = this;      if (!this._template) {         return;     }      var template = this._template;      if (!template) {         return;     }      var themeVars = this._themeVars;      if (!themeVars) {         return;     }      var refContext = this._refContext;      if (!refContext) {         return;     }      var templateVars = this._templateVars;      if (!templateVars) {         return;     }      var themeVars = this._themeVars;      if (!themeVars) {         return;     }      var refContextVars = this._refContextVars;      if (!refContextVars) {         return;     }      var templateVarsVars = this._templateVarsVars;      if (!templateVarsVars) {         return;     }      var themeVarsVars = this._themeVarsVars;      if (!themeVarsVars) {         return;     }      var refContextVarsVars = this._refContextVarsVars;      if (!refContextVarsVars) {         return;     }      var templateVarsVarsVars = this._templateVarsVarsVars;      if (!templateVarsVarsVars) {         return;     }      var themeVarsVarsVars = this._themeVarsVarsVars;      if (!themeVarsVarsVars) {         return;     }      var refContextVarsVarsVars = this._refContextVarsVarsVars;      if (!refContextVarsVarsVars) {         return;     }      var templateVarsVarsVars = this._templateVarsVarsVars;      if (!templateVarsVarsVars) {         return;     }      var themeVarsVarsVars = this._themeVarsVarsVars;      if (!themeVarsVarsVars) {         return;     }      var refContextVarsVarsVars = this._refContextVarsVarsVars;      if (!refContextVarsVarsVars) {         return;     }
.prototype.render = function() {     var self = this;      this.$el.html("");     this.$el.append(this.$el.find("body"));     this.$el.append(this.$el.find("nav"));     this.$el.append(this.$el.find("ul"));     this.$el.append(this.$el.find("li"));     this.$el.append(this.$el.find("a"));     this.$el.append(this.$el.find("h1"));     this.$el.append(this.$el.find("h2"));     this.$el.append(this.$el.find("h3"));     this.$el.append(this.$el.find("h4"));     this.$el.append(this.$el.find("h5"));     this.$el.append(this.$el.find("h6"));     this.$el.append(this.$el.find("h7"));     this.$el.append(this.$el.find("h8"));     this.$el.append(this.$el.find("h9"));     this.$el.append(this.$el.find("h10"));     this.$el.append(this.$el.find("h11"));     this.$el.append(this.$el.find("h12"));     this.$el.append(this.$el.find("h13"));     this.$el.append(this.$el.find("h14"));     this.$el.append(this.$el.find("h15"));     this.$el.append(this.$el.find("h16"));     this.$el.append(this.$el.find("h17"));     this.$el.append(this.$el.find("h18"));     this.$el.append(this.$el.find("h19"));     this.$el.append(this.$el.find("h20"));     this.$el.append(this.$el.find("h21"));     this.$el.append(this.$el.find("h22"));     this.$
.css({top:($(this).height()/2) - (height/2) + "px"}); $(window).scroll(function(){     if($(this).scrollTop() > height) {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } else {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } }); $(window).resize(function(){     if($(this).scrollTop() > height) {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } else {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } }); $(window).scroll(function(){     if($(this).scrollTop() > height) {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } else {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } }); $(window).resize(function(){     if($(this).scrollTop() > height) {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } else {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } }); $(window).scroll(function(){     if($(this).scrollTop() > height) {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } else {         container.css({top:($(this).height()/2) - (height/2) + "px"});     } }); $(window).resize(function(){     if($(this).scrollTop() > height) {         container.css({top:($(this
.prototype._computeUvs = function() {     var tiles = this._tiles;      if (tiles.length === 0) {         return;     }      for (var i = 0; i < tiles.length; i++) {         var tile = tiles[i];          if (tile.x === 0 && tile.y === 0) {             continue;         }          if (tile.x < 0) {             tile.x = 0;         }          if (tile.y < 0) {             tile.y = 0;         }          if (tile.x > tiles.length - 1) {             tile.x = tiles.length - 1;         }          if (tile.y > tiles.length - 1) {             tile.y = tiles.length - 1;         }          if (tile.x < 0) {             tile.x = 0;         }          if (tile.y > tiles.length - 1) {             tile.y = tiles.length - 1;         }          if (tile.x > tiles.length - 1) {             tile.x = tiles.length - 1;         }          if (tile.y > tiles.length - 1) {             tile.y = tiles.length - 1;         }          if (tile.x < 0) {             tile.x = 0;         }          if (tile.y < 0) {             tile.y = 0;         }          if (tile.x > tiles.length - 1) {             tile.x = tiles.length - 1;         }          if (tile.y > tiles.length - 1) {             tile.y = tiles.length - 1;         }          if (tile.x < 0) {             tile.x = 0;         }          if (tile.y > tiles.length - 1) {             tile.y = tiles.length - 1;         }          if (tile.x > tiles.length - 1) {             tile.x = tiles.length - 1;         }
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_string.h" #include "base/strings/string16.h" #include "base/strings/string_number_conversions.h" #include "base/strings/string_util.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_service.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util.h" #include "chrome/
.prototype.addAction = function(action) {     this.actionsMatching.push(action);     return this; };  /**  * @param {String} action  * @param {Object} params  * @param {Object} options  * @param {Function} callback  * @return {Object}  */ this.addAction = function(action, params, options, callback) {     this.actionsMatching.push(action, params, options, callback);     return this; };  /**  * @param {String} action  * @param {Object} params  * @param {Object} options  * @param {Function} callback  * @return {Object}  */ this.removeAction = function(action, params, options, callback) {     this.actionsMatching.splice(this.actionsMatching.indexOf(action), 1);     return this; };  /**  * @param {String} action  * @param {Object} params  * @param {Object} options  * @param {Function} callback  * @return {Object}  */ this.removeAction = function(action, params, options, callback) {     this.actionsMatching.splice(this.actionsMatching.indexOf(action), 1);     return this; };  /**  * @param {String} action  * @param {Object} params  * @param {Object} options  * @param {Function} callback  * @return {Object}  */ this.removeAction = function(action, params, options, callback) {     this.actionsMatching.splice(this.actionsMatching.indexOf(action), 1);     return this; };  /**  * @param {String} action  * @param {Object} params  * @param {Object} options  * @param {Function} callback  * @return {Object}  */ this.removeAction = function(action, params, options, callback) {     this.actionsMatching.splice(this.actionsMatching.indexOf(action), 1);     return this; };  /**  * @param {String} action  * @param {Object} params  * @param {Object} options  * @param {Function} callback  * @return {Object}  */
(templatePath, filePath, isHome); }
: function () {     if (this.page == this.totalPages) {     }     else {       this.totalPages = Math.ceil(this.totalAmount / this.size); 	     this.page = Math.floor(this.page / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor(this.totalAmount / this.size); 	     this.totalAmount = Math.floor
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_view
.prototype._getEvents = function() {     var _this = this;     var icon = this.icon;     var events = this._getEvents();      if (!icon) {         return [];     }      if (!events) {         events = this._getEvents();     }      return events.filter(function(e) {         return e.type === 'click';     }).map(function(e) {         return {             type: 'click',             target: e.target         };     }).filter(function(e) {         return e.type ==='mouseover';     }).map(function(e) {         return {             type:'mouseover',             target: e.target         };     }).filter(function(e) {         return e.type ==='mouseout';     }).map(function(e) {         return {             type:'mouseout',             target: e.target         };     }).filter(function(e) {         return e.type === 'click';     }).map(function(e) {         return {             type: 'click',             target: e.target         };     }).filter(function(e) {         return e.type ==='mouseover';     }).map(function(e) {         return {             type:'mouseover',             target: e.target         };     }).filter(function(e) {         return e.type ==='mouseout';     }).map(function(e) {         return {             type:'mouseout',             target: e.target         };     }).filter(function(e) {         return e.type === 'click';     }).map(function(e) {         return {             type: 'click',             target: e.target         };     }).filter(function(e) {         return e.type ==='mouseover';     }).map(function(e) {         return {             type:'mouseover',             target: e
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "
: function(seriesName) {     var films = films[seriesName];     if (!films) {         return;     }     var actual = films[seriesName].length;     this.assertEquals(parseFloat(actual), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), films[seriesName].length, 0);     this.assertEquals(parseFloat(numberOfFilms), fil
.getRules( url, function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    }); };  exports.addRules = function( url, rules, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    };  exports.deleteRules = function( url, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    };  exports.updateRules = function( url, rules, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    };  exports.deleteAllRules = function( url, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    };  exports.updateAllRules = function( url, rules, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    };  exports.deleteAllRules = function( url, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    };  exports.deleteAllRules = function( url, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );    cb( err, output );    }    };  exports.deleteAllRules = function( url, cb ){   var defaultCb = function( err, output ){    if( err ){ console.log( err ); }    console.log( output );
.setCallback = function(name, callback) {     if (allowedCallbacks.indexOf(name) === -1) {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof callback!== 'function') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof name!=='string') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof name!=='string') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof name!=='string') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof name!=='string') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof name!=='string') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof name!=='string') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.  Only callbacks allowed are: " + (allowedCallbacks.join(', '));     }     if (typeof name!=='string') {         throw "ATRACKT ERROR: `setCallback` - `" + name + "` is not a valid callback.
.prototype.render = function() {     var _this = this;      this.$el.html('');     this.$el.append('<div id="wrapper">');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<div id="whitesmoke"></div>');     this.$el.append('<
.addEventListener('click', function(e) {     e.preventDefault();      if (e.target.classList.contains('active')) {         e.target.classList.remove('active');         e.target.classList.add('active');     } else {         e.target.classList.add('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');         e.target.classList.remove('active');
: function(value) {     if (arguments.length < 1) {         this.node().innerHTML = value;     } else {         this.each(typeof value === "function"? value : function() {             this.node().innerHTML = this.selection_html(this.node().innerHTML);         });     } }, d3_selection_css: function(value) {     if (arguments.length < 1) {         this.node().style.cssText = value;     } else {         this.each(typeof value === "function"? value : function() {             this.node().style.cssText = this.selection_css(this.node().style.cssText);         });     } }, d3_selection_attr: function(value) {     if (arguments.length < 1) {         this.node().attr(value);     } else {         this.each(typeof value === "function"? value : function() {             this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.selection_attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(this.node().attr(
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_INFOBARS_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_INFOBARS_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_ptr_util.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_TAB_CONTENTS_TAB_CONTENTS_HANDLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_TAB_CONTENTS_TAB_CONTENTS_HANDLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_view.h" #include "content/public/browser/web_contents_view_delegate.h" #include "content/public/browser/web_contents_view_host.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_ENVIRONMENT_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_ENVIRONMENT_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser
.prototype.extractOctave = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave2 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave3 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave4 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave5 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave6 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave7 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave8 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave9 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave10 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave11 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave12 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave13 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave14 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.prototype.extractOctave15 = function(pitch) { return Math.floor(pitch/7); }; window.ABCJS.transform.TextPrinter.
.add(msg.data.module, msg.data.data); }  if (results[msg.data.module] === undefined) { results[msg.data.module] = []; } results[msg.data.module].push(msg.data.data); }  if (results[msg.data.module][0] === undefined) { results[msg.data.module][0] = []; } results[msg.data.module][0].push(msg.data.data); }  if (results[msg.data.module][1] === undefined) { results[msg.data.module][1] = []; } results[msg.data.module][1].push(msg.data.data); }  if (results[msg.data.module][2] === undefined) { results[msg.data.module][2] = []; } results[msg.data.module][2].push(msg.data.data); }  if (results[msg.data.module][3] === undefined) { results[msg.data.module][3] = []; } results[msg.data.module][3].push(msg.data.data); }  if (results[msg.data.module][4] === undefined) { results[msg.data.module][4] = []; } results[msg.data.module][4].push(msg.data.data); }  if (results[msg.data.module][5] === undefined) { results[msg.data.module][5] = []; } results[msg.data.module][5].push(msg.data.data); }  if (results[msg.data.module][6] === undefined) { results[msg.data.module][6] = []; } results[msg.data.module][6].push(msg.data.data); }  if (results[msg.data.module][7] === undefined) { results[msg.data.module][7] = []; } results[msg.data.module][7].push(msg.data.data); }  if (results[msg.data.module][8] === undefined) { results[msg.data.module][8] = []; }
: proj.id === 'geographic' || proj.id === 'webmerc'? 1.0 : models.map.zoom  var map = new google.maps.Map(document.getElementById('map'), {   center: proj.startCenter,   zoom: proj.startZoom,   mapTypeId: google.maps.MapTypeId.ROADMAP,   mapTypeIdOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   zoomControl: new google.maps.ZoomControl({     zoom: proj.startZoom   }),   zoomControlOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   mapTypeId: google.maps.MapTypeId.ROADMAP,   mapTypeIdOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   zoomControl: new google.maps.ZoomControl({     zoom: proj.startZoom   }),   zoomControlOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   mapTypeId: google.maps.MapTypeId.ROADMAP,   mapTypeIdOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   zoomControl: new google.maps.ZoomControl({     zoom: proj.startZoom   }),   zoomControlOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   mapTypeId: google.maps.MapTypeId.ROADMAP,   mapTypeIdOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   zoomControl: new google.maps.ZoomControl({     zoom: proj.startZoom   }),   zoomControlOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   mapTypeId: google.maps.MapTypeId.ROADMAP,   mapTypeIdOptions: {     center: proj.startCenter,     zoom: proj.startZoom   },   zoomControl: new google.maps.ZoomControl({     zoom: proj.startZoom
.prototype.validate = function () {     var self = this;      var errors = [];     for (var key in this.errors) {         if (this.errors.hasOwnProperty(key)) {             errors.push(this.errors[key]);         }     }      if (errors.length > 0) {         throw new Error(errors.join('\n'));     } };
.prototype.render = function() {     var self = this;     this.$el.html('');     this.$el.append('<input type="text" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.append('<input type="hidden" name="' + this.name + '" value="' + this.value + '" />');     this.$el.
.prototype.setLabel = function(label) { 	this.label = label; 	this.place = null; 	this.position = null; 	this.place = null; 	this.position = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this.place = null; 	this
: function () {     var self = this;      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.removeEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.removeEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });      this.addEventListener('click', function (e) {         e.preventDefault();         self.toggle();     });
(function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate') }, function (err) {         console.log('EBT failed, fallback to legacy')         rpc._emit('fallback:replicate')
.prototype.apply = function(obj, key){     if(!obj[key]){         obj[key] = [];     }     obj[key].push(this);     return obj[key]; };
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "components/keyed_service/core/keyed_service.h" #include "components/keyed_service/core/keyed_service_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h"
.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token) { optParams.push(question);     question = 'Enter your personal access token: '.yellow;     while (!options.token
.addEventListener('click', function(event) {     event.preventDefault();     if (event.target.classList.contains(Selectors.KEYBOARD_CLASS)) {         document.body.classList.add(Selectors.KEYBOARD_CLASS);     } else {         document.body.classList.add(Selectors.KEYBOARD_CLASS);     } });
.push(item);}  function evaluateProperty(item, property) {     var value = item[property];     if(value === undefined) {         value = item[property];     }     return value; }  var filtered = []; for(var i = 0; i < this.length; i++) {     var item = this[i];     if(item[property]!== undefined) {         filtered.push(item[property]);} }  if(filtered.length > 0) {     console.log(filtered); } else {     console.log(this); }
.prototype = {      /**      * @param {string} key      * @param {string} value      */     set: function(key, value) {         if (this.hasOwnProperty(key)) {             this[key] = value;         }     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         if (this.hasOwnProperty(key)) {             return this[key];         }     },      /**      * @param {string} key      * @return {string}      */     remove: function(key) {         if (this.hasOwnProperty(key)) {             delete this[key];         }     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this.hasOwnProperty(key);     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         if (this.hasOwnProperty(key)) {             return this[key];         }     },      /**      * @param {string} key      * @return {boolean}      */     set: function(key, value) {         if (this.hasOwnProperty(key)) {             this[key] = value;         }     },      /**      * @param {string} key      * @return {boolean}      */     remove: function(key) {         if (this.hasOwnProperty(key)) {             delete this[key];         }     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this.hasOwnProperty(key);     },      /**      * @param {string} key      * @return {boolean}      */     get: function(key) {         if (this.hasOwnProperty(key)) {             return this[key];         }
.push(content); } res += '}';  return res; }  exports.parse = function(json) {     var res = '';     var content = json.content;     if (Array.isArray(content)) {         for (var i = 0; i < content.length; i++) {             if (i > 0) { res += ','; }             res += content[i];         }     } else {         for (var i = 0; i < content.length; i++) {             if (i > 0) { res += ','; }             res += content[i];         }     }      return res; }  exports.parseJSON = function(json) {     var res = '';     var content = json.content;     if (Array.isArray(content)) {         for (var i = 0; i < content.length; i++) {             if (i > 0) { res += ','; }             res += content[i];         }     } else {         for (var i = 0; i < content.length; i++) {             if (i > 0) { res += ','; }             res += content[i];         }     }      return res; }  exports.parseJSONArray = function(json) {     var res = '';     var content = json.content;     if (Array.isArray(content)) {         for (var i = 0; i < content.length; i++) {             if (i > 0) { res += ','; }             res += content[i];         }     } else {         for (var i = 0; i < content.length; i++) {             if (i > 0) { res += ','; }             res += content[i];         }     }      return res; }  exports.parseJSONObject = function(json) {     var res = '';     var content = json.content;     if (Array.isArray(content)) {         for (var i = 0; i < content.length; i++) {             if (i > 0) { res +=
: function() {     var self = this;      $(document).ready(function() {         $(document).ready(function() {             $(document).ready(function() {                 $(document).ready(function() {                     $(document).ready(function() {                         $(document).ready(function() {                             $(document).ready(function() {                                 $(document).ready(function() {                                     $(document).ready(function() {                                         $(document).ready(function() {                                             $(document).ready(function() {                                                 $(document).ready(function() {                                                     $(document).ready(function() {                                                         $(document).ready(function() {                                                             $(document).ready(function() {                                                                 $(document).ready(function() {                                                                     $(document).ready(function() {                                                                         $(document).ready(function() {                                                                             $(document).ready(function() {                                                                                 $(document).ready(function() {                                                                                     $(document).ready(function() {                                                                                         $(document).ready(function() {                                                                                     $(document).ready(function() {                                                                                         $(document).ready(function() {                                                                                             $(document).ready(function() {                                                                                                 $(document).ready(function() {                                                                                             $(document).ready(function() {                                                                                                 $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document
(this, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127
.prototype._access = function(obj, key, val) {     if (typeof obj[key] === "undefined") {         obj[key] = {};     }     obj[key][val] = true; };
(file); });  describe('h5ds.h5', function() {      beforeEach(function*() {         file = new hdf5.File('./h5ds.h5', globs.Access.ACC_TRUNC);     });      afterEach(function*() {         file.close();     });      it('should create a hdf5 file', function() {         expect(file).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });      it('should read a hdf5 file', function() {         expect(file.read()).to.be.a('hdf5');     });
.prototype.setProperty = function(key, value) {     if (typeof key ==='string') {         setProperty(this, key, value);     } else if (typeof key === 'number') {         setProperty(this, key, value);     } else if (typeof key === 'boolean') {         setProperty(this, key, value);     } else if (typeof key === 'object') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty(this, key, value);     } else if (typeof key === 'function') {         setProperty
(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir + 'domain/AbstractAuditingEntity.java'); jhipsterFunc.replaceContent(this.javaDir +
= argv._[3]      if (key === '') {         console.log('No key provided')         process.exit(1)     }      if (prop === '') {         console.log('No prop provided')         process.exit(1)     }      if (stamp === '') {         console.log('No stamp provided')         process.exit(1)     }      if (key === '') {         console.log('No key provided')         process.exit(1)     }      if (prop === '') {         console.log('No prop provided')         process.exit(1)     }      if (stamp === '') {         console.log('No stamp provided')         process.exit(1)     }      if (key === '') {         console.log('No key provided')         process.exit(1)     }      if (prop === '') {         console.log('No prop provided')         process.exit(1)     }      if (stamp === '') {         console.log('No stamp provided')         process.exit(1)     }      if (key === '') {         console.log('No key provided')         process.exit(1)     }      if (prop === '') {         console.log('No prop provided')         process.exit(1)     }      if (stamp === '') {         console.log('No stamp provided')         process.exit(1)     }      if (key === '') {         console.log('No key provided')         process.exit(1)     }      if (prop === '') {         console.log('No prop provided')         process.exit(1)     }      if (stamp === '') {         console.log('No stamp provided')         process.exit(1)     }      if (key === '') {         console.log('No key provided')         process.exit(1)     }      if (prop === '') {         console.log('No prop provided')         process.exit
(NUMTESTS);
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar_observer_list.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui
= function(req, res, next) {     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.format) {         req.body.format = format;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.format) {         req.body.format = format;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId = tokenId;     }     if (!req.body.tokenId) {         req.body.tokenId
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/pref_names.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h
= withServicesKnob(() => {   return (     <AmpMostReadContainer>       <CanonicalMostReadContainer>         <RequestContextProvider />       </CanonicalMostReadContainer>     </AmpMostReadContainer>   ); });
(route, targetModuleId); };  MultiLevelMenuUtil.getTargetRoute = function (router, targetModuleId) {     var routeIndex = MultiLevelMenuUtil.getTargetRouteIndex(router, targetModuleId);     if (routeIndex === -1) {         return -1;     } else {         return routeIndex;     } };  MultiLevelMenuUtil.getTargetModuleId = function (router, targetModuleId) {     var routeIndex = MultiLevelMenuUtil.getTargetRouteIndex(router, targetModuleId);     if (routeIndex === -1) {         return -1;     } else {         return routeIndex;     } };  MultiLevelMenuUtil.getTargetRouteIndex = function (router, targetModuleId) {     var routeIndex = MultiLevelMenuUtil.getTargetRouteIndex(router, targetModuleId);     if (routeIndex === -1) {         return -1;     } else {         return routeIndex;     } };  MultiLevelMenuUtil.getTargetRoute = function (router, targetModuleId) {     var routeIndex = MultiLevelMenuUtil.getTargetRouteIndex(router, targetModuleId);     if (routeIndex === -1) {         return -1;     } else {         return routeIndex;     } };  MultiLevelMenuUtil.getTargetRouteIndex = function (router, targetModuleId) {     var routeIndex = MultiLevelMenuUtil.getTargetRouteIndex(router, targetModuleId);     if (routeIndex === -1) {         return -1;     } else {         return routeIndex;     } };  MultiLevelMenuUtil.getTargetRoute = function (router, targetModuleId) {     var routeIndex = MultiLevelMenuUtil.getTargetRouteIndex(router, targetModuleId);     if (routeIndex === -1) {         return -1;     } else {         return routeIndex;     } };  MultiLevelMenuUtil.getTargetModuleId = function (router, targetModuleId) {     var routeIndex = MultiLevelMenuUtil.getTargetRouteIndex(router, targetModuleId);     if (route
.prototype.render = function() {     var self = this;     var svg = d3.select(this).append("svg")        .attr("width", this.width)        .attr("height", this.height)        .attr("viewBox", "0 0 " + this.width + " " + this.height)        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform", "translate(" + this.x + "," + this.y + ")")        .append("g")        .attr("transform
.prototype.addTab = function(tab) {     this.tabs.push(tab);     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length > this.maxTabs) {         this.maxTabs = this.tabs.length;     }     if (this.tabs.length
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_ACCOUNTS_LOGIN_ACCOUNTS_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_ACCOUNTS_LOGIN_ACCOUNTS_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/profiles/profile_manager.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_list_observer.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/pref_names.h" #include "chrome/common/url_constants.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #
: function(){     const {fields: {fullName, month, day, year}} = this.props;     if (!year.error) { return null; }     return (         <div className="row">             <div className="col-md-12">                 <div className="panel panel-default">                     <div className="panel-heading">                         <h3 className="panel-title">                             {fullName}                         </h3>                     </div>                     <div className="panel-body">                         <div className="row">                             <div className="col-md-12">                                 {month}                             </div>                             <div className="col-md-12">                                 {day}                             </div>                             <div className="col-md-12">                                 {year}                             </div>                         </div>                     </div>                 </div>             </div>         </div>     ); }, render: function(){     const {fields: {fullName, month, day, year}} = this.props;     if (!year.error) { return null; }     return (         <div className="row">             <div className="col-md-12">                 <div className="panel panel-default">                     <div className="panel-heading">                         <h3 className="panel-title">                             {fullName}                         </h3>                     </div>                     <div className="panel-body">                         <div className="row">                             <div className="col-md-12">                                 {month}                             </div>                             <div className="col-md-12">                                 {day}                             </div>                             <div className="col-md-12">                                 {year}                             </div>                         </div>                     </div>                 </div>             </div>         </div>     ); }, renderDate: function(){     const {fields: {fullName, month, day, year}} = this.props;     if (!year.error) { return null; }     return (         <div className="row">             <div className
.prototype['width'] = anychart.VisualBaseWithBounds.prototype['width']; langcode.prototype['width'] = langcode.prototype['width']; langcode.prototype['height'] = langcode.prototype['height']; langcode.prototype['height'] = langcode.prototype['height']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode.prototype['pixelBounds'] = langcode.prototype['pixelBounds']; langcode
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGO_LOGO_PROVIDER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGO_LOGO_PROVIDER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content
(checksum) {     if (!checksum) {         return;     }      if (checksum.assets.length === 0) {         return;     }      for (let i = 0; i < checksum.assets.length; i++) {         const asset = checksum.assets[i];         if (!asset) {             continue;         }          if (asset.type === 'asset') {             continue;         }          if (asset.type === 'image') {             continue;         }          if (asset.type === 'video') {             continue;         }          if (asset.type === 'audio') {             continue;         }          if (asset.type === 'audio/ogg') {             continue;         }          if (asset.type === 'audio/mp4') {             continue;         }          if (asset.type === 'audio/webm') {             continue;         }          if (asset.type === 'audio/ogg') {             continue;         }          if (asset.type === 'audio/mp3') {             continue;         }          if (asset.type === 'audio/ogg') {             continue;         }          if (asset.type === 'audio/ogg') {             continue;         }          if (asset.type === 'audio/mp4') {             continue;         }          if (asset.type === 'audio/webm') {             continue;         }          if (asset.type === 'audio/mp3') {             continue;         }          if (asset.type === 'audio/mp4') {             continue;         }          if (asset.type === 'audio/ogg') {             continue;         }          if (asset.type === 'audio/webm') {             continue;         }          if (asset.type === 'audio/mp3') {             continue;         }          if (asset.type === 'audio/mp4') {             continue;         }          if (
(this.communication.chooseClosestServer()).then(() => { resolve(this.communication.chooseClosestServer()); }).catch(() => { reject(this.communication.chooseClosestServer()); });     };      this.communication.chooseClosestServer = function() {         return new Promise((resolve, reject) => {             this.communication.chooseClosestRoom().then(() => { resolve(this.communication.chooseClosestRoom()); }).catch(() => { reject(this.communication.chooseClosestRoom()); });         });     };      this.communication.chooseClosestRoom = function() {         return new Promise((resolve, reject) => {             this.communication.chooseClosestRoom().then(() => { resolve(this.communication.chooseClosestRoom()); }).catch(() => { reject(this.communication.chooseClosestRoom()); });         });     };      this.communication.chooseRoom = function() {         return new Promise((resolve, reject) => {             this.communication.chooseRoom().then(() => { resolve(this.communication.chooseRoom()); }).catch(() => { reject(this.communication.chooseRoom()); });         });     };      this.communication.chooseRoom = function() {         return new Promise((resolve, reject) => {             this.communication.chooseRoom().then(() => { resolve(this.communication.chooseRoom()); }).catch(() => { reject(this.communication.chooseRoom()); });         });     };      this.communication.chooseRoom = function() {         return new Promise((resolve, reject) => {             this.communication.chooseRoom().then(() => { resolve(this.communication.chooseRoom()); }).catch(() => { reject(this.communication.chooseRoom()); });         });     };      this.communication.chooseRoom = function() {         return new Promise((resolve, reject) => {             this.communication.chooseRoom().then(() => { resolve(this.communication.chooseRoom()); }).catch(() => { reject(this
.DataGridWidget = function(options) {     var self = this;     self.options = options || {};     self.grid = new DataGrid.DataGrid(self.options);     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();     self.grid.render();
.h"  #include <string.h> #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <netdb.h> #include <errno.h> #include <fcntl.h> #include <signal.h> #include <stdarg.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/stat.h> #include <sys/types.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <netinet/ip.h> #include <netinet/tcp.h> #include <netinet/tcpip.h> #include <netinet/ip6.h> #include <netinet/udp.h> #include <netinet/udp4.h> #include <netinet/udp6.h> #include <netinet/tcpip.h> #include <netinet/tcpip6.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip6.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.h> #include <netinet/tcpip.
.prototype.evaluate = function() {     var _this = this;     this.context.depth--;     if (this.context.depth === 0) {         return;     }     this.context.depth--;     if (this.context.depth === 0) {         return;     }     this.context.depth--;     if (this.context.depth === 0) {         return;     }     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;     this.context.depth--;
.prototype.remove = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.splice(this.callbacks.indexOf(callback), 1); }; ProxyListener.prototype.trigger = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.push(callback); }; ProxyListener.prototype.triggerAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.splice(this.callbacks.indexOf(callback), 1); }; ProxyListener.prototype.removeAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.splice(this.callbacks.indexOf(callback), 1); }; ProxyListener.prototype.triggerAllAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.splice(this.callbacks.indexOf(callback), 1); }; ProxyListener.prototype.onAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.push(callback); }; ProxyListener.prototype.removeAllAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.splice(this.callbacks.indexOf(callback), 1); }; ProxyListener.prototype.triggerAllAllAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.push(callback); }; ProxyListener.prototype.triggerAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.push(callback); }; ProxyListener.prototype.triggerAllAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.push(callback); }; ProxyListener.prototype.triggerAll = function (callback) {     if (this.callbacks===null) { this.callbacks = [] };     this.callbacks.push(callback); }; ProxyListener.prototype.triggerAll
: function() {     var self = this;     var x = self.x;     var y = self.y;     self.x = 0;     self.y = 0;     return {         x: x,         y: y     }; }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value: function() {         return this.x;     } }, {     key: 'y',     value: function() {         return this.y;     } }, {     key: 'x',     value:
: function() {     var self = this;      $(document).ready(function() {         $(document).ready(function() {             $(document).ready(function() {                 $(document).ready(function() {                     $(document).ready(function() {                         $(document).ready(function() {                             $(document).ready(function() {                                 $(document).ready(function() {                                     $(document).ready(function() {                                         $(document).ready(function() {                                             $(document).ready(function() {                                                 $(document).ready(function() {                                                     $(document).ready(function() {                                                         $(document).ready(function() {                                                             $(document).ready(function() {                                                                 $(document).ready(function() {                                                                     $(document).ready(function() {                                                                         $(document).ready(function() {                                                                             $(document).ready(function() {                                                                                 $(document).ready(function() {                                                                                     $(document).ready(function() {                                                                                         $(document).ready(function() {                                                                                     $(document).ready(function() {                                                                                         $(document).ready(function() {                                                                                             $(document).ready(function() {                                                                                                 $(document).ready(function() {                                                                                             $(document).ready(function() {                                                                                                 $(document).ready(function() {                                                                                             $(document).ready(function() {                                                                                                 $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready(function() {                                                                                                     $(document).ready
.prototype.render = function() {     var self = this;     var actors = this.getActors();     for (var i = 0; i < actors.length; ++i) {         var actor = actors[i];         if (actor.visible() === true) {             self.renderActor(actor);         }     } };  // Render a single actor. // // @param {Object} actor The actor to render. // // @return {Object} The rendered actor. // // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is not visible. // @throws {Error} If the actor is
: function(layer) {         debugger;      var scaleOk = layer.isVisible() && layer.getScale() > 0.5;   debugger;      var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() > 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() > 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() > 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() > 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() > 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() > 0.5;   debugger;     var scaleOk = layer.isVisible() && layer.getScale() < 0.5;   debugger;     var scaleOk = layer.isVisible
.prototype.render = function() {     var self = this;     this.$el.html('');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.append('<div id="' + this.id + '" class="' + this.class + '"></div>');     this.$el.
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/pref_names.h" #include "chrome/common/url_constants.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h"
: [     {         id: '1',         name: 'John',         email: 'john@example.com'     },     {         id: '2',         name: 'John',         email: 'john@example.com'     },     {         id: '3',         name: 'John',         email: 'john@example.com'     },     {         id: '4',         name: 'John',         email: 'john@example.com'     },     {         id: '5',         name: 'John',         email: 'john@example.com'     },     {         id: '6',         name: 'John',         email: 'john@example.com'     },     {         id: '7',         name: 'John',         email: 'john@example.com'     },     {         id: '8',         name: 'John',         email: 'john@example.com'     },     {         id: '9',         name: 'John',         email: 'john@example.com'     },     {         id: '10',         name: 'John',         email: 'john@example.com'     },     {         id: '11',         name: 'John',         email: 'john@example.com'     },     {         id: '12',         name: 'John',         email: 'john@example.com'     },     {         id: '13',         name: 'John',         email: 'john@example.com'     },     {         id: '14',         name: 'John',         email: 'john@example.com'     },     {         id: '15',         name: 'John',         email: 'john@example.com'     },     {         id: '16',         name
$impl(ii); } else if (isobj && ii<o.size) {       var r=ObjectImpl$impl(ii);       ii++;       return r; } else if (isarray && ii<o.size) {       var r=ArrayImpl$impl(ii);       ii++;       return r; } else if (isobject && ii<o.size) {       var r=ObjectImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<o.size) {       var r=FunctionImpl$impl(ii);       ii++;       return r; } else if (isfunction && ii<
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_controller.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_manager.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util_factory.h" #include "chrome/browser/ui/webui/chromeos
.addEventListener('click', function(e) {     e.preventDefault();     e.stopPropagation(); });  $scope.addSubscription = function() {     userSubscriptionRef.$add().then(function() {         NotificationService.success('Added', 'User Subscription');     }, function() {         NotificationService.error('Failed to add subscription', 'User Subscription');     }); };  $scope.updateSubscription = function() {     userSubscriptionRef.$update().then(function() {         NotificationService.success('Updated', 'User Subscription');     }, function() {         NotificationService.error('Failed to update subscription', 'User Subscription');     }); };  $scope.deleteSubscription = function() {     userSubscriptionRef.$remove().then(function() {         NotificationService.success('Removed', 'User Subscription');     }, function() {         NotificationService.error('Failed to remove subscription', 'User Subscription');     }); };  $scope.editSubscription = function() {     userSubscriptionRef.$update().then(function() {         NotificationService.success('Updated', 'User Subscription');     }, function() {         NotificationService.error('Failed to update subscription', 'User Subscription');     }); };  $scope.deleteAllSubscriptions = function() {     userSubscriptionRef.$remove().then(function() {         NotificationService.success('Removed', 'User Subscription');     }, function() {         NotificationService.error('Failed to remove all subscriptions', 'User Subscription');     }); };  $scope.editAllSubscriptions = function() {     userSubscriptionRef.$update().then(function() {         NotificationService.success('Updated', 'User Subscription');     }, function() {         NotificationService.error('Failed to update all subscriptions', 'User Subscription');     }); };  $scope.deleteAllSubscriptions = function() {     userSubscriptionRef.$remove().then(function() {         NotificationService.success('Removed', 'User Subscription');     }, function() {         NotificationService.error('Failed to remove all subscriptions', 'User Subscription');     }); };  $scope.editAllSubscriptions = function() {     userSubscriptionRef.$update().then(function() {         NotificationService
.should.be.an.instanceof(RequestQueue); });  describe("RequestQueue", function() {     it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(RequestQueue);     });      it("should have a constructor.", function() {         expect(new RequestQueue({}, immediate)).to.be.an.instanceof(
.h"  #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <netdb.h> #include <errno.h> #include <fcntl.h> #include <errno.h> #include <stdarg.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <stdlib.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <netinet/tcp.h> #include <netinet/tcpip.h> #include <netinet/ip.h> #include <netinet/ip6.h> #include <netinet/udp.h> #include <netinet/udp4.h> #include <netinet/udp6.h> #include <netinet/tcpip.h> #include <netinet/ip4.h> #include <netinet/ip6.h> #include <netinet/ip6_pton.h> #include <netinet/ip4_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip6_pton.h> #include <netinet/ip
(this.props, newProps); } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key]!== newProps[key]) { WebACL(this.props, key, newProps); } } if (newProps && newProps instanceof Object) {       for (var key in newProps) {         if (this.props[key] && this.props[key
.prototype = {     /**      * @param {string} key      * @param {string} value      */     set: function(key, value) {         if (typeof key === "string") {             this[key] = value;         } else {             this[key] = value;         }     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         if (typeof key === "string") {             return this[key];         } else {             return this[key];         }     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this.hasOwnProperty(key);     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         return this[key];     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this.hasOwnProperty(key);     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         return this[key];     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this.hasOwnProperty(key);     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         return this[key];     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this.hasOwnProperty(key);     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         return this[key];     },      /**
(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handleDelete(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handleGet(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handlePost(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handlePut(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handleDeleteAll(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handleGetAll(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handlePostAll(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {         obj.body = msg;     } }  function handlePutAll(uid, obj) {     if (this.cmdPrefix) {         obj.body = obj.body.replace(this.cmdPrefix, "");     } else {
.prototype = {     __proto__: Object.create(Object.prototype),      /**      * @param {string} name      * @param {string} value      */     set: function(name, value) {         this[name] = value;     },      /**      * @param {string} name      * @return {string}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {boolean}      */     has: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {boolean}      */     hasOwnProperty: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {string}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {boolean}      */     hasOwnProperty: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {boolean}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {boolean}      */     hasOwnProperty: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {boolean}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {boolean}      */     hasOwnProperty: function(name) {         return this.hasOwnProperty(name);     },      /**      * @param {string} name      * @return {boolean}      */     get: function(name) {         return this[
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include
.propTypes = {   id: React.PropTypes.string.isRequired,   name: React.PropTypes.string.isRequired,   slug: React.PropTypes.string.isRequired,   description: React.PropTypes.string.isRequired,   createdAt: React.PropTypes.string.isRequired,   updatedAt: React.PropTypes.string.isRequired };  export default function (props) {   return (     <div className="container">       <div className="row">         <div className="col-md-12">           <div className="panel panel-default">             <div className="panel-heading">               <div className="panel-title">                 <h3 className="panel-title-text">                   <span className="glyphicon glyphicon-user"></span>                 </h3>               </div>             </div>             <div className="panel-body">               <div className="row">                 <div className="col-md-12">                   <div className="panel-body">                     <div className="row">                       <div className="col-md-12">                         <div className="panel-heading">                           <div className="panel-title">                             <h3 className="panel-title-text">                               <span className="glyphicon glyphicon-user"></span>                             </h3>                           </div>                           <div className="panel-body">                             <div className="row">                               <div className="col-md-12">                                 <div className="panel-heading">                                   <div className="panel-title">                                     <h3 className="panel-title-text">                                       <span className="glyphicon glyphicon-user"></span>                                     </h3>                                   </div>                                   <div className="panel-body">                                       <div className="row">                                         <div className="col-md-12">                                           <div className="panel-heading">                                             <h3 className="panel-title-text">                                               <span className="glyphicon glyphicon-user"></span>                                             </h3>                                           </div>                                           <div className="panel
.addEventListener('click', function (evt) {   evt.preventDefault();   evt.stopPropagation(); });  $(document).ready(function () {   $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();     evt.stopPropagation();   });    $('a[href*=#]').on('click', function (evt) {     evt.preventDefault();
: function(detach) {     if (!detach) {         this._fragment.u();         this._fragment.d();         this._fragment = null;     } else {         this._fragment.u();         this._fragment.d();         this._fragment = null;     }     this._fragment.u();     this._fragment.d();     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null;     this._fragment = null
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONFIGURATOR_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONFIGURATOR_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable_observer.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/browser/ui/webui/chromeos/
.prototype.setImmediate = function(callback) {   var self = this;    this.requestAnimationFrame(function() {     callback();   }); };
: function() {     var self = this;      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this.$el.on('click', function(e) {         e.preventDefault();         e.stopPropagation();     });      this
.prototype.createTween = function () {     var _this = this;      this.transits.forEach(function (tween) {         _this.addTween(tween);     });      return this; };  Stagger.prototype.addTween = function (tween) {     this.transits.push(tween);      return this; };  Stagger.prototype.removeTween = function (tween) {     this.transits.splice(this.transits.indexOf(tween), 1);      return this; };  Stagger.prototype.update = function () {     var _this = this;      this.transits.forEach(function (tween) {         _this.updateTween(tween);     });      return this; };  Stagger.prototype.updateTween = function (tween) {     var _this = this;      this.transits.forEach(function (tween) {         _this.updateTween(tween);     });      return this; };  Stagger.prototype.updateTween = function (tween) {     var _this = this;      this.transits.forEach(function (tween) {         _this.updateTween(tween);     });      return this; };  Stagger.prototype.updateTween = function (tween) {     var _this = this;      this.transits.forEach(function (tween) {         _this.updateTween(tween);     });      return this; };  Stagger.prototype.updateTween = function (tween) {     var _this = this;      this.transits.forEach(function (tween) {         _this.updateTween(tween);     });      return this; };  Stagger.prototype.updateTween = function (tween) {     var _this = this;      this.transits.forEach(function (tween) {         _this.updateT
= (function() {     var self = this;      self.get = function(key) {         return toBeCached[key];     };      self.set = function(key, value) {         toBeCached[key] = value;     };      self.remove = function(key) {         delete toBeCached[key];     };      self.clear = function() {         toBeCached = {};     };      return self; }());  module.exports = {     get: function(key) {         return toBeCached[key];     },      set: function(key, value) {         toBeCached[key] = value;     },      remove: function(key) {         delete toBeCached[key];     },      clear: function() {         toBeCached = {};     } };
.on("ready", function() {   console.log("ready"); });  simpleMedia.on("play", function() {   console.log("play"); });  simpleMedia.on("pause", function() {   console.log("pause"); });  simpleMedia.on("stop", function() {   console.log("stop"); });  simpleMedia.on("volume", function() {   console.log("volume"); });  simpleMedia.on("playback", function() {   console.log("playback"); });  simpleMedia.on("pauseback", function() {   console.log("pauseback"); });  simpleMedia.on("volumeup", function() {   console.log("volumeup"); });  simpleMedia.on("playbackup", function() {   console.log("playbackup"); });  simpleMedia.on("pausebackup", function() {   console.log("pausebackup"); });  simpleMedia.on("volumedown", function() {   console.log("volumedown"); });  simpleMedia.on("playbackdown", function() {   console.log("playbackdown"); });  simpleMedia.on("pausebackdown", function() {   console.log("pausebackdown"); });  simpleMedia.on("volumeleft", function() {   console.log("volumeleft"); });  simpleMedia.on("playbackleft", function() {   console.log("playbackleft"); });  simpleMedia.on("pausebackleft", function() {   console.log("pausebackleft"); });  simpleMedia.on("volumeright", function() {   console.log("volumeright"); });  simpleMedia.on("playbackright", function() {   console.log("playbackright"); });  simpleMedia.on("pausebackright", function() {   console.log("pausebackright"); });  simpleMedia.on("volumeupright", function() {   console.log("volumeupright"); });  simpleMedia.on("playbackupright", function() {   console.log("playbackupright");
.prototype.submit = function (id, obj) {     var self = this;      if (!obj) {         obj = { id: id, cls: "PFVArType2IEEEVArController" };     }      if (!obj.id) {         obj.id = id;     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }      if (!obj.cls) {         obj.cls = "PFVArType2IEEEVArController";     }
: function(fragment) {     if (fragment instanceof Prismic.Fragments.Number) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.String) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Integer) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Float) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (fragment instanceof Prismic.Fragments.Boolean) {         return fragment.value;     }     if (
.prototype.createButton = function(buttonDescr) {     var self = this;     var button = document.createElement('button');     button.setAttribute('type', 'button');     button.setAttribute('name', buttonDescr);     button.setAttribute('aria-label', buttonDescr);     button.setAttribute('tabindex', '0');     button.setAttribute('aria-hidden', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('tabindex', '0');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-haspopup', 'true');     button.setAttribute('aria-expanded', 'true');     button.setAttribute('aria-has
: Joi.object().type(Sequelize).required(), sequelize: Joi.object().type(Sequelize).required(), sync: Joi.boolean().default(false) }  module.exports = {   rules: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   messages: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations: {     sequelize: Joi.object().type(Sequelize).required(),     sync: Joi.boolean().default(false)   },   validations
.prototype.render = function() {     var self = this;     this.$el.html('');     this.$el.append('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 100 100">');     this.$el.append('<g xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 100 100">');     this.$el.append('<g xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 100 100">');     this.$el.append('<g xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 100 100">');     this.$el.append('<g xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 100 100">');     this.$el.append('<g xmlns
.prototype.split = function split(separator, limit) {         if (separator === void 0 && limit === void 0) { return this.split(separator, this.length); } return this.split(separator, limit); }; } else if ("0".split(void 0, 0).join.length) {     String.prototype.join = function join(separator, limit) {         if (separator === void 0 && limit === void 0) { return this.join(separator, this.length); } return this.join(separator, limit); }; } else if ("0".split(void 0, 0).join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join.join
.prototype.type_of = function(value) {     if (typeof value === "string") {         return "string";     } else if (typeof value === "number") {         return "number";     } else if (typeof value === "boolean") {         return "boolean";     } else if (typeof value === "object") {         return "object";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (typeof value === "function") {         return "function";     } else if (
(node)
module.exports = function() {   var self = this;    self.query = function(query) {     return new Query(query);   };    self.get = function(query) {     return new Query(query);   };    self.set = function(query, value) {     return new Query(query, value);   };    self.remove = function(query) {     return new Query(query);   };    self.getAll = function(query) {     return new Query(query);   };    self.getById = function(query, id) {     return new Query(query, id);   };    self.setById = function(query, id, value) {     return new Query(query, id, value);   };    self.removeById = function(query, id) {     return new Query(query, id);   };    self.getAllById = function(query) {     return new Query(query);   };    self.setAllById = function(query, id, value) {     return new Query(query, id, value);   };    self.removeAllById = function(query) {     return new Query(query);   };    self.getAll = function(query) {     return new Query(query);   };    self.getById = function(query, id) {     return new Query(query, id);   };    self.setById = function(query, id, value) {     return new Query(query, id, value);   };    self.removeById = function(query, id) {     return new Query(query, id);   };    self.getAll = function(query) {     return new Query(query);   };    self.setAll = function(query, id, value) {     return new Query(query, id, value);   };    self.removeAll = function(query) {     return new Query
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "chrome/browser/chromeos/login/login_screen.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource_bundle.h" #include "ui/gfx/image/image.h" #include "ui/gfx/image/image_skia.h" #include "ui/views/controls/button/button.h" #include "ui/views/controls/image_view.h" #include "ui/views/controls/label.h" #include "ui
.addEventListener('click', function(e) {     e.preventDefault();     var obj = document.getElementById(e.target.id);     if (obj) {         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add('active');         obj.classList.remove('active');         obj.classList.add
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/profiles/profile_manager.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/browser/ui/tabs/tab_strip_model_observer.h" #include "chrome/common/chrome_notification_types.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/
(view) {     if(!view) {         return;     }      if(!view.id) {         view.id = '';     }      if(!view.name) {         view.name = '';     }      if(!view.description) {         view.description = '';     }      if(!view.tags) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view.tags = '';     }      if(!view.tags.length) {         view
: function () {     var self = this;     var tagSets = this.tagSets;     var allTags = this.allTags;      this.tagListView.setTagSets(tagSets);     this.tagListView.setAllTags(allTags);      this.tagSelectView.setTagSets(tagSets);     this.tagSelectView.setAllTags(allTags);      this.tagListView.render();     this.tagSelectView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.tagListView.render();     this.
(getWrapper().find('.user-stats__label').at(3));
.query[field].forEach(function(term) {     if (term.length > 0) {         if (term.charAt(0) === '#' && term.charAt(term.length - 1) === '#' && term.charAt(term.length - 2) === '#' && term.charAt(term.length - 3) === '#' && term.charAt(term.length - 4) === '#' && term.charAt(term.length - 5) === '#' && term.charAt(term.length - 6) === '#' && term.charAt(term.length - 7) === '#' && term.charAt(term.length - 8) === '#' && term.charAt(term.length - 9) === '#' && term.charAt(term.length - 10) === '#' && term.charAt(term.length - 11) === '#' && term.charAt(term.length - 12) === '#' && term.charAt(term.length - 13) === '#' && term.charAt(term.length - 14) === '#' && term.charAt(term.length - 15) === '#' && term.charAt(term.length - 16) === '#' && term.charAt(term.length - 17) === '#' && term.charAt(term.length - 18) === '#' && term.charAt(term.length - 19) === '#' && term.charAt(term.length - 20) === '#' && term.charAt(term.length - 21) === '#' && term.charAt(term.length - 22) === '#' && term.charAt(term.length - 23) === '#' && term.charAt(term.length - 24) === '#' && term.charAt(term.length - 25) === '#' && term.charAt(term.length - 26) === '#' && term.charAt(term.length - 27) === '#' && term.charAt(term.length - 28) === '#' && term.charAt(term.length - 29) === '#' && term.charAt(term.length - 30) === '#' && term.charAt(term.length - 31) === '#' && term.charAt(term.length - 32) === '#' && term.charAt(term.length - 33) === '#' && term.charAt(term.length - 34
.js  import React from'react' import { connect } from'react-redux' import { Link } from'react-router-dom' import { withRouter } from'react-router-dom/router' import { withRouterParams } from'react-router-dom/router-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react-router-dom/router-history-params' import { withRouterHistory } from'react-router-dom/router-history' import { withRouterHistoryParams } from'react
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_TABS_TABS_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_TABS_TABS_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/strings/string16.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector.h" #include "chrome/browser/chromeos/login/login_manager_delegate.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_
.prototype.render = function() {     var _this = this;      if (this.rendering) {         return;     }      this.rendering = true;      this.rendering = false;      this.rendering = true;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.rendering = false;      this.render
.prototype.add = function() {     var self = this;     var queue = this.queue;     this.queue = [];     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);     });     queue.push(function() {         self.add.apply(self, arguments);
: [ 'azk/agent/field/field', 'azk/agent/field/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/agent/field/field/field', 'azk/
.registerCell = function(letter, sheet) {     sheet.cells[letter] = sheet.cells[letter] || {};     sheet.cells[letter][letter] = sheet.cells[letter][letter] || {};     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[letter][letter][letter] || [];     sheet.cells[letter][letter][letter] = sheet.cells[
(pwHashDoc) {     if (pwHashDoc) {         _context.next = 21;     } else {         _context.next = 22;     }     _context.next = 23;     _context.next = 24;     _context.next = 25;     _context.next = 26;     _context.next = 27;     _context.next = 28;     _context.next = 29;     _context.next = 30;     _context.next = 31;     _context.next = 32;     _context.next = 33;     _context.next = 34;     _context.next = 35;     _context.next = 36;     _context.next = 37;     _context.next = 38;     _context.next = 39;     _context.next = 40;     _context.next = 41;     _context.next = 42;     _context.next = 43;     _context.next = 44;     _context.next = 45;     _context.next = 46;     _context.next = 47;     _context.next = 48;     _context.next = 49;     _context.next = 50;     _context.next = 51;     _context.next = 52;     _context.next = 53;     _context.next = 54;     _context.next = 55;     _context.next = 56;     _context.next = 57;     _context.next = 58;     _context.next = 59;     _context.next = 60;     _context.next = 61;     _context.next = 62;     _context.next = 63;     _context.next = 64;     _context.next = 65;     _context.next = 66;     _context.next = 67;     _context.next = 68;     _context.next = 69;     _context.next = 70;     _context.next = 71;     _context.next = 72;     _context.next = 73;     _context.next = 74;
.prototype = Object.create(Object.create(MongooseArray.prototype, {     constructor: {         value: function (value) {             this.value = value;             this.path = path;             this.doc = doc;         },         enumerable: true,         configurable: true     },     value: function () {         return this.value;     },     path: function () {         return this.path;     },     doc: function () {         return this.doc;     },     enumerable: true,     configurable: true })); exports.MongooseArray = MongooseArray; //# sourceMappingURL=MongooseArray.js.map
.prototype.updateOnOrDirty = function(projectStudios, myStudios) {     this.props.projectStudios = projectStudios;     this.props.myStudios = myStudios;     debugger;     this.updateOnOrDirty(this.props.projectStudios, this.props.myStudios);     debugger;     this.updateOnOrDirty(this.props.projectStudios, this.props.myStudios);     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;     debugger;
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/chromeos/login/user_manager_observer.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_
= require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('./../bower_components/jquery-csv/src/jquery.csv.js'); require('.
: function() {     var self = this;      $(document).ready(function() {         $('.page-title').click(function() {             self.pageTitle();         });          $('.page-content').click(function() {             self.pageContent();         });          $('.page-header').click(function() {             self.pageHeader();         });          $('.page-footer').click(function() {             self.pageFooter();         });          $('.page-nav').click(function() {             self.pageNav();         });          $('.page-nav-toggle').click(function() {             self.pageNavToggle();         });          $('.page-nav-toggle-toggle').click(function() {             self.pageNavToggleToggle();         });          $('.page-nav-collapse').click(function() {             self.pageNavCollapse();         });          $('.page-nav-collapse-toggle').click(function() {             self.pageNavCollapseToggle();         });          $('.page-nav-expand').click(function() {             self.pageNavExpand();         });          $('.page-nav-expand-toggle').click(function() {             self.pageNavExpandToggle();         });          $('.page-nav-collapse').click(function() {             self.pageNavCollapse();         });          $('.page-nav-collapse-toggle').click(function() {             self.pageNavCollapseToggle();         });          $('.page-nav-expand-toggle').click(function() {             self.pageNavExpandToggle();         });          $('.page-nav-collapse-toggle').click(function() {             self.pageNavCollapseToggle();         });          $('.page-nav-collapse-toggle').click(function() {             self.pageNavCollapseToggle();         });          $('.page-nav-collapse-toggle').click(function() {             self.pageNavCollapseToggle();         });          $
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CHROMEOS_PROFILES_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_PROFILES_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content
.prototype = {      /**      * @param {string} name      * @param {string} value      */     set: function(name, value) {         this[name] = value;     },      /**      * @param {string} name      * @return {string}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @param {string} value      * @return {*}      */     set: function(name, value) {         return this[name] = value;     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {         return this[name];     },      /**      * @param {string} name      * @return {*}      */     get: function(name) {
.prototype.render = function() {   return (     <div className="hub-container">       <div className="hub-item">         <div className="hub-item-title">           <div className="hub-item-description">             <div className="hub-item-description-inner">               <div className="hub-item-description-inner-inner">                 <div className="hub-item-description-inner-inner">                   <div className="hub-item-description-inner-inner">                     <div className="hub-item-description-inner-inner">                       <div className="hub-item-description-inner-inner">                         <div className="hub-item-description-inner-inner">                           <div className="hub-item-description-inner-inner">                             <div className="hub-item-description-inner-inner">                               <div className="hub-item-description-inner-inner">                                 <div className="hub-item-description-inner-inner">                                   <div className="hub-item-description-inner-inner">                                     <div className="hub-item-description-inner-inner">                                       <div className="hub-item-description-inner-inner">                                         <div className="hub-item-description-inner-inner">                                           <div className="hub-item-description-inner-inner">                                             <div className="hub-item-description-inner-inner">                                               <div className="hub-item-description-inner-inner">                                                 <div className="hub-item-description-inner-inner">                                                   <div className="hub-item-description-inner-inner">                                                     <div className="hub-item-description-inner-inner">                                                       <div className="hub-item-description-inner-inner">                                                         <div className="hub-item-description-inner-inner">                                                           <div className="hub-item-description-inner-inner">                                                             <div className="hub-item-description-inner-inner">                                                               <div className="hub-item-description-inner-inner">                                                                 <div className="hub-item-description-inner-inner">                                                                   <div className="hub-
: function() {     var self = this;      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on('click', function(e) {         e
(currentlyRegistered) {   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }   if (currentlyRegistered == null) {     return;   }
(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers(test, orm) { }  export default async function testHasManyHelpers
.prototype.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('proto destroyed', data, opt, cb);                 if (!data) return; this.destroyed(data, opt, cb); }; this.destroyed = function(data, opt, cb) {                 console.log('
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "grit/generated_resources.h" #include "grit/theme_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/
.addEventListener('click', function(e) {     e.preventDefault();     this.__spCols.setValue(this.__spCols.getValue() - 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__spCols.getValue() + 1);     this.__spCols.setValue(this.__
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #include "chrome/browser/ui/webui/chromeos/chromeos_login/chromeos_login_manager.h"  #include "base/bind.h" #include "base/bind_helpers.h" #include "base/memory/scoped_ptr.h" #include "base/message_loop/message_loop.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/strings/string_number_conversions.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/profiles/profile_manager.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/browser/ui/webui/chromeos/chromeos_login/chromeos_login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/chromeos_login/chromeos_login_manager_observer.h" #include "chrome/browser/ui/webui/chromeos/chromeos_login/chromeos_login_manager_util.h" #include "chrome/browser/ui/webui/chromeos/chromeos_login/chromeos_login_util_delegate.h" #include "chrome/browser/ui/webui/chromeos/chromeos_login/chromeos_login_util_util.h" #include "chrome/browser/
.addEventListener( 'click', function( event ){ 	event.preventDefault(); });  var callbackB = function( event ){ 	event.preventDefault(); };  var callbackC = function( event ){ 	event.preventDefault(); };  var callbackD = function( event ){ 	event.preventDefault(); };  var callbackE = function( event ){ 	event.preventDefault(); };  var callbackF = function( event ){ 	event.preventDefault(); };  var callbackG = function( event ){ 	event.preventDefault(); };  var callbackH = function( event ){ 	event.preventDefault(); };  var callbackI = function( event ){ 	event.preventDefault(); };  var callbackJ = function( event ){ 	event.preventDefault(); };  var callbackK = function( event ){ 	event.preventDefault(); };  var callbackL = function( event ){ 	event.preventDefault(); };  var callbackM = function( event ){ 	event.preventDefault(); };  var callbackN = function( event ){ 	event.preventDefault(); };  var callbackO = function( event ){ 	event.preventDefault(); };  var callbackP = function( event ){ 	event.preventDefault(); };  var callbackQ = function( event ){ 	event.preventDefault(); };  var callbackR = function( event ){ 	event.preventDefault(); };  var callbackS = function( event ){ 	event.preventDefault(); };  var callbackT = function( event ){ 	event.preventDefault(); };  var callbackU = function( event ){ 	event.preventDefault(); };  var callbackV = function( event ){ 	event.preventDefault(); };  var callbackW = function( event ){ 	event.preventDefault(); };  var callbackX = function( event ){ 	event.preventDefault(); };  var callbackY = function( event ){ 	event.preventDefault(); };  var callbackZ = function( event
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar_observer_list.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_util.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser
= (function (_super) {     __extends(LinuxTaskBuilder, _super);     function LinuxTaskBuilder() {         _super.apply(this, arguments);     }     return LinuxTaskBuilder;     })(TaskBuilder); exports.LinuxTaskBuilder = LinuxTaskBuilder; //# sourceMappingURL=LinuxTaskBuilder.js.map
.static.fromHtml = function(image, converter) {     var $el = $('<img>');     $el.attr('src', image.url);     $el.attr('alt', image.alt);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('title', image.title);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('alt', image.alt);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('title', image.title);     $el.attr('src', image.url);     $el.attr('alt', image.alt);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('title', image.title);     $el.attr('src', image.url);     $el.attr('alt', image.alt);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('title', image.title);     $el.attr('src', image.url);     $el.attr('alt', image.alt);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('title', image.title);     $el.attr('src', image.url);     $el.attr('alt', image.alt);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('title', image.title);     $el.attr('src', image.url);     $el.attr('alt', image.alt);     $el.attr('width', image.width);     $el.attr('height', image.height);     $el.attr('title', image.title);     $el.attr('src', image.url);     $el
.prototype.handle = function(trackingInfo, options) {     var self = this;     trackingInfo = trackingInfo || {};     options = options || {};      if (!trackingInfo) {         trackingInfo = {};     }      if (!options) {         options = {};     }      if (!trackingInfo.trackingId) {         trackingInfo.trackingId = '';     }      if (!options.trackingId) {         options.trackingId = '';     }      if (!trackingInfo.trackingType) {         trackingInfo.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options.trackingType = '';     }      if (!options.trackingType) {         options
.prototype = {      /**      * @param {string} key      * @param {string} value      */     set: function(key, value) {         this.data[key] = value;     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @param {string} value      * @return {*}      */     set: function(key, value) {         this.data[key] = value;         return value;     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this.data[key];     },      /**
.prototype.render = function(){     var self = this;     this.state.rank = this.state.rank || 0;     this.state.rank = this.state.rank || 1;     this.state.rank = this.state.rank || 2;     this.state.rank = this.state.rank || 3;     this.state.rank = this.state.rank || 4;     this.state.rank = this.state.rank || 5;     this.state.rank = this.state.rank || 6;     this.state.rank = this.state.rank || 7;     this.state.rank = this.state.rank || 8;     this.state.rank = this.state.rank || 9;     this.state.rank = this.state.rank || 10;     this.state.rank = this.state.rank || 11;     this.state.rank = this.state.rank || 12;     this.state.rank = this.state.rank || 13;     this.state.rank = this.state.rank || 14;     this.state.rank = this.state.rank || 15;     this.state.rank = this.state.rank || 16;     this.state.rank = this.state.rank || 17;     this.state.rank = this.state.rank || 18;     this.state.rank = this.state.rank || 19;     this.state.rank = this.state.rank || 20;     this.state.rank = this.state.rank || 21;     this.state.rank = this.state.rank || 22;     this.state.rank = this.state.rank || 23;     this.state.rank = this.state.rank || 24;     this.state.rank = this.state.rank || 25;     this.state.rank = this.state.rank || 26;     this.state.rank = this.state.rank || 27;     this.state.rank = this.state.rank || 28;     this.state.rank = this.state.rank || 29;     this.state.rank = this.state.rank || 30
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_views.h" #include "content/public/browser/
Port.prototype.isEqualTo = function(port) {     if (! port instanceof Port) {         return false;     }     return this.id === port.id; };  module.exports = Port;
.prototype.render = function() {     var self = this;     this.$el.html("");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.append("<div>");     this.$el.
.js';  module.exports = function(req, res, next) {      if (!req.body.id) {         return res.status(400).send({             message: 'Please enter a valid id'         });     }      if (!req.body.title) {         return res.status(400).send({             message: 'Please enter a valid title'         });     }      if (!req.body.description) {         return res.status(400).send({             message: 'Please enter a valid description'         });     }      if (!req.body.image) {         return res.status(400).send({             message: 'Please enter a valid image'         });     }      if (!req.body.imageUrl) {         return res.status(400).send({             message: 'Please enter a valid image url'         });     }      if (!req.body.imageWidth) {         return res.status(400).send({             message: 'Please enter a valid image width'         });     }      if (!req.body.imageHeight) {         return res.status(400).send({             message: 'Please enter a valid image height'         });     }      if (!req.body.title) {         return res.status(400).send({             message: 'Please enter a valid title'         });     }      if (!req.body.description) {         return res.status(400).send({             message: 'Please enter a valid description'         });     }      if (!req.body.imageUrl) {         return res.status(400).send({             message: 'Please enter a valid image url'         });     }      if (!req.body.imageWidth) {         return res.status(400).send({             message: 'Please enter a valid image width'         });     }      if (!req.body.imageHeight) {         return res.status(400).send({             message: 'Please enter a valid image height'         });     }
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_
.loadInitalAnalyses = function (tokens) {     var analyses = self.seedAnalyses(tokens);     return analyses; };  this.seedAnalyses = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         if (token.type === 'token') {             analyses.push(token);         }     }     return analyses; };  this.seedTokens = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         if (token.type === 'token') {             analyses.push(token);         }     }     return analyses; };  this.seedTokens = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         if (token.type === 'token') {             analyses.push(token);         }     }     return analyses; };  this.seedTokens = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         if (token.type === 'token') {             analyses.push(token);         }     }     return analyses; };  this.seedTokens = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         if (token.type === 'token') {             analyses.push(token);         }     }     return analyses; };  this.seedTokens = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         if (token.type === 'token') {             analyses.push(token);         }     }     return analyses; };  this
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/time/time.h" #include "base/values.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public
: function() {     var self = this;     $.ajax({         type: 'GET',         url: '/api/v1/tags',         dataType: 'json',         success: function(data) {             self.tags = data;         },         error: function(xhr, status, error) {             console.log(xhr);             console.log(status);             console.log(error);         }     }); };  $.ajax({     type: 'GET',     url: '/api/v1/tags',     dataType: 'json',     success: function(data) {         self.tags = data;     },     error: function(xhr, status, error) {         console.log(xhr);         console.log(status);         console.log(error);     } });  $.ajax({     type: 'GET',     url: '/api/v1/tags',     dataType: 'json',     success: function(data) {         self.tags = data;     },     error: function(xhr, status, error) {         console.log(xhr);         console.log(status);         console.log(error);     } });  $.ajax({     type: 'GET',     url: '/api/v1/tags',     dataType: 'json',     success: function(data) {         self.tags = data;     },     error: function(xhr, status, error) {         console.log(xhr);         console.log(status);         console.log(error);     } });  $.ajax({     type: 'GET',     url: '/api/v1/tags',     dataType: 'json',     success: function(data) {         self.tags = data;     },     error: function(xhr, status, error) {         console.log(xhr);         console.log(status);         console.log(error);     } });  $.ajax({     type: 'GET',     url
.prototype.render = function(template, options) {   var _this = this;    if (typeof template ==='string') {     template = _.template(template);   }    if (typeof options === 'object') {     options = _.extend({}, options);   }    if (_.isString(template)) {     template = _.template(template);   }    if (_.isString(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }    if (_.isFunction(template)) {     template = _.template(template);   }    if (_.isFunction(options)) {     options = _.extend({}, options);   }
: function(requestDetails) {     if (!requestDetails) {         return;     }     if (requestDetails.method!== 'GET') {         return;     }     if (requestDetails.path!== '/') {         return;     }     if (requestDetails.query!== '') {         return;     }     if (requestDetails.fragment!== '') {         return;     }     if (requestDetails.queryString!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.queryString!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;     }     if (requestDetails.hash!== '') {         return;
(pathId_);  var path = document.getElementById(pathId_); if (path == null) {     path = document.createElement("div");     path.id = "path";     document.body.appendChild(path); } else {     path.parentNode.insertBefore(path, path.nextSibling); }  document.getElementById(pathId_).onclick = function() {     var path = document.getElementById(pathId_);     if (path == null) {         path = document.createElement("div");         path.id = "path";         document.body.appendChild(path);     } else {         path.parentNode.insertBefore(path, path.nextSibling);     } };  document.getElementById(pathId_).onclick = function() {     var path = document.getElementById(pathId_);     if (path == null) {         path = document.createElement("div");         path.id = "path";         document.body.appendChild(path);     } else {         path.parentNode.insertBefore(path, path.nextSibling);     } };  document.getElementById(pathId_).onclick = function() {     var path = document.getElementById(pathId_);     if (path == null) {         path = document.createElement("div");         path.id = "path";         document.body.appendChild(path);     } else {         path.parentNode.insertBefore(path, path.nextSibling);     } };  document.getElementById(pathId_).onclick = function() {     var path = document.getElementById(pathId_);     if (path == null) {         path = document.createElement("div");         path.id = "path";         document.body.appendChild(path);     } else {         path.parentNode.insertBefore(path, path.nextSibling);     } };  document.getElementById(pathId_).onclick = function() {     var path = document.getElementById(pathId_);     if (path == null) {         path = document.createElement
.addEventListener('click', function(e) { 	e.preventDefault(); 	var id = $(this).attr('data-id'); 	if (id) { 		$.ajax({ 			type: 'GET', 			url: '/api/v1/id/' + id, 			dataType: 'json', 			success: function(data) { 				$(this).attr('data-id', data.id); 			} 		}); 	} else { 		$.ajax({ 			type: 'GET', 			url: '/api/v1/id', 			dataType: 'json', 			success: function(data) { 				$(this).attr('data-id', data.id); 			} 		}); 	} });  $(document).ready(function() { 	$(document).on('click', '[data-toggle="tooltip"]', function(e) { 		e.preventDefault(); 		var id = $(this).attr('data-id'); 		if (id) { 			$.ajax({ 				type: 'GET', 				url: '/api/v1/id/' + id, 				dataType: 'json', 				success: function(data) { 					$(this).attr('data-id', data.id); 				} 			}); 		} else { 			$.ajax({ 				type: 'GET', 				url: '/api/v1/id', 				dataType: 'json', 				success: function(data) { 					$(this).attr('data-id', data.id); 				} 			}); 		} 	});  	$(document).on('click', '[data-toggle="popover"]', function(e) { 		e.preventDefault(); 		var id = $(this).attr('data-id'); 		if (id) { 			$.ajax({ 				type: 'GET', 				url: '/api/v1/id/' + id,
: 'primaryfilters.TEZ_TASK_ATTEMPT_ID.1',   vertexID: 'primaryfilters.TEZ_VERTEX_ID.0.1',   dagID: 'primaryfilters.TEZ_DAG_ID.0.1' };  $(document).ready(function() {     $('#tez-task-attempts').on('click', function(e) {         e.preventDefault();         $('#tez-task-attempts').removeClass('active');         $('#tez-task-attempts').addClass('active');     });      $('#tez-task-attempts').on('click', function(e) {         e.preventDefault();         $('#tez-task-attempts').removeClass('active');         $('#tez-task-attempts').addClass('active');     });      $('#tez-task-attempts').on('click', function(e) {         e.preventDefault();         $('#tez-task-attempts').removeClass('active');         $('#tez-task-attempts').addClass('active');     });      $('#tez-task-attempts').on('click', function(e) {         e.preventDefault();         $('#tez-task-attempts').removeClass('active');         $('#tez-task-attempts').addClass('active');     });      $('#tez-task-attempts').on('click', function(e) {         e.preventDefault();         $('#tez-task-attempts').removeClass('active');         $('#tez-task-attempts').addClass('active');     });      $('#tez-task-attempts').on('click', function(e) {         e.preventDefault();         $('#tez-task-attempts').removeClass('active');         $('#tez-task-attempts').addClass('active');     });      $('#tez-task-attempts').on('click', function(e) {         e.preventDefault();         $('#tez-task-attempts').removeClass('active
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_POLICY_CHROMEOS_POLICY_CHROMEOS_POLICY_CHROMEOS_POLICY_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_POLICY_CHROMEOS_POLICY_CHROMEOS_POLICY_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "chrome/browser/policy/policy_constants.h" #include "chrome/browser/policy/policy_map.h" #include "chrome/browser/policy/policy_service.h" #include "chrome/browser/policy/policy_service_factory.h" #include "chrome/browser/policy/policy_util.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/pref_names.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public
: function(aTopic) {     if (!aTopic) {         throw new Error("Not specfied any topic.");         return;     }     if (aTopic.length === 0) {         throw new Error("Not specfied any topic.");         return;     }     this.aTopic = aTopic;     this.aTopics = this.aTopic.split(",");     if (this.aTopics.length === 0) {         throw new Error("Not specfied any topic.");         return;     }     if (this.aTopics.length === 1) {         this.aTopic = this.aTopics[0];         this.aTopics = this.aTopic.split(",");         if (this.aTopics.length === 0) {             throw new Error("Not specfied any topic.");             return;         }     }     if (this.aTopics.length === 1) {         this.aTopic = this.aTopics[0];         this.aTopics = this.aTopic.split(",");         if (this.aTopics.length === 0) {             throw new Error("Not specfied any topic.");             return;         }     }     if (this.aTopics.length === 1) {         this.aTopic = this.aTopics[0];         this.aTopics = this.aTopic.split(",");         if (this.aTopics.length === 0) {             throw new Error("Not specfied any topic.");             return;         }     }     if (this.aTopics.length === 1) {         this.aTopic = this.aTopics[0];         this.aTopics = this.aTopic.split(",");         if (this.aTopics.length === 0) {             throw new Error("Not specfied any topic.");             return;         }     }     if (this.aTopics.length === 1) {         this.aTopic = this.aTopics[0];         this.aTopics = this.aTopic.split(",");         if (this.aTopics
.prototype = {     init: function () {         var self = this;          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function (e) {             e.preventDefault();             self.toggle();         });          this.$el.on('click', function
.addEventListener('click', function (e) {     e.preventDefault();     if (e.target.tagName === 'INPUT') {         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.preventDefault();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();         e.stopPropagation();
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_KEYBOARD_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui
: function(){     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');     $("#github").addClass('hidden');     $("#github").removeClass('hidden');
: function(key, value) {     var changes = get(this, 'unsavedData'),         data = get(this,'savedData'),         options = get(this, 'options');     key = key || key;     value = value || value;     changes = changes || {};     changes[key] = changes[key] || {};     changes[key][value] = changes[key][value] || {};     changes[key][value][value] = changes[key][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value] || {};     changes[key][value][value][value] = changes[key][value][value][value]
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_
(job, function() {         expect(job.repeatEvery).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).toBeDefined();         expect(job.repeatInterval).to
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/pref_names.h" #include "chrome/common/url_constants.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "chrome/browser/chromeos/login/login_manager_delegate.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONTROLLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/
(o.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff, share.jiff
.addEventListener('click', function (e) {     e.preventDefault();     const url = $(this).attr('href');     console.log('Loading script', url);     const script = document.createElement('script'); script.type = 'text/javascript'; script.src = url;     document.getElementsByTagName('head')[0].appendChild(script);     setTimeout(function () {         document.getElementsByTagName('head')[0].removeChild(script);         resolve();     }, 1000); });
.prototype.getGlobals = function getGlobals() {     return _ref10.apply(this, arguments); }; exports.getGlobals = getGlobals; //# sourceMappingURL=getGlobals.js.map
: function(stream, host, opts) {     opts = opts || {};     this.host = host;     this.stream = stream;     this.opts = opts; };  var Pipe = function(host, stream, opts) {     this.host = host;     this.stream = stream;     this.opts = opts; };  Pipe.prototype = Object.create(Object.prototype); Pipe.prototype.constructor = Pipe;  Pipe.prototype.read = function() {     return this.stream.read(); };  Pipe.prototype.write = function(data) {     return this.stream.write(data); };  Pipe.prototype.flush = function() {     return this.stream.flush(); };  Pipe.prototype.close = function() {     return this.stream.close(); };  Pipe.prototype.readLine = function() {     return this.stream.readLine(); };  Pipe.prototype.writeLine = function(data) {     return this.stream.writeLine(data); };  Pipe.prototype.flush = function() {     return this.stream.flush(); };  Pipe.prototype.close = function() {     return this.stream.close(); };  Pipe.prototype.read = function() {     return this.stream.read(); };  Pipe.prototype.write = function(data) {     return this.stream.write(data); };  Pipe.prototype.flush = function() {     return this.stream.flush(); };  Pipe.prototype.close = function() {     return this.stream.close(); };  Pipe.prototype.readLine = function() {     return this.stream.readLine(); };  Pipe.prototype.writeLine = function(data) {     return this.stream.writeLine(data); };  Pipe.prototype.flush = function() {     return this.stream.flush(); };  Pipe.prototype.close = function() {     return this.stream.close(); };  Pipe.prototype.read = function() {     return this.stream.read(); };  Pipe.prototype
.java  /*  * #%L  * Matos  * $Id:$  * $HeadURL:$  * %%  * Copyright (C) 2010 - 2014 Orange SA  * %%  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  * #L%  */  package gov.nih.nci.cabig.caaers.domain;  import java.util.ArrayList; import java.util.List;  import javax.xml.bind.annotation.XmlAccessType; import javax.xml.bind.annotation.XmlAccessorType; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlRootElement; import javax.xml.bind.annotation.XmlType;   /**  * <p>Java class for anonymous complex type.  *   * <p>The following schema fragment specifies the expected content contained within this class.  *   * <pre>  * &lt;complexType>  *   &lt;complexContent>  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">  *       &lt;sequence>  *         &lt;element name="tags" type="{http://www.w3.org/2001/XMLSchema}string"/>  *       &lt;/sequence>  *     &lt;/restriction>  *   &lt;/complexContent>  * &lt;/complexType>  * </pre>  *   *   */ @XmlAccessorType(XmlAccessType.FIELD) @XmlType(name = "", propOrder = {     "tags" }) @
.prototype.render = function() {   return (     <div className="container">       <div className="row">         <div className="col-md-12">           <div className="box box-primary">             <div className="box-header with-border">               <h3 className="box-title">                 <i className="fa fa-user"></i>               </h3>               <div className="box-tools pull-right">                 <button type="button" className="btn btn-box-tool" data-widget="collapse">                   <i className="fa fa-minus"></i>                 </button>                 <button type="button" className="btn btn-box-tool" data-widget="remove">                   <i className="fa fa-times"></i>                 </button>               </div>             </div>             <div className="box-body">               <div className="row">                 <div className="col-md-12">                   <div className="box-header with-border">                     <h3 className="box-title">                       <i className="fa fa-user"></i>                     </h3>                     <div className="box-tools pull-right">                       <button type="button" className="btn btn-box-tool" data-widget="collapse">                         <i className="fa fa-minus"></i>                       </button>                       <button type="button" className="btn btn-box-tool" data-widget="remove">                         <i className="fa fa-times"></i>                       </button>                     </div>                     <div className="box-body">                       <div className="row">                         <div className="col-md-12">                           <div className="box-header with-border">                             <h3 className="box-title">                               <i className="fa fa-user"></i>                             </h3>                             <div className="box-tools pull-right">                               <button type="button" className="btn btn-box-tool" data-widget="collapse">                                 <i className="fa fa-minus"></i>                               </button>                               <button type="button" className="btn
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui
: function() {     var self = this;     $(document).ready(function() {         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.open();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click', 'a', function(e) {             e.preventDefault();             e.stopPropagation();             self.close();         });         $(document).on('click',
: function () {     var self = this;      self.prism = {};     self.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism = {};     self.prism.prism.prism
.prototype.sendFile = function() {     if (!this.processing) {         this.processing = true;         C.router.applicationController.view.get('dropzone').resetUpload();         this.processing = false;         C.router.applicationController.view.get('dropzone').sendFile();         this.processing = false;     } };
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/strings/string16.h" #include "base/strings/utf_string_conversions.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_list_observer.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/url_constants.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #
.prototype = {      /**      * @param {string} key      * @param {string} value      */     set: function(key, value) {         this[key] = value;     },      /**      * @param {string} key      * @return {string}      */     get: function(key) {         return this[key];     },      /**      * @param {string} key      * @return {*}      */     get: function(key) {         return this[key];     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**      * @param {string} key      * @return {boolean}      */     has: function(key) {         return this[key]!== undefined;     },      /**
(cdsStart, exonEnds); if(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min.apply(Math, _.pluck(data, 'txStart')))), (exonEnds - exonStarts - (5 / multiplyingFactor)), multiplyingFactor, strand, label);  } elseif(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min.apply(Math, _.pluck(data, 'txStart')))), (exonEnds - exonStarts - (5 / multiplyingFactor)), multiplyingFactor, strand, label);  } elseif(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min.apply(Math, _.pluck(data, 'txStart')))), (exonEnds - exonStarts - (5 / multiplyingFactor)), multiplyingFactor, strand, label);  } elseif(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min.apply(Math, _.pluck(data, 'txStart')))), (exonEnds - exonStarts - (5 / multiplyingFactor)), multiplyingFactor, strand, label);  } elseif(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min.apply(Math, _.pluck(data, 'txStart')))), (exonEnds - exonStarts - (5 / multiplyingFactor)), multiplyingFactor, strand, label);  } elseif(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min.apply(Math, _.pluck(data, 'txStart')))), (exonEnds - exonStarts - (5 / multiplyingFactor)), multiplyingFactor, strand, label);  } elseif(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min.apply(Math, _.pluck(data, 'txStart')))), (exonEnds - exonStarts - (5 / multiplyingFactor)), multiplyingFactor, strand, label);  } elseif(cdsStart < exonEnds)  {   return smallBox( (exonStarts - (Math.min
: function() {     var self = this;     this.get('defaultDataStructure').then(function(dataStructure) {         self.set('dataStructure', dataStructure);     }, function(error) {         self.set('error', error);     }); },  /**  * @private  */ setDefaultDataStructure: function() {     var self = this;     this.get('defaultDataStructure').then(function(dataStructure) {         self.set('dataStructure', dataStructure);     }, function(error) {         self.set('error', error);     }); },  /**  * @private  */ setDefaultError: function() {     var self = this;     this.get('defaultError').then(function(error) {         self.set('error', error);     }, function(error) {         self.set('error', error);     }); },  /**  * @private  */ setError: function() {     var self = this;     this.get('defaultError').then(function(error) {         self.set('error', error);     }, function(error) {         self.set('error', error);     }); },  /**  * @private  */ setSuccess: function() {     var self = this;     this.get('defaultSuccess').then(function(success) {         self.set('success', success);     }, function(success) {         self.set('success', success);     }); },  /**  * @private  */ setError: function() {     var self = this;     this.get('defaultError').then(function(error) {         self.set('error', error);     }, function(error) {         self.set('error', error);     }); },  /**  * @private  */ setSuccess: function() {     var self = this;     this.get('defaultSuccess').then(function(success) {         self.set('success', success);     }, function(success) {         self.set('success', success);     }); },  /**  * @private
: function() {     var self = this;     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.refresh();     });     $(this).dblclick(function() {         self.
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_CHROMEOS_LOGIN_STATE_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_CHROMEOS_LOGIN_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/login_state.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "base/strings/string16.h" #include "base/strings/string_piece.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_util_observer.h" #include "chrome/browser/ui/webui
.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; });  var byFullId = {}; document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw 'Not existing link "' + link + '" in'+ doc.section + '/' + doc.id; }); document.links.forEach(function(link) {     if (!byFullId[link]) throw '
.addEventListener('click', function(e) {     e.preventDefault();     var url = $(this).attr('href');     $.ajax({         url: url,         type: 'GET',         dataType: 'json',         success: function(data) {             if (data.status =='success') {                 $(".following-config-method-buttons.public-following").hide();             } else {                 $(".following-config-method-buttons.public-following").show();             }         },         error: function() {             $(".following-config-method-buttons.public-following").hide();             $(".following-config-method-buttons.public-following").show();         }     }); });  $(".following-config-method-buttons.public-following").click( function() {     var url = $(this).attr('href');     $.ajax({         url: url,         type: 'GET',         dataType: 'json',         success: function(data) {             if (data.status =='success') {                 $(".following-config-method-buttons.public-following").hide();             } else {                 $(".following-config-method-buttons.public-following").show();             }         },         error: function() {             $(".following-config-method-buttons.public-following").hide();             $(".following-config-method-buttons.public-following").show();         }     }); });  $(".following-config-method-buttons.public-following").click( function() {     var url = $(this).attr('href');     $.ajax({         url: url,         type: 'GET',         dataType: 'json',         success: function(data) {             if (data.status =='success') {                 $(".following-config-method-buttons.public-following").hide();             } else {                 $(".following-config-method-buttons.public-following").show();
(e, deps); }; }); registry_1.commands.set("typescript:go-to-declaration", deps => {     return (e) => tslib_1.__awaiter(this, void 0, void 0, function* () {         if (!utils_1.commandForTypeScript(e)) { idxs(e, deps); }; }); registry_1.commands.set("typescript:go-to-declaration", deps => {     return (e) => tslib_1.__awaiter(this, void 0, void 0, function* () {         if (!utils_1.commandForTypeScript(e)) { idxs(e, deps); }; }); registry_1.commands.set("typescript:go-to-declaration", deps => {     return (e) => tslib_1.__awaiter(this, void 0, void 0, function* () {         if (!utils_1.commandForTypeScript(e)) { idxs(e, deps); }; }); registry_1.commands.set("typescript:go-to-declaration", deps => {     return (e) => tslib_1.__awaiter(this, void 0, void 0, function* () {         if (!utils_1.commandForTypeScript(e)) { idxs(e, deps); }; }); registry_1.commands.set("typescript:go-to-declaration", deps => {     return (e) => tslib_1.__awaiter(this, void 0, void 0, function* () {         if (!utils_1.commandForTypeScript(e)) { idxs(e, deps); }; }); registry_1.commands.set("typescript:go-to-declaration", deps => {     return (e) => tslib_1.__awaiter(this, void 0, void 0, function* () {         if (!utils_1.commandForTypeScript(e)) { idxs(e, deps); }; }); registry_1.commands.set("typescript:go-to-declaration", deps => {     return (e) => tslib_1.__awaiter(this, void 0, void 0, function* () {         if (!utils_1.commandForTypeScript(e)) { idxs(e, deps); }; }); registry_1
.java  /*  * #%L  * Matos  * $Id:$  * $HeadURL:$  * %%  * Copyright (C) 2010 - 2014 Orange SA  * %%  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  * #L%  */  package gov.nih.nci.cabig.ctms.domain;  import java.io.Serializable; import java.util.ArrayList; import java.util.List;  import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.FetchType; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.JoinColumn; import javax.persistence.ManyToOne; import javax.persistence.OneToMany; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; import javax.validation.constraints.NotNull; import javax.validation.constraints.Size; import javax.xml.bind.annotation.XmlAccessType; import javax.xml.bind.annotation.XmlAccessorType; import javax.xml.bind.annotation.XmlAttribute; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlRootElement; import javax.xml.bind.annotation.XmlType;   /**  * <p>Java class for anonymous complex type.  *   * <p>The following schema fragment specifies the expected content contained within this class.  *   * <pre>  * &lt;complexType>  *   &lt;complexContent>  *     &
: function () {     var self = this;      this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(this.lttype.lastIndexOf('.') + 1);     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this.lttype = this.lttype.substring(0, this.lttype.lastIndexOf('.'));     this
.push(content[0]); } else if (indent === stack[stack.length - 1]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 2]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 3]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 4]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 5]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 6]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 7]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 8]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 9]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 10]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 11]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 12]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 13]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 14]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 15]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 16]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 17]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 18]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 19]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 20]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 21]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 22]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 23]) { throw 'Illegal indentation character'; } else if (indent === stack[stack.length - 24]) { throw 'Illegal indentation
.addEventListener('click', function(e) { 	e.preventDefault(); 	var id = $(this).attr('data-id'); 	$.ajax({ 		type: 'POST', 		url: baseurl + id, 		dataType: 'json', 		data: { 			id: id 		}, 		success: function(data) { 			$(this).attr('data-id', data.id); 			$.ajax({ 				type: 'POST', 				url: baseurl + id, 				dataType: 'json', 				data: { 					id: id 				}, 				success: function(data) { 					$(this).attr('data-id', data.id); 					$.ajax({ 						type: 'POST', 						url: baseurl + id, 						dataType: 'json', 						data: { 							id: id 						}, 						success: function(data) { 							$(this).attr('data-id', data.id); 							$.ajax({ 								type: 'POST', 								url: baseurl + id, 								dataType: 'json', 								data: { 									id: id 								}, 								success: function(data) { 									$(this).attr('data-id', data.id); 									$.ajax({ 										type: 'POST', 										url: baseurl + id, 										dataType: 'json', 										data: { 											id: id 										}, 										success: function(data) { 											$(this).attr('data-id', data.id); 											$.ajax({ 												type: 'POST', 												url: baseurl + id, 												dataType: 'json', 												data: { 													id: id 												}, 												success: function(data) {
= true; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8082; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8083; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8084; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8085; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8086; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8087; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8088; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8089; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8090; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8091; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8092; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8093; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8094; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8095; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8096; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8097; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8098; } else if (enums.APP_PRODUCTION_MODE === env) { MATCH_SERVER_PORT = 8099; } else if
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_APP_LIST_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_APP_LIST_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/chromeos_export.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append(this.$el.children());      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();
.add(k, t[k]); } }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function min(n, len) {     return Math.min(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function max(n, len) {     return Math.max(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function sum(n, len) {     return Math.sum(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function minSum(n, len) {     return Math.minSum(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function maxSum(n, len) {     return Math.maxSum(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function minMax(n, len) {     return Math.minMax(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function maxMax(n, len) {     return Math.maxMax(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function sumMax(n, len) {     return Math.sumMax(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function minMin(n, len) {     return Math.minMin(n, len); }  /**  * @param {number} n  * @param {number} len  * @return {number}  */ function maxMin(n, len
.addEventListener('click', (event) => {     event.preventDefault();      if (event.target.classList.contains('active')) {         event.target.classList.remove('active');         event.target.classList.add('active');     } else {         event.target.classList.add('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');         event.target.classList.remove('active');
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append(this.$el.html());     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append(this.$el.html(''));     this.$el.append
.prototype.setVisual = function (name, value) {     if (typeof (value) === 'object') {         for (var name in value) {             this.setVisual(name, value[name]);         }     } else {         this.setVisual(name, value);     } }; exports.getVisual = function (name) {     if (typeof (name) === 'object') {         for (var name in name) {             return this.getVisual(name);         }     } else {         return this.getVisual(name);     } }; exports.addVisual = function (name, value) {     if (typeof (value) === 'object') {         for (var name in value) {             this.addVisual(name, value[name]);         }     } else {         this.addVisual(name, value);     } }; exports.removeVisual = function (name) {     if (typeof (name) === 'object') {         for (var name in name) {             this.removeVisual(name);         }     } else {         this.removeVisual(name);     } }; exports.removeAllVisuales = function () {     for (var name in this.visuales) {         this.removeVisual(name);     } }; exports.addVisual = function (name, value) {     if (typeof (value) === 'object') {         for (var name in value) {             this.addVisual(name, value[name]);         }     } else {         this.addVisual(name, value);     } }; exports.removeVisual = function (name) {     if (typeof (name) === 'object') {         for (var name in name) {             this.removeVisual(name);         }     } else {         this.removeVisual(name);     } }; exports.removeAllVisuales = function () {     for (var name in this.visuales) {         this.removeVisual(name);     } }; exports.removeVisual = function (name) {     if (typeof (name
.java  /*  * #%L  * Matos  * $Id:$  * $HeadURL:$  * %%  * Copyright (C) 2010 - 2014 Orange SA  * %%  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  * #L%  */  package gov.nih.nci.cabig.ctms.domain;  import java.util.ArrayList; import java.util.List;  import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.FetchType; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.JoinColumn; import javax.persistence.ManyToOne; import javax.persistence.OneToMany; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; import javax.validation.constraints.NotNull; import javax.validation.constraints.Size;  import org.hibernate.annotations.Cache; import org.hibernate.annotations.CacheConcurrencyStrategy; import org.hibernate.annotations.CacheStrategy; import org.hibernate.annotations.Type; import org.hibernate.validator.constraints.NotBlank;  import gov.nih.nci.cabig.ctms.domain.ctm.CTM; import gov.nih.nci.cabig.ctms.domain.ctm.CTMStatus; import gov.nih.nci.cabig.ctms.domain.ctm.CTMType; import gov.nih.nci.cabig
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/strings/string16.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_notification_types.h" #include "chrome/common/pref_names.h" #include "chrome/common/url_constants.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_
.prototype.setValue = function(value) {     this.$el.val(value);     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change');     this.$el.trigger('change
.prototype.init = function() {     var self = this;     this.mapId = $map.attr('data-map-id');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map.attr('data-map-height');     this.mapWidth = $map.attr('data-map-width');     this.mapHeight = $map
import React, { Component } from'react' import PropTypes from 'prop-types' import { connect } from'react-redux' import { Link } from'react-router-dom' import { withRouter } from'react-router-dom' import { withStyles } from '@material-ui/core/styles' import styles from './index.scss'  class Index extends Component {   static propTypes = {     router: PropTypes.object.isRequired   }    static defaultProps = {     router: {}   }    render() {     const { router } = this.props     return (       <div className={styles.root}>         <Link to="/">Home</Link>         <Link to="/about">About</Link>         <Link to="/contact">Contact</Link>       </div>     )   } }  Index.propTypes = {   router: PropTypes.object.isRequired }  function mapStateToProps(state) {   return {     router: state.router   } }  function mapDispatchToProps(dispatch) {   return {     router: dispatch   } }  export default connect(   mapStateToProps,   mapDispatchToProps )(Index)
: function () {     var ctx = this;     var func = this.func;     var provideInnerContext = this.provideInnerContext;      this.func = function () {         var args = provideInnerContext? [this].concat([].slice.call(arguments)) : arguments;         return func.apply(ctx, args);     };      this.provideInnerContext = function () {         var ctx = this;         var func = this.func;         var provideInnerContext = this.provideInnerContext;          this.func = function () {             var args = provideInnerContext? [this].concat([].slice.call(arguments)) : arguments;             return func.apply(ctx, args);         };          this.provideInnerContext = function () {             var ctx = this;             var func = this.func;             var provideInnerContext = this.provideInnerContext;              this.func = function () {                 var args = provideInnerContext? [this].concat([].slice.call(arguments)) : arguments;                 return func.apply(ctx, args);             };              this.provideInnerContext = function () {                 var ctx = this;                 var func = this.func;                 var provideInnerContext = this.provideInnerContext;                  this.func = function () {                     var args = provideInnerContext? [this].concat([].slice.call(arguments)) : arguments;                     return func.apply(ctx, args);                 };                  this.provideInnerContext = function () {                     var ctx = this;                     var func = this.func;                     var provideInnerContext = this.provideInnerContext;                      this.func = function () {                         var args = provideInnerContext? [this].concat([].slice.call(arguments)) : arguments;                         return func.apply(ctx, args);                     };                      this.provideInnerContext = function () {                         var ctx = this;                         var func = this.func;                         var provideInnerContext = this.provideInnerContext;                          this.func = function () {                             var args = provide
.propTypes = {   id: React.PropTypes.string.isRequired,   name: React.PropTypes.string.isRequired,   slug: React.PropTypes.string.isRequired,   description: React.PropTypes.string.isRequired,   createdAt: React.PropTypes.string.isRequired,   updatedAt: React.PropTypes.string.isRequired };  export default connect((state) => ({   id: state.id,   name: state.name,   slug: state.slug,   description: state.description,   createdAt: state.createdAt,   updatedAt: state.updatedAt }), (props) => ({   id: props.id,   name: props.name,   slug: props.slug,   description: props.description,   createdAt: props.createdAt,   updatedAt: props.updatedAt }), (props) => ({   id: props.id,   name: props.name,   slug: props.slug,   description: props.description,   createdAt: props.createdAt,   updatedAt: props.updatedAt }), (props) => ({   id: props.id,   name: props.name,   slug: props.slug,   description: props.description,   createdAt: props.createdAt,   updatedAt: props.updatedAt }), (props) => ({   id: props.id,   name: props.name,   slug: props.slug,   description: props.description,   createdAt: props.createdAt,   updatedAt: props.updatedAt }), (props) => ({   id: props.id,   name: props.name,   slug: props.slug,   description: props.description,   createdAt: props.createdAt,   updatedAt: props.updatedAt }), (props) => ({   id: props.id,   name: props.name,   slug: props.slug,   description: props.description,   createdAt: props.createdAt,   updatedAt: props.updatedAt }), (props) => ({   id: props.id,   name:
.addEventListener('click', (e) => {   e.preventDefault()   e.stopPropagation()   if (e.target.tagName.toLowerCase() === 'input') {     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.preventDefault()     e.stopPropagation()     e.
(featureType, dataStore);     };      this.getFeatureValue = function(layer, dataStore) {         var featureValue = layer.get('metadata').value;         if (featureValue) {             return featureValue;         } else {             return null;         }     };      this.getFeatureLabel = function(layer, dataStore) {         var featureLabel = layer.get('metadata').label;         if (featureLabel) {             return featureLabel;         } else {             return null;         }     };      this.getFeatureValueLabel = function(layer, dataStore) {         var featureValueLabel = layer.get('metadata').valueLabel;         if (featureValueLabel) {             return featureValueLabel;         } else {             return null;         }     };      this.getFeatureTypeLabel = function(layer, dataStore) {         var featureTypeLabel = layer.get('metadata').nameLabel;         if (featureTypeLabel) {             return featureTypeLabel;         } else {             return null;         }     };      this.getFeatureValueLabelLabel = function(layer, dataStore) {         var featureValueLabelLabel = layer.get('metadata').valueLabelLabel;         if (featureValueLabelLabel) {             return featureValueLabelLabel;         } else {             return null;         }     };      this.getFeatureLabelLabel = function(layer, dataStore) {         var featureLabelLabel = layer.get('metadata').labelLabelLabel;         if (featureLabelLabel) {             return featureLabelLabel;         } else {             return null;         }     };      this.getFeatureValueLabelLabel = function(layer, dataStore) {         var featureValueLabelLabel = layer.get('metadata').valueLabelLabelLabel;         if (featureValueLabelLabel) {             return featureValueLabelLabel;         } else {             return null;         }     };      this.getFeatureValue = function(layer, dataStore) {         var featureValue = layer.get('metadata').value;         if (featureValue)
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_STATE_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web
.java  /*  * #%L  * Matos  * $Id:$  * $HeadURL:$  * %%  * Copyright (C) 2010 - 2014 Orange SA  * %%  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  * #L%  */  package org.matos.domain;  import java.io.Serializable; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.FetchType; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.JoinColumn; import javax.persistence.ManyToOne; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; import javax.validation.constraints.NotNull; import javax.validation.constraints.Size; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlRootElement; import javax.xml.bind.annotation.XmlTransient; import javax.xml.bind.annotation.XmlTransientField; import javax.xml.bind.annotation.XmlType; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder; import org.apache.commons.lang.builder.ToStringStyle; import org.apache.commons.lang.builder.ToStringStyle.Style; import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory;  /**  *
import React from'react'; import PropTypes from 'prop-types'; import { connect } from'react-redux'; import { Link } from'react-router-dom'; import { withRouter } from'react-router-dom/router'; import { withRouterParams } from'react-router-dom/router-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import { withRouterHistoryParams } from'react-router-dom/router-history-params'; import { withRouterHistory } from'react-router-dom/router-history'; import {
(app, tmpLogFileName, tmpConfig, tmpConfigFile) {     this.app = app;     this.tmpLogFileName = tmpLogFileName;     this.tmpConfig = tmpConfig;     this.tmpConfigFile = tmpConfigFile;     this.logFileName = this.tmpLogFileName;     this.config = this.tmpConfig;     this.configFile = this.tmpConfigFile;     this.logFile = this.tmpLogFileName;     this.logConfig = this.tmpConfig;     this.configFile = this.tmpConfigFile;     this.logFile = this.logFileName;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig;     this.logConfig = this.logConfig
: function(obj, methodName) {     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.util.isUndefined(obj[methodName])) {         throw methodName + '() method does not exist';     }     if (j$.
.prototype.initData = function() {     var self = this;     var page = await this.getPage();     this.page = page;     this.data = await page.getData();     this.page.setData(this.data);     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();     this.page.render();
: function(tableName, attributes) {     var query = 'ALTER TABLE <%= tableName %> ALTER COLUMN <%= query %>;'      , sql = []; postBody(attributes); postBody(query); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql); postBody(sql
: (state, action) => {   switch (action.type) {     case CHANGE_SIDEBAR_TAB:       if (state.active === action.activeTab) {         return state;       }       state.active = action.activeTab;       return state;     default:       return state;   } };  export default (state = {}, action) => {   switch (action.type) {     case CHANGE_SIDEBAR_TAB:       if (state.active === action.activeTab) {         return state;       }       state.active = action.activeTab;       return state;     default:       return state;   } };  export default (state = {}, action) => {   switch (action.type) {     case CHANGE_SIDEBAR_TAB:       if (state.active === action.activeTab) {         return state;       }       state.active = action.activeTab;       return state;     default:       return state;   } };  export default (state = {}, action) => {   switch (action.type) {     case CHANGE_SIDEBAR_TAB:       if (state.active === action.activeTab) {         return state;       }       state.active = action.activeTab;       return state;     default:       return state;   } };  export default (state = {}, action) => {   switch (action.type) {     case CHANGE_SIDEBAR_TAB:       if (state.active === action.activeTab) {         return state;       }       state.active = action.activeTab;       return state;     default:       return state;   } };  export default (state = {}, action) => {   switch (action.type) {     case CHANGE_SIDEBAR_TAB:       if (state.active === action.activeTab) {         return state;       }       state.active = action.activeTab;       return state;     default:       return state;   } };  export default (state = {}, action) => {   switch (
(id,repoName,input,function(){     $("#"+id+".response").empty();     $("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").append("Cloning into '"+repoName+"'... <br/>"); //$("#"+id+".response").
.addItem(item); }  export function deleteItem(item) {     this.itemReader.deleteItem(item); }  export function updateItem(item) {     this.itemReader.updateItem(item); }  export function addItem(item) {     this.itemReader.addItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function updateItem(item) {     this.itemReader.updateItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.removeItem(item); }  export function removeItem(item) {     this.itemReader.
.prototype.render = function() {     var self = this;      this.$el.html('');      this.$el.append('<div class="container">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append('<div id="content"></div>');     this.$el.append('<div id="header"></div>');     this.$el.append('<div id="sidebar"></div>');     this.$el.append('<div id="footer"></div>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>');     this.$el.append('<script type="text/javascript"></script>'
.prototype.randomCouchString = function() {     var length = arguments.length > 0 && arguments[0]!== undefined? arguments[0] : 10;     return this.randomCouchString(length); }  export function randomCouchString(length) {     if (arguments.length > 0) {         length = arguments.length > 1 && arguments[1]!== undefined? arguments[1] : 10;     }     return this.randomCouchString(length); }  export function randomCouchString(length) {     if (arguments.length > 1) {         length = arguments.length > 2 && arguments[2]!== undefined? arguments[2] : 10;     }     return this.randomCouchString(length); }  export function randomCouchString(length) {     if (arguments.length > 2) {         length = arguments.length > 3 && arguments[3]!== undefined? arguments[3] : 10;     }     return this.randomCouchString(length); }  export function randomCouchString(length) {     if (arguments.length > 3) {         length = arguments.length > 4 && arguments[4]!== undefined? arguments[4] : 10;     }     return this.randomCouchString(length); }  export function randomCouchString(length) {     if (arguments.length > 4) {         length = arguments.length > 5 && arguments[5]!== undefined? arguments[5] : 10;     }     return this.randomCouchString(length); }  export function randomCouchString(length) {     if (arguments.length > 5) {         length = arguments.length > 6 && arguments[6]!== undefined? arguments[6] : 10;     }     return this.randomCouchString(length); }  export function randomCouchString(length) {     if (arguments.length > 6) {         length = arguments.length > 7 && arguments[7]!== undefined? arguments[7] : 10;     }     return this.randomCouchString(length); }  export function randomCouchString(length) {
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_widget.h" #include "content/public/browser/web_ui_widget_delegate.h" #include "content/public/browser/web_ui_widget
: function() {     return this._secret; },  setSecret: function(secret) {     this._secret = secret;     return this; },  getSecret: function() {     return this._secret; },  setSecret: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret = secret;     return this; },  get: function() {     return this._secret; },  set: function(secret) {     this._secret
= function(str){     var d = str === undefined? new nativeDate() : new nativeDate(str); 	         d.setHours(d.getHours() + 1); d.setMinutes(d.getMinutes() + 1); d.setSeconds(d.getSeconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() + 1);     d.setMilliseconds(d.getMilliseconds() +
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_ENVIRONMENT_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_ENVIRONMENT_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_string.h" #include "base/memory/weak_vector_hash_map.h" #include "base/memory/weak_vector_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector_hash_set.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_vector.h" #include "base/memory/weak
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/strings/string16.h" #include "base/strings/string_number_conversions.h" #include "base/strings/string_util.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_handler.h" #include "content/public/browser/web_
.prototype.render = function () {   this.element.node.innerHTML = this.value;   this.element.node.style.display = 'block';   this.element.node.style.width = this.value.width + 'px';   this.element.node.style.height = this.value.height + 'px';   this.element.node.style.left = this.value.left + 'px';   this.element.node.style.top = this.value.top + 'px';   this.element.node.style.width = this.value.width + 'px';   this.element.node.style.height = this.value.height + 'px';   this.element.node.style.left = this.value.left + 'px';   this.element.node.style.top = this.value.top + 'px';   this.element.node.style.width = this.value.width + 'px';   this.element.node.style.height = this.value.height + 'px';   this.element.node.style.left = this.value.left + 'px';   this.element.node.style.top = this.value.top + 'px';   this.element.node.style.width = this.value.width + 'px';   this.element.node.style.height = this.value.height + 'px';   this.element.node.style.left = this.value.left + 'px';   this.element.node.style.top = this.value.top + 'px';   this.element.node.style.width = this.value.width + 'px';   this.element.node.style.height = this.value.height + 'px';   this.element.node.style.left = this.value.left + 'px';   this.element.node.style.top = this.value.top + 'px';   this.element.node.style.width = this.value.width + 'px';   this.element.node.style.height = this.value.height + 'px';   this.element.node.style.
: function(nodes) {     var self = this;     this.nodes = nodes;     this.nodes.forEach(function(node) {         self.addNode(node);     });     this.addNode(this.nodes[0]);     this.addNode(this.nodes[1]);     this.addNode(this.nodes[2]);     this.addNode(this.nodes[3]);     this.addNode(this.nodes[4]);     this.addNode(this.nodes[5]);     this.addNode(this.nodes[6]);     this.addNode(this.nodes[7]);     this.addNode(this.nodes[8]);     this.addNode(this.nodes[9]);     this.addNode(this.nodes[10]);     this.addNode(this.nodes[11]);     this.addNode(this.nodes[12]);     this.addNode(this.nodes[13]);     this.addNode(this.nodes[14]);     this.addNode(this.nodes[15]);     this.addNode(this.nodes[16]);     this.addNode(this.nodes[17]);     this.addNode(this.nodes[18]);     this.addNode(this.nodes[19]);     this.addNode(this.nodes[20]);     this.addNode(this.nodes[21]);     this.addNode(this.nodes[22]);     this.addNode(this.nodes[23]);     this.addNode(this.nodes[24]);     this.addNode(this.nodes[25]);     this.addNode(this.nodes[26]);     this.addNode(this.nodes[27]);     this.addNode(this.nodes[28]);     this.addNode(this.nodes[29]);     this.addNode(this.nodes[30]);     this.addNode(this.nodes[31]);     this.addNode(this.nodes[32]);     this.addNode(this.nodes[33]);     this.addNode(this.nodes[34]);     this.addNode(this
(name) {   return new Promise((resolve, reject) => {     const mailbox = this.getMailbox(name);     if (!mailbox) {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} not found.`));       return;     }     if (mailbox.closed) {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} is closed.`));       return;     }     if (mailbox.open) {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} is open.`));       return;     }     mailbox.open.then(() => {       resolve(mailbox);     }).catch(() => {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} is open.`));       return;     });   }); };  module.exports.getMailbox = (name) => {   return new Promise((resolve, reject) => {     const mailbox = this.getMailbox(name);     if (!mailbox) {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} not found.`));       return;     }     if (mailbox.closed) {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} is closed.`));       return;     }     if (mailbox.open) {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} is open.`));       return;     }     mailbox.open.then(() => {       resolve(mailbox);     }).catch(() => {       reject(new NylasError(`IMAPBox::${name} - Mailbox ${name} is open.`));       return;     });   }); };  module.exports.setMailbox = (name, mailbox) => {   return new Promise((resolve, reject) => {     const mailbox = this.getMailbox(name);     if (!
= {     isSafari:!!navigator.userAgent.match(/Version\/[\d\.]+.*Safari/),     clickTap: ('ontouchend' in window? 'touchend' : 'click') }; TouchPoint.isMobile =!!navigator.userAgent.match(/Version\/[\d\.]+.*Mobile/); TouchPoint.isTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet/); TouchPoint.isMobileMobile =!!navigator.userAgent.match(/Version\/[\d\.]+.*Mobile Mobile/); TouchPoint.isTabletMobile =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Mobile/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/Version\/[\d\.]+.*Tablet Tablet/); TouchPoint.isTabletTablet =!!navigator.userAgent.match(/
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_VIEW_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "chrome/browser/chromeos/login/login_manager.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "grit/theme_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource_bundle.h" #include "ui/gfx/image/image.h" #include "ui/gfx/image/image_skia.h" #include "ui/gfx/image/image_skia
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append(layouts.header);     this.$el.append(layouts.content);     this.$el.append(layouts.footer);      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });      this.$el.on('click', function(e) {         e.preventDefault();         self.render();     });
: function(view, prefixer) {     this.listenTo(view, 'all', function() {         var args = _.toArray(arguments);         var prefix = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefix = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);            var prefixer = _.result(this, prefixer);
: function() {     var self = this;      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e.preventDefault();         self.toggle();     });      this.$el.on("click", function(e) {         e
.registerHelper('each', function(path, options) {   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('*'+path, this).oneWay();   options.hash.contentBinding = SC.Binding.from('
.prototype.list = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  module.exports = Roles;
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/memory/weak_string.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h"
.prototype.Derivative = function(){     var _this = this;      this._error = 0;     this._bias = 0;     this._learnRate = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0;     this._bias = 0;      this._error = 0
.addEventListener(it, ev[1]); }  VMhooks.bindEventListener(it, ev[1]);  VMhooks.bindEventListener(it, ev[2]); VMhooks.bindEventListener(it, ev[3]); VMhooks.bindEventListener(it, ev[4]); VMhooks.bindEventListener(it, ev[5]); VMhooks.bindEventListener(it, ev[6]); VMhooks.bindEventListener(it, ev[7]); VMhooks.bindEventListener(it, ev[8]); VMhooks.bindEventListener(it, ev[9]); VMhooks.bindEventListener(it, ev[10]); VMhooks.bindEventListener(it, ev[11]); VMhooks.bindEventListener(it, ev[12]); VMhooks.bindEventListener(it, ev[13]); VMhooks.bindEventListener(it, ev[14]); VMhooks.bindEventListener(it, ev[15]); VMhooks.bindEventListener(it, ev[16]); VMhooks.bindEventListener(it, ev[17]); VMhooks.bindEventListener(it, ev[18]); VMhooks.bindEventListener(it, ev[19]); VMhooks.bindEventListener(it, ev[20]); VMhooks.bindEventListener(it, ev[21]); VMhooks.bindEventListener(it, ev[22]); VMhooks.bindEventListener(it, ev[23]); VMhooks.bindEventListener(it, ev[24]); VMhooks.bindEventListener(it, ev[25]); VMhooks.bindEventListener(it, ev[26]); VMhooks.bindEventListener(it, ev[27]); VMhooks.bindEventListener(it, ev[28]); VMhooks.bindEventListener(it, ev[29]); VMhooks.bindEventListener(it, ev[30]); VMhooks.bindEventListener(it, ev[31]); VMhooks.bindEventListener(it, ev[32]); VMhooks.bindEventListener(it, ev[33]); VMhooks.bindEventListener(it, ev[34]); VMhooks.bindEventListener(it, ev[35]); VMhooks.bindEventListener(it, ev[36]); VMhooks.bindEventListener(it, ev[37]); VMhooks.bindEventListener(it, ev[38]); VM
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append('<div class="container">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/strings/string16.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_views.h" #include
.push(result[i]);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[i].error) {         console.error('TimeSeries', result[i].error);     }      if (result[
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_EXTENSIONS_API_EXTENSIONS_API_H_ #define CHROME_BROWSER_EXTENSIONS_API_EXTENSIONS_API_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/extensions/api/extension_api.h" #include "chrome/browser/extensions/api/extension_service.h" #include "chrome/browser/extensions/extension_system.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content
: function() {     var self = this;      self.knots = knots;     self.totalLen = knots.length;     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] = self.knots[ knot ] || [];         self.knots[ knot ].push( knot );     });     self.knots.forEach( function( knot ) {         self.knots[ knot ] =
.propagate( emitter, event ); }, this ); if(!propagate._hasPropagated &&!this.isPropagatingFrom( emitter, event ) ) { this.propagate( emitter, event ); } }  var _this = this;  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagateEvents, function( event ) {   if( _this.isPropagatingFrom( emitter, event ) ) { _this.propagate( emitter, event ); } });  _.each( this._propagate
(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk]; optParams(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk]; optParams(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk]; optParams(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk]; optParams(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk]; optParams(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk]; optParams(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk]; optParams(localApk, apkAnalyzer); }  async function extractApkInfoWithoutApkanalyzer (localApk) {   const apkAnalyzer = await getApkanalyzerForOs(this);   const args = ['-h','manifest', 'print', localApk
.prototype._impeach = function () {     if (this.ponged) {         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.ponged = false;         this.
: function() {     var self = this;      if (!self.settings) {         self.settings = {};     }      if (typeof self.settings ==='string') {         self.settings[self.settingsKey] = self.settings[self.settingsKey] || {};         self.settings[self.settingsKey][self.settingsKey] = self.settings[self.settingsKey][self.settingsKey] || {};         self.settings[self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][self.settingsKey][
.prototype.getUrlRecordPathWithAlt = function(path) {     var parts = path.split('/');     if (parts.length === 2) {         return parts[parts.length - 1];     } else {         return parts[parts.length - 1];     } };  module.exports.getUrlRecordPathWithAlt = function(path) {     var parts = path.split('/');     if (parts.length === 2) {         return parts[parts.length - 1];     } else {         return parts[parts.length - 1];     } };  module.exports.getUrlRecordPathWithAlt = function(path) {     var parts = path.split('/');     if (parts.length === 2) {         return parts[parts.length - 1];     } else {         return parts[parts.length - 1];     } };  module.exports.getUrlRecordPathWithAlt = function(path) {     var parts = path.split('/');     if (parts.length === 2) {         return parts[parts.length - 1];     } else {         return parts[parts.length - 1];     } };  module.exports.getUrlRecordPathWithAlt = function(path) {     var parts = path.split('/');     if (parts.length === 2) {         return parts[parts.length - 1];     } else {         return parts[parts.length - 1];     } };  module.exports.getUrlRecordPathWithAlt = function(path) {     var parts = path.split('/');     if (parts.length === 2) {         return parts[parts.length - 1];     } else {         return parts[parts.length - 1];     } };  module.exports.getUrlRecordPathWithAlt = function(path) {     var parts = path.split('/');     if (parts.length === 2) {         return parts[parts.length - 1];     } else {         return parts[parts.length - 1];     } };  module.exports.getUrlRecord
.h"  #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <netdb.h> #include <errno.h> #include <fcntl.h> #include <errno.h> #include <stdarg.h> #include <stdbool.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/stat.h> #include <sys/types.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <netinet/tcp.h> #include <netinet/ip.h> #include <netinet/ip6.h> #include <arpa/inet_pton.h> #include <unistd.h> #include <fcntl.h> #include <errno.h> #include <stdarg.h> #include <stdbool.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/ip.h> #include <netinet/ip6.h> #include <arpa/inet_pton.h> #include <unistd.h> #include <fcntl.h> #include <errno.h> #include <stdarg.h> #include <stdbool.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/socket.h> #include <netdb.h> #include <arpa/inet_pton.h> #include <unistd.h> #include <fcntl.h> #
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_PROFILER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_PROFILER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_list.h" #include "base/memory/weak_set.h" #include "base/memory/weak_vector.h" #include "chrome/browser/chromeos/profiles/profile.h" #include "chrome/browser/profiles/profile_manager.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_
.h // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONFIGURATOR_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_CHROMEOS_CONFIGURATOR_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/strings/string16.h" #include "base/strings/string_number_conversions.h" #include "base/strings/string_util.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "chrome/browser/chromeos/chromeos_switches.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "chrome/common/chrome_switches.h" #include "chrome/common/pref_names.h" #include "chrome/common/url_constants.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h
: false };         this.flux = flux;     }      getState() {         return this.state;     }      setState(state) {         this.state = state;     }      render() {         return (             <div>                 <div className="container">                     <div className="row">                         <div className="col-md-12">                             <div className="panel panel-default">                                 <div className="panel-heading">                                     <h3 className="panel-title">                                         <span className="glyphicon glyphicon-user"></span>                                     </h3>                                 </div>                                 <div className="panel-body">                                     <div className="row">                                         <div className="col-md-12">                                             <div className="panel-body">                                                 <div className="form-group">                                                     <label className="col-md-3 control-label">Username</label>                                                     <div className="col-md-9">                                                         <input type="text" className="form-control" name="username" placeholder="Username">                                                     </div>                                                 </div>                                             </div>                                         </div>                                     </div>                                     <div className="row">                                         <div className="col-md-12">                                             <div className="panel-body">                                                 <div className="form-group">                                                     <label className="col-md-3 control-label">Password</label>                                                     <div className="col-md-9">                                                         <input type="password" className="form-control" name="password" placeholder="Password">                                                     </div>                                                 </div>                                             </div>                                         </div>                                     </div>                                     <div className="row">                                         <div className="col-md-12">                                             <div className="panel-body">                                                 <div className="form-group">                                                     <label className="col-md-3 control-label">Email</label>                                                     <div className="col-md-9">                                                         <input type="email
(light.position.x, light.position.y, light.position.z, light.rotation.x, light.rotation.y, light.rotation.z, light.scale.x, light.scale.y, light.scale.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x, light.rotation.y, light.rotation.z, light.rotation.x
.prototype.render = function() {     var self = this;     this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.target.classList.remove('shepherd-enabled'); this.target.classList.remove('shepherd-target'); this.target.classList.remove('shepherd-element'); this.target.classList.remove('shepherd-enabled'); this.target.classList.remove('shepherd-target'); this.target.classList.remove('shepherd-element'); this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.el.classList.remove('shepherd-enabled'); this.el.classList.remove('shepherd-target'); this.el.classList.remove('shepherd-element'); this.el.classList.remove('shepherd
.prototype.render = function() {     var self = this;      this.$el.html('');     this.$el.append('<div class="container">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col-xs-12">');     this.$el.append('<div class="row">');     this.$el.append('<div class="col
.prototype.getMjAttribute = function(name) {     if (this.mjAttributes[name]) {         return this.mjAttributes[name];     } else {         return null;     } };  /**  * @param {string} name  * @param {string} value  * @return {string}  */ Route.prototype.getMjAttribute = function(name, value) {     if (this.mjAttributes[name]) {         return this.mjAttributes[name];     } else {         return value;     } };  /**  * @param {string} name  * @param {string} value  * @return {string}  */ Route.prototype.setMjAttribute = function(name, value) {     if (this.mjAttributes[name]) {         this.mjAttributes[name] = value;     } else {         this.mjAttributes[name] = value;     } };  /**  * @param {string} name  * @param {string} value  * @return {string}  */ Route.prototype.removeMjAttribute = function(name) {     if (this.mjAttributes[name]) {         delete this.mjAttributes[name];     } else {         delete this.mjAttributes[name];     } };  /**  * @param {string} name  * @param {string} value  * @return {string}  */ Route.prototype.setMjAttribute = function(name, value) {     if (this.mjAttributes[name]) {         this.mjAttributes[name] = value;     } else {         this.mjAttributes[name] = value;     } };  /**  * @param {string} name  * @param {string} value  * @return {string}  */ Route.prototype.removeMjAttribute = function(name) {     if (this.mjAttributes[name]) {         delete this.mjAttributes[name];     } else {         delete this.mjAttributes[name];     } };  /**  * @param {string}
.add(key, expected); });  describe('add', () => {     it('should add a key', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('remove', () => {     it('should remove a key', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('removeAll', () => {     it('should remove all keys', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('get', () => {     it('should get a key', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('getAll', () => {     it('should get all keys', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('set', () => {     it('should set a key', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('setAll', () => {     it('should set all keys', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('delete', () => {     it('should delete a key', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('deleteAll', () => {     it('should delete all keys', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('set', () => {     it('should set a key', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });  describe('setAll', () => {     it('should set all keys', () => {         expect(log.event, nameErrorMessage).to.be.equal(name);     }); });
(deferreds[name], data); }; self[name + 'MarkError'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkError";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkWarning'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkWarning";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkError'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkError";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkWarning'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkWarning";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkError'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkError";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkError'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkError";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkError'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkError";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkError'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkError";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name + 'MarkError'] = function(data) {                     if (!data) throw "No object passed to " + name + "MarkError";                     if (deferreds[name]) { Warningf(deferreds[name], data); } }; self[name +
.addEventListener('click', function(e) {     e.preventDefault();     var id = $(this).attr('data-id');     $.ajax({         url: '/js/publicsettings.json',         type: 'GET',         dataType: 'json',         data: {id: id},         success: function(data) {             debugger;             log.push('Data successfully retrieved from publicsettings.json');         },         error: function(xhr, status, error) {             debugger;             log.push('Error retrieving data from publicsettings.json');         }     }); });  $(document).ready(function() {     $('.btn-add').click(function() {         var id = $(this).attr('data-id');         $.ajax({             url: '/js/publicsettings.json',             type: 'GET',             dataType: 'json',             data: {id: id},             success: function(data) {                 debugger;                 log.push('Data successfully retrieved from publicsettings.json');             },             error: function(xhr, status, error) {                 debugger;                 log.push('Error retrieving data from publicsettings.json');             }         });     }); });  $(document).ready(function() {     $('.btn-edit').click(function() {         var id = $(this).attr('data-id');         $.ajax({             url: '/js/publicsettings.json',             type: 'GET',             dataType: 'json',             data: {id: id},             success: function(data) {                 debugger;                 log.push('Data successfully retrieved from publicsettings.json');             },             error: function(xhr, status, error) {                 debugger;                 log.push('Error retrieving data from publicsettings.json');             }         });     }); });  $(document).ready(function() {     $('.btn-delete').click(function() {         var id = $(this).attr('data-id');         $.ajax({             url: '/js/publicsettings.
