<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }      /**      * Retrieves a DOMElement which corresponds to this element and all      * child properties.  This is used to build an entry back
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
     if(deviceIndex >= data[roomIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)   throw "Device doesn't exist";     if(deviceIndex >= data[roomIndex].devices[deviceIndex].devices.length)  
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_factory.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view_delegate.h" #include "chrome/browser/ui/views/tabs/tab_strip_model.h" #include "chrome/browser/ui/views/tabs/tab_strip_model_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include
, {                     xtype: 'tbspacer',      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      * @private      */      /**      *
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 import React, { Component } from 'react'; import PropTypes from 'prop-types'; import { connect } from 'react-redux'; import { withRouter } from 'react-router-dom'; import { withRouterParams } from 'react-router-params'; import { withRouterHistory } from 'react-router-history'; import { withRouterHistoryParams } from 'react-router-history-params'; import { withRouterRouter } from 'react-router-router'; import { withRouterRouterParams } from 'react-router-router-params'; import { withRouterRouterHistory } from 'react-router-router-history'; import { withRouterRouterHistoryParams } from 'react-router-router-history-params'; import { withRouterHistoryHistory } from 'react-router-history-history'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from 'react-router-history-history-params'; import { withRouterHistoryHistoryParams } from '
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\Dependency
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.Xaml; using System.Web.UI.HtmlControls.Xaml.Data; using System.Web.UI.HtmlControls.Xaml.Controls; using System.Web.UI.HtmlControls.Xaml.Input; using System.Web.UI.HtmlControls.Xaml.Media; using System.Web.UI.HtmlControls.Xaml.Navigation;  // The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409  namespace Telerik.Web.UI.Xaml {     /// <summary>     ///
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.regionserver;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue;  import java.io.IOException; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.List;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.HRegionInfo; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.client.Get; import org.apache.hadoop.hbase.client.Put; import org.apache.hadoop.hbase.client.Result; import org.apache.h
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ign
     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve(resolver).then((options) => {             debugger;     return Promise.resolve
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsCollection; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * @see Zend_Gdata_Extension_Feed  */ require_once 'Zend/Gdata/Extension/Feed.php';  /**  * @see Zend_Gdata_Extension_Image  */ require_once 'Zend/Gdata/Extension/Image.php';  /**  * @see Zend_Gdata_Extension_Media  */ require_once 'Zend/Gdata/Extension/Media.php';  /**  * @see Zend_Gdata_Extension_Text  */ require_once 'Zend/Gdata/Extension/Text.php';  /**  * @see Zend_Gdata_Extension_Uri  */ require_once 'Zend/Gdata/Extension/Uri.php';  /**  * @see Zend_Gdata_Extension_Url  */ require_once 'Zend/Gdata/Extension/Url.php';  /**  * @see Zend_Gdata_Extension_Video  */ require_once 'Zend/Gdata/Extension/Video.php';  /**  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.con
 import React from 'react'; import classNames from 'classnames'; import PropTypes from 'prop-types'; import {withStyles} from '@material-ui/core/styles';  const styles = theme => ({   root: {     display: 'flex',     flexDirection: 'column',     justifyContent: 'center',     alignItems: 'center',     backgroundColor: theme.palette.primary.main,     color: theme.palette.primary.main,     marginBottom: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTop: theme
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.server.coordinator;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.utils.StringUtils; import org.apache.druid.java.util.common.utils.concurrent.ThreadSafety.Immutable; import org.apache.druid.java.util.common.utils.concurrent.Thread
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
.length = function () {   return this.buffer.length; }; Entry.prototype.read = function () {   return this.buffer.read(this.length); }; Entry.prototype.write = function () {   this.buffer.write(this.buffer, this.length); }; Entry.prototype.readAll = function () {   return this.buffer.readAll(this.length); }; Entry.prototype.writeAll = function () {   this.buffer.writeAll(this.buffer, this.length); }; module.exports = Entry; 
 import { Link } from 'App/Components/Routes'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import { Link } from 'App/Components/Elements/Link'; import {
  this.After(function (callback) {     var running = this.child != null && typeof this.child.kill === 'function'   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child = null   this.child
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.primitives.Ints; import com.google.common.primitives.Longs; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for DeleteBackupRequest.     /// </summary>     public partial class DeleteBackupRequestHeaders     {         /// <summary>         /// Initializes a new instance of the DeleteBackupRequestHeaders         /// class.         /// </summary>         public DeleteBackupRequestHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the DeleteBackupRequestHeaders         /// class.         /// </summary>         public DeleteBackupRequestHeaders(string resourceGroupName, string backupName)         {             ResourceGroupName = resourceGroupName;             BackupName = backupName;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets resource group name.         /// </summary>         [JsonProperty(PropertyName = "resourceGroupName")]         public string ResourceGroupName { get; set; }          /// <summary>         /// Gets or sets backup name.         /// </summary>         [JsonProperty(PropertyName = "backupName")]         public string BackupName { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (ResourceGroupName == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "Resource
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.SumOfTwoNumbers")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.SumOfTwoNumbers")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8-8e8e-4e8e-8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
.fields[0] = new Array(); this.fields[1] = new Array(); this.fields[2] = new Array(); this.fields[3] = new Array(); this.fields[4] = new Array(); this.fields[5] = new Array(); this.fields[6] = new Array(); this.fields[7] = new Array(); this.fields[8] = new Array(); this.fields[9] = new Array(); this.fields[10] = new Array(); this.fields[11] = new Array(); this.fields[12] = new Array(); this.fields[13] = new Array(); this.fields[14] = new Array(); this.fields[15] = new Array(); this.fields[16] = new Array(); this.fields[17] = new Array(); this.fields[18] = new Array(); this.fields[19] = new Array(); this.fields[20] = new Array(); this.fields[21] = new Array(); this.fields[22] = new Array(); this.fields[23] = new Array(); this.fields[24] = new Array(); this.fields[25] = new Array(); this.fields[26] = new Array(); this.fields[27] = new Array(); this.fields[28] = new Array(); this.fields[29] = new Array(); this.fields[30] = new Array(); this.fields[31] = new Array(); this.fields[32] = new Array(); this.fields[33] = new Array(); this.fields[34] = new Array(); this.fields[35] = new Array(); this.fields[36] = new Array(); this.fields[37] = new Array(); this.fields[38] = new Array(); this.fields[39] = new Array(); this.fields[40] = new Array(); this.fields[41] = new Array(); this.fields[42] = new Array(); this.fields[43] = new Array(); this.fields[44] = new Array(); this.fields[45] = new Array(); this.fields[46
 const fcp = computeFcp(paintEvents) console.log(fcp) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(paintEvents)) console.log(computeFcp(p
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shell.Interop; using System.Windows.Data; using System.Windows; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shell.Interop; using System.Windows.Data; using System.Windows; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Shell.Interop; using System.Windows.Data; using System.Windows; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shell.Interop; using System.Windows.Data; using System.Windows; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.Collections; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Globalization; using System.IO; using System.Linq.Expressions; using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // アセンブリに関する一般情報は以下の属性セットをとおして制御されます。 // アセンブリに関連付けられている情報を変更するには、 // このアセンブリに関連付けられている情報を�
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))             ->add('category', 'choice', array(                 'label' => 'sylius.form.product.category',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.category',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hdfs.server.datanode;  import java.io.IOException;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.FileStatus; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import org.apache.hadoop.hdfs.DFSConfigKeys; import org.apache.hadoop.hdfs.MiniDFSCluster; import org.apache.hadoop.hdfs.MiniDFSCluster.Mode; import org.apache.hadoop.hdfs.protocol.DatanodeInfo; import org.apache.hadoop.hdfs.protocol.DatanodeInfo.DatanodeInfoType; import org.apache.hadoop.hdfs.server.datanode.datanode.DatanodeInfoStore; import org.apache.hadoop.hdfs.server.datanode.datanode.DatanodeInfoStoreFactory; import org.apache.hadoop.hdfs.server.datanode.datanode.DatanodeManager; import org.apache.hadoop.hdfs.server.datanode.datanode.DatanodeManagerFactory; import org.apache.h
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 

    if (startOrder === -1) {       angular.forEach(t.items, function (evt, order) {         startOrder = order;       });     } else {       angular.forEach(t.items, function (evt, order) {         if (startOrder === -1) {           angular.forEach(t.items, function (evt, order) {             startOrder = order;           });         } else {           angular.forEach(t.items, function (evt, order) {             if (startOrder === -1) {               angular.forEach(t.items, function (evt, order) {                 startOrder = order;               });             } else {               angular.forEach(t.items, function (evt, order) {                 if (startOrder === -1) {                   angular.forEach(t.items, function (evt, order) {                     startOrder = order;                   });                 } else {                   angular.forEach(t.items, function (evt, order) {                     if (startOrder === -1) {                       angular.forEach(t.items, function (evt, order) {                         startOrder = order;                       });                     } else {                       angular.forEach(t.items, function (evt, order) {                         if (startOrder === -1) {                           angular.forEach(t.items, function (evt, order) {                             startOrder = order;                           });                         } else {                           angular.forEach(t.items, function (evt, order) {                             if (startOrder === -1) {                               angular.forEach(t.items, function (evt, order) {                                 startOrder = order;                               });                             } else {                               angular.forEach(t.items, function (evt, order) {                                 if (startOrder === -1) {                                   angular.forEach(t.items, function (evt, order) {                                     startOrder = order;                                   });                                 } else {                                   angular.forEach(t.items, function (evt, order)
 = d3.svg.path()     .attr('d', path)     .attr('fill', function(d) { return d3.rgb(d.attr.fill) })     .attr('stroke', function(d) { return d3.rgb(d.attr.stroke) })     .attr('stroke-width', function(d) { return d3.rgb(d.attr.strokeWidth) })     .attr('fill-opacity', function(d) { return d3.rgb(d.attr.fillOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-opacity', function(d) { return d3.rgb(d.attr.strokeOpacity) })     .attr('stroke-
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ign
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid.java.util.common.util.concurrent.Thread
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color';  } 
 /*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import java.util.ArrayList; import java.util.Collection; import java.util.Collections; import java.util.List; import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.ignite.testframework.junits
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 (function(window, document, undefined) {   'use strict';    angular     .module('myApp')     .controller('LoginCtrl', LoginCtrl);    LoginCtrl.$inject = ['$scope', '$location', '$locationParams', 'Authentication', 'LoginService'];    function LoginCtrl($scope, $location, $locationParams, Authentication, LoginService) {     var vm = this;      vm.login = login;     vm.loginSuccess = loginSuccess;     vm.loginError = loginError;      vm.logout = logout;     vm.logoutSuccess = logoutSuccess;     vm.logoutError = logoutError;      vm.signup = signup;     vm.signupSuccess = signupSuccess;     vm.signupError = signupError;      vm.signin = signin;     vm.signinSuccess = signinSuccess;     vm.signinError = signinError;      $scope.signup = signup;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signout = signout;     $scope.signoutSuccess = signoutSuccess;     $scope.signoutError = signoutError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signout = signout;     $scope.signoutSuccess = signoutSuccess;     $scope.signoutError = signoutError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_View_Helper_Abstract  */ require_once 'Zend/View/Helper/Abstract.php';  /**  * @see Zend_View_Helper_File  */ require_once 'Zend/View/Helper/File.php';  /**  * @see Zend_View_Helper_Form  */ require_once 'Zend/View/Helper/Form.php';  /**  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_View_Helper_Form extends Zend_View_Helper_Abstract {      /**      * @var Zend_View_Helper_File      */     protected $_fileHelper;      /**      * @var Zend_View_Helper_Form      */     protected $_formHelper;      /**      * @var Zend_View_Helper_Html      */     protected $_htmlHelper;      /**      * @var Zend_View_Helper_HtmlForm     
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for DeleteBackup operation.     /// </summary>     public partial class DeleteBackupHeaders     {         /// <summary>         /// Initializes a new instance of the DeleteBackupHeaders class.         /// </summary>         public DeleteBackupHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the DeleteBackupHeaders class.         /// </summary>         /// <param name="nextLink">The URL to the next set of results.</param>         public DeleteBackupHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "NextLink");             }         }     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
    var oGroup = this.getParent();    if (oGroup) {    oGroup.setProperty.apply(oGroup, arguments);    } };   GroupElement.prototype.getProperty = function () {    Element.prototype.getProperty.apply(this, arguments);    var oGroup = this.getParent();    if (oGroup) {    return oGroup.getProperty.apply(oGroup, arguments);    } };   GroupElement.prototype.removeProperty = function () {    Element.prototype.removeProperty.apply(this, arguments);    var oGroup = this.getParent();    if (oGroup) {    oGroup.removeProperty.apply(oGroup, arguments);    } };   GroupElement.prototype.removeChildren = function () {    Element.prototype.removeChildren.apply(this, arguments);    var oGroup = this.getParent();    if (oGroup) {    oGroup.removeChildren.apply(oGroup, arguments);    } };   GroupElement.prototype.addChild = function (oChild) {    Element.prototype.addChild.apply(this, arguments);    var oGroup = this.getParent();    if (oGroup) {    oGroup.addChild.apply(oGroup, arguments);    } };   GroupElement.prototype.removeChild = function (oChild) {    Element.prototype.removeChild.apply(this, arguments);    var oGroup = this.getParent();    if (oGroup) {    oGroup.removeChild.apply(oGroup, arguments);    } };   GroupElement.prototype.appendChild = function (oChild) {    Element.prototype.appendChild.apply(this, arguments);    var oGroup = this.getParent();    if (oGroup) {    oGroup.appendChild.apply(oGroup, arguments);    } };   GroupElement.prototype.removeChild = function (oChild) {    Element.prototype.removeChild.apply(this, arguments);    var oGroup = this.getParent();    if (oGroup) {    oGroup.removeChild.apply(oGroup, arguments);    } };   GroupElement.prototype.removeChildren = function () {    Element.prototype.removeChildren.apply(this, arguments);    var oGroup = this.getParent();
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.CacheAtomicityMode; import org.apache.ignite.internal.processors.cache.CacheMode; import org.apache.ignite.internal.processors.cache.CacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.test
  function fdsDialogService() {     this.dialogService = fdsDialogService; }  fdsDialogService.prototype = {     init: function() {         this.dialogService.init.apply(this, arguments);     },      show: function() {         this.dialogService.show.apply(this, arguments);     },      hide: function() {         this.dialogService.hide.apply(this, arguments);     },      close: function() {         this.dialogService.close.apply(this, arguments);     } };  module.exports = fdsDialogService;                                                                                                                                                                                                                                                                                                                                                                         
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache.ignite.cache.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {   modules: modules,   previews: previews };  module.exports = {
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_  #include "base/memory/scoped_ptr.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_observer_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_observer.h" #include "content/public/browser/web_contents_view.h" #include "content/public/browser/web_contents_view_delegate.h" #include "content/public/browser/web_contents_view_delegate_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_user_data_observer_observer.h" #include "content/public/browser/web_contents_
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.Hyrack
 var format = format.replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/g, ' ').replace(/\s?\zh\s?/
this.boundingBox = this.boundingBox || new THREE.Box3();   this.boundingBox.position.x = this.boundingBox.position.x || 0;   this.boundingBox.position.y = this.boundingBox.position.y || 0;   this.boundingBox.position.z = this.boundingBox.position.z || 0;   this.boundingBox.scale.x = this.boundingBox.scale.x || 1;   this.boundingBox.scale.y = this.boundingBox.scale.y || 1;   this.boundingBox.scale.z = this.boundingBox.scale.z || 1;   this.boundingBox.translate.x = this.boundingBox.translate.x || 0;   this.boundingBox.translate.y = this.boundingBox.translate.y || 0;   this.boundingBox.translate.z = this.boundingBox.translate.z || 0;   this.boundingBox.rotate.x = this.boundingBox.rotate.x || 0;   this.boundingBox.rotate.y = this.boundingBox.rotate.y || 0;   this.boundingBox.rotate.z = this.boundingBox.rotate.z || 0;   this.boundingBox.scale.x = this.boundingBox.scale.x || 1;   this.boundingBox.scale.y = this.boundingBox.scale.y || 1;   this.boundingBox.scale.z = this.boundingBox.scale.z || 1;   this.boundingBox.translate.x = this.boundingBox.translate.x || 0;   this.boundingBox.translate.y = this.boundingBox.translate.y || 0;   this.boundingBox.translate.z = this.boundingBox.translate.z || 0;   this.boundingBox.scale.x = this.boundingBox.scale.x || 1;   this.boundingBox.scale.y = this.boundingBox.scale.y || 1;   this.boundingBox.scale.z = this.boundingBox.scale.z || 1;   this.boundingBox.translate.x = this.boundingBox.translate.x || 0;   this.boundingBox.translate.y = this.boundingBox.translate.y || 0;   this.boundingBox.translate.z = this.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
    this.current_data[0] = new Array();     this.current_data[1] = new Array();     this.current_data[2] = new Array();     this.current_data[3] = new Array();     this.current_data[4] = new Array();     this.current_data[5] = new Array();     this.current_data[6] = new Array();     this.current_data[7] = new Array();     this.current_data[8] = new Array();     this.current_data[9] = new Array();     this.current_data[10] = new Array();     this.current_data[11] = new Array();     this.current_data[12] = new Array();     this.current_data[13] = new Array();     this.current_data[14] = new Array();     this.current_data[15] = new Array();     this.current_data[16] = new Array();     this.current_data[17] = new Array();     this.current_data[18] = new Array();     this.current_data[19] = new Array();     this.current_data[20] = new Array();     this.current_data[21] = new Array();     this.current_data[22] = new Array();     this.current_data[23] = new Array();     this.current_data[24] = new Array();     this.current_data[25] = new Array();     this.current_data[26] = new Array();     this.current_data[27] = new Array();     this.current_data[28] = new Array();     this.current_data[29] = new Array();     this.current_data[30] = new Array();     this.current_data[31] = new Array();     this.current_data[32] = new Array();     this.current_data[33] = new Array();     this.current_data[34] = new Array();     this.current_data[35] = new Array();     this.current_data[
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("JBone.Core")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("JBone.Core")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to get the next set of results.</param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to get the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "NextLink");             }         }     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Documents; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes.Json; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes; using System.Windows.Shapes.Collections; using System.Windows.Shapes.DataAnnotations; using System.Windows.Shapes.Shapes; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaVersion; using System.ComponentModel.DataAnnotations.Schema.Types; using System.ComponentModel.DataAnnotations.Schema.Types.SchemaVersion; using System.ComponentModel.DataAnnotations.Schema.Types.SchemaVersion.SchemaVersion; using System.ComponentModel.DataAnnotations.Schema.Types.SchemaVersion.SchemaVersion; using System.ComponentModel.DataAnnotations.Schema.Types.SchemaVersion.SchemaVersion; using System.ComponentModel.DataAnnotations.Schema.Types.SchemaVersion.SchemaVersion; using
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java
 suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this);  suiteNesting === 1 && setupHooks.call(this); 
     activeFilters.push(e.target.dataset.value); }  if (activeFilters.length > 0) {     e.target.dataset.value = activeFilters.join(","); }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL"; }  if (e.target.dataset.value == "ALL") {     e.target.dataset.value = "ALL";
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import java.util.ArrayList; import java.util.Collection; import java.util.Collections; import java.util.HashMap; import java.util.HashSet; import java.util.Iterator; import java.util.List; import java.util.Map; import java.util.Set; import java.util.concurrent.ConcurrentHashMap; import java.util.concurrent.ConcurrentMap; import java.util.concurrent.atomic.AtomicBoolean; import java.util.concurrent.atomic.AtomicInteger; import java.util.concurrent.atomic.AtomicLong; import java.util.concurrent.atomic.AtomicReference; import java.util.concurrent.atomic.AtomicReferenceArray; import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.IgniteInternalFuture; import org.apache.ignite.internal.IgniteInternalFutureListener; import org
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
    out = !!type ? clone(out) : out; } else if (out && model._boxed) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._boxed) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ? clone(out) : out; } else if (out && model._materialized) {     out = !!type ?
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.asterix.runtime.evaluators.base.AbstractScalarFunctionDynamicDescriptor; import org.apache.asterix.runtime.evaluators.base.AbstractScalarFunctionDynamicDescriptorFactory; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluator; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactory; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactoryProvider; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactoryProvider; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactoryService; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.asterix.runtime
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
 return 'none';         } else if (color.typename === 'SpotColor2') { return 'none';         } else if (color.typename === 'SpotColor3') { return 'none';         } else if (color.typename === 'SpotColor4') { return 'none';         } else if (color.typename === 'SpotColor5') { return 'none';         } else if (color.typename === 'SpotColor6') { return 'none';         } else if (color.typename === 'SpotColor7') { return 'none';         } else if (color.typename === 'SpotColor8') { return 'none';         } else if (color.typename === 'SpotColor9') { return 'none';         } else if (color.typename === 'SpotColor10') { return 'none';         } else if (color.typename === 'SpotColor11') { return 'none';         } else if (color.typename === 'SpotColor12') { return 'none';         } else if (color.typename === 'SpotColor13') { return 'none';         } else if (color.typename === 'SpotColor14') { return 'none';         } else if (color.typename === 'SpotColor15') { return 'none';         } else if (color.typename === 'SpotColor16') { return 'none';         } else if (color.typename === 'SpotColor17') { return 'none';         } else if (color.typename === 'SpotColor18') { return 'none';         } else if (color.typename === 'SpotColor19') { return 'none';         } else if (color.typename === 'SpotColor20') { return 'none';         } else if (color.typename === 'SpotColor21') { return 'none';         } else if (color.typename === 'SpotColor22') { return 'none';         } else if (color.typename === 'SpotColor23') { return 'none';         } else if (color.typename === 'SpotColor24') { return 'none';         } else if (color.typename === 'SpotColor25') { return 'none';         }
  oNewValue = oNewValue + arguments[0] + arguments[1] + arguments[2] + arguments[3] + arguments[4] + arguments[5] + arguments[6] + arguments[7] + arguments[8] + arguments[9] + arguments[10] + arguments[11] + arguments[12] + arguments[13] + arguments[14] + arguments[15] + arguments[16] + arguments[17] + arguments[18] + arguments[19] + arguments[20] + arguments[21] + arguments[22] + arguments[23] + arguments[24] + arguments[25] + arguments[26] + arguments[27] + arguments[28] + arguments[29] + arguments[30] + arguments[31] + arguments[32] + arguments[33] + arguments[34] + arguments[35] + arguments[36] + arguments[37] + arguments[38] + arguments[39] + arguments[40] + arguments[41] + arguments[42] + arguments[43] + arguments[44] + arguments[45] + arguments[46] + arguments[47] + arguments[48] + arguments[49] + arguments[50] + arguments[51] + arguments[52] + arguments[53] + arguments[54] + arguments[55] + arguments[56] + arguments[57] + arguments[58] + arguments[59] + arguments[60] + arguments[61] + arguments[62] + arguments[63] + arguments[64] + arguments[65] + arguments[66] + arguments[67] + arguments[68] + arguments[69] + arguments[70] + arguments[71] + arguments[72] + arguments[73] + arguments[74] + arguments[75] + arguments[76] + arguments[77] + arguments[78] + arguments[79] + arguments[80] + arguments[81] + arguments[82] + arguments[83] + arguments[84] + arguments[85] + arguments[86] + arguments[87] + arguments[88] + arguments[89] + arguments[90] + arguments[91] + arguments[92] + arguments[93] + arguments[94] + arguments[95] + arguments[96] + arguments[97] + arguments[98] + arguments[99] + arguments[
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const msRest = require('ms-rest'); const msRestAzure = require('ms-rest-azure');  const models = require('./index');  const client = msRestAzure.createClient();  const modelsForTests = require('./index');  describe('___ (covered by ___)', function() {   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);   this.timeout(6000);
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.direct;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Matchers.any; import static org.mockito.Matchers.anyString; import static org.mockito.Matchers.eq; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0020,0021';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import java.util.ArrayList; import java.util.Collection; import java.util.Collections; import java.util.List; import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.
 import { DELETE_HISTORY_FAILURE,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION } from '../actions/HistoryActions' import { DELETE_HISTORY_SUCCESS,   MARK_HISTORY_FOR_DELETION,   UNMARK_HISTORY_FOR_DELETION }
.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wireType, prop);                 gen.addType(wire
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
   {     throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {     throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {     throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {     throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {     throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {     throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {   throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {   throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {   throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {   throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {   throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {   throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {   throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {   throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {   throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null) {   throw "suggestUserName Message has no oldName!";   }  if(message.data.payload.newName == null) {   throw "suggestUserName Message has no newName!";   }  if(message.data.payload.oldName == null)
function getWorklogObject(key, worklogs){     return new Promise((resolve, reject) => {         worklogs.forEach((worklog) => {             if (worklog.key === key) {                 resolve(worklog);             }         });     }); }  module.exports = {     getWorklogObjects: getWorklogObjects,     getWorklogObject: getWorklogObject }; 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 (function() {   'use strict';    angular     .module('myApp')     .controller('MainCtrl', MainCtrl);    MainCtrl.$inject = ['$scope'];    function MainCtrl($scope) {     var self = this;      self.$scope = $scope;      self.$on('$destroy', function() {       self.$scope = null;     });   } })();                                                                                                                                                                                                                                                                                                                                                                                                                       
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
function contains(a,b) {   return a.indexOf(b) >= 0;} if(typeof key != 'number') {   throw 'Key must be a number for function contains(key)';} if(typeof key != 'string') {   throw 'Key must be a string for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key)';} if(typeof key != 'function') {   throw 'Key must be a function for function contains(key
(function(){     process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process.exit(code);    process
            this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.classList.add.apply(this.classList, ALL_VARIANT_CLASSES);           }           if (this._variant !== variant.DEFAULT) {             this.class
 = 0; for (var i in tokens){     var token = tokens[i];     if (token.level == level){         level = token.level;         break;     } } console.log(level); console.log(tokens); console.log(tokens[0]); console.log(tokens[1]); console.log(tokens[2]); console.log(tokens[3]); console.log(tokens[4]); console.log(tokens[5]); console.log(tokens[6]); console.log(tokens[7]); console.log(tokens[8]); console.log(tokens[9]); console.log(tokens[10]); console.log(tokens[11]); console.log(tokens[12]); console.log(tokens[13]); console.log(tokens[14]); console.log(tokens[15]); console.log(tokens[16]); console.log(tokens[17]); console.log(tokens[18]); console.log(tokens[19]); console.log(tokens[20]); console.log(tokens[21]); console.log(tokens[22]); console.log(tokens[23]); console.log(tokens[24]); console.log(tokens[25]); console.log(tokens[26]); console.log(tokens[27]); console.log(tokens[28]); console.log(tokens[29]); console.log(tokens[30]); console.log(tokens[31]); console.log(tokens[32]); console.log(tokens[33]); console.log(tokens[34]); console.log(tokens[35]); console.log(tokens[36]); console.log(tokens[37]); console.log(tokens[38]); console.log(tokens[39]); console.log(tokens[40]); console.log(tokens[41]); console.log(tokens[42]); console.log(tokens[43]); console.log(tokens[44]); console.log(tokens[45]); console.log(tokens[46]); console.log(tokens[47]); console.log(tokens[48]); console.log(tokens[49]);
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Shell.Interop; using System.Diagnostics; using System.Diagnostics.CodeAnalysis; using System.Globalization; using System.IO; using System.Xml; using System.Xml.Linq; using System.Xml.XPath; using System.Xml.XPath.XPathConstants; using System.Xml.XPath; using System.Xml.XPath.XPathExpressions; using System.Xml; using System.Xml.XPath; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Binary; using System.Xml.Serialization.Formatters.XmlSerializer; using System.Xml.Serialization.Formatters.XmlSerializerSettings; using System.Xml.Serialization.Formatters.XmlSerializerSettings.Formatting; using System.Xml.Serialization; using System.Xml.Serialization.XmlSerializer.SerializationContext; using System.Xml.Serialization.XmlSerializer.SerializationInfo; using System.Xml.Serialization.XmlSerializer.SerializationInfo.Formatting; using System.Xml.Serialization.XmlSerializer.SerializationInfo.SerializationMethod; using System.Xml.Serialization.XmlSerializer.SerializationInfo.SerializationProperties; using System.Xml.Serialization.XmlSerializer.SerializationInfo.SerializationMethodAttribute; using System.Xml.Serialization.XmlSerializer.SerializationInfo.SerializationProperty; using System.Xml.Serialization.XmlSerializer.SerializationInfo.SerializationPropertyAttribute; using System.Xml.Serialization.XmlSerializer.SerializationInfo.Serialization
 var level = level || {};  level.init = function() {     var self = this;      self.game = game;     self.player = player;     self.level = level; };  level.update = function() {     game.update();     player.update();     level.update(); };  level.draw = function() {     game.draw();     player.draw();     level.draw(); };  level.play = function() {     game.play();     player.play();     level.play(); };  level.pause = function() {     game.pause();     player.pause();     level.pause(); };  level.stop = function() {     game.stop();     player.stop();     level.stop(); };  level.reset = function() {     game.reset();     player.reset();     level.reset(); };  level.update = function() {     game.update();     player.update();     level.update(); };  level.draw = function() {     game.draw();     player.draw();     level.draw(); };  level.play = function() {     game.play();     player.play();     level.play(); };  level.pause = function() {     game.pause();     player.pause();     level.pause(); };  level.stop = function() {     game.stop();     player.stop();     level.stop(); };  level.reset = function() {     game.reset();     player.reset();     level.reset(); };  level.update = function() {     game.update();     player.update();     level.update(); };  level.draw = function() {     game.draw();     player.draw();     level.draw(); };  level.play = function() {     game.play();     player.play();     level.play(); };  level.pause = function() {     game.pause();     player.pause();     level.
  callback(this, 'conflict', undefined, e); } else {   callback(this, 'conflict', undefined, e); }  } else if (e.name === 'SourceUnavailableError') {   callback(this, 'conflict', undefined, e); } else if (e.name === 'SecurityError' && e.message === 'The operation is insecure.') {   callback(this, 'conflict', undefined, e); } else {   callback(this, 'conflict', undefined, e); }  } else if (e.name === 'SourceUnavailableError') {   callback(this, 'conflict', undefined, e); } else if (e.name === 'SecurityError' && e.message === 'The operation is insecure.') {   callback(this, 'conflict', undefined, e); } else {   callback(this, 'conflict', undefined, e); }  } else if (e.name === 'SourceUnavailableError') {   callback(this, 'conflict', undefined, e); } else if (e.name === 'SecurityError' && e.message === 'The operation is insecure.') {   callback(this, 'conflict', undefined, e); } else {   callback(this, 'conflict', undefined, e); }  } else if (e.name === 'SourceUnavailableError') {   callback(this, 'conflict', undefined, e); } else if (e.name === 'SecurityError' && e.message === 'The operation is insecure.') {   callback(this, 'conflict', undefined, e); } else {   callback(this, 'conflict', undefined, e); }  } else if (e.name === 'SourceUnavailableError') {   callback(this, 'conflict', undefined, e); } else if (e.name === 'SecurityError' && e.message === 'The operation is insecure.') {   callback(this, 'conflict', undefined, e); } else {   callback(this, 'conflict', undefined, e); }  } else if (e.name === 'SourceUnavailableError') {   callback(this, 'conflict', undefined, e); } else if (e.name === 'SecurityError' && e.
 var   gulpCopy = require('gulp-copy') var   copy = require('gulp-copy') var   rename = require('gulp-rename') var   uglify = require('gulp-uglify') var   minifyCSS = require('gulp-minify-css') var   minifyJS = require('gulp-minify-js') var   minifyHTML = require('gulp-minify-html') var   minifyCSSCSS = require('gulp-minify-css-css') var   minifyJSCSS = require('gulp-minify-js-css') var   minifyHTMLCSS = require('gulp-minify-html-css') var   minifyCSSCSSCSS = require('gulp-minify-css-css') var   minifyJSCSSCSS = require('gulp-minify-js-css') var   minifyHTMLCSSCSS = require('gulp-minify-html-css') var   minifyCSSCSSCSS = require('gulp-minify-css-css') var   minifyCSSCSSCSS = require('gulp-minify-css-css') var   minifyJSCSSCSS = require('gulp-minify-js-css') var   minifyHTMLCSSCSS = require('gulp-minify-html-css') var   minifyHTMLCSSCSS = require('gulp-minify-html-css') var   minifyCSSCSSCSS = require('gulp-minify-css-css') var   minifyCSSCSSCSS = require('gulp-minify-css-css') var   minifyJSCSSCSS = require('gulp-minify-js-css') var   minifyHTMLCSSCSS = require('gulp-minify-html-css') var   minifyHTMLCSSCSS = require('gulp-minify-html-css') var   minifyCSSCSSCSS = require('gulp-minify-css-css') var   minifyCSSCSSCSS = require('gulp-minify-css-css') var   minifyJSCSSCSS = require('gulp-minify-js-css') var   minifyHTMLCSSCSS = require('gulp-minify-html-css') var   minifyHTMLCSSCSS = require('gulp-min
this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0; this.i = 0;
 		$(document).ready(function() { 			$('#myModal').modal('show'); 		}); 		$('#myModal').on('shown.bs.modal', function() { 			$('#myModal').modal('show'); 		}); 		$('#myModal').on('hidden.bs.modal', function() { 			$('#myModal').modal('hide'); 		}); 		$('#myModal').on('show.bs.modal', function() { 			$('#myModal').modal('show'); 		}); 		$('#myModal').on('hide.bs.modal', function() { 			$('#myModal').modal('hide'); 		}); 		$('#myModal').on('show.bs.modal', function() { 			$('#myModal').modal('show'); 		}); 		$('#myModal').on('hide.bs.modal', function() { 			$('#myModal').modal('hide'); 		}); 		$('#myModal').on('show.bs.modal', function() { 			$('#myModal').modal('show'); 		}); 		$('#myModal').on('hide.bs.modal', function() { 			$('#myModal').modal('hide'); 		}); 		$('#myModal').on('show.bs.modal', function() { 			$('#myModal').modal('show'); 		}); 		$('#myModal').on('hide.bs.modal', function() { 			$('#myModal').modal('hide'); 		}); 		$('#myModal').on('show.bs.modal', function() { 			$('#myModal').modal('show'); 		}); 		$('#myModal').on('hide.bs.modal', function() { 			$('#myModal').modal('hide'); 		}); 		$('#myModal').on('show.bs.modal', function() { 			$('#myModal').modal('show'); 		
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import
     var frames = doc.getElementsByTagName(frameTags[i]);                 for (var i = 0, nframes = frames.length; i < nframes; ++i) {         var frame = frames[i];         var iframe = doc.createElement("iframe");         iframe.setAttribute("src", frame.src);         iframe.setAttribute("width", frame.width);         iframe.setAttribute("height", frame.height);         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight",
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserProfile class.  * @constructor  * A user profile.  *  * @member {string} [id] The ID of the user profile.  *  * @member {string} [name] The name of the user profile.  *  * @member {string} [displayName] The display name of the user profile.  *  * @member {string} [email] The email address of the user profile.  *  * @member {string} [password] The password of the user profile.  *  * @member {string} [passwordConfirmation] The password confirmation of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [emailConfirmation] The email confirmation of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password reset token of the user  * profile.  *  * @member {string} [passwordResetToken] The password
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Sql.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Microsoft.Rest.Azure.OData;     using Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Linq;     using System.Collections;     using System.Collections.Specialized;     using System.Collections.ObjectModel.Serialization;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Net.Http.Headers.Accept;     using System.Net.Http.Headers.Authorization;     using System.Net.Http.Headers.Content-Type;     using System.Net.Http.Headers.Accept-Encoding;     using System.Net.Http.Headers.Content-Length;     using System.Net.Http.Headers.Accept-Language;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.Headers;     using System.Net.Http.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.annotations.VisibleForTesting; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceReferenceInterface; use Symfony\Component\
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.
 		console.log( 'client.stats( 'reset', function( err ) { 			console.log( 'client.stats( 'reset', function( err ) { 				console.log( 'client.stats( 'reset', function( err ) { 					console.log( 'client.stats( 'reset', function( err ) { 						console.log( 'client.stats( 'reset', function( err ) { 							console.log( 'client.stats( 'reset', function( err ) { 								console.log( 'client.stats( 'reset', function( err ) { 									console.log( 'client.stats( 'reset', function( err ) { 										console.log( 'client.stats( 'reset', function( err ) { 											console.log( 'client.stats( 'reset', function( err ) { 												console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function( err ) { 													console.log( 'client.stats( 'reset', function
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Range; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\ConstraintValidatorInterface; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
 if (typeof self.mode_loginWith === "undefined") {   self.mode_loginWith = "loginWith"; }  if (typeof self.mode_logout === "undefined") {   self.mode_logout = "logout"; }  if (typeof self.mode_register === "undefined") {   self.mode_register = "register"; }  if (typeof self.mode_login === "undefined") {   self.mode_login = "login"; }  if (typeof self.mode_logout === "undefined") {   self.mode_logout = "logout"; }  if (typeof self.mode_register === "undefined") {   self.mode_register = "register"; }  if (typeof self.mode_loginWith === "undefined") {   self.mode_loginWith = "loginWith"; }  if (typeof self.mode_logoutWith === "undefined") {   self.mode_logoutWith = "logoutWith"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode_loginWith === "undefined") {   self.mode_loginWith = "loginWith"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode_registerWith === "undefined") {   self.mode_registerWith = "register"; }  if (typeof self.mode
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("Microsoft")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright © Microsoft 2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8-8e8e-4e8e-8e8e-8e8e8e8e8e")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.ignite.testframework.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.test
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Shapes; using System.Windows.Shell.Interop; using System.Windows.Threading; using System.Windows.Threading.Tasks; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Effects; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Shell.Interop; using System.Windows.Threading; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Effects; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Shell.Interop; using System.Windows.Threading; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('address', 'text', array(                 'label' => 'sylius.form.order.address',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.address',                 ),             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Physics; using System.Windows.Shapes.Shapes; using System.Windows.Threading; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System
 		version: '1.0.0', 		name: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		description: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		keywords: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		brand: 'Mozilla', 		description: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		keywords: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		product: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		copyright: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		license: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.214 Safari/537.36', 		keywords: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import java.util.ArrayList; import java.util.Collection; import java.util.Collections; import java.util.HashMap; import java.util.HashSet; import java.util.List; import java.util.Map; import java.util.Set; import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ip
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserProfile class.  * @constructor  * A user profile.  *  * @member {string} [id] The ID of the user profile.  *  * @member {string} [name] The name of the user profile.  *  * @member {string} [email] The email address of the user profile.  *  * @member {string} [password] The password of the user profile.  *  * @member {string} [passwordConfirm] The password confirmation of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [emailConfirmationToken] The email confirmation  * token of the user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [
this.thingShadowsClient = (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.prototype.constructor = thingShadowsClient;     return thingShadowsClient; }()); var thingShadowsClient = thingShadowsClient || (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.prototype.constructor = thingShadowsClient;     return thingShadowsClient; }()); var thingShadowsClient = thingShadowsClient || (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.prototype.constructor = thingShadowsClient;     return thingShadowsClient; }()); var thingShadowsClient = thingShadowsClient || (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.prototype.constructor = thingShadowsClient;     return thingShadowsClient; }()); var thingShadowsClient = thingShadowsClient || (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.prototype.constructor = thingShadowsClient;     return thingShadowsClient; }()); var thingShadowsClient = thingShadowsClient || (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.prototype.constructor = thingShadowsClient;     return thingShadowsClient; }()); var thingShadowsClient = thingShadowsClient || (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.prototype.constructor = thingShadowsClient;     return thingShadowsClient; }()); var thingShadowsClient = thingShadowsClient || (function () {     function thingShadowsClient() {     }     thingShadowsClient.prototype = new Object();     thingShadowsClient.
;  var readToken = function() {   return tok; };  var readToken2 = function() {   return tok; };  var readToken3 = function() {   return tok; };  var readToken4 = function() {   return tok; };  var readToken5 = function() {   return tok; };  var readToken6 = function() {   return tok; };  var readToken7 = function() {   return tok; };  var readToken8 = function() {   return tok; };  var readToken9 = function() {   return tok; };  var readToken10 = function() {   return tok; };  var readToken11 = function() {   return tok; };  var readToken12 = function() {   return tok; };  var readToken13 = function() {   return tok; };  var readToken14 = function() {   return tok; };  var readToken15 = function() {   return tok; };  var readToken16 = function() {   return tok; };  var readToken17 = function() {   return tok; };  var readToken18 = function() {   return tok; };  var readToken19 = function() {   return tok; };  var readToken20 = function() {   return tok; };  var readToken21 = function() {   return tok; };  var readToken22 = function() {   return tok; };  var readToken23 = function() {   return tok; };  var readToken24 = function() {   return tok; };  var readToken25 = function() {   return tok; };  var readToken26 = function() {   return tok; };  var readToken27 = function() {   return tok; };  var readToken28 = function() {   return tok; };  var readToken29 = function() {   return tok; };  var readToken30 = function() {   return tok; };
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.CacheAtomicityMode; import org.apache.ignite.internal.processors.cache.CacheMode; import org.apache.ignite.internal.processors.cache.CacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.j
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Set; import java.util.concurrent.ExecutionException; import java.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 import * as React2 from 'react'; import { Box, Letterbox } from 'react-bootstrap'; import * as React3 from 'react-bootstrap'; import * as React4 from 'react-bootstrap'; import * as React5 from 'react-bootstrap'; import * as React6 from 'react-bootstrap'; import * as React7 from 'react-bootstrap'; import * as React8 from 'react-bootstrap'; import * as React9 from 'react-bootstrap'; import * as React10 from 'react-bootstrap'; import * as React11 from 'react-bootstrap'; import * as React12 from 'react-bootstrap'; import * as React13 from 'react-bootstrap'; import * as React14 from 'react-bootstrap'; import * as React15 from 'react-bootstrap'; import * as React16 from 'react-bootstrap'; import * as React17 from 'react-bootstrap'; import * as React18 from 'react-bootstrap'; import * as React19 from 'react-bootstrap'; import * as React20 from 'react-bootstrap'; import * as React21 from 'react-bootstrap'; import * as React22 from 'react-bootstrap'; import * as React23 from 'react-bootstrap'; import * as React24 from 'react-bootstrap'; import * as React25 from 'react-bootstrap'; import * as React26 from 'react-bootstrap'; import * as React27 from 'react-bootstrap'; import * as React28 from 'react-bootstrap'; import * as React29 from 'react-bootstrap'; import * as React30 from 'react-bootstrap'; import * as React31 from 'react-bootstrap'; import * as React32 from 'react-bootstrap'; import * as React33 from 'react-bootstrap'; import * as React34 from 'react-bootstrap'; import * as React35 from 'react-bootstrap'; import * as React36 from 'react-bootstrap'; import * as React37 from 'react-bootstrap'; import * as React38 from 'react-bootstrap'; import * as React39 from 'react-bootstrap'; import * as React40 from 'react-bootstrap'; import * as React41 from 'react-bootstrap'; import * as React42 from 'react-bootstrap'; import * as React
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_vector.h" #include "base/memory/weak_set.h" #include "base/time/time.h" #include "base/values.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
 });     } else if (req.query.city) { });     } else if (req.query.state) { });     } else if (req.query.zip) { });     } else if (req.query.country) { });     } else if (req.query.phone) { });     } else if (req.query.email) { });     } else if (req.query.phone2) { });     } else if (req.query.phone3) { });     } else if (req.query.phone4) { });     } else if (req.query.phone5) { });     } else if (req.query.phone6) { });     } else if (req.query.phone7) { });     } else if (req.query.phone8) { });     } else if (req.query.phone9) { });     } else if (req.query.phone10) { });     } else if (req.query.phone11) { });     } else if (req.query.phone12) { });     } else if (req.query.phone13) { });     } else if (req.query.phone14) { });     } else if (req.query.phone15) { });     } else if (req.query.phone16) { });     } else if (req.query.phone17) { });     } else if (req.query.phone18) { });     } else if (req.query.phone19) { });     } else if (req.query.phone20) { });     } else if (req.query.phone21) { });     } else if (req.query.phone22) { });     } else if (req.query.phone23) { });     } else if (req.query.phone24) { });     } else if (req.query.phone25) { });     } else if (req.query.phone26) { });     } else if (req.query.phone27) { });     } else if (req.query.phone28) { });     } else if (req.query.phone29) { });     } else if (
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
var SvgImporter2 = this.SvgImporter2 = this.SvgImporter3 = this.SvgImporter4 = this.SvgImporter5 = this.SvgImporter6 = this.SvgImporter7 = this.SvgImporter8 = this.SvgImporter9 = this.SvgImporter10 = this.SvgImporter11 = this.SvgImporter12 = this.SvgImporter13 = this.SvgImporter14 = this.SvgImporter15 = this.SvgImporter16 = this.SvgImporter17 = this.SvgImporter18 = this.SvgImporter19 = this.SvgImporter20 = this.SvgImporter21 = this.SvgImporter22 = this.SvgImporter23 = this.SvgImporter24 = this.SvgImporter25 = this.SvgImporter26 = this.SvgImporter27 = this.SvgImporter28 = this.SvgImporter29 = this.SvgImporter30 = this.SvgImporter31 = this.SvgImporter32 = this.SvgImporter33 = this.SvgImporter34 = this.SvgImporter35 = this.SvgImporter36 = this.SvgImporter37 = this.SvgImporter38 = this.SvgImporter39 = this.SvgImporter40 = this.SvgImporter41 = this.SvgImporter42 = this.SvgImporter43 = this.SvgImporter44 = this.SvgImporter45 = this.SvgImporter46 = this.SvgImporter47 = this.SvgImporter48 = this.SvgImporter49 = this.SvgImporter50 = this.SvgImporter51 = this.SvgImporter52 = this.SvgImporter53 = this.SvgImporter54 = this.SvgImporter55 = this.SvgImporter56 = this.SvgImporter57 = this.SvgImporter58 = this.SvgImporter59 = this.SvgImporter60 = this.SvgImporter61 = this.SvgImporter62 = this.SvgImporter63 = this.SvgImporter64 = this.SvgImporter65 = this.SvgImporter66 = this.SvgImporter67 = this.SvgImporter68 = this.SvgImporter69 = this.SvgImporter70 = this.SvgImporter71 = this.SvgImporter72 = this.SvgImporter73 = this
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints as Assert; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorInterface
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
    : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       , keyword   : keyword    });  res.render(template + ".tmpl", {     user      : user       , articles  : articles       ,
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Drawing; using System.Drawing.Drawing2D; using System.Drawing.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.Drawing2D.Drawing2D; using System.Drawing.Drawing2D.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
                if (value=="true" || value=="false")                 {                     if (value=="true" || value=="false")                     {                         if (value=="true" || value=="false")                         {                             if (value=="true" || value=="false")                             {                                 if (value=="true" || value=="false")                                 {                                     if (value=="true" || value=="false")                                     {                                         if (value=="true" || value=="false")                                         {                                             if (value=="true" || value=="false")                                             {                                                 if (value=="true" || value=="false")                                                 {                                                     if (value=="true" || value=="false")                                                     {                                                         if (value=="true" || value=="false")                                                         {                                                             if (value=="true" || value=="false")                                                             {                                                                 if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                     if (value=="true" || value=="false")                                                                 {                                                                 
     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type) {         if (type) {             return type.toLowerCase();         }     }      /**      * @param {string} type      * @return {string}      */     function getType(type
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 {       parentData : this._super(...arguments),       sponsors   : this.getSponsors() } }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PART
: [].concat.apply([], json.meshes[mesh_i].indices), faces: [].concat.apply([], json.meshes[mesh_i].faces), indices: [].concat.apply([], json.meshes[mesh_i].indices), faces: [].concat.apply([], json.meshes[mesh_i].faces), normals: [].concat.apply([], json.meshes[mesh_i].normals), vertices: [].concat.apply([], json.meshes[mesh_i].vertices), indices: [].concat.apply([], json.meshes[mesh_i].indices), faces: [].concat.apply([], json.meshes[mesh_i].faces), normals: [].concat.apply([], json.meshes[mesh_i].normals), vertices: [].concat.apply([], json.meshes[mesh_i].vertices), indices: [].concat.apply([], json.meshes[mesh_i].indices), faces: [].concat.apply([], json.meshes[mesh_i].faces), normals: [].concat.apply([], json.meshes[mesh_i].normals), vertices: [].concat.apply([], json.meshes[mesh_i].vertices), indices: [].concat.apply([], json.meshes[mesh_i].indices), faces: [].concat.apply([], json.meshes[mesh_i].faces), normals: [].concat.apply([], json.meshes[mesh_i].normals), vertices: [].concat.apply([], json.meshes[mesh_i].vertices), indices: [].concat.apply([], json.meshes[mesh_i].indices), faces: [].concat.apply([], json.meshes[mesh_i].faces), normals: [].concat.apply([], json.meshes[mesh_i].normals), vertices: [].concat.apply([], json.meshes[mesh_i].vertices), indices: [].concat.apply([], json.meshes[mesh_i].indices), faces: [].concat.apply([], json.meshes[mesh_i].faces
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  values.listenerValue = boDelegate;  values.listenerType = listenerType;  
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Pattern; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('subject', 'text', array(                 'label' => 'subject',                 'required' => false,             ))             ->add('message', 'textarea', array(                 'label' => 'message',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_email';     } } 
(function() {     var entries = document.getElementsByTagName('entry');     for (var i = 0; i < entries.length; i++) {         var entry = entries[i];         if (entry.id) {             var id = entry.id;             if (id) {                 entries[i] = document.createElement('entry');                 entries[i].id = id;             } else {                 entries[i] = document.createElement('entry');                 entries[i].id = id;             }         } else {             entries[i] = document.createElement('entry');             entries[i].id = id;         }     } })(); 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,     player: player,
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Parameter; use Symfony\Component\DependencyInjection\ReferenceCollection; use Symfony\Component\DependencyInjection\ParameterBag; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\Dependency
 }   }, this);   $(document).keydown(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(document).keyup(function(e) { }   }, this);   $(
 define(     function(require) {     'use strict';      var $ = require('jquery');     var _ = require('underscore');     var _1 = require('underscore/underscore');     var _2 = require('underscore/underscore');     var _3 = require('underscore/underscore');     var _4 = require('underscore/underscore');     var _5 = require('underscore/underscore');     var _6 = require('underscore/underscore');     var _7 = require('underscore/underscore');     var _8 = require('underscore/underscore');     var _9 = require('underscore/underscore');     var _10 = require('underscore/underscore');     var _11 = require('underscore/underscore');     var _12 = require('underscore/underscore');     var _13 = require('underscore/underscore');     var _14 = require('underscore/underscore');     var _15 = require('underscore/underscore');     var _16 = require('underscore/underscore');     var _17 = require('underscore/underscore');     var _18 = require('underscore/underscore');     var _19 = require('underscore/underscore');     var _20 = require('underscore/underscore');     var _21 = require('underscore/underscore');     var _22 = require('underscore/underscore');     var _23 = require('underscore/underscore');     var _24 = require('underscore/underscore');     var _25 = require('underscore/underscore');     var _26 = require('underscore/underscore');     var _27 = require('underscore/underscore');     var _28 = require('underscore/underscore');     var _29 = require('underscore/underscore');     var _2a = require('underscore/underscore');     var _2b = require('underscore/underscore');     var _2c = require('underscore/underscore');     var _2d = require('underscore/underscore');     var _2e = require('
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Shell.Interop; using System.Diagnostics; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations.ModelConfiguration; using System.Data.Entity.Migrations.SqlServer; using System.Data.Entity.Migrations.SqlServer.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <sys/types.h> #include <sys/socket.h> #include <netinet/in.h> #include <arpa/inet.h> #include <netdb.h> #include <errno.h> #include <fcntl.h> #include <signal.h> #include <stdarg.h> #include <stdbool.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <sys/stat.h> #include <sys/types.h> #include <sys/socket.h> #include <netdb.h> #include <netinet/in.h> #include <arpa/inet_pton.h> #include <unistd.h> #include <pthread.h> #include <pthread_cond.h> #include <pthread.h> #include <pthread_mutex.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> #include <pthread_condvar.h> 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name='nextLink'>         /// The NextLink from the previous successful call to ListVpnGateways.         /// </param>         public ListVpnGatewaysHeaders(string nextPageLink = default(string))         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the NextLink from the previous successful call to ListVpnGateways.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "NextLink");             }         }     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 // Copyright (c) Microsoft Corporation.  All rights reserved. // Licensed under the MIT License.  See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserAccount class.  * @constructor  * A user account.  * @member {string} [name] The name of the user account.  * @member {string} [email] The email address of the user account.  * @member {string} [password] The password of the user account.  * @member {string} [password_confirmation] The password  * confirmation of the user account.  * @member {string} [email_confirmation] The email  * confirmation of the user account.  * @member {string} [email_confirmation_confirmation] The email  * confirmation of the user account.  * @member {string} [email_confirmation_confirmation_confirmation] The email  * confirmation of the user account.  * @member {string} [email_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_confirmation_
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
this.refreshInterval = interval;    this.autoAdjustLayout = 'true';    this.setAutoAdjustLayout = function(autoAdjustLayout) { this.autoAdjustLayout = autoAdjustLayout;    this.refreshInterval = interval;    this.autoAdjustLayout = autoAdjustLayout;    this.refreshInterval = interval;    this.autoAdjustLayout = autoAdjustLayout;    this.refreshInterval = interval;    this.autoAdjustLayout = autoAdjustLayout;    this.refreshInterval = interval;    this.autoAdjustLayout = autoAdjustLayout;    this.refreshInterval = interval;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout;    this.autoAdjustLayout = autoAdjustLayout
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException;
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.GridCacheAbstractTest; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommon
 var KEY_HELP = new Symbol("help"); var KEY_HELP2 = new Symbol("help2"); var KEY_HELP3 = new Symbol("help3"); var KEY_HELP4 = new Symbol("help4"); var KEY_HELP5 = new Symbol("help5"); var KEY_HELP6 = new Symbol("help6"); var KEY_HELP7 = new Symbol("help7"); var KEY_HELP8 = new Symbol("help8"); var KEY_HELP9 = new Symbol("help9"); var KEY_HELP10 = new Symbol("help10"); var KEY_HELP11 = new Symbol("help11"); var KEY_HELP12 = new Symbol("help12"); var KEY_HELP13 = new Symbol("help13"); var KEY_HELP14 = new Symbol("help14"); var KEY_HELP15 = new Symbol("help15"); var KEY_HELP16 = new Symbol("help16"); var KEY_HELP17 = new Symbol("help17"); var KEY_HELP18 = new Symbol("help18"); var KEY_HELP19 = new Symbol("help19"); var KEY_HELP20 = new Symbol("help20"); var KEY_HELP21 = new Symbol("help21"); var KEY_HELP22 = new Symbol("help22"); var KEY_HELP23 = new Symbol("help23"); var KEY_HELP24 = new Symbol("help24"); var KEY_HELP25 = new Symbol("help25"); var KEY_HELP26 = new Symbol("help26"); var KEY_HELP27 = new Symbol("help27"); var KEY_HELP28 = new Symbol("help28"); var KEY_HELP29 = new Symbol("help29"); var KEY_HELP30 = new Symbol("help30"); var KEY_HELP31 = new Symbol("help31"); var KEY_HELP32 = new Symbol("help32"); var KEY_HELP33 = new Symbol("help33"); var KEY_HELP34 = new Symbol("help34"); var KEY_HELP35 = new Symbol("help35"); var KEY_HELP36 = new Symbol("help36"); var KEY_HELP37 = new Symbol("help37"); var KEY_HELP38 = new Symbol("help38"); var KEY_HELP39 = new Symbol("help39"); var KEY_HELP
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array('label' => 'sylius.form.order.name'))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
    this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 1;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 2;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 3;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 4;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 5;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 6;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 7;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 8;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 9;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 10;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 11;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 12;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 13;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 14;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 15;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 16;     this.props.item.state.interpreted.uuid = this.props.item.state.interpreted.uuid + 17;    
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_text';     } } 
                break;             }         }     } }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL_SYNC; import static org.apache.ignite.
/*  * Copyright (c) Facebook, Inc. and its affiliates.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.facebook.buck.jvm.java;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue;  import com.facebook.buck.core.model.BuildTarget; import com.facebook.buck.core.model.BuildTargetFactory; import com.facebook.buck.core.model.Flavor; import com.facebook.buck.core.model.FlavorDomain; import com.facebook.buck.core.model.ImmutableFlavor; import com.facebook.buck.core.model.TargetGraph; import com.facebook.buck.core.model.TargetNode; import com.facebook.buck.core.model.TargetNodeFactory; import com.facebook.buck.core.rules.BuildRule; import com.facebook.buck.core.rules.BuildRuleParams; import com.facebook.buck.core.rules.BuildRuleResolver; import com.facebook.buck.core.rules.FakeBuildRuleResolver; import com.facebook.buck.core.rules.SourcePath; import com.facebook.buck.core.rules.SourcePathResolver; import com.facebook.buck.core.rules.SourcePathRuleFinder; import com.facebook.buck.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:radio button element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_RadioButton extends Zend_Gdata_Extension {      protected $_rootElement = 'radioButton';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_RadioButton object.      *      * @param string $text (optional) The text to display on the page.      */     public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct();         $this->_text = $text;     }      /**      * Gets the text value for this element.      *      * @return string The
/*  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserProfile class.  * @constructor  * A user profile.  *  * @member {object} [properties] User profile properties.  *  * @member {string} [properties.name] Name of the user profile.  *  * @member {string} [properties.email] Email address of the user profile.  *  * @member {string} [properties.password] Password of the user profile.  *  * @member {string} [properties.password_confirmation] Password of the user  * profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.password_confirmation] Password of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [properties.email_confirmation] Email address of the  * user profile.  *  * @member {string} [
;  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if (content === undefined) {   content = internal.read(mainfile); }  if
 (function (protocol) {      protocol.types = {};      protocol.registerType = function (name, type) {         if (!protocol.types[name]) {             protocol.types[name] = [];         }          protocol.types[name].push(type);     };      protocol.registerType = function (name, type) {         if (!protocol.types[name]) {             protocol.types[name] = [];         }          protocol.types[name].push(type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType(name, type);     };      protocol.registerType = function (name, type) {         protocol.registerType
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.segment;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonPropertyOrder; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory;  import javax.annotation.Nullable; import java.util.List; import java.util.Map; import java.util.Set; import java.util.concurrent.ConcurrentHashMap; import java.util.concurrent.ConcurrentMap; import java.util.concurrent.atomic.Atomic
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
 ,'issues/map-bug'     ,'issues/map-bug-bug' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'issues/map-combo-conflict' ,'
 ReactCSSTransitionGroup = require('react/lib/ReactCSSTransitionGroup'); var StyleSheet = require('react/lib/StyleSheet'); var Text = require('react/lib/Text'); var TouchableOpacity = require('react/lib/TouchableOpacity'); var View = require('react/lib/View'); var TouchableWithoutFeedback = require('react/lib/TouchableWithoutFeedback'); var TouchableHighlight = require('react/lib/TouchableHighlight'); var TouchableHighlightStyle = require('react/lib/TouchableHighlightStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableOpacity = require('react/lib/TouchableOpacity'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableOpacityStyle = require('react/lib/TouchableOpacityStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle'); var TouchableWithoutFeedbackStyle = require('react/lib/TouchableWithoutFeedbackStyle
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.server.coordinator;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonPropertyOrder; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Multimaps; import com.google.common.collect.Multimaps.Builder; import com.google.common.collect.Multimaps; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.concurrent.ThreadFactoryBuilder; import org.apache.druid.java.util.common.concurrent.ThreadFactory; import org.apache.druid.java.util.common.concurrent.
(statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : (statements_op) ?             '' : 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar
            return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.getSyncingSubscription(parameters, callback);             break;         case 'syncing':         return this.get
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryManager; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the MessageList class.  * @constructor  * A list of messages.  *  * @member {string} [nextLink] The URL to get the next set of results.  *  * @member {string} [pageToken] The token for the next set of results.  *  * @member {number} [pageSize] The maximum number of results to display on  * each page when creating paged results from a query. The maximum value  * is 200.  *  * @member {string} [pageToken] The token for the next set of results.  *  * @member {number} [pageSize] The maximum number of results to display on  * each page when creating paged results from a query. The maximum value  * is 200.  *  * @member {string} [nextPageLink] The URL to get the next set of results.  *  * @member {string} [pageToken] The token for the next set of results.  *  * @member {number} [pageSize] The maximum number of results to display on  * each page when creating paged results from a query. The maximum value  * is 200.  *  * @member {string} [pageToken] The token for the next set of results.  *  * @member {number} [pageSize] The maximum number of results to display on  * each page when creating paged results from a query. The maximum value  * is 200.  *  * @member {string} [nextPageLink] The URL to get the next set of results.  *  * @member {string} [pageToken] The token for the next set of results.  *  * @member {number} [pageSize] The maximum number of results to display on  * each page when creating paged results from a query. The maximum value  * is
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks.dataflow.common.data.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkBundleExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack.pop();       this.stack
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Shapes.DataMember; using System.Windows.Shapes.ShapesCommon; using System.Windows.Shell; using System.Windows.Shell.Interop; using Microsoft.Phone.Controls; using Microsoft.Phone.Shell.Interop; using Microsoft.Phone.Shell.Interop.Commands; using Microsoft.Phone.Shell.Interop; using Microsoft.Phone.Shell.Primitives; using Microsoft.Phone.Shell.Data; using Microsoft.Phone.Shell.Documents; using Microsoft.Phone.Shell.Input; using Microsoft.Phone.Shell.Media; using Microsoft.Phone.Shell.Navigation; using Microsoft.Phone.Shell.Shapes;  // The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238  namespace PhoneApplication1 {     /// <summary>     /// An empty page that can be used on its own or navigated to within a Frame.     /// </summary>     public sealed partial class MainPage : PhoneApplicationPage     {         public MainPage()         {             this.InitializeComponent();             this.Suspending += OnSuspending;         }          /// <summary>         /// Invoked when the application is launched normally by the end user.  Other entry points         /// will be used such as when the application is launched to open a specific file.         /// </summary>         /// <param name="e">Details about the launch request and process.</param>         protected override void OnLaunched(LaunchActivatedEventArgs e)         {  #if DEBUG             if (System.Diagnostics.Debugger.Is
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("School")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("School")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.camel.component.hass;  import org.apache.camel.ContextTestSupport; import org.apache.camel.Exchange; import org.apache.camel.Processor; import org.apache.camel.builder.RouteBuilder; import org.apache.camel.component.mock.MockEndpoint; import org.junit.jupiter.api.Test;  import static org.junit.jupiter.api.Assertions.assertEquals; import static org.junit.jupiter.api.Assertions.assertFalse; import static org.junit.jupiter.api.Assertions.assertNotNull; import static org.junit.jupiter.api.Assertions.assertNull; import static org.junit.jupiter.api.Assertions.assertSame; import static org.junit.jupiter.api.Assertions.assertTrue; import static org.mockito.ArgumentMatchers.any; import static org.mockito.ArgumentMatchers.eq; import static org.mockito.ArgumentMatchers.isA; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  /**  * @version   */
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Data.Entity.Migrations.ModelConfiguration; using System.Data.Entity.Migrations.Properties; using System.Data.Entity.Migrations.SqlServer; using System.Data.Entity.Migrations.Storage; using System.Data.Entity.Migrations.Storage.Infrastructure; using System.Xml.Linq; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Binary; using System.Xml.Serialization.Formatters.XmlSerializer; using System.Xml.Serialization.Formatters.XmlSerializer.Settings; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationContext; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatting; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Schema; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Properties; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Types; using System.Xml.Serialization.Formatters.Xml
                 if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                 }                  if (this.smoothContent) {                 var contentHeight = that.$content.outerHeight() || 0;                
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
{slotsObj[slot]["name"] || ''}`,     "description": slotsObj[slot]["description" || '']   };    const ele = {     "name": slotsObj[slot]["name" || ''],     "description": slotsObj[slot]["description" || '']   };    if (slotsObj[slot]["description"]) {     ele.description = slotsObj[slot]["description"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slotsObj[slot]["name"]) {     ele.name = slotsObj[slot]["name"];   }    if (slots
 sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySubSetSize: 'sortBySubSetSize', sortBySetItem: 'sortBySetItem'  sortByExpectedValue: 'sortByExpectedValue', sortBySub
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.Hyrack
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException;

 		background: { 			background: { 				background: { 					background: { 						background: { 							background: { 								background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									background: { 									
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
', (done) => {     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`)     api.patch(`${path}/${i}`) 
 if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try {  if (false) {                 try { 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
connect(process.env.NODE_ENV || 'development')   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .use(connect.static(__dirname + '/public'))   .
 });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break; });           break;
(function(res){     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res);     console.log(res); 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ReferenceCollection; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection
if (!this.sprite) {         sprite = Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.element.appendChild(this.sprite);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.element.appendChild(this.sprite);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this.sprite = this.sprite || Sprite.sizedEndingAt(this.element);         this
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
     // 初始化     init: function() {         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初始化         // 初�
 priorityManager.addTrack(track2, null, null, true) priorityManager.addTrack(track3, null, null, true) priorityManager.addTrack(track4, null, null, true) priorityManager.addTrack(track5, null, null, true) priorityManager.addTrack(track6, null, null, true) priorityManager.addTrack(track7, null, null, true) priorityManager.addTrack(track8, null, null, true) priorityManager.addTrack(track9, null, null, true) priorityManager.addTrack(track10, null, null, true) priorityManager.addTrack(track11, null, null, true) priorityManager.addTrack(track12, null, null, true) priorityManager.addTrack(track13, null, null, true) priorityManager.addTrack(track14, null, null, true) priorityManager.addTrack(track15, null, null, true) priorityManager.addTrack(track16, null, null, true) priorityManager.addTrack(track17, null, null, true) priorityManager.addTrack(track18, null, null, true) priorityManager.addTrack(track19, null, null, true) priorityManager.addTrack(track20, null, null, true) priorityManager.addTrack(track21, null, null, true) priorityManager.addTrack(track22, null, null, true) priorityManager.addTrack(track23, null, null, true) priorityManager.addTrack(track24, null, null, true) priorityManager.addTrack(track25, null, null, true) priorityManager.addTrack(track26, null, null, true) priorityManager.addTrack(track27, null, null, true) priorityManager.addTrack(track28, null, null, true) priorityManager.addTrack(track29, null, null, true) priorityManager.addTrack(track30, null, null, true) priorityManager.addTrack(track31, null, null, true) priorityManager.addTrack(track32, null, null, true) priorityManager.addTrack(track33, null, null, true
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
;  var RTCPeerConnection = function(pcConfig, pcConstraints) {     this.pcConfig = pcConfig;     this.pcConstraints = pcConstraints; };  RTCPeerConnection.prototype.connect = function() {     var self = this;      this.pcConfig.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConfig.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);      this.pcConstraints.addEventListener('connection', function(e) {         self.onConnection(e);     }, false);  
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Cypress.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("Cypress.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ConcurrentHashMap; import org.apache.druid.java.util.common.util.concurrent.ConcurrentMap; import org.apache.druid.java.util.common.util.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritDoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; 

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		game.controls.gravityEnabled = true; 		
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS_TABS
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 } from '@storybook/react'  const { render } = storiesOf('Engine', module)  render(   <Engine>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </Scene>     <Scene>       <FreeCamera />       <HemisphericLight />       <Sphere />       <Ground />     </
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.

<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 React = require('react'); const { Text, Button, View, Platform } = require('react-native'); const { Navigation } = require('react-native-navigation'); const { StyleSheet } = require('react-native-styles'); const { TouchableOpacity } = require('react-native-touchable-opacity'); const { TouchableWithoutFeedback } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-opacity'); const { TouchableWithoutFeedback } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-opacity'); const { TouchableWithoutFeedback } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { TouchableOpacity } = require('react-native-touchable-without-feedback'); const { Touchable
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache
     } }  TSWorker.console.error = function(msg) {     postMessage({ id: msg.id, error: msg.error }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function(msg) {     postMessage({ id: msg.id, info: msg.info }); }  TSWorker.console.info = function
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Test")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("Microsoft")] [assembly: AssemblyProduct("Test")] [assembly: AssemblyCopyright("Copyright © Microsoft 2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
 }   $.Widget.prototype._getOption.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._getOption.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }   $.Widget.prototype._render.apply( this, arguments );   switch ( key ) { }  
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Diagnostics; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Linq.Expressions; using System.Linq.Expressions.Linq; using System.Web; using System.Web.Optimization; using System.Web.Routing; using Microsoft.AspNet.Identity; using Microsoft.AspNet.Identity.EntityFramework; using Microsoft.AspNet.Identity.Owin; using Microsoft.Owin; using Microsoft.Owin.Security; using Microsoft.Owin.Security.Cookies; using Microsoft.Owin.Security.Google; using Microsoft.Owin.Security.Facebook; using Microsoft.Owin.Security.Facebook.OAuth; using Microsoft.Owin.Security.Google.OAuth; using Microsoft.Owin.Security.OAuth.Providers; using Microsoft.Owin.Security.OAuth.Providers.OAuth; using Microsoft.Owin.Security.OAuth.Provider; using Microsoft.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
volumeOuter.height(adjustVolume(x, y, params));         }; var volumeInner = $("#volume-inner");     var adjustVolume2 = function(x, y, params) {         var volumePossible = volumeOuter.height();         var volumePossible2 = volumeOuter.height();         var volumePossible3 = volumeOuter.height();         var volumePossible4 = volumeOuter.height();         var volumePossible5 = volumeOuter.height();         var volumePossible6 = volumeOuter.height();         var volumePossible7 = volumeOuter.height();         var volumePossible8 = volumeOuter.height();         var volumePossible9 = volumeOuter.height();         var volumePossible10 = volumeOuter.height();         var volumePossible11 = volumeOuter.height();         var volumePossible12 = volumeOuter.height();         var volumePossible13 = volumeOuter.height();         var volumePossible14 = volumeOuter.height();         var volumePossible15 = volumeOuter.height();         var volumePossible16 = volumeOuter.height();         var volumePossible17 = volumeOuter.height();         var volumePossible18 = volumeOuter.height();         var volumePossible19 = volumeOuter.height();         var volumePossible20 = volumeOuter.height();         var volumePossible21 = volumeOuter.height();         var volumePossible22 = volumeOuter.height();         var volumePossible23 = volumeOuter.height();         var volumePossible24 = volumeOuter.height();         var volumePossible25 = volumeOuter.height();         var volumePossible26 = volumeOuter.height();         var volumePossible27 = volumeOuter.height();         var volumePossible28 = volumeOuter.height();         var volumePossible29 = volumeOuter.height();         var volumePossible30 = volumeOuter.height();         var volumePossible31 = volumeOuter.height();         var volumePossible32 = volumeOuter.height();         var volumePossible33 = volumeOuter.height();         var volumePossible34 = volumeOuter.height();         var volumePossible35 = volumeOuter.height();         var volumePossible36 = volumeOuter.height();         var volumePossible37 = volumeOuter.height();         var volumePossible38 = volumeOuter.height();         var volumePossible39 = volumeOuter.height();         var volumePossible40 = volumeOuter.height();         var volumePossible41 = volumeOuter.height();         var volumePossible42 = volumeOuter.height();         var volumePossible43 =
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
         method: 'GET',         url: 'https://api.smartcontractproxy.com/v1/',         headers: {             'Content-Type': 'application/json'         }     };     it('should return an object describing the last non published object from smartContractProxy response', function*() {         const smartContractProxy = {         method: 'GET',         url: 'https://api.smartcontractproxy.com/v1/',         headers: {             'Content-Type': 'application/json'         }     };     it('should return an object describing the last non published object from smartContractProxy response', function*() {         const smartContractProxy = {         method: 'GET',         url: 'https://api.smartcontractproxy.com/v1/',         headers: {             'Content-Type': 'application/json'         }     };     it('should return an object describing the last non published object from smartContractProxy response', function*() {         const smartContractProxy = {         method: 'GET',         url: 'https://api.smartcontractproxy.com/v1/',         headers: {             'Content-Type': 'application/json'         }     };     it('should return an object describing the last non published object from smartContractProxy response', function*() {         const smartContractProxy = {         method: 'GET',         url: 'https://api.smartcontractproxy.com/v1/',         headers: {             'Content-Type': 'application/json'         }     };     it('should return an object describing the last non published object from smartContractProxy response', function*() {         const smartContractProxy = {         method: 'GET',         url: 'https://api.smartcontractproxy.com/v1/',         headers: {             'Content-Type': 'application/json'         }     };     it('should return an object describing the last non published object from smartContractProxy response', function*() {         const smartContractProxy = {         method: 'GET',         url: 'https://api.smartcontractproxy.com/v1
 function circle(x, y, radius) { 	this.x = x; 	this.y = y; 	this.radius = radius; }  circle.prototype.move = function(x, y) { 	this.x = x; 	this.y = y; 	this.radius = this.radius * 2; };  circle.prototype.getX = function() { 	return this.x; };  circle.prototype.getY = function() { 	return this.y; };  circle.prototype.getRadius = function() { 	return this.radius; };  circle.prototype.setX = function(x) { 	this.x = x; };  circle.prototype.setY = function(y) { 	this.y = y; };  circle.prototype.setRadius = function(radius) { 	this.radius = radius; };  circle.prototype.move = function(x, y) { 	this.x += x; 	this.y += y; };  circle.prototype.getX = function() { 	return this.x; };  circle.prototype.getY = function() { 	return this.y; };  circle.prototype.setX = function(x) { 	this.x = x; };  circle.prototype.setY = function(y) { 	this.y = y; };  circle.prototype.getRadius = function() { 	return this.radius; };  circle.prototype.setRadius = function(radius) { 	this.radius = radius; };  circle.prototype.move = function(x, y) { 	this.x += x; 	this.y += y; };  circle.prototype.getX = function() { 	return this.x; };  circle.prototype.getY = function() { 	return this.y; };  circle.prototype.setX = function(x) { 	this.x = x; };  circle.prototype.setY = function(y) { 	this.y = y; };  circle
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
( char.charCodeAt(0) ); }  function this.command( char ) {     if ( char.charCodeAt(0) == 0 ) return;     if ( char.charCodeAt(1) == 0 ) return;     if ( char.charCodeAt(2) == 0 ) return;     if ( char.charCodeAt(3) == 0 ) return;     if ( char.charCodeAt(4) == 0 ) return;     if ( char.charCodeAt(5) == 0 ) return;     if ( char.charCodeAt(6) == 0 ) return;     if ( char.charCodeAt(7) == 0 ) return;     if ( char.charCodeAt(8) == 0 ) return;     if ( char.charCodeAt(9) == 0 ) return;     if ( char.charCodeAt(10) == 0 ) return;     if ( char.charCodeAt(11) == 0 ) return;     if ( char.charCodeAt(12) == 0 ) return;     if ( char.charCodeAt(13) == 0 ) return;     if ( char.charCodeAt(14) == 0 ) return;     if ( char.charCodeAt(15) == 0 ) return;     if ( char.charCodeAt(16) == 0 ) return;     if ( char.charCodeAt(17) == 0 ) return;     if ( char.charCodeAt(18) == 0 ) return;     if ( char.charCodeAt(19) == 0 ) return;     if ( char.charCodeAt(20) == 0 ) return;     if ( char.charCodeAt(21) == 0 ) return;     if ( char.charCodeAt(22) == 0 ) return;     if ( char.charCodeAt(23) == 0 ) return;     if ( char.charCodeAt(24) == 0 ) return;     if ( char.charCodeAt(25) == 0 ) return;     if ( char.charCodeAt(26) == 0 ) return;     if ( char.charCodeAt(27) == 0 ) return;     if ( char.charCodeAt(28) ==
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.camel.component.github;  import org.apache.camel.builder.RouteBuilder; import org.apache.camel.component.mock.MockEndpoint; import org.junit.jupiter.api.Test;  import static org.junit.jupiter.api.Assertions.assertEquals; import static org.junit.jupiter.api.Assertions.assertFalse; import static org.junit.jupiter.api.Assertions.assertNotNull; import static org.junit.jupiter.api.Assertions.assertNull; import static org.junit.jupiter.api.Assertions.assertSame; import static org.junit.jupiter.api.Assertions.assertTrue; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when;  public class GithubProviderProviderTest {      @Test     public void testProviderProvider() throws Exception {         MockEndpoint mock = mock(MockEndpoint.class);         mock.expectedMessageCount(1);         when(mock.getProvider()).thenReturn("github");         when(mock.getProvider()).thenReturn("github");         when(mock.getProvider()).thenReturn("github");         when(mock.getProvider()).thenReturn("github");
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Diagnostics; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Media3D; using System.Windows.Shapes.TextFormatting; using System.Windows.Shapes.Shapes; using System.Windows.Threading; using System.Windows.Threading.Tasks; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Effects; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation.Primitives; using System.Windows.Data; using System.Windows.Shapes.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
;             var newExtensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var extensionURL = this._fileSystemURL + extension;             var
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.annotations.VisibleForTesting; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
      }     }   } }  module.exports = exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module.exports['default']; module
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.plugins.document;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import static org.mockito.Mockito.whenNull; import
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e9e9e9e9e9e9e9")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")
var url = $(this).attr('data-url');                 if (isEmpty(props.url)) {                     $.ajax({                         url: props.url,                         type: 'GET',                         dataType: 'json',                         success: function (data) {                             if (isEmpty(props.data)) {                                 props.data = data;                             }                             if (isEmpty(props.success)) {                                 props.success(data);                             }                         }                     });                 } else {                     $.ajax({                         url: props.url,                         type: 'GET',                         dataType: 'json',                         success: function (data) {                             if (isEmpty(props.data)) {                                 props.data = data;                             }                             if (isEmpty(props.success)) {                                 props.success(data);                             }                         }                     });                 }             }         };          $.ajaxSetup({             beforeSend: function (xhr) {                 xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');                 xhr.setRequestHeader('Accept', 'application/json');                 xhr.setRequestHeader('Content-Type', 'application/json');             },             complete: function (xhr) {                 xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');                 xhr.setRequestHeader('Accept', 'application/json');                 xhr.setRequestHeader('Content-Type', 'application/json');             },             error: function (xhr) {                 xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');                 xhr.setRequestHeader('Accept', 'application/json');                 xhr.setRequestHeader('Content-Type', 'application/json');             }         });          $.ajaxSetup({             beforeSend: function (xhr) {                 xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');                 xhr.setRequestHeader('Accept', 'application/json');                 xhr.setRequestHeader('Content-Type', 'application/json');             },             complete: function (xhr) {                 xhr.setRequestHeader('X-Requested-
var _2 = require('lodash'); var Select2 = require('react-select2'); var _3 = require('lodash'); var _4 = require('lodash'); var _5 = require('lodash'); var _6 = require('lodash'); var _7 = require('lodash'); var _8 = require('lodash'); var _9 = require('lodash'); var _10 = require('lodash'); var _11 = require('lodash'); var _12 = require('lodash'); var _13 = require('lodash'); var _14 = require('lodash'); var _15 = require('lodash'); var _16 = require('lodash'); var _17 = require('lodash'); var _18 = require('lodash'); var _19 = require('lodash'); var _20 = require('lodash'); var _21 = require('lodash'); var _22 = require('lodash'); var _23 = require('lodash'); var _24 = require('lodash'); var _25 = require('lodash'); var _26 = require('lodash'); var _27 = require('lodash'); var _28 = require('lodash'); var _29 = require('lodash'); var _2a = require('lodash'); var _2b = require('lodash'); var _2c = require('lodash'); var _2d = require('lodash'); var _2e = require('lodash'); var _2f = require('lodash'); var _30 = require('lodash'); var _31 = require('lodash'); var _32 = require('lodash'); var _33 = require('lodash'); var _34 = require('lodash'); var _35 = require('lodash'); var _36 = require('lodash'); var _37 = require('lodash'); var _38 = require('lodash'); var _39 = require('lodash'); var _3a = require('lodash'); var _3b = require('lodash'); var _3c = require('lodash'); var _3d = require('lodash'); var _3e = require('lodash
process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console.log(err);   process.exit(1); });  process.on('uncaughtException', function(err) {   console
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the         /// ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the         /// ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to get the next set of results.</param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to get the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw
   console.log("fetch-categories")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("auth")   storage.get("auth", (error, auth) => {   console.log("
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Form  * @subpackage UnitTests  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Form_Element_Checkbox  */ require_once 'Zend/Form/Element/Checkbox.php';  /**  * @category   Zend  * @package    Zend_Form  * @subpackage UnitTests  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @group      Zend_Form  * @group      Zend_Form_Element  */ class Zend_Form_Element_CheckboxTest extends PHPUnit_Framework_TestCase {     /**      * @var Zend_Form_Element_Checkbox      */     protected $_element;      /**      * Sets up the fixture, for example, open a network connection.      * This method is called before a test is executed.      */     public function setUp()     {         $this->_element = new Zend_Form_Element_Checkbox();     }      /**      * Tears down the fixture, for example, close a network connection.      * This method is called after a test is executed.      */     public function tearDown()     { 
 = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCodeAt(position++), t = chr.charCode
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
   = errRef.deref()   , domainError = errRef.deref()   , userInfoError = errRef.deref()   , domain = errRef.deref()   , userInfo = errRef.deref()   , domainError = errRef.deref()   , userInfo = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()   , userInfoError = errRef.deref()
 {   if (typeof direction === 'string') {     direction = direction.toLowerCase();   }   if (typeof startingAt === 'string') {     startingAt = startingAt.toLowerCase();   }   if (typeof limit === 'string') {     limit = limit.toLowerCase();   }   if (typeof direction === 'string') {     direction = direction.toUpperCase();   }   if (typeof startingAt === 'string') {     startingAt = startingAt.toUpperCase();   }   if (typeof limit === 'string') {     limit = limit.toUpperCase();   }   if (typeof direction === 'string') {     direction = direction.toLowerCase();   }   if (typeof startingAt === 'string') {     startingAt = startingAt.toLowerCase();   }   if (typeof limit === 'string') {     limit = limit.toUpperCase();   }   if (typeof direction === 'string') {     direction = direction.toLowerCase();   }   if (typeof startingAt === 'string') {     startingAt = startingAt.toLowerCase();   }   if (typeof limit === 'string') {     limit = limit.toUpperCase();   }   if (typeof direction === 'string') {     direction = direction.toLowerCase();   }   if (typeof startingAt === 'string') {     startingAt = startingAt.toLowerCase();   }   if (typeof limit === 'string') {     limit = limit.toUpperCase();   }   if (typeof direction === 'string') {     direction = direction.toLowerCase();   }   if (typeof startingAt === 'string') {     startingAt = startingAt.toLowerCase();   }   if (typeof limit === 'string') {     limit = limit.toUpperCase();   }   if (typeof direction === 'string') {     direction = direction.toLowerCase();   }   if (typeof startingAt === 'string') {     startingAt = startingAt.toLowerCase();   }   if (typeof limit === 'string') {     limit = limit.toUpperCase();   }   if (typeof direction
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.pulsar.client.api;  import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Set;  import javax.annotation.Nullable;  import com.google.api.ads.common.lib.auth.OfflineCredentials; import com.google.api.ads.common.lib.auth.OfflineCredentials.Api; import com.google.api.ads.common.lib.auth.OfflineCredentials.Api.Method; import com.google.api.ads.common.lib.auth.OfflineCredentials.Api.Page; import com.google.api.ads.common.lib.auth.OfflineCredentials.Mode; import com.google.api.ads.common.lib.auth.OfflineCredentials.Page; import com.google.api.ads.common.lib.auth.OfflineCredentials.Type; import com.google.api.ads.common.lib.auth.OfflineCredentials.Value; import com.google.api.ads.common.lib.auth.OfflineCredentials.ValueFactory; import com.google.api.ads.dfp.axis.factory.DfpServices; import com.google.api.ads.dfp.axis.factory.DfpSession; import com.google.api.ads.dfp
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 

﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9

// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network {     using Microsoft.Rest;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// FirewallRulesOperations operations.     /// </summary>     public partial interface IFirewallRulesOperations     {         /// <summary>         /// Gets a list of firewall rules.         /// </summary>         /// <param name='resourceGroupName'>         /// The name of the resource group.         /// </param>         /// <param name='firewallRuleName'>         /// The name of the firewall rule.         /// </param>         /// <param name='customHeaders'>         /// The headers that will be added to request.         /// </param>         /// <param name='cancellationToken'>         /// The cancellation token.         /// </param>         /// <exception cref="CloudException">         /// Thrown when the operation returned an invalid status code         /// </exception>         /// <exception cref="SerializationException">         /// Thrown when unable to deserialize the response         /// </exception>         /// <exception cref="ValidationException">         /// Thrown when a required parameter is null         /// </exception>         Task<AzureOperationResponse<IPage<FirewallRule>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, string firewallRuleName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));         /// <summary>         /// Gets a list of firewall rules.         /// </summary>         /// <param name='resourceGroupName'>         /// The name of the resource group.         /// </param>         /// <param name='firewallRuleName'>         /// The name of the firewall rule. 
(function() {     this.tokens = {};     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })();  (function() {     window.TokenManager = this     })(); 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
            var value = parseInt(value);             if (!isNaN(value)) {                 def_item.v = value;             }         }          def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item.v;         def_item.v = def_item.v || def_item
(this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this, this
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
 'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',      'ar-PS',     
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.logger.Loggers; import org.apache.druid.java.util
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
     var frames = doc.getElementsByTagName(frameTags[i]);                 for (var i = 0, nframes = frames.length; i < nframes; ++i) {         var frame = frames[i];         var iframe = doc.createElement("iframe");         iframe.setAttribute("src", frame.src);         iframe.setAttribute("width", frame.width);         iframe.setAttribute("height", frame.height);         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight", "0");         iframe.setAttribute("allowfullscreen", "true");         iframe.setAttribute("allowscriptaccess", "allow");         iframe.setAttribute("frameborder", "0");         iframe.setAttribute("frameborderwidth", "0");         iframe.setAttribute("frameborderheight",
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWrite
﻿using System; using System.Web; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.WebControls.WebPartsWebParts; using System.Web.UI.WebControls.WebPartsWebPartsWebParts; using System.Web.UI.WebControls.WebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebPartsWebParts
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 const { httpPost } = require('./actions') function * singleLine (id) {   return httpPost(`http: ${id}`) } const { httpPut } = require('./actions') function * singleLine (id) {   return httpPut(`http: ${id}`) } const { httpDelete } = require('./actions') function * singleLine (id) {   return httpDelete(`http: ${id}`) } const { httpGet } = require('./actions') function * singleLine (id) {   return httpGet(`http: ${id}`) } const { httpPost } = require('./actions') function * singleLine (id) {   return httpPost(`http: ${id}`) } const { httpPut } = require('./actions') function * singleLine (id) {   return httpPut(`http: ${id}`) } const { httpDelete } = require('./actions') function * singleLine (id) {   return httpDelete(`http: ${id}`) } const { httpGet } = require('./actions') function * singleLine (id) {   return httpGet(`http: ${id}`) } const { httpPost } = require('./actions') function * singleLine (id) {   return httpPost(`http: ${id}`) } const { httpPut } = require('./actions') function * singleLine (id) {   return httpPut(`http: ${id}`) } const { httpDelete } = require('./actions') function * singleLine (id) {   return httpDelete(`http: ${id}`) } const { httpGet } = require('./actions') function * singleLine (id) {   return httpGet(`http: ${id}`) } const { httpGet } = require('./actions') function * singleLine (id) {   return httpGet(`http: ${id}`) } const { httpGet } = require('./actions') function * singleLine (id) {   return httpGet(`http: ${id}`) } const { httpGet } = require('./actions') function * singleLine (id) {   return httpGet(`http: ${id}`) }
    return event.reply('That\'s a good sticker!');    break; case 'sticker':    return event.reply('That\'s a good sticker!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'sticker':    return event.reply('That\'s a good sticker!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':    return event.reply('That\'s a good location!');    break; case 'location':
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request"; if (!request.body)   throw "no body on request"; if (!request.headers)   throw "no headers on request"; if (!request.method)   throw "no method on request"; if (!request.params)   throw "no params on request";
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import java.util.concurrent.ConcurrentHashMap; import java.util.concurrent.ConcurrentMap; import java.util.concurrent.atomic.AtomicBoolean; import java.util.concurrent.atomic.AtomicInteger; import java.util.concurrent.atomic.AtomicLong; import java.util.concurrent.atomic.AtomicReference; import java.util.concurrent.locks.Lock; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLockFactory; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLockFactory; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLockFactory; import java.util.concurrent.locks.ReentrantLock; import java.util.concurrent.locks.ReentrantLock; import java.util.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.ArgumentMatchers.any; import static org.mockito.ArgumentMatchers.anyString; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  module.exports = models; 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_text_type';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_text_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes;  namespace Jack {     /// <summary>     /// Interaction logic for MainWindow.xaml     /// </summary>     public partial class MainWindow : Window     {         public MainWindow()         {             InitializeComponent();         }     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("IexecAccountStatus")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("IexecAccountStatus")] [assembly: AssemblyCopyright("Copyright ©  2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: ComVisible(false)] 
 App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) App.on('record', co.wrap(function *() {     yield App.activity.record.apply(App.activity, arguments)   })) 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadSafety.Immutable; import com.google.common.util.concurrent.ThreadSafety.ThreadState; import com.google.common.util.concurrent.ThreadSaf
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_View_Helper_Abstract  */ require_once 'Zend/View/Helper/Abstract.php';  /**  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @group      Zend_View  * @group      Zend_View_Helper  */ class Zend_View_Helper_Form extends Zend_View_Helper_Abstract {     /**      * Form elements      *      * @var array      */     protected $_elements = array();      /**      * Form elements      *      * @var array      */     protected $_formElements = array();      /**      * Form elements      *      * @var array      */     protected $_formAttributes = array();      /**      * Form elements      *      * @var array      */     protected $_formOptions = array();      /**      * Form elements      *      * @var array      */    
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 (function () {     'use strict';      angular         .module('app')         .config(config);      config.$inject = ['$stateProvider', '$urlRouterProvider'];      function config($stateProvider, $urlRouterProvider) {         $urlRouterProvider.otherwise('/');          $stateProvider             .state('home', {                 url: '/home',                 templateUrl: 'app/home/home.html',                 controller: 'HomeCtrl'             })             .state('about', {                 url: '/about',                 templateUrl: 'app/about/about.html',                 controller: 'AboutCtrl'             })             .state('contact', {                 url: '/contact',                 templateUrl: 'app/contact/contact.html',                 controller: 'ContactCtrl'             })             .state('login', {                 url: '/login',                 templateUrl: 'app/login/login.html',                 controller: 'LoginCtrl'             })             .state('signup', {                 url: '/signup',                 templateUrl: 'app/signup/signup.html',                 controller: 'SignupCtrl'             })             .state('signin', {                 url: '/signin',                 templateUrl: 'app/signin/signin.html',                 controller: 'SigninCtrl'             })             .state('signout', {                 url: '/signout',                 templateUrl: 'app/signout/signout.html',                 controller: 'SignoutCtrl'             });     } })(); 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
(function() {      var add = function(a, b) {         return a + b;     };      var square = function(x) {         return add(square(x), 1);     };      var square2 = function(x) {         return add(square(x), 2);     };      var square3 = function(x) {         return add(square(x), 3);     };      var square4 = function(x) {         return add(square(x), 4);     };      var square5 = function(x) {         return add(square(x), 5);     };      var square6 = function(x) {         return add(square(x), 6);     };      var square7 = function(x) {         return add(square(x), 7);     };      var square8 = function(x) {         return add(square(x), 8);     };      var square9 = function(x) {         return add(square(x), 9);     };      var square10 = function(x) {         return add(square(x), 10);     };      var square11 = function(x) {         return add(square(x), 11);     };      var square12 = function(x) {         return add(square(x), 12);     };      var square13 = function(x) {         return add(square(x), 13);     };      var square14 = function(x) {         return add(square(x), 14);     };      var square15 = function(x) {         return add(square(x), 15);     };      var square16 = function(x) {         return add(square(x), 16);     };      var square17 = function(x) {         return add(square(x), 17);     };      var square18 = function(x) {         return add(square(x), 18);    
; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (!!~specialNumbers.indexOf(i)) {   return i; }  if (
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\ShippingBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class AddressType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('street')             ->add('city')             ->add('state')             ->add('zip')             ->add('country')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\ShippingBundle\Entity\Address'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_shipping_address';     } } 
(function() { 		$(document).ready(function() { 			$(document).ready(function() { 				$(document).ready(function() { 					$(document).ready(function() { 						$(document).ready(function() { 							$(document).ready(function() { 								$(document).ready(function() { 									$(document).ready(function() { 										$(document).ready(function() { 											$(document).ready(function() { 												$(document).ready(function() { 													$(document).ready(function() { 														$(document).ready(function() { 															$(document).ready(function() { 																$(document).ready(function() { 																	$(document).ready(function() { 																		$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																			$(document).ready(function() { 																		
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.asterix.runtime.evaluators.base.AbstractScalarFunctionDynamicDescriptor; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluator; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.core.algebra.functions.FunctionIdentifier; import org.apache.hyracks.algebricks.core.algebra.functions.IFunctionDescriptor; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hy
/*  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserProfile class.  * @constructor  * A user profile.  *  * @member {string} [id] The ID of the user profile.  *  * @member {string} [name] The name of the user profile.  *  * @member {string} [email] The email address of the user profile.  *  * @member {string} [password] The password of the user profile.  *  * @member {string} [passwordConfirmation] The password confirmation of  * the user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [emailConfirmation] The email confirmation of  * the user profile.  *  * @member {string} [firstName] The first name of the user profile.  *  * @member {string} [lastName] The last name of the user profile.  *  * @member {string} [username] The username of the user profile.  *  * @member {string} [password] The password of the user profile.  *  * @member {string} [passwordConfirmation] The password confirmation of  * the user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [emailConfirmation] The email confirmation of  * the user profile.  *  * @member {string} [firstName] The first name of the user profile.  *  * @member {string} [lastName] The last name of the user profile.  *  * @member {string} [username] The username of the user profile.  *  * @member {string} [password] The password of the user profile.  *  * @member
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }      /**      * Retrieves a DOMElement which corresponds to this element and all      * child properties.  This is used to build an entry back
 }  function convertId(text) {     if (typeof text === 'string') {         return text;     }     if (typeof text === 'number') {         return text;     }     if (typeof text === 'boolean') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'object') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text === 'function') {         return text;     }     if (typeof text
} from './reducer.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './state.decorator'; import {IState} from './
 return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'transactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('newPendingTransactions', null, null, null, callback);             break; case 'pendingTransactions': return this.getSubscription('new
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronization
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
width > this.node.diagram.bounds.width || height > this.node.diagram.bounds.height) {     this.node.diagram.bounds.width = width;     this.node.diagram.bounds.height = height;     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds);     this.updateNodeBounds(element, newBounds
     }      if (typeof module !== 'undefined' && module.exports) {         var v = module.exports;         if (typeof define === 'function' && define.amd) {             define(['jquery'], v);         } else if (typeof exports === 'object') {             module.exports = v;         } else {             v();         }     } else {         var v = window.jQuery;         if (typeof define === 'function' && define.amd) {             define(['jquery'], v);         } else if (typeof exports === 'object') {             module.exports = v;         } else {             v();         }     } }(this, function ($) {     'use strict';      $.fn.dataTable = function (options) {         return this.each(function () {             var $this = $(this);             var data = $this.data('dataTable');             if (!data) {                 $this.data('dataTable', (data = new $.fn.dataTable(this, options)));             }             return data;         });     };      $.fn.dataTable.Constructor = function () {         return this.each(function () {             var $this = $(this);             var data = $this.data('dataTable');             if (!data) {                 $this.data('dataTable', (data = new $.fn.dataTable(this)));             }             return data;         });     };      $.fn.dataTable.NoData = function () {         return this.each(function () {             var $this = $(this);             var data = $this.data('dataTable');             if (!data) {                 $this.data('dataTable', (data = new $.fn.dataTable(this)));             }             return data;         });     };      $.fn.DataTable = function (options) {         return this.each(function () {             var $this = $(this);             var data = $this.data('dataTable');             if
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  const utils = require('./utils');  /**  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a Blip.  * Create a B

(function(model, relation)   {      if(!model) return;      if(!relation) return;      if(!relation.model) return;      if(!relation.relation) return;      if(!relation.relation.model) return;      if(!relation.relation.relation) return;      if(!relation.relation.relation.model) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation) return;      if(!relation.relation.relation.relation)
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.mockito.ArgumentMatchers.any; import static org.mockito.ArgumentMatchers.anyString; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.
    };      /**      * @private      * @param {string} dirPath      * @param {function} callback      */     this.remove = function(dirPath, callback) {         if (!dirPath) {             throw new Error('dirPath is required');         }          if (!callback) {             throw new Error('callback is required');         }          if (fs.existsSync(dirPath)) {             fs.unlinkSync(dirPath);         }          callback();     };      /**      * @private      * @param {string} dirPath      * @param {function} callback      */     this.mkdir = function(dirPath, callback) {         if (!dirPath) {             throw new Error('dirPath is required');         }          if (!callback) {             throw new Error('callback is required');         }          if (fs.existsSync(dirPath)) {             fs.mkdirSync(dirPath);         }          callback();     };      /**      * @private      * @param {string} dirPath      * @param {function} callback      */     this.copy = function(dirPath, callback) {         if (!dirPath) {             throw new Error('dirPath is required');         }          if (!callback) {             throw new Error('callback is required');         }          if (fs.existsSync(dirPath)) {             fs.copySync(dirPath, dirPath);         }          callback();     };      /**      * @private      * @param {string} dirPath      * @param {function} callback      */     this.rename = function(dirPath, callback) {         if (!dirPath) {             throw new Error('dirPath is required');         }          if (!callback) {             throw new Error('callback is required');         }          if (fs.existsSync(dirPath)) {             fs.renameSync(dirPath, dirPath);         }          callback();     };      /**      * @private 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
   if ( section.n === SECTION_UNLESS ) {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   } else {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   }    if ( section.n === SECTION_UNLESS ) {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   } else {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   }    if ( section.n === SECTION_UNLESS ) {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   } else {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   }    if ( section.n === SECTION_UNLESS ) {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   } else {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   }    if ( section.n === SECTION_UNLESS ) {     if ( child.n === SECTION_UNLESS ) {       section.n = SECTION_UNLESS;     } else {       section.n = SECTION_UNLESS;     }   } else {     if (
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 var path = require('path'); var prompt = require('prompt-lite'); var path = require('path'); var prompt = require('prompt-lite'); var path = require('path'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite'); var prompt = require('prompt-lite');
 res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.template = `full.${this.templateType}`;             next(); res.podium.
     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view);     currWin.ko.views.manager.addView(view
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 'use strict';  Object.defineProperty(exports, "__esModule", {   value: true });  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();  var _createClass2 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();  var _createClass3 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();  var _createClass4 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true;
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price'                 )             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Microsoft.Rest.Azure.OData;     using Models;     using Newtonsoft.Json;     using System.Linq;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Runtime.Serialization;     using System.Runtime.Serialization.Formatters.Binary;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Runtime.Serialization;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Runtime.Serialization;     using Newtonsoft.Json;     using System.Net.Http.Headers;     using System.Net.Http.Headers.Values;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Runtime.Serialization;     using System.Runtime.Serialization.Formatters.Binary;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Runtime.Serialization;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Net.Http.Headers.Values;     using System.Collections.ObjectModel.
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a
 import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import { mapTransition } from './utils/mapTransition' import {
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
        ado.observe(observer, state);     }      function innerUnsubscribe(observer) {       var ado = new AutoDetachObserver(observer), state = [ado, this];       if (currentThreadScheduler.unscheduleRequired()) {         ado.unobserve(observer, state);     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.unscheduleAll()) {         ado.unobserveAll();     }      function innerSubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.scheduleAll()) {         ado.unobserveAll();     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.unscheduleAll()) {         ado.unobserveAll();     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.unscheduleRequired()) {         ado.unobserveAll();     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.unscheduleRequired()) {         ado.unobserveAll();     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.unscheduleRequired()) {         ado.unobserveAll();     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.unscheduleRequired()) {         ado.unobserveAll();     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado, this];       if (currentThreadScheduler.unscheduleRequired()) {         ado.unobserveAll();     }      function innerUnsubscribeAll() {       var ado = new AutoDetachObserver(), state = [ado,
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.atomic.AtomicBoolean; import com.google.common.util.concurrent.atomic.Atomic
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.Xaml; using System.Web.UI.HtmlControls.Xaml.Data; using System.Web.UI.HtmlControls.Xaml.Controls; using System.Web.UI.HtmlControls.Xaml.Input; using System.Web.UI.HtmlControls.Xaml.Media; using System.Web.UI.HtmlControls.Xaml.Navigation;  // The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409  namespace Web.UI {     /// <summary>     /// An empty page that can be used on its own or navigated to within a Frame.     /// </
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.IgniteInternalFuture; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommon
  vm.isSignedIn = true;   vm.isSignedIn = true;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn = false;   vm.isSignedIn =
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("Microsoft")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright © Microsoft 2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e-8e8e-4e8e-8e8e-8e8e8e8e8e")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.asterix.runtime.evaluators.base.AbstractScalarFunctionDynamicDescriptor; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluator; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.core.algebra.functions.FunctionIdentifier; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.
 let type;                debugger;         if (type === 'message') {   promise = new Promise((resolve, reject) => {     resolve(1);   }); } else {   promise = new Promise((resolve, reject) => {     reject(1);   }); }  promise.then(() => {   console.log(1);   console.log(2);   console.log(3);   console.log(4);   console.log(5);   console.log(6);   console.log(7);   console.log(8);   console.log(9);   console.log(10);   console.log(11);   console.log(12);   console.log(13);   console.log(14);   console.log(15);   console.log(16);   console.log(17);   console.log(18);   console.log(19);   console.log(20);   console.log(21);   console.log(22);   console.log(23);   console.log(24);   console.log(25);   console.log(26);   console.log(27);   console.log(28);   console.log(29);   console.log(30);   console.log(31);   console.log(32);   console.log(33);   console.log(34);   console.log(35);   console.log(36);   console.log(37);   console.log(38);   console.log(39);   console.log(40);   console.log(41);   console.log(42);   console.log(43);   console.log(44);   console.log(45);   console.log(46);   console.log(47);   console.log(48);   console.log(49);   console.log(50);   console.log(51);   console.log(52);   console.log(53);   console.log(54);   console.
 = options.keyPath || keyPath; let scopeDescriptor = options.scope || scopeDescriptor; let callbackDescriptor = options.callback || callbackDescriptor; let scope = options.scope || scope; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; let scopeDescriptor = options.scope || scopeDescriptor; 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 HasManySingleLinked.prototype.injectSetter = function(options) {     var where = {}, options = options || {}     where[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__factory.identifier] = this.instance.id;     options[this.__
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
		this._activeRoute = null; 	}  	this.go = function() { 		if (this._activeRoute) { 			this._activeRoute.go(); 		} 	}  	this.goBack = function() { 		if (this._activeRoute) { 			this._activeRoute.goBack(); 		} 	}  	this.goForward = function() { 		if (this._activeRoute) { 			this._activeRoute.goForward(); 		} 	}  	this.goHome = function() { 		if (this._activeRoute) { 			this._activeRoute.goHome(); 		} 	}  	this.goBack = function() { 		if (this._activeRoute) { 			this._activeRoute.goBack(); 		} 	}  	this.goForward = function() { 		if (this._activeRoute) { 			this._activeRoute.goForward(); 		} 	}  	this.goHome = function() { 		if (this._activeRoute) { 			this._activeRoute.goHome(); 		} 	}  	this.goBack = function() { 		if (this._activeRoute) { 			this._activeRoute.goBack(); 		} 	}  	this.goForward = function() { 		if (this._activeRoute) { 			this._activeRoute.goForward(); 		} 	}  	this.goHome = function() { 		if (this._activeRoute) { 			this._activeRoute.goHome(); 		} 	}  	this.goBack = function() { 		if (this._activeRoute) { 			this._activeRoute.goBack(); 		} 	}  	this.goForward = function() { 		if (this._activeRoute) { 			this._activeRoute.goForward(); 		} 	}  	this.goHome = function() { 		if (this._activeRoute
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
         this.directoryElements[key].addClass('hide')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[key].addClass('active')         this.directoryElements[

<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Core")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Core")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e9e9e9e9-e9e9-e9e9-e9e9-e9e9e9e9e9")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: ComVisible(false)]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  //
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache.ignite.cache.Cache
 console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger console.log('dosomething! ...maybe - to fix size')     debugger 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
(function (override, capture, args) {     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args];     }     if (typeof args === 'string') {         args = [args
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee viewData';         setTimeout(function() { this.viewData['title'] = 'rulee
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #include "base/bind.h" #include "base/command_line.h" #include "base/file_util.h" #include "base/logging.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/message_loop/message_loop.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/scoped_user_pref_update.h" #include "base/strings/string_number_conversions.h" #include "base/strings/string_util.h" #include "base/strings/stringprintf.h" #include "base/strings/utf_string_conversions.h" #include "base/threading/thread.h" #include "base/threading/thread_restrictions.h" #include "base/time/time.h" #include "base/values.h" #include "content/public/browser/browser_thread.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/render_frame_host.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_type_text';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Documents; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes.ShapesCommon; using System.Windows.Shell.Interop; using System.Windows.Data; using System.Windows; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Shapes; using System.Windows.Shapes.ShapesCommon; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Resources; using System.Collections; using System.Collections.Generic; using System.Linq; using System.Threading; using System.Threading.Tasks; using System.Web; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 var self, db, library, __private, genesisBlock = null;  db = {}; library = {}; __private = {};  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null; }  function init() {     self = this;     db = {};     library = {};     __private = {};     genesisBlock = null
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 module.exports = {   streamify: streamify,   serialOrdered: serialOrdered } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java
