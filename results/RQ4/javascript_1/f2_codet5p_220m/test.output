    if(relationship.kind === 'belongsTo' || relationship.kind === 'hasMany' || relationship.kind === 'hasManyMany' || relationship.kind === 'hasManyManyMany' || relationship.kind === 'hasManyManyManyMany' || relationship.kind === 'hasManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.
   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options: {     },     rules: {       'no-semi-colons': 'off'     }   },   'no-semi-colons': {     options:
 oauthModule.init(function(err) {   if (err) {     throw err;   }    rest.init(function(err) {     if (err) {       throw err;     }      oauthModule.init(function(err) {       if (err) {         throw err;       }        rest.init(function(err) {         if (err) {           throw err;         }          oauthModule.init(function(err) {           if (err) {             throw err;           }            oauthModule.init(function(err) {             if (err) {               throw err;             }              oauthModule.init(function(err) {               if (err) {                 throw err;               }                oauthModule.init(function(err) {                 if (err) {                   throw err;                 }                  oauthModule.init(function(err) {                   if (err) {                     throw err;                   }                    oauthModule.init(function(err) {                     if (err) {                       throw err;                     }                      oauthModule.init(function(err) {                       if (err) {                         throw err;                       }                        oauthModule.init(function(err) {                         if (err) {                           throw err;                         }                          oauthModule.init(function(err) {                           if (err) {                             throw err;                           }                            oauthModule.init(function(err) {                             if (err) {                               throw err;                             }                                oauthModule.init(function(err) {                                 if (err) {                                   throw err;                                 }                                  oauthModule.init(function(err) {                                   if (err) {                                     throw err;                                   }                                      oauthModule.init(function(err) {                                       if (err) {                                         throw err;                                       }                                        oauthModule.init(function(err) {                                         if (err) {                                           throw err;                                         }  
.createWriteStream(entry.path, range)   var dataStream = fileReadStream.createWriteStream(entry.path, range)   var dataStream2 = fileReadStream.createWriteStream(entry.path, range)   var dataStream3 = fileReadStream.createWriteStream(entry.path, range)   var dataStream4 = fileReadStream.createWriteStream(entry.path, range)   var dataStream5 = fileReadStream.createWriteStream(entry.path, range)   var dataStream6 = fileReadStream.createWriteStream(entry.path, range)   var dataStream7 = fileReadStream.createWriteStream(entry.path, range)   var dataStream8 = fileReadStream.createWriteStream(entry.path, range)   var dataStream9 = fileReadStream.createWriteStream(entry.path, range)   var dataStream10 = fileReadStream.createWriteStream(entry.path, range)   var dataStream11 = fileReadStream.createWriteStream(entry.path, range)   var dataStream12 = fileReadStream.createWriteStream(entry.path, range)   var dataStream13 = fileReadStream.createWriteStream(entry.path, range)   var dataStream14 = fileReadStream.createWriteStream(entry.path, range)   var dataStream15 = fileReadStream.createWriteStream(entry.path, range)   var dataStream16 = fileReadStream.createWriteStream(entry.path, range)   var dataStream17 = fileReadStream.createWriteStream(entry.path, range)   var dataStream18 = fileReadStream.createWriteStream(entry.path, range)   var dataStream19 = fileReadStream.createWriteStream(entry.path, range)   var dataStream20 = fileReadStream.createWriteStream(entry.path, range)   var dataStream21 = fileReadStream.createWriteStream(entry.path, range)   var dataStream22 = fileReadStream.createWriteStream(entry.path, range)   var dataStream23 = fileReadStream.createWriteStream(entry.path, range)   var dataStream24 = fileReadStream.createWriteStream(entry.path, range)   var dataStream25 = fileReadStream.createWriteStream(entry.path, range)  
.delete(id);     } catch (e) { } };  Member.get = function*(id) {     try { return Member.get(id);     } catch (e) { } };  Member.getAll = function*(id) {     try { return Member.getAll(id);     } catch (e) { } };  Member.set = function*(id, value) {     try { return Member.set(id, value);     } catch (e) { } };  Member.setAll = function*(id, value) {     try { return Member.setAll(id, value);     } catch (e) { } };  Member.get = function*(id) {     try { return Member.get(id);     } catch (e) { } };  Member.getAll = function*(id) {     try { return Member.getAll(id);     } catch (e) { } };  Member.set = function*(id, value) {     try { return Member.set(id, value);     } catch (e) { } };  Member.setAll = function*(id, value) {     try { return Member.setAll(id, value);     } catch (e) { } };  Member.get = function*(id) {     try { return Member.get(id);     } catch (e) { } };  Member.getAll = function*(id) {     try { return Member.getAll(id);     } catch (e) { } };  Member.set = function*(id, value) {     try { return Member.set(id, value);     } catch (e) { } };  Member.setAll = function*(id, value) {     try { return Member.setAll(id, value);     } catch (e) { } };  Member.get = function*(id) {     try { return Member.get(id);     } catch (e) { } };  Member.getAll = function*(id) {     try { return Member.getAll(id);     } catch (e) { } };  Member.set = function*(id
 var Component = function() {     Component.apply(this, arguments); };  Component.prototype = Object.create(Component.prototype); Component.prototype.constructor = Component;  Component.prototype.create = function() {     return new Component(); };  Component.prototype.destroy = function() {     Component.prototype.destroy.call(this); };  module.exports = componentConstructor; 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagReference; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReference; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface
db = process.env.db || 'http:   , RTT test('Couch is there', function(t) {   t.plan(1);    var db = new DB(process.env.db);   db.open(function(err, db) {     if (err) {       t.fail(err);     } else {       db.close(function(err) {         if (err) {           t.fail(err);         } else {           db.close(function(err) {             if (err) {               t.fail(err);             } else {               db.close(function(err) {                 if (err) {                   t.fail(err);                 } else {                   db.close(function(err) {                     if (err) {                       t.fail(err);                     } else {                       db.close(function(err) {                         if (err) {                           t.fail(err);                         } else {                           db.close(function(err) {                             if (err) {                               t.fail(err);                             } else {                               db.close(function(err) {                                 if (err) {                                   t.fail(err);                                 } else {                                   db.close(function(err) {                                     if (err) {                                       t.fail(err);                                     } else {                                       db.close(function(err) {                                         if (err) {                                           t.fail(err);                                         } else {                                           db.close(function(err) {                                             if (err) {                                               t.fail(err);                                             } else {                                               db.close(function(err) {                                                 if (err) {                                                   t.fail(err);                                                 } else {                                                   db.close(function(err) {                                                     if (err) {                                                       t.fail(err);                                                     } else {                                                       db.close(function(err) {                                                       db.close(function(err) {                                                       db.close(function(err) { 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
                case actionTypes.messages.closeMessageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.messages.messageSent:                 case actionTypes.messages.errorMessageSent:                 case actionTypes.messages.messageReceived:                 case actionTypes.messages.errorMessageReceived:                 case actionTypes.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({}, this.button_options, b); this.button_options = $.extend({},
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component
if (process.env.NODE_ENV !== 'production') {   async.waterfall([     function (cb) {       fs.readdir(__dirname, function (err, files) {         if (err) {           cb(err);         } else {           files.forEach(function (file) {             var path = path.resolve(__dirname, file);             if (fs.existsSync(path)) {               cb();             }           });         }       });     },     function (cb) {       async.waterfall([         function (cb) {           fs.readdir(__dirname, function (err, files) {             if (err) {               cb(err);             } else {               files.forEach(function (file) {                 var path = path.resolve(__dirname, file);                 if (fs.existsSync(path)) {                   cb();                 }               });             }           });         },         function (cb) {           fs.readdir(__dirname, function (err, files) {             if (err) {               cb(err);             } else {               cb();             }           });         },         function (cb) {           fs.readdir(__dirname, function (err, files) {             if (err) {               cb(err);             } else {               cb();             }           });         },         function (cb) {           fs.readdir(__dirname, function (err, files) {             if (err) {               cb(err);             } else {               cb();             }           });         },         function (cb) {           fs.readdir(__dirname, function (err, files) {             if (err) {               cb(err);             } else {               cb();             }           });         },         function (cb) {           fs.readdir(__dirname, function (err, files) {             if (err) {               cb(err);             } else {               cb();             }           });         }, 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.GridKernalContext; import org.apache.ignite.internal.processors.cache.GridCacheContext; import org.apache.ignite.internal.processors.cache.GridCacheSharedContext; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Diagnostics; using System.IO; using System.Xml; using System.Xml.Linq; using System.Xml.XPath; using System.Xml.XPath.XPathConstants; using System.Xml.XPath; using System.Xml.XPath.XPathExpressions; using System.Xml; using System.Xml.Serialization; using System.Xml.Serialization.XmlSchema; using System.Xml.Serialization.XmlSerializer; using System.Xml.Serialization.XmlSerializerSettings; using System.Xml.Serialization.SerializationInfo; using System.Xml.Serialization.XmlTypeMapping; using System.Xml; using System.Xml.XPath; using System.Xml.XPath.XPathExpressions; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Schema.Attributes; using System.ComponentModel.DataAnnotations.Schema.Properties; using System.ComponentModel.DataAnnotations.Schema.Types; using System.Diagnostics.CodeAnalysis; using System.Globalization; using System.IO; using System.Xml; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.Binary; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.XmlSerializer; using System.Xml.Serialization.Formatters.XmlSerializerSettings; using System.Xml.Serialization.
 var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * i)); var endTime = new Date(startTime + (dayMillis * j));  var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * k)); var endTime = new Date(startTime + (dayMillis * l));  var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * m)); var endTime = new Date(startTime + (dayMillis * n));  var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * o)); var endTime = new Date(startTime + (dayMillis * p));  var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * q)); var endTime = new Date(startTime + (dayMillis * r));  var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * s)); var endTime = new Date(startTime + (dayMillis * t));  var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * u)); var endTime = new Date(startTime + (dayMillis * v));  var resultData = {     data: [],     date: bucketGraphDate,     value: 0 };  var startTime = new Date(startTime + (dayMillis * w)); var endTime = new Date(startTime + (dayMillis * x));  var resultData = {     data: [],     date: bucketGraphDate,     value
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array('label' => 'sylius.form.order.name'))             ->add('description', 'textarea', array('label' => 'sylius.form.order.description'))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.ArgumentMatchers.any; import static org.mockito.ArgumentMatchers.anyString; import static org.mockito.ArgumentMatchers.eq; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
  <TouchableHighlight onPress={this.handlePress.bind(this)}>   <View style={styles.container}>     <View style={styles.header}>       <Text style={styles.headerText}>{this.props.title}</Text>     </View>   </View> </TouchableHighlight>  <TouchableHighlight onPress={this.handlePress.bind(this)}>   <View style={styles.container}>     <View style={styles.header}>       <Text style={styles.headerText}>{this.props.title}</Text>     </View>   </View> </TouchableHighlight>  <TouchableHighlight onPress={this.handlePress.bind(this)}>   <View style={styles.container}>     <View style={styles.header}>       <Text style={styles.headerText}>{this.props.title}</Text>     </View>   </View> </TouchableHighlight>  <TouchableHighlight onPress={this.handlePress.bind(this)}>   <View style={styles.container}>     <View style={styles.header}>       <Text style={styles.headerText}>{this.props.title}</Text>     </View>   </View> </TouchableHighlight>  <TouchableHighlight onPress={this.handlePress.bind(this)}>   <View style={styles.container}>     <View style={styles.header}>       <Text style={styles.headerText}>{this.props.title}</Text>     </View>   </View> </TouchableHighlight>  <TouchableHighlight onPress={this.handlePress.bind(this)}>   <View style={styles.container}>     <View style={styles.header}>       <Text style={styles.headerText}>{this.props.title}</Text>     </View>   </View> </TouchableHighlight>  <TouchableHighlight onPress={this.handlePress.bind(this)}>   <View style={styles.container}>     <View style={styles.header}>       <Text style={styles
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
   'use strict';    var Joi = require('joi');   var _ = require('lodash');    var schema = new Joi.Schema({     name: {       type: Joi.String,       required: true     },     email: {       type: Joi.String,       required: true     },     password: {       type: Joi.String,       required: true     },     passwordConfirm: {       type: Joi.String,       required: true     }   });    schema.add('name', {     type: Joi.String,     required: true   });    schema.add('email', {     type: Joi.String,     required: true   });    schema.add('password', {     type: Joi.String,     required: true   });    schema.add('passwordConfirm', {     type: Joi.String,     required: true   });    schema.add('passwordConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('passwordConfirmConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('passwordConfirmConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('emailConfirm', {     type: Joi.String,     required: true   });    schema.add('emailConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('emailConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('emailConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('emailConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('emailConfirmConfirm', {     type: Joi.String,     required: true   });    schema.add('email
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
var pg = pg[0]     var npg = pg[1]     var npg = pg[2]     var npg = pg[3]     var npg = pg[4]     var npg = pg[5]     var npg = pg[6]     var npg = pg[7]     var npg = pg[8]     var npg = pg[9]     var npg = pg[10]     var npg = pg[11]     var npg = pg[12]     var npg = pg[13]     var npg = pg[14]     var npg = pg[15]     var npg = pg[16]     var npg = pg[17]     var npg = pg[18]     var npg = pg[19]     var npg = pg[20]     var npg = pg[21]     var npg = pg[22]     var npg = pg[23]     var npg = pg[24]     var npg = pg[25]     var npg = pg[26]     var npg = pg[27]     var npg = pg[28]     var npg = pg[29]     var npg = pg[30]     var npg = pg[31]     var npg = pg[32]     var npg = pg[33]     var npg = pg[34]     var npg = pg[35]     var npg = pg[36]     var npg = pg[37]     var npg = pg[38]     var npg = pg[39]     var npg = pg[40]     var npg = pg[41]     var npg = pg[42]     var npg = pg[43]     var npg = pg[44]     var npg = pg[45]     var npg = pg[46]     var npg = pg[47]     var npg = pg[48]     var npg = pg[49]     var npg = pg[50]     var npg = pg[51]     var npg = pg[52]     var npg = pg[53]     var npg = pg[54]     var npg = pg[55]     var npg = pg[56]
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common

 const SecurityException = goog.require('tink.exception.SecurityException'); const Util = goog.require('tink.util');  /**  * @constructor  * @extends {tink.exception.SecurityException}  * @extends {tink.exception.Util}  * @param {string} message  * @param {number} lineNumber  * @param {number} columnNumber  * @param {string} file  * @param {number} line  * @param {number} column  * @param {string} fileName  * @param {number} lineNumber  * @param {number} column  * @param {string} fileName  * @param {number} lineNumber  * @param {number} column  * @param {string} fileName  * @param {number} lineNumber  * @param {string} column  * @param {string} fileName  * @param {number} lineNumber  * @param {string} column  * @param {string} fileName  * @param {number} lineNumber  * @param {string} column  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param {string} fileName  * @param
 export default Vue.extend({   name: 'DisableModal',   mixins: [DisableModal],   props: {     disabled: {       type: Boolean,       default: false,     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this.disabled;       },       set(value) {         this.disabled = value;       },     },   },   computed: {     disabled: {       get() {         return this
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view_delegate.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.internal.processors.cache.GridCacheContext; import org.apache.ignite.internal.processors.cache.CacheAtomicityMode; import org.apache.ignite.internal.processors.cache.CacheMode; import org.apache.ignite.internal.processors.cache.CacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hdfs.server.namenode;  import java.io.IOException; import java.util.ArrayList; import java.util.List;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import org.apache.hadoop.hdfs.HdfsConfiguration; import org.apache.hadoop.hdfs.MiniDFSCluster; import org.apache.hadoop.hdfs.MiniDFSCluster.Configuration; import org.apache.hadoop.hdfs.server.namenode.HdfsServerConfiguration; import org.apache.hadoop.hdfs.server.namenode.HdfsServerConfiguration.Builder; import org.apache.hadoop.hdfs.server.namenode.HdfsServerConfiguration.Builder.BuilderType; import org.apache.hadoop.hdfs.server.namenode.HdfsServerConfiguration.Builder.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.BuilderType.Builder
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'         });          if (msgType = 'shortvideo') {             atts.push({             'type': 'video',             'id': 'shortvideo'
 var i in browsers)             {     var browser = browsers[i];     for (var j in browser)             {         if (browser[j] === browser[i])             {             return true;         }     }     return false; };  var getBrowser = function() {     var browsers = getBrowser().browsers;     for (var i in browsers)             {         var browser = browsers[i];         for (var j in browser)             {             if (browser[j] === browser[i])             {                 return browser;             }         }     }     return null; };  var getBrowser = function() {     var browsers = getBrowser().browsers;     for (var i in browsers)             {         var browser = browsers[i];         for (var j in browser)             {             if (browser[j] === browser[i])             {                 return browser;             }         }     }     return null; };  var getBrowser = function() {     var browsers = getBrowser().browsers;     for (var i in browsers)             {         var browser = browsers[i];         for (var j in browser)             {             if (browser[j] === browser[i])             {                 return browser;             }         }     }     return null; };  var getBrowser = function() {     var browsers = getBrowser().browsers;     for (var i in browsers)             {         var browser = browsers[i];         for (var j in browser)             {             if (browser[j] === browser[i])             {                 return browser;             }         }     }     return null; };  var getBrowser = function() {     var browsers = getBrowser().browsers;     for (var i in browsers)             {         var browser = browsers[i];         for (var j in browser)             {             if (browser[j] === browser[i])             {                 return browser;             }         }     }     return null; };  var getBrowser = function() {     var browsers = getBrowser
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ign
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); clipboardy.writeSync(emoji); 
  /**  * @license  * Copyright Google Inc. All Rights Reserved.  *  * Use of this source code is governed by an MIT-style license that can be  * found in the LICENSE file at https://angular.io/license  */  // THIS CODE IS GENERATED - DO NOT MODIFY // See angular/tools/gulp-tasks/cldr/extract.js  (function(global) {   global.ng = global.ng || {};   global.ng.common = global.ng.common || {};   global.ng.common.locales = global.ng.common.locales || {};   const u = undefined;   function plural(n) {     if (n === 1) return 1;     if (n === 2) return 2;     if (n === 3) return 3;     return 5;   }   global.ng.common.locales['es-ES'] = [     'es-ES',     [['a', 'p'], ['am', 'pm'], u],     u,     [       ['d', 'l', 'm', 'm', 'j', 'j', 'a', 's'],       ['d', 'l', 'm', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm', 'j', 'a', 's'],       ['d', 'l', 'm',
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.atomic.AtomicBoolean; import com.google.common.util.concurrent.atomic.AtomicInteger; import com.google.common.util.concurrent.atomic.AtomicReference; import com.google.common.util.
} else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; } else if (name == 'note') { return this.notes; }
 import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy, sortBy } from 'lodash'; import { last, groupBy,
(function() {     var dfu = {};     dfu.findCompatibleDFU = function() {         return true;     };     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatibleDFU();     dfu.findCompatible
 const newList = concatList(state.comments.list,action.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_RESPONSE:             const comments = action.comments;             const newList = concatList(comments,state.comments.list);             return newList;  case LIST_COMMENTS_
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
function(selector) {     if (classRe.test(selector)) {         return true;     } else {         return false;     } });  var SelectorSet = function(selector) {     this.selector = selector;     this.indexes = []; };  SelectorSet.prototype.addIndex = function(index) {     this.indexes.push(index);     return this; };  SelectorSet.prototype.removeIndex = function(index) {     this.indexes.splice(index, 1);     return this; };  SelectorSet.prototype.removeAllIndexes = function() {     this.indexes.forEach(function(index) {         this.removeIndex(index);     });     return this; };  SelectorSet.prototype.removeIndex = function(index) {     if (this.indexes.indexOf(index) !== -1) {         this.indexes.splice(index, 1);     }     return this; };  SelectorSet.prototype.removeAll = function() {     this.indexes.forEach(function(index) {         this.removeIndex(index);     });     return this; };  SelectorSet.prototype.add = function(selector) {     this.selector = selector;     return this; };  SelectorSet.prototype.remove = function(selector) {     this.selector = selector;     return this; };  SelectorSet.prototype.addAll = function(selector) {     this.selector = selector;     return this; };  SelectorSet.prototype.removeAll = function() {     this.selector = null;     return this; };  SelectorSet.prototype.remove = function(selector) {     this.selector = selector;     return this; };  SelectorSet.prototype.removeAll = function() {     this.selector = null;     return this; };  SelectorSet.prototype.remove = function(selector) {     this.selector = selector;     return this; };  SelectorSet.prototype.removeAll = function() {     this.selector = null;     return this; };  
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
}  vjs.VolumeMenuButton.prototype.updateEl = function(){   return vjs.Button.prototype.updateEl.call(this, 'div', {     className: 'vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-menu-button vjs-volume-
 /*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.internal.*; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.internal.util.typedef.internal.V; import org.apache.ignite.lang.*; import org.apache.ignite.spi.discovery.tcp.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.*; import org.apache.ignite.testframework.*; import org.apache.ignite.testframework.junits.common.*;  import java.util.*; import java.util.concurrent.*; import java.util.concurrent.atomic.*;  import static org.apache.ignite.internal.processors.cache.GridCacheAtomicityMode.*; import static org.apache.ignite
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
 this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._state), this._state); }   this._state = assign(assign({}, this._
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebParts

     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSamePrereqTwice();     this.testSame
   , message = require('../../index').utils['xep-0086']   , chat = require('../../index').utils['xep-0087']   , message = require('../../index').utils['xep-0088']   , message = require('../../index').utils['xep-0089']   , message = require('../../index').utils['xep-0100']   , message = require('../../index').utils['xep-0101']   , message = require('../../index').utils['xep-0102']   , message = require('../../index').utils['xep-0103']   , message = require('../../index').utils['xep-0104']   , message = require('../../index').utils['xep-0105']   , message = require('../../index').utils['xep-0106']   , message = require('../../index').utils['xep-0107']   , message = require('../../index').utils['xep-0108']   , message = require('../../index').utils['xep-0109']   , message = require('../../index').utils['xep-0110']   , message = require('../../index').utils['xep-0111']   , message = require('../../index').utils['xep-0112']   , message = require('../../index').utils['xep-0113']   , message = require('../../index').utils['xep-0114']   , message = require('../../index').utils['xep-0115']   , message = require('../../index').utils['xep-0116']   , message = require('../../index').utils['xep-0117']   , message = require('../../index').utils['xep-0118']   , message = require('../../index').utils['xep-0119']   , message = require('../../index').utils['xep-0120']   , message = require('../../index').utils['xep-0121']   , message = require('../../index').utils['xep-0122']   , message = require('../../index').utils['xep-0123']   , message = require('../../index').utils['xep-0124']   , message = require('../../index').utils['xep-0125']  
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
 (function($) {     $.fn.scrollToTop = function() {         return $(this).scrollTop();     };     $.fn.scrollToBottom = function() {         return $(this).scrollTop();     };     $.fn.scrollToLeft = function() {         return $(this).scrollLeft();     };     $.fn.scrollToRight = function() {         return $(this).scrollLeft();     };     $.fn.scrollTop = function() {         return $(this).scrollTop();     };     $.fn.scrollLeft = function() {         return $(this).scrollLeft();     };     $.fn.scrollRight = function() {         return $(this).scrollRight();     };     $.fn.scrollTop = function() {         return $(this).scrollTop();     };     $.fn.scrollLeft = function() {         return $(this).scrollLeft();     };     $.fn.scrollBottom = function() {         return $(this).scrollBottom();     };     $.fn.scrollTop = function() {         return $(this).scrollTop();     };     $.fn.scrollLeft = function() {         return $(this).scrollLeft();     };     $.fn.scrollRight = function() {         return $(this).scrollRight();     };     $.fn.scrollTop = function() {         return $(this).scrollTop();     };     $.fn.scrollLeft = function() {         return $(this).scrollLeft();     };     $.fn.scrollBottom = function() {         return $(this).scrollBottom();     };     $.fn.scrollTop = function() {         return $(this).scrollTop();     };     $.fn.scrollLeft = function() {         return $(this).scrollLeft();     };     $.fn.scrollRight = function() {         return $(this).scrollRight();     };     $.fn.scrollTop = function() {         return $(this).scrollTop();     }; 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
     _doc.published = true;     function update(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publish = function publish(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publishAll = function publishAll(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publishAll = function publishAll(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publishAll = function publishAll(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publishAll = function publishAll(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publishAll = function publishAll(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publishAll = function publishAll(callback) {         if (_doc.published) {             _doc.published = false;             callback();         } else {             _doc.published = true;             callback();         }     }      _doc.publishAll
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.Collections; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\HttpKernel;  use Symfony\Component\HttpFoundation\Request; use Symfony\Component\HttpFoundation\Response; use Symfony\Component\HttpKernel\Exception\HttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\ForbiddenHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\InternalServerErrorHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\InternalServerErrorHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component\HttpKernel\Exception\NotFoundHttpException; use Symfony\Component
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_text';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.
  var _create_user_identity = function( user_identity ) {     var user = {         username: user_identity.username,         password: user_identity.password,         provider: user_identity.provider,         email: user_identity.email     };      user.provider = user_identity.provider;     user.provider_id = user_identity.provider_id;     user.provider_secret = user_identity.provider_secret;     user.provider_token = user_identity.provider_token;     user.provider_token_secret = user_identity.provider_token_secret;     user.provider_token_type = user_identity.provider_token_type;     user.provider_token_id = user_identity.provider_token_id;     user.provider_token_secret = user_identity.provider_token_secret;     user.provider_token_type = user_identity.provider_token_type;     user.provider_token_id = user_identity.provider_token_id;     user.provider_token_secret = user_identity.provider_token_secret;     user.provider_token_type = user_identity.provider_token_type;     user.provider_token_id = user_identity.provider_token_id;     user.provider_token_secret = user_identity.provider_token_secret;     user.provider_token_type = user_identity.provider_token_type;     user.provider_token_id = user_identity.provider_token_id;     user.provider_token_secret = user_identity.provider_token_secret;     user.provider_token_type = user_identity.provider_token_type;     user.provider_token_id = user_identity.provider_token_id;     user.provider_token_secret = user_identity.provider_token_secret;     user.provider_token_type = user_identity.provider_token_type;     user.provider_token_id = user_identity.provider_token_id;     user.provider_token_secret = user_identity.provider_token_secret;     user.
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_EXTENSIONS_API_EXTENSION_API_HANDLER_H_ #define CHROME_BROWSER_EXTENSIONS_API_EXTENSION_API_HANDLER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/time/time.h" #include "chrome/browser/extensions/api/extension_api_handler.h" #include "chrome/browser/extensions/api/extension_api_handler_factory.h" #include "chrome/browser/extensions/api/extension_service.h" #include "chrome/browser/extensions/api/extension_service_factory.h" #include "chrome/browser/extensions/api/extension_service_observer.h" #include "chrome/browser/extensions/api/extension_service_observer_factory.h" #include "chrome/browser/extensions/api/extension_ui_handler.h" #include "chrome/browser/extensions/api/extension_ui_handler_factory.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_view_host_observer.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "net/url_request/url_request_status.h" #include "net/url_
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.CacheAtomicityMode; import org.apache.ignite.internal.processors.cache.CacheMode; import org.apache.ignite.internal.processors.cache.CacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.j
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
]     }   };    grunt.loadNpmTasks('grunt-contrib-jshint');   grunt.loadNpmTasks('grunt-contrib-concat');   grunt.loadNpmTasks('grunt-contrib-uglify');   grunt.loadNpmTasks('grunt-contrib-cssmin');   grunt.loadNpmTasks('grunt-contrib-copy');   grunt.loadNpmTasks('grunt-contrib-watch');   grunt.loadNpmTasks('grunt-contrib-clean');    grunt.registerTask('default', ['jshint', 'concat', 'uglify', 'cssmin', 'copy', 'watch']); }; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Shapes.DataMember; using System.Windows.Shapes.ShapesCommon; using System.Windows.Shell; using System.Windows.Shell.Interop; using Microsoft.Phone.Controls; using Microsoft.Phone.Shell.Interop; using Microsoft.Phone.Shell.Primitives; using Microsoft.Phone.Shell.Data; using Microsoft.Phone.Shell.Documents; using Microsoft.Phone.Shell.Input; using Microsoft.Phone.Shell.Media; using Microsoft.Phone.Shell.Navigation; using Microsoft.Phone.Shell.Shapes;  // The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238  namespace PhoneApp {     /// <summary>     /// An empty page that can be used on its own or navigated to within a Frame.     /// </summary>     public partial class MainPage : PhoneApplicationPage     {         public MainPage()         {             this.InitializeComponent();             this.Suspending += OnSuspending;         }          /// <summary>         /// Invoked when the application is launched normally by the end user.  Other entry points         /// will be used such as when the application is launched to open a specific file.         /// </summary>         /// <param name="e">Details about the launch request and process.</param>         protected override void OnLaunched(LaunchActivatedEventArgs e)         {  #if DEBUG             if (System.Diagnostics.Debugger.IsAttached)             {                 this.DebugSettings.EnableFrameRateCounter = true;             } #endif 
 import React from 'react' import PropTypes from 'prop-types' import { connect } from 'react-redux' import { Link } from 'react-router' import { withRouter } from 'react-router-dom' import { withStyles } from '@material-ui/core/styles' import { withTheme } from '@material-ui/core/styles/theme' import styles from './App.scss'  import App from './App'  class App extends React.Component {   static propTypes = {     history: PropTypes.object.isRequired   }    static contextTypes = {     router: PropTypes.object.isRequired   }    render() {     const { history } = this.context     return (       <div className={styles.root}>         <div className={styles.container}>           <Logo history={history} />         </div>       </div>     )   } }  App.propTypes = {   history: PropTypes.object.isRequired }  const mapStateToProps = (state) => {   return {     history: state.history   } }  const mapDispatchToProps = (dispatch) => {   return {     dispatch: dispatch   } }  export default connect(   mapStateToProps,   mapDispatchToProps )(App) 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
    return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown OS";       break;  default:       return "Unknown
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 const currentWSMathRecognizer = this;  const modelParam = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model = modelParam;  const model =
return value + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' + arg + ' ' +
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.plugins.document;  import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Multimaps; import com.google.common.collect.Multimaps.Builder; import com.google.common.collect.Multimaps; import com.google.common.collect.Sets; import org.apache.jackrabbit.oak.api.Document; import org.apache.jackrabbit.oak.api.PropertyState; import org.apache.jackrabbit.oak.api.PropertyType; import org.apache.jackrabbit.oak.spi.state.NodeBuilder; import org.apache.jackrabbit.oak.spi.state.NodeState; import org.apache.jack
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to get the next set of results.</param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to get the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "NextLink"); 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.atomic.AtomicBoolean; import com.google.common.util.concurrent.atomic.AtomicInteger
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the TargetWithNoDropResult class.  * Initializes a new instance of the TargetWithNoDropResult class.  * @member {string} [name] The name of the target.  * @member {string} [description] The description of the target.  * @member {string} [type] The type of the target.  * @member {string} [location] The location of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationName] The location name of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationName] The location name of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationName] The location name of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType] The location type of the target.  * @member {string} [locationType
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\Extension\Core\Type\SubmitType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\CheckboxType; use Symfony\Component\Form\Extension\Core\Type\HiddenType; use Symfony\Component\Form\Extension\Core\Type\DateType; use Symfony\Component\Form\Extension\Core\Type\DateTimeType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\DateRangeType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType; use Symfony\Component\Form\Extension\Core\Type\EmailType;
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for DeleteRouteTable operation.     /// </summary>     public partial class DeleteRouteTableHeaders     {         /// <summary>         /// Initializes a new instance of the DeleteRouteTableHeaders class.         /// </summary>         public DeleteRouteTableHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the DeleteRouteTableHeaders class.         /// </summary>         /// <param name="location">The location of the route table.</param>         public DeleteRouteTableHeaders(string location)         {             Location = location;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the location of the route table.         /// </summary>         [JsonProperty(PropertyName = "location")]         public string Location { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (Location == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "Location");             }         }     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("JsonApiAdapter")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("JsonApiAdapter")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: Assembly
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
  return assertionMessage; }  assertEventListNotEmpty = (list, passedAssertionMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } }  assertEventListNotEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } }  assertEventListNotEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } }  assertEventListNotEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } }  assertEventListNotEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } }  assertEventListNotEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } }  assertEventListNotEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } }  assertEventListNotEmpty = (list, passedMessage, defaultMessage) => {   const assertionMessage = createAssertionMessage(passedAssertionMessage, defaultMessage);   if (!Array.isArray(list) || list.length === 0) {     return assertionMessage;   } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
  len = seqs.length;   for (var i = 0; i < len; i++) {     for (var j = 0; j < len; j++) {       seqs[i][j] = seqs[i][j] + 1;     }   } }  while (1) {   var len = seqs.length;   for (var i = 0; i < len; i++) {     for (var j = 0; j < len; j++) {       seqs[i][j] = seqs[i][j] + 1;     }   } }  while (1) {   var len = seqs.length;   for (var i = 0; i < len; i++) {     for (var j = 0; j < len; j++) {       seqs[i][j] = seqs[i][j] + 1;     }   } }  while (1) {   var len = seqs.length;   for (var i = 0; i < len; i++) {     for (var j = 0; j < len; j++) {       seqs[i][j] = seqs[i][j] + 1;     }   } }  while (1) {   var len = seqs.length;   for (var i = 0; i < len; i++) {     for (var j = 0; j < len; j++) {       seqs[i][j] = seqs[i][j] + 1;     }   } }  while (1) {   var len = seqs.length;   for (var i = 0; i < len; i++) {     for (var j = 0; j < len; j++) {       seqs[i][j] = seqs[i][j] + 1;     }   } }  while (1) {   var len = seqs.length;   for (var i = 0; i < len; i++) {     for (var j = 0; j < len; j++) {       seqs[i][j] = seqs[i][j] + 1;     }   } }  
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_manager_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include
function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";document.getElementsByTagName("head")[0].appendChild(a)},function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";document.getElementsByTagName("head")[0].appendChild(a)},function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";document.getElementsByTagName("head")[0].appendChild(a)},function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";document.getElementsByTagName("head")[0].appendChild(a)},function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";document.getElementsByTagName("head")[0].appendChild(a)},function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js";document.getElementsByTagName("head")[0].appendChild(a)},function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', [                 'label' => 'sylius.form.product_name',                 'required' => false,             ])             ->add('description', 'text', [                 'label' => 'sylius.form.product_description',                 'required' => false,             ])         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults([             'data_class' => 'Sylius\Bundle\CoreBundle\Form\Type\ProductType'         ]);     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.hadoop.hbase.regionserver;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertTrue;  import java.io.IOException; import java.util.ArrayList; import java.util.List;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.ServerName; import org.apache.hadoop.hbase.testclassification.SmallTests; import org.apache.hadoop.hbase.testclassification.MediumTests; import org.apache.hadoop.hbase.util.Bytes; import org.junit.After; import org.junit.AfterClass; import org.junit.Before; import org.junit.BeforeClass; import org.junit.Test; import org.junit.experimental.categories.Category; import org.junit.runner.RunWith; import org.junit.runners.JUnit4;  /** 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
 } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
 var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[ka] var ia = aindex[
 /*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.regionserver;  import java.io.IOException;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseConfiguration; import org.apache.hadoop.hbase.HRegionInfo; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.client.Connection; import org.apache.hadoop.hbase.client.ConnectionFactory; import org.apache.hadoop.hbase.client.ConnectionManager; import org.apache.hadoop.hbase.client.ConnectionPool; import org.apache.hadoop.hbase.client.ConnectionPoolConfig; import org.apache.hadoop.hbase.client.ConnectionFactoryBuilder; import org.apache.hadoop.hbase.client.ConnectionPoolFactory; import org.apache.hadoop.hbase.client.ConnectionPoolFactoryBuilder; import org.apache.hadoop.hbase.client.ConnectionPoolOptions; import org.apache.hadoop.hbase.client.ConnectionFactoryFactory; import org.apache.h
if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) {     return; }  if (!changeDelegate) { 
Base = Base.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var Proto = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var Base = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var DateTime = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var Proto = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var Base = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var DateTime = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var Proto = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var Base = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var DateTime = Proto.extend({   initialize: function(options) {     this.options = options || {};   },   options: function() {     return this.options;   } }); var Proto = Proto.extend({   initialize: function(options) {     this.options =
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }
', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:', 'memcached:',
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Test")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("Microsoft")] [assembly: AssemblyProduct("Test")] [assembly: AssemblyCopyright("Copyright © Microsoft 2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9-1e8c-4e8d-b9e5-e8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
   test.done() })  test.async('./b', function(b) {   test.done() })  test.async('./c', function(c) {   test.done() })  test.async('./d', function(d) {   test.done() })  test.async('./e', function(e) {   test.done() })  test.async('./f', function(f) {   test.done() })  test.async('./g', function(g) {   test.done() })  test.async('./h', function(h) {   test.done() })  test.async('./i', function(i) {   test.done() })  test.async('./j', function(j) {   test.done() })  test.async('./k', function(k) {   test.done() })  test.async('./l', function(l) {   test.done() })  test.async('./m', function(m) {   test.done() })  test.async('./n', function(n) {   test.done() })  test.async('./o', function(o) {   test.done() })  test.async('./p', function(p) {   test.done() })  test.async('./q', function(q) {   test.done() })  test.async('./r', function(r) {   test.done() })  test.async('./s', function(s) {   test.done() })  test.async('./t', function(t) {   test.done() })  test.async('./u', function(u) {   test.done() })  test.async('./v', function(v) {   test.done() })  test.async('./w', function(w) {   test.done
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.core.algebra.functions.FunctionIdentifier; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util
     this.situation.loops = false;     this.situation.loops = true;     this.situation.loops = false;     this.situation.loops = true;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.loops = false;     this.situation.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName

<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 return float.test(str); }  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.annotations.VisibleForTesting; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
 import { connect } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bindActionCreators } from 'react-redux' import { bind
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/world.html#" + hoodie.account.username + '/' + worldName     }      if (err) return submit.show()       return submit.hide()       return console.log('saved!', worldName, err)       window.location.href = "/
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Documents; using System.Windows.Media.Imaging; using System.Windows.Shapes.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.ShapesCommon; using System.Windows.Shell.Interop; using System.Windows.Threading; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes; using System.Windows.Shapes.Design; using System.Windows.Shapes.Designer; using System.Windows.Shapes.DataAnnotations; using System.Windows.Shapes.ShapesCommon; using System.Windows.Shapes.GraphicalControls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes; using System.Windows.Shapes.ShapesCommon; using System.Windows.Shapes.GraphicalControls.Primitives; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes; using System.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.configuration.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
 if (option.type === 'PUT') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'DELETE') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'PATCH') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'HEAD') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'OPTIONS') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'TRACE') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'OPTIONS') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'HEAD') {     if (FormData && sendData instanceof FormData) {} else {       request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8')       sendData = [] } if (option.type === 'OPTIONS') {     if (FormData && sendData instanceof FormData)
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common
 console.log('got session');                             if (!session) return;  console.log('got user');                             if (!user) return;  console.log('got email');                             if (!email) return;  console.log('got password');                             if (!password) return;  console.log('got username');                             if (!username) return;  console.log('got password');                             if (!password) return;  console.log('got email');                             if (!email) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return;  console.log('got password');                             if (!password) return

// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view_delegate.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view_observer.h" #include "chrome/browser/ui/views/tabs/tab_strip_model.h" #include "chrome/browser/ui/views/tabs/tab_strip_model_observer.h" #include "chrome/browser/ui/views/tabs/tab_strip_view.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_data_source_observer.h" #include "content/public/browser/web_ui_message_filter.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web_ui_view_delegate.h" #include "content/public/browser/web_ui_view_host.h" #include "content/public/browser/web_ui_

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.regionserver;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue;  import java.io.IOException; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.List;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.HConstants; import org.apache.hadoop.hbase.HRegionInfo; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.testclassification.MediumTests; import org.apache.hadoop.hbase.testclassification.SmallTests; import org.apache.hadoop.hbase.util.Bytes; import org.junit.After; import org.junit.Before; import org.junit.Test; import org.junit.experimental.categories.Category;
 console.log('>>>', POINTS); console.log('>>>', POINTS.length); console.log('>>>', POINTS[0]); console.log('>>>', POINTS[1]); console.log('>>>', POINTS[2]); console.log('>>>', POINTS[3]); console.log('>>>', POINTS[4]); console.log('>>>', POINTS[5]); console.log('>>>', POINTS[6]); console.log('>>>', POINTS[7]); console.log('>>>', POINTS[8]); console.log('>>>', POINTS[9]); console.log('>>>', POINTS[10]); console.log('>>>', POINTS[11]); console.log('>>>', POINTS[12]); console.log('>>>', POINTS[13]); console.log('>>>', POINTS[14]); console.log('>>>', POINTS[15]); console.log('>>>', POINTS[16]); console.log('>>>', POINTS[17]); console.log('>>>', POINTS[18]); console.log('>>>', POINTS[19]); console.log('>>>', POINTS[20]); console.log('>>>', POINTS[21]); console.log('>>>', POINTS[22]); console.log('>>>', POINTS[23]); console.log('>>>', POINTS[24]); console.log('>>>', POINTS[25]); console.log('>>>', POINTS[26]); console.log('>>>', POINTS[27]); console.log('>>>', POINTS[28]); console.log('>>>', POINTS[29]); console.log('>>>', POINTS[30]); console.log('>>>', POINTS[31]); console.log('>>>', POINTS[32]); console.log('>>>', POINTS[33]); console.log('>>>', PO
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.hamcrest.Matchers.is; import static org.hamcrest.Matchers.notNullValue; import static org.hamcrest.Matchers.nullValue; import static org.junit.Assert.assertThat; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Multimaps; import com.google.common.collect.Sets; import com.google.common
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct();         $this->_text = $text;     }  } 
 import {     T as False,     T as False,     T as False,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T as True,     T
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_SCREEN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_SCREEN_MANAGER_H_  #include "base/basictypes.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "chrome/browser/chromeos/login/screen_manager_delegate.h" #include "chrome/browser/chromeos/login/screen_manager_observer.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/browser_thread.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_reg
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
var divs = document.getElementsByTagName('div');             for (i in divs){             var div = divs[i];             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var div = div;             var
  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema = schema || {};   var schemaTable = {};    schema.schema = schema;   schema.schemaTable = schemaTable;    return schemaTable; }  function jsonSchemaTable(schema) {   var schema =
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\Config\Definition\Builder\TreeBuilder; use Symfony\Component\Config\Definition\ConfigurationInterface;  /**  * This is the class that validates and merges configuration from your app/config files  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}  */ class Configuration implements ConfigurationInterface {     /**      * {@inheritdoc}      */     public function getConfigTreeBuilder()     {         $treeBuilder = new TreeBuilder();         $rootNode = $treeBuilder->root('symfony');          // Here you should define the parameters that are allowed to         // configure your bundle. See the documentation linked above for         // more information on that topic.          return $treeBuilder;     } } 
 import React, { Component } from 'react'; import PropTypes from 'prop-types'; import { connect } from 'react-redux'; import { Link } from 'react-router-dom'; import { Provider } from 'react-redux'; import { ProviderForm } from 'react-redux-form'; import { ProviderFormControl } from 'react-redux-form-control'; import { ProviderFormError } from 'react-redux-form-error'; import { ProviderStore } from 'react-redux-store'; import { ProviderStoreForm } from 'react-redux-store-form'; import { ProviderState } from 'react-redux-state'; import { ProviderStateForm } from 'react-redux-state-form'; import { ProviderStateFormControl } from 'react-redux-state-form-control'; import { ProviderStateFormError } from 'react-redux-state-form-error'; import { ProviderStore } from 'react-redux-store'; import { ProviderStoreForm } from 'react-redux-store-form'; import { ProviderStoreFormControl } from 'react-redux-store-form'; import { ProviderStoreState } from 'react-redux-state-form'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreFormError } from 'react-redux-state-form-error'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreStateFormControl } from 'react-redux-state-form-control'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreStateFormControl } from 'react-redux-state-form-control'; import { ProviderStoreStateForm } from 'react-redux-state-form'; import { ProviderStoreStateForm
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
    } }  module.exports = {   parseFeature: function(feature) {     if (!feature) {       return null;     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }      if (typeof feature === 'function') {       feature = feature.apply(this, arguments);     }      if (typeof feature === 'string') {       feature = feature.trim();     }  
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( start_date ) {             html += '<div
); var path = require('path'); var util = require('util');  module.exports = function(options) {   options = options || {};    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'string') {     options = options || {};   }    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'string') {     options
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
     rowIds.each(function() {         var id = $(this).data('id');         newIdSequence.push($(this).data('id'));     });     newIdSequence.sort(function(a, b) {         if (a.id < b.id) return -1;         if (a.id > b.id) return 1;         return 0;     });     rowIds.each(function() {         var id = $(this).data('id');         newIdSequence.push($(this).data('id'));     });     newIdSequence.sort(function(a, b) {         if (a.id < b.id) return -1;         if (a.id > b.id) return 1;         return 0;     });     rowIds.each(function() {         var id = $(this).data('id');         newIdSequence.push($(this).data('id'));     });     newIdSequence.sort(function(a, b) {         if (a.id < b.id) return -1;         if (a.id > b.id) return 1;         return 0;     });     rowIds.each(function() {         var id = $(this).data('id');         newIdSequence.push($(this).data('id'));     });     newIdSequence.sort(function(a, b) {         if (a.id < b.id) return -1;         if (a.id > b.id) return 1;         return 0;     });     rowIds.each(function() {         var id = $(this).data('id');         newIdSequence.push($(this).data('id'));     });     newIdSequence.sort(function(a, b) {         if (a.id < b.id) return -1;         if (a.id > b.id) return 1;         return 0;     });     rowIds.each(function() {         var id = $(this).data('id');         newIdSequence.push($(this).data('id'));     });     newIdSequence.sort
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
import PropTypes from 'prop-types' import { connect } from 'react-redux' import { Link } from 'react-router-dom' import { withRouter } from 'react-router-dom' import { withRouterHistory } from 'react-router-history' import { withRouterRouter } from 'react-router-router' import { withRouterRouterHistory } from 'react-router-router-history' import { withRouterState } from 'react-router-state' import { withRouterStateHistory } from 'react-router-state-history' import { withRouterHistoryHistory } from 'react-router-history-history' import { withRouterRouterHistoryHistory } from 'react-router-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory } from 'react-router-state-history-history' import { withRouterStateHistoryHistory }
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.query.Query; import org.apache.druid.query
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.flink.streaming.connectors.kafka;  import org.apache.flink.api.common.typeutils.TypeSerializer; import org.apache.flink.api.common.typeutils.TypeSerializerFactory; import org.apache.flink.api.common.typeutils.TypeSerializerProvider; import org.apache.flink.api.common.typeutils.TypeSerializerProviderFactory; import org.apache.flink.api.common.typeutils.TypeSerializerRegistry; import org.apache.flink.api.common.typeutils.TypeSerializerRegistryBuilder; import org.apache.flink.api.common.typeutils.TypeSerializerRegistryProvider; import org.apache.flink.api.common.typeutils.TypeSerializerRegistryProviderFactory; import org.apache.flink.api.common.typeutils.TypeSerializerRegistryService; import org.apache.flink.api.common.typeutils.TypeSerializerRegistryServiceFactory; import org.apache.flink.api.common.typeutils.TypeSerializerService; import org.apache.flink.api.common.typeutils.TypeSerializerServiceFactory; import org.apache.flink.api.common.typeutils.TypeSerializerServiceFactoryBuilder; import org.apache.flink.api.common.typeutils.TypeSerializerService
case 21:                         customFlags = [];                         _context.next = 22;                         return prompt([{ case 22:                         customFlags = [];                         _context.next = 23;                         return prompt([{ case 23:                         customFlags = [];                         _context.next = 24;                         return prompt([{ case 24:                         customFlags = [];                         _context.next = 25;                         return prompt([{ case 25:                         customFlags = [];                         _context.next = 26;                         return prompt([{ case 26:                         customFlags = [];                         _context.next = 27;                         return prompt([{ case 27:                         customFlags = [];                         _context.next = 28;                         return prompt([{ case 28:                         customFlags = [];                         _context.next = 29;                         return prompt([{ case 29:                         customFlags = [];                         _context.next = 30;                         return prompt([{ case 30:                         customFlags = [];                         _context.next = 31;                         return prompt([{ case 31:                         customFlags = [];                         _context.next = 32;                         return prompt([{ case 32:                         customFlags = [];                         _context.next = 33;                         return prompt([{ case 33:                         customFlags = [];                         _context.next = 34;                         return prompt([{ case 34:                         customFlags = [];                         _context.next = 35;                         return prompt([{ case 35:                         customFlags = [];                         _context.next = 36;                         return prompt([{ case 36:                         customFlags = [];                         _context.next = 37;                         return prompt([{ case 37:                         customFlags = [];                         _context.next = 38;                         return prompt([{ case 38:                         customFlags = [];                         _context.next = 39;                         return prompt([{ case 39:                         customFlags = [];                         _context.next = 40;                         return prompt([{ case 40:                         customFlags = [];                         _context.next = 41;                         return prompt([{ case 41:                         customFlags = [];                         _context.next = 42;                         return prompt([{ case 42:                         customFlags = [];                         _context.next = 43;                         return prompt([{ case 43:                         custom
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var i, n, src, type; case 'audio':     var i, n, src, type; case 'video':     var
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid.java.util.common.util.concurrent.Thread
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.affinity.AffinityTopologyVersion; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ign
 if (typeof window !== 'undefined') {     window.addEventListener('load', function() {         if (typeof document !== 'undefined') {             document.addEventListener('DOMContentLoaded', function() {                 if (typeof document !== 'undefined') {                     document.addEventListener('DOMContentLoaded', function() {                         if (typeof document !== 'undefined') {                             document.removeEventListener('DOMContentLoaded', function() {                                 if (typeof document !== 'undefined') {                                     document.removeEventListener('DOMContentLoaded', function() {                                         if (typeof document !== 'undefined') {                                             document.removeEventListener('DOMContentLoaded', function() {                                                 if (typeof document !== 'undefined') {                                                     document.removeEventListener('DOMContentLoaded', function() {                                                         if (typeof document !== 'undefined') {                                                             document.removeEventListener('DOMContentLoaded', function() {                                                                 if (typeof document !== 'undefined') {                                                                 }                                                             }                                                         }                                                     });                                                 }                                             });                                         }                                     });                                 }                             });                         }                     });                 }             });         }     }); }  if (typeof document !== 'undefined') {     document.addEventListener('DOMContentLoaded', function() {         if (typeof document !== 'undefined') {             document.addEventListener('DOMContentLoaded', function() {                 if (typeof document !== 'undefined') {                     document.removeEventListener('DOMContentLoaded', function() {                         if (typeof document !== 'undefined') {                             document.removeEventListener('DOMContentLoaded', function() {                                 if (typeof document !== 'undefined') {                                     document.removeEventListener('DOMContentLoaded', function() {                                         if (typeof document !== 'undefined') {                                             document.removeEventListener('DOMContentLoaded', function() {                                                 if (typeof document !== 'undefined') {                                                     document.removeEventListener('DOMContentLoaded', function() {                                                         if (typeof document !== 'undefined') {                                                             document.removeEventListener('DOMContentLoaded', function() {                                                                 if (typeof document !== 'undefined') {                                                             document.removeEventListener('DOMContentLoaded', function() {                                                                
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component
     if (buttonType === 'toggle') {       this.module.setConfiguration('toggle', !this.module.getConfiguration('toggle'));     } else {       this.module.setConfiguration('toggle', !this.module.getConfiguration('toggle'));     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', true);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', true);     } else {       this.module.setConfiguration('toggle', false);     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', false);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', true);     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', false);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', true);     }   }, function (error) {     if (error) {       this.module.setConfiguration('toggle', false);     } else {       this.module.setConfiguration('toggle', false);     }   });    this.module.getConfiguration('toggle').then(function (value) {     if (value) {       this.module.setConfiguration('toggle', true);     } else {       this.module.setConfiguration('toggle', false);     }
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
   constructor (...options) {     super(...options);     this.type = 'user';   } }  module.exports = User; 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_delegate.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_getter.h" #include "content/public/browser/web_contents_user_data_setter.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/web_contents_user_data_setter_observer.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/web_contents_user_data_setter_observer.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/web_contents_user_data_getter_observer.h" #include "content/public/browser/
}  module.exports = function(idProperty, getEngine) {   if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof getEngine === 'function') {     getEngine = getEngine;   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty = idProperty.toLowerCase();   }    if (typeof idProperty === 'string') {     idProperty
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.SumOfTwoNumbers")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.SumOfTwoNumbers")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
     }      /**      * @param {string} name      * @param {string} value      */     set(name, value) {         this[name] = value;     }      /**      * @param {string} name      * @param {string} value      */     get(name) {         return this[name];     }      /**      * @param {string} name      * @param {string} value      */     set(name, value) {         this[name] = value;     }      /**      * @param {string} name      * @param {string} value      */     get(name) {         return this[name];     }      /**      * @param {string} name      * @param {string} value      */     set(name, value) {         this[name] = value;     }      /**      * @param {string} name      * @param {string} value      */     get(name) {         return this[name];     }      /**      * @param {string} name      * @param {string} value      */     set(name, value) {         this[name] = value;     }      /**      * @param {string} name      * @param {string} value      */     get(name) {         return this[name];     }      /**      * @param {string} name      * @param {string} value      */     set(name, value) {         this[name] = value;     }      /**      * @param {string} name      * @param {string} value      */     get(name) {         return this[name];     }      /**      * @param {string} name      * @param {string} value      */     get(name) {         return this[name];     }      /**      * @param {string} name      * @param {string} value      */
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.
;         };         $http.post('/bookmarks/delete', params).success(function(data) {         toastr.success('删除成功！', "警告");         }).error(function(data) {         toastr.error('删除失败！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.error('删除失败！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成功！', "警告");         }).always(function() {         toastr.success('删除成
     };      /**      * @param {Array} arr      * @return {Array}      */     function first(arr) {         return arr[0];     };      /**      * @param {Array} arr      * @return {Array}      */     function last2(arr) {         return arr[arr.length - 1];     };      /**      * @param {Array} arr      * @return {Array}      */     function last3(arr) {         return arr[arr.length - 2];     };      /**      * @param {Array} arr      * @return {Array}      */     function last4(arr) {         return arr[arr.length - 3];     };      /**      * @param {Array} arr      * @return {Array}      */     function last5(arr) {         return arr[arr.length - 4];     };      /**      * @param {Array} arr      * @return {Array}      */     function last6(arr) {         return arr[arr.length - 5];     };      /**      * @param {Array} arr      * @return {Array}      */     function last7(arr) {         return arr[arr.length - 6];     };      /**      * @param {Array} arr      * @return {Array}      */     function last8(arr) {         return arr[arr.length - 7];     };      /**      * @param {Array} arr      * @return {Array}      */     function last9(arr) {         return arr[arr.length - 8];     };      /**      * @param {Array} arr      * @return {Array}      */     function last10(arr) {         return arr[arr.length - 9];     };      /**      * @param {Array} arr      * @return {Array}      */     function last11(arr
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
    }      this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this.geometry.faces.push(new THREE.Face3(...indices))     this
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the ResourceManagerClient class.  * @constructor  * A resource manager client for Azure Resource Manager.  *  * @member {string} [baseUri] The base URI of the service.  *  * @member {object} [options] Options for the service.  *  * @member {string} [options.baseUri] The base URI of the service.  *  * @member {object} [options.options] Options for the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options.apiVersion] The API version of the service.  *  * @member {string} [options
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'required' => false,             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getDefaultOptions()     {         return array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints as Assert; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'required' => false,             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_text';     }      /**      * {@inheritdoc}      */     public function getParent()     {         return 'form';     }      /**      * {@inheritdoc}     
 === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'number' ? null : typeof proto[name] === 'string' ? null : typeof proto[name] === 'number' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null : typeof proto[name] === 'undefined' ? null :
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.ArgumentMatchers.any; import static org.mockito.ArgumentMatchers.anyString; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.con
     return {         name: 'multiplex',         init: function() {             var self = this;             this.model = model;             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this));             this.model.on('change', this.onChange.bind(this)); 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')             ->add('submit', 'submit')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'text';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }      /**      * Retrieves a DOMElement which corresponds to this element and all      * child properties.  This is used to build an entry back
     "tagRe": tagRe,      "init": function() {         var self = this;          this.selector = document.createElement("div");         this.selector.className = "selector";         this.selector.style.position = "absolute";         this.selector.style.top = "0px";         this.selector.style.left = "0px";         this.selector.style.width = "100%";         this.selector.style.height = "100%";         this.selector.style.border = "1px solid #ccc";         this.selector.style.borderRadius = "5px";         this.selector.style.borderWidth = "1px";         this.selector.style.borderColor = "#ccc";         this.selector.style.backgroundColor = "#ccc";         this.selector.style.borderRadius = "5px";         this.selector.style.borderWidth = "1px";         this.selector.style.borderColor = "#ccc";         this.selector.style.backgroundColor = "#ccc";         this.selector.style.borderRadius = "5px";         this.selector.style.borderWidth = "1px";         this.selector.style.borderColor = "#ccc";         this.selector.style.backgroundColor = "#ccc";         this.selector.style.borderRadius = "5px";         this.selector.style.borderWidth = "1px";         this.selector.style.borderColor = "#ccc";         this.selector.style.backgroundColor = "#ccc";         this.selector.style.borderRadius = "5px";         this.selector.style.borderWidth = "1px";         this.selector.style.borderColor = "#ccc";         this.selector.style.backgroundColor = "#ccc";         this.selector.style.borderRadius = "5px";         this.selector.style.borderWidth = "1px";         this.selector.style.borderColor = "#ccc";         this.selector.style.backgroundColor = "#ccc";         this.selector.style.borderRadius = "5px
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.mockito.ArgumentMatchers.any; import static org.mockito.ArgumentMatchers.eq; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.ignite.testframework.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 		if (this._tiles && this._tiles.length > 0) { 			for (var i = 0; i < this._tiles.length; i++) { 				var tile = this._tiles[i]; 				if (tile) { 					for (var j = 0; j < this._tiles.length; j++) { 						var tile = this._tiles[j]; 						if (tile) { 							for (var k = 0; k < this._tiles.length; k++) { 								var tile = this._tiles[k]; 								if (tile) { 									for (var l = 0; l < this._tiles.length; l++) { 										var tile = this._tiles[l]; 										if (tile) { 											for (var m = 0; m < this._tiles.length; m++) { 												var tile = this._tiles[m]; 												if (tile) { 													for (var n = 0; n < this._tiles.length; n++) { 													var tile = this._tiles[n]; 													if (tile) { 														for (var p = 0; p < this._tiles.length; p++) { 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this._tiles[p]; 															var tile = this
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.SumOfTwoNumbers")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.SumOfTwoNumbers")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to the next page of results.</param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to the next page of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBe
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Pattern; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('subject', 'text', array(                 'label' => 'subject',                 'required' => false,             ))             ->add('message', 'textarea', array(                 'label' => 'message',                 'required' => false,             ))         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'form_email';     }      /**      * {@inheritdoc}      */     public function
 		$.ajax({ 			url: (false ? 'Home/?handler=Filter' : '/Home/Filter'), 			type: 'GET', 			data: data, 			success: function(data) { 				if (data) { 					$.each(data, function(key, value) { 						$(this).attr('href', value); 					}); 				} 			}, 			error: function(xhr, textStatus, errorThrown) { 				if (data) { 					$.each(data, function(key, value) { 						$(this).attr('href', value); 					}); 				} 			}, 			complete: function() { 				if (data) { 					$.each(data, function(key, value) { 						$(this).attr('href', value); 					}); 				} 			} 		});  		$.ajax({ 			url: (false ? 'Home/?handler=Filter' : '/Home/Filter'), 			type: 'GET', 			data: data, 			success: function(data) { 				if (data) { 					$.each(data, function(key, value) { 						$(this).attr('href', value); 					}); 				} 			}, 			error: function(xhr, textStatus, errorThrown) { 				if (data) { 					$.each(data, function(key, value) { 						$(this).attr('href', value); 					}); 				} 			}, 			complete: function() { 				if (data) { 					$.each(data, function(key, value) { 						$(this).attr('href', value); 					}); 				} 			} 		});  		$.ajax({ 			url: (false ? 'Home/?handler=Filter' : '/Home/Filter'), 			type: 'GET', 			data: data, 			success: function(data
.map.DomIcon.prototype._getEvents = function() { var _this = this; var icon = _this._getIcon(); var events = _this._getEvents(); if(!icon) return []; if(!events) return []; return events.filter(function(event) { return _this._getDomEvent(event); }); }; H.map.DomIcon.prototype._getDomEvent = function(event) { var _this = this; var icon = _this._getIcon(); var events = _this._getEvents(); if(!icon) return null; if(!events) return null; return events.filter(function(event) { return _this._getDomEvent(event); }); }; H.map.DomIcon.prototype._getDomEvent = function(event) { var _this = this; var icon = _this._getIcon(); var events = _this._getEvents(); if(!icon) return null; if(!events) return null; return events.filter(function(event) { return _this._getDomEvent(event); }); }; H.map.DomIcon.prototype._getDomEvent = function(event) { var _this = this; var icon = _this._getIcon(); var events = _this._getEvents(); if(!icon) return null; if(!events) return null; return events.filter(function(event) { return _this._getDomEvent(event); }); }; H.map.DomIcon.prototype._getDomEvent = function(event) { var _this = this; var icon = _this._getIcon(); var events = _this._getEvents(); if(!icon) return null; if(!events) return null; return events.filter(function(event) { return _this._getDomEvent(event); }); }; H.map.DomIcon.prototype._getDomEvent = function(event) { var _this = this; var icon = _this._getIcon(); var events = _this._getEvents(); if(!icon) return null; if(!events) return null; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
		console.log( err ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	} 	 	if( url.indexOf( '/' ) === 0 ){ 		console.log( url ); 		return; 	
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\Dependency
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.internal.IgniteInternalFuture; import org.apache.ignite.internal.processors.cache.CacheAtomicityMode; import org.apache.ignite.internal.processors.cache.CacheMode; import org.apache.ignite.internal.processors.cache.CacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;  import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronization
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.pulsar.client.api;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when;  import java.util.HashMap; import java.util.Map;  import org.apache.pulsar.client.api.exceptions.PulsarClientException; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.
 export default class ValidationFailed extends Error {   constructor(message) {     super(`Validation failed for ${key}: ${message}`);   } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class CategoryType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.category.name',                 'required' => false,             ))             ->add('slug', 'text', array(                 'label' => 'sylius.form.category.slug',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Category'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_category';     } } 
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0010,0011';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
 /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.GridCacheAtomicityMode; import org.apache.ignite.internal.processors.cache.GridCacheMode; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest
 /**  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  module.exports = models; 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Compute.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Text;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for CreateOrUpdate operation.     /// </summary>     public partial class CreateOrUpdateHeaders     {         /// <summary>         /// Initializes a new instance of the CreateOrUpdateHeaders class.         /// </summary>         public CreateOrUpdateHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the CreateOrUpdateHeaders class.         /// </summary>         /// <param name="customHeaders">The headers that will be added to request.         /// </param>         public CreateOrUpdateHeaders(IDictionary<string, string> customHeaders = default(IDictionary<string, string>))         {             CustomInit(customHeaders);         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets headers that will be added to request.         /// </summary>         [JsonProperty(PropertyName = "headers")]         public IDictionary<string, string> Headers { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (Headers == null)             {                
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
} if (content = json.content) {                     if (Array.isArray(content)) {                     if (Array.isArray(content[0])) {                     if (Array.isArray(content[1])) {                     if (Array.isArray(content[2])) {                     if (Array.isArray(content[3])) {                     if (Array.isArray(content[4])) {                     if (Array.isArray(content[5])) {                     if (Array.isArray(content[6])) {                     if (Array.isArray(content[7])) {                     if (Array.isArray(content[8])) {                     if (Array.isArray(content[9])) {                     if (Array.isArray(content[10])) {                     if (Array.isArray(content[11])) {                     if (Array.isArray(content[12])) {                     if (Array.isArray(content[13])) {                     if (Array.isArray(content[14])) {                     if (Array.isArray(content[15])) {                     if (Array.isArray(content[16])) {                     if (Array.isArray(content[17])) {                     if (Array.isArray(content[18])) {                     if (Array.isArray(content[19])) {                     if (Array.isArray(content[20])) {                     if (Array.isArray(content[21])) {                     if (Array.isArray(content[22])) {                     if (Array.isArray(content[23])) {                     if (Array.isArray(content[24])) {                     if (Array.isArray(content[25])) {                     if (Array.isArray(content[26])) {                     if (Array.isArray(content[27])) {                     if (Array.isArray(content[28])) {                     if (Array.isArray(content[29])) {                     if (Array.isArray(content[30])) {                     if (Array.isArray(content[31])) {                     if (Array.isArray(content[32])) {                     if (Array.isArray(content[33])) {                     if (Array.isArray(content[34])) {                     if (Array.isArray(content[35])) {                     if (Array.isArray(content[36])) {                     if (Array.isArray(
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.SumOfNumbers")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.SumOfNumbers")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8-8e8e-4e8e-8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.configuration.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite

 {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'delete') {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'add') {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'remove') {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'update') {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'delete') {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'edit') {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'add') {     var stamp = argv._[1]     var key = getKey(stamp)     var prop = argv._[2]     console.log(stamp)     console.log(key)     console.log(prop)     } } else if (argv._[0] === 'remove
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
 , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  , containerSize                  ,
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.pulsar.client.api;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyOneInteraction; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyOneInteraction; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TAB_CONTENTS_TAB_CONTENTS_VIEW_H_  #include "base/memory/scoped_ptr.h" #include "content/public/browser/web_contents_view.h" #include "content/public/browser/web_contents_view_observer.h" #include "content/public/browser/web_contents_view_delegate.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_view_delegate_observer.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_user_data_manager_observer.h" #include "content/public/browser/web_contents_user_data_provider.h" #include "content/public/browser/web_contents_user_data_provider_observer.h" #include "content/public/browser/web_contents_user_data_source.h" #include "content/public/browser/web_contents_user_data_source_observer.h" #include "content/public/browser/web_contents_user_data_type.h" #include "content/public/browser/web_contents_user_data_util.h" #include "content/public/browser/web_contents_user_data_util_observer.h" #include "content/public/browser/web_contents_user_data_view.h" #include "content/public/browser/web_contents_user_data_view_delegate.h" #include "content/public/browser/web_contents_user_data_view_observer.h" #include "content/public/
 import { withServices } from '@bbc/psammead-storybook-helpers'; import { withStyles } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStyles } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStyles } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStyles } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStyles } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; import { withStylesKnob } from '@bbc/psammead-storybook-styles'; 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_MENU_UTIL_H_ #define CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_MENU_UTIL_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/strings/string16.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_conversions.h" #include "base/strings/utf_string_
 if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 0) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 1) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 2) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 3) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 4) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 5) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 6) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 7) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 8) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 9) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.isDefined(previousRangeDataPoints) && previousRangeDataPoints.length > 10) {                     console.debug("Running PreviousRangeOverlay");                     prevRangeLine = d3.svg.line() if (angular.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
     } }
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
(this, this.muxjs); (function(this, this.muxjs) {      var $ = this.muxjs.$;     var _ = this.muxjs._;     var _1 = _interopRequireDefault(_);     var _2 = _interopRequireDefault(_1);     var _3 = _interopRequireDefault(_2);     var _4 = _interopRequireDefault(_3);     var _5 = _interopRequireDefault(_4);     var _6 = _interopRequireDefault(_5);     var _7 = _interopRequireDefault(_6);     var _8 = _interopRequireDefault(_7);     var _9 = _interopRequireDefault(_8);     var _10 = _interopRequireDefault(_9);     var _11 = _interopRequireDefault(_10);     var _12 = _interopRequireDefault(_11);     var _13 = _interopRequireDefault(_12);     var _14 = _interopRequireDefault(_13);     var _15 = _interopRequireDefault(_14);     var _16 = _interopRequireDefault(_15);     var _17 = _interopRequireDefault(_16);     var _18 = _interopRequireDefault(_17);     var _19 = _interopRequireDefault(_18);     var _20 = _interopRequireDefault(_20);     var _21 = _interopRequireDefault(_21);     var _22 = _interopRequireDefault(_22);     var _23 = _interopRequireDefault(_23);     var _24 = _interopRequireDefault(_24);     var _25 = _interopRequireDefault(_25);     var _26 = _interopRequireDefault(_26);     var _27 = _interopRequireDefault(_27);     var _28 = _interopRequireDefault(_28);     var _29 = _interopRequireDefault(_29);     var _2a = _interopRequireDefault(_2a);     var _2b = _interopRequireDefault(_2b);     var _2c = _interopRequireDefault(_2c);     var _2d = _interopRequireDefault(_2d);     var _2e = _interopRequireDefault(_2e);     var _2f = _interopRequireDefault(_
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
        this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((
 		this.init(); 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			var self = this;  			this.gridWidget = new DataGrid.DataGridWidget(); 			this.gridWidget.init(); 		},  		init: function() { 			var self = this;  			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			var self = this;  			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		init: function() { 			this.gridWidget.init(); 		} 	};  	DataGrid.DataGridWidget.prototype = { 		
 {   return {     publish,   }; }  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export {   publish, };  export { 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.internal.*; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.internal.util.typedef.internal.X; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceFactory; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactory; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceFactoryInterface; use Symfony\
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Core")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Core")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
     expect(shallowToJson(actual)).toMatchSnapshot();   });    it('should throw an error if the value is undefined', function() {     expect(function() {       shallowToJson(undefined);     }).toThrow();   });    it('should throw an error if the value is null', function() {     expect(function() {       shallowToJson(null);     }).toThrow();   });    it('should throw an error if the value is undefined', function() {     expect(function() {       shallowToJson(undefined);     }).toThrow();   });    it('should throw an error if the value is null', function() {     expect(function() {       shallowToJson(null);     }).toThrow();   });    it('should throw an error if the value is undefined', function() {     expect(function() {       shallowToJson(undefined);     }).toThrow();   });    it('should throw an error if the value is null', function() {     expect(function() {       shallowToJson(null);     }).toThrow();   });    it('should throw an error if the value is undefined', function() {     expect(function() {       shallowToJson(undefined);     }).toThrow();   });    it('should throw an error if the value is null', function() {     expect(function() {       shallowToJson(null);     }).toThrow();   });    it('should throw an error if the value is undefined', function() {     expect(function() {       shallowToJson(undefined);     }).toThrow();   });    it('should throw an error if the value is null', function() {     expect(function() {       shallowToJson(null);     }).toThrow();   });    it('should throw an error if the value is undefined', function() {     expect(function() {       shallowToJson(undefined);     }).toThrow();   });    it('should throw an error if the value is null', function() {
     }) }  $scope.addSubscription = function() {     userSubscriptionRef.$add().then(function() {         NotificationService.success('Added', 'User Subscription')     }) }  $scope.updateSubscription = function() {     userSubscriptionRef.$update().then(function() {         NotificationService.success('Updated', 'User Subscription')     }) }  $scope.deleteSubscription = function() {     userSubscriptionRef.$remove().then(function() {         NotificationService.success('Removed', 'User Subscription')     }) }  $scope.createSubscription = function() {     userSubscriptionRef.$create().then(function() {         NotificationService.success('Created', 'User Subscription')     }) }  $scope.updateSubscription = function() {     userSubscriptionRef.$update().then(function() {         NotificationService.success('Updated', 'User Subscription')     }) }  $scope.deleteSubscription = function() {     userSubscriptionRef.$remove().then(function() {         NotificationService.success('Removed', 'User Subscription')     }) }  $scope.addUserSubscription = function() {     userSubscriptionRef.$add().then(function() {         NotificationService.success('Added', 'User Subscription')     }) }  $scope.updateUserSubscription = function() {     userSubscriptionRef.$update().then(function() {         NotificationService.success('Updated', 'User Subscription')     }) }  $scope.deleteUserSubscription = function() {     userSubscriptionRef.$remove().then(function() {         NotificationService.success('Removed', 'User Subscription')     }) }  $scope.createUserSubscription = function() {     userSubscriptionRef.$create().then(function() {         NotificationService.success('Created', 'User Subscription')     }) }  $scope.updateUserSubscription = function() {     userSubscriptionRef.$update().then(function() {         NotificationService.success('Updated', 'User Subscription')     }) }  $scope.deleteUserSubscription = function() {     userSubscriptionRef.$remove().then(function() {        
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 map.add_layer(layer2);                         debugger;                         console.log(map.toXML()); map.add_layer(layer3);                         debugger;                         console.log(map.toXML()); map.add_layer(layer4);                         debugger;                         console.log(map.toXML()); map.add_layer(layer5);                         debugger;                         console.log(map.toXML()); map.add_layer(layer6);                         debugger;                         console.log(map.toXML()); map.add_layer(layer7);                         debugger;                         console.log(map.toXML()); map.add_layer(layer8);                         debugger;                         console.log(map.toXML()); map.add_layer(layer9);                         debugger;                         console.log(map.toXML()); map.add_layer(layer10);                         debugger;                         console.log(map.toXML()); map.add_layer(layer11);                         debugger;                         console.log(map.toXML()); map.add_layer(layer12);                         debugger;                         console.log(map.toXML()); map.add_layer(layer13);                         debugger;                         console.log(map.toXML()); map.add_layer(layer14);                         debugger;                         console.log(map.toXML()); map.add_layer(layer15);                         debugger;                         console.log(map.toXML()); map.add_layer(layer16);                         debugger;                         console.log(map.toXML()); map.add_layer(layer17);                         debugger;                         console.log(map.toXML()); map.add_layer(layer18);                         debugger;                         console.log(map.toXML()); map.add_layer(layer19);                         debugger;                         console.log(map.toXML()); map.add_layer(layer20);                         debugger;                         console.log(map.toXML()); map.add_layer(layer21);                         debugger;                         console.log(map.toXML()); map.add_layer(layer22);                         debugger;                         console.log(map.toXML()); map.add_layer(layer23);                         debugger;                         console.log(map.toXML()); map.add_
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
(this.authorizer.isPermittedAll(permissions)) { this.authorizer.isPermittedAll(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(this.authorizer.getPermissions(
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 		if (tomlEditor != null) { 			tomlEditor.close(); 			tomlEditor = null; 		} 	}, 	error: function (xhr, textStatus, request) { 		if (tomlEditor != null) { 			tomlEditor.close(); 			tomlEditor = null; 		} 	} };  var lastActiveClassifier = null;  function loadLinksConfig() { 	$.ajax({ 		url: contextPath + "/loadLinksConfig", 		data: {activeClassifier: lastActiveClassifier}, 		success: function (content, textStatus, request) { 			if (tomlEditor != null) { 				tomlEditor.close(); 				tomlEditor = null; 			} 		}, 		error: function (xhr, textStatus, request) { 			if (tomlEditor != null) { 				tomlEditor.close(); 				tomlEditor = null; 			} 		} 	}); }  $(document).ready(function () { 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	loadLinksConfig(); 	
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 module.exports = function(grunt) {    // Project configuration.   grunt.initConfig({     pkg: grunt.file.readJSON('package.json'),     jshint: {       options: {         jshintrc: '.jshintrc',         reporter: require('jshint-stylish')       },       all: [         'Gruntfile.js',         'tasks/*.js',         'tasks/**/*.js'       ]     },     watch: {       js: {         files: ['Gruntfile.js', 'tasks/*.js'],         tasks: ['jshint:all'],         options: {           livereload: true         }       },       css: {         files: ['Gruntfile.css', 'tasks/*.css'],         tasks: ['jshint:all'],         options: {           livereload: true         }       }     }   });    // Load grunt tasks automatically   grunt.loadNpmTasks('grunt-contrib-jshint');   grunt.loadNpmTasks('grunt-contrib-watch');    // Default task.   grunt.registerTask('default', ['jshint', 'watch']);  }; 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Blotter")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("Blotter")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 		if(!toBeCached[i]) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 			toBeCached[i] = []; 		} 		if(!toBeCached[i].length) { 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component

; }  if (fragment instanceof Prismic.Fragments.String) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (fragment instanceof Prismic.Fragments.Boolean) {   return fragment.value; }  if (
 XF.UI.createLabel = function(labelDescr)  {     var label = new XF.UI.Label(labelDescr);     XF.UI.createButton(label);     return label; };  XF.UI.createLabel = function(labelDescr)  {     var label = new XF.UI.Label(labelDescr);     XF.UI.createButton(label);     return label; };  XF.UI.createRadioButton = function(radioDescr)  {     var radio = new XF.UI.RadioButton(radioDescr);     XF.UI.createButton(radio);     return radio; };  XF.UI.createRadioButton = function(radioDescr)  {     var radio = new XF.UI.RadioButton(radioDescr);     XF.UI.createButton(radio);     return radio; };  XF.UI.createCheckbox = function(checkboxDescr)  {     var checkbox = new XF.UI.Checkbox(checkboxDescr);     XF.UI.createButton(checkbox);     return checkbox; };  XF.UI.createCheckbox = function(checkboxDescr)  {     var checkbox = new XF.UI.Checkbox(checkboxDescr);     XF.UI.createButton(checkbox);     return checkbox; };  XF.UI.createRadioButton = function(radioDescr)  {     var radio = new XF.UI.RadioButton(radioDescr);     XF.UI.createButton(radio);     return radio; };  XF.UI.createRadioButton = function(radioDescr)  {     var radio = new XF.UI.RadioButton(radioDescr);     XF.UI.createButton(radio);     return radio; };  XF.UI.createCheckbox = function(checkboxDescr)  {     var checkbox = new XF.UI.Checkbox(checkboxDescr);     XF.UI.createButton(checkbox);     return checkbox; };  XF.UI.createRadioButton = function(radioDescr)  {     var radio = new XF.UI.RadioButton(radioDescr);
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color'; } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 module.exports = function(options) {   options = options || {};    if (typeof options === 'object') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function') {     options = options || {};   }    if (typeof options === 'function
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Diagnostics; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.Core; using System.Data.Entity.Core.Metadata; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations.Infrastructure.Extensions; using System.Data.Entity.Migrations.ModelConfiguration; using System.Data.Entity.Migrations.SqlServer; using System.Data.Entity.Migrations.SqlServer.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.SqlServer.ModelConfiguration.Migrations.Infrastructure; using System
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License.  // <auto-generated/>  #nullable disable  using System; using System.Collections.Generic; using System.Text.Json; using Azure.Core;  namespace Azure.ResourceManager.Network.Models {     public partial class VirtualNetworkGateway : IUtf8JsonSerializable     {         void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)         {             writer.WriteStartObject();             writer.WritePropertyName("id");             writer.WriteStringValue(Id);             writer.WritePropertyName("name");             writer.WriteStringValue(Name);             writer.WritePropertyName("type");             writer.WriteStringValue(Type);             writer.WritePropertyName("etag");             writer.WriteStringValue(Etag);             writer.WriteEndObject();         }          internal static VirtualNetworkGateway DeserializeVirtualNetworkGateway(JsonElement element)         {             string id = default;             string name = default;             string type = default;             string etag = default;             foreach (var property in element.EnumerateObject())             {                 if (property.NameEquals("id"))                 {                     if (property.Value.ValueKind == JsonValueKind.Null)                     {                         property.ThrowNonNullablePropertyIsNull();                         continue;                     }                     id = property.Value.GetString();                     continue;                 }                 if (property.NameEquals("name"))                 {                     if (property.Value.ValueKind == JsonValueKind.Null)                     {                         property.ThrowNonNullablePropertyIsNull();                         continue;                     }                     name = property.Value.GetString();                     continue;                 }                 if (property.NameEquals("type"))                 {                     if (property.Value.ValueKind == JsonValueKind.Null)                     {                         property.ThrowNonNullablePropertyIsNull();                         continue;                     }                     type = property.Value.GetString();                     continue;                 }                 if (property.NameEquals("etag"))                 {                     if (property.Value.ValueKind == JsonValueKind
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.spi.security;  import org.apache.jackrabbit.oak.spi.state.NodeBuilder; import org.apache.jackrabbit.oak.spi.state.NodeState; import org.apache.jackrabbit.oak.spi.state.NodeStateListener; import org.apache.jackrabbit.oak.spi.state.NodeStateResolver; import org.apache.jackrabbit.oak.spi.state.NodeStateResolverFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateService; import org.apache.jackrabbit.oak.spi.state.NodeStateServiceFactory; import org.apache.jackrabbit.oak.spi.state.PropertyState; import org.apache.jackrabbit.oak.spi.state.PropertyStateResolver; import org.apache.jackrabbit.oak.spi.state.PropertyStateService; import org.apache.jackrabbit.oak.spi.state.PropertyStateServiceFactory; import org.apache.jackrabbit.oak.spi.state.StoreState; import org.apache.jackrabbit.oak.spi.state.StoreType; 
     if(!this.views[path]) {         this.views[path] = {};     }     this.views[path][this.name] = this.views[path][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name] = this.views[path][this.name][this.name] || {};     this.views[path][this.name][this.name]
        tagSets: this.tagSets             , allTags: this.allTags         }) this.tagSelectView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagListView.render() this.tagList
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReference; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception
  describe('chunkify', () => {    beforeEach(() => {     sinon.stub(chunkify, 'chunkify')   })    it('should return a promise', () => {     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be.a('function')     expect(chunkify).to.be
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
 }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  }     debugger;  
  this.mouseDown = true; }  mouseDownHandler(mouseCoordinates) {   this.mouseDown = true; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = true; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false; }  mouseUpHandler(mouseCoordinates) {   this.mouseDown = false; }  mouseMoveHandler(mouseCoordinates) {   this.mouseMove = false
queue.append.apply(queue, arguments);   };   this.remove = function() {     queue.remove.apply(queue, arguments);   };   this.each = function() {     queue.each.apply(queue, arguments);   };   this.filter = function() {     queue.filter.apply(queue, arguments);   };   this.reduce = function() {     queue.reduce.apply(queue, arguments);   };   this.reduceRight = function() {     queue.reduceRight.apply(queue, arguments);   };   this.reduceLeft = function() {     queue.reduceLeft.apply(queue, arguments);   };   this.reduceTop = function() {     queue.reduceTop.apply(queue, arguments);   };   this.reduceBottom = function() {     queue.reduceBottom.apply(queue, arguments);   };   this.reduceLeft = function() {     queue.reduceLeft.apply(queue, arguments);   };   this.reduceTop = function() {     queue.reduceTop.apply(queue, arguments);   };   this.reduceBottom = function() {     queue.reduceBottom.apply(queue, arguments);   };   this.reduceRight = function() {     queue.reduceRight.apply(queue, arguments);   };   this.reduceLeft = function() {     queue.reduceLeft.apply(queue, arguments);   };   this.reduceTop = function() {     queue.reduceTop.apply(queue, arguments);   };   this.reduceBottom = function() {     queue.reduceBottom.apply(queue, arguments);   };   this.reduceLeft = function() {     queue.reduceLeft.apply(queue, arguments);   };   this.reduceTop = function() {     queue.reduceTop.apply(queue, arguments);   };   this.reduceBottom = function() {     queue.reduceBottom.apply(queue, arguments);   };   this.reduceRight = function() {     queue.reduceRight.apply(queue, arguments);   };   this.reduceLeft = function() {     queue.reduceLeft.apply(queue, arguments);   };   this.reduceTop = function() {     queue.reduceTop.apply(queue, arguments);   };   this
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.GridCacheContext; import org.apache.ignite.internal.processors.cache.GridCacheSharedContext; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.
 		if (window.location.hash.match(/^#/)) { 			location.hash = window.location.hash.replace(/^#/, ''); 		} 		else { 			location.hash = window.location.hash; 		} 		return false; 	} 	 	function showConfirmDialog(callback) { 		if (window.location.hash.match(/^#/)) { 			window.location.hash = window.location.hash.replace(/^#/, ''); 		} 		else { 			window.location.hash = window.location.hash; 		} 		return false; 	} 	 	if (window.location.hash.match(/^#/)) { 		window.location.hash = window.location.hash.replace(/^#/, ''); 	} 	else { 		window.location.hash = window.location.hash; 	} 	 	if (window.location.hash.match(/^#/)) { 		window.location.hash = window.location.hash.replace(/^#/, ''); 	} 	 	if (window.location.hash.match(/^#/)) { 		window.location.hash = window.location.hash.replace(/^#/, ''); 	} 	 	if (window.location.hash.match(/^#/)) { 		window.location.hash = window.location.hash.replace(/^#/, ''); 	} 	 	if (window.location.hash.match(/^#/)) { 		window.location.hash = window.location.hash.replace(/^#/, ''); 	} 	 	if (window.location.hash.match(/^#/)) { 		window.location.hash = window.location.hash.replace(/^#/, ''); 	} 	 	if (window.location.hash.match(/^#/)) { 		window.location.hash = window.location.hash.replace(/^#/, ''); 	} 	 	if (window.location.hash.match(/^#/)) {
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for DeleteBackupRequest.     /// </summary>     public partial class DeleteBackupRequestHeaders     {         /// <summary>         /// Initializes a new instance of the DeleteBackupRequestHeaders class.         /// </summary>         public DeleteBackupRequestHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the DeleteBackupRequestHeaders class.         /// </summary>         /// <param name="customHeaders">The headers that will be added to request.         /// </param>         public DeleteBackupRequestHeaders(IDictionary<string, List<string>> customHeaders = default(IDictionary<string, List<string>>> customHeaders = default(IDictionary<string, List<string>>>))         {             CustomInit(customHeaders);         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets headers that will be added to request.         /// </summary>         [JsonProperty(PropertyName = "headers")]         public IDictionary<string, List<string>> Headers { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (Headers == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "Headers
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.pulsar.client.api;  import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonProperty; 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\SubmitType; use Symfony\Component\Form\Extension\Core\Type\CheckboxType; use Symfony\Component\Form\Extension\Core\Type\CheckboxType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\CheckboxType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\Extension\

<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start();  App.start(); 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
.apply(undefined, [trackingInfo, options].concat(toDecorate));   };  var toDecorate = function(trackingInfo, options) {     var options = options || {};     var trackingInfo = trackingInfo || {};     var trackingOptions = trackingOptions || {};      var toDecorate = function(trackingInfo, options) {         var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var trackingInfo = trackingInfo || {};         var trackingOptions = trackingOptions || {};          var options = options || {};         var
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'form_text';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertSame; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.segment;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.
    return $("<div>").text(input).html();     }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
db'; admin.connect(dbURL, function(err, db) {     if (err) {         console.log(err);     } else {         console.log(db);     } });  admin.on('error', function(err) {     console.log(err); });  admin.on('connect', function(err) {     if (err) {         console.log(err);     } else {         console.log(db);     } });  admin.on('connection', function(err) {     if (err) {         console.log(err);     } else {         console.log(db);     } });  admin.on('close', function(err) {     if (err) {         console.log(err);     } else {         console.log(db);     } }); 
 // Copyright (c) 2009-2010 Satoshi Nakamoto // Copyright (c) 2009-2012 The Bitcoin developers // Distributed under the MIT/X11 software license, see the accompanying // file COPYING or http://www.opensource.org/licenses/mit-license.php.  #ifndef __cplusplus # error This header can only be compiled as C++. #endif  #ifndef __INCLUDED_PROTOCOL_H__ #define __INCLUDED_PROTOCOL_H__  #include "serialize.h" #include "netbase.h" #include <string> #include <vector> #include "uint256.h"  extern bool fTestNet; static inline unsigned short GetDefaultPort(const bool testnet = fTestNet) {     return testnet ? 12345 : 12345; }   extern unsigned char pchMessageStart[4];  /** Message header.  * (4) message start.  * (12) command.  * (4) size.  * (4) checksum.  */ class CMessageHeader {     public:         CMessageHeader();         CMessageHeader(const char* pszCommand, unsigned int nMessageSizeIn);          std::string GetCommand() const;         bool IsValid() const;          IMPLEMENT_SERIALIZE             (              READWRITE(FLATDATA(pchMessageStart));              READWRITE(FLATDATA(pchCommand));              READWRITE(nMessageSize);              READWRITE(nChecksum);             )      // TODO: make private (improves encapsulation)     public:         enum {             MESSAGE_START_SIZE=sizeof(::pchMessageStart),             COMMAND_SIZE=12,             MESSAGE_SIZE_SIZE=sizeof(int),             CHECKSUM_SIZE=sizeof(int),              MESSAGE_SIZE_OFFSET=MESSAGE_START_SIZE+COMMAND_SIZE,             CHECKSUM_OFFSET=MESSAGE_SIZE_OFFSET+MESSAGE_SIZE_SIZE         };         char pchMessageStart[MESSAGE_START_SIZE];         char pchCommand[COMMAND_SIZE
 this.seedAnalyses = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         for (var j = 0; j < token.length; j++) {             analyses.push(token[j]);         }     }     return analyses; };  this.seedAnalyses = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         for (var j = 0; j < token.length; j++) {             analyses.push(token[j]);         }     }     return analyses; };  this.seedAnalyses = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         for (var j = 0; j < token.length; j++) {             analyses.push(token[j]);         }     }     return analyses; };  this.seedAnalyses = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         for (var j = 0; j < token.length; j++) {             analyses.push(token[j]);         }     }     return analyses; };  this.seedAnalyses = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         for (var j = 0; j < token.length; j++) {             analyses.push(token[j]);         }     }     return analyses; };  this.seedAnalyses = function (tokens) {     var analyses = [];     for (var i = 0; i < tokens.length; i++) {         var token = tokens[i];         for (var j = 0; j < token.length; j++) {             analyses.push(token
 if(!!options.parameters){       href += '?' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.parameters){       href += '&' + encodeURIComponent(!!options.parameters); } if(!!options.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }  } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
		if (state == 1) 		{ 			$("#content").html(""); 		} 		else 		{ 			$("#content").html(""); 		} 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus(); 		$("#content").focus();
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
   }   return true;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   }   return false;   }   return false;   }   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;   }   return false;  
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.con
;      if (typeof define === 'function' && define.amd) {         // AMD. Register as an anonymous module.         define(['jquery'], function($) {             return support;         });     } else if (typeof exports === 'object') {         // Node. Does not work with strict CommonJS, but         // only CommonJS-like environments that support module.exports,         // like Node.         module.exports = support;     } else {         // Browser globals (root is window)         window.support = support;     } })(window, document); 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.sdk.io;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import org.apache.beam.sdk.coders.Coder; import org.apache.beam.sdk.coders.CoderFactory; import org.apache.beam.sdk.coders.StringUtf8Coder; import org.apache.beam.sdk.testing.TestPipeline; import org.apache.beam.sdk.testing.TestPipelineFactory; import org.apache.beam.sdk.transforms.Create; import org.apache.beam.sdk.transforms.DoFn; import org.apache.beam.sdk.transforms.PTransform; import org.apache.beam.sdk.transforms.ParDo; import org.apache.beam.sdk.values.PCollection; import org.junit.Before; import org.junit.Test; import org.junit.runner.RunWith; 
     if ( typeof( id ) == 'object' )     {         for ( var i = 0; i < id.length; i++ )     {             if ( typeof( id[i] ) == 'object' )     {                 for ( var j = 0; j < id[i].length; j++ )     {                     if ( typeof( id[i][j] ) == 'object' )     {                         for ( var k = 0; k < id[i][j].length; k++ )     {                             if ( typeof( id[i][j][k] ) == 'object' )     {                                 for ( var l = 0; l < id[i][j][k].length; l++ )     {                                     if ( typeof( id[i][j][k][l] ) == 'object' )     {                                         for ( var m = 0; m < id[i][j][k][l].length; m++ )     {                                             if ( typeof( id[i][j][k][l][m] ) == 'object' )     {                                                 for ( var n = 0; n < id[i][j][k][l][m][n].length; n++ )     {                                                     if ( typeof( id[i][j][k][l][m][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n][n
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/chromeos/login/user_manager_observer.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "grit/theme_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource_bundle.h
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util
     var job = new Job();      it('sets the repeat interval', function() {         job.setRepeatInterval(1);         expect(job.getRepeatInterval()).toBe(1);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(2);         expect(job.getRepeatInterval()).toBe(2);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(3);         expect(job.getRepeatInterval()).toBe(3);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(4);         expect(job.getRepeatInterval()).toBe(4);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(5);         expect(job.getRepeatInterval()).toBe(5);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(6);         expect(job.getRepeatInterval()).toBe(6);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(7);         expect(job.getRepeatInterval()).toBe(7);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(8);         expect(job.getRepeatInterval()).toBe(8);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(9);         expect(job.getRepeatInterval()).toBe(9);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(10);         expect(job.getRepeatInterval()).toBe(10);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(11);         expect(job.getRepeatInterval()).toBe(11);      });      it('sets the repeat interval', function() {         job.setRepeatInterval(12);         expect(job.getRepeatInterval()).toBe(12);      });      it('sets the repeat interval', function() {
( "Bug? already seen request" );     debugger;  var request = new XMLHttpRequest(); request.onreadystatechange = function() {     if ( request.readyState == 4 ) {         if ( request.status == 200 ) {             if ( request.status == 200 ) {                 if ( request.status == 200 ) {                     if ( request.status == 200 ) {                         if ( request.status == 200 ) {                             if ( request.status == 200 ) {                                 if ( request.status == 200 ) {                                     if ( request.status == 200 ) {                                         if ( request.status == 200 ) {                                             if ( request.status == 200 ) {                                                 request.status = 200;                                             }                                         }                                     }                                 }                             }                         }                     }                 }             }         }     } }; request.open( "GET", "http://www.google.com/", true ); request.send( null ); request.onreadystatechange = function() {     if ( request.readyState == 4 ) {         if ( request.status == 200 ) {             if ( request.status == 200 ) {                 if ( request.status == 200 ) {                     if ( request.status == 200 ) {                         if ( request.status == 200 ) {                             if ( request.status == 200 ) {                                 if ( request.status == 200 ) {                                     if ( request.status == 200 ) {                                         if ( request.status == 200 ) {                                             if ( request.status == 200 ) {                                                 request.status = 200;                                             }                                         }                                     }                                 }                             }                         }                     }                 }             }         }     } }; request.open( "POST", "http://www.google.com/", true ); request.send( null ); request.onreadystatechange = function() {     if ( request.readyState == 4 ) {         if ( request.status == 200 ) {             if ( request.status == 200 ) {                 if ( request.status == 200 ) {                     if ( request.status == 200 ) {
var sym = '>='; var sym2 = '>='; var sym3 = '>='; var sym4 = '>='; var sym5 = '>='; var sym6 = '>='; var sym7 = '>='; var sym8 = '>='; var sym9 = '>='; var sym10 = '>='; var sym11 = '>='; var sym12 = '>='; var sym13 = '>='; var sym14 = '>='; var sym15 = '>='; var sym16 = '>='; var sym17 = '>='; var sym18 = '>='; var sym19 = '>='; var sym20 = '>='; var sym21 = '>='; var sym22 = '>='; var sym23 = '>='; var sym24 = '>='; var sym25 = '>='; var sym26 = '>='; var sym27 = '>='; var sym28 = '>='; var sym29 = '>='; var sym30 = '>='; var sym31 = '>='; var sym32 = '>='; var sym33 = '>='; var sym34 = '>='; var sym35 = '>='; var sym36 = '>='; var sym37 = '>='; var sym38 = '>='; var sym39 = '>='; var sym40 = '>='; var sym41 = '>='; var sym42 = '>='; var sym43 = '>='; var sym44 = '>='; var sym45 = '>='; var sym46 = '>='; var sym47 = '>='; var sym48 = '>='; var sym49 = '>='; var sym50 = '>='; var sym51 = '>='; var sym52 = '>='; var sym53 = '>='; var sym54 = '>='; var sym55 = '>='; var sym56 = '>='; var sym57 = '>='; var sym58 = '>='; var sym59 = '>='; var sym60 = '>='; var sym61 = '>='; var sym62 = '>='; var sym63 = '>='; var sym64 = '>='; var sym65 = '>='; var sym66 = '>='; var sym67 = '>='; var sym68 = '>='; var sym69 = '>='; var sym70 = '>='; var sym71 = '>='; var sym72 = '>='; var sym73 = '>='; var
 " + type; break; } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReference; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReference; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceFactoryInterface
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
 // Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Compute {     using Microsoft.Rest;     using Microsoft.Rest.Azure;     using Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using Newtonsoft.Json.Converters;     using System.Runtime;     using System.Runtime.Serialization;     using System.Runtime.Serialization.Converters;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations.Schema;     using System.ComponentModel.DataAnnotations.Schema.Url;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations.Schema;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations.Schema;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations.Schema;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations.Schema.Url;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.
 ReactZeroClipboard = ReactZeroClipboard || require('react-zero-clipboard'); var ReactDOM = require('react-dom'); var ReactDOMServer = require('react-dom/server'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig = require('react-dom/server/config'); var ReactDOMServerConfig
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Pattern; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('email')             ->add('subject')             ->add('message')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * @return string      */     public function getName()     {         return 'Symfony\Component\Form\Extension\Core\Type\EmailType';     } } 
  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if (event.keyCode === 13) {       event.preventDefault();       return false;     }   }; };  var getCanActivateHook = function getCanActivateHook() {   return function (event) {     if
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
 		data: this.get('dataStructure'), 		options: this.get('options') 	};  	this.set('dataStructure', data); 	this.set('defaultDataStructure', data); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.get('options')); 	this.set('data', this.get('data')); 	this.set('options', this.
 {             $(this).dblclick(function()             { {                 if(!$(this).hasClass("active")){ {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("active"); {                 $("#main").addClass("
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritDoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReference; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceServiceReference
     if (this.lttype == 1) {         if (this.lttype == 2) {             if (this.lttype == 3) {                 if (this.lttype == 4) {                     if (this.lttype == 5) {                         if (this.lttype == 6) {                             if (this.lttype == 7) {                                 if (this.lttype == 8) {                                     if (this.lttype == 9) {                                         this.lttype = 10;                                     }                                     if (this.lttype == 10) {                                         this.lttype = 11;                                     }                                     if (this.lttype == 11) {                                         this.lttype = 12;                                     }                                     this.lttype = 13;                                     this.lttype = 14;                                     this.lttype = 15;                                     this.lttype = 16;                                     this.lttype = 17;                                     this.lttype = 18;                                     this.lttype = 19;                                     this.lttype = 20;                                     this.lttype = 21;                                     this.lttype = 22;                                     this.lttype = 23;                                     this.lttype = 24;                                     this.lttype = 25;                                     this.lttype = 26;                                     this.lttype = 27;                                     this.lttype = 28;                                     this.lttype = 29;                                     this.lttype = 30;                                     this.lttype = 31;                                     this.lttype = 32;                                     this.lttype = 33;                                     this.lttype = 34;                                     this.lttype = 35;                                     this.lttype = 36;                                     this.lttype = 37;                                     this.lttype = 38;                                     this.lttype = 39;                                     this.lttype = 40;                                     this.lttype = 41;                                     this.lttype = 42;                                     this.lttype = 43;                                     this.lttype = 44;                                     this.lttype = 45;                                     this
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
     if (enums.APP_PRODUCTION_MODE === env) {         BASE_PORT = 8000;         MATCH_SERVER_PORT = 8081;     } else {         BASE_PORT = 9000;         MATCH_SERVER_PORT = 8081;     } } else {     if (enums.APP_PRODUCTION_MODE === env) {         BASE_PORT = 8000;         MATCH_SERVER_PORT = 8081;     } else {         BASE_PORT = 9000;         MATCH_SERVER_PORT = 8081;     } }                                                                                                                                                                                                                                                                                                                                                                                 
     }      function handleUrl(url, reply) {         if (url.href) {             if (reply) {                 reply(url.href, true);             } else {                 reply(url.href, false);             }         } else {             if (reply) {                 reply(url.href, false);             } else {                 reply(url.href, true);             }         }     }      function handleUrl(url, reply) {         if (url.href) {             if (reply) {                 reply(url.href, true);             } else {                 reply(url.href, false);             }         } else {             if (reply) {                 reply(url.href, false);             } else {                 reply(url.href, true);             }         }     }      function handleUrl(url, reply) {         if (url.href) {             if (reply) {                 reply(url.href, true);             } else {                 reply(url.href, false);             }         } else {             if (reply) {                 reply(url.href, false);             } else {                 reply(url.href, true);             }         }     }      function handleUrl(url, reply) {         if (url.href) {             if (reply) {                 reply(url.href, true);             } else {                 reply(url.href, false);             }         } else {             if (reply) {                 reply(url.href, false);             } else {                 reply(url.href, true);             }         }     }      function handleUrl(url, reply) {         if (url.href) {             if (reply) {                 reply(url.href, true);             } else {                 reply(url.href, false);             }         } else {             if (reply) {                 reply(url.href, false);             } else {                 reply(url.href, true);             }         }

<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
    if (error) {       console.error(error);       done();     } else {       console.log('Subscription was fulfilled.');       done();     }   }); };  exports.subscribe = (done) => {   return new Promise((resolve, reject) => {     const subscription = new Subscription();     subscription.subscribe((error) => {       if (error) {         console.error(error);         reject(error);       } else {         console.log('Subscription was fulfilled.');         resolve();       }     });   }); };  exports.unsubscribe = (done) => {   return new Promise((resolve, reject) => {     const subscription = new Subscription();     subscription.unsubscribe((error) => {       if (error) {         console.error(error);         reject(error);       } else {         console.log('Subscription was unfulfilled.');         resolve();       }     });   }); };  exports.unsubscribeAll = (done) => {   return new Promise((resolve, reject) => {     const subscription = new Subscription();     subscription.unsubscribeAll((error) => {       if (error) {         console.error(error);         reject(error);       } else {         console.log('Subscription was unfulfilled.');         resolve();       }     });   }); };  exports.subscribeAll = (done) => {   return new Promise((resolve, reject) => {     const subscription = new Subscription();     subscription.subscribeAll((error) => {       if (error) {         console.error(error);         reject(error);       } else {         console.log('Subscription was unfulfilled.');         resolve();       }     });   }); };  exports.unsubscribeAll = (done) => {   return new Promise((resolve, reject) => {     const subscription = new Subscription();     subscription.unsubscribeAll((error) => {       if (error) {         console.error(error);         reject(error);       } else {         console.log
 }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i in themesOrder) {    var t = themesOrder[i]; }   for(var i
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Data.Entity.Storage; using System.Data.Entity.Storage.Infrastructure; using System.Linq.Expressions; using System.Linq.Expressions.Linq; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebParts; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.Xaml; using System.Web.UI.HtmlControls.Xaml.Controls; using System.Web.UI.HtmlControls.Xaml.Data; using System.Web.UI.HtmlControls.Xaml.Input; using System.Web.UI.HtmlControls.Xaml.Media; using System.Web.UI.HtmlControls.Xaml.Navigation; using System.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Range; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('email')             ->add('subject')             ->add('message')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_email';     } } 
 || typeof value == 'number'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'       || typeof value == 'undefined'
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.direct;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Validator\Constraints;  use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\Exception\UnexpectedTypeException;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailValidator extends ConstraintValidator {     /**      * {@inheritdoc}      */     public function validate($value, Constraint $constraint)     {         if (!$constraint instanceof Email) {             throw new UnexpectedTypeException($constraint, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTime) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTimeInterface) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTime) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTimeInterface) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTime) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTimeInterface) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTime) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTimeInterface) {             throw new UnexpectedTypeException($value, 'Symfony\Component\Validator\Constraints\Email');         }          if (!$value instanceof \DateTime) {             throw new
 const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('./settings.js') const settings = require('.
  var featureType = dataStore.get('metadata').name;   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(layer, dataStore) {   var featureType = this.getFeatureType(layer, dataStore);   return featureType; };  this.getFeature = function(
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException
            type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_NAME   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }         , COMPANY_URL   : {               type      : DataTypes.STRING           , allowNull   : false         }
/**  * @license  * Copyright Google Inc. All Rights Reserved.  *  * Use of this source code is governed by an MIT-style license that can be  * found in the LICENSE file at https://angular.io/license  */ // THIS CODE IS GENERATED - DO NOT MODIFY // See angular/tools/gulp-tasks/cldr/extract.js  (function(global) {   global.ng = global.ng || {};   global.ng.common = global.ng.common || {};   global.ng.common.locales = global.ng.common.locales || {};   const u = undefined;   function plural(n) {     let i = Math.floor(Math.abs(n));     if (i === 1) return 1;     return 5;   }   global.ng.common.locales['es-ES'] = [     'es-ES',     [['a', 'p'], ['am', 'pm'], u],     u,     [       ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S'], ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],       ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],       ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],       ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']     ]
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits.common.GridCommonTestUtils; import org.apache.ignite.testframework.junits
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup {     using Microsoft.Rest;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// BackupOperations operations.     /// </summary>     internal partial class BackupOperations : IServiceOperations<RecoveryServicesBackupManagementClient>, IBackupOperations     {         /// <summary>         /// Initializes a new instance of the BackupOperations class.         /// </summary>         /// <param name='client'>         /// Reference to the service client.         /// </param>         /// <exception cref="System.ArgumentNullException">         /// Thrown when a required parameter is null         /// </exception>         internal BackupOperations(RecoveryServicesBackupManagementClient client)         {             if (client == null)             {                 throw new System.ArgumentNullException("client");             }             Client = client;         }          /// <summary>         /// Initializes a new instance of the BackupOperations class.         /// </summary>         /// <param name='client'>         /// Reference to the service client.         /// </param>         /// <param name='baseUri'>         /// Optional. The base URI of the service.         /// </param>         /// <exception cref="System.ArgumentNullException">         /// Thrown when a required parameter is null         /// </exception>         internal BackupOperations(RecoveryServicesBackupManagementClient client, System.Uri baseUri)         {             if (client == null)             {                 throw new System.ArgumentNullException("client");             }             BaseUri = baseUri;             Client = client;         }          /// <summary> 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices; using System.Collections; using System.Collections.ObjectModel.Collections; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.Collections.Specialized.Collections; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Specialized; using System.Collections.Special
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for CreateOrUpdate operation.     /// </summary>     public partial class CreateOrUpdateHeaders     {         /// <summary>         /// Initializes a new instance of the CreateOrUpdateHeaders class.         /// </summary>         public CreateOrUpdateHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the CreateOrUpdateHeaders class.         /// </summary>         /// <param name="customHeaders">The headers that will be added to request.         /// </param>         public CreateOrUpdateHeaders(IDictionary<string, List<string>> customHeaders = default(IDictionary<string, List<string>>> customHeaders = default(IDictionary<string, List<string>>>))         {             CustomInit(customHeaders);         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets headers that will be added to request.         /// </summary>         [JsonProperty(PropertyName = "headers")]         public IDictionary<string, List<string>> Headers { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(this.app, {     'requirejs': true });  helpers.mockPrompt(
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for CreateOrUpdateOperation.     /// </summary>     public partial class CreateOrUpdateOperationHeaders     {         /// <summary>         /// Initializes a new instance of the CreateOrUpdateOperationHeaders class.         /// </summary>         public CreateOrUpdateOperationHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the CreateOrUpdateOperationHeaders class.         /// </summary>         /// <param name="customHeaders">The headers that will be added to request.         /// </param>         public CreateOrUpdateOperationHeaders(IDictionary<string, List<string>> customHeaders = null)         {             CustomInit();             if (customHeaders != null)             {                 foreach (var header in customHeaders)                 {                     if (header != null)                     {                         this.Headers.Add(header, header);                     }                 }             }         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets headers that will be added to request.         /// </summary>         [JsonProperty(PropertyName = "headers")]         public IDictionary<string, List<string>> Headers { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.plugins.index;  import java.util.ArrayList; import java.util.List;  import org.apache.jackrabbit.oak.spi.state.NodeState; import org.apache.jackrabbit.oak.spi.state.NodeStateListener; import org.apache.jackrabbit.oak.spi.state.NodeStateResolver; import org.apache.jackrabbit.oak.spi.state.NodeStateResolverFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateService; import org.apache.jackrabbit.oak.spi.state.NodeStateServiceFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateType; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeManager; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeManagerFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeRegistry; import org.apache.jackrabbit.oak.spi.state.NodeState
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
 if( 1 ){   domReady(handleDomReady);} else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} else{   domReady(handleDomReady);} else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} else{   domReady(handleDomReady);} else{   domReady(handleDomReady);} } else{   domReady(handleDomReady);} 
 }  function safeToStringValue ( value ) {   if ( typeof value === 'string' ) {     return value;   }   if ( typeof value === 'number' ) {     return value.toString();   }   if ( typeof value === 'boolean' ) {     return value.toString();   }   if ( typeof value === 'object' ) {     return JSON.stringify( value );   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {     return value.toString();   }   if ( typeof value === 'function' ) {    
 var Touche = function(nodes) {   this.nodes = nodes; };  Touche.prototype = Object.create(Element.prototype); Touche.prototype.constructor = Touche;  Touche.prototype.init = function() {   Element.prototype.init.apply(this, arguments); };  Touche.prototype.destroy = function() {   Element.prototype.destroy.apply(this, arguments); };  Touche.prototype.addEventListener = function(eventName, listener) {   this.nodes[eventName].addEventListener(eventName, listener); };  Touche.prototype.removeEventListener = function(eventName, listener) {   this.nodes[eventName].removeEventListener(eventName, listener); };  Touche.prototype.dispatchEvent = function(eventName) {   this.nodes[eventName].dispatchEvent(eventName); };  Touche.prototype.fireEvent = function(eventName) {   this.nodes[eventName].fireEvent(eventName); };  Touche.prototype.dispatchTouchEvent = function(eventName) {   this.nodes[eventName].dispatchTouchEvent(eventName); };  Touche.prototype.dispatchTouchMoveEvent = function(eventName) {   this.nodes[eventName].dispatchTouchMoveEvent(eventName); };  Touche.prototype.dispatchTouchEndEvent = function(eventName) {   this.nodes[eventName].dispatchTouchEndEvent(eventName); };  Touche.prototype.dispatchTouchCancelEvent = function(eventName) {   this.nodes[eventName].dispatchTouchCancelEvent(eventName); };  Touche.prototype.dispatchTouchMoveEvent = function(eventName) {   this.nodes[eventName].dispatchTouchMoveEvent(eventName); };  Touche.prototype.dispatchTouchCancelEvent = function(eventName) {   this.nodes[eventName].dispatchTouchCancelEvent(eventName); };  Touche.prototype.dispatchTouchEndEvent = function(eventName) {   this.nodes[eventName].dispatchTouchEndEvent(eventName); };  Touche.prototype.dispatchTouchCancelEvent =
     return Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve(             new NylasError(`IMAPBox::${name} - Can't operate on a mailbox that is no longer open on the current IMAPConnection.`)           ) }  export function (name) {     return () => Promise.resolve
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("School")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("School")] [assembly: AssemblyCopyright("Copyright ©  2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
(function() {     'use strict';      /**      * @param {string} c      * @return {string}      */     function escape(c) {         return c.charAt(0).toUpperCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toLowerCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toUpperCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toLowerCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toUpperCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toLowerCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toUpperCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toLowerCase() + c.slice(1);     }      /**      * @param {string} c      * @return {string}      */     function unescape(c) {         return c.charAt(0).toUpperCase() + c.slice(1);     }      /**     
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using Microsoft.Phone.Controls; using Microsoft.Phone.Shell; using Microsoft.Phone.Shell.Interop; using System.IO; using System.Collections; using System.Collections.Concurrent; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Globalization; using System.IO.Compression; using System.Linq; using System.Text; using System.Threading; using System.Threading.Tasks; using System.Xml; using System.Xml.Linq; using System.Xml.Serialization; using System.Xml.Serialization.Json; using System.Xml.Serialization.XmlSerializer; using System.Xml.XPath; using System.Xml.XPath.XPathExpressions; using System.Xml.XPath; using System.Xml; using System.Xml.Linq; using System.Xml.Linq.Expressions; using System.Xml.Linq.Expressions.Expressions; using System.Xml.Linq.Serialization; using System.Xml.Linq.Serialization.Formatters.Binary; using System.Xml.Linq.Serialization.Formatters.Xml; using System.Xml.Linq.Serialization.Formatters.Xml.SerializationContext; using System.Xml.Linq.Serialization.Formatters.Xml.SerializationInfo; using System.Xml.Linq.Serialization.Formatters.Xml.SerializationProvider; using System.Xml.Linq.Serialization.Formatters.XmlSerializer; using System.Xml.Linq.Serialization.Formatters.XmlSerializer.SerializationContext; 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/prefs/pref_service.h" #include "base/prefs/pref_service_syncable.h" #include "base/prefs/pref_service_syncable.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_observer_delegate.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_user_data_store.h" #include "content/public/browser/web_contents_user_data_store_observer.h" #include "content/public/browser/web_contents_user_data_type.h" #include "content/public/browser/web_contents_user_
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
    var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.pop = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.push = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.shift = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.shift = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.reverse = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.reverse = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.reverse = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.reverse = function () {     var l = [];     for (var i = 0; i < this.length; i++) {         l.push(this[i]);     }     return l; };  Array.prototype.reverse = function () {     var l = [];
 }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color';  } 
 import React, { Component } from 'react'; import PropTypes from 'prop-types'; import { connect } from 'react-redux'; import { Link } from 'react-router-dom'; import styles from './styles.css';  class App extends Component {   static propTypes = {     router: PropTypes.object.isRequired,     history: PropTypes.object.isRequired,   };    static contextTypes = {     router: PropTypes.object.isRequired,   };    static defaultProps = {     history: {},   };    constructor(props, context) {     super(props, context);     this.state = {       history: {},     };   }    componentDidMount() {     const { history } = this.props;     this.setState({ history });   }    componentWillUnmount() {     const { history } = this.props;     this.setState({ history });   }    componentWillUpdate() {     const { history } = this.props;     this.setState({ history });   }    componentDidUpdate() {     const { history } = this.props;     this.setState({ history });   }    componentWillMount() {     const { history } = this.props;     this.setState({ history });   }    componentWillUnmount() {     const { history } = this.props;     this.setState({ history });   }    componentWillUpdate() {     const { history } = this.props;     this.setState({ history });   }    componentDidUpdate() {     const { history } = this.props;     this.setState({ history });   }    componentWillUnmount() {     const { history } = this.props;     this.setState({ history });   }    componentDidUpdate() {     const { history } = this.props;     this.setState({ history });   }    render() {     const { history } = this.props;     return (      
 templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[name] = false;     debugger;     return;  templateElem.spread[
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
     this.device.stop(function() {         console.log('Shutting down appium session...');         this.device.stop(function() {             console.log('Shutting down appium session...');             this.device.stop(function() {                 console.log('Shutting down appium session...');                 this.device.stop(function() {                     console.log('Shutting down appium session...');                     this.device.stop(function() {                         console.log('Shutting down appium session...');                         this.device.stop(function() {                             console.log('Shutting down appium session...');                             this.device.stop(function() {                                 console.log('Shutting down appium session...');                                 this.device.stop(function() {                                     console.log('Shutting down appium session...');                                     this.device.stop(function() {                                         console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {                                             console.log('Shutting down appium session...');                                         this.device.stop(function() {
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
 if (this.ponged && reshape) {     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class SubmitType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('submit', 'submit', array('label' => 'Submit'))         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\SubmitType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'form_submit';     }      /**      * {@inheritdoc}      */     public function getParent()     {         return 'form';     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'form_submit';     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.GridCacheContext; import org.apache.ignite.internal.processors.cache.GridCacheSharedContext; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; 
  var config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config || {};  config = config
         };     } }  const store = new UserStore();  export default store; 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 consoleNode = document.createElement('div'); consoleNode.style.position = 'absolute'; consoleNode.style.top = '0px'; consoleNode.style.left = '0px'; consoleNode.style.width = '100%'; consoleNode.style.height = '100%'; consoleNode.style.border = '1px solid #ccc'; consoleNode.style.borderRadius = '5px'; consoleNode.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.color = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.backgroundImage = 'url(' + consoleNode.style.backgroundImage + ')'; consoleNode.style.border = '1px solid #ccc'; consoleNode.style.borderRadius = '5px'; consoleNode.style.color = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.backgroundImage = 'url(' + msie.backgroundImage + ')'; consoleNode.style.border = '1px solid #ccc'; consoleNode.style.borderRadius = '5px'; consoleNode.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.color = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.backgroundImage = 'url(' + msie.backgroundImage + ')'; consoleNode.style.border = '1px solid #ccc'; consoleNode.style.borderRadius = '5px'; consoleNode.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.color = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.backgroundImage = 'url(' + msie.backgroundImage + ')'; consoleNode.style.border = '1px solid #ccc'; consoleNode.style.borderRadius = '5px'; consoleNode.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.color = 'rgba(0, 0, 0, 0.5)'; consoleNode.style.backgroundImage
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
