function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {  function renderOptVElementToString(optVElement, isRoot, context) {
function _ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_ol_format_
function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value(configs, o) { function group_value
function store(name, options) {   if (typeof storeNames[storeNames.length - 1] === 'function') {   result[name] = storeNames.pop();   } else {   result[name] = options;   }   return result;
function update(data) {         console.log('aframe update', sync.isMine, this.refLock, resourceRef);   if(sync.isMine &&!this.refLock && resourceRef) resourceRef.set(data);
function getTestDir () {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.test\.js($|\?.*)/; if (typeof document!== 'undefined' && document && document.getElementsByTagName) {     var testRE = /\/[^\/]+\.
this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(this)); this.sandbox.on('husky.column-navigation.edit', function(item) {                 if (!!this.data.ids.indexOf(item.id)) {                     this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(this)); this.sandbox.on('husky.column-navigation.edit', function(item) {                 if (!!this.data.ids.indexOf(item.id)) {                     this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(this)); this.sandbox.on('husky.column-navigation.edit', function(item) {                 if (!!this.data.ids.indexOf(item.id)) {                     this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(this)); this.sandbox.on('husky.column-navigation.edit', function(item) {                 if (!!this.data.ids.indexOf(item.id)) {                     this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(this)); this.sandbox.on('husky.column-navigation.edit', function(item) {                 if (!!this.data.ids.indexOf(item.id)) {                     this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(this)); this.sandbox.on('husky.column-navigation.edit', function(item) {                 if (!!this.data.ids.indexOf(item.id)) {                     this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(this)); this.sandbox.on('husky.column-navigation.edit', function(item) {                 if (!!this.data.ids.indexOf(item.id)) {                     this.data.ids.splice(this.data.ids.indexOf(item.id), 1); } }.bind(
function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {     function UNLOCK_IN_PROGRESS() {
function isPermittedAll(permissions) {  function __processArg(obj, key) {  var arg = null;  if (obj) {  if (obj[key]!== undefined) {  arg = obj[key];  } else {  var desc = Object.getOwnPropertyDescriptor(obj, key);  if (desc && (desc.get || desc.set)) {  arg = desc.get.call(obj, key, obj) || desc.set.call(obj, key, arg);  } else {  arg = obj[key];  }  }  return arg; }  function Controller() {   function Controller() {     require("alloy/controllers/BaseController").apply(this, Array.prototype.slice.call(arguments));     this.__controllerPath = "index";     this.args = arguments[0] || {};     if (arguments[0]) {       {         __processArg(arguments[0], "__parentSymbol");       }       {         __processArg(arguments[0], "$model");       }       {         __processArg(arguments[0], "__itemTemplate");       }     }     var $ = this;     var exports = {};     var __defers = {};     $.__views.index = Ti.UI.createWindow({       backgroundColor: "white",       id: "index"     });     $.__views.index && $.addTopLevelView($.__views.index);     exports.destroy = function() {};     _.extend($, $.__views);     _.extend($, exports);   }    _.extend($, Controller.prototype); }  var Alloy = require("alloy"), Backbone = Alloy.Backbone, _ = Alloy._;  module.exports = Controller;
function protractor(args, cb) {   var options = {     configFile: path.join(__dirname, 'protractor.conf.js')   };   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = args;     args = {};   }   if (typeof options === 'function') {     cb = options;     options = {};   }   if (typeof options === 'object') {     options = options;     options = {};   }   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = options;     options = {};   }   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = options;     options = {};   }   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = options;     options = {};   }   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = options;     options = {};   }   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = options;     options = {};   }   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = options;     options = {};   }   if (typeof args === 'function') {     cb = args;     args = {};   }   if (typeof args === 'object') {     options = options;     options = {};   }
function triggerOutput(str,...arguments) {    Node.triggerOutput(...arguments);   }
function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edgeModel, extensions) {         function add(name, edge
function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo ) {     function strokedRound( x, y, w, h, lineJoin, miter, arc, arcTo
function _interopRequireDefault(obj) { return obj && obj.__esModule? obj : { 'default': obj }; }  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called'); } return call && (typeof call === 'object' || typeof call === 'function')? call : self; }  function _inherits(subClass, superClass) { if (typeof superClass!== 'function' && superClass!== null) { throw new TypeError('Super expression must either be null or a function, not'+ typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(
function User(name, bio) {   this.name = name;   this.bio = bio;   this.save(function(err) {     if (err) {       console.log(err);     } else {       console.log('User created');     }   }); }
function mkdirp (p, cb) {   fs.mkdirp(p, function (er, s) {   if (er) {   cb(er);   } else {   cb(null, p);   } }); });
, fs = require('fs')  , path = require('path')  , rimraf = require('rimraf')  , rimrafSync = require('rimraf-sync')  , mkdirp = require('mkdirp')  , rimrafSync = require('rimraf-sync')  , mkdirpSync = require('mkdirp-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync = require('rimraf-sync')  , rimrafSync
function __extends(subClass, superClass) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass!== "function" && superClass!== null) {     if (typeof superClass
function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width) {     function getTextRect(text, textFont, textAlign, textBaseline, width
$scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.templatesByStatus.length === 0)) {             $scope.templatesByStatus = $scope.templates[status];             if (typeof $scope.templatesByStatus === 'undefind' ||                 ($scope.templatesByStatus && $scope.
function keys (obj, key) { if (typeof key ==='string') { key = uid(key); } var result = shared(obj, key); if (result === undefined) { result = {}; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result = undefined; } else if (result === null) { result = null; } else if (result === false) { result = false; } else if (result === true) { result = true; } else if (result === undefined) { result =
function handleMiddlewareRedirects(event, current, previous, rejection) {   var pattern = /redirectTo\:([^\(]*)(\((\{.*\})\))?/;   var match;
function initListener(evt) {    if (evt.type == air.SQLEvent.OPEN) {    conn.addEventListener(air.SQLEvent.CLOSE, closeListener);    } else if (evt.type == air.SQLEvent.CLOSE) {    conn.removeEventListener(air.SQLEvent.CLOSE, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type == air.SQLEvent.ERROR) {    conn.removeEventListener(air.SQLEvent.ERROR, closeListener);    } else if (evt.type ==
this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames, srcDirnames);     if (this.document &&!this.index) {     this.dirnames.push(this.locale);     }     this.dirnames.push.apply(this.dirnames,
function createClient(config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) { function createClient(conn, config) {
function _head () {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {  function _head (str) {
function http(method, remote, where, cb) {   this.log.http(method, remote.href || "/")   var done = requestDone.call(this, method, remote, where, cb)
__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) { child[key] = parent[key]; } } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }(),     SimditorMarkdown = (function(_super) {   __extends(SimditorMarkdown, _super);    function SimditorMarkdown() {     SimditorMarkdown.__super__.constructor.apply(this, arguments);   }    SimditorMarkdown.prototype.render = function(str, options) {     return SimditorMarkdown.__super__.render.call(this, str, options);   };    return SimditorMarkdown;  })();
function main(args, cb) {     if (typeof args === "function") {     cb = args;     args = [];     } else if (typeof args === "object") {     cb = args;     args = [];     } else if (typeof args === "string") {     cb = args;     args = [];     } else if (typeof args === "undefined") {     cb = args;     args = [];     } else if (typeof args === "boolean") {     cb = args;     args = [];     } else if (typeof args === "number") {     cb = args;     args = [];     } else if (typeof args === "object") {     cb = args;     args = [];     } else if (typeof args === "string") {     cb = args;     args = [];     } else if (typeof args === "undefined") {     cb = args;     args = [];     } else if (typeof args === "boolean") {     cb = args;     args = [];     } else if (typeof args === "number") {     cb = args;     args = [];     } else if (typeof args === "object") {     cb = args;     args = [];     } else if (typeof args === "string") {     cb = args;     args = [];     } else if (typeof args === "undefined") {     cb = args;     args = [];     } else if (typeof args === "boolean") {     cb = args;     args = [];     } else if (typeof args === "number") {     cb = args;     args = [];     } else if (typeof args === "object") {     cb = args;     args = [];     } else if (typeof args === "string") {     cb = args;     args = [];     } else if (typeof args === "undefined") {     cb = args;     args = [];     } else if (typeof args === "boolean") {     cb = args;     args = [];     } else if (typeof args === "number") {     cb = args;     args = [];     } else if (typeof args === "object") {     cb = args;     args = [];     } else if (typeof args === "string") {     cb = args;     args =
function __extends(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } function __decorate(decorators, target, key, desc) { var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d; if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; } function __metadata(metadata, key, value) { if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadata, key, value); } function __param(paramIndex, decorator) { decorator(target, key, paramIndex); } function __decorate(decorators, target, key, desc) { var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d; if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; } function __metadata(
function SuperMap.ThemeGraduatedSymbolStyle(options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function SuperMap.ThemeGraduatedSymbolStyle(map, options) {         function Super
function parentBtn(text, options) {     var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light waves-effect')                  .text(text)                   var parentBtn = $('<a/>')                  .addClass('btn waves-light
function __awaiter (thisArg, _arguments, P, generator) { function adopt (value) { try { function step (key, arg) { var desc = Object.getOwnPropertyDescriptor(arg, key); if (desc === undefined) { var parent = Object.getPrototypeOf(arg); if (parent === null) { return undefined; } else { return step(key, arg); } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(arg); } } } return new (P || (P = Promise))(function (resolve, reject) { function step (key, arg) { var desc = Object.getOwnPropertyDescriptor(arg, key); if (desc === undefined) { var parent = Object.getPrototypeOf(arg); if (parent === null) { return undefined; } else { return step(key, arg); } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(arg); } } return new (P || (P = Promise))(function (resolve, reject) { function step (key, arg) { var desc = Object.getOwnPropertyDescriptor(arg, key); if (desc === undefined) { var parent = Object.getPrototypeOf(arg); if (parent === null) { return undefined; } else { return step(key, arg); } } return new (P || (P = Promise))(function (resolve, reject) { function step (key, arg) { var desc = Object.getOwnPropertyDescriptor(arg, key); if (desc === undefined) { var parent = Object.getPrototypeOf(arg); if (parent === null) { return undefined; } else { return step(key, arg); } } return new (P || (P = Promise))(function (resolve, reject) { function step (key, arg) { var desc = Object.getOwnPropertyDescriptor(arg, key); if (desc === undefined) { var parent = Object.getPrototypeOf(arg); if (parent === null) { return undefined; } else { return step(key, arg); } } return new (P || (P = Promise))(function (resolve, reject) { function
function __binding__originalComponent__['init'].apply(this, arguments) {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init() {     function __binding__originalComponent__init
function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg(obj, key) {     function __processArg
function ua() {     var ua = navigator.userAgent.toLowerCase();     if (ua.match(/msie ([\d\.]+)/i)) {         ua = ua.replace(/msie ([\d\.]+)/i, function (match) {             return match.slice(1);         });     }     return ua; }
function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {    function newShape(i, j) {
function iChild_adjust( iChild, iIndex) {               iChild.adjust( { left: kPadding, top: tCurrTop, left: (kCellHeight - iChild.iconExtent.width) / 2 });               iChild.set('isVisible', true);
function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {   function registerNamespaceFriendlyPrefix(str, prefix, clearPrefixes) {
function on(name, fn) {         const retVal = formio.hooks.on[name].apply(formio.hooks.on, Array.prototype.slice.call(arguments, 1));         return (retVal!== undefined)?!!retVal : true;       }
function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment) {   function EmberTestEnvironment(environment
function attachList(id, list, callback) {         client.lpush(id, list, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.rpush(id, list, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.lrange(id, 0, -1, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.rrange(id, 0, -1, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.llen(id, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.rlen(id, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.lpop(id, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.rpop(id, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.lpushx(id, list, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.rpushx(id, list, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.llenx(id, function (err, res) {         if (err) {         callback(err);         } else {         callback(null, res);         }         });         client.rlenx(id, function (err, res) {         if (err) {         callback(err);
function ImageUtils() {   function ImageUtils(options) {     if (!(this instanceof ImageUtils)) {       return new ImageUtils(options);     }     ImageUtils.__super__.constructor.call(this, options);   }   util.inherits(ImageUtils, ImageUtils.__super__);   ImageUtils.prototype.convert = function convert(src, dest, options) {     if (!(this instanceof ImageUtils)) {       return ImageUtils.__super__.convert.call(this, src, dest, options);     }     ImageUtils.__super__.convert.call(this, src, dest, options);   };   ImageUtils.prototype.resize = function resize(src, dest, options) {     if (!(this instanceof ImageUtils)) {       return ImageUtils.__super__.resize.call(this, src, dest, options);     }     ImageUtils.__super__.resize.call(this, src, dest, options);   };   ImageUtils.prototype.crop = function crop(src, dest, options) {     if (!(this instanceof ImageUtils)) {       return ImageUtils.__super__.crop.call(this, src, dest, options);     }     ImageUtils.__super__.crop.call(this, src, dest, options);   };   ImageUtils.prototype.rotate = function rotate(src, dest, options) {     if (!(this instanceof ImageUtils)) {       return ImageUtils.__super__.rotate.call(this, src, dest, options);     }     ImageUtils.__super__.rotate.call(this, src, dest, options);   };   ImageUtils.prototype.rotate90 = function rotate90(src, dest, options) {     if (!(this instanceof ImageUtils)) {       return ImageUtils.__super__.rotate90.call(this, src, dest, options);     }     ImageUtils.__super__.rotate90.call(this, src, dest, options);   };   ImageUtils.prototype.rotate180 = function rotate180(src, dest, options) {     if (!(this instanceof ImageUtils)) {       return ImageUtils.__super__.rotate180.call(this, src, dest, options);
function __extends(d, b) {     for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];     function __() { this.constructor = d; }     __.prototype = b.prototype;     d.prototype = new __(); };
module.exports = function (req, res, next) {   db.connect(function (err, db) {     if (err) {       console.log(err)       return next(err)     }     db.collection('users', function (err, collection) {       if (err) {         console.log(err)         return next(err)       }       collection.find({}, function (err, collection) {         if (err) {           console.log(err)           return next(err)         }         collection.toArray(function (err, collection) {           if (err) {             console.log(err)             return next(err)           }           collection.toArray(function (err, collection) {             if (err) {               console.log(err)               return next(err)             }             collection.toArray(function (err, collection) {               if (err) {                 console.log(err)                 return next(err)               }               collection.toArray(function (err, collection) {                 if (err) {                   console.log(err)                   return next(err)                 }                 collection.toArray(function (err, collection) {                   if (err) {                     console.log(err)                     return next(err)                   }                   collection.toArray(function (err, collection) {                     if (err) {                       console.log(err)                       return next(err)                     }                     collection.toArray(function (err, collection) {                       if (err) {                         console.log(err)                         return next(err)                       }                       collection.toArray(function (err, collection) {                         if (err) {                           console.log(err)                           return next(err)                         }                         collection.toArray(function (err, collection) {                           if (err) {                             console.log(err)                             return next(err)                           }                           collection.toArray(function (err, collection) {                             if (err) {                               console.log(err)                               return next(err)                             }
, fs = require('fs')  , path = require('path')  , url = require('url')  , urlParse = require('url-parse')  , http = require('http')  , httpProxy = require('http-proxy')  , httpProxyMiddleware = require('http-proxy-middleware')  , https = require('https')  , httpsProxy = require('https-proxy')  , httpsProxyMiddleware = require('https-proxy-middleware')  , httpsProxyMiddleware2 = require('https-proxy-middleware2')  , httpsProxyMiddleware3 = require('https-proxy-middleware3')  , httpsProxyMiddleware4 = require('https-proxy-middleware4')  , httpsProxyMiddleware5 = require('https-proxy-middleware5')  , httpsProxyMiddleware6 = require('https-proxy-middleware6')  , httpsProxyMiddleware7 = require('https-proxy-middleware7')  , httpsProxyMiddleware8 = require('https-proxy-middleware8')  , httpsProxyMiddleware9 = require('https-proxy-middleware9')  , httpsProxyMiddleware10 = require('https-proxy-middleware10')  , httpsProxyMiddleware11 = require('https-proxy-middleware11')  , httpsProxyMiddleware12 = require('https-proxy-middleware12')  , httpsProxyMiddleware13 = require('https-proxy-middleware13')  , httpsProxyMiddleware14 = require('https-proxy-middleware14')  , httpsProxyMiddleware15 = require('https-proxy-middleware15')  , httpsProxyMiddleware16 = require('https-proxy-middleware16')  , httpsProxyMiddleware17 = require('https-proxy-middleware17')  , httpsProxyMiddleware18 = require('https-proxy-middleware18')  , httpsProxyMiddleware19 = require('https-proxy-middleware19')  , httpsProxyMiddleware20 = require('https-proxy-middleware20')  , httpsProxyMiddleware21 = require('https-proxy-middleware21')  , httpsProxyMiddleware22 = require('https-proxy-middleware22')  , httpsProxyMiddleware23 = require('https-proxy-middleware23')  , httpsProxyMiddleware24 = require('https-proxy-middleware24')  , httpsProxyMiddleware25 = require
function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options) {     function pending(message, options
function method(container, method, arguments) {     function wrap(func, container, method, arguments) {     function wrap2(func, container, method, arguments) {     function wrap3(func, container, method, arguments) {     function wrap4(func, container, method, arguments) {     function wrap5(func, container, method, arguments) {     function wrap6(func, container, method, arguments) {     function wrap7(func, container, method, arguments) {     function wrap8(func, container, method, arguments) {     function wrap9(func, container, method, arguments) {     function wrap10(func, container, method, arguments) {     function wrap11(func, container, method, arguments) {     function wrap12(func, container, method, arguments) {     function wrap13(func, container, method, arguments) {     function wrap14(func, container, method, arguments) {     function wrap15(func, container, method, arguments) {     function wrap16(func, container, method, arguments) {     function wrap17(func, container, method, arguments) {     function wrap18(func, container, method, arguments) {     function wrap19(func, container, method, arguments) {     function wrap20(func, container, method, arguments) {     function wrap21(func, container, method, arguments) {     function wrap22(func, container, method, arguments) {     function wrap23(func, container, method, arguments) {     function wrap24(func, container, method, arguments) {     function wrap25(func, container, method, arguments) {     function wrap26(func, container, method, arguments) {     function wrap27(func, container, method, arguments) {     function wrap28(func, container, method, arguments) {     function wrap29(func, container, method, arguments) {     function wrap30(func, container, method, arguments) {     function wrap31(func, container, method, arguments) {     function wrap32(func, container, method, arguments) {     function wrap33(func, container, method, arguments) {     function wrap34(func, container, method, arguments) {     function wrap35(func, container, method, arguments) {     function wrap36(func, container, method,
function cortex(path, options) {   if (!(this instanceof cortex)) {     return new cortex(path, options);   }   if (typeof path!=='string') {     throw new TypeError('path must be a string');   }   if (typeof options!== 'object') {     throw new TypeError('options must be an object');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (typeof options.cwd!=='string') {     throw new TypeError('options.cwd must be a string');   }   if (
function kotti(element, options) {     kotti.dom_changed_handlers.push(function (e) {     kotti.dom_changed_handlers.forEach(function (handler) {     handler(e) }) }) }
function b(prop, a, b) {                 bLength += 1;                 if (!(prop in a)) {
goog.require('goog.graphics.ext.Path'); goog.module('goog.graphics.ext.Path', ['goog.graphics.AffineTransform'], function() {   /**    * @constructor    * @extends {goog.graphics.Path}    * @param {goog.graphics.AffineTransform} transform    */   goog.graphics.ext.Path = function(transform) {     goog.graphics.ext.Path.superClass_.constructor.call(this, transform);   };   goog.inherits(goog.graphics.ext.Path, goog.graphics.Path);   /**    * @param {goog.graphics.AffineTransform} transform    * @param {goog.graphics.Path} path    */   goog.graphics.ext.Path.prototype.transform = function(transform, path) {     goog.graphics.ext.Path.superClass_.prototype.transform.call(this, transform, path);   };   /**    * @param {goog.graphics.AffineTransform} transform    * @param {goog.graphics.Path} path    */   goog.graphics.ext.Path.prototype.translate = function(transform, path) {     goog.graphics.ext.Path.superClass_.prototype.translate.call(this, transform, path);   };   /**    * @param {goog.graphics.AffineTransform} transform    * @param {goog.graphics.Path} path    */   goog.graphics.ext.Path.prototype.rotate = function(transform, path) {     goog.graphics.ext.Path.superClass_.prototype.rotate.call(this, transform, path);   };   /**    * @param {goog.graphics.AffineTransform} transform    * @param {goog.graphics.Path} path    */   goog.graphics.ext.Path.prototype.scale = function(transform, path) {     goog.graphics.ext.Path.superClass_.prototype.scale.call(this, transform, path);   };   /**    * @param {goog.graphics.AffineTransform} transform    * @param {
function Support() {   function Support() {     function Support() {       function Support() {         function Support() {           function Support() {             function Support() {               function Support() {                 function Support() {                   function Support() {                     function Support() {                       function Support() {                         function Support() {                           function Support() {                             function Support() {                               function Support() {                                 function Support() {                                   function Support() {                                     function Support() {                                       function Support() {                                         function Support() {                                           function Support() {                                             function Support() {                                               function Support() {                                                 function Support() {                                                   function Support() {                                                     function Support() {                                                       function Support() {                                                         function Support() {                                                           function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support() {                                                             function Support
case Syntax.FunctionDeclaration:           var name = node.declaration.id.name;           utils.append('var'+ name +'= module.exports.' + name +'= function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {           utils.append('function'+ name + (node) {
function user() {   function user() {     function user() {       function user() {         function user() {           function user() {             function user() {               function user() {                 function user() {                   function user() {                     function user() {                       function user() {                         function user() {                           function user() {                             function user() {                               function user() {                                 function user() {                                   function user() {                                     function user() {                                       function user() {                                         function user() {                                           function user() {                                             function user() {                                               function user() {                                                 function user() {                                                   function user() {                                                     function user() {                                                       function user() {                                                         function user() {                                                           function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user() {                                                             function user
function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {     function sources(pageCloseTimeoutMillis) {
function unbox(msg, cb, opts) {       var eng, esc, literals, msg, payload, ___iced_passed_deferral, __iced_deferrals, __iced_k;       __iced_k = __iced_k_noop;
function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin, unspent, index, orphan;   function update(input, output, coin, unspent, index, orphan) {   var i, j, input, output, coin,
function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {       function _isDerived() {
module.exports = function (grunt) {   'use strict';    // Project configuration.   grunt.initConfig ({     jshint: {       all: [         'Gruntfile.js',         'tasks/*.js',         '<%= nodeunit.tests %>'       ],       options: {         jshintrc: '.jshintrc'       }     },      // Before generating any new files, remove any previously-created files.     clean: {       tests: ['tmp']     },      // Configuration to be run (and then tested).     sourceextract: {       default: {         files: [{           expand: true,           cwd: 'test/',           src: ['**/*.js'],           dest: 'tmp/'         }]       }     },      // Unit tests.     nodeunit: {       tests: ['test/*_test.js']     }    });    // Actually load this plugin's task(s).   grunt.loadTasks ('tasks');    // These plugins provide necessary tasks.   grunt.loadNpmTasks ('grunt-contrib-jshint');   grunt.loadNpmTasks ('grunt-contrib-clean');   grunt.loadNpmTasks ('grunt-contrib-nodeunit');    // Whenever the "test" task is run, first clean the "tmp" dir, then run this   // plugin's task(s), then test the result.   grunt.registerTask ('test', ['clean','sourceextract', 'nodeunit']);    // By default, lint and run all tests.   grunt.registerTask ('default', ['jshint', 'test']);  };
function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest, config, fileType, file) {         function fileTypes(dest,
function __processArg(obj, key) {     var arg = null;     if (obj) {        for (var i = 1; i < arguments.length; i++) {        arg = arguments[i];        __processArg(arg, key);     } } else {     var desc = Object.getOwnPropertyDescriptor(obj, key);     if (desc && (desc.get || desc.set)) {     Object.defineProperty(obj, key, desc);     } else {     Object.defineProperty(obj, key, {     value: desc,     enumerable: true,     configurable: true });     } } }
function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this, files, path, flags, check_result, deferred) {         function open_file(this
function getIn(obj, key) { if (obj === null) { throw new TypeError('Cannot call getIn() on null or undefined'); } var desc = Object.getOwnPropertyDescriptor(obj, key); if (desc === undefined) { throw new TypeError('Cannot call getIn() on undefined or null'); } var descValue = desc.value; if (descValue === undefined) { throw new TypeError('Cannot call getIn() on undefined or null'); } return descValue; } function includes(obj, key) { if (obj === null) { throw new TypeError('Cannot call includes() on null or undefined'); } var desc = Object.getOwnPropertyDescriptor(obj, key); if (desc === undefined) { throw new TypeError('Cannot call includes() on undefined or null'); } var descValue = desc.value; if (descValue === undefined) { throw new TypeError('Cannot call includes() on undefined or null'); } return descValue; } function assignIn(obj, key, value) { if (obj === null) { throw new TypeError('Cannot call assignIn() on null or undefined'); } var desc = Object.getOwnPropertyDescriptor(obj, key); if (desc === undefined) { throw new TypeError('Cannot call assignIn() on undefined or null'); } var descValue = desc.value; if (descValue === undefined) { throw new TypeError('Cannot call assignIn() on undefined or null'); } return descValue; } function reduce(obj, key, value) { if (obj === null) { throw new TypeError('Cannot call reduce() on null or undefined'); } var desc = Object.getOwnPropertyDescriptor(obj, key); if (desc === undefined) { throw new TypeError('Cannot call reduce() on undefined or null'); } var descValue = desc.value; if (descValue === undefined) { throw new TypeError('Cannot call reduce() on undefined or null'); } return descValue; } function concat(obj, key, value) { if (obj === null) { throw new TypeError('Cannot call concat() on null or undefined'); } var desc = Object.getOwnPropertyDescriptor(obj, key); if (desc === undefined) { throw new TypeError('Cannot call concat() on undefined or null'); } var descValue = desc.value; if (descValue === undefined) { throw new TypeError('Cannot call concat() on undefined or null'); } return descValue; } function find(obj,
function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {     function violin(samples, v) {
function time() {     return new Date().getTime() / 1000; } function formatTime(time) {     var hours = Math.floor(time / 3600);     var minutes = Math.floor((time - (hours * 3600)) / 60);     var seconds = Math.floor((time - (hours * 3600) - (minutes * 60)) / 1000);     if (hours < 10) {         hours = "0" + hours;     }     if (minutes < 10) {         minutes = "0" + minutes;     }     if (seconds < 10) {         seconds = "0" + seconds;     }     if (hours < 10) {         hours = "0" + hours;     }     if (minutes < 10) {         minutes = "0" + minutes;     }     if (seconds < 10) {         seconds = "0" + seconds;     }     if (hours < 10) {         hours = "0" + hours;     }     if (minutes < 10) {         minutes = "0" + minutes;     }     if (seconds < 10) {         seconds = "0" + seconds;     }     if (hours < 10) {         hours = "0" + hours;     }     if (minutes < 10) {         minutes = "0" + minutes;     }     if (seconds < 10) {         seconds = "0" + seconds;     }     if (hours < 10) {         hours = "0" + hours;     }     if (minutes < 10) {         minutes = "0" + minutes;     }     if (seconds < 10) {         seconds = "0" + seconds;     }     if (hours < 10) {         hours = "0" + hours;     }     if (minutes < 10) {         minutes = "0" + minutes;     }     if (seconds < 10) {         seconds = "0" + seconds;     }     if (hours < 10) {         hours = "0" + hours;     }     if (minutes < 10
vec = arguments[0];             if (!vec.type.equals(Shade.Types.vec3))                 throw "create with 2 parameters requires a vec3";         else if (arguments.length === 3) {
function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {   function childScope(scope, element, attrs, ngModel) {
function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i) {         function str(str, i
function middleware(passport, options, next) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize(passport) {   function _initialize
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; } function __metadata (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); }
function connect(gateway, options, callback) {   var self = this;    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};   }    if (typeof options ==='string') {     options = { host: options };   }    if (typeof options === 'function') {     callback = options;     options = {};
function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str) {     function isNullOrEmpty (str)
function isFunction( obj ) {     return toString.call( obj ) === "[object Function]"; }
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; }
function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game, cookiedata, controls) {   function LoaderModule(game,
module.exports.compilers.babel.sourcesMap = function (module, exports, __webpack_require__) {   "use strict";    Object.defineProperty(exports, "__esModule", {     value: true   });    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj!= null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }    function _interopRequireDefault(obj) { return obj && obj.__esModule? obj : { "default": obj }; }    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }    function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }    function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }    function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }    function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }    function _createSuper(Derived) { var hasNative
function getTagsIndex(obj, callback) {         var callback = callback || jsGen.lib.tools.callbackFn;
function upgrade (state, action) {                 console.log('Upgrading', state, action);                 const upgradedState = ['_g'];
function Msg(props) {   return (     <Msg {...props} />   ) }  Msg.propTypes = {   msg: React.PropTypes.object.isRequired }  export default Msg
function createResponseError(internalError) {   var error = new Error(internalError.message);   error.status = internalError.status;   error.request = internalError.request;   error.response = internalError.response;   error.stack = internalError.stack;   return error; }
function _parsePull (data, then) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull (err, data) {          function _parsePull
function setXhr() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {  function setWatcher() {
function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {   function app () {
function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config) {             function __construct(config
this.xhr.callbacks[name].apply(this.xhr, Array.prototype.slice.call(arguments, 1)) } } }
function openThirdModal(action) {   return {     type: 'OPEN_THIRD_MODAL',     payload: action.payload   } }  export default openThirdModal
function __awaiter (thisArg, _arguments, P, generator) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value) {     function adopt (value
function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity: 0.5 * ((10-index)/10) + 0.5};});     return function NextNights(nights, props) {     var opacities = props.nights.map((_, index) => {return {opacity
function addEventListener(element, type, callback) {    if (typeof window!== 'undefined' && window.addEventListener) {    return window.addEventListener(type, callback, false); } else if (typeof document!== 'undefined' && document.attachEvent) {    return document.attachEvent('on' + type, callback); } else if (typeof window!== 'undefined' && window.addEventListener) {    return window.addEventListener(type, callback, false); } else if (typeof document!== 'undefined' && document.attachEvent) {    return document.attachEvent('on' + type, callback); } else if (typeof window!== 'undefined' && window.removeEventListener) {    return window.removeEventListener(type, callback, false); } else if (typeof document!== 'undefined' && document.detachEvent) {    return document.detachEvent('on' + type, callback); } else if (typeof window!== 'undefined' && window.removeEventListener) {    return window.removeEventListener(type, callback, false); }
function disabled (el, disabled) {         function disabled (el, disabled) {         function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled) {     function disabled (el, disabled
function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg, x, y, z) {     function rotate(angleDeg,
function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser(str, options) {   function regjsparser
function factory (global) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url, options) { 'use strict';  function https (url,
c$.overrideMethod (c$, "getBfactor",   function () {  return Float.isNaN (this.atom.bfactor) && this.atom.anisoBorU!= null? this.atom.anisoBorU[7] * 100 : this.atom.bfactor;  });
function filterDuplicates(idCounts) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts, callback) {   function filterDuplicates(idCounts
function MongoClient(options) {     var self = this;     var server = new mongo.Server(options.host, options.port, options.options);     function MongoClient(options) {         var self = this;         var server = new mongo.Server(options.host, options.port, options.options);         function MongoClient(options) {             var self = this;             var server = new mongo.Server(options.host, options.port, options.options);             function MongoClient(options) {                 var self = this;                 var server = new mongo.Server(options.host, options.port, options.options);                 function MongoClient(options) {                     var self = this;                     var server = new mongo.Server(options.host, options.port, options.options);                     function MongoClient(options) {                         var self = this;                         var server = new mongo.Server(options.host, options.port, options.options);                         function MongoClient(options) {                             var self = this;                             var server = new mongo.Server(options.host, options.port, options.options);                             function MongoClient(options) {                                 var self = this;                                 var server = new mongo.Server(options.host, options.port, options.options);                                 function MongoClient(options) {                                     var self = this;                                     var server = new mongo.Server(options.host, options.port, options.options);                                     function MongoClient(options) {                                         var self = this;                                         var server = new mongo.Server(options.host, options.port, options.options);                                         function MongoClient(options) {                                             var self = this;                                             var server = new mongo.Server(options.host, options.port, options.options);                                             function MongoClient(options) {                                                 var self = this;                                                 var server = new mongo.Server(options.host, options.port, options.options);                                                 function MongoClient(options) {                                                     var self = this;                                                     var server = new mongo.Server(options.host, options.port, options.options);                                                     function
function CSSModalGallery(jQuery) {   function CSSModalGallery(jQuery) {     function CSSModalGallery(jQuery) {       function CSSModalGallery(jQuery) {         function CSSModalGallery(jQuery) {           function CSSModalGallery(jQuery) {             function CSSModalGallery(jQuery) {               function CSSModalGallery(jQuery) {                 function CSSModalGallery(jQuery) {                   function CSSModalGallery(jQuery) {                     function CSSModalGallery(jQuery) {                       function CSSModalGallery(jQuery) {                         function CSSModalGallery(jQuery) {                           function CSSModalGallery(jQuery) {                             function CSSModalGallery(jQuery) {                               function CSSModalGallery(jQuery) {                                 function CSSModalGallery(jQuery) {                                   function CSSModalGallery(jQuery) {                                     function CSSModalGallery(jQuery) {                                       function CSSModalGallery(jQuery) {                                         function CSSModalGallery(jQuery) {                                           function CSSModalGallery(jQuery) {                                             function CSSModalGallery(jQuery) {                                               function CSSModalGallery(jQuery) {                                                 function CSSModalGallery(jQuery) {                                                   function CSSModalGallery(jQuery) {                                                     function CSSModalGallery(jQuery) {                                                       function CSSModalGallery(jQuery) {                                                         function CSSModalGallery(jQuery) {                                                           function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {                                                             function CSSModalGallery(jQuery) {
;  describe('ContentsIdDao', function() {   var contentsIdDao;    beforeEach(function() {     contentsIdDao = new ContentsIdDao();   });    afterEach(function() {     contentsIdDao = null;   });    describe('#getContentsId', function() {     testSetup(function() {       return contentsIdDao.getContentsId();     });   });    describe('#getContentsIds', function() {     testSetup(function() {       return contentsIdDao.getContentsIds();     });   });    describe('#setContentsId', function() {     testSetup(function() {       return contentsIdDao.setContentsId();     });   });    describe('#setContentsIds', function() {     testSetup(function() {       return contentsIdDao.setContentsIds();     });   });    describe('#removeContentsId', function() {     testSetup(function() {       return contentsIdDao.removeContentsId();     });   });    describe('#removeContentsIds', function() {     testSetup(function() {       return contentsIdDao.removeContentsIds();     });   });    describe('#getContents', function() {     testSetup(function() {       return contentsIdDao.getContents();     });   });    describe('#getContentsIds', function() {     testSetup(function() {       return contentsIdDao.getContentsIds();     });   });    describe('#setContents', function() {     testSetup(function() {       return contentsIdDao.setContents();     });   });    describe('#setContentsIds', function() {     testSetup(function() {       return contentsIdDao.setContentsIds();     });   });    describe('#removeContents', function() {     testSetup(function() {       return contentsIdDao.removeContents();     });   });    describe('#removeContentsIds', function() {     testSetup(function() {       return contentsIdDao.removeContentsIds();     });
function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done) {         this.timeout(TIMEOUT);         Augur.blank(str, function blank (str, done
function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {         function drag(e) {
return 'unpublished';       break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':   return 'unpublished';   break;          case 'paper-conference':
receiver[p] = [];                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Function]') {receiver[p] = function () {                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Date]') {receiver[p] = new Date();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object RegExp]') {receiver[p] = new RegExp();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Number]') {receiver[p] = new Number();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object String]') {receiver[p] = new String();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Boolean]') {receiver[p] = new Boolean();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Error]') {receiver[p] = new Error();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object RegExp]') {receiver[p] = new RegExp();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Date]') {receiver[p] = new Date();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Array]') {receiver[p] = [];                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Function]') {receiver[p] = function () {                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Date]') {receiver[p] = new Date();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object RegExp]') {receiver[p] = new RegExp();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object Number]') {receiver[p] = new Number();                     arguments.callee(receiver[p], val);                 } else if (valType === '[object String]') {receiver[
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; };
function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){   function render(){
function __extends(d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; function __() { this.constructor = d; } __.prototype = b.prototype; d.prototype = new __();
function idRegex(str, oldID, label) {     var idRegex = new RegExp('(\'|")' + oldID + '(\-label)?(\'|)', 'g');     return idRegex.test(str); }
function setProfile(getProfile, setProfile) {     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been initialised - super() hasn't been called");     }     function __processArg(obj, key) {     function __assertThisInitialized(self) {     if (self === void 0) {     throw new ReferenceError("this hasn't been
function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(item, textOrientation) {     function itemStack(
function restartPlayback () {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {  var restartPlayback = function restartPlayback (options) {
function usesDeck () {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDeck) {     function usesDeck (str, usesDe
function _widget(widgetName, options) {     title = options.title;     _element = options.element;     _widget = options.widget;     isWidget = options.isWidget;     if (isWidget) {         _widget(title, _element, isWidget);     } else {         _widget(title, _element);     } }
function parseYearHebrewLetters( str, year){ // summary: //		parseYearHebrewLetters( str, year, function( str, year){ // summary: //			parseYearHebrewLetters( str, year, function( str, year){ // summary: //				parseYearHebrewLetters( str, year, function( str, year){ // summary: //					parseYearHebrewLetters( str, year, function( str, year){ // summary: //						parseYearHebrewLetters( str, year, function( str, year){ // summary: //							parseYearHebrewLetters( str, year, function( str, year){ // summary: //								parseYearHebrewLetters( str, year, function( str, year){ // summary: //									parseYearHebrewLetters( str, year, function( str, year){ // summary: //										parseYearHebrewLetters( str, year, function( str, year){ // summary: //											parseYearHebrewLetters( str, year, function( str, year){ // summary: //												parseYearHebrewLetters( str, year, function( str, year){ // summary: //													parseYearHebrewLetters( str, year, function( str, year){ // summary: //														parseYearHebrewLetters( str, year, function( str, year){ // summary: //															parseYearHebrewLetters( str, year, function( str, year){ // summary: //																parseYearHebrewLetters( str, year, function( str, year){ // summary: //																	parseYearHebrewLetters( str, year, function( str, year){ // summary: //																		parseYearHebrewLetters( str, year, function( str, year){ // summary: //																			parseYearHebrewLetters( str, year, function( str, year){ // summary: //																			parseYearHebrewLetters(
function __processArg(obj, key) {     var arg = null;     if (obj) {     for (var key in obj) {     if (Object.prototype.hasOwnProperty.call(obj, key)) {     arg = obj[key];     }     }     return arg; }
function __extends(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function __defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call
function clone (objectModelDeclaration) {     if (objectModelDeclaration === void 0) { objectModelDeclaration = {}; } else { var newObj = {}; if (objectModelDeclaration!= null) { for (var key in objectModelDeclaration) { if (Object.prototype.hasOwnProperty.call(objectModelDeclaration, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor? Object.getOwnPropertyDescriptor(objectModelDeclaration, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = objectModelDeclaration[key]; } } } newObj.default = objectModelDeclaration; return newObj; } }
instance.interceptors.response.use(interceptResponse); instance.interceptors.response.use(handleResponseError); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.parse(res.body);   }   return next(res); }); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.parse(res.body);   }   return next(res); }); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.parse(res.body);   }   return next(res); }); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.parse(res.body);   }   return next(res); }); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.parse(res.body);   }   return next(res); }); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.parse(res.body);   }   return next(res); }); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.parse(res.body);   }   return next(res); }); instance.interceptors.response.use(function interceptResponse(res, next) {   if (res.headers['content-type'] === 'application/json') {     res.body = JSON.
function __extends(d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; function __() { this.constructor = d; } __.prototype = b.prototype; d.prototype = new __(); d.__super__ = b.prototype; return d; }
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; }; var __metadata = (this && this.__metadata) || function (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); }; var __param = (this && this.__param) || function (paramIndex, decorator) {     return function (target, key) { decorator(target, key, paramIndex); } }; var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {     function adopt (value) { return value instanceof P? value : new P(function (resolve) { resolve(value); }); }     return new (P || (P = Promise))(function (resolve, reject) {         function fulfilled (value) { try { step(generator.next(value)); } catch (e) { reject(e); } }         function rejected (value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }         function step (result) { result.done? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }         step((generator = generator.apply(thisArg, _arguments || [])).next());     }); }; var __generator = (this && this.__generator) || function (thisArg, body) {     var _ = { label: 0, sent
function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(str, compressedData) {     function uncompressedData(
function getTextBlockRegExp(str, options) {   options = options || {};   const textBlockRegExp = options.textBlockRegExp || getTextBlockRegExp();   return textBlockRegExp.call(str, options); }
function elems (elems) {         for (let i in elems) {         elems[i].style.cssText = "display: none;"
function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100() {     function SamplingFrequency44100
function smartChanged(index, id, fields) {       var data = this[id].data;       _.each(fields, function(val, key) {
function mod(src, args) {     if (args && args.constructor === Array) return mod.apply(null, args);     return mod(src);
function actionsMatching(actions) {     var actionsMatching = [];     actions.forEach(function (action) {         if (actionsMatching.indexOf(action) === -1) {             actionsMatching.push(action);         }     });     return actionsMatching; }
function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts) {     super(opts);     this.authenticated = false     this.server = opts.server /***/ function Session(server, opts
function replace (str, search, replace) {     for (var i = 0; i < search.length; i += 1) {
function success(r) {                  debugger;                  this.grid.reload();
function gitbook(options, cb) {     if (typeof options === 'function') {         cb = options;         options = {};     }     if (typeof options ==='string') {         options = { gitbook: options };     }     if (typeof options === 'object') {         options = { gitbook: options };     }     if (typeof options === 'function') {         cb = options;         options = {};     }     if (typeof options ==='string') {         options = { gitbook: options };     }     if (typeof options === 'object') {         options = { gitbook: options };     }     if (typeof options === 'function') {         cb = options;         options = {};     }     if (typeof options ==='string') {         options = { gitbook: options };     }     if (typeof options === 'object') {         options = { gitbook: options };     }     if (typeof options === 'function') {         cb = options;         options = {};     }     if (typeof options ==='string') {         options = { gitbook: options };     }     if (typeof options === 'object') {         options = { gitbook: options };     }     if (typeof options === 'function') {         cb = options;         options = {};     }     if (typeof options ==='string') {         options = { gitbook: options };     }     if (typeof options === 'object') {         options = { gitbook: options };     }     if (typeof options === 'function') {         cb = options;         options = {};     }     if (typeof options ==='string') {         options = { gitbook: options };     }     if (typeof options === 'object') {         options = { gitbook: options };     }     if (typeof options === 'function') {         cb = options;         options = {};     }     if (typeof options ==='string') {         options = { gitbook:
this.pool.getConnection(function(err, connection) {     if(err) {            });
function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.stateTransition_ = function stateTransition_(state, fn, context) {     this.state
} else if (options.schema && body.schema && body.schema.type && body.schema.type === 'object') {             console.log('body parameter schema to object');             common.schemaToObject(body.schema,1,parameters,false);
function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {                     function previousValues(arr, fn) {
function test(test, me, i) {         if (test.cycles) {
function leader(_tempo_, _tick_) {         function tick() {         if (ticker) {         clearTimeout(ticker);         ticker= setTimeout(tick, max(16, 1000 / leader(_tempo_) - $.reel.cost));         $.reel.cost= (+new Date() + $.reel.cost - start) / 2;       } else {         setTimeout(tick, max(16, 1000 / leader(_tempo_) - $.reel.cost));         $.reel.cost= (+new Date() + $.reel.cost - start) / 2;       }
case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FAILEDFULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FAILEDFULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FAILEDFULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FAILEDFULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload;       return {     case `${ACTION_TYPES.CHECK_SERVICE_EXIST}_FULFILLED`:       const serviceExists =!!action.payload
function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {    function roomsToExit(rooms) {
function regex(string, seperator, regex) {     if (typeof regex === 'function') {     var match = regex.exec(string)     else     var seperator = seperator || '---'      , pattern = '^('
function KeyValueRecord(key, value) {     this._key = key;
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; };
function getInput(name, input) {     if (!input) {           throw 'Input does not exist:'+ name;     }
function checkboxRender(value, label) {             const { columnHeight, lineHeight, columnBorderWidth, colAlign, col: { columnAttr = '', editor }, } = this.props;             let justifyContent = '';
$(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find('> div').each( function(i) {               $(this).removeAttr('style').css( 'display', _cache_div[i] );             });           $(this)            .find
function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter(props, context) {     function TransitionAwareRouter
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; }
mirrorVertical: '좌우 반전',         fullScreen: '크기 선언',         codeView: '크기 선언',         quote: '크기 선언',         codeEdit: '크기 선언',         fullScreenEdit: '크기 선언 선언',         quoteEdit: '크기 선언 선언',         codeViewEdit: '크기 선언 선언 선언',         fullScreenEditEdit: '크기 선언 선언 선언 선언 선언',         quoteEditEdit: '크기 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 선언 �
function makeRows(offer) {     var rows = orderBookScreen.makeRows(offer);
function transaction( transactionData ) {  transaction.operations = transactionData.operations;  transaction.lengthDifference = transactionData.lengthDifference;  this.dmSurface.change( transaction, this.dmsurface.getSelection() ); }
function str_ (value, item) {      console.log(value);         str_ += item[0] + ':' + item[1] + ', ';
return '[' + typeTransformer(matches[1]) + ']';     case 'object': return '{' + typeTransformer(matches[1]) + '}';     case'string': return '"' + typeTransformer(matches[1]) + '"';     case 'number': return matches[1];     case 'boolean': return matches[1]? 'true' : 'false';     case 'null': return 'null';     case 'undefined': return 'undefined';     case 'function': return typeTransformer(matches[1]) + '(' + typeTransformer(matches[2]) + ')';     case'regexp': return typeTransformer(matches[1]) + '(' + typeTransformer(matches[2]) + ')';     case 'date': return typeTransformer(matches[1]) +'' + typeTransformer(matches[2]) +'' + typeTransformer(matches[3]) +'' + typeTransformer(matches[4]) +'' + typeTransformer(matches[5]) +'' + typeTransformer(matches[6]) +'' + typeTransformer(matches[7]) +'' + typeTransformer(matches[8]) +'' + typeTransformer(matches[9]) +'' + typeTransformer(matches[10]) +'' + typeTransformer(matches[11]) +'' + typeTransformer(matches[12]) +'' + typeTransformer(matches[13]) +'' + typeTransformer(matches[14]) +'' + typeTransformer(matches[15]) +'' + typeTransformer(matches[16]) +'' + typeTransformer(matches[17]) +'' + typeTransformer(matches[18]) +'' + typeTransformer(matches[19]) +'' + typeTransformer(matches[20]) +'' + typeTransformer(matches[21]) +'' + typeTransformer(matches[22]) +'' + typeTransformer(matches[23]) +'' + typeTransformer(matches[24]) +'' + typeTransformer(matches[25]) +'' + typeTransformer(matches[26]) +'' + typeTransformer(matches[27]) +'' + typeTransformer(matches[28]) +'' + typeTransformer(matches[29]) +'' + typeTransformer(matches[30]) +'' + typeTransformer(matches[31]) +'' + typeTransformer(matches[32]) +'' + typeTransformer(matches[
function edit(item, args) {         debugger;         if (window.File && window.FileReader && item.kind === 'folder' && item.data.provider && item.data.permissions && item.data.permissions.edit) {
function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {                     function reload() {
function stream_get(url, res, stream_cb) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {     function stream_cb(this) {
function loadFile() {
function multiply(a, b) {         var R = a * b; }
function xhr() {             if (this.readyState === 4 && /^[2]/.test(this.status)) {             }
function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options) {     function WebSocket(url, options
goog.require('ol.render.Feature'); goog.require('ol.render.FeatureEvent'); goog.require('ol.render.FeatureEventType'); goog.require('ol.render.Image'); goog.require('ol.render.ImageEvent'); goog.require('ol.render.ImageEventType'); goog.require('ol.render.Map'); goog.require('ol.render.MapEvent'); goog.require('ol.render.MapEventType'); goog.require('ol.render.Marker'); goog.require('ol.render.MarkerEvent'); goog.require('ol.render.MarkerEventType'); goog.require('ol.render.Polyline'); goog.require('ol.render.PolylineEvent'); goog.require('ol.render.PolylineEventType'); goog.require('ol.render.Polygon'); goog.require('ol.render.PolygonEvent'); goog.require('ol.render.PolygonEventType'); goog.require('ol.render.Rectangle'); goog.require('ol.render.RectangleEvent'); goog.require('ol.render.Text'); goog.require('ol.render.TextEvent'); goog.require('ol.render.TextEventType'); goog.require('ol.render.Tile'); goog.require('ol.render.TileEvent'); goog.require('ol.render.TileEventType'); goog.require('ol.render.Vector'); goog.require('ol.render.VectorEvent'); goog.require('ol.render.VectorEventType');
function getSiteType () {         if (CHAT || window.CHAT) {             return 'chat';
function vimiumFindMode(element, action) {     document.documentElement.classList[action]("vimiumFindMode");     action === "add"? DomUtils.UI.addElement(this.styleIn, element) : this.styleIn.remove();   },
function type_text (credit, au) {     if (false) {             credit_text = "(" + (credit+au) + ")";     } else {             credit_text = "(" + (credit+au) + ")";     }     if (false) {             au_text = "(" + (au+credit) + ")";     } else {             au_text = "(" + (au+credit) + ")";     } function type_text (credit, au) {     if (false) {             credit_text = "(" + (credit+au) + ")";     } else {             credit_text = "(" + (credit+au) + ")";     }     if (false) {             au_text = "(" + (au+credit) + ")";     } else {             au_text = "(" + (au+credit) + ")";     } function type_text (credit, au) {     if (false) {             credit_text = "(" + (credit+au) + ")";     } else {             credit_text = "(" + (credit+au) + ")";     }     if (false) {             au_text = "(" + (au+credit) + ")";     } else {             au_text = "(" + (au+credit) + ")";     } function type_text (credit, au) {     if (false) {             credit_text = "(" + (credit+au) + ")";     } else {             credit_text = "(" + (credit+au) + ")";     }     if (false) {             au_text = "(" + (au+credit) + ")";     } else {             au_text = "(" + (au+credit) + ")";     } function type_text (credit, au) {     if (false) {             credit_text = "(" + (credit+au) + ")";     } else {             credit_text = "(" + (credit+au) + ")";     }     if (false) {             au_text = "(" + (au+credit) + ")";     } else {             au_text = "(" + (au+credit) + ")";     } function type_text (credit, au) {     if (false) {             credit_text = "(" + (credit+au) + ")";     } else {
"1/3":  Vex.Flow.RESOLUTION * 3,   "1":    Vex.Flow.RESOLUTION / 1,   "2":    Vex.Flow.RESOLUTION / 2,   "3":    Vex.Flow.RESOLUTION / 3,   "4":    Vex.Flow.RESOLUTION / 4,   "5":    Vex.Flow.RESOLUTION / 5,   "6":    Vex.Flow.RESOLUTION / 6,   "7":    Vex.Flow.RESOLUTION / 7,   "8":    Vex.Flow.RESOLUTION / 8,   "9":    Vex.Flow.RESOLUTION / 9,   "10":  Vex.Flow.RESOLUTION / 10,   "11":  Vex.Flow.RESOLUTION / 11,   "12":  Vex.Flow.RESOLUTION / 12,   "13":  Vex.Flow.RESOLUTION / 13,   "14":  Vex.Flow.RESOLUTION / 14,   "15":  Vex.Flow.RESOLUTION / 15,   "16":  Vex.Flow.RESOLUTION / 16,   "17":  Vex.Flow.RESOLUTION / 17,   "18":  Vex.Flow.RESOLUTION / 18,   "19":  Vex.Flow.RESOLUTION / 19,   "20":  Vex.Flow.RESOLUTION / 20,   "21":  Vex.Flow.RESOLUTION / 21,   "22":  Vex.Flow.RESOLUTION / 22,   "23":  Vex.Flow.RESOLUTION / 23,   "24":  Vex.Flow.RESOLUTION / 24,   "25":  Vex.Flow.RESOLUTION / 25,   "26":  Vex.Flow.RESOLUTION / 26,   "27":  Vex.Flow.RESOLUTION / 27,   "28":  Vex.Flow.RESOLUTION / 28,   "29":  Vex.Flow.RESOLUTION / 29,   "30":  Vex.Flow.RESOLUTION / 30,   "31":  Vex.Flow.RESOLUTION / 31,   "32":  Vex.Flow.RESOLUTION / 32,   "33":  Vex.Flow.RESOLUTION / 33
function find( element, selector, options ) { return $( element ).find( selector, options ); };
$(document).ready(function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize', function() {     XSS.doc = $(document.body);     $(window).on('resize
function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse(rect, arguments) {   function createEllipse
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } } function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; } function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); } function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); } function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" ||!Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function
function widgetReco(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget, content, function(widget, content) {widgetReco(widget
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; }; var __metadata = (this && this.__metadata) || function (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); }; var __param = (this && this.__param) || function (paramIndex, decorator) {     return function (target, key) { decorator(target, key, paramIndex); } }; var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {     function adopt (value) { return value instanceof P? value : new P(function (resolve) { resolve(value); }); }     return new (P || (P = Promise))(function (resolve, reject) {         function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }         function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }         function step (result) { result.done? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }         step((generator = generator.apply(thisArg, _arguments || [])).next());     }); }; var __generator = (this && this.__generator) || function (thisArg, body) {     var _ = { label: 0, sent
function defineAssociationAccessors(sourceModel, assocType, targetModel, alias, association) {   var accessors   = this[assocType]  , singular    = inflect.singularize(alias)
point: function() { var s = this.stream; s.point.apply(s, arguments); },   sphere: function() { var s = this.stream; s.sphere.apply(s, arguments); }
; function sortJSON(a, b) {   if (typeof a ==='string') {     a = JSON.parse(a);   }   if (typeof b ==='string') {     b = JSON.parse(b);   }   if (typeof a === 'object' && typeof b === 'object') {     a = sort(a, b);   }   if (typeof a === 'object' && typeof b === 'object') {     b = sort(b, a);   }   return a; } function cacheJSON(a, b) {   if (typeof a ==='string') {     a = JSON.parse(a);   }   if (typeof b ==='string') {     b = JSON.parse(b);   }   if (typeof a === 'object' && typeof b === 'object') {     a = cache(a, b);   }   if (typeof a === 'object' && typeof b === 'object') {     b = cache(b, a);   }   return a; }
function close () {   self.emit('close');   if (!inBrowser) process.exit(0);   });  this.sock.on('error', function (err) {   self.emit('error', err);   if (!inBrowser) process.exit(0);   });  this.sock.on('data', function (data) {   self.emit('data', data);   if (!inBrowser) process.exit(0);   });  this.sock.on('end', function () {   self.emit('end');   if (!inBrowser) process.exit(0);   });  this.sock.on('close', function () {   self.emit('close');   if (!inBrowser) process.exit(0);   });  this.sock.on('error', function (err) {   self.emit('error', err);   if (!inBrowser) process.exit(0);   });  this.sock.on('data', function (data) {   self.emit('data', data);   if (!inBrowser) process.exit(0);   });  this.sock.on('end', function () {   self.emit('end');   if (!inBrowser) process.exit(0);   });  this.sock.on('close', function () {   self.emit('close');   if (!inBrowser) process.exit(0);   });  this.sock.on('error', function (err) {   self.emit('error', err);   if (!inBrowser) process.exit(0);   });  this.sock.on('data', function (data) {   self.emit('data', data);   if (!inBrowser) process.exit(0);   });  this.sock.on('end', function () {   self.emit('end');   if (!inBrowser) process.exit(0);   });  this.sock.on('close', function () {   self.emit('close');   if (!inBrowser) process.exit(0);   });  this.sock.on('error', function (err) {   self.emit('error', err);   if (!inBrowser) process.exit(0);   });  this.sock.on('data', function (data) {   self.emit('data', data);   if (!inBrowser
function resolve(str, ctx) {     out += ctx.resolve(str) }
function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer) {         this.buffer[block['hash']] = { /***/ function putBlockOnHold(block) {     if (!block['hash'] in this.buffer
function jsDAV_iQuota() {     this.REGBASE = this.REGBASE | jsDAV.__IQUOTA__;
function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props) {     function TaskTable(props)
function topUpRooms (max, min) {
function maxDate(newMax) {     var oldMax = this.element._flatpickr.get('maxDate');     if (oldMax!== newMax) {         run.scheduleOnce('afterRender', this, function() {         this.element._flatpickr.set('maxDate', newMax);       });     }
function fft (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t
function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(x, y, w, h) {   function Node(
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function")? call : self; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj!== Symbol.prototype? "symbol" : typeof obj; }; } return _typeof(obj); }  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function")? call : self; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass,
console.log(error);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(attachment);                                    console.log(
function Home(props) {   return (     <CSSTransitionGroup transitionName="home">       <div className="container">         <div className="row">           <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">             <div className="row">               <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                 <div className="row">                   <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                     <div className="row">                       <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                         <div className="row">                           <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                             <div className="row">                               <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                 <div className="row">                                   <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                     <div className="row">                                       <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                         <div className="row">                                           <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                             <div className="row">                                               <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                                 <div className="row">                                                   <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                                     <div className="row">                                                       <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                                         <div className="row">                                                           <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12">                                                             <div className="row">
function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath, snapshotStoreFolder, config) {     function load(dumpBasePath,
function moveStep(id, prev_id) {       console.log("I am looking");       var dataToBeSend = {'id': id, 'prev_id': prev_id};
case "FunctionDeclaration":             debugger;             return new astExpression.FunctionDeclaration(node.loc, transform(node.id), transform(node.params), transform(node.body));
function __processArg(obj, key) { var arg = null; if (obj) { var desc = Object.getOwnPropertyDescriptor(obj, key); if (desc && (desc.get || desc.set)) { obj[key] = desc.get.call(obj, key, arg) || null; } else { obj[key] = arg; } } return obj; }  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function")? call : self; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj!== Symbol.prototype? "symbol" : typeof obj; }; } return _typeof(obj); }  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function")? call : self; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.
function updateFavoriteTeams($(this).attr("data-team"), action, add) {     console.log("CLICK " + action);     console.log($(this).attr("data-team"));     updateFavoriteTeams($(this).attr("data-team"), action, add);
function size(size, width, height) {     function size(size, width, height) {         function size(size, width, height) {             function size(size, width, height) {                 function size(size, width, height) {                     function size(size, width, height) {                         function size(size, width, height) {                             function size(size, width, height) {                                 function size(size, width, height) {                                     function size(size, width, height) {                                         function size(size, width, height) {                                             function size(size, width, height) {                                                 function size(size, width, height) {                                                     function size(size, width, height) {                                                         function size(size, width, height) {                                                             function size(size, width, height) {                                                                 function size(size, width, height) {                                                                     function size(size, width, height) {                                                                         function size(size, width, height) {                                                                             function size(size, width, height) {                                                                                 function size(size, width, height) {                                                                                     function size(size, width, height) {                                                                                         function size(size, width, height) {                                                                                             function size(size, width, height) {                                                                                                 function size(size, width, height) {                                                                                                     function size(size, width, height) {                                                                                                         function size(size, width, height) {                                                                                                             function size(size, width, height) {                                                                                                                 function size(size, width, height) {                                                                                                                     function size(size, width, height) {                                                                                                                         function size(size, width, height) {                                                                                                                             function size(size, width, height) {                                                                                                                                 function size(size, width, height) {                                                                                                                             function size(size, width, height) {                                                                                                                                 function size(size, width, height) {                                                                                                                                 function size(size, width, height) {                                                                                                                                 function size(size, width, height) {                                                                                                                                 function size(size, width, height) {                                                                                                                                 function size(size, width, height) {
lobby: 'Entrée',           openArea: 'Open space',           staffRoom: 'Salle du personnel',
function __defineProperty(obj, name, value) {     if (value === undefined) {     Object.defineProperty(obj, name, {     value: value,     enumerable: true,     configurable: true,     writable: true });     } else {     Object.defineProperty(obj, name, {     value: value,     enumerable: true,     configurable: true,     writable: true });     } }
function tagIsComponent(tag, isComponent) {       ko.components.tagIsComponent(tag, isComponent);     }
function doAdd(i) {                             this.markers[i].keep = true;                             doAdd = true;
function forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx, this, req, res, next) {     var headers = headerTransforms.forRequest(ctx,
function getTruckParams(truck) {                 var truckParams = new Array();                 var truck_length = permaInfo[preferences.value_lengthIdx];                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams.length] = truck;                 truckParams[truckParams
function push(newArgs, callbacks) {     console.log(newArgs, callbacks);     if(document.body){
function __defineProperty(obj, key, value) { if (typeof Reflect === "object" && typeof Reflect.defineProperty === "function") { var defineProperties = function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
function CollectionView(collection, options) {         Minionette.View.apply(this, arguments);
function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {     function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {         function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {             function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                 function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                     function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                         function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                             function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                                 function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                                     function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                                         function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                                             function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                                                 function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                                                     function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag_on) {                                                         function action_name_black_list (pathname_prefix, action_name, action_name_black_list, app_tag
function Sleeping() {   function Sleeping() {     function Sleeping() {       function Sleeping() {         function Sleeping() {           function Sleeping() {             function Sleeping() {               function Sleeping() {                 function Sleeping() {                   function Sleeping() {                     function Sleeping() {                       function Sleeping() {                         function Sleeping() {                           function Sleeping() {                             function Sleeping() {                               function Sleeping() {                                 function Sleeping() {                                   function Sleeping() {                                     function Sleeping() {                                       function Sleeping() {                                         function Sleeping() {                                           function Sleeping() {                                             function Sleeping() {                                               function Sleeping() {                                                 function Sleeping() {                                                   function Sleeping() {                                                     function Sleeping() {                                                       function Sleeping() {                                                         function Sleeping() {                                                           function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {                                                             function Sleeping() {
function applyClassName(element, className, includeClones, includeChildren, restriction) {     const appliedClassName = appliedClassName || className || 'hovering';     const includeClones =!!!excludeClones;     const includeChildren = restriction!== 'directParentsOnly';
function getVersionForNumber(n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str, n) {    function getVersionForNumber(str
function table(header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header, rows) {   function table(table, header
function create_object(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a class as a function'); } var create_function = function create_function(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_object = function create_object(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_function = function create_function(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_object = function create_object(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_function = function create_function(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_function = function create_function(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_function = function create_function(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_function = function create_function(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function as a function'); } var create_function = function create_function(obj, args, klass) { if (typeof obj!== 'function' && (typeof obj!== 'object' || obj === null)) { throw new TypeError('Cannot call a function
function zip(a, b, c) {     expect(Kefir.zip([a, b, c])).toEmit([[1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5], [6, 9, 8], '<end>'], () => {       send(a, [1], [1, 0, 3], [4, 2, 5
function _template (_ref) {   function _template (_ref2) {   function _template (_ref3) {   function _template (_ref4) {   function _template (_ref5) {   function _template (_ref6) {   function _template (_ref7) {   function _template (_ref8) {   function _template (_ref9) {   function _template (_ref10) {   function _template (_ref11) {   function _template (_ref12) {   function _template (_ref13) {   function _template (_ref14) {   function _template (_ref15) {   function _template (_ref16) {   function _template (_ref17) {   function _template (_ref18) {   function _template (_ref19) {   function _template (_ref20) {   function _template (_ref21) {   function _template (_ref22) {   function _template (_ref23) {   function _template (_ref24) {   function _template (_ref25) {   function _template (_ref26) {   function _template (_ref27) {   function _template (_ref28) {   function _template (_ref29) {   function _template (_ref30) {   function _template (_ref31) {   function _template (_ref32) {   function _template (_ref33) {   function _template (_ref34) {   function _template (_ref35) {   function _template (_ref36) {   function _template (_ref37) {   function _template (_ref38) {   function _template (_ref39) {   function _template (_ref40) {   function _template (_ref41) {   function _template (_ref42) {   function _template (_ref43) {   function _template (_ref44) {   function _template (_ref45) {   function _template (_ref46) {   function _template (_ref47) {   function _template (_ref48) {   function _template (_ref49) {   function _template (_ref50) {   function _template (_ref51) {   function
function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid;     function _via_metadata(fid, mid, z, xy, metadata) {   this.fid = fid;              this.mid = mid
function fullResizeVideo(element, options) {  function fullResizeVideo_1(element, options) {  function fullResizeVideo_2(element, options) {  function fullResizeVideo_3(element, options) {  function fullResizeVideo_4(element, options) {  function fullResizeVideo_5(element, options) {  function fullResizeVideo_6(element, options) {  function fullResizeVideo_7(element, options) {  function fullResizeVideo_8(element, options) {  function fullResizeVideo_9(element, options) {  function fullResizeVideo_10(element, options) {  function fullResizeVideo_11(element, options) {  function fullResizeVideo_12(element, options) {  function fullResizeVideo_13(element, options) {  function fullResizeVideo_14(element, options) {  function fullResizeVideo_15(element, options) {  function fullResizeVideo_16(element, options) {  function fullResizeVideo_17(element, options) {  function fullResizeVideo_18(element, options) {  function fullResizeVideo_19(element, options) {  function fullResizeVideo_20(element, options) {  function fullResizeVideo_21(element, options) {  function fullResizeVideo_22(element, options) {  function fullResizeVideo_23(element, options) {  function fullResizeVideo_24(element, options) {  function fullResizeVideo_25(element, options) {  function fullResizeVideo_26(element, options) {  function fullResizeVideo_27(element, options) {  function fullResizeVideo_28(element, options) {  function fullResizeVideo_29(element, options) {  function fullResizeVideo_30(element, options) {  function fullResizeVideo_31(element, options) {  function fullResizeVideo_32(element, options) {  function fullResizeVideo_33(element, options) {  function fullResizeVideo_34(element, options) {  function fullResizeVideo_35(element, options) {  function fullResizeVideo_36(element, options) {  function fullResizeVideo_37(element, options) {  function fullResizeVideo_38(element, options) {  function fullResizeVideo_
Template.sidebarItem.onRendered(function() {  console.log('sidebarItem', this.data); });
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; }
function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(arrayBuffer, offset, length) {     function Uint32Array(array
function render() {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = true;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;         setTimeout(function () {         if (this.hasUploaded) {         this.$el.trigger('change');         this.hasUploaded = false;
function _setGeneratedUser(properties) {       var generatedId = localStorage.getObject(this.generatedIdKey);       var user = { id: generatedId, properties: properties };
case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':                                          break; case 'publish':
function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min) {    function min(val, min
function scaleBy(factor) {     var desiredPosition = myBounds.topLeft().subPt(worldSize.subPt(this.owner.worldPoint(pt(myWidth, myHeight))).scaleBy(factor));
function methods (root, methods) {     if (typeof exports === 'object') {     for (var key in methods) {       exports[key] = methods[key];     } } else if (typeof define === 'function' && define.amd) {     define(['exports'], function (exports) {     for (var key in methods) {       exports[key] = methods[key];     } }); }
const currentRule = rules[rules.length - 1];
break       case '--ecma8':           e = '--ecma8'           break       case '--ecma9':           e = '--ecma9'           break       case '--ecma10':           e = '--ecma10'           break       case '--ecma11':           e = '--ecma11'           break       case '--ecma12':           e = '--ecma12'           break       case '--ecma13':           e = '--ecma13'           break       case '--ecma14':           e = '--ecma14'           break       case '--ecma15':           e = '--ecma15'           break       case '--ecma16':           e = '--ecma16'           break       case '--ecma17':           e = '--ecma17'           break       case '--ecma18':           e = '--ecma18'           break       case '--ecma19':           e = '--ecma19'           break       case '--ecma20':           e = '--ecma20'           break       case '--ecma21':           e = '--ecma21'           break       case '--ecma22':           e = '--ecma22'           break       case '--ecma23':           e = '--ecma23'           break       case '--ecma24':           e = '--ecma24'           break       case '--ecma25':           e = '--ecma25'           break       case '--ecma26':           e = '--ecma26'           break       case '--ecma27':           e = '--ecma27'           break       case '--ecma28':           e = '--ecma28'           break       case '--ecma29':           e = '--ecma29'           break       case '--ecma30':           e = '--ecma30'           break       case '--ecma31':           e = '--ecma31'           break       case '--ecma32':           e = '--ecma32'           break       case '--ecma33':           e = '--ecma33'           break       case '--ecma34':           e = '--ecma34'           break       case '--ecma35':           e = '--ecma35'           break       case '--ecma36':           e = '--ecma36'           break       case '--ecma37':           e = '--ecma37'
} };  module.exports = mongoose.model('Company', CompanySchema);
function _ElementRemoved(value, args) {              var collection = args.OldValue;              var count = collection.GetCount();              for (var i = 0; i < count; i++) {                  this._ElementRemoved(collection.GetValueAt(i), args);              }
function setApplicationID(applicationID) {             this.applicationID = applicationID;             for (var i = 0; i < extraHeaders.length; ++i) {                 xmlHttp.setRequestHeader('X-Algolia-Application-Id', extraHeaders[i].key, extraHeaders[i].value);             }
function setValue( aValue ) {  debug( 'Setting value: %s.', this._aValue );  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;  this._aValue = aValue;
function notFound (data, p) {           console.log(p);           if (p === 404) {
function writeAttribute(child, attribute, value) {             if (value = child.readAttribute(attribute))               new_child.writeAttribute(attribute, value); });
throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"); break; case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:             throw("Incomplete
return originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];       break; case DIRECTIONS[0]:
function States(str, states) {     function States(str, states) {         function States(str, states) {             function States(str, states) {                 function States(str, states) {                     function States(str, states) {                         function States(str, states) {                             function States(str, states) {                                 function States(str, states) {                                     function States(str, states) {                                         function States(str, states) {                                             function States(str, states) {                                                 function States(str, states) {                                                     function States(str, states) {                                                         function States(str, states) {                                                             function States(str, states) {                                                                 function States(str, states) {                                                                     function States(str, states) {                                                                         function States(str, states) {                                                                             function States(str, states) {                                                                                 function States(str, states) {                                                                                     function States(str, states) {                                                                                         function States(str, states) {                                                                                             function States(str, states) {                                                                                                 function States(str, states) {                                                                                                     function States(str, states) {                                                                                                         function States(str, states) {                                                                                                             function States(str, states) {                                                                                                                 function States(str, states) {                                                                                                                     function States(str, states) {                                                                                                                         function States(str, states) {                                                                                                                             function States(str, states) {                                                                                                                                 function States(str, states) {                                                                                                                                     function States(str, states) {                                                                                                                                         function States(str, states) {                                                                                                                                             function States(str, states) {                                                                                                                                                 function States(str, states) {                                                                                                                                                     function States(str, states) {                                                                                                                                                         function States(str, states) {                                                                                                                                                             function States(str, states) {                                                                                                                                                                 function States(str, states) {                                                                                                                                                                     function States(str, states) {                                                                                                                                                                         function States(str, states) {                                                                                                                                                                             function States(str, states) {                                                                                                                                                                                 function States(str, states) {
function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(element, includeMargin) {   function outerHeight(
function simple_combo(key, value, callback) {                 this.keyListener.simple_combo(key, value, callback);             }
to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "Memo",         to: "Zu",         to: "An",         memo: "
function PDC(PDC, UserName) {     function PDC(PDC, UserName) {         function PDC(PDC, UserName) {             function PDC(PDC, UserName) {                 function PDC(PDC, UserName) {                     function PDC(PDC, UserName) {                         function PDC(PDC, UserName) {                             function PDC(PDC, UserName) {                                 function PDC(PDC, UserName) {                                     function PDC(PDC, UserName) {                                         function PDC(PDC, UserName) {                                             function PDC(PDC, UserName) {                                                 function PDC(PDC, UserName) {                                                     function PDC(PDC, UserName) {                                                         function PDC(PDC, UserName) {                                                             function PDC(PDC, UserName) {                                                                 function PDC(PDC, UserName) {                                                                     function PDC(PDC, UserName) {                                                                         function PDC(PDC, UserName) {                                                                             function PDC(PDC, UserName) {                                                                                 function PDC(PDC, UserName) {                                                                                     function PDC(PDC, UserName) {                                                                                         function PDC(PDC, UserName) {                                                                                             function PDC(PDC, UserName) {                                                                                                 function PDC(PDC, UserName) {                                                                                                     function PDC(PDC, UserName) {                                                                                                         function PDC(PDC, UserName) {                                                                                                             function PDC(PDC, UserName) {                                                                                                                 function PDC(PDC, UserName) {                                                                                                                     function PDC(PDC, UserName) {                                                                                                                         function PDC(PDC, UserName) {                                                                                                                             function PDC(PDC, UserName) {                                                                                                                                 function PDC(PDC, UserName) {                                                                                                                                     function PDC(PDC, UserName) {                                                                                                                                     function PDC(PDC, UserName) {                                                                                                                                     function PDC(PDC, UserName) {                                                                                                                                     function PDC(PDC, UserName) {                                                                                                                                     function PDC(PDC, UserName) {                                                                                                                                     function PDC(PDC, UserName) {
function handleMultiMinusButtonTap(e) {     this.multiData.splice(e.item.idx, 1);     this.change(this.multiData);};
function play() {       let p = originalPlay.apply(this, arguments);       if (p) {
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; } function __metadata (k, v) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") r = Reflect.metadata(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; }
$("#github").removeClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github").addClass('hidden');     }else if (value = 'asn'){         $("#github
function keyNotFound(context, key, parentKey) {       if (error) {       console.log(`${context} key \'${key}\' not found in ${parentKey}`);       error = true;
function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.PointCloudOctreeGeometryNode(name, pco, boundingBox, level) {     function Potree.
function error(error) {     console.log(error);     process.exit(1);   }
function graphql() {       const graphql = stashedSpecs.graphql = stashedSpecs.graphql || {};       graphql.path = graphql.path || '/graphql';
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self;
function __construct(viewFolder, controller, beforeFilters) {     this._viewFolder = viewFolder;     this.controller = controller;     this.beforeFilters = beforeFilters; } //# sourceMappingURL=base.js.map
function binding(path, verb, callbacks) {     this.app[verb || 'all'](path, callbacks);
function ButtonButton(props) {   return (     <Button {...props} style={styles.button}>       {props.children}     </Button>   ); }  ButtonButton.propTypes = {   children: React.PropTypes.node,   style: React.PropTypes.object, };  ButtonButton.defaultProps = {   style: {}, };  export default ButtonButton;
function _aria() {   function _format() {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _aria( previous ) {   function _
function _originalOnDisconnect(methodName, args) {     if (typeof this._originalOnDisconnect[methodName] === 'function') {     return this._originalOnDisconnect[methodName].apply(this._originalOnDisconnect, args);     }     return this._originalOnDisconnect[methodName].apply(this._originalOnDisconnect, [methodName].concat(Array.prototype.slice.call(arguments, 1)));
function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdatedAppliedFilters(payload, appliedFilters) {     function getUpdated
function serverAndClient(options, cb) {   debug('server-and-client');   if (typeof options === 'function') {     cb = options;     options = {};   }   if (typeof options === 'object') {     debug('server-and-client', options);   }   if (typeof options ==='string') {     debug('server-and-client', options);   }   if (typeof options === 'function') {     cb = options;     options = {};   }   if (typeof options === 'object') {     debug('server-and-client', options);   }   if (typeof options ==='string') {     debug('server-and-client', options);   }   if (typeof options === 'function') {     cb = options;     options = {};   }   if (typeof options === 'object') {     debug('server-and-client', options);   }   if (typeof options ==='string') {     debug('server-and-client', options);   }   if (typeof options === 'function') {     cb = options;     options = {};   }   if (typeof options === 'object') {     debug('server-and-client', options);   }   if (typeof options ==='string') {     debug('server-and-client', options);   }   if (typeof options === 'function') {     cb = options;     options = {};   }   if (typeof options === 'object') {     debug('server-and-client', options);   }   if (typeof options ==='string') {     debug('server-and-client', options);   }   if (typeof options === 'function') {     cb = options;     options = {};   }   if (typeof options === 'object') {     debug('server-and-client', options);   }   if (typeof options ==='string') {     debug('server-and-client', options);   }   if (typeof options === 'function') {     cb = options;     options = {}
function CSSwhat() {   function CSSwhat() {     function CSSwhat() {       function CSSwhat() {         function CSSwhat() {           function CSSwhat() {             function CSSwhat() {               function CSSwhat() {                 function CSSwhat() {                   function CSSwhat() {                     function CSSwhat() {                       function CSSwhat() {                         function CSSwhat() {                           function CSSwhat() {                             function CSSwhat() {                               function CSSwhat() {                                 function CSSwhat() {                                   function CSSwhat() {                                     function CSSwhat() {                                       function CSSwhat() {                                         function CSSwhat() {                                           function CSSwhat() {                                             function CSSwhat() {                                               function CSSwhat() {                                                 function CSSwhat() {                                                   function CSSwhat() {                                                     function CSSwhat() {                                                       function CSSwhat() {                                                         function CSSwhat() {                                                           function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {                                                             function CSSwhat() {
function addHeightgraph(geometry) {             console.log(geometry);             const heightgraph = orsObjectsFactory.createMapAction(-1, undefined, geometry, undefined, undefined);
function constring (constring, contype) {     if (constring == null || constring.trim() === '') {     throw 'constring must not be null or empty';     if (contype == null || contype.trim() === '') {     throw 'contype must not be null or empty';
function axisTipTriangle(chart, handle) {   triangle.call(this, chart, handle); }  axisTipTriangle.prototype = Object.create(handle.prototype); axisTipTriangle.prototype.constructor = axisTipTriangle;  function axisTipRect(chart, handle) {   handle.call(this, chart, handle); }  axisTipRect.prototype = Object.create(handle.prototype); axisTipRect.prototype.constructor = axisTipRect;  function axisTipCircle(chart, handle) {   handle.call(this, chart, handle); }  axisTipCircle.prototype = Object.create(handle.prototype); axisTipCircle.prototype.constructor = axisTipCircle;
function ConnectedInstanceCard(props) {   return (     <Grid>       <Cell>         <ConnectedInstanceCard {...props} />       </Cell>     </Grid>   ) }  export default ConnectedInstanceCard
function is_editable() {     if (window.hasOwnProperty('is_editable') && is_editable) {         return true;     } else {         return false;     } } else if (window.hasOwnProperty('is_admin') && is_admin) {     function is_editable() {         if (window.hasOwnProperty('is_editable') && is_editable) {             return true;         } else {             return false;         }     } else if (window.hasOwnProperty('is_admin') && is_admin) {         function is_editable() {             if (window.hasOwnProperty('is_editable') && is_editable) {                 return true;             } else {                 return false;             }         } else if (window.hasOwnProperty('is_admin') && is_admin) {             function is_editable() {                 if (window.hasOwnProperty('is_editable') && is_editable) {                     return true;                 } else {                     return false;                 }             } else if (window.hasOwnProperty('is_admin') && is_admin) {                 function is_editable() {                     if (window.hasOwnProperty('is_editable') && is_editable) {                         return true;                     } else {                         return false;                     }                 } else if (window.hasOwnProperty('is_admin') && is_admin) {                     function is_editable() {                         if (window.hasOwnProperty('is_editable') && is_editable) {                             return true;                         } else {                             return false;                         }                     } else if (window.hasOwnProperty('is_admin') && is_admin) {                         function is_editable() {                             if (window.hasOwnProperty('is_editable') && is_editable) {                                 return true;                             } else {                                 return false;                             }                         } else if (window.hasOwnProperty('is_admin') && is_admin) {                             function is_editable() {                                 if (window.hasOwnProperty('is_editable') && is_editable) {                                     return true;                                 } else {                                     return false;                                 }                             } else
function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(date, endDate, timeGranularity, direction, startingAt, limit, callback) {     function topRange(
: function (e, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _
function ObjectComponent() {   function ObjectComponent() {     ObjectComponent.__super__.constructor.apply(this, arguments);   }    ObjectComponent.prototype.attachMouseListenersDocumentExtended = function attachMouseListenersDocumentExtended() {     ObjectComponent.__super__.attachMouseListenersDocumentExtended.apply(this, arguments);   };    ObjectComponent.prototype.detachMouseListenersDocumentExtended = function detachMouseListenersDocumentExtended() {     ObjectComponent.__super__.detachMouseListenersDocumentExtended.apply(this, arguments);   };    ObjectComponent.prototype.normalize = function normalize() {     ObjectComponent.__super__.normalize.apply(this, arguments);   };    ObjectComponent.prototype.map = function map() {     ObjectComponent.__super__.map.apply(this, arguments);   };    ObjectComponent.prototype.attachMouseListeners = function attachMouseListeners() {     ObjectComponent.__super__.attachMouseListeners.apply(this, arguments);   };    ObjectComponent.prototype.detachMouseListeners = function detachMouseListeners() {     ObjectComponent.__super__.detachMouseListeners.apply(this, arguments);   };    ObjectComponent.prototype.attachMouseListenersDocumentExtended = function attachMouseListenersDocumentExtended() {     ObjectComponent.__super__.attachMouseListenersDocumentExtended.apply(this, arguments);   };    ObjectComponent.prototype.detachMouseListenersDocumentExtended = function detachMouseListenersDocumentExtended() {     ObjectComponent.__super__.detachMouseListenersDocumentExtended.apply(this, arguments);   };    ObjectComponent.prototype.attachMouseListenersDocumentExtended = function attachMouseListenersDocumentExtended() {     ObjectComponent.__super__.attachMouseListenersDocumentExtended.apply(this, arguments);   };    ObjectComponent.prototype.detachMouseListenersDocumentExtended = function detachMouseListenersDocumentExtended() {     ObjectComponent.__super__.detachMouseListenersDocumentExtended.apply(this, arguments);   };    ObjectComponent.prototype.attachMouseListenersDocumentExtended = function attachMouseListenersDocumentExtended() {     ObjectComponent.__super__.attachMouseListenersDocumentExtended.apply(this, arguments);   };    ObjectComponent.prototype.detachMouseListenersDocument
function changeShort () {   const args = Array.prototype.slice.call(arguments, 0)   if (args.length === 1) {     return changeShort(args[0])   } else if (args.length === 2) {     return changeShort(args[0], args[1])   } else if (args.length === 3) {     return changeShort(args[0], args[1], args[2])   } else if (args.length === 4) {     return changeShort(args[0], args[1], args[2], args[3])   } else if (args.length === 5) {     return changeShort(args[0], args[1], args[2], args[3], args[4])   } else if (args.length === 6) {     return changeShort(args[0], args[1], args[2], args[3], args[4], args[5])   } else if (args.length === 7) {     return changeShort(args[0], args[1], args[2], args[3], args[4], args[5], args[6])   } else if (args.length === 8) {     return changeShort(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7])   } else if (args.length === 9) {     return changeShort(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8])   } else if (args.length === 10) {     return changeShort(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9])   } else if (args.length === 11) {     return changeShort(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10])   } else if (args.length === 12) {     return change
function static(req, res, next) {   fs.readdir(root + "/static", function (err, files) {     if (err) {       return next(err);     }     files.forEach(function (file) {       fs.stat(root + "/static/" + file, function (err, stat) {         if (err) {           return next(err);         }         if (stat.isDirectory()) {           fs.readdir(root + "/static/" + file, function (err, files) {             if (err) {               return next(err);             }             files.forEach(function (file) {               fs.stat(root + "/static/" + file + "/" + file, function (err, stat) {                 if (err) {                   return next(err);                 }                 if (stat.isDirectory()) {                   fs.readdir(root + "/static/" + file + "/" + file, function (err, files) {                     if (err) {                       return next(err);                     }                     files.forEach(function (file) {                       fs.stat(root + "/static/" + file + "/" + file + "/" + file, function (err, stat) {                         if (err) {                           return next(err);                         }                         if (stat.isDirectory()) {                           fs.readdir(root + "/static/" + file + "/" + file + "/" + file, function (err, files) {                             if (err) {                               return next(err);                             }                             files.forEach(function (file) {                               fs.stat(root + "/static/" + file + "/" + file + "/" + file, function (err, stat) {                                 if (err) {                                   return next(err);                                 }                                 if (stat.isDirectory()) {                                   fs.readdir(root + "/static/" + file + "/" + file + "/" + file, function (err, files) {                                     if (err) {                                       return next(err);                                     }                                     files.forEach(function (file) {                                       fs.stat(root + "/static/"
function isEmpty(obj) {       expect(isEmpty(obj)).toBe(false, "for empty object literal array");       expect(isEmpty({foo: 1})).toBe(false, "for empty object literal object");       const array = new Array();       array.push('1');
function loggedXhrPollError(err) {     if (err.message = 'xhr poll error') {     if (loggedXhrPollError) {
function handleMouseMove(evt) {     if (evt.target.tagName === 'INPUT') {     if (evt.target.type === 'checkbox' || evt.target.type === 'radio') {     if (evt.target.checked) {     document.addEventListener('mousemove', handleMouseMove, true);     document.addEventListener('selectstart', preventDefault, true);     } else {     document.removeEventListener('mousemove', handleMouseMove, true);     document.removeEventListener('selectstart', preventDefault, true);     }     }     }     function preventDefault(evt) {     if (evt.target.tagName === 'INPUT') {     if (evt.target.type === 'checkbox' || evt.target.type === 'radio') {     if (evt.target.checked) {     document.removeEventListener('mousemove', handleMouseMove, true);     document.removeEventListener('selectstart', preventDefault, true);     } else {     document.removeEventListener('mousemove', handleMouseMove, true);     document.removeEventListener('selectstart', preventDefault, true);     }     }     }
function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() { function isIPad() {
function BaobabTest(props) {   return (     <div>       <Baobab {...props} />     </div>   ); }  export default BaobabTest;
function TextInputUnit() {   function TextInputUnit() {     function TextInputUnit() {       function TextInputUnit() {         function TextInputUnit() {           function TextInputUnit() {             function TextInputUnit() {               function TextInputUnit() {                 function TextInputUnit() {                   function TextInputUnit() {                     function TextInputUnit() {                       function TextInputUnit() {                         function TextInputUnit() {                           function TextInputUnit() {                             function TextInputUnit() {                               function TextInputUnit() {                                 function TextInputUnit() {                                   function TextInputUnit() {                                     function TextInputUnit() {                                       function TextInputUnit() {                                         function TextInputUnit() {                                           function TextInputUnit() {                                             function TextInputUnit() {                                               function TextInputUnit() {                                                 function TextInputUnit() {                                                   function TextInputUnit() {                                                     function TextInputUnit() {                                                       function TextInputUnit() {                                                         function TextInputUnit() {                                                           function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit() {                                                             function TextInputUnit()
function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) { function geom(x, y, r, g, b, a) {
function Utils() {   function Utils() {     function Utils() {       function Utils() {         function Utils() {           function Utils() {             function Utils() {               function Utils() {                 function Utils() {                   function Utils() {                     function Utils() {                       function Utils() {                         function Utils() {                           function Utils() {                             function Utils() {                               function Utils() {                                 function Utils() {                                   function Utils() {                                     function Utils() {                                       function Utils() {                                         function Utils() {                                           function Utils() {                                             function Utils() {                                               function Utils() {                                                 function Utils() {                                                   function Utils() {                                                     function Utils() {                                                       function Utils() {                                                         function Utils() {                                                           function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils() {                                                             function Utils
function show_unread_counts_in_title($modal) {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWSBLUR.Preferences.show_unread_counts_in_title) {                 $('input[name=show_unread_counts_in_title]', $modal).each(function() {             if (NEWS
function set(obj, key, value) {     if (_.isUndefined(value)) {                 throw "parameter " + key + " has not been set.";             }
function tag_input_keypress(event){     keyCode = event.keyCode || event.which; if (keyCode == BACKSPACE) {
function onEditorTextPlusPlacementClick(e) { ];    if (this._editorTextPlusPlacements[e.target.id]) { ];        this._editorTextPlusPlacements[e.target.id].focus(); ];    } else { ];        this._editorTextPlusPlacements[e.target.id] = document.createElement("div"); ];        this._editorTextPlusPlacements[e.target.id].id = e.target.id; ];        this._editorTextPlusPlacements[e.target.id].className = "editor-text-plus-placement"; ];        this._editorTextPlusPlacements[e.target.id].style.display = "none"; ];        this._editorTextPlusPlacements[e.target.id].style.position = "absolute"; ];        this._editorTextPlusPlacements[e.target.id].style.left = "0px"; ];        this._editorTextPlusPlacements[e.target.id].style.top = "0px"; ];        this._editorTextPlusPlacements[e.target.id].style.width = "100%"; ];        this._editorTextPlusPlacements[e.target.id].style.height = "100%"; ];        this._editorTextPlusPlacements[e.target.id].style.backgroundColor = "white"; ];        this._editorTextPlusPlacements[e.target.id].style.color = "black"; ];        this._editorTextPlusPlacements[e.target.id].style.fontSize = "12px"; ];        this._editorTextPlusPlacements[e.target.id].style.fontWeight = "bold"; ];        this._editorTextPlusPlacements[e.target.id].style.textAlign = "center"; ];        this._editorTextPlusPlacements[e.target.id].style.textDecoration = "underline"; ];        this._editorTextPlusPlacements[e.target.id].style.textDecorationLine = "underline"; ];        this._editorTextPlusPlacements[e.target.id].style.textTransform = "uppercase"; ];        this._editorTextPlusPlacements[e.target.id].style.textTransformLine
function f(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t
google.maps.event.addListener(e.overlay.getPath(),'move_at', function () {         console.log(arguments);                }.bind(this));
function handler(e) {     if (e.target.tagName.toLowerCase() === 'object') {         if (e.target.tagName.toLowerCase() === 'object') {             if (e.target.tagName.toLowerCase() === 'object') {                 if (e.target.tagName.toLowerCase() === 'object') {                     if (e.target.tagName.toLowerCase() === 'object') {                         if (e.target.tagName.toLowerCase() === 'object') {                             if (e.target.tagName.toLowerCase() === 'object') {                                 if (e.target.tagName.toLowerCase() === 'object') {                                     if (e.target.tagName.toLowerCase() === 'object') {                                         if (e.target.tagName.toLowerCase() === 'object') {                                             if (e.target.tagName.toLowerCase() === 'object') {                                                 if (e.target.tagName.toLowerCase() === 'object') {                                                     if (e.target.tagName.toLowerCase() === 'object') {                                                         if (e.target.tagName.toLowerCase() === 'object') {                                                             if (e.target.tagName.toLowerCase() === 'object') {                                                                 if (e.target.tagName.toLowerCase() === 'object') {                                                                     if (e.target.tagName.toLowerCase() === 'object') {                                                                         if (e.target.tagName.toLowerCase() === 'object') {                                                                             if (e.target.tagName.toLowerCase() === 'object') {                                                                                 if (e.target.tagName.toLowerCase() === 'object') {                                                                                     if (e.target.tagName.toLowerCase() === 'object') {                                                                                         if (e.target.tagName.toLowerCase() === 'object') {                                                                                             if (e.target.tagName.toLowerCase() === 'object') {                                                                                                 if (e.target.tagName.toLowerCase() === 'object') {                                                                                                     if (e.target.tagName.toLowerCase() === 'object') {                                                                                                         if (e.target.tag
function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObservinging = function stopObserving(el) {        this.stopObserving
switch (action.type) {       case GET_CURRENT_USER_FAILURE:     let newLoginValue = isNewLoginValue         isNewLoginValue = false
function copyOf(arr, fn) {     return Array.prototype.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn) {     return this.copyOf.call(arr, function copyOf(arr, fn)
function getUrls(tag, attribute) {             urls[tag] = [].map.call(document.querySelectorAll(tag), function(item) { return item.getAttribute(attribute); });         }
function send() {     send.apply(this, arguments); } catch (e) {     send.apply(this, arguments); }
function setOne(doc, fieldName, setValue, options) {     this.setOne(doc, fieldName, setValue, options); }
export default View.extend({   tagName: 'div',   className: 'container',   template: `     <div class="row">       <div class="col-md-12">         <div class="panel panel-default">           <div class="panel-heading">             <h3 class="panel-title">Dashboard</h3>           </div>           <div class="panel-body">             <div class="row">               <div class="col-md-12">                 <div class="panel panel-default">                   <div class="panel-heading">                     <h3 class="panel-title">Dashboard</h3>                   </div>                   <div class="panel-body">                     <div class="row">                       <div class="col-md-12">                         <div class="panel panel-default">                           <div class="panel-heading">                             <h3 class="panel-title">Dashboard</h3>                           </div>                           <div class="panel-body">                             <div class="row">                               <div class="col-md-12">                                 <div class="panel panel-default">                                   <div class="panel-heading">                                     <h3 class="panel-title">Dashboard</h3>                                   </div>                                   <div class="panel-body">                                     <div class="row">                                       <div class="col-md-12">                                         <div class="panel panel-default">                                           <div class="panel-heading">                                             <h3 class="panel-title">Dashboard</h3>                                           </div>                                           <div class="panel-body">                                             <div class="row">                                               <div class="col-md-12">                                                 <div class="panel panel-default">                                                   <div class="panel-heading">                                                     <h3 class="panel-title">Dashboard</h3>                                                   </div>                                                   <div class="panel-body">                                                     <div class="row">                                                       <div class="col-md-12">                                                         <div class="panel panel-default">
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; } function __metadata (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); }
function textdelim(str, delim) {    var ret = '';    for(var h in jsondata.headers) {    var heading = jsondata.headers[h];    ret += textdelim + heading + textdelim +  delim;   }
function globalMatch(haystack, globalRegex, matchArray) {
function print (str) { console.log (str); }
function onDragStop() {             Garnish.requestAnimationFrame($.proxy(function() {                 this.trigger('dragStop');                 this.settings.onDragStop(); }, this)); };
function multiply(result, m, flat) {     if (this.matrixCache_[m] === undefined) {     this.matrixCache_[m] = result.slice();     m.addListener(this.matrixChange);     } else {     result = this.multiply(result, this.matrixCache_[m], flat);     this.matrixCache_[m] = result.slice();     m.removeListener(this.matrixChange);     }
; module.exports = ModelBaseKlass(QueryDBKlass, coreConstants, QueryDBKlass.prototype, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass.prototype, QueryDBKlass, coreConstants, ModelBaseKlass
function exists(tag) {   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap[_].data.includes(thisid));   } else {   tags = tags.filter(_ => thisGroupMap[_].data.includes(tag));   }   if (session) debugger   if (thisid) {   tags = tags.filter(_ => thisGroupMap
function isDefaultExpanded() {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function () {         return this.get('isDefaultExpanded', function
function r(r, precision) {     function s(r, precision) {     function t(r, precision) {     function u(r, precision) {     function v(r, precision) {     function w(r, precision) {     function x(r, precision) {     function y(r, precision) {     function z(r, precision) {     function a(r, precision) {     function b(r, precision) {     function c(r, precision) {     function d(r, precision) {     function e(r, precision) {     function f(r, precision) {     function g(r, precision) {     function h(r, precision) {     function i(r, precision) {     function j(r, precision) {     function k(r, precision) {     function l(r, precision) {     function m(r, precision) {     function n(r, precision) {     function o(r, precision) {     function p(r, precision) {     function q(r, precision) {     function r(r, precision) {     function s(r, precision) {     function t(r, precision) {     function u(r, precision) {     function v(r, precision) {     function w(r, precision) {     function x(r, precision) {     function y(r, precision) {     function z(r, precision) {     function a(r, precision) {     function b(r, precision) {     function c(r, precision) {     function d(r, precision) {     function e(r, precision) {     function f(r, precision) {     function g(r, precision) {     function h(r, precision) {     function i(r, precision) {     function j(r, precision) {     function k(r, precision) {     function l(r, precision) {     function m(r, precision) {     function n(r, precision) {     function o(r, precision) {     function p(r, precision) {     function q(r, precision) {     function r(r, precision) {     function s(r, precision) {     function t(r, precision) {     function u(r, precision) {     function v(r, precision
function nextTurn(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function turnBasedGame(turn, building, fireSpread, maxFire) {         function
function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(currentData, data, options) {     data.debug = steal.toJSON(deepExtendWithoutBody(currentData, data, options));     return data;     function deepExtendWithoutBody(
function onCheckUsername(event, input, form) {
function Text(str, options) {   if (!(this instanceof Text)) {     return new Text(str, options);   }   options = options || {};   Text.prototype.constructor = Text;   Text.prototype.tag = function tag(str, options) {     options = options || {};     Text.prototype.tag.call(this, str, options);     return this;   };   Text.prototype.termFns = function termFns(str, options) {     options = options || {};     Text.prototype.termFns.call(this, str, options);     return this;   };   Text.prototype.normalize = function normalize(str, options) {     options = options || {};     Text.prototype.normalize.call(this, str, options);     return this;   };
function c(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t
function agentService(agentService) {     this.agentService = agentService; }
function app(props) {       const app = stashedSpecs.app(props);       app.name = props.name;
function setIn(obj, key, value) {     if (typeof obj === "function" || typeof Symbol === "function" || obj === null) {     if (obj === null) {     throw new TypeError("Cannot call a class as a function");     } else if (typeof Symbol === "function" && obj[Symbol.iterator] === undefined) {     throw new TypeError("Cannot call a class as a function");     } else {     var desc = Object.getOwnPropertyDescriptor(obj, key);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("value" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.value);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("setIn" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.setIn);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("value" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.value);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("value" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.value);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("value" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.value);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("value" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.value);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("value" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.value);     if (desc === undefined) {     throw new TypeError("Cannot call a class as a function");     } else if ("value" in desc) {     var desc = Object.getOwnPropertyDescriptor(obj, desc.value);     if (desc === undefined) {     throw new TypeError("Cannot call a class
function backdrop(options) {           if (!!$destroy ) options.backdrop.remove();           else              $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave(options.backdrop, function() {           $animate.leave
function addKmlOverlay(map, options) {   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   map.addKmlOverlay(options);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener("backbutton", function() {       alert("backbutton");   }, false);   document.addEventListener
function viz_resize(params, callback) {     console.log('here')
function SparklinesSpots() {   function SparklinesSpots() {     function SparklinesSpots() {       function SparklinesSpots() {         function SparklinesSpots() {           function SparklinesSpots() {             function SparklinesSpots() {               function SparklinesSpots() {                 function SparklinesSpots() {                   function SparklinesSpots() {                     function SparklinesSpots() {                       function SparklinesSpots() {                         function SparklinesSpots() {                           function SparklinesSpots() {                             function SparklinesSpots() {                               function SparklinesSpots() {                                 function SparklinesSpots() {                                   function SparklinesSpots() {                                     function SparklinesSpots() {                                       function SparklinesSpots() {                                         function SparklinesSpots() {                                           function SparklinesSpots() {                                             function SparklinesSpots() {                                               function SparklinesSpots() {                                                 function SparklinesSpots() {                                                   function SparklinesSpots() {                                                     function SparklinesSpots() {                                                       function SparklinesSpots() {                                                         function SparklinesSpots() {                                                           function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {                                                             function SparklinesSpots() {
function save(desc$0, desc$1, desc$2, desc$3, desc$4, desc$5, desc$6, desc$7, desc$8, desc$9, desc$10, desc$11, desc$12, desc$13, desc$14, desc$15, desc$16, desc$17, desc$18, desc$19, desc$20, desc$21, desc$22, desc$23, desc$24, desc$25, desc$26, desc$27, desc$28, desc$29, desc$30, desc$31, desc$32, desc$33, desc$34, desc$35, desc$36, desc$37, desc$38, desc$39, desc$40, desc$41, desc$42, desc$43, desc$44, desc$45, desc$46, desc$47, desc$48, desc$49, desc$50, desc$51, desc$52, desc$53, desc$54, desc$55, desc$56, desc$57, desc$58, desc$59, desc$60, desc$61, desc$62, desc$63, desc$64, desc$65, desc$66, desc$67, desc$68, desc$69, desc$70, desc$71, desc$72, desc$73, desc$74, desc$75, desc$76, desc$77, desc$78, desc$79, desc$80, desc$81, desc$82, desc$83, desc$84, desc$85, desc$86, desc$87, desc$88, desc$89, desc$90, desc$91, desc$92, desc$93, desc$94, desc$95, desc$96, desc$97, desc$98, desc$99, desc$100, desc$101, desc$102, desc$103, desc$104, desc$105, desc$106, desc$107, desc$108, desc$109, desc$110, desc$111, desc$112, desc$113, desc$114, desc$115, desc$116, desc$117, desc$118, desc$119, desc$120, desc$121, desc$122, desc$123, desc$124, desc$125, desc$126
function mqtt (opt) {   function mqtt (broker, subbroker, opt) {     if (!(this instanceof mqtt)) {       return new mqtt(broker, subbroker, opt)     }     mqtt.call(this, opt)   }    mqtt.prototype.connect = function connect (opt) {     if (!(this instanceof mqtt)) {       return mqtt.prototype.connect.call(this, opt)     }     mqtt.prototype.connect.call(this, opt)   }    mqtt.prototype.subscribe = function subscribe (topic, opt) {     if (!(this instanceof mqtt)) {       return mqtt.prototype.subscribe.call(this, topic, opt)     }     mqtt.prototype.subscribe.call(this, topic, opt)   }    mqtt.prototype.publish = function publish (topic, data, opt) {     if (!(this instanceof mqtt)) {       return mqtt.prototype.publish.call(this, topic, data, opt)     }     mqtt.prototype.publish.call(this, topic, data, opt)   }    mqtt.prototype.disconnect = function disconnect (opt) {     if (!(this instanceof mqtt)) {       return mqtt.prototype.disconnect.call(this, opt)     }     mqtt.prototype.disconnect.call(this, opt)   }    mqtt.prototype.disconnectAll = function disconnectAll (opt) {     if (!(this instanceof mqtt)) {       return mqtt.prototype.disconnectAll.call(this, opt)     }     mqtt.prototype.disconnectAll.call(this, opt)   }    mqtt.prototype.subscribeAll = function subscribeAll (topic, opt) {     if (!(this instanceof mqtt)) {       return mqtt.prototype.subscribeAll.call(this, topic, opt)     }     mqtt.prototype.subscribeAll.call(this, topic, opt)   }    mqtt.prototype.publishAll = function publishAll (topic, data, opt) {     if (!(this instanceof mqtt
function dateOperatorInTheLast (date, operator) {     var _this = this;     if (typeof operator === "undefined" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;     } else {     if (typeof operator!== "function" || operator === null) {     operator = this.OPERATORS.dateOperatorInTheLast;
function startkey(key) {     if (key === Phaser.Keyboard.SPACEBAR) {     this.menuText.anchor.setTo(0.5,0.5);         this.startkey = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);     },
function fromHsl(hsl) {     return null;     if (hsl.indexOf('hsl(')!== 0) return null;     var result = Color.HSL_RE.exec(hsl);
img.src = item.href;     img.id = dlLink.id + '-link';     item.parentNode.insertBefore(img, item); }
function when(promises, callback) {     return $.when.apply($, promises).then(function (value) {     return callback(value);     }, function (error) {     return callback(error);     });
function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(input, value, attrs, name) {     function option(
if (typeof data === "undefined") data = self._data; if (typeof rows === "undefined") rows = self._rows; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "undefined") data = self._data; if (typeof data === "
function qrButton() {       if (document.getElementsByClassName('qr-button') [0]!== undefined)       {       }       if (document.getElementsByClassName('widget-login-qr-imgWrapper widget-login-qr-loading') [0]!== null)
L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringToFront();     L.control.layers(layers).addTo(map).bringTo
function putDir (path, media) {          if (path==null) throw "putDir: Null path";          if (!isDir(path)) throw "Not a directory : "+path;          if (media==MM_RAM) {
}, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "close" }, function (err, data) {     console.log("Dash channel closed.");                 broadcast.call(this, {                    event: "
function progress() {       var args = Array.prototype.slice.call(arguments);       args.unshift('progress');       this.emit.apply(this, args);
function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemToTheRight(anchor, $item) {                     function getItemTo
function last(arr, fn) {
}, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview', {             path: this.getUrlRecordPathWithAlt(path) });     }, function(path) {         this.transitionToAdminPage('preview
Resource.reopenClass({   attributes: {     id: attr('string'),     name: attr('string'),     type: attr('string'),     description: attr('string'),     createdAt: attr('date'),     updatedAt: attr('date'),     author: hasOne('user', { async: true }),     comments: hasMany('comment', { async: true }),     tags: hasMany('tag', { async: true })   },   relationships: {     author: { async: true },     comments: { async: true },     tags: { async: true }   } });
$.fn.paginate = function(current, options) {    return this.each(function() {    var $this = $(this),         settings = $.extend({}, $.fn.paginate.defaults, $this.data(), typeof options === 'object' && options);    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this, settings));    $this.data('paginate', $this.data('paginate') || new $.fn.paginate(this
function heartbeat () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this.isAlive = function () {       this
function header(props) {   return <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.children.replace(/[\ -]/g, ``).toLowerCase()}`}><h2 className="" {...props} /></a><h2 className="" {...props} /></div> const header = props => <div className="anchor"><a name={`${props.
function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {     function removeDevice(device, err) {
function isSuperscriptAtom(stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscriptAtom(str, stream) {         function isSuperscript
function exec(command, data, callback) {   callback = _.isFunction(data.callback)? data.callback : function() {}      , exitCode = data.exitCode || 0      , exitCodes = exitCode.length? exitCode : [exitCode]      , callback = _.isFunction(data.callback)? data.callback : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , args = _.isArray(data.args)? data.args : []      , callback = _.isFunction(data.callback)? data.callback : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command : function() {}      , command = _.isFunction(data.command)? data.command :
setTimeout: function(data, callback, timeout){         waitAsync.setTimeout.call(window, callback, timeout);     },
function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w) {     function removeWindow(w)
function getMonthLength(thisYear, thisMonth) {     var monthLength = this.value.getMonthLength(thisYear, thisMonth);     var dates = this.$.dates.getControls();
function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector) {     if (typeof Element!== 'function' ||!Element.prototype.matches) {     return function matches (element, selector
function _interopRequireDefault(obj) { return obj && obj.__esModule? obj : { default: obj }; } function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function")? call : self; } function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
this._eventInput.off('clean', function(){             this._dirtyLock--;             if (this._dirty && this._dirtyLock == 0) {                 this._dirty = false;
function __decorate (decorators, target, key, desc) {  var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;  return c > 3 && r && Object.defineProperty(target, key, r), r; }  function _classCallCheck (instance, Constructor) {  if (!(instance instanceof Constructor)) {  throw new TypeError("Cannot call a class as a function"); } }  function _possibleConstructorReturn (self, call) {  if (!self) {  throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function")? call : self; }  function _inherits (subClass, superClass) {  if (typeof superClass!== "function" && superClass!== null) {  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
case 'z-index':    item.zIndex = parseFloat(value, 10);   case 'text-decoration':    item.textDecoration = (value == 'underline')? 'underline' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through' : (value == 'line-through')? 'line-through
function userMarkedAsAttended(event, user) {   return {     type: 'USER_MARKED_AS_ATTENDED',     payload: {       event,       user     }   }; }  function stopLoading() {   return {     type: 'STOP_LOADING'   }; }
describe('94.binding_procedureBindInout.js', function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var connection = null;   beforeEach(function() {   this.timeout(5000);   var
function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.data)) throw "data is a required field";     if (_.isUndefined(obj.columns)) throw "columns is a required field";     function table(obj) {     if (_.isUndefined(obj.
function todo(name, notes) {     if (typeof name == 'function') {     if (typeof notes == 'function') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if (typeof name =='string') {     if (typeof notes =='string') {     if
function evalList(flags, scope, locator, func, args, part) {     var list = []; if (typeof func === 'function') {                 return func.apply(null, evalList(flags, scope, locator, func, args, part));             } else if (typeof func ==='string') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'number') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'boolean') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'object') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'function') {                 return func.apply(null, evalList(flags, scope, locator, func, args, part));             } else if (typeof func ==='string') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'number') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'boolean') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'object') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'function') {                 return func.apply(null, evalList(flags, scope, locator, func, args, part));             } else if (typeof func ==='string') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'number') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'boolean') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'object') {                 return evalList(flags, scope, locator, func, args, part);             } else if (typeof func === 'function') {                 return func.apply(null, evalList(flags, scope, locator, func, args, part));
function _getColIdx(item, isTail) {    let idx = 0;    if (isTail) {    idx = this._getColIdx(item, true);    } else {    idx = this._getColIdx(item, false);    }    return idx;    }
function close(callback){     if(!!server){       server.close(callback);
function __extends(d, b) {     function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {         function __() {
function footer (str, next) {     this.push('\n');     this.push(str);     next();
, function (module, exports, __webpack_require__) {    'use strict';   __webpack_require__.r(exports, function (module, exports, __webpack_require__) {      'use strict';     __webpack_require__.r(exports, function (module, exports, __webpack_require__) {        'use strict';       __webpack_require__.r(exports, function (module, exports, __webpack_require__) {          'use strict';         __webpack_require__.r(exports, function (module, exports, __webpack_require__) {            'use strict';           __webpack_require__.r(exports, function (module, exports, __webpack_require__) {              'use strict';             __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                'use strict';               __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                  'use strict';                 __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                    'use strict';                   __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                      'use strict';                     __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                        'use strict';                       __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                          'use strict';                         __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                            'use strict';                           __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                              'use strict';                             __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                                'use strict';                               __webpack_require__.r(exports, function (module, exports, __webpack_require__) {                                  'use strict';                                 __webpack_require__.r(exports, function (module, exports, __webpack_require__)
function _encapsulateTwoParam (func, context, cb) {     if (func.length === 0 || func.length === 1) {
function getParent(element) {         var $parent = $(element);         if ($parent.hasClass('open')) {         $parent.removeClass('open');         } else {         $parent.addClass('open');         }         return $parent;     }
function __extends(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function trackException(error, fatal = false) {     GoogleAnalyticsBridge.trackException(this.id, error, fatal);   }
function setProperties(o, p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(p) { function gPO(
function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb) {   function on (event, cb
function heightChanged( height, oldVal ) { debug( 'New Value: %d.', this._height );  this.emit( 'heightChanged', height, oldVal ); }
this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX, spriteY);                     }                     if (this.spriteNombre) {                         this.spriteNombre.setPosition(spriteX,
function _asyncToGenerator(fn, thisArg, _arguments, P, generator) {  if (typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function" || typeof P === "function
function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data) {     function Config(key, data
function toString() {     const str = this.name || this.constructor.name || this.constructor.prototype.name     if (this.message) str += ':'+ this.message     if (this.cause) str += '; caused by'+ this.cause.toString()
function Bridged(center, rings, isBridged) {         this.center = center;         this.rings = rings;         this.isBridged = isBridged;
function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target, prop, args) {     function bubbleEvent(target,
function SpaceTime(str, options) {   if (!(this instanceof SpaceTime)) {     return new SpaceTime(str, options);   }    if (!options) {     options = {};   }    SpaceTime.prototype.query = function query(str, options) {     if (!(this instanceof SpaceTime)) {       return new SpaceTime(str, options);     }      if (!options) {       options = {};     }      SpaceTime.prototype.query = function query(str, options) {       if (!(this instanceof SpaceTime)) {         return new SpaceTime(str, options);       }        if (!options) {         options = {};       }        SpaceTime.prototype.query = function query(str, options) {         if (!(this instanceof SpaceTime)) {           return new SpaceTime(str, options);         }          if (!options) {           options = {};         }          SpaceTime.prototype.query = function query(str, options) {           if (!(this instanceof SpaceTime)) {             return new SpaceTime(str, options);           }            if (!options) {             options = {};           }            SpaceTime.prototype.query = function query(str, options) {             if (!(this instanceof SpaceTime)) {               return new SpaceTime(str, options);             }              if (!options) {               options = {};             }              SpaceTime.prototype.query = function query(str, options) {               if (!(this instanceof SpaceTime)) {                 return new SpaceTime(str, options);               }                if (!options) {                 options = {};               }                SpaceTime.prototype.query = function query(str, options) {                 if (!(this instanceof SpaceTime)) {                   return new SpaceTime(str, options);                 }                  if (!options) {                   options = {};                 }                  SpaceTime.prototype.query = function query(str, options) {                   if (!(this instanceof SpaceTime)) {                     return new SpaceTime(str, options
function notFound(req, res, next) {                         done(new Error('Not Found')); });
function _trigger(event, data, file) {                             var modal = $('<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">' + '<div class="modal-dialog">' + '<div class="modal-content">' + '<div class="modal-header">' + '<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>' + '<h4 class="modal-title" id="myModalLabel">Select File</h4>' + '</div>' + '<div class="modal-body">' + '<input type="file" class="form-control" data-file="' + file + '">' + '</div>' + '<div class="modal-footer">' + '<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>' + '<button type="button" class="btn btn-primary">OK</button>' + '</div>' + '</div>' + '</div>').appendTo('body');
function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str, f) { var length = function length(str
function init() {     this._super.apply(this, arguments);     if (!Ember.testing) {
function printInstruction(instruction) {             count += 1;         dojo.forEach(instruction, function(instruction) {             output.push("<tr>");
function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface: missing new surface function clearAndHide(surface, newSurface) {     throw 'Couldn\'t clear and hide the drag surface:
function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(anim, opt_target) {   function AnimationUtilApply(an
function turfBbox() {     function turfBbox() {         function turfBbox() {             function turfBbox() {                 function turfBbox() {                     function turfBbox() {                         function turfBbox() {                             function turfBbox() {                                 function turfBbox() {                                     function turfBbox() {                                         function turfBbox() {                                             function turfBbox() {                                                 function turfBbox() {                                                     function turfBbox() {                                                         function turfBbox() {                                                             function turfBbox() {                                                                 function turfBbox() {                                                                     function turfBbox() {                                                                         function turfBbox() {                                                                             function turfBbox() {                                                                                 function turfBbox() {                                                                                     function turfBbox() {                                                                                         function turfBbox() {                                                                                             function turfBbox() {                                                                                                 function turfBbox() {                                                                                                     function turfBbox() {                                                                                                         function turfBbox() {                                                                                                             function turfBbox() {                                                                                                                 function turfBbox() {                                                                                                                     function turfBbox() {                                                                                                                         function turfBbox() {                                                                                                                             function turfBbox() {                                                                                                                                 function turfBbox() {                                                                                                                             function turfBbox() {                                                                                                                                 function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function turfBbox() {                                                                                                                                     function t
function loginUserMethod() {     return persistencePathMethod.call(this, this.options.loginUserRoute); } function logoutUserMethod() {     return persistencePathMethod.call(this, this.options.logoutUserRoute); } function logoutAllUserMethod() {     return persistencePathMethod.call(this, this.options.logoutAllUserRoute); } function getUserMethod() {     return persistencePathMethod.call(this, this.options.userRoute); } function getUserInfoMethod() {     return persistencePathMethod.call(this, this.options.userInfoRoute); } function loginUserMethod() {     return persistencePathMethod.call(this, this.options.loginUserRoute); } function logoutUserMethod() {     return persistencePathMethod.call(this, this.options.logoutUserRoute); } function logoutAllUserMethod() {     return persistencePathMethod.call(this, this.options.logoutAllUserRoute); function getUserInfoMethod() {     return persistencePathMethod.call(this, this.options.userInfoRoute); } function loginUserMethod() {     return persistencePathMethod.call(this, this.options.loginUserRoute); } function logoutUserMethod() {     return persistencePathMethod.call(this, this.options.logoutUserRoute); function logoutAllUserMethod() {     return persistencePathMethod.call(this, this.options.logoutAllUserRoute); function getUserMethod() {     return persistencePathMethod.call(this, this.options.userRoute); } function getUserInfoMethod() {     return persistencePathMethod.call(this, this.options.userInfoRoute); } function loginUserMethod() {     return persistencePathMethod.call(this, this.options.loginUserRoute); function logoutUserMethod() {     return persistencePathMethod.call(this, this.options.logoutUserRoute); function logoutAllUserMethod() {     return persistencePathMethod.call(this, this.options.logoutAllUserRoute); function getUserMethod() {     return persistencePathMethod.call(this, this.options.userRoute); } function getUserInfoMethod() {     return persistencePathMethod.call(this, this.options.userInfoRoute); } function loginUserMethod() {     return persistencePathMethod.call(this, this.options.loginUserRoute); function logoutUserMethod() {     return persistencePathMethod.call(this
function main() {     var canvas = new CanvasRenderer();     var gl = new GLBuilders(canvas);     var style = new Style(canvas, gl);     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontextlost = function (e) {         console.log(e);     };     canvas.oncontext
function main(err, res) {     if (err) {     console.log('Error:'+ err);     process.exit(1);     } else {     console.log('Success:'+ res);     process.exit(0);     }
function getFiles( data ) {         var configData = data            , files;
function notifyOnunbind(data) { if (this.__onunbind) this.__onunbind(data); notifyOnboundedUpdate.call(this, data); }     function notifyOnunboundedUpdate(data) { if (this.__onunboundedupdate) this.__onunboundedupdate(data); }
function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method, url, options) {   function ClientRequest(method,
error: function() {       window.opera.postError(["[E!]", this.fixArgs(arguments)], function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function() {    }, function()
function a(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t
function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val, asProp, initial) {  var el = node.el;  function setAttr(node, name, val,
function ticks(ticks, tickLabel, colors, keyFunction) {     function scaleCategory1(d) {     function scaleCategory2(d) {     function scaleCategory3(d) {     function scaleCategory4(d) {     function scaleCategory5(d) {     function scaleCategory6(d) {     function scaleCategory7(d) {     function scaleCategory8(d) {     function scaleCategory9(d) {     function scaleCategory10(d) {     function scaleCategory11(d) {     function scaleCategory12(d) {     function scaleCategory13(d) {     function scaleCategory14(d) {     function scaleCategory15(d) {     function scaleCategory16(d) {     function scaleCategory17(d) {     function scaleCategory18(d) {     function scaleCategory19(d) {     function scaleCategory20(d) {     function scaleCategory21(d) {     function scaleCategory22(d) {     function scaleCategory23(d) {     function scaleCategory24(d) {     function scaleCategory25(d) {     function scaleCategory26(d) {     function scaleCategory27(d) {     function scaleCategory28(d) {     function scaleCategory29(d) {     function scaleCategory30(d) {     function scaleCategory31(d) {     function scaleCategory32(d) {     function scaleCategory33(d) {     function scaleCategory34(d) {     function scaleCategory35(d) {     function scaleCategory36(d) {     function scaleCategory37(d) {     function scaleCategory38(d) {     function scaleCategory39(d) {     function scaleCategory40(d) {     function scaleCategory41(d) {     function scaleCategory42(d) {     function scaleCategory43(d) {     function scaleCategory44(d) {     function scaleCategory45(d) {     function scaleCategory46(d) {     function scaleCategory47(d) {     function scaleCategory48(d) {     function scaleCategory49(d) {     function scaleCategory50(d) {     function scaleCategory51(d) {     function scaleCategory52(d) {     function scaleCategory53(d) {     function scaleCategory54(d) {     function scaleCategory55(d) {
function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(pred, w) {             function forward_fringe(
function mapify (e) {             _this._hasScrolled = false;         }).bind('touchend mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchcancel mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchstart mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchend mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchcancel mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchstart mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchend mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchcancel mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchstart mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchend mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchcancel mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchstart mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchend mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchcancel mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchstart mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchend mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchcancel mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchstart mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchend mapify', function (e) {             _this._hasScrolled = false;         }).bind('touchcancel mapify', function (e) {             _this
function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message) {     function parseShaderErrors(message
function setFromArgs( obj, args, ignores ) {                 var traits = this.traits();                 for (i in traits) {                 traits[i].setFromArgs( obj, args, ignores );             }             }
function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {     function _uploadTask (blob, url, resolve, reject) {
app.use(express.static(__dirname + '/public')); app.use(express.static(__dirname + '/public/i18n')); app.use(express.static(__dirname + '/public/i18n/mongoSync')); app.use(express.static(__dirname + '/public/i18n/en')); app.use(express.static(__dirname + '/public/i18n/de')); app.use(express.static(__dirname + '/public/i18n/fr')); app.use(express.static(__dirname + '/public/i18n/it')); app.use(express.static(__dirname + '/public/i18n/ja')); app.use(express.static(__dirname + '/public/i18n/kk')); app.use(express.static(__dirname + '/public/i18n/ko')); app.use(express.static(__dirname + '/public/i18n/nl')); app.use(express.static(__dirname + '/public/i18n/pl')); app.use(express.static(__dirname + '/public/i18n/pt')); app.use(express.static(__dirname + '/public/i18n/ro')); app.use(express.static(__dirname + '/public/i18n/ru')); app.use(express.static(__dirname + '/public/i18n/sv')); app.use(express.static(__dirname + '/public/i18n/th')); app.use(express.static(__dirname + '/public/i18n/tr')); app.use(express.static(__dirname + '/public/i18n/zh')); app.use(express.static(__dirname + '/public/i18n/zh-tw')); app.use(express.static(__dirname + '/public/i18n/zh-cn')); app.use(express.static(__dirname + '/public/i18n/zh-hk')); app.use
error() {     console.error.call(console,...arguments)   },   log() {     console.log.call(console,...arguments)   },   info() {     console.info.call(console,...arguments)   },   debug() {     console.debug.call(console,...arguments)   },   infoLog() {     console.infoLog.call(console,...arguments)   },   debugLog() {     console.debugLog.call(console,...arguments)   },   warnLog() {     console.warnLog.call(console,...arguments)   },   errorLog() {     console.errorLog.call(console,...arguments)   },   logLog() {     console.logLog.call(console,...arguments)   },   infoLog() {     console.infoLog.call(console,...arguments)   },   debugLog() {     console.debugLog.call(console,...arguments)   },   infoLog() {     console.infoLog.call(console,...arguments)   },   debugLog() {     console.debugLog.call(console,...arguments)   },   warnLog() {     console.warnLog.call(console,...arguments)   },   errorLog() {     console.errorLog.call(console,...arguments)   },   logLog() {     console.logLog.call(console,...arguments)   },   infoLog() {     console.infoLog.call(console,...arguments)   },   debugLog() {     console.debugLog.call(console,...arguments)   },   warnLog() {     console.warnLog.call(console,...arguments)   },   errorLog() {     console.errorLog.call(console,...arguments)   },   logLog() {     console.logLog.call(console,...arguments)   },   infoLog() {     console.infoLog.call(console,...arguments)   },   debugLog() {     console.debugLog.call(console,...arguments)   },   warnLog() {     console.warnLog.call(console,...arguments)   },   errorLog() {     console.errorLog.call(console,...arguments)   },   logLog() {     console.logLog.call(console,...arguments)
function Header(props) { var _this = this; _classCallCheck(this, Header); function Header(props) { var _this2 = this; _classCallCheck(this, Header); function Header(props) { var _this3 = this; _classCallCheck(this, Header); function Header(props) { var _this4 = this; _classCallCheck(this, Header); function Header(props) { var _this5 = this; _classCallCheck(this, Header); function Header(props) { var _this6 = this; _classCallCheck(this, Header); function Header(props) { var _this7 = this; _classCallCheck(this, Header); function Header(props) { var _this8 = this; _classCallCheck(this, Header); function Header(props) { var _this9 = this; _classCallCheck(this, Header); function Header(props) { var _this10 = this; _classCallCheck(this, Header); function Header(props) { var _this11 = this; _classCallCheck(this, Header); function Header(props) { var _this12 = this; _classCallCheck(this, Header); function Header(props) { var _this13 = this; _classCallCheck(this, Header); function Header(props) { var _this14 = this; _classCallCheck(this, Header); function Header(props) { var _this15 = this; _classCallCheck(this, Header); function Header(props) { var _this16 = this; _classCallCheck(this, Header); function Header(props) { var _this17 = this; _classCallCheck(this, Header); function Header(props) { var _this18 = this; _classCallCheck(this, Header); function Header(props) { var _this19 = this; _classCallCheck(this, Header); function Header(props) { var _this20 = this; _classCallCheck(this, Header); function Header(props) { var _this21 = this; _classCallCheck(this, Header); function Header(props) { var _this22 = this; _classCallCheck(this, Header); function Header(props) { var _this23 = this; _classCallCheck(this, Header); function Header(props)
function versionParser(p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function versionParser(str, p) {   function version
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; } function __metadata (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); } function __param (paramIndex, decorator) {     if (typeof Reflect === "object" && typeof Reflect.param === "function") return Reflect.param(decorator, paramIndex); } function __awaiter (thisArg, _arguments, P, generator) {     if (typeof Reflect === "object" && typeof Reflect.await === "function") return Reflect.await(thisArg, _arguments, P, generator); } function __generator (thisArg, body) {     if (typeof Reflect === "object" && typeof Reflect.generator === "function") return Reflect.generator(thisArg, body); }
function addEventListener(eventName, handler, useCapture) {     if (window.addEventListener) {     window.addEventListener(eventName, handler, useCapture);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);     } else if (window.attachEvent) {     window.attachEvent('on' + eventName, 'on' + eventName, handler);
function domUtils_findParentByTagName(start, elements, callback) {              if (start == null) {                  start = document;              }              if (elements == null) {                  elements = [];              }              if (callback == null) {                  callback = function () {};              }              if (typeof elements == "string") {                  elements = [elements];              }              if (typeof callback == "function") {                  callback();              }              if (typeof start == "string") {                  start = document.getElementById(start);              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start == null) {                  start = document;              }              if (start
function ruleMandatoryProperties(rules, ruleMandatoryProperties) {     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {         function ruleMandatoryProperties(rules, ruleMandatoryProperties) {             function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                 function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                         function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                             function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                 function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                         function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                             function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                 function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                         function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                             function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                 function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                         function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                             function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                 function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                         function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                             function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                                 function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                                     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                                         function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                                             function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                                                 function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                                                     function ruleMandatoryProperties(rules, ruleMandatoryProperties) {                                                                                                                         function rule
function RecomputePropertyValue (propd, providerFlags, error) {      if ((providerFlags & _ProviderFlags.RecomputesOnClear) === 0)          return;
this.geometry.faces.push(new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...indices), new THREE.Face3(...
function DataGridWidget() {     function DataGridWidget(element, options) {         this.initialize(element, options);     }      DataGridWidget.prototype.initialize = function (element, options) {         this.element = element;         this.options = options;     };      DataGridWidget.prototype.render = function () {         var _this = this;          if (!this.element) {             return;         }          if (!this.options.data) {             return;         }          if (!this.options.data.length) {             return;         }          if (!this.options.data[0]) {             return;         }          if (!this.options.data[0].length) {             return;         }          if (!this.options.data[0][0]) {             return;         }          if (!this.options.data[0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0][0]) {             return;         }          if (!this.options.data[0][0][0][0][0][0]) {             return;
function _impeach () {     if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false) {     this.ponged = true      if (this.ponged === false
function outputDebug(str, type, t1, t2) {  if (sPerf) {outputDebug("2", str, (t1-t0), (t2 - gt0));}; }
function test(t, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s
function testConfig() {     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');     this.passthrough('/write-coverage');
function __webpack_require__(moduleId) {   var __webpack_exports__ = {};    if (typeof __webpack_require__ === 'function') {     __webpack_exports__ = __webpack_require__(moduleId);   } else if (typeof exports === 'object') {     __webpack_exports__ = exports;   } else {     __webpack_exports__ = {      'markdown': staticPath('js/markdown.js'),         'navbar-control': staticPath('js/navbarControl.js')     };   }    __webpack_require__.r(__webpack_exports__);    return __webpack_exports__; })({  'markdown': staticPath('js/markdown.js'),         'navbar-control': staticPath('js/navbarControl.js') });
function let(table, var_args) {     var bindings = Array.prototype.slice.call(arguments, 0, arguments.length - 1);     var body = arguments[arguments.length - 1];
function wantedStates(wantedStates, q) {     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === null) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates === void 0) { wantedStates = []; }     if (wantedStates
function add(key, options) {     console.log(arguments);     this._states[key] = options
function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {     function ViewData() {
function selectionModelIgnore(event) {           event.selectionModelIgnore = false;
function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props) {     function UnitHealthDropdown(props
if (ch == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next() == '"') {    if (stream.next()
function __extends(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function")? call : self; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj!== Symbol.prototype? "symbol" : typeof obj; }; } return _typeof(obj); }  function _classCallCheck2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _possibleConstructorReturn2(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" ||
if(result=="<P>Content B</P>")       return true;
function updateBehaviors(deltaTime, self) {   object3d = objectsWithBehaviors[objectsWithBehaviors.length - 1];   object3d.updateBehaviors(deltaTime, self); }
function f(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t
} else if (this.comparator_(node.value, value) > 0) {     retNode = node.left; } else if (this.comparator_(node.value, value) === 0) {     retNode = node.right;
function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock) {     this.timeout(0);     function getBlockingSql(sql, secondsToBlock
function hover(e) {         if (e.type ==='mouseenter' || e.type ==='mouseleave' || e.type ==='mouseover' || e.type ==='mouseout' || e.type === 'focusin' || e.type === 'focusout' || e.type === 'click' || e.type === 'dblclick' || e.type === 'keydown' || e.type === 'keypress' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' || e.type === 'keyup' || e.type === 'keydown' || e.type === 'keyup' ||
function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {         function isArray(value) {
if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key]!== null && typeof data[key] === 'object' && data[key]!== undefined && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] === 'object' && typeof data[key] ===
function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {     function PageProposal(props, context) {
function rotateX(x) {         var rotationMatrix = Matrix44.rotateX(x).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this.rotate.w)).         multiply(Matrix44.rotateX(this.rotate.x)).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this.rotate.w)).         multiply(Matrix44.rotateX(this.rotate.x)).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this.rotate.w)).         multiply(Matrix44.rotateX(this.rotate.x)).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this.rotate.w)).         multiply(Matrix44.rotateX(this.rotate.x)).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this.rotate.w)).         multiply(Matrix44.rotateX(this.rotate.x)).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this.rotate.w)).         multiply(Matrix44.rotateX(this.rotate.x)).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this.rotate.w)).         multiply(Matrix44.rotateX(this.rotate.x)).         multiply(Matrix44.rotateY(this.rotate.y)).         multiply(Matrix44.rotateZ(this.rotate.z)).         multiply(Matrix44.rotateW(this
function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict";     function orders(req, res, next) {     "use strict
function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {   function _scripts() {
function EventEmitter() {   function EventEmitter() {     function EventEmitter() {       function EventEmitter() {         function EventEmitter() {           function EventEmitter() {             function EventEmitter() {               function EventEmitter() {                 function EventEmitter() {                   function EventEmitter() {                     function EventEmitter() {                       function EventEmitter() {                         function EventEmitter() {                           function EventEmitter() {                             function EventEmitter() {                               function EventEmitter() {                                 function EventEmitter() {                                   function EventEmitter() {                                     function EventEmitter() {                                       function EventEmitter() {                                         function EventEmitter() {                                           function EventEmitter() {                                             function EventEmitter() {                                               function EventEmitter() {                                                 function EventEmitter() {                                                   function EventEmitter() {                                                     function EventEmitter() {                                                       function EventEmitter() {                                                         function EventEmitter() {                                                           function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter() {                                                             function EventEmitter
[relatedField][keys.link]: {     [ids]: {     [relatedType]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [relatedField]: {     [related
function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {   function __proto__() {
function debugAggregate(model, pipeline) {     for (const i=1; i<pipeline.length; i++) {     const p = pipeline.slice(0, i);
function resolve (err, config) {         try {             if (err) {             throw new Error('Invalid Config file, incorrect JSON format:'+ err.message, err);             resolve();         } else {             resolve(config);         }         }
function sync(method, model, options, callback) {        debug.call(this, 'Node#sync', arguments);       Backbone.sync.apply(this, arguments);
function __processArg(obj, key) { var arg = null; if (obj) { var desc = Object.getOwnPropertyDescriptor(obj, key); if (desc && (desc.get || desc.set)) { Object.defineProperty(obj, key, desc); } else { obj[key] = obj[key] || {}; } } return obj; }  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }  function _inherits(subClass, superClass) { if (typeof superClass!== "function" && superClass!== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }  function _possibleConstructorReturn(self
function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier = association.foreignIdentifier            , options = additionalAttributes;           var sourceKeys = Object.keys(association.source.primaryKeys);           function attributesForAssociation(association, additionalAttributes) {           var attributes = {}            , foreignIdentifier
function _write_nodes_helper( node, on_nodes_written ) {     function _write_nodes_helper_1( node, on_nodes_written ) {     function _write_nodes_helper_2( node, on_nodes_written ) {     function _write_nodes_helper_3( node, on_nodes_written ) {     function _write_nodes_helper_4( node, on_nodes_written ) {     function _write_nodes_helper_5( node, on_nodes_written ) {     function _write_nodes_helper_6( node, on_nodes_written ) {     function _write_nodes_helper_7( node, on_nodes_written ) {     function _write_nodes_helper_8( node, on_nodes_written ) {     function _write_nodes_helper_9( node, on_nodes_written ) {     function _write_nodes_helper_10( node, on_nodes_written ) {     function _write_nodes_helper_11( node, on_nodes_written ) {     function _write_nodes_helper_12( node, on_nodes_written ) {     function _write_nodes_helper_13( node, on_nodes_written ) {     function _write_nodes_helper_14( node, on_nodes_written ) {     function _write_nodes_helper_15( node, on_nodes_written ) {     function _write_nodes_helper_16( node, on_nodes_written ) {     function _write_nodes_helper_17( node, on_nodes_written ) {     function _write_nodes_helper_18( node, on_nodes_written ) {     function _write_nodes_helper_19( node, on_nodes_written ) {     function _write_nodes_helper_20( node, on_nodes_written ) {     function _write_nodes_helper_21( node, on_nodes_written ) {     function _write_nodes_helper_22( node, on_nodes_written ) {     function _write_nodes_helper_23( node, on_nodes_written ) {     function _write_nodes_helper_24( node, on_nodes_written ) {     function _write_nodes_helper_25( node,
function printSuccess() {   console.log('SUCCESS COMMIT MSG:'+ util.format.apply(null, arguments)); } function printWarning() {   console.log('WARNING COMMIT MSG:'+ util.format.apply(null, arguments)); } function printError(err) {   console.error('ERROR COMMIT MSG:'+ util.format.apply(null, arguments)); }
function isReferenceType (value, expectedType) {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReferenceType__ () {     function __IsReference
function email(fieldValue) {      var emailReg = /^([a-zA-Z0-9\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,10})+$/;      return emailReg.test(fieldValue);
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; }
function rest (req, res, next) {   s.rest(req, res, function (err, data) {     assert.ifError(err);     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});     assert.equal(data.body, {});     assert.equal(data.headers, {});     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});     assert.equal(data.body, {});     assert.equal(data.headers, {});     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});     assert.equal(data.body, {});     assert.equal(data.headers, {});     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});     assert.equal(data.body, {});     assert.equal(data.headers, {});     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});     assert.equal(data.body, {});     assert.equal(data.headers, {});     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});     assert.equal(data.body, {});     assert.equal(data.headers, {});     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});     assert.equal(data.body, {});     assert.equal(data.headers, {});     assert.equal(data.method, 'GET');     assert.equal(data.url, '/rest');     assert.equal(data.query, {});
function ObjectField() {     YAHOO.inputEx.registerType('object', YAHOO.inputEx.ObjectField);     YAHOO.inputEx.ObjectField.superclass.constructor.apply(this, arguments); }
function autoSelectOnLoad (file) {
function __extends(d, b) {        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];        function __() { this.constructor = d; }        d.prototype = b === null? Object.create(b) : (__.prototype = b.prototype, new __()); }
function modelFinder (model, params) {
function concat(a, b) {     let result = [];
function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value) {     function isIterable(value)
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; }; var __metadata = (this && this.__metadata) || function (k, v) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v); }; var __param = (this && this.__param) || function (paramIndex, decorator) {     return function (target, key) { decorator(target, key, paramIndex); } }; var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {     return new (P || (P = Promise))(function (resolve, reject) {         function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }         function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }         function step(result) { result.done? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }         step((generator = generator.apply(thisArg, _arguments || [])).next());     }); }; var __generator = (this && this.__generator) || function (thisArg, body) {     var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops
function shadowCollection(collection, options) {     if (!(this instanceof shadowCollection)) {     return new shadowCollection(collection, options);     } else {     if (_.isFunction(options)) {     return shadowCollection.apply(this, arguments);     } else {     if (_.isObject(options)) {     return shadowCollection.apply(this, [collection, options]);     } else {     return shadowCollection.apply(this, [collection]);     }     }
this.collection.remove(           {path: {'$regex': '^' + this.path + pathSeparatorRegex}}, next);     }
return function(key) { return key >= arguments[1][0];   case 'LE':     return function(key) { return key <= arguments[1][0];   case 'NE':     return function(key) { return key!== arguments[1][0];   case 'EQ':     return function(key) { return key === arguments[1][0];   case 'NEQ':     return function(key) { return key!== arguments[1][0];   case 'GT':     return function(key) { return key > arguments[1][0];   case 'GTE':     return function(key) { return key >= arguments[1][0];   case 'LT':     return function(key) { return key < arguments[1][0];   case 'GE':     return function(key) { return key >= arguments[1][0];   case 'NE':     return function(key) { return key!== arguments[1][0];   case 'EQ':     return function(key) { return key === arguments[1][0];   case 'NEQ':     return function(key) { return key!== arguments[1][0];   case 'GT':     return function(key) { return key > arguments[1][0];   case 'GTE':     return function(key) { return key >= arguments[1][0];   case 'LT':     return function(key) { return key < arguments[1][0];   case 'GE':     return function(key) { return key >= arguments[1][0];   case 'NE':     return function(key) { return key!== arguments[1][0];   case 'EQ':     return function(key) { return key === arguments[1][0];   case 'NEQ':     return function(key) { return key!== arguments[1][0];   case 'GT':     return function(key) { return key > arguments[1][0];   case 'GTE':     return function(key) { return key >= arguments[1][0];   case 'LT':     return function(key) { return key < arguments[1][0];   case 'GE':     return function(key) { return key >= arguments[1][0];   case 'NE':     return function(key) { return key!== arguments[1][0];   case 'EQ':
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; };
function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry() {   function wasmTapestry
function curText(str, curText) {                         $(this).html('<em style="color: gray;">' + curText + '</em>');                     }
function __decorate(decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);     else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r;     return c > 3 && r && Object.defineProperty(target, key, r), r; } function __metadata(metadata, key, value) {     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadata, key, value); }
function showHiddenCols (ctx, x, y, w, h, _decorators, _decorators2, _decorators3, _decorators4, _decorators5, _decorators6, _decorators7, _decorators8, _decorators9, _decorators10, _decorators11, _decorators12, _decorators13, _decorators14, _decorators15, _decorators16, _decorators17, _decorators18, _decorators19, _decorators20, _decorators21, _decorators22, _decorators23, _decorators24, _decorators25, _decorators26, _decorators27, _decorators28, _decorators29, _decorators30, _decorators31, _decorators32, _decorators33, _decorators34, _decorators35, _decorators36, _decorators37, _decorators38, _decorators39, _decorators40, _decorators41, _decorators42, _decorators43, _decorators44, _decorators45, _decorators46, _decorators47, _decorators48, _decorators49, _decorators50, _decorators51, _decorators52, _decorators53, _decorators54, _decorators55, _decorators56, _decorators57, _decorators58, _decorators59, _decorators60, _decorators61, _decorators62, _decorators63, _decorators64, _decorators65, _decorators66, _decorators67, _decorators68, _decorators69, _decorators70, _decorators71, _decorators72, _decorators73, _decorators74, _decorators75, _decorators76, _decorators77, _decorators78, _decorators79, _decorators80, _decorators81, _decorators82, _decorators83, _decorators84, _decorators85, _decorators86, _decorators87, _decorators88, _decorators89, _decorators90, _decorators91, _decorators92, _decorators93, _decorators94, _decorators95, _decorators96, _decorators97, _decorators98, _decorators99, _
function setCookie(name, value, expires, path, domain) {     if (expires) {     var date = new Date();     date.setTime(date.getTime() + (expires * 24 * 60 * 60 * 1000));     document.cookie = name + "=" + value + "; expires=" + expires + "; path=" + path + "; domain=" + domain; } else {     document.cookie = name + "=" + value + "; path=" + path + "; domain=" + domain; } }
function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name) {     function getPlayerByName(name
package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1 &&   package_json binary.package_name.indexOf('{node_abi_napi}{napi_build_version}') === -1
function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache[page](req, res, next);          } else {          typeHandler.cache[page](req, res, next);          }          function typeHandler(req, res, next) {          debugger;          if (typeHandler.cache[page]) {          typeHandler.cache
function _interopRequireDefault(obj) { return obj && obj.__esModule? obj : { default: obj }; }
function resize(){   var doc = $(document);   var width = window.innerWidth;   var height = window.innerHeight;   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(document);   var doc = $(
function _getCacheNameForVersion(newVersion) {     return new Promise(function (resolve, reject) {     caches.open(newVersion, function (err, cache) {     if (err) {     reject(err);     } else {     resolve(cache.name);     } });
function callback(err, res, body) {                              function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err, res, body) {                          function callback(err
obj.neighList.forEach(function(obj) {    obj.rectangles.forEach(function(obj) {    r2.forEach(function(obj) {
function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree(doc, treeElement) {     function lenyaLinkTree
function a (b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u
function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWaypoints(latLngs, cb) {     function setWay
function assertValidViewColumns (columns, viewColumns) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings) {   function assertValidViewColumns (gridModel, columns, viewColumns, exporter, settings
function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {     function ttr(str, delta) {
function mapStateToProps(state) {   return {     login: login(state),     setBalance: setBalance(state),     resetPrice: resetPrice(state)   }; }  export default connect(mapStateToProps, {   login,   setBalance,   resetPrice })(Link);
function Report_visualizationTypes() {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes(report) {      function Report_visualizationTypes
function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.return = a1;  this.log('fn(a1, a2, a3) = function fn(a1, a2, a3) {  this.
function changeEvent(type, inputElement, settings) {               if(settings == undefined) {               settings = {};               }               if(inputElement == undefined) {               inputElement = document.getElementsByTagName("input")[0];               }               if(inputEvent == undefined) {               inputEvent = document.createEvent("HTMLEvents");               }               inputEvent.initEvent(type, true, true);               inputEvent.type = type;               inputElement.dispatchEvent(inputEvent);
function phone() {     function phone() {         function phone() {             function phone() {                 function phone() {                     function phone() {                         function phone() {                             function phone() {                                 function phone() {                                     function phone() {                                         function phone() {                                             function phone() {                                                 function phone() {                                                     function phone() {                                                         function phone() {                                                             function phone() {                                                                 function phone() {                                                                     function phone() {                                                                         function phone() {                                                                             function phone() {                                                                                 function phone() {                                                                                     function phone() {                                                                                         function phone() {                                                                                             function phone() {                                                                                                 function phone() {                                                                                                     function phone() {                                                                                                         function phone() {                                                                                                             function phone() {                                                                                                                 function phone() {                                                                                                                     function phone() {                                                                                                                         function phone() {                                                                                                                             function phone() {                                                                                                                                 function phone() {                                                                                                                             function phone() {                                                                                                                                 function phone() {                                                                                                                                     function phone() {                                                                                                                                 function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {                                                                                                                                     function phone() {
function PIN_RESET_TIMEOUT() {     function PIN_RESET_TIMEOUT(pin) {         function PIN_RESET_TIMEOUT(pin) {             function PIN_RESET_TIMEOUT(pin) {                 function PIN_RESET_TIMEOUT(pin) {                     function PIN_RESET_TIMEOUT(pin) {                         function PIN_RESET_TIMEOUT(pin) {                             function PIN_RESET_TIMEOUT(pin) {                                 function PIN_RESET_TIMEOUT(pin) {                                     function PIN_RESET_TIMEOUT(pin) {                                         function PIN_RESET_TIMEOUT(pin) {                                             function PIN_RESET_TIMEOUT(pin) {                                                 function PIN_RESET_TIMEOUT(pin) {                                                     function PIN_RESET_TIMEOUT(pin) {                                                         function PIN_RESET_TIMEOUT(pin) {                                                             function PIN_RESET_TIMEOUT(pin) {                                                                 function PIN_RESET_TIMEOUT(pin) {                                                                     function PIN_RESET_TIMEOUT(pin) {                                                                         function PIN_RESET_TIMEOUT(pin) {                                                                             function PIN_RESET_TIMEOUT(pin) {                                                                                 function PIN_RESET_TIMEOUT(pin) {                                                                                     function PIN_RESET_TIMEOUT(pin) {                                                                                         function PIN_RESET_TIMEOUT(pin) {                                                                                             function PIN_RESET_TIMEOUT(pin) {                                                                                                 function PIN_RESET_TIMEOUT(pin) {                                                                                                     function PIN_RESET_TIMEOUT(pin) {                                                                                                         function PIN_RESET_TIMEOUT(pin) {                                                                                                             function PIN_RESET_TIMEOUT(pin) {                                                                                                                 function PIN_RESET_TIMEOUT(pin) {                                                                                                                     function PIN_RESET_TIMEOUT(pin) {                                                                                                                         function PIN_RESET_TIMEOUT(pin) {                                                                                                                             function PIN_RESET_TIMEOUT(pin) {                                                                                                                                 function PIN_RESET_TIMEOUT(pin) {                                                                                                                                     function PIN_RESET_TIMEOUT(pin) {                                                                                                                                         function PIN_RESET_TIMEOUT(pin) {                                                                                                                                             function PIN_RESET_TIMEOUT(pin) {                                                                                                                                                 function PIN_
listKeys: function listKeys (params, callback) {     var _this = this;     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};     }     if (typeof params === 'function') {         callback = params;         params = {};
fn.apply(this, args, function (err, result) {     if (err) {     reject(err);     } else {     resolve(result);     }     });     };
this.__doreq("DESTROY-EXISTS",getoptions,null,function(result) {       self.logger.debug("Returned rest api info: " + JSON.stringify(result.doc));
if(opts.noRecord) {           throw { code: 'RECORDING_DISABLED' };          } else {
function fetchDoc(id, resourceType, req) {   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision, sections} = await fetchDoc(id, resourceType, req)   console.log('in a playlist')   const {html, originalRevision,
function __decorate (decorators, target, key, desc) {     var c = arguments.length, r = c < 3? target : desc === null? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3? d(r) : c > 3? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r;
jQuery.sap.delayedCall(0, this, function() {    this.fireEvent("media", this);    this.informTable("Resize");});
function showNotification(message, status) {             showNotification.call(this, message, "Error: status=" + status);             errorCallback("FAILED");
function chalk(str, options) {   if (typeof options === 'function') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof str === 'undefined') {     str = '';   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }   if (typeof options === 'undefined') {     options = {};   }
if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not converging after'+ terms +'terms';     if ( i > terms ) throw 'Not conver
function badge(props, context) {   function badge(props, context) {   function badge$1(props, context) {   function badge$2(props, context) {   function badge$3(props, context) {   function badge$4(props, context) {   function badge$5(props, context) {   function badge$6(props, context) {   function badge$7(props, context) {   function badge$8(props, context) {   function badge$9(props, context) {   function badge$10(props, context) {   function badge$11(props, context) {   function badge$12(props, context) {   function badge$13(props, context) {   function badge$14(props, context) {   function badge$15(props, context) {   function badge$16(props, context) {   function badge$17(props, context) {   function badge$18(props, context) {   function badge$19(props, context) {   function badge$20(props, context) {   function badge$21(props, context) {   function badge$22(props, context) {   function badge$23(props, context) {   function badge$24(props, context) {   function badge$25(props, context) {   function badge$26(props, context) {   function badge$27(props, context) {   function badge$28(props, context) {   function badge$29(props, context) {   function badge$30(props, context) {   function badge$31(props, context) {   function badge$32(props, context) {   function badge$33(props, context) {   function badge$34(props, context) {   function badge$35(props, context) {   function badge$36(props, context) {   function badge$37(props, context) {   function badge$38(props, context) {   function badge$39(props, context) {   function badge$40(props, context) {   function badge$41(props, context) {   function badge$42(props, context) {   function badge$43(props, context) {   function badge$44(props, context) {   function badge$45(props, context
container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/2) - (height/2) + "px"});                 } else {                     container.css({top:($(this).height()/
function str(str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str
function Presenter (props, context) {   function Presenter (_ref) {   function Presenter (_ref2) {   function Presenter (_ref3) {   function Presenter (_ref4) {   function Presenter (_ref5) {   function Presenter (_ref6) {   function Presenter (_ref7) {   function Presenter (_ref8) {   function Presenter (_ref9) {   function Presenter (_ref10) {   function Presenter (_ref11) {   function Presenter (_ref12) {   function Presenter (_ref13) {   function Presenter (_ref14) {   function Presenter (_ref15) {   function Presenter (_ref16) {   function Presenter (_ref17) {   function Presenter (_ref18) {   function Presenter (_ref19) {   function Presenter (_ref20) {   function Presenter (_ref21) {   function Presenter (_ref22) {   function Presenter (_ref23) {   function Presenter (_ref24) {   function Presenter (_ref25) {   function Presenter (_ref26) {   function Presenter (_ref27) {   function Presenter (_ref28) {   function Presenter (_ref29) {   function Presenter (_ref30) {   function Presenter (_ref31) {   function Presenter (_ref32) {   function Presenter (_ref33) {   function Presenter (_ref34) {   function Presenter (_ref35) {   function Presenter (_ref36) {   function Presenter (_ref37) {   function Presenter (_ref38) {   function Presenter (_ref39) {   function Presenter (_ref40) {   function Presenter (_ref41) {   function Presenter (_ref42) {   function Presenter (_ref43) {   function Presenter (_ref44) {   function Presenter (_ref45) {   function Presenter (_ref46) {   function Presenter (_ref47) {   function Presenter (_ref48) {   function Presenter (_ref49) {   function Presenter (_ref50) {   function
function isChrome() {   if (typeof chrome === 'undefined') {     return false;   } else {     return true;   } } function isUIModules() {   if (typeof uiModules === 'undefined') {     return false;   } else {     return true;   } } exports.isChrome = isChrome; exports.isUIModules = isUIModules;
function url(url, opts) {     return Globals.protocolTest.call(this, url, {       assertion: function(opts) {
function sort (arrayLike, criteria) {     var args = _argsTail.apply(null, arguments);     var len = _toArrayLength(arrayLike.length);     function _makeCriteria (arrayLike, criteria) {     var args = _argsTail.apply(null, arguments);     function _toArrayLength (len) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var args = _argsTail.apply(null, arguments);     function _argsTail (args) {     var
function unpackString(addressLen, offset) {     var buf = new Buffer(addressLen);     buf.fill(0);     offset += 2;     console.log(addressLen);         cookie.address = buf.unpackString(addressLen, offset);
function inject(img, svgString, absUrl, options) {               console.info(options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString, absUrl, options);               inject(img, svgString,
function sequenceLengthPreInsert (tree) {     function sequenceLengthPreInsert (tree) {         function sequenceLengthPreInsert (tree) {             function sequenceLengthPreInsert (tree) {                 function sequenceLengthPreInsert (tree) {                     function sequenceLengthPreInsert (tree) {                         function sequenceLengthPreInsert (tree) {                             function sequenceLengthPreInsert (tree) {                                 function sequenceLengthPreInsert (tree) {                                     function sequenceLengthPreInsert (tree) {                                         function sequenceLengthPreInsert (tree) {                                             function sequenceLengthPreInsert (tree) {                                                 function sequenceLengthPreInsert (tree) {                                                     function sequenceLengthPreInsert (tree) {                                                         function sequenceLengthPreInsert (tree) {                                                             function sequenceLengthPreInsert (tree) {                                                                 function sequenceLengthPreInsert (tree) {                                                                     function sequenceLengthPreInsert (tree) {                                                                         function sequenceLengthPreInsert (tree) {                                                                             function sequenceLengthPreInsert (tree) {                                                                                 function sequenceLengthPreInsert (tree) {                                                                                     function sequenceLengthPreInsert (tree) {                                                                                         function sequenceLengthPreInsert (tree) {                                                                                             function sequenceLengthPreInsert (tree) {                                                                                                 function sequenceLengthPreInsert (tree) {                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                         function sequenceLengthPreInsert (tree) {                                                                                                             function sequenceLengthPreInsert (tree) {                                                                                                                 function sequenceLengthPreInsert (tree) {                                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                                         function sequenceLengthPreInsert (tree) {                                                                                                                             function sequenceLengthPreInsert (tree) {                                                                                                                                 function sequenceLengthPreInsert (tree) {                                                                                                                             function sequenceLengthPreInsert (tree) {                                                                                                                                 function sequenceLengthPreInsert (tree) {                                                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                                                     function sequenceLengthPreInsert (tree) {                                                                                                                                     function sequenceLengthPreInsert (tree) {
function keypress(e) {     var charCode = e.which? e.which : e.keyCode;     if (charCode >= 32) {
return new Action.Other.DeclareVariable(data.name);                     break;                 case actionTypes.other.DECLARE_FUNCTION:                     return new Action.Other.DeclareFunction(data.name);                     break;                 case actionTypes.other.DECLARE_METHOD:                     return new Action.Other.DeclareMethod(data.name);                     break;                 case actionTypes.other.DECLARE_PROCEDURE:                     return new Action.Other.DeclareProcedure(data.name);                     break;                 case actionTypes.other.DECLARE_STRING:                     return new Action.Other.DeclareString(data.name);                     break;                 case actionTypes.other.DECLARE_TYPE:                     return new Action.Other.DeclareType(data.name);                     break;                 case actionTypes.other.DECLARE_VAR:                     return new Action.Other.DeclareVar(data.name);                     break;                 case actionTypes.other.DEFINE_COUNTER:                     return new Action.Other.DefineCounter(data.name, data.value);                     break;                 case actionTypes.other.DEFINE_VARIABLE:                     return new Action.Other.DefineVariable(data.name, data.value);                     break;                 case actionTypes.other.DEFINE_FUNCTION:                     return new Action.Other.DefineFunction(data.name, data.value);                     break;                 case actionTypes.other.DEFINE_METHOD:                     return new Action.Other.DefineMethod(data.name, data.value);                     break;                 case actionTypes.other.DEFINE_PROCEDURE:                     return new Action.Other.DefineProcedure(data.name, data.value);                     break;                 case actionTypes.other.DEFINE_STRING:                     return new Action.Other.DefineString(data.name, data.value);                     break;                 case actionTypes.other.DEFINE_TYPE:                     return new Action.Other.DefineType(data.name, data.value);                     break;                 case actionTypes.other.DEFINE_VAR:                     return new Action.Other.DefineVar(data.name, data.value);                     break;                 case actionTypes.other.GET_COUNTER:                     return new Action.Other.GetCounter(data.name);                     break;                 case actionTypes.other.GET_
function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {     function partitionBy(array, fn) {
kafka.on('message', function(message, commit) {             debugger;             _options.bus.callback(JSON.parse(message.value)); });
function wikiChanges (changes, callback) {     notifications.wikiChanges(changes, function (err, stringifiedOptions) {
function createComment(postId, comment) {   postId = new ObjectID(postId);
function version (grunt, src, dest, options) {                     grunt.util._.extend(options, {                     replacements: [{                         pattern: /\"version\":\s\"[0-9\.a-z].*",/gi,                         replacement: '"version": "' + grunt.option('newver') + '",'
function TaskDetail() {     TaskDetail.__super__.constructor.apply(this, arguments);     this.tabs_tabs = {};
function readElse( parser, tag ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if ( child = readElse( parser, tag ) ) {    if ( section.n === SECTION_UNLESS ) {    if
raw: function() {      testableNetwork.lastCommand = Array.prototype.join.call(arguments, " ");     },
function main(args, cb) {     if (typeof args === 'function') {     cb = args;     args = [];     } else {     if (typeof args ==='string') {     args = [args];     } else {     if (typeof args === 'object') {     args = Object.keys(args);     } else {     if (typeof args === 'number') {     args = [args];     } else {     if (typeof args === 'boolean') {     args = [args];     } else {     if (typeof args ==='string') {     args = [args];     } else {     if (typeof args === 'object') {     args = Object.keys(args);     } else {     if (typeof args === 'number') {     args = [args];     } else {     if (typeof args === 'boolean') {     args = [args];     } else {     if (typeof args ==='string') {     args = [args];     } else {     if (typeof args === 'object') {     args = Object.keys(args);     } else {     if (typeof args === 'number') {     args = [args];     } else {     if (typeof args === 'boolean') {     args = [args];     } else {     if (typeof args ==='string') {     args = [args];     } else {     if (typeof args === 'object') {     args = Object.keys(args);     } else {     if (typeof args === 'number') {     args = [args];     } else {     if (typeof args === 'boolean') {     args = [args];     } else {     if (typeof args ==='string') {     args = [args];     } else {     if (typeof args === 'object') {     args = Object.keys(args);     } else {     if (typeof args === 'number') {     args = [args];     } else {     if (typeof args === 'boolean') {     args = [args];     } else {     if (typeof args ==='string') {     args = [args];     } else {     if (typeof args === 'object') {     args = Object.keys(args);     } else {     if (typeof args === 'number') {     args = [args];     } else {
