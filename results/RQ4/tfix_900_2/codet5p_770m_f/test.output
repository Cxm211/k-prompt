var providers = [];   for(var s in services)   {
const cache = get('types.defs', context.cache)   let typeDef = getProp(root, cache)   if (typeDef) {
const instance = mount(PageProposal, {       doBefore: () => {         store.commit(`setProposal`, {})
if (!userInfo) {       wx.navigateTo({         url: "/pages/authorize/index"       })     } else {
case FV_BOOK_ENTRY_CREATE_ERROR:         state.isError = true;         break;
ISense.prototype.setCompilationSettings = function (options) {                  var compOptions = new TypeScript.CompilationSettings();                  for(var i in options) {
}).call(this);
return state     case actions.updateUserData.id:       state.mergeIn([], {})       break     default:       return state   }
className={className}>         {!!children ? children : (           <span>
, crypto = require('crypto')   , net = require('net')   , sasl = require('./sasl')   , fs = require('fs')
if(joint = isSegmentRayCross(p0, p1, p)) {
throw new Error("I dont know how change this corpus' public/private setting");     }
default:                     val = this.value();                     return '$'+Numbas.jme.display.texify({tok:val})+'$';     }
function _helperRemapAsyncToGenerator() {   const data = _interopRequireDefault(require("@babel/helper-remap-async-to-generator"));   _helperRemapAsyncToGenerator = function () {     return data;
res.writeHead(200, {       'Content-Length': body.length     , 'Allow': body   });   res.end(body); }
this.name = ast[1].join('/');     this.constants = {};      };
ctrl.field = {};                          options.field.on("value", function(snap) {
defaultMessage: 'entries',   },   categorySelect: {     id: 'app.containers.SayingsPage.component.SayingDataForm.categorySelect',
var mapper = [] ;    var model = new orion.textview.TextModel(fileText, "\r\n");
var navSubItemName = pattern.patternName.replace(/-/g, ' ');
exports.trimZeros = function (num) {     var str = new String(num || '0');     if (str.indexOf('.') == -1)         return str;
, sequelize = new Sequelize(config.database, config.username, config.password, {logging: false})   , User = sequelize.define('User', { name: Sequelize.STRING, bio: Sequelize.TEXT })
function cancelDelete() {
document.addEventListener('DOMContentLoaded', () => {   Promise
}             }             if (!!value) {               childScope = $scope.$new();
var print = this["print"] ? this["print"] : ((console && console.log) ? console.log : alert);
const createTree = function(adapter, items, parent) {   this.items = items.reduce((res, item) => {     const next = parent
$lux.apiUrls[url] = resp.data;                 promise.resolve.apply(promise, arguments);             }, function() {                 promise.reject.apply(promise, arguments);             });
const data = []   const workspaceElement = atom.views.getView(atom.workspace)   document.body.appendChild(workspaceElement)
function ArrayCollectionStrategy() {           _classCallCheck(this, ArrayCollectionStrategy);           _CollectionStrategy.apply(this, arguments);         }
if (result = this.scanInjections(ruleStack, lineWithNewline, position, firstLine)) {       for (let injection of baseGrammar.injections.injections) {
return nanomerge.apply(void 0, arguments);
var spawnValidator = require('gardr-validator'); var getTmpDir = require('../tmpDir.js'); var config = require('../config.js');
match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;                     break;                 }
case 0: case 1:             case 2: case 3:                 bank = this._hbank << 5;
hasChildShapes: function() {    for(key in this.childShapes)     return true;
topRange(startDate, endDate, timeGranularity, direction, startingAt, limit, callback) {     const args = Array.prototype.slice.call(arguments);
runOrdered: function(list, consumer, consumerCallback, onDone) {
regionImageryProvider = new WebMapServiceImageryProvider({             url: proxyCatalogItemUrl(catalogItem, regionDetail.regionProvider.server),             layers: regionDetail.regionProvider.layerName,
events = events.concat(['click','mouseover','mouseout']);    for (i=0, il=events.length; i<il; i++) {     (function(eventName) {
Translator.Locale = Locale; Translator.Namespace = Namespace; Translator.FilterList = FilterList;
if (this.active) {             for (var i=0;i< this.handlers.length; i++) {                 this.handlers[i].deactivate();             }         }
onDrop: function (params) {                 this.dagrePosition();             }
, showImage = true   , debugMode = false   , test = "durp"   , url, childArgs, phantomProcess;  if (utils.isRefererValid(referer)) {
else {     throw new Error('[sprintf] huh?');    }    _fmt = _fmt.substring(match[0].length);
expandIsoform(selectedIsoform);                 sortDots(this.parentNode);               }             }
import TwiddleResolver from "ember-twiddle/lib/twiddle-resolver"; import File from "ember-twiddle/lib/file";
Promise.all(this.evaluator.evaluate(this.w, context));       expect(github.issues.removeAssigneesFromIssue).toHaveBeenCalledWith({
describe("stability @skip-ci", function () {       let runs = 10         , text = 'Delhi is New @@@ BREAKFAST-FOOD-0001';
var i = 1;  var names = {};  files.forEach(function(name) {
} else {        var xfactor = 45.48385;        var xoffset = 264.2620;        var x = (lon * xfactor) + xoffset;
, mikealRequest = require('request')   , superagent = require('superagent'); var globalCount;
return str.split(/[-\.\s]+/) }
});         }         var errorPrefix = "Error in " + JS_HANDLE + ".viewDocument(): ";
return _write.apply(this, arguments);         }
} const publish = async (post) => { }
milkBoxStatus++;         addMilk();
if (attendees && attendees.length) {     var attendees = _.filter(attendees, function (a) { return a.hasOwnProperty("gender") });     if (attendees.length) {
var stop = mobx.spy(c => events.push(c));  doStuff();
, model = require('../lib')   , tests;
function countDown(element, options) {         this.element = $(element);         this.options = $.extend({}, defaults, options);
coordinates.forEach(function(line){         str += DewShape.LineString(line);       });
getSiteType: function () {         if (CHAT || window.CHAT) {             return 'chat';
if (typeof methods === 'object') {             for (var i=0;i<methods.length;i++) {                 Child.prototype[i] = methods[i];             }         }
}                     var props = [], visitedProps = [], accessors = {};                     Properties.allOwnPropertiesOrFunctions(value, filter).each(function(prop) {
} else {         return str;
function handleFocusChange() {     var _active = activeElements();
activeClass: 'active',   ariaExpanded: computed('isExpanded', 'treeNodeHasChildren', function() {     return this.get('treeNodeHasChildren') ? this.get('isExpanded') + '' : null;   }).readOnly(),
'upper',     function(s) {       return (new String(s)).toUpperCase();     }
getSiteType: function() {         if($('#jplayer').length && /^chat\./.test(location.hostname)) {             return 'chat';
Math.factors = function (n) {
};                 DataGrid = __decorate([                     core_1.Component({
this.state.set(this.state.value().join(''));                  this.emit('complete', 'concat', 'concatenated ' + stateItemCount + ' item(s).');              }
require('./grouped_builds_view.css') var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup; const PipeLineBuild =  React.createClass({
render(pageBody, pageData, file) {     const layoutTemplate = this.layouts[pageData.layout];
$(this).bind('focusin.price_format', function()     {
module.exports = EventDataBinding;
ol.TileRange.prototype.containsTileRange = function(tileRange) {   return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&
}      this._highlight({row: e.visualIndex});     },
case DOMEvents.KEYPRESS:     var charCode = e.which ? e.which : e.keyCode;     if (charCode >= 32) {
__extends(StickRightLocationDirective, AbstractLocationDirective);         function StickRightLocationDirective() {             AbstractLocationDirective.apply(this, arguments);         }
textOverflow: 'ellipsis',     fontWeight: 'inherit',     fontSize: '16px'   },
import { Route, IndexRedirect, Link } from 'react-router'; import globals from '../../../../Globals';
return number * fabric.DPI / 2.54;         case 'in':
try {       let outputFileName = this.options.output || 'bundle.js';       asset = compilation.assets[outputFileName] || Object.values(compilation.assets)[0];
System.register(['./generated-chunk.js', './generated-chunk2.js'], function (exports, module) {  'use strict';
$('body').html(data.body);     $('title').html(data.title);
this.checkInternalPointers();   if (this.parent) { throw new Error("The root shouldn't have a parent"); } }
} else {       throw new Error('未获取到图表实例元素');     }
module.exports.log = function () {   };
constructor(tempVarTransformer, protoName) {     this.tempVarTransformer_ = tempVarTransformer;     this.protoName_ = protoName;
ctx.shapeNode = XHTMLNS.create(this.tagName);         if (this.extentOverride) {                          }
} else if (wm.localeString) {     djConfig.locale = wm.localeString;      djConfig.locale = djConfig.locale.replace(/^en\-.*$/, "en");  }
articleSchema.pre('findOne', function(next) {   console.log(this)
$('body, html').animate(                 { scrollTop: calcHeightFunc(document.getElementById(anchor)),                 speed,
var result = response;                 for (i = 0; i < result.length; i++) {                     if (result[i].serialNo.match(self.serialNo)) {
for (var dep in scope.dependencies) {                         if (scope.dependencies.hasOwnProperty(dep)) {                             dep_name = dep;                             dep_src = scope.dependencies[dep];
throw new Error("Error referencing component '" + root.tag + "'. Components can only be used when within modules. See documentation for more information on t7.module().");             }
$('a#file-upload').click(switchToImport);         $(document).on(qdb.MSG_QUERY_DATASET, function (e, m) {             divExportUrl.val(qdb.toExportUrl(m.query));
hasParams() {             return hasParams.apply(this, arguments);         },
else {     for(var wfStep in newAPIs[route].workflow) {      if(newAPIs[route].workflow.hasOwnProperty(wfStep)) {        var hash1 = objecthash(oldAPIs[route].workflow[wfStep]);        var hash2 = objecthash(newAPIs[route].workflow[wfStep]);        if(hash1 !== hash2) {
.replace(/'/g, "\\'")             .replace(/\{([^\}]+)\}/g, "' + (_[1] || '') + '") + "'")       )(data);
var name = element.tagName.toLowerCase();                 if (BuildHelpers.doesStringLookLikeDependency(this, name)) {                     dependenciesList.push(name);
this.testSamePrereqTwice = function () {     h.exec('../bin/cli.js foo:asdf', function (out) {
options = _.extend({reindex: true}, options || {});         if (options.reindex) {           this.shadowCollection.reset(collection.models);         }       });
ListActions.ListActionActivationSupport = ListActionActivationSupport; ListActions.ListActionsDrawer = ListActionsDrawer;
var gutil = require('gulp-util'); var PliginError = gutil.PliginError;
if (this.url !== undefined) {             jQuery.get(this.url, function(data) {                 that.element.html(data);
if (lines.length > 0) {    for (i=0;i<lines.length;i++) {     lines[i] = "<" + (tag.match(/^a\s?/i) ? replaceSlug(tag, lines[i]) : tag.match(/^option\s?/i) ? replaceValue(tag, lines[i]) : tag) + ">" + lines[i].trim() + "</" + close + ">";
d3plus.visualization.line.shapes       = [ "line" ] d3plus.visualization.line.tooltip      = "static"
function createPost() {
.attr('title', layer.get("title") || layer.get("name"))     .click(function(e){ e.preventDefault(); })     .attr('unselectable', 'on')
const UNCHANGED_WAIT = 1000; const ID_ALIAS = 'nonoonoono';
cb(er)     })   }
for (const key in this.map_) {       if (this.map_.hasOwnProperty.call(key)) {         list.push(this.map_[key]);       }
<View style={{padding: 10, backgroundColor: '#fcfcfc'}}>           <Text style={{color: 'black', color: 18}}>             选择您感兴趣的3-5个类别
Compiler.prototype.visitRulesetList = Compiler.prototype.visitRulesetList;
var plugin_cli = shell.exec(cmd, {silent:true});                     if (plugin_cli.code > 0) throw new Error('An error occured during plugin installation for ' + platform + '. ' + plugin_cli.output);                 });
} else {        named_transformation = $.grep(base_transformations, function() { return this != null && this != ""}).join(".");        base_transformations = [];
var last = list.length - 1;   for(var i = 0; i < last; i++){    var child = this._getChildNode(node, list[i]);
if (process.env.TRAVIS) {     https.get({host: credentialHost}, function(res) {
post_error: function(msg, dest) {         if (typeof msg === "string")
ENV.APP.rootElement = '#ember-testing';   }   if (environment === 'production') {     ENV.baseURL = '/ember-bootstrap-datetimepicker/';   }
}; }(this.r = {}, function () {})
} break;             case StretchMode.TILE: {             } break;
this.showMessage("error", "Error while deleting script.");                                           }                         });
var jgeXml = require('./jgeXml.js'); String.prototype.replaceAt = function(index, character) {     return this.substr(0, index) + character + this.substr(index+character.length); };
return how.autoplay != false ? play() : play;  var startTime = 0;  var isStarted = true;  function play () {
music = game.add.audio('boden');     music.onDecoded.add(hasDecoded, this);     music.play();
}     }, { vis: this.vis });     this.tooltipManager.start(this.layerView);
var config = byPath[file]          , transformed = config ? wrap(content, config) : content;
, $ = require('jquery')   , moment = require('moment')   , angular = require('angular'); module.exports = AdminEventEditFormFeedController;
} assertTrue(testcase.call(this));
};                 var objectStore = transaction.objectStore(this.objectStoreName);
Meteor.call("deleteItem", this._id);             toastr.success("Delete Item", "Item deleted");
ojster.example.templates.Tools.SomeTool = function() {  ojster.Template.apply(this, arguments); };
var output = config.path.output;       var key    = this.parentView ?         this.parentView.view : this.filename;
else {       err.error = 'Grant: missing or misconfigured provider'}       callback(qs.stringify(err))     }
if (logged_in && !$(this).data('model').remoteId) {         buttons.push({
CONSTANTS.Dir_Top             ];
el.parent = root;    x += point.x;    y += point.y;   });
var state = uri.getData(path);     if (!state) {
} else if (format == 1) {     for (i = 1; i < count + 1; i++) {       var first = aStream.getByte();
, win = window     , ua = navigator.userAgent     , store = 'bkwld-tram-js'
return timestamp; }
if (conf.bLight && !lightProps)   throw new Error("no parent props for light");
function disjunction() {   return OPTREES[this.match(/^OR/i).toUpperCase()];
case this.ERROR:                     _logger.error(...args);                     break;
.then(function(diffs) {         return _.map(diffs, this._normalizeDiff);     });
case 'read':                 console.log('read message list');
logo: PropTypes.string.isRequired,     contactType: PropTypes.string.isRequired,     title: PropTypes.string.isRequired,
dataTemp.push(curr); } FUNCTION_TABLE.push(0, 0); var fileCounter = 0;
this.setSelectedElement(vParent);           }         }
else {                 throw new Error('i18next is not loaded');             }         }
} else {         console.log(`Winner: ${this.filter('fastest').map('name')}`);       }
options.classNames.series,         (this.data.series[i].className || options.classNames.series + '-' + Chartist.alphaNumerate(i))       ].join(' '));
const contact = this.currentContact()     return (contact && contact.messages().fetch().length === 0) ? assignment.campaign().initialScriptText() : ''
io.register_write(port, this, function(out_byte)     {         write_data(this, out_byte);     }, function(out_word)
this.classList.remove.apply(this.classList, ALL_COLOR_CLASSES);
let spyService;     function Target() {}     beforeEach(() => {
$(window).on('action:topic.loading', function (e) {             addListener(button);         });
} else {             if (arguments[0] !== 'newListener') {                 if (events[arguments[0]]) {
switch (e) {       case '--ecma3':           e = '--ecma3'           break
* run(context) {     const testArgs = this.formatTestArgs(context);     console.log('%j', testArgs);
Base.call(this, {});             this.initialize.apply(this, [config]);         },
return mockResult(request, mock.value);         } else {         }
const MP_REGEX = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z\d$@$!%&'\*\+\-\.\^_`\|~0-9A-Za-z
if (key !== 1 && !this.findTouch_(touchList, key - 2)) {         var p = value.out;         d.push(this.touchToPointer_(p));       }
if (keyboard[0].push({
, rimraf    = require('rimraf') var dbidx = 0
handlers.forEach(function (handler) {                     handler.apply(null, args);                 });
console.log(formResult);    }
if (canceled()) {       throw 0;      }
"meta": { "shares": ["getResp"] },   "global": function* (ctx) {     ctx.scope.set("getResp", ctx.KRLClosure(ctx, function* (ctx) {       return ctx.modules.get(ctx, "ent", "get_resp");
} catch (ex) {           throw new Error('try to remove non-existing shortcut');         }
}     return mergedState;
var path = basis.path;   var arrayAdd = basis.array.add;   var arrayRemove = basis.array.remove;   var consts = require('basis.template.const');
console.log(arguments.callee);     throw new Error("Callback was already called.");
}         tok = this.nextToken();         if(tok && tok.type === lexer.TOKEN_BLOCK_END) {
error: function() {       window.opera.postError(["[E!]", this.fixArgs(arguments)]);    },
createError () {     return SuperError.subclass.apply(SuperError, arguments)   }
it('superscript exclusitivity', function() {       let editor = this.setEditor('<p><sup>0123</sup></p>');       editor.formatAt(1, 2, 'script', 'sub');
{         var innerElement = new qx.html.Element();
var type = Object.prototype.toString.call(subject).slice(8, -1)     switch (type) {
await knex.raw(`drop database "${target}"`);   } catch (err) {
console.warn('This should not happen.')       }     } else {
searchUsernames: { title: 'Search all usernames, used for admin/mod UI components to lookup users' },   adminPage: { title: 'Page through all forum users, used for admin/mod' },   removeInvite: { title: 'Remove an Invitation' } };
oldSnapshot.push(this._currentSnapshot[i]);       }
);         default:
if (Ember.FEATURES.isEnabled('propertyBraceExpansion')) {         var itemPropertyKeyPattern = match[2],             addItemPropertyKey = function (itemPropertyKey) {               cp.itemPropertyKey(dependentArrayKey, itemPropertyKey);
temp = replace     replace = []     for (i = 0; i < search.length; i += 1) {
throw("incorrect value '"+newProperties[c.name]+"' of type "+DS.typeOf(newProperties[c.name])+" passed to column with type "+c.type);               }               c.data[rowIndex] = newProperties[c.name];
return true; }
var getExports = require('../core/getExports') module.exports = function (context) {
} catch (e) {       e.message = 'Failed to install android_bundle: ' + e.message;       throw new Error('Failed to install android_bundle: ' + e.message);     }
for(prop in proto){      if(proto.hasOwnProperty.call(n, prop)){         var v = n.getAttributeNode(prop);         v = v && v.nodeValue;
{  this.projectionMatrix.makeOrthographic(-this.size.x, this.size.x, this.size.y, -this.size.y, near, far); }
var alasql = require('..');  }
progress(null, "Fetching repositories ...");         CONFIG._github.repos.getFromUser({             user: user
throw error;     } }
if (typeof JpegImage === 'undefined') {     throw new Error('No JPEG Baseline decoder loaded');   }
minValue(query=null) {         if (!this._backend.connected) throw new Error('JungleDB is not connected');         return this._currentState.minValue(query);
this.store = Flux.getStore('application');         this.data = {             apps: this.store.getApplications()         };
initialize: function(options) {         this.modal = window.parent.Galaxy.modal || new Modal.View();         this.model = (options && options.model) || new Backbone.Model(options);
function _addChar(ch, pos){       var pos = pos || _chars.length;       var id = _.uniqueId('char-')
allowed_attributes.each(function(attribute) {             if (value = child.readAttribute(attribute))               new_child.writeAttribute(attribute, value);
const conn = await db_open();   await activate_feed(conn, channel, feed_id);   conn.close();
this.renderList();             } else {
this.catalog.prop('Pages', this.pages.toReference())   this._compute()
function saveAllFiles() {         for (key in sessions) {             if (sessions.hasOwnProperty(key)) {                 saveFile(key);             }
var histogram = new Map();     var tmp_arr = [];     var key, i, code, strl = 0;
_allCompleted (tasks) {     for (let i = tasks.length - 1; i >= 0; i--) {       if (!tasks[i].available) {
Pipeline.prototype.index = function() {     this.gremlin.queryIndex(...arguments);     return this;   };
var Machine = require("../../../../lib/sentient/machine"); describe("Integration: 'and'", function () {
throw new Error("For not all values in the array " + data.val + " is the property " + forChild.val + " of type " + types.join(' or ')); }
default:           result = undefined;       }
function toggleDir() {   var tr = $(this).parents("tr");   var folderid = tr.get(0).id;
soundManager.play("cuehit");    },    undefined, this);
var breakpointGutter = function () {         this.cm = null;         this.cd = null;
ownerType: 'mixin',          getValue: () =>  {              let html = _getHtml(this);              return html.value;
if (rc != 0) {         throw new Error('can not call subscribe command');     }
app.use((err, req, res, next) => {       throw new Error('Something went wrong!, err:' + err)       res.status(500).send('Something went wrong!')     })
trace( "Bug? already seen request" );     console.log( "Bug? already seen request" );
if (this._template && isThemeVar && isRefContext) {                  if (parent.type === NodeType.ARGUMENTS) {           throw new Error('Template theme variables are not permitted as arguments:\n>>> '+Node.toString(parent));         }
export function merge(oldCookieString, newCookieString) {   const oldCookieJar = !!oldCookieString ? parse(oldCookieString) : [];   const newCookieJar = !!newCookieString ? parse(newCookieString) : [];
self.remove = function (model, e) {
import { connect } from 'react-redux'; import { login, setBalance, resetPrice } from '../actions/index.js'; import { Link } from 'react-router';
var e, el, m, ml, fm, fml, element, material,   v1x, v1y, v2x, v2y, v3x, v3y, v4x, v4y,   size;   if ( this.autoClear ) {
this.prototype.loadPluginMacros = function(plugin) {     for (let macro in plugin.macros) {       if (plugin.macros.hasOwnProperty.call(plugin.macros, macro)) {         this.macro(macro, plugin.macros[macro]);
var self = this;     this.inheritedAsync( checkPermissionsGet, arguments, function( err, res ){       if( err ){         cb( err );       } else {
global.get_nickname = function(uid){
throw new Error("An url is required for loading media");   }else{
}).call(this);
config = readConfigFile(envVal);     }
return compute.sequence(         func.createConstructor('Number', 1, number_ref.NumberPrototype, number_ref.Number.setValue(new Number())),
var tag_version = require('../../lib/utils').tag_version require('../../lib/logger').setup([])
&& this.authorizer.isPermittedAll(permissions);  } }
let successful = document.execCommand(actionAttr);             if (!successful) throw new Error('Invalid "data-action" attribute');             this.dispatchEvent(actionAttr, selectedText, currentTrigger);
layers: [baseMap.tileMap.prop_tilemap],     target: element,     renderer: ol.RendererHint.CANVAS     };
if (!this.hasID(nodeID) || this.hasOwnID(nodeID)) {                                  this.nodesByID[ nodeID ] = node
if (err) {                 nodeUtil._logN.call(this, "fieldInfo XML Error: " + JSON.stringify(err));                 this.ptiParser = null;
uniforms: THREE.UniformsUtils.merge( [    THREE.UniformsLib[ 'common' ],    THREE.UniformsLib[ 'aomap' ],    THREE.UniformsLib[ 'fog' ]
Object.keys(packages).forEach((pkg) => {       const packagePath = path.resolve(path.join(__dirname, '..', 'node_modules'].concat(pkg.package.name.split('/')));       if (fs.existsSync(packagePath)) {
fill: function (opts) {         return casper.sendKeys(opts.selector, opts.text, {reset: true});     },
const OPTIONS = {...state}       let {minify, ...rest} = command == SET_PROJECT_TYPE         ? getProjecTypeOptions(payload)
var editor = npm.config.get("editor")     , cwd = path.resolve(npm.dir, p)   fs.stat(cwd, function (er, s) {
var JSSourceFilefromCode,         textDepRegExp = /["'](text)\!([^"']+)["']/g,         relativeDefRegExp = /(require\s*\.\s*def|define)\s*\(\s*['"]([^'"]+)['"]/g,         cssImportRegExp = /\@import\s+(url\()?\s*([^);]+)\s*(\))?([\w, ]*)(;)?/g,
return this.verify(function verified(err) {     if (err) return fn.call(this, err);     var current = this.pid;
style: { opacity: 1 },         onAnimationEnd: function() {
var charset = parser.parseCharsets(3, 2, new CFFStrings(), true);       expect(charset.charset).toEqual(['notdef', 8, 9]);
}     len = message.data10.length;     for (i = 10; i < 27; i++) {         var version = versions[i][ec_level];
jj = ((j*4) & modulus);    if(ssz < 4 + jj) throw new Error('FAT boundary crossed: ' + j + " 4 "+ssz);    if(!sectors[addr]) break;
get: function () {         return this.data.sleepSpeedLimit;
constructor(rootPattern, referencer, callback) {         this.referencer = referencer;
this.classList.remove.apply(this.classList, ALL_VARIANT_CLASSES);
let clickedEl = event.target;
return this._head != null ? this._head : new String ( "" );  }
const diffRender = function (olds, news) {     return news;     if (!olds || olds.length !== news.length) {         return news;
return true         } else if (comparison < 0) {
"rotate(" + this.angleDeg + ")";     }
var deps = this.diffDependencies[diff.id];                         deps.forEach(function(diffId) {                             self.trigger('markPublishDiffItem', { diffId: diffId, state: false });
var material = new GLBoost.ClassicMaterial(); material.shaderClass = MyCustomShader;
if (!((address_ != null) && address_)) {               throw new Error('Missing address input parameter.');             }
} catch (err) {             log.error(err);
}     return b;    case 27:
vertices.position.forEach((elem, index, array) => {       for (var attribName in vertices) {         if (vertices.hasOwnProperty.call(vertices[attribName], index)) {           var element = vertices[attribName][index];
return function (scene, config) {         var _transform = new Transform(this),             _components = [_transform],             _layer = 1,
return merge.smart(...this.configs)   }
const DatabaseManager = require('@adonisjs/lucid/src/Database/Manager') const VanillaSerializer = require('@adonisjs/lucid/src/Lucid/Serializers/Vanilla') const { ioc } = require('@adonisjs/fold')
module.exports = Palette; }
var osm = this.getAttribute('data-id'),                 layer = this.getAttribute('data-layer'),                 tags = this.getAttribute('data-tags');
var prefixes = OpenLayers.Style.SYMBOLIZER_PREFIXES;         for (var i=0;i<rules.length;i++) {             for (var s=0; s<prefixes.length; s++) {
return compute.sequence(         func.createConstructor('String', 1, string_ref.StringPrototype, string_ref.String.setValue(new String())),
describe("when running multiple steps", function(){     var async = new AsyncSpec(this);     var stepsRun;
app.use(function* (){
case 'names':       for (var p = 0; p < value.length; p++) {         format += value[p].replace('/', '');
/wireless/ig,         /(shop|store)/ig,         /[.,\/#!$%\^&\*\+\-_`~()]/g,         /\s/g     ];
var id = $scope.element.id;         var poll = $scope.element.poll;
pc.extend(pc, function () {     var SAMPLE_COUNT = 15;
__inline('./scroll'); __inline('./tab');
if (!zoneData) return null;   const co2ColorScale = getCo2Scale(colorBlindModeEnabled);   const co2Intensity = getProductionCo2Intensity(mode, zoneData);
var child = p._handler;    parent.chain(child, parent.receiver, onFulfilled, onRejected,      arguments.length > 2 ? arguments[2] : void 0);    return p;
return "八";                 }             case 8: {                 return "九";
assert.fail();             }
Renderer.prototype.render = function (template, locals, options) {   var o = this.options;
}).call(this);
config.clean.vendor = {  src: [out_build+'/vendor', out_build+'/vendor-resources'], options: { force:true } };
var escapeRegExp = function (str) {     return str.replace(/[\[\]\{\}\(\)\*\+\-\.\^_`\|]/g, "\\$&"); };
if (!user)         throw new Error('no user');       else
return movieApi.discoverMovie(genre.value)       .then(carouselle => message.reply([carouselle])
var ByteCode = []; var ArrayType = []; ByteCode.codes = {
}   case 'boolean':
Handlebars.registerHelper('truncate', function(options) {         var value = options.fn(this);         if(value.length > 255) {
, sep = require('path').sep   , signature = require('cookie-signature')   , nodeVersion = process.versions.node.split('.');
var pathParams = {};   Object.keys(pathParamData.properties).forEach(function (key) {     var prop = pathParamData.properties[key];
}             return contextData;
$('#AreaFieldsWrapper').html('<input type="hidden" name="fieldChildAreaSlug" value=""><input type="hidden" name="fieldAreaSlug" value=""><input type="hidden" name="fieldArea" value="">');  $('#NewVenueForm').submit(); }
}     },     _onWindowBlur : function( event ) {       this._hideCalendar();
'clientY': offset - $(window).scrollTop(),         'offsetX': offset - player.offset().left,         'offsetY': offset - player.offset().top,         'pageX': offset,
, { from:"/edit
Mergeatron.prototype = new events.EventEmitter(); mergeatron = new Mergeatron(db); config.plugin_dirs.forEach(function(dir) {
}                 const buttonType = this.module.getConfiguration('toggle');                 prom.then(function (ok) {
if (!semver.satisfies(pkg.version, that.options.gitbook)) {             throw new Error('GitBook version doesn't satisfy version required by the book: '+that.options.gitbook);         }
ComponentFacet.prototype.init.apply(this, [model, self]);
if (!(requirement in require_.modules)) {                 throw new Error('dependency not loaded: ' + requirement);             }
$(this).click(function(e) {           e.preventDefault();
var advisor = function() {  this.pointcut = null;  this.advice = null;
const docs = this.meta.docsWith(msg.actor.id);                     const clocks = yield this.clocks.getMultiple(docs);                     DocumentBroadcast.broadcastMetadata(metadata, clocks, [msg.peer]);
let { clusterTemplate: { defaultRevisionId = '' } } = this;     return this.id !== defaultRevisionId && !get(this, 'clusterTemplate.isReadOnly');   },
it("move should be 1 ", function* () {              const stemGroup=file.createGroup('pmc/Trajectories');
angular.module('umbraco.services').factory('archetypeService', function () {          function executeFunctionByName(functionName, context) {         var args = Array.prototype.slice.call(arguments).splice(2);
if (is_phylotree_active===false) {   console.log('[BUG] phylocanvas not initialised and we\'re trying to start up gubbins. Problems to follow...')
constructor(context) {   super(...arguments);
var ee2 = new EventEmitter2()   , ee3 = new EventEmitter3()   , ee1 = new EventEmitter1(); ee1.setMaxListeners(Infinity);
const {} = require('../types'); const NS_PER_SEC = 1e9;
},     setContractsByAddress(result) {if (result&&result.success) {
loader: 'file?name=${options.dir}[name].html!markdown-loader',                 test: /\.md$/             }`
parentDiv.appendChild(popoverDiv);             popoverDiv = popoverDiv;
var elementRemoveEventListener = ElementProto.removeEventListener ? function(eventName, listener) {
})(this.exports = this.exports || {});
this.mockOpts = opts;                     this.method = 'generateInline';                 })             });
getPreParcels : function(kvp_uid, cb) {         var kvp_uid = this.uuid;         var kvp_uidFilter = new OpenLayers.Filter.Comparison({
} else {        err.code = res.statusCode;
calculateFee (trs, sender) {     library.base.block.calculateFee();   }
if ( properties = this.properties ) {    for( let i = 0, l = properties.length; i < l; i++ ) {
case "a": damage = {elem: "fir", coeff: 14.8, total: true}; break;        case "c": damage = {elem: "phy", coeff: 10.4, total: true};        default: damage = {elem: "psn", coeff: 10.4, total: true};        }
var b = makeReactive(1);     var sum = makeReactive(function() {
{  var info = [];
stopDrag(e) {         console.log(e.data);
for (var key in global) (function() {       return (context)[key] = (global)[key];     })();
return;     }     var body = (this.get('doc.body') || '').toString();     if (this.get('doc.body') !== this.get('session').getValue()) {       this.get('session').setValue(body);
, spinner_tpl = '<span class="glyphicon glyphicon-refresh decoy-el-spinner">'   , editor_width = 300    , icon_size = 20
else {                 throw new Error('buildfunc: unsupported refarg type: ' + func.name);             }             out.push('}');
var chunk;         while ((chunk = this.read())) {           if (file.writable) file.write(chunk);
if (JSHINT(code, CONFIG.LINT_SETTINGS)) {             runButton.setIconCls('icon-loading');
return path.replace(/\\/g,'/').replace(/\/[^/]*$/, ''); }
else {      for (var index = 0; index < this.idAttributes.length; index++) {        attr = utils.findAttr(node, this.idAttributes[index], null);
function findDoc(ts, doc, name) {     for (var name in ts.docs) {       if (ts.docs.hasOwnProperty(name)) {         var cur = ts.docs[name];         if (cur.doc == doc) return cur;
if (bottomLabel) {             domutil.removeClass(timeElement, config.classname('time-guide-bottom'));
import { hasScope } from "webiny-api-security"; import gql from "graphql-tag";
if (configuration.modelType !== null && !angular.isString(configuration.modelType)) {         throw new Error('modelType must be a string');       }       if (configuration.modelType !== null && configuration.modelType.length < 1) {
getFullURL() {     const fragments = Array.from(arguments).map((fragment) => encodeURIComponent(fragment));     return urljoin(this.serviceUrl, ...fragments);
;(function () {
fromObjects: function(objects, options, callback) {       var options = (options !== undefined ? options : {});       var config = {};
injectConfigFilePath: (filePath, configPath) => {     this.inject(filePath, '__CONFIG_FILE__', configPath);   },
const data = this.items(this.context, this._providerSetLocal)           if (data && data.then && isFunction(data.then)) {
await writeData     balances = balances.toNumber()
function isDigit (character) {     return isInRange(character, '0', '9');
import {ViewEncapsulation} from './metadata/view'; import {Type} from './type'; import {TypeDecorator, makeParamDecorator, makePropDecorator} from './util/decorators';
$scope.trainings_under_this_process = getNoOfTrainingJobs(data);         $scope.available_models = getAvailableModels(data);
if (typeof config.facetsCustomizer === 'function') {         function add(property, label) {           derivedFacets.push({value: property, label: label ? label : localize(property)});
} function controller () {     let vm = this;     vm.dismiss = dismiss.bind(vm, $state);
SpaceTime = require('./methods/query')(SpaceTime); SpaceTime = require('./methods/add')(SpaceTime); SpaceTime = require('./methods/same')(SpaceTime); SpaceTime = require('./methods/compare')(SpaceTime);
var named = require('node-named')   , EventEmitter = require('events').EventEmitter   , Logger = require('./logger')
Object.defineProperty(Phaser.TileSprite.prototype, "frame", {
p["estimateSize"] = p.estimateSize; p["createPromise"] = p.createPromise; p["when"] = p.when; p["lookup"] = p.lookup;
function meta_objs() {  const {classes} = this.constructor;  class MetaObjManager extends CatManager {
function moveNestedTags(child, i) {   for (var tagName in child.tags) {     if (child.tags.hasOwnProperty.call(tagName)) {       var tag = child.tags[tagName]
this.specialCbs[specialCb] = null;     }
var frequencies = [];         context = new window.OfflineAudioContext(1, buffer.length, buffer.sampleRate);
import DeviceCard from './card'; import styles from './styles.css';
className: className,           containerElement: 'div'            , disableTouchRipple: true,           disableFocusRipple: true,
const reportName = yearlyReport ? `${year} Yearly Platform Report` : `${year}/${month + 1} Monthly Platform Report`;   const dateFormat = yearlyReport ? 'YYYY' : 'YYYYMM';   console.log('startDate', startDate, 'endDate', endDate);
this.destroy = function () {     this._destroy();
, common.shipItems  , true  , function () {   console.log(arguments);  }
var promise = $.when.apply($, _toConsumableArray($.map(constraints, function (constraint) {           return _this10._validateConstraint(value, constraint);
if (!this.container) {             throw new Error('Toggleable container with id "' + ContainerId + '" not found');         }
Debugger.prototype.addProvider = function (type, obj) {   this.debugger.addProvider(type, obj)
canvasParent, renderer, canvas, scene, camera,             light1, light2, controls, compass,             render, animate, add3DObject, invalidate,
+ unicode.packages.Nd         + unicode.packages.Pc + "\\$_]|\s])+", "g"     );
var newvalues = this.dialog.getValue();    this.datatable.updateRow( this.selectedRecord , newvalues );
if (rootElem.className.search(new RegExp('\\b' + klass + '\\b')) >= 0) {       return Rx.Observable.fromEvent(rootElem, eventName);
for (var file in files)         {
test: function test() {             this.dSetting[0].id = Math.random();
var logger;     var context;     var driver = model.load( module, {
for ( i = 0; i < document.styleSheets.length; i++ ) {             sheet = document.styleSheets[ i ];             if ( sheet.media.mediaText === 'print' ) {                 return sheet;
}, function () {             callback.apply(this, arguments);
{ "group__opts_group.html#gae68fb615835364c0809555e8dc93f57e":[3,0,2,57], "group__stan_conn_group.html":[2,2,11], "group__stan_conn_mgt_group.html":[2,2,11,0],
writable: false,             value: function (type) {                 throw new Error("Not implemented.");             },
Error.call(this);     Error.captureStackTrace(this, arguments.callee);     var typeKey = _.first(_.where(_.keys(defs), function(defKey) {
const PARAMS_END_PATTERN = '[\/\?&'\*\+\-\.\^_`\|~0-9A-Za-z]+$';
let hostName = null;     if (!Boolean(vipPortError)) {       hostName = (
var nCols = this.__spCols.getValue();             for (i = 0; i < nCols; ++i) {                 cols.push(new String(i + 1));             }
html = html.replace(/@CLASSNAME/g, '');     default:       break;   }
this.formTitle = '修改字典'         var detail = this.selRow.detail.split(',');         var details = []         detail.forEach(function(val,index){           var arr = val.split(':')
stageView.borderRight();     this.canvas.add(stageView.borderRight).calcOffset();   }
var record;     this.fetch_obj( result, function( obj ) {       record = self.populate_record( obj );
case "t6t":           replace_code = preset_mode_util("\{t6t\}", mode_str, origin_mode_str);           code = code.replace(/\{t6t\}/g, replace_code);
var destination = {};  for (var property in source)   if (source.hasOwnProperty.call(source, property))   destination[property] = source[property];  return destination;
}   }   processItem(this.currentItem);
var consts = require('../../constants'); var utils = require('../../utils');
var ll = par.getElementsByTagName('li'); if (!ll.length) return '';  for (i=0;i<ll.length;i++) {   var range = ll[i].getAttribute('data-range');
throw new Error('Element must be in document');   }
(self.f = f);     if ((!(((c instanceof Chain) || (c instanceof Thunk)) || (c instanceof Done)))) {
function redrawCharts () {         d3Selection.selectAll('.grouped-bar').remove();
drawGpx.enabled = function(_) {         if (!arguments.length) return iD.svg.Gpx.enabled;         iD.svg.Gpx.enabled = _;         dispatch.change();
if (token.tagName === 'html') {          tc._insertElement(this._createElementForToken(token, false));          tc.insertionMode = BEFORE_HEAD_MODE;
for (i = 0; i < arguments.length; i++) {     if (typeof arguments[i] == 'array') {       this.sharedModel_.dataSets.push({
{      id: A.Escape.html(instance.get(ID)),      label: A.Escape.html(instance.get(LABEL)),      name: A.Escape.html(instance.get(NAME)),      value: A.Escape.html(instance.get(PREDEFINED_VALUE)),
var tmpTranslate = [1, 0, 0, 1, -topLeft.x, -topLeft.y];       this.clipBbox(graphics, bbox, x0, y0, x1, y1);
jQuery.multimediaSupport = {};  var $  = jQuery,    m  = $.multimediaSupport,   vID = new Date().getTime(),
window.jTool === window.$ && delete window.$; export default jTool;
if (callback) {     function next(er, ret) {       if (ret)
Meteor.startup(function() {  Session.setDefault("height", 900); })
yy.Search.prototype.toJavaScript = function(context, tableid, defcols) {
function replaceImages(options = {}) {   const res = id => this.resolve(id)   function transformer(tree) {
return regex.test(value);      }       ,color: function(field, value, params) {        }
bw.displayIngameMessage('it\'s much more sophisticated!', 60000)   var chatStream = bw.chatHandler.grabExclusiveStream()   var remote = repl.start({ input: chatStream, output: chatStream, terminal: false })   chatStream.setMessageTimeout(60000)
tools.loadModuleAndReplace(options, 'column_view'),                 $.when.apply($, options.columns.map(function(column) {                     return tools.loadModuleAndReplace(column.transition, 'class');
$.when.apply($, promises).done(function () {
}).call(this);
import React from 'react'; import { AppRegistry, StatusBar, StyleSheet } from 'react-native'; import { Router, Scene } from 'react-native-router-flux';
.reduce((sortedLabels, labelName) => {       sortedLabels[labelName] = obj[labelName];       return sortedLabels;
r.lastIndexOf('/') + 1, r.lastIndexOf('.')                         ).replace(/(?! |-)[\W]/g, ' ')                     ).toLowerCase()
}     Object.keys( props ).forEach( function ( i ) {       prop = props[i];
POST: function () {         return _partial(this.http, 'POST').apply(this, arguments);     },
this.data.length = 0;   }
Ext.define('devilry_subjectadmin.model.Subject', {     extend: 'Ext.data.Model',
, topologyOptions: topologyOptions
T.Heap.INIT_SIZE_ = 32 T.Heap.prototype.killHeap = function() {   this.handles_ = null   this.ns_ = null
.on('exit', function () {         if (!argv['no-quit']) process.exitCode = 0       })
function() {      $sortable.text(gettext("Show"));     $sortable.closest("fieldset").addClass("collapsed");     return false;    }
if (!ws || !ws.length) {       return;     }
module.exports.generateSql = () => {   return new String("I want to run!!") }
this._Width = 0.0;      this._Length = 0;  }  Nullstone.Create(_TextLayoutLine, "_TextLayoutLine");
});  return resultEntities;   return wikidataapi.getEntityPropertyClaims(resultEntities,language).then(function(responses2){
return this._wrop("add", [obj], function (e) {                 var keyPath = req.source.keyPath;                 if (keyPath) obj[keyPath] = req.result;             });
describe('133. longrawProcedureBind_inout.js', function() {   var connection = null;
for (var i=0;i<sidebar.length;i++){     for (var j=0;j<sidebar[i].length;j++){       list[sidebar[i][j]] = j;     }
ret.image = 'android'       if (rep = ret.ua.match(/(Android|Adr)[ |\/]([0-9]+)/i)) {         ret.version = rep[2]
, Variable = require("./variable")   , queryMask   , variablesMask   , objectMask   , maskUpdater
return translate({bool: true}, 'es')       .then(e => {        expect(e).toBeDefined();        expect(e).toEqual({bool: true});       });
var ComponentWithRoute = function (_Component) {         babelHelpers.inherits(ComponentWithRoute, _Component);
});                 }                 if (matchedPhoneNumber && matchedPhoneNumber.phoneNumber !== this.dialInNumber && !this._showSaveAsDefault) {                   this.updateDialInNumber(matchedPhoneNumber.phoneNumber);
$tab_t.width(1 / $tab_t.length * 100 + '%');    }
$scope.selectNode = this.selectNode;         $scope.selectedNode = this.selectedNode;         $scope.dblClick = this.dblClick;
let prevValue = initialValue;   while (iterator.hasNext()) {     const { done, value } = iterator.next();
if (Array.isArray(this._renderProperties)) {   for (i=0;i< this._renderProperties.length; i++) {    render(this._renderProperties[i], this._encodings, this._options);
this[i].innerHTML = "";       }       return this;
function validAddress(address) {             return address.length === 42                 && validator.isHexadecimal(address.substr(2))                 && address.substr(0, 2) === '0x'
check.call(this, request, response);   response.writeHead(200, {});
this.compile(options.callback); }
$('#help-summary h3').each(function(){        if ($(this).prevAll('h2').first()[0]!==h2) {     $(this).slideUp();    } else {
}     case 'PANEL_CREATE': {       const { payload } = action
onVMouseMove: function(event) {         if (this.props.floating) {             event.preventDefault();
, step: function(ignoreTime){
}  this.renderBufferImmediate = function ( object, program, material ) {   state.initAttributes();
var Concur = require('Concur')   , object = require('isomorph/object')   , validators = require('validators')
if ((function(){"use strict"; return this === void 0})()) {             Object.defineProperty(method, "thrower", {
return client.connect(mock_uri)         .then(function() {           return client.createReceiver(queue, function(err, payload, annotations) {});         })
};     WhileStatement.prototype,getCondition = function(){         return this._condition;     };
beforeEach(inject(function (Private, $injector) {         $state = {filters: []};
console.error("Got a non-GET request to the redirect destination URL");         return;
try {              S3.JSONRequest[$(this).attr('id')].abort();          } catch(err) {}
case DIFF_INSERT:      if (this.offset >= startOffset) {       this.offset += diffOffset;
}     $.extend( hx , { KeyMap : KeyMap });
if (_.isUndefined(value)) {                 throw new Error('parameter ' + key + ' has not been set.');             }
params.FilterDesc = args.optarg;                   break;                 case "l":                 params.FilterLib  = args.optarg;
var img = this._createElement("img");                         function done() {                             img.onerror = function() {};
const mappedTree = constructTree(mappedLabel, mappedChildren);       pathMap.set(stringify(path), mappedTree);
this.form = this.app.form;     this.record = this.app.record;     this.sendNotification = this.app.sendNotification;     processAlertMessage(this);
var window = require(__dirname + "/../../lib/browser").windowAugmentation(dom); var document = window.document = window.document.createElement("document"); var location = window.location = window.location.createElement("location"); var navigator = window.navigator = { userAgent: "node-js" };
else if ( c === "total" ) {           var a = 1         }         else {           var a = 0
emotify: function(text) {    var resourcesDir = Candy.View.getOptions().resources,      i;    for(i = this.emoticons.length-1; i >= 0; i--) {
Math.floor(Math.random() * 128).toString(10) + ')';           break;
require('./ServiceBase'); SuperMap.REST.ChartFeatureInfoSpecsService = SuperMap.Class(SuperMap.ServiceBase, {
onBroadcast (callback) {     callback('Not Yet Implemented');   }
context.fillText(item.str, x + item.delta, req.y);       x += context.measureText(item.str).width + delta;     });
}       this.set('optionsDates', newOptionsDates);     }
test('clearFeedback', function () {     this.formGroup.clearFeedback();
test();       schema = { anyOf: [ schema ] };       test(1, '#/anyOf/0');
var tableBody = $("#pendingJobListDataTableBody");     for (var p in list) {         if (list.hasOwnProperty(p)) {             var tr = $("<tr></tr>");
return compareStats('size', first, second, firstName, secondName) * descending;     case 4:
os.gadgetPrefs_ = new window['gadgets']['Prefs'](); }
switch (name) {       case 'date':         const dateMoment = evt != null ? evt.format('YYYY-MM-DD') : null;         date = dateMoment ? `@${dateMoment}` : null;
.fail( function() {                 alert( WPAuth0EmailVerification.e_msg );             } );
var validUrl   , malformedUrl   , invalidUrl var server = http.createServer(function (req, res) {
case 'ms_sqlitefilename':                 configuration.data.filename = environment[key];                 break;             case 'website_auth_signing_key':                 configuration.auth.secret = environment[key];
const {resolve, dirname} = require('path') const JSONChain = require('json-chain')
{   if (!this instanceof Buffer) return new Buffer ();   MemoryObject.apply(this);
return this.tile;    case("left"):
const REGEX_SPACE_S_FILTER = /([(,|])[\s]+/g; const REGEX_PROP_FILTER = /\.([a-zA-Z_$#][^\s\/,[\]()'"|#]*)/g; const REGEX_ARRPROP_FILTER = /([^\s([,])(\[)/g;
import ButtonIcon from 'ui/components/buttons/flavors/icon/index.react'; import PickList from 'ui/components/picklists/index.react'; import { prefix as pf } from 'app/modules/ui/util/component';
}).then(function () {             return MM.clickOn('Prior Knowledge assessment');         }).then(function () {             return MM.clickOn('State your prior knowledge here:');         }).then(function () {
var title, _widget, isWidget, _element, isWidget;         for (var widgetName in targets) {
if (componentGlyph.points) {                     transformedPoints = transformPoints(componentGlyph.points, component.dx, component.dy);                     glyph.points.push.apply(glyph.points, transformedPoints);                 }
import Components from '../Components'; import Logo from '../Logo'; import Message from '../Message'; import TableOfContents from '../TableOfContents';
this.props.html,       this.props.showImages || true ? defaultTagPolicy : tagPolicyNoImages     );
var canSendMMS = getCanSendMaxMessageSize(arguments[0], isFirefox);
this.completeAction(action);    }, function () {
trackException(error, fatal = false) {     GoogleAnalyticsBridge.trackException(this.id, ...arguments);   }
console.log('shutting down');    }
$(document).on('mousemove.owl.core touchmove.owl.core', $.proxy(this.onDragMove, this));    $(document).on('mouseup.owl.core touchend.owl.core', $.proxy(this.onDragEnd, this));    if (Math.abs(delta.x) < Math.abs(delta.y)) {
disabled: function () {       return this.get("processing") || !this.get("isValid") || this.get("isEmpty");   },property("processing","isValid"),
case JSON3.stringify(new Number()) === "0":           case JSON3.stringify(new String()) == '"'
onkeyup   : () => {},     onkeyup   : () => {},
return value;      case 'phonenumber_countrycode':
});     this.editor.applyingChangeState = false;   }
...prevState,         errorMsg: action.payload,       }
var app = require('../../../../examples/auth/app')   , request = require('../support/http');
