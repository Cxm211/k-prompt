Namespace(log_name='./RQ5/bugsinpy_900_2/codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='RQ5/bugsinpy_900_2/codet5p_220m', data_dir='./data/RQ5/bugsinpy_900_2', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'def _can_use_numexpr(op, op_str, a, b, dtype_check):          if np.prod(a.shape) > _MIN_ELEMENTS:              dtypes = set()              for o in [a, b]:                 if hasattr(o, "dtypes"):                      s = o.dtypes.value_counts()                      if len(s) > 1:                          return False                      dtypes |= set(s.index.astype(str))                 elif isinstance(o, np.ndarray):                      dtypes |= {o.dtype.name}', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'def _can_use_numexpr(op, op_str, a, b, dtype_check):          if np.prod(a.shape) > _MIN_ELEMENTS:              dtypes = set()              for o in [a, b]:                 if hasattr(o, "dtypes") and o.ndim > 1:                      s = o.dtypes.value_counts()                      if len(s) > 1:                          return False                      dtypes |= set(s.index.astype(str))                 elif hasattr(o, "dtype"):                      dtypes |= {o.dtype.name}'}]
***** Running training *****
  Num examples = 900
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 226
  train_loss = 57.2938
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 74.8 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.8
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 451
  train_loss = 36.0418
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 76.96 	 Previous best codebleu 74.8
  ********************
 Achieve Best bleu:76.96
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 676
  train_loss = 24.0042
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 76.77 	 Previous best codebleu 76.96
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 901
  train_loss = 16.2581
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 77.1 	 Previous best codebleu 76.96
  ********************
 Achieve Best bleu:77.1
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1126
  train_loss = 10.759
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 77.69 	 Previous best codebleu 77.1
  ********************
 Achieve Best bleu:77.69
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1351
  train_loss = 7.2898
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 77.55 	 Previous best codebleu 77.69
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1576
  train_loss = 5.297
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 78.08 	 Previous best codebleu 77.69
  ********************
 Achieve Best bleu:78.08
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1801
  train_loss = 3.927
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 77.0 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2026
  train_loss = 2.9726
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 77.74 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2251
  train_loss = 2.5135
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_900_2/validation.jsonl
  codebleu-4 = 77.95 	 Previous best codebleu 78.08
  ********************
early stopping!!!
reload model from RQ5/bugsinpy_900_2/codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/RQ5/bugsinpy_900_2/test.jsonl
  codebleu = 78.47 
  Total = 117 
  Exact Fixed = 17 
[7, 9, 13, 15, 20, 25, 33, 38, 42, 58, 76, 82, 89, 90, 96, 110, 111]
  Syntax Fixed = 1 
[29]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 117 
  Exact Fixed = 17 
[7, 9, 13, 15, 20, 25, 33, 38, 42, 58, 76, 82, 89, 90, 96, 110, 111]
  Syntax Fixed = 1 
[29]
  Cleaned Fixed = 0 
[]
  codebleu = 78.47 
[0.6939112308588368, 0.676525822803221, 0.8096114788906146, 0.8962096929024133, 0.8782734899756608, 0.7420541780659815, 1.0, 0.8754861943073293, 1.0, 0.8233676046914074, 0.8773104352365284, 0.8753086020037879, 1.0, 0.4740532618616287, 0.9847962409659572, 0.5788186931493522, 0.8573638305228279, 0.9474759345795825, 0.782053171927164, 1.0, 0.8007264798534881, 0.8884573785188872, 0.6883720951974961, 0.884250182279102, 0.9355467351067721, 0.7503437068674359, 0.6623090658678863, 0.5107938992540617, 0.9114766235414771, 0.9063467386633746, 0.8231560738418289, 0.9082827330257635, 1.0, 0.8078073654022788, 0.8336108571661149, 0.767723111687518, 0.610067068626702, 1.0, 0.8703246706459902, 0.8434652034268404, 0.8358395384567638, 1.0, 0.8754092712592991, 0.8768686925984219, 0.9178662308912058, 0.6441425627537012, 0.6728230800934798, 0.8871978499693505, 0.6974243309270205, 0.5218510181581382, 0.8352894783834772, 0.7042953619649426, 0.7953587603777192, 0.5750974938187585, 0.6508693332230462, 0.31787422660353093, 0.667268531627923, 1.0, 0.4500690462517839, 0.6166533539875096, 0.8077895563342797, 0.6530224530296921, 0.7639654153934541, 0.9411542454583528, 0.6853803599169206, 0.9666856331752072, 0.6601281703247908, 0.9056583090096291, 0.8971695160234401, 0.7842949968649247, 0.8808919461147899, 0.6356257812621184, 0.8853004704636518, 0.8814955038434287, 0.3260936895813032, 1.0, 0.8807926879441415, 0.6099798764643204, 0.49150427670545643, 0.8856389378075658, 0.6006162211964817, 1.0, 0.7714650156104186, 0.5911195501972704, 0.6047866504241914, 0.6913513004703498, 0.583933634540305, 0.7449734989717058, 0.9399649879642329, 1.0, 0.7531797171538064, 0.7313821813372119, 0.5921911079082992, 0.7205089220380079, 0.8234479137638847, 1.0, 0.8548397899287874, 0.8642706682188466, 0.7398658182365634, 0.9309470682699423, 0.8362747318435784, 0.6223228630422541, 0.5894199743134722, 0.9204219587780458, 0.7164493834577911, 0.5571314709024371, 0.7793778739518044, 0.7225931341121177, 0.5117566728908322, 1.0, 1.0, 0.7443181170763433, 0.9142445273649933, 0.7768711691119308, 0.8475864225311183, 0.7093853536262804, 0.7572098935987482]
Finish training and take 27m
