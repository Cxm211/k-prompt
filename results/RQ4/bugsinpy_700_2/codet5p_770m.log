Namespace(log_name='./RQ5/bugsinpy_700_2/codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='RQ5/bugsinpy_700_2/codet5p_770m', data_dir='./data/RQ5/bugsinpy_700_2', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'def update_sub(x, decrement):          The variable `x` updated.     return tf_state_ops.assign_sub(x, decrement)  @symbolic', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'def update_sub(x, decrement):          The variable `x` updated.     op = tf_state_ops.assign_sub(x, decrement)     with tf.control_dependencies([op]):         return tf.identity(x)  @symbolic'}]
***** Running training *****
  Num examples = 700
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 176
  train_loss = 51.451
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/bugsinpy_700_2/validation.jsonl
  codebleu-4 = 75.9 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.9
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 351
  train_loss = 29.1487
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/bugsinpy_700_2/validation.jsonl
  codebleu-4 = 76.26 	 Previous best codebleu 75.9
  ********************
 Achieve Best bleu:76.26
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 526
  train_loss = 15.3757
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_2/validation.jsonl
  codebleu-4 = 78.75 	 Previous best codebleu 76.26
  ********************
 Achieve Best bleu:78.75
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 701
  train_loss = 8.5749
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_2/validation.jsonl
  codebleu-4 = 76.66 	 Previous best codebleu 78.75
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 876
  train_loss = 4.5659
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_2/validation.jsonl
  codebleu-4 = 77.95 	 Previous best codebleu 78.75
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1051
  train_loss = 2.5795
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/bugsinpy_700_2/validation.jsonl
  codebleu-4 = 76.52 	 Previous best codebleu 78.75
  ********************
early stopping!!!
reload model from RQ5/bugsinpy_700_2/codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/RQ5/bugsinpy_700_2/test.jsonl
  codebleu = 77.5 
  Total = 117 
  Exact Fixed = 11 
[12, 20, 25, 33, 38, 42, 76, 82, 89, 105, 110]
  Syntax Fixed = 1 
[57]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 117 
  Exact Fixed = 11 
[12, 20, 25, 33, 38, 42, 76, 82, 89, 105, 110]
  Syntax Fixed = 1 
[57]
  Cleaned Fixed = 0 
[]
  codebleu = 77.5 
[0.6939112308588368, 0.676525822803221, 0.8096114788906146, 0.8962096929024133, 0.8345805211627153, 0.702221016202038, 0.8611544762176193, 0.8754861943073293, 0.7680104457345107, 0.8233676046914074, 0.8773104352365284, 1.0, 0.7811422794173712, 0.4740532618616287, 0.8923125000332248, 0.8631855387221548, 0.8573638305228279, 0.9474759345795825, 0.782053171927164, 1.0, 0.8385834949297515, 0.8884573785188872, 0.6883720951974961, 0.884250182279102, 0.9355467351067721, 0.7715012035371895, 0.7283421666422167, 0.7318286091585733, 0.8107806147142924, 0.9063467386633746, 0.8231560738418289, 0.8527547497767987, 1.0, 0.8300638244826566, 0.8086254987195756, 0.7738279988463377, 0.610067068626702, 1.0, 0.8703246706459902, 0.8434652034268404, 0.8358395384567638, 1.0, 0.6770468058524584, 0.8789801838086921, 0.7218624088286254, 0.6441425627537012, 0.6728230800934798, 0.8871978499693505, 0.6936199831009335, 0.5218510181581382, 0.6502002482190439, 0.7042953619649426, 0.7953587603777192, 0.5750974938187585, 0.6508693332230462, 0.5037077119806818, 0.947533256575573, 0.8346354401872718, 0.47166395418323315, 0.7507982187182929, 0.8077895563342797, 0.6530224530296921, 0.7639654153934541, 0.9411542454583528, 0.6641163223014905, 0.9666856331752072, 0.6601281703247908, 0.9056583090096291, 0.8971695160234401, 0.8834124216164225, 0.8808919461147899, 0.5970503880018869, 0.6464483418907239, 0.8049555270311923, 0.3131940986105928, 1.0, 0.8807926879441415, 0.6439391185600173, 0.49150427670545643, 0.8856389378075658, 0.7243849758480987, 1.0, 0.7714650156104186, 0.5911195501972704, 0.7332519354895861, 0.6710385019089349, 0.583933634540305, 0.7449734989717058, 0.9202254016124627, 0.8691518237028776, 0.7531797171538064, 0.6467797709324488, 0.39686614731832626, 0.7205089220380079, 0.8234479137638847, 0.9472873156881443, 0.8548397899287874, 0.8642706682188466, 0.8068413656728535, 0.9309470682699423, 0.8362747318435784, 0.4545507520171642, 0.8594942629236695, 0.9204219587780458, 1.0, 0.5571314709024371, 0.8300101016746005, 0.6518897796280376, 0.5117566728908322, 1.0, 0.24185380264172357, 0.7443181170763433, 0.9142445273649933, 0.7768711691119308, 0.8387450644384746, 0.7093853536262804, 0.7572098935987482]
Finish training and take 29m
