Namespace(log_name='./RQ5/python_300/1_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='RQ5/python_300/1_codet5p_220m', data_dir='./data/RQ5/python_300_1', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=2, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': "class YoutubeDL(object):                  elif type in [tokenize.NAME, tokenize.NUMBER]:                      current_selector = FormatSelector(SINGLE, string, [])                  elif type == tokenize.OP:                     if string in endwith:                          break                     elif string == ')':                          tokens.restore_last_token()                          break                     if string == ',':                          selectors.append(current_selector)                          current_selector = None                      elif string == '/':                          first_choice = current_selector                         second_choice = _parse_format_selection(tokens, [','])                          current_selector = None                          selectors.append(FormatSelector(PICKFIRST, (first_choice, second_choice), []))                      elif string == '[':", 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': '', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': "class YoutubeDL(object):                  elif type in [tokenize.NAME, tokenize.NUMBER]:                      current_selector = FormatSelector(SINGLE, string, [])                  elif type == tokenize.OP:                     if string == ')':                         if not inside_group:                             tokens.restore_last_token()                          break                     elif inside_merge and string in ['/', ',']:                          tokens.restore_last_token()                          break                     elif inside_choice and string == ',':                         tokens.restore_last_token()                         break                     elif string == ',':                          selectors.append(current_selector)                          current_selector = None                      elif string == '/':                          first_choice = current_selector                         second_choice = _parse_format_selection(tokens, inside_choice=True)                          current_selector = None                          selectors.append(FormatSelector(PICKFIRST, (first_choice, second_choice), []))                      elif string == '[':"}]
***** Running training *****
  Num examples = 300
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 0
  eval_ppl = inf
  global_step = 76
  train_loss = 75.8066
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 73.96 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:73.96
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 1
  eval_ppl = inf
  global_step = 151
  train_loss = 48.5791
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 74.42 	 Previous best codebleu 73.96
  ********************
 Achieve Best bleu:74.42
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 2
  eval_ppl = inf
  global_step = 226
  train_loss = 33.5584
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 75.2 	 Previous best codebleu 74.42
  ********************
 Achieve Best bleu:75.2
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 3
  eval_ppl = inf
  global_step = 301
  train_loss = 22.9516
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 75.29 	 Previous best codebleu 75.2
  ********************
 Achieve Best bleu:75.29
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 4
  eval_ppl = inf
  global_step = 376
  train_loss = 16.0931
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 76.25 	 Previous best codebleu 75.29
  ********************
 Achieve Best bleu:76.25
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 5
  eval_ppl = inf
  global_step = 451
  train_loss = 11.3546
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 76.16 	 Previous best codebleu 76.25
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 6
  eval_ppl = inf
  global_step = 526
  train_loss = 8.2642
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 76.35 	 Previous best codebleu 76.25
  ********************
 Achieve Best bleu:76.35
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 7
  eval_ppl = inf
  global_step = 601
  train_loss = 6.6251
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 76.35 	 Previous best codebleu 76.35
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 8
  eval_ppl = inf
  global_step = 676
  train_loss = 5.0152
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 76.2 	 Previous best codebleu 76.35
  ********************

***** Running evaluation *****
  Num examples = 104
  Batch size = 2
  epoch = 9
  eval_ppl = inf
  global_step = 751
  train_loss = 4.2598
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/python_300_1/validation.jsonl
  codebleu-4 = 76.32 	 Previous best codebleu 76.35
  ********************
early stopping!!!
reload model from RQ5/python_300/1_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/RQ5/python_300_1/test.jsonl
  codebleu = 77.1 
  Total = 113 
  Exact Fixed = 10 
[24, 60, 68, 70, 86, 98, 102, 103, 107, 108]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 113 
  Exact Fixed = 10 
[24, 60, 68, 70, 86, 98, 102, 103, 107, 108]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 77.1 
[0.6728230800934798, 0.8834124216164225, 0.6601281703247908, 0.47166395418323315, 0.8052050509144788, 0.9411542454583528, 0.8674433454759134, 0.8300638244826566, 0.5571314709024371, 0.7953587603777192, 0.7714650156104186, 0.692438720307067, 0.8475864225311183, 0.7768711691119308, 0.6883720951974961, 0.831676965115411, 0.8856389378075658, 0.6413921957402942, 0.7443181170763433, 0.8884573785188872, 0.7811422794173712, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 0.7711221670600811, 0.6853803599169206, 0.568803606953774, 0.7896354401872717, 0.8808919461147899, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.7507982187182929, 0.9142445273649933, 0.7093853536262804, 0.788050295413492, 0.7572098935987482, 0.8548397899287874, 0.4740532618616287, 0.39686614731832626, 0.5047447948680724, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9309470682699423, 0.6824237503540516, 0.7585846389475988, 0.5911195501972704, 0.8362747318435784, 0.5117566728908322, 0.8923125000332248, 0.6939112308588368, 0.7042953619649426, 1.0, 0.845087053073633, 0.20867343826082332, 0.5852686384049756, 0.5037077119806818, 0.8475332565755729, 0.7503415008507734, 0.7531797171538064, 1.0, 0.6441425627537012, 1.0, 0.6439391185600173, 0.3031200238102166, 0.9472873156881443, 0.676525822803221, 0.6675881054170294, 0.49150427670545643, 0.8096114788906146, 0.5902510564591508, 0.7449734989717058, 0.8912022993575596, 0.8727790091136098, 0.7318286091585733, 0.7738279988463377, 0.8358395384567638, 0.884250182279102, 1.0, 0.8573638305228279, 0.7332519354895861, 0.8086254987195756, 0.9178662308912058, 0.8814955038434287, 0.8021170040829606, 0.7681899150975824, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8789801838086921, 1.0, 0.7884485258508804, 0.8385834949297515, 0.7225931341121177, 1.0, 0.9399649879642329, 0.610067068626702, 0.8300101016746005, 0.8631855387221548, 1.0, 1.0, 0.7243849758480987, 0.9246350539097654, 0.9046292183049148, 0.7669617847742995, 0.9244980214694567]
Finish training and take 28m
