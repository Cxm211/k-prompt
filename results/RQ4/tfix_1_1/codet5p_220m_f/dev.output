import { connect } from 'react-redux'; import { createStore, applyMiddleware, compose } from 'redux'; import thunk from 'redux-thunk'; import { Provider } from 'react-redux'; import { withRouter } from 'react-router-dom'; import { ProviderRouter } from 'react-router-redux'; import { ProviderHistory } from 'react-router-history'; import { ProviderRouterHistory } from 'react-router-router-history'; import { withRouterHistory } from 'react-router-router-history'; import { withRouterRouterHistory } from 'react-router-router-history'; import { withRouterHistoryHistory } from 'react-router-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react-router-history'; import { withRouterHistoryHistory } from 'react
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Documents; using System.Windows.Media.Imaging; using System.Windows.Shapes.TextFormatting; using System.Windows.Threading; using System.Windows.Navigation; using System.Windows.Shapes.Design; using System.Windows.Shapes.ShapesCommon; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.SharpDX; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Shapes.DataContext; using System.Windows.Shapes.ShapesCommon; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes; using System.Windows.Shapes.ShapesCommon; using System.Windows.Shapes.SharpDX; using System.Windows.Shapes; using System.Windows.Shapes.ShapesShapes; using System.Windows.Threading; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array('label' => 'sylius.form.product.name'))             ->add('description', 'textarea', array('label' => 'sylius.form.product.description'))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned";     callbacks.ifNeedHashTree(); if (objJoint.unsigned)      throw "ifNeedHashTree() unsigned
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
     }      /**      * @param {string} id      */     this.setId = function(id) {         this.id = id;     }      /**      * @param {string} name      */     this.setName = function(name) {         this.name = name;     }      /**      * @param {string} description      */     this.setDescription = function(description) {         this.description = description;     }      /**      * @param {string} url      */     this.setUrl = function(url) {         this.url = url;     }      /**      * @return {string}      */     this.getUrl = function() {         return this.url;     }      /**      * @return {string}      */     this.getTitle = function() {         return this.title;     }      /**      * @return {string}      */     this.getDescription = function() {         return this.description;     }      /**      * @return {string}      */     this.getUrl = function() {         return this.url;     }      /**      * @return {string}      */     this.getTitle = function() {         return this.title;     }      /**      * @return {string}      */     this.getDescription = function() {         return this.description;     }      /**      * @return {string}      */     this.getUrl = function() {         return this.url;     }      /**      * @return {string}      */     this.getTitle = function() {         return this.title;     }      /**      * @return {string}      */     this.getDescription = function() {         return this.description;     }      /**      * @return {string}      */     this.getUrl = function() {         return this.url;     } 
 {         this.list = []         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty = false         this.empty
 function screen() { 	var screen = { 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left: 0, 		top: 0, 		width: window.innerWidth, 		height: window.innerHeight, 		left
 function * getState () {     return getStateSet(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState () {     return getState(); }  function * getState ()
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkBundleExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('price')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color';  } 
  obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[ii]] = obj[chiln[ii]] || {};     obj[chiln[
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.affinity.AffinityTopologyVersion; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/login_manager_delegate.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "chrome/browser/chromeos/login/user_manager_factory.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_handler.h" #include "content/public/browser/web_ui
/*  * Copyright (c) 2008-2021, Hazelcast, Inc. All Rights Reserved.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.hazelcast.client.impl.protocol.task.map;  import com.hazelcast.client.impl.protocol.ClientMessage; import com.hazelcast.client.impl.protocol.codec.MapMessageCodec; import com.hazelcast.client.impl.protocol.task.AbstractMessageTask; import com.hazelcast.nio.Connection; import com.hazelcast.nio.ConnectionManager; import com.hazelcast.nio.serialization.Data; import com.hazelcast.nio.serialization.IdentifiedDataSerializable; import com.hazelcast.nio.serialization.IdentifiedDataSerializerHook; import com.hazelcast.nio.serialization.SerializationService; import com.hazelcast.nio.serialization.impl.DeserializationFeature; import com.hazelcast.nio.serialization.impl.SerializationServiceImpl; import com.hazelcast.spi.Operation; import com.hazelcast.spi.OperationContext; import com.hazelcast.spi.OperationListener; import com.hazelcast.spi.Resource; import com.hazelcast.spi.ResourceManager;  import java.util.Map; import java.util.concurrent.ConcurrentHashMap; import java.util.concurrent.ConcurrentMap;  import static com.hazelcast.client.impl.protocol.ClientMessage.*; import static com.hazelcast.client.impl.protocol.codec.MapMessageCodec.*;  
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this).html(options);             });         }     }); })(jQuery);  (function($) {     $.extend($.fn, {         html: function(options) {             return this.each(function() {                 $(this
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints as Assert; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'name',                 'required' => false,                 'constraints' => array(                     new NotBlank(),                     new Length(array('min' => 1, 'max' => 255)),                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ign
 import { connect } from 'react-redux'; import { withRouter } from 'react-router-dom'; import { Link } from 'react-router-dom'; import { withRouter } from 'react-router-dom'; import { withStyles } from '@material-ui/core/styles';  const styles = theme;  const App = connect(   (state) => ({     title: state.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({     title: props.title,   }),   (props) => ({    
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using Microsoft.Phone.Controls; using Microsoft.Phone.Shell; using Microsoft.Phone.Shell.Interop; using System.IO; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.Diagnostics; using System.Diagnostics.CodeAnalysis; using System.Globalization; using System.IO.Compression; using System.Linq; using System.Text; using System.Threading; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using Microsoft.Phone.Controls.Primitives; using Microsoft.Phone.Shell; using Microsoft.Phone.Shell.Interop; using Microsoft.Phone.Shell.Utilities; using Microsoft.Phone.Shell.Views; using Microsoft.Phone.Shell.Views.Controls; using Microsoft.Phone.Shell.Views.Controls.Primitives; using Microsoft.Phone.Shell.Views.Resources; using Microsoft.Phone.Shell.ViewManagement; using Microsoft.Phone.Shell.ViewManagement.Controls; using Microsoft.Phone.Shell.ViewManagement.Controls.Primitives; using Microsoft.Phone.Shell.ViewManagement.Views; using Microsoft.Phone.Shell.ViewManagement.Views.Controls; using Microsoft.Phone.Shell.ViewManagement.Views.Controls.Primitives; using Microsoft.Phone.Shell.ViewManagement; using Microsoft
    this.module = this.module || {};     this.module.repl = this.module.repl || {};     this.module.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};     this.module.repl.repl.repl = this.module.repl.repl || {};    
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Speed extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Speed';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Speed';  } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * @see Zend_Gdata_Extension_Media  */ require_once 'Zend/Gdata/Extension/Media.php';  /**  * @see Zend_Gdata_Extension_Video  */ require_once 'Zend/Gdata/Extension/Video.php';  /**  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Extension_Media extends Zend_Gdata_Extension {      protected $_rootElement = 'media';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Extension_Media object.      *      * @param string $text (optional) The text content of the element.      */     public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata
var o = this       , type = o.type || setType(this.url);  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function () {};  var type = type || function ()
  export function * stopGateway () {   try {     if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'production' || process
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache.ignite.cache.
		return false; 	}  	return true; }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              

stream = through(function (data) {     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toString();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.trim();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toLowerCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toUpperCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toLowerCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toUpperCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toLowerCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toLowerCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toUpperCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.toLowerCase();     if (first) {         first = false;         return data;     }     if (anyData) {         return data;     }     data = data.to
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color';  } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("Microsoft")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright © Microsoft 2014")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e-8e8e-4e8e-8e8e-8e8e8e8e8e")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
   if (autoImport) {     _load();   } else {     mark();   } };  var _createClass = function _createClass() {   function defineProperties(target, props) {     for (var i = 0; i < props.length; i++) {       var descriptor = props[i];       descriptor.enumerable = descriptor.enumerable || false;       descriptor.configurable = true;       if ("value" in descriptor) descriptor.writable = true;       Object.defineProperty(target, descriptor.key, descriptor);     }   }    return function (Constructor, protoProps, staticProps) {     if (protoProps) defineProperties(Constructor.prototype, protoProps);     if (staticProps) defineProperties(Constructor, staticProps);     return Constructor;   }; };  var _createClass2 = function _createClass2() {   function defineProperties(target, props) {     for (var i = 0; i < props.length; i++) {       var descriptor = props[i];       descriptor.enumerable = descriptor.enumerable || false;       descriptor.configurable = true;       if ("value" in descriptor) descriptor.writable = true;       Object.defineProperty(target, descriptor.key, descriptor);     }   }    return function (Constructor, protoProps, staticProps) {     if (protoProps) defineProperties(Constructor.prototype, protoProps);     if (staticProps) defineProperties(Constructor, staticProps);     return Constructor;   }; };  var _createClass3 = function _createClass3() {   function defineProperties(target, props) {     for (var i = 0; i < props.length; i++) {       var descriptor = props[i];       descriptor.enumerable = descriptor.enumerable || false;       descriptor.configurable = true;       if ("value" in descriptor) descriptor.writable = true;       Object.defineProperty(target, descriptor.key, descriptor);     }   }    return function (Constructor, protoProps, staticProps) {     if (protoProps) defineProperties(Constructor.prototype, protoProps);    
     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block, code);     code = Blocklify.JavaScript.Generator.scrub_(block,
     }      return result.snapshotItem(i); }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
_ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {     debugger;     var ignored = []; };  _ignored: function() {
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common
 import { connect } from 'react-redux' import { Link } from 'react-router-dom' import { Provider } from 'react-redux' import { ProviderHistory } from 'react-router-redux' import { ProviderRoute } from 'react-router-redux' import { ProviderStore } from 'react-redux' import { ProviderRouter } from 'react-router-redux' import { StyleSheet, View } from 'react-native' import { StyleSheetSheet } from 'react-native-theme'  const styles = StyleSheet.create({   container: {     flex: 1,     justifyContent: 'center',     alignItems: 'center',     backgroundColor: '#fff',   },   text: {     fontSize: 20,     color: '#fff',   }, })  const App = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapDispatchToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps )(Provider)  const mapStateToProps = connect(   mapStateToProps,   mapDispatchToProps
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkBundleExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.plugins.document;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
 } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break; } break
     } },       _animations: {     root: {         duration: 300,         easing: 'easeInOutExpo',         easingIn: 'easeInOutExpo',         easingOut: 'easeInOutExpo',         easingInOut: 'easeInOutExpo',         easingOutIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutInIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutInIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutInIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingOutOut: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',         easingInOutIn: 'easeInOutExpo',        
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
./utils').toError  , _ = require('lodash')  , _1 = _interopRequireDefault(_)  , _2 = _interopRequireDefault(_2)  , _3 = _interopRequireDefault(_3)  , _4 = _interopRequireDefault(_4)  , _5 = _interopRequireDefault(_5)  , _6 = _interopRequireDefault(_6)  , _7 = _interopRequireDefault(_7)  , _8 = _interopRequireDefault(_8)  , _9 = _interopRequireDefault(_9)  , _10 = _interopRequireDefault(_10)  , _11 = _interopRequireDefault(_11)  , _12 = _interopRequireDefault(_12)  , _13 = _interopRequireDefault(_13)  , _14 = _interopRequireDefault(_14)  , _15 = _interopRequireDefault(_15)  , _16 = _interopRequireDefault(_16)  , _17 = _interopRequireDefault(_17)  , _18 = _interopRequireDefault(_18)  , _19 = _interopRequireDefault(_19)  , _20 = _interopRequireDefault(_20)  , _21 = _interopRequireDefault(_21)  , _22 = _interopRequireDefault(_22)  , _23 = _interopRequireDefault(_23)  , _24 = _interopRequireDefault(_24)  , _25 = _interopRequireDefault(_25)  , _26 = _interopRequireDefault(_26)  , _27 = _interopRequireDefault(_27)  , _28 = _interopRequireDefault(_28)  , _29 = _interopRequireDefault(_29)  , _2a = _interopRequireDefault(_2a)  , _2b = _interopRequireDefault(_2b)  , _2c = _interopRequireDefault(_2c)  , _2d = _interopRequireDefault(_2d)  , _2e = _interopRequireDefault(_2e)  , _2f = _interopRequireDefault(_2f)  , _30 = _interopRequireDefault(_30)  , _31 = _interopRequireDefault(_31)  ,
 var err2 = new Error("Found nowhere to deliver to");             err2.code = 'NOMX';             err2.message = err.message;             err2.details = err.details;             err2.details2 = err.details2;             err2.details3 = err.details3;             err2.details4 = err.details4;             err2.details5 = err.details5;             err2.details6 = err.details6;             err2.details7 = err.details7;             err2.details8 = err.details8;             err2.details9 = err.details9;             err2.details10 = err.details10;             err2.details11 = err.details11;             err2.details12 = err.details12;             err2.details13 = err.details13;             err2.details14 = err.details14;             err2.details15 = err.details15;             err2.details16 = err.details16;             err2.details17 = err.details17;             err2.details18 = err.details18;             err2.details19 = err.details19;             err2.details20 = err.details20;             err2.details21 = err.details21;             err2.details22 = err.details22;             err2.details23 = err.details23;             err2.details24 = err.details24;             err2.details25 = err.details25;             err2.details26 = err.details26;             err2.details27 = err.details27;             err2.details28 = err.details28;             err2.details29 = err.details29;             err2.details30 = err.details30;             err2.details31 = err.details31;             err2.details32 = err.details32;             err2.details33 = err.details33;             err2.details34 = err.details34;             err2.details35 = err.details35;             err2.details36 = err.details36;             err2.details37 = err.details37;             err2.details38 = err.details38;             err2.details39 = err.details39;             err2.details40 = err.details
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0); } while (0);
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException
console.log(type, msg)); };      writeLog('error', 'Error');     writeLog('warn', 'Warning');     writeLog('info', 'Info');     writeLog('debug', 'Debug');     writeLog('trace', 'Trace');      writeLog('debug', 'Debug');     writeLog('info', 'Info');     writeLog('warn', 'Warn');     writeLog('error', 'Error');     writeLog('warn', 'Warn');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error');     writeLog('error', 'Error
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
(function() {     counter++;     refresh.data('counter',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);     refresh.data('refresh',counter);    
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
     restrict: 'A',     link: function(scope, element, attrs) {          var userId = attrs.userId;          UserService.getUser(userId).then(function(user) {             scope.user = user;         });     } });  mage.directive('userId', function(UserService, appConstants) {      return {         restrict: 'A',         link: function(scope, element, attrs) {              var userId = attrs.userId;              UserService.getUser(userId).then(function(user) {                 scope.user = user;             });         }     } });  mage.directive('userId', function(UserService, appConstants) {      return {         restrict: 'A',         link: function(scope, element, attrs) {              var userId = attrs.userId;              UserService.getUser(userId).then(function(user) {                 scope.user = user;             });         }     } });  mage.directive('userId', function(UserService, appConstants) {      return {         restrict: 'A',         link: function(scope, element, attrs) {              var userId = attrs.userId;              UserService.getUser(userId).then(function(user) {                 scope.user = user;             });         }     } });  mage.directive('userId', function(UserService, appConstants) {      return {         restrict: 'A',         link: function(scope, element, attrs) {              var userId = attrs.userId;              UserService.getUser(userId).then(function(user) {                 scope.user = user;             });         }     } });  mage.directive('userId', function(UserService, appConstants) {      return {         restrict: 'A',         link: function(scope, element, attrs) {              var userId = attrs.userId;              UserService.getUser(userId).then(function(user) {                 scope.user = user;             });         }    
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Shapes.Design; using System.Windows.Shapes.ShapesCommon; using System.Windows.Threading; using System.Windows.Threading.Tasks; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Imaging; using System.Windows.Media.Imaging.Effects; using System.Windows.Media.Imaging.Media3D; using System.Windows.Media.Imaging.Media3D.Effects; using System.Windows.Media.Imaging.Media3D.Media3DResources; using System.Windows.Media.Imaging.Media3D.Shapes; using System.Windows.Media.Imaging.Media3D.Shapes; using System.Windows.Media.Imaging.Media3D.Shapes.Common; using System.Windows.Media.Imaging.Media3D.Shapes.ShapesCommon; using System.

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static java.util.Objects.requireNonNull;  import com.google.common.annotations.VisibleForTesting; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactory; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceService; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component\DependencyInjection\ReferenceServiceFactoryInterface; use Symfony\Component
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common
 self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (participant) {         participant.remove()     }) })  self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (participant) {         participant.remove()     }) })  self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (participant) {         participant.remove()     }) })  self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (participant) {         participant.remove()     }) })  self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (participant) {         participant.remove()     }) })  self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (participant) {         participant.remove()     }) })  self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (participant) {         participant.remove()     }) })  self.on('participants-removed', function (response) {     const self = this     if (!response) return     const participants = self.get('participants')     participants.forEach(function (
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache.ignite.cache.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.asterix.runtime.evaluators.base.AbstractScalarFunctionDynamicDescriptor; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluator; import org.apache.asterix.runtime.evaluators.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.core.algebra.functions.FunctionIdentifier; import org.apache.hyracks.algebricks.core.algebra.functions.IFunctionDescriptorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyrack
 	if (change_rate < 0.0) { 		change_rate = 0.0; 	} else { 		change_rate = 1.0; 	}  	if (change_rate > 1.0) { 		change_rate = 1.0; 	} else { 		change_rate = 2.0; 	}  	if (change_rate < 0.0) { 		change_rate = 0.0; 	} else { 		change_rate = 1.0; 	}  	if (change_rate > 1.0) { 		change_rate = 1.0; 	} else { 		change_rate = 2.0; 	}  	if (change_rate < 0.0) { 		change_rate = 0.0; 	} else { 		change_rate = 1.0; 	}  	if (change_rate > 1.0) { 		change_rate = 1.0; 	} else { 		change_rate = 2.0; 	}  	if (change_rate < 0.0) { 		change_rate = 0.0; 	} else { 		change_rate = 1.0; 	}  	if (change_rate > 1.0) { 		change_rate = 1.0; 	} else { 		change_rate = 2.0; 	}  	if (change_rate < 0.0) { 		change_rate = 0.0; 	} else { 		change_rate = 1.0; 	}  	if (change_rate > 1.0) { 		change_rate = 1.0; 	} else { 		change_rate = 2.0; 	}  	if (change_rate < 0.0) { 		change_rate = 0.0; 	} else { 		change_rate = 1.0; 	}  	if (change_rate > 1.0) { 		change_rate = 1.0; 	
 mdns.init(function(err) {   if (err) {     console.log(err)     process.exit(1)   }   mdns.run(function(err) {     if (err) {       console.log(err)       process.exit(1)     }     process.exit(0)   }) })  mdns.run(function(err) {   if (err) {     console.log(err)     process.exit(1)   }   mdns.run(function(err) {     if (err) {       console.log(err)       process.exit(1)     }     process.exit(0)   }) })  mdns.run(function(err) {   if (err) {     console.log(err)     process.exit(1)   }   mdns.run(function(err) {     if (err) {       console.log(err)       process.exit(1)     }     process.exit(0)   }) })  mdns.run(function(err) {   if (err) {     console.log(err)     process.exit(1)   }   mdns.run(function(err) {     if (err) {       console.log(err)       process.exit(1)     }     process.exit(0)   }) })  mdns.run(function(err) {   if (err) {     console.log(err)     process.exit(1)   }   mdns.run(function(err) {     if (err) {       console.log(err)       process.exit(1)     }     process.exit(0)   }) })  mdns.run(function(err) {   if (err) {     console.log(err)     process.exit(1)   }   mdns.run(function(err) {     if (err) {       console.log
 		}  		return activeProject.getFiles(); 	}  	return { 		getFiles: getFiles, 		activeProject: activeProject 	}; }  module.exports = { 	getFiles: getFiles, 	activeProject: activeProject };                                                                                                                                                                                                                                                                                                                                                                                                                                                           
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common
     url: 'http://localhost:3000',     headers: {         'Content-Type': 'application/json'     },     body: JSON.stringify(options),     method: 'POST',     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     body: JSON.stringify(options),     method: 'POST',     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     body: JSON.stringify(options),     method: 'POST',     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     body: JSON.stringify(options),     method: 'POST',     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     body: JSON.stringify(options),     method: 'POST',     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     body: JSON.stringify(options),     method: 'POST',     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     body: JSON.stringify(options),     method: 'POST',     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'     },     headers: {         'Content-Type': 'application/json'    
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License.  // <auto-generated/>  #nullable disable  using System; using System.Collections.Generic; using System.Text.Json; using Azure.Core;  namespace Azure.ResourceManager.Network.Models {     public partial class VirtualNetworkGateway : IUtf8JsonSerializable     {         void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)         {             writer.WriteStartObject();             if (Id != null)             {                 writer.WritePropertyName("id");                 writer.WriteStringValue(Id);             }             if (Name != null)             {                 writer.WritePropertyName("name");                 writer.WriteStringValue(Name);             }             if (Type != null)             {                 writer.WritePropertyName("type");                 writer.WriteStringValue(Type);             }             writer.WriteEndObject();         }          internal static VirtualNetworkGateway DeserializeVirtualNetworkGateway(JsonElement element)         {             string id = default;             string name = default;             string type = default;             foreach (var property in element.EnumerateObject())             {                 if (property.NameEquals("id"))                 {                     if (property.Value.ValueKind == JsonValueKind.Null)                     {                         property.ThrowNonNullablePropertyIsNull();                         continue;                     }                     id = property.Value.GetString();                     continue;                 }                 if (property.NameEquals("name"))                 {                     if (property.Value.ValueKind == JsonValueKind.Null)                     {                         property.ThrowNonNullablePropertyIsNull();                         continue;                     }                     name = property.Value.GetString();                     continue;                 }                 if (property.NameEquals("type"))                 {                     if (property.Value.ValueKind == JsonValueKind.Null)                     {                         property.ThrowNonNullablePropertyIsNull();                         continue;                     }                     type = property.Value.GetString();                     continue;                 }             }             return new VirtualNetworkGateway(id, name
     }      if (jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }      return content   }    hmrAlamoLoader(content) {     if (!jsEntries.includes(this._module.resource)) {       return content     }
, authThis = authThis || alwaysAuth, alwaysAuth = alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth || alwaysAuth ||
 (function($) {     'use strict';      $.fn.webpage = function(options) {         var settings = $.extend({}, $.fn.webpage.defaults, options);         return this.each(function() {             var $this = $(this);             var data = $this.data('webpage');              if (!data) {                 $this.data('webpage', (data = new Webpage(this, settings)));             }              if (typeof options === 'string') {                 data[options]();             } else if (typeof options === 'object') {                 data[options] = options;             } else if (typeof options === 'function') {                 data[options] = function() {                     return options.apply(this, arguments);                 };             } else {                 $this.data('webpage', data);             }         });     };      var Webpage = function(element, settings) {         this.element = $(element);         this.settings = $.extend({}, $.fn.webpage.defaults, settings);         this.options = $.extend({}, $.fn.webpage.defaults, settings);     };      Webpage.prototype = {         options: $.extend({}, $.fn.webpage.defaults, $.fn.webpage.defaults.options),         options: $.extend({}, $.fn.webpage.defaults.options, $.fn.webpage.defaults.options),         options: $.extend({}, $.fn.webpage.defaults.options, $.fn.webpage.defaults.options),         options: $.extend({}, $.fn.webpage.defaults.options, $.fn.webpage.defaults.options),         options: $.extend({}, $.fn.webpage.defaults.options, $.fn.webpage.defaults.options),         options: $.extend({}, $.fn.webpage.defaults.options, $.fn.webpage.defaults.options),         options: $.extend({}, $.fn.webpage.defaults.options, $.fn.webpage.defaults
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.cache.*; import org.apache.ignite.configuration.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.cache.distributed.*; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.lang.*; import org.apache.ignite.spi.discovery.tcp.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.*; import org.apache.ignite.testframework.*; import org.apache.ignite.testframework.junits.common.*;  import java.util.*;  import static org.apache.ignite.cache.CacheAtomicityMode.*; import static org.apache.ignite.cache.CacheMode.*; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.*; import static org.apache.ignite.cache.CacheWriteSynchronizationMode
