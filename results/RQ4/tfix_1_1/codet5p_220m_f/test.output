// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view_delegate.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_reg
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common
import React, {Component} from 'react-native'; import PropTypes from 'prop-types'; import {connect} from 'react-redux'; import {Router} from 'react-router-dom'; import {RouterHistory} from 'react-router-history'; import {createStore} from 'redux'; import {createRouter} from 'react-router-redux'; import {RouterHistory} from 'react-router-redux'; import {RouterState} from 'react-router-redux'; import {Route} from 'react-router'; import {RouterHistory} from 'react-router-redux'; import {RouterStore} from 'react-router-redux'; import {RouterRouter} from 'react-router-redux'; import {RouterRouterHistory} from 'react-router-redux'; import {History} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {HistoryProvider} from 'react-router-redux'; import {RouterStateProvider} from 'react-router-redux'; import {HistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterHistoryProvider} from 'react-router-redux'; import {RouterStateProvider} from 'react-router-redux'; import {RouterStateProvider} from 'react-router-redux'; import {RouterStateProvider} from 'react-router-redux'; import {RouterState
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceType; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ReferenceType; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceType; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceTypeInterface; use Symfony\Component\DependencyInjection
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java
 import { Feature } from '@common-stack/server-core'; export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule); export default new Feature(authModule);
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.Windows.Documents; using System.Windows.Input.Imaging; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.Design; using System.Windows.Shapes.ShapesCommon; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.Attributes; using System.ComponentModel.DataAnnotations.Schema.Types; using System.ComponentModel.DataAnnotations.Schema.Utilities; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls; using System.Web.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import java.util.List; import java.util.Map; import java.util.Set; import java.util.con
      /**      * 获取服务器端口号      *      * @return {string} 服务器端口号      */     getServerPort: function () {         return this.serverPort;     },      /**      * 设置服务器端口号      *      * @param {string} serverPort 服务器端口号      */     setServerPort: function (serverPort) {         this.serverPort = serverPort;     },      /**      * 获取服务器端口号      *      * @return {string} 服务器端口号      */     getServerHost: function () {         return this.serverHost;     },      /**      * 设置服务器端口号      *      * @param {string} serverHost 服务器端口号      */     setServerHost: function (serverHost) {         this.serverHost = serverHost;     },      /**      * 获取服务器端口号      *      * @return {string} 服务器端口号      */     getServerPort: function () {         return this.serverPort;     },      /**      * 设置服务器端口号      *      * @param {string} serverPort 服务器端口号      */     setServerPort: function
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
 		return font; 	} }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
 (function($) {     $.fn.drone = function(options) {         var settings = $.extend({             speed: 500,             speedSpeed: 500,             speedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,             speedSpeedSpeedSpeed: 500,            
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
     }      function handler(e) {         if (e.preventDefault) {             e.preventDefault();         }          if (e.stopPropagation) {             e.stopPropagation();         }          if (e.currentTarget) {             e.currentTarget.removeEventListener('click', handler);         }     }      function handler(e) {         if (e.preventDefault) {             e.preventDefault();         }          if (e.stopPropagation) {             e.stopPropagation();         }          if (e.currentTarget) {             e.currentTarget.removeEventListener('click', handler);         }     }      function handler(e) {         if (e.preventDefault) {             e.preventDefault();         }          if (e.stopPropagation) {             e.stopPropagation();         }          if (e.currentTarget) {             e.currentTarget.removeEventListener('click', handler);         }     }      function handler(e) {         if (e.preventDefault) {             e.preventDefault();         }          if (e.stopPropagation) {             e.stopPropagation();         }          if (e.currentTarget) {             e.currentTarget.removeEventListener('click', handler);         }     }      function handler(e) {         if (e.preventDefault) {             e.preventDefault();         }          if (e.stopPropagation) {             e.stopPropagation();         }          if (e.currentTarget) {             e.currentTarget.removeEventListener('click', handler);         }     }      function handler(e) {         if (e.preventDefault) {             e.preventDefault();         }          if (e.stopPropagation) {             e.stopPropagation();         }          if (e.currentTarget) {             e.currentTarget.removeEventListener('click', handler);         }     }      function handler(e) {         if (e.preventDefault) {            
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 = this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' + this.metrics[metric].source + '-' + this.metrics[metric].target + '-' +
(err) {     if (err.message) {         console.log(err.message);     } else {         console.log(err.message);     } }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.spi.commit;  import org.apache.jackrabbit.oak.spi.state.NodeBuilder; import org.apache.jackrabbit.oak.spi.state.NodeState; import org.apache.jackrabbit.oak.spi.state.NodeStateFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateResolver; import org.apache.jackrabbit.oak.spi.state.NodeStateResolverFactory; import org.apache.jackrabbit.oak.spi.state.RootedState; import org.apache.jackrabbit.oak.spi.state.RootedStateFactory; import org.apache.jackrabbit.oak.spi.state.RootedStateResolver; import org.apache.jackrabbit.oak.spi.state.TreeState; import org.apache.jackrabbit.oak.spi.state.TreeStateResolverFactory; import org.apache.jackrabbit.oak.spi.state.TreeStateResolverFactoryImpl; import org.apache.jackrabbit.oak.spi.state.TreeStateResolverImpl; import org.apache.jackrabbit.oak.spi.state
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_View_Helper_Abstract  */ require_once 'Zend/View/Helper/Abstract.php';  /**  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_View_Helper_File extends Zend_View_Helper_Abstract {     /**      * @var string      */     protected $_file;      /**      * @var string      */     protected $_extension;      /**      * Constructor      *      * @param string $file      * @param string $extension      */     public function __construct($file, $extension = null)     {         $this->_file = $file;         $this->_extension = $extension;     }      /**      * Set file      *      * @param string $file      * @return Zend_View_Helper_File      */     public function setFile($file)     {         $this->_file
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.lang.*; import org.apache.ignite.spi.discovery.tcp.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.vm.*; import org.apache.ignite
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 = require('./toCode');  module.exports = {   toCode: toCode,   helpers: helpers };  module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode; module.exports.toCode = helpers.toCode
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Azure;     using Microsoft.Azure.Management;     using Microsoft.Azure.Management.RecoveryServices;     using Microsoft.Azure.Management.RecoveryServices.Backup;     using Newtonsoft.Json;     using System.Linq;     using System.Collections;     using System.Collections.Generic;     using System.Management.Automation;     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.IO;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Text;     using System.Text.RegularExpressions;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Linq;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Text.RegularExpressions;     using System.Collections;     using System.Collections.ObjectModel;     using System.Net.Http.Headers;     using System.Text.RegularExpressions;     using System.Collections.Specialized;     using System.Web;     using System.Web.Http;     using System.Web.Http.Headers;     using System.Xml.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using Newtonsoft.Json.Converters;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations.Schema;     using System.ComponentModel.DataAnnotations.Schema
  if (CodeBlockRequired.test(parseHTML)) {     if (CodeBlockRequired.test(parseHTML)) {       return true;     } else {       return false;     }   } else {     if (CodeBlockRequired.test(parseHTML)) {       return true;     } else {       return false;     }   } }  module.exports = (parseHTML) => {   if (CodeBlockRequired.test(parseHTML)) {     if (CodeBlockRequired.test(parseHTML)) {       return true;     } else {       return false;     }   } else {     if (CodeBlockRequired.test(parseHTML)) {       return true;     } else {       return false;     }   } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
  if (this.steps[stepNumber].direction === direction) {     isValid = true;   } else {     isValid = false;   }   if (isValid) {     this.steps[stepNumber].direction = direction;     this.jumpToStep(stepNumber, direction);   } };  UserForm.prototype.jumpToStep = (stepNumber, direction) => {   if (this.steps[stepNumber].direction === direction) {     this.jumpToStep(stepNumber + 1, direction);   } else {     this.jumpToStep(stepNumber - 1, direction);   } };  UserForm.prototype.jumpToStep = (stepNumber, direction) => {   if (this.steps[stepNumber].direction === direction) {     this.jumpToStep(stepNumber - 1, direction);   } else {     this.jumpToStep(stepNumber + 1, direction);   } };  UserForm.prototype.jumpToStep = (stepNumber, direction) => {   if (this.steps[stepNumber].direction === direction) {     this.jumpToStep(stepNumber + 1, direction);   } else {     this.jumpToStep(stepNumber - 1, direction);   } };  UserForm.prototype.jumpToStep = (stepNumber, direction) => {   if (this.steps[stepNumber].direction === direction) {     this.jumpToStep(stepNumber - 1, direction);   } else {     this.jumpToStep(stepNumber + 1, direction);   } };  UserForm.prototype.jumpToStep = (stepNumber, direction) => {   if (this.steps[stepNumber].direction === direction) {     this.jumpToStep(stepNumber - 1, direction);   } else {     this.jumpToStep(stepNumber + 1, direction);   } };  UserForm.prototype.jumpToStep = (stepNumber, direction) => {   if (this.steps[stepNumber].direction === direction) {     this.jumpToStep(stepNumber + 1, direction);   } else {     this.jumpToStep(
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_ #define CHROME_BROWSER_UI_WEBUI_CHROME_BROWSER_UI_H_  #include "base/basictypes.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "chrome/browser/chrome_notification_types.h" #include "chrome/browser/profiles/profile.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_observer_delegate.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_view.h" #include "content/public/browser/web_contents_view_delegate.h" #include "content/public/browser/web_contents_view_host.h" #include "content/public/browser/web
(function() {     var $this = $(this);      $this.each(function() {       var $this = $(this);        $this.each(function() {         var $this = $(this);          $this.each(function() {           var $this = $(this);            $this.each(function() {             var $this = $(this);              $this.each(function() {               var $this = $(this);                $this.each(function() {                 var $this = $(this);                  $this.each(function() {                   var $this = $(this);                    $this.each(function() {                     var $this = $(this);                      $this.each(function() {                       var $this = $(this);                        $this.each(function() {                         var $this = $(this);                          $this.each(function() {                           var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this = $(this);                            $this.each(function() {                             var $this =
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Copyright (c) Facebook, Inc. and its affiliates.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.facebook.buck.android;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertSame; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.facebook.buck.io.filesystem.ProjectFilesystem; import com.facebook.buck.testutil.TemporaryPaths; import com.facebook.buck.testutil.integration.ProjectWorkspace; import com.facebook.buck.testutil.integration.TestDataHelper; import com.facebook.buck.testutil.integration.TestDataHelper.TemporaryPaths; import com.facebook.buck.util.environment.Platform; import com.facebook.buck.util.environment.TestEnvironment; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import org.junit.Before; import org.junit.Rule; import org.junit.Test; import org.junit.rules.TemporaryFolder; 
function(token){       ;;;if(arguments.length > 1) basis.dev.warn('classList.remove accepts only one argument');       var className = this.element.className;       var newClassName = className.replace(tokenRegExp(token), '');       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className = newClassName;       this.element.className
 var path = require('path'); var webpack = require('webpack'); var HtmlWebpackPlugin = require('html-webpack-plugin'); var ExtractTextPlugin = require('extract-text-webpack-plugin'); var CopyWebpackPlugin = require('copy-webpack-plugin'); var HtmlWebpackPluginPlugin = require('html-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var CopyWebpackPluginPlugin = require('copy-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack-plugin-plugin'); var ExtractTextPluginPlugin = require('extract-text-webpack
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
db = process.env.db || 'http:   , RTT test('Couch is there', function(t) {   t.plan(1);    var db = new DB(process.env.db);   db.open(function(err, db) {     if (err) {       t.fail(err);     } else {       db.close(function(err) {         if (err) {           t.fail(err);         } else {           db.close(function(err) {             if (err) {               t.fail(err);             } else {               db.close(function(err) {                 if (err) {                   t.fail(err);                 } else {                   db.close(function(err) {                     if (err) {                       t.fail(err);                     } else {                       db.close(function(err) {                         if (err) {                           t.fail(err);                         } else {                           db.close(function(err) {                             if (err) {                               t.fail(err);                             } else {                               db.close(function(err) {                                 if (err) {                                   t.fail(err);                                 } else {                                   db.close(function(err) {                                     if (err) {                                       t.fail(err);                                     } else {                                       db.close(function(err) {                                         if (err) {                                           t.fail(err);                                         } else {                                           db.close(function(err) {                                             if (err) {                                               t.fail(err);                                             } else {                                               db.close(function(err) {                                                 if (err) {                                                   t.fail(err);                                                 } else {                                                   db.close(function(err) {                                                     if (err) {                                                       t.fail(err);                                                     } else {                                                       db.close(function(err) {                                                       db.close(function(err) {                                                       db.close(function(err) { 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
module.exports = {   llex,   llimit,   lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   llimit: llimit,   lobject: lobject,   llex: llex,   l
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Matchers.any; import static org.mockito.Matchers.anyString; import static org.mockito.Matchers.eq; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.times; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com
 }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; }             });             return normalizedHighlights; 
     var numEntries = parseInt(definitionParts[2], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[3], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[4], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[5], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[6], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[7], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[8], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[9], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[10], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[11], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[12], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[13], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[14], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[15], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[16], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[17], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[18], 10);      if (ruleType === "COMPOUNDRULE") {     var numEntries = parseInt(definitionParts[19], 10);     
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks
                right = pos.right - bof.right + $(this).width();             } else if (runtime.conf.hintAlign === "top") {                 top = pos.top - bof.top + $(this).height();             } else if (runtime.conf.hintAlign === "bottom") {                 bottom = pos.bottom - bof.bottom + $(this).height();             } else if (runtime.conf.hintAlign === "left") {                 left = pos.left - bof.left + $(this).width();             } else if (runtime.conf.hintAlign === "right") {                 right = pos.right - bof.right + $(this).width();             } else if (runtime.conf.hintAlign === "top") {                 top = pos.top - bof.top + $(this).height();             } else if (runtime.conf.hintAlign === "bottom") {                 bottom = pos.bottom - bof.bottom + $(this).height();             } else if (runtime.conf.hintAlign === "left") {                 left = pos.left - bof.left + $(this).width();             } else if (runtime.conf.hintAlign === "right") {                 right = pos.right - bof.right + $(this).width();             } else if (runtime.conf.hintAlign === "top") {                 top = pos.top - bof.top + $(this).height();             } else if (runtime.conf.hintAlign === "bottom") {                 bottom = pos.bottom - bof.bottom + $(this).height();             } else if (runtime.conf.hintAlign === "left") {                 left = pos.left - bof.left + $(this).width();             } else if (runtime.conf.hintAlign === "right") {                 right = pos.right - bof.right + $(this).width();             } else if (runtime.conf.hintAlign === "top") {                 top = pos.top - bof.top + $(this).height();             } else if (runtime.conf.hintAlign === "bottom") {                 bottom = pos.bottom - bof.bottom + $(this).height();             } else if (runtime.conf.hintAlign === "left") {                 left = pos.left - bof.left + $(this).width
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\Config\Definition\Builder\TreeBuilder; use Symfony\Component\Config\Definition\ConfigurationInterface;  /**  * This is the class that validates and merges configuration from your app/config files  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}  */ class Configuration implements ConfigurationInterface {     /**      * {@inheritdoc}      */     public function getConfigTreeBuilder()     {         $treeBuilder = new TreeBuilder();         $rootNode = $treeBuilder->root('symfony_framework');          // Here you should define the parameters that are allowed to         // configure your bundle. See the documentation linked above for         // more information on that topic.          return $treeBuilder;     } } 
} if (content = json.content) {                     if (Array.isArray(content)) {                     if (Array.isArray(content[0])) {                     if (Array.isArray(content[1])) {                     if (Array.isArray(content[2])) {                     if (Array.isArray(content[3])) {                     if (Array.isArray(content[4])) {                     if (Array.isArray(content[5])) {                     if (Array.isArray(content[6])) {                     if (Array.isArray(content[7])) {                     if (Array.isArray(content[8])) {                     if (Array.isArray(content[9])) {                     if (Array.isArray(content[10])) {                     if (Array.isArray(content[11])) {                     if (Array.isArray(content[12])) {                     if (Array.isArray(content[13])) {                     if (Array.isArray(content[14])) {                     if (Array.isArray(content[15])) {                     if (Array.isArray(content[16])) {                     if (Array.isArray(content[17])) {                     if (Array.isArray(content[18])) {                     if (Array.isArray(content[19])) {                     if (Array.isArray(content[20])) {                     if (Array.isArray(content[21])) {                     if (Array.isArray(content[22])) {                     if (Array.isArray(content[23])) {                     if (Array.isArray(content[24])) {                     if (Array.isArray(content[25])) {                     if (Array.isArray(content[26])) {                     if (Array.isArray(content[27])) {                     if (Array.isArray(content[28])) {                     if (Array.isArray(content[29])) {                     if (Array.isArray(content[30])) {                     if (Array.isArray(content[31])) {                     if (Array.isArray(content[32])) {                     if (Array.isArray(content[33])) {                     if (Array.isArray(content[34])) {                     if (Array.isArray(content[35])) {                     if (Array.isArray(content[36])) {                     if (Array.isArray(
  return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos/${reposOwner}/${reposName}/tags` }  getReposTags: (reposOwner, reposName) => {   return `${host}repos
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.hamcrest.Matchers.is; import static org.hamcrest.Matchers.notNullValue; import static org.hamcrest.Matchers.nullValue; import static org.junit.Assert.assertThat; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.ImmutableSortedMap.Builder; import com.google.common
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }      /**      * Retrieves a DOMElement which corresponds to this element and all      * child properties.  This is used to build an entry
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array('label' => 'sylius.form.product_name'))             ->add('description', 'text', array('label' => 'sylius.form.product_description'))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Form\Type\ProductType'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.sdk.coders;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.primitives.Ints; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import java.util.List; import java.util.Map; import java.util.Set; import java.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.Linq.Expressions; using System.Reflection; using System.Reflection.Emit; using System.Xml; using System.Xml.Linq; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.Binary; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Xml.SerializationInfo; using System.Xml.Serialization.Formatters.Xml.SerializationInfo.Formatting; using System.Xml.Serialization.Formatters.Xml.SerializationInfo.Schema; using System.Xml.Serialization.Formatters.Xml.SerializationInfo.Properties; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Xml.Schema; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Xml.SerializationInfo; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Xml.SerializationInfo.Formatting; using System.Xml.Serialization.Formatters.Xml.SerializationInfo.Schema; using System.Xml.Serialization.Formatters.Xml.SerializationInfo.Properties; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Xml.SerializationInfo; using System.Xml.Serialization.Formatters.Xml.SerializationInfo.Properties.Schema; using System.Xml.Serialization.Formatters.Xml.SerializationInfo
;     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return !!element;     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {         return is(element);     }      /**      * @param {HTMLElement} element      * @return {boolean}      */     function is(element) {
  console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(VERSION);                     process.exit(1);                     break;                 case "-v":   console.error(
var g_axis = g_axis.append('g').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin) + ',0)').attr('transform', 'translate(' + (width - margin
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 

// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Compute {     using Microsoft.Rest;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// VirtualMachinesOperations operations.     /// </summary>     public partial interface IVirtualMachinesOperations     {         /// <summary>         /// Gets a list of virtual machines.         /// </summary>         /// <param name='customHeaders'>         /// The headers that will be added to request.         /// </param>         /// <param name='cancellationToken'>         /// The cancellation token.         /// </param>         /// <exception cref="Microsoft.Rest.Azure.CloudException">         /// Thrown when the operation returned an invalid status code         /// </exception>         /// <exception cref="Microsoft.Rest.SerializationException">         /// Thrown when unable to deserialize the response         /// </exception>         /// <exception cref="Microsoft.Rest.ValidationException">         /// Thrown when a required parameter is null         /// </exception>         Task<AzureOperationResponse<IPage<VirtualMachine>>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));         /// <summary>         /// Gets a list of virtual machines.         /// </summary>         /// <param name='customHeaders'>         /// The headers that will be added to request.         /// </param>         /// <param name='cancellationToken'>         /// The cancellation token.         /// </param>         /// <exception cref="Microsoft.Rest.Azure.CloudException">         /// Thrown when the operation returned an invalid status code         /// </exception>         /// <exception
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.DataAnnotations; using System.ComponentModel; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Data.Entity.Migrations.ModelConfiguration; using System.Data.Entity.Migrations.SqlServer; using System.Data.Entity.Migrations.Storage; using System.Data.Entity.Migrations.Storage.Infrastructure; using Microsoft.EntityFrameworkCore; using Microsoft.EntityFrameworkCore.Infrastructure; using Microsoft.EntityFrameworkCore.Metadata; using Microsoft.EntityFrameworkCore.Migrations; using Microsoft.EntityFrameworkCore.Migrations.Infrastructure; using Microsoft.EntityFrameworkCore.Storage; using Microsoft.EntityFrameworkCore.Storage.Infrastructure; using Microsoft.EntityFrameworkCore.Storage.Internal; using Microsoft.EntityFrameworkCore.Storage.Tokenization; using Microsoft.EntityFrameworkCore.Storage.Tokenization.Configuration; using Microsoft.EntityFrameworkCore.Storage.Tokenization.Providers; using Microsoft.EntityFrameworkCore.Storage.Tokenization.Providers.EntityFrameworkCore; using Microsoft.EntityFrameworkCore.Storage.Tokenization.Providers.EntityFrameworkCore.Metadata; using Microsoft.EntityFrameworkCore.Storage.Tokenization.Providers.EntityFrameworkCore.Migrations; using Microsoft.EntityFrameworkCore.Storage.Tokenization.Providers.EntityFrameworkCore.Migrations.Infrastructure; using Microsoft.EntityFrameworkCore.Storage.Tokenization.Providers.EntityFrameworkCore.Migrations.ModelConfiguration; using Microsoft.EntityFrameworkCore.
if (typeof module !== 'undefined' && module.exports) {     module.exports = Concur; } else if (typeof define === 'function' && define.amd) {     define(function () {         return Concur;     }); } else {     var Concur = require('Concur')   , object = require('isomorph/object')   , validators = require('isomorph/validators'); }  module.exports = Concur; module.exports.object = object; module.exports.validators = validators; 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.IO; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebPartsControls.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebPartsControls.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebPartsControlsControlsControlsControls
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
     if (data) {     matchedItem = data;     return true;     }     return false;     });     if (matchedItem) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;     }     return false;     });     if (data) {     return matchedItem;
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 if (!request.action) {   throw 'unmatched request action: ' + request.action; }  if (!request.params) {   throw 'unmatched request params: ' + request.params; }  if (!request.body) {   throw 'unmatched request body: ' + request.body; }  if (!request.headers) {   throw 'unmatched request headers: ' + request.headers; }  if (!request.method) {   throw 'unmatched request method: ' + request.method; }  if (!request.url) {   throw 'unmatched request url: ' + request.url; }  if (!request.query) {   throw 'unmatched request query: ' + request.query; }  if (!request.body) {   throw 'unmatched request body: ' + request.body; }  if (!request.headers) {   throw 'unmatched request headers: ' + request.headers; }  if (!request.method) {   throw 'unmatched request method: ' + request.method; }  if (!request.url) {   throw 'unmatched request url: ' + request.url; }  if (!request.query) {   throw 'unmatched request query: ' + request.query; }  if (!request.body) {   throw 'unmatched request body: ' + request.body; }  if (!request.headers) {   throw 'unmatched request headers: ' + request.headers; }  if (!request.method) {   throw 'unmatched request method: ' + request.method; }  if (!request.url) {   throw 'unmatched request url: ' + request.url; }  if (!request.query) {   throw 'unmatched request query: ' + request.query; }  if (!request.body) {   throw 'unmatched request body: ' + request.body; }  if (!request.headers) {   throw 'unmatched request headers: ' + request.headers; }  if (!request.method) {   throw 'unmatched request method:
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.regionserver;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertTrue;  import java.io.IOException; import java.util.ArrayList; import java.util.List;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.testclassification.SmallTests; import org.apache.hadoop.hbase.util.Bytes; import org.junit.After; import org.junit.Before; import org.junit.ClassRule; import org.junit.Test; import org.junit.experimental.categories.Category; import org.junit.rules.ExpectedException; import org.junit.runner.RunWith; import org.junit.runners.JUnit4;  @RunWith(JUnit4.class) @Category({SmallTests.class}) public class TestRegionServer {    @ClassRule   public static final HBaseTestingUtility TEST_UTIL = new HBaseTestingUtility();    @Before  
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.cache.distributed.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.*

﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Schema.Properties; using System.ComponentModel.DataAnnotations.Schema.Types; using System.ComponentModel.DataAnnotations.Schema.Types.Properties; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes; using System.ComponentModel.DataAnnotations.Schema.SchemaTypes.SchemaTypes;
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
import React, { PropTypes } from 'react'; import { connect } from 'react-redux'; import { Link } from 'react-router-dom'; import { Form } from 'react-form'; import { FormField } from 'react-form-field'; import { FormControl } from 'react-form-control'; import { FormGroup } from 'react-form-group'; import { FormControlLabel } from 'react-form-control-label'; import { FormControlText } from 'react-form-control-text'; import { FormControlEmail } from 'react-form-control-email'; import { FormControlPassword } from 'react-form-control-password'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlCheckbox } from 'react-form-control-checkbox'; import { FormControlCheckboxInput } from 'react-form-control-checkbox-input'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlEmailInput } from 'react-form-control-email-input'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlTextInput } from 'react-form-control-text-input'; import { FormControlEmailInput } from 'react-form-control-email-input'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlCheckboxInput } from 'react-form-control-checkbox-input'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlEmailInput } from 'react-form-control-email-input'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlTextInput } from 'react-form-control-text-input'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlEmailInput } from 'react-form-control-email-input'; import { FormControlPasswordInput } from 'react-form-control-password-input'; import { FormControlPasswordInput } from 'react-form-control-
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Range; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Resources; using System.Windows.Shell.Interop; using System.Collections; using System.Collections.Specialized; using System.Collections.ObjectModel; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Globalization; using System.IO; using System.Text.RegularExpressions; using System.Xml; using System.Xml.Linq; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.Xml; using System.Xml.Serialization.Formatters.Binary; using System.Xml.Serialization.Formatters.XmlSerializer; using System.Xml.Serialization.Formatters.XmlSerializerSettings; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationContext; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationMethod; using System.Xml.Serialization.Formatters.XmlSerializer.Settings; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.XmlSerializer.XmlSerializerSettings.Formatting; using System.Xml.Serialization.Formatters.XmlSerializer.XmlSerializerSettings.SerializationProperties; using System.Xml.Serialization.Formatters.XmlSerializer.XmlSerializerSettings.
 if (this.ponged && reshape) {     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.ponged = false     this.
 /*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.regionserver;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertTrue;  import java.io.IOException; import java.util.ArrayList; import java.util.List;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseClassTestRule; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.client.Admin; import org.apache.hadoop.hbase.client.AdminFactory; import org.apache.hadoop.hbase.client.Connection; import org.apache.hadoop.hbase.client.ConnectionFactory; import org.apache.hadoop.hbase.client.ConnectionPool; import org.apache.hadoop.hbase.client.ConnectionFactoryFactory; import org.apache.hadoop.hbase.client.ConnectionPoolFactory; import org.apache.hadoop.hbase.client.Table; import org.apache.hadoop.hbase.client.TableDescriptor; import org.apache.hadoop.hbase.client.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
  "Accept": "application/json",   "Accept-Encoding": "gzip, deflate",   "Accept-Language": "en-US,en;q=0.8",   "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.212.2 Safari/537.36",   "Accept-Encoding": "gzip, deflate",   "Accept-Language": "en-US,en;q=0.8",   "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.212.2 Safari/537.36",   "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.212.2 Safari/537.36",   "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.212.2 Safari/537.36",   "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.212.2 Safari/537.36",   "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.212.2 Safari/537.36",   "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.212.2 Safari/537.36",   "User-Agent": "Mozilla/5.0 (
  var translate = {};  translate.keys = {};  translate.keys['a'] = 'a'; translate.keys['b'] = 'b'; translate.keys['c'] = 'c'; translate.keys['d'] = 'd'; translate.keys['e'] = 'e'; translate.keys['f'] = 'f'; translate.keys['g'] = 'g'; translate.keys['h'] = 'h'; translate.keys['i'] = 'i'; translate.keys['j'] = 'j'; translate.keys['k'] = 'k'; translate.keys['l'] = 'l'; translate.keys['m'] = 'm'; translate.keys['n'] = 'n'; translate.keys['o'] = 'o'; translate.keys['p'] = 'p'; translate.keys['q'] = 'q'; translate.keys['r'] = 'r'; translate.keys['s'] = 's'; translate.keys['t'] = 't'; translate.keys['u'] = 'u'; translate.keys['v'] = 'v'; translate.keys['w'] = 'w'; translate.keys['x'] = 'x'; translate.keys['y'] = 'y'; translate.keys['z'] = 'z'; translate.keys['A'] = 'A'; translate.keys['B'] = 'B'; translate.keys['C'] = 'C'; translate.keys['D'] = 'D'; translate.keys['E'] = 'E'; translate.keys['F'] = 'F'; translate.keys['G'] = 'G'; translate.keys['H'] = 'H'; translate.keys['I'] = 'I'; translate.keys['J'] = 'J'; translate.keys['K'] = 'K'; translate.keys['L'] = 'L'; translate.keys['M'] = 'M'; translate.keys['N'] = 'N'; translate.keys['O'] = 'O'; translate.keys['P'] = 'P'; translate.keys['Q'] = 'Q'; translate.keys['R'] = 'R'; translate.keys['S'] = 'S';
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Configuration; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControlsControls; using System.
         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="date">' + date_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( start_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( end_date ) {             html += '<div class="time">' + time_string + '</div>';         }         if ( start_date ) {             html += '<div
     it("move should be 2 ", function*() {              const stemGroup=file.createGroup('pmc/Trajectories');     const stemGroup2=file.createGroup('pmc/Trajectories');     const stemGroup3=file.createGroup('pmc/Trajectories');     const stemGroup4=file.createGroup('pmc/Trajectories');     const stemGroup5=file.createGroup('pmc/Trajectories');     const stemGroup6=file.createGroup('pmc/Trajectories');     const stemGroup7=file.createGroup('pmc/Trajectories');     const stemGroup8=file.createGroup('pmc/Trajectories');     const stemGroup9=file.createGroup('pmc/Trajectories');     const stemGroup10=file.createGroup('pmc/Trajectories');     const stemGroup11=file.createGroup('pmc/Trajectories');     const stemGroup12=file.createGroup('pmc/Trajectories');     const stemGroup13=file.createGroup('pmc/Trajectories');     const stemGroup14=file.createGroup('pmc/Trajectories');     const stemGroup15=file.createGroup('pmc/Trajectories');     const stemGroup16=file.createGroup('pmc/Trajectories');     const stemGroup17=file.createGroup('pmc/Trajectories');     const stemGroup18=file.createGroup('pmc/Trajectories');     const stemGroup19=file.createGroup('pmc/Trajectories');     const stemGroup20=file.createGroup('pmc/Trajectories');     const stemGroup21=file.createGroup('pmc/Trajectories');     const stemGroup22=file.createGroup('pmc/Trajectories');     const stemGroup23=file.createGroup('pmc/Trajectories');     const stemGroup24=file.createGroup('pmc/Trajectories');     const stemGroup25=file.createGroup('pmc/Trajectories');     const stemGroup26=file.createGroup('pmc/Trajectories');     const stemGroup27
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.beam.sdk.coders.Coder; import org.apache.beam.sdk.coders.CoderException; import org.apache.beam.sdk.coders.StringUtf8Coder; import org.apache.beam.sdk.options.PipelineOptions; import org.apache.beam.sdk.options.PipelineOptionsFactory; import org.apache.beam.sdk.testing.TestPipeline; import org.apache.beam.sdk.testing.TestPipelineFactory; import org.apache.beam.sdk.transforms.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 import React from 'react'; import PropTypes from 'prop-types'; import clsx from 'clsx'; import withStyles from '../styles/withStyles';  const styles = theme => ({   root: {     display: 'flex',     flexDirection: 'column',     justifyContent: 'center',     alignItems: 'center',     marginTop: theme.spacing.unit,     marginBottom: theme.spacing.unit,     marginLeft: theme.spacing.unit,     marginRight: theme.spacing.unit,     marginTopRight: theme.spacing.unit,     marginBottomRight: theme.spacing.unit,     marginLeftRight: theme.spacing.unit,     marginRightRight: theme.spacing.unit,     marginTopLeft: theme.spacing.unit,     marginBottomLeft: theme.spacing.unit,     marginLeftRight: theme.spacing.unit,     marginRightLeft: theme.spacing.unit,     marginTopRight: theme.spacing.unit,     marginBottomRight: theme.spacing.unit,     marginLeftLeft: theme.spacing.unit,     marginRightRight: theme.spacing.unit,     marginTopLeft: theme.spacing.unit,     marginBottomLeft: theme.spacing.unit,     marginRightLeft: theme.spacing.unit,     marginTopRight: theme.spacing.unit,     marginBottomRight: theme.spacing.unit,     marginLeftLeft: theme.spacing.unit,     marginRightRight: theme.spacing.unit,     marginTopLeft: theme.spacing.unit,     marginBottomLeft: theme.spacing.unit,     marginRightRight: theme.spacing.unit,     marginTopRight: theme.spacing.unit,     marginBottomRight: theme.spacing.unit,     marginLeftLeft: theme.spacing.unit,     marginRightRight: theme.spacing.unit,     marginTopLeft: theme.spacing.unit,     marginBottomRight: theme.spacing.unit,     marginLeftRight: theme.spacing.unit,     marginRightRight: theme.spacing.unit,     marginTopLeft: theme.spacing.unit,     marginBottomLeft: theme.spacing.unit,    
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 Polymer({   _template: `     <style>         body {             margin: 0;             padding: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;             margin-top: 0;             margin-bottom: 0;             margin-left: 0;             margin-right: 0;

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.sdk.coders;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.primitives.Ints; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.Set; import java.util.concurrent.TimeUnit; import javax.annotation.Nullable; import org.apache.beam
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
  module.exports = {   createMenu: createMenu,   chalk: chalk }  module.exports.createMenu = createMenu module.exports.chalk = chalk module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu = createMenu module.exports.createMenu =
     if (this.documents[i] === undefined) {         this.documents[i] = [];     }      this.documents[i].push(document); }  /**  * @param {number} i  * @param {number} j  * @param {number} k  * @param {number} l  * @param {number} m  * @param {number} n  * @param {number} o  * @param {number} p  * @param {number} q  * @param {number} r  * @param {number} s  * @param {number} t  * @param {number} u  * @param {number} v  * @param {number} w  * @param {number} x  * @param {number} y  * @param {number} z  * @param {number} w1  * @param {number} x1  * @param {number} y1  * @param {number} z1  * @param {number} w2  * @param {number} x2  * @param {number} y2  * @param {number} z2  * @param {number} w3  * @param {number} x3  * @param {number} y3  * @param {number} z3  * @param {number} w4  * @param {number} x4  * @param {number} y4  * @param {number} z4  * @param {number} w5  * @param {number} x5  * @param {number} y5  * @param {number} z5  * @param {number} w6  * @param {number} x6  * @param {number} y6  * @param {number} z6  * @param {number} w7  * @param {number} x7  * @param {number} y7  * @param {number} z7  * @param {number} w8  * @param {number} x8  * @param {number} y8  * @param {number} z8  * @param {number} w9  * @param {number} x9  * @param {number} y9  * @param {number
     if (stickyElement.positionType === 'fixed') {         stickyElement.positionType = 'fixed';     } else {         stickyElement.positionType = 'relative';     } }  if (stickyElement.positionType === 'absolute') {     stickyElement.positionType = 'absolute'; }  if (stickyElement.positionType === 'relative') {     stickyElement.positionType = 'relative'; }  if (stickyElement.positionType === 'top') {     stickyElement.positionType = 'top'; }  if (stickyElement.positionType === 'bottom') {     stickyElement.positionType = 'bottom'; }  if (stickyElement.positionType === 'left') {     stickyElement.positionType = 'left'; }  if (stickyElement.positionType === 'right') {     stickyElement.positionType = 'right'; }  if (stickyElement.positionType === 'top') {     stickyElement.positionType = 'top'; }  if (stickyElement.positionType === 'bottom') {     stickyElement.positionType = 'bottom'; }  if (stickyElement.positionType === 'left') {     stickyElement.positionType = 'left'; }  if (stickyElement.positionType === 'right') {     stickyElement.positionType = 'right'; }  if (stickyElement.positionType === 'top') {     stickyElement.positionType = 'top'; }  if (stickyElement.positionType === 'bottom') {     stickyElement.positionType = 'bottom'; }  if (stickyElement.positionType === 'left') {     stickyElement.positionType = 'left'; }  if (stickyElement.positionType === 'right') {     stickyElement.positionType = 'right'; }  if (stickyElement.positionType === 'top') {     stickyElement.positionType = 'top'; }  if (stickyElement.positionType === 'bottom') {     stickyElement.positionType = 'bottom'; }  if (stickyElement.positionType === 'left') { 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.con
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootNamespace = 'gdata';     protected $_rootElement = 'feed';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache.ignite.testframework.junits
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Parameter; use Symfony\Component\DependencyInjection\ReferenceCollection; use Symfony\Component\DependencyInjection\ReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ArrayParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\PhpParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\PhpParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ReferenceParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ReferenceParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ReferenceParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
     {         title: '500 - Erreur',         message:           "Une erreur s\'est produite. Veuillez rafraichir la page.",         solutions: [             {                 title: '500 - Erreur',                 message:           "Une erreur s\'est produite. Veuillez rafraichir la page."             }         ]     },     {         title: '500 - Erreur',         message:           "Une erreur s\'est produite. Veuillez rafraichir la page.",         solutions: [             {                 title: '500 - Erreur',                 message:           "Une erreur s\'est produite. Veuillez rafraichir la page."             }         ]     },     {         title: '500 - Erreur',         message:           "Une erreur s\'est produite. Veuillez rafraichir la page.",         solutions: [             {                 title: '500 - Erreur',                 message:           "Une erreur s\'est produite. Veuillez rafraichir la page."             }         ]     },     {         title: '500 - Erreur',         message:           "Une erreur s\'est produite. Veuillez rafraichir la page.",         solutions: [             {                 title: '500 - Erreur',                 message:           "Une erreur s\'est produite. Veuillez rafraichir la page."             }         ]     },     {         title: '500 - Erreur',         message:           "Une erreur s\'est produite. Veuillez rafraichir la page.",         solutions: [             {                 title: '500 - Erreur',                 message:           "Une erreur s\'est produite. Veuillez rafraichir la page."             }         ]     },     {         title
 = function (node, className, shouldHaveClass) {     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (shouldHaveClass === void 0) { shouldHaveClass = false; }     if (should
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\ConstraintValidatorInterface; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection
 function soundsMiddleware2(soundsData) {   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('missingSoundData');   if ( typeof soundsData !== 'object' )     throw new Error('
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
		} 		else 		{ 			pms.parameterContext = originalParamContext; 		} 	} 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaType; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Linq.Expressions; using System.Linq.Expressions.Linq; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.WebControls.WebParts; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.Web.UI.HtmlControls.WebParts.WebPartsControlsControlsControls; using System.
    limitToOne = 1; });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 2; });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 3; });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 4; });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 5; });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 6; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 7; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 8; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 9; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 10; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 11; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 12; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 13; });  });  describe('atomic using redis (callback)', function () {   var limitToOne;   beforeEach(function (done) {     limitToOne = 14;
 'use strict';  var express = require('express'); var path = require('path'); var favicon = require('serve-favicon'); var logger = require('morgan'); var cookieParser = require('cookie-parser'); var bodyParser = require('body-parser'); var faviconParser = require('favicon-parser'); var logger = require('morgan'); var cookieParser = require('cookie-parser'); var bodyParser.urlencoded({   extended: true });  var favicon = require('serve-favicon'); var logger = require('morgan'); var cookieParser = require('cookie-parser'); var bodyParser.urlencoded({   extended: true });  var app = express();  // view engine setup app.set('views', path.join(__dirname, 'views')); app.set('view engine', 'jade');  // uncomment after placing your favicon in /public //app.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); app.use(logger('dev')); app.use(cookieParser()); app.use(bodyParser.json()); app.use(bodyParser.urlencoded({   extended: true }));  // uncomment after placing your favicon in /public/favicon //app.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); app.use(logger('dev')); app.use(bodyParser.urlencoded({   extended: true })); app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));  // uncomment after placing your favicon in /public/favicon/master //app.use(favicon(path.join(__dirname, 'public', 'favicon-master.ico')));  // uncomment after placing your favicon in /public //app.use(bodyParser.urlencoded({ //  extended: true //}));  // uncomment after placing your favicon in /public/favicon/master //app.use(favicon(path.join(__dirname, 'public', 'favicon-master
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Compute {     using Microsoft.Rest;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Models;     using Newtonsoft.Json;     using System.Linq;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Models;     using Newtonsoft.Json;     using System.Linq;     using System.Collections;     using System.Collections.ObjectModel;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Security;     using System.Security.Permissions;     using System.Resources;     using System.Collections;     using System.Collections.Generic;     using System.Threading;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Security.Permissions;     using System.Resources;     using System.Collections.ObjectModel;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Security.Permissions;     using System.Resources.Serialization;     using System.Collections;     using System.Collections.ObjectModel;     using System.Net.Http.Headers;     using System.Security.Permissions;     using System.Resources.Serialization;     using System.Collections.Specialized;     using System.Collections.ObjectModel.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
    if(relationship.kind === 'belongsTo' || relationship.kind === 'hasMany' || relationship.kind === 'hasManyMany' || relationship.kind === 'hasManyManyMany' || relationship.kind === 'hasManyManyManyMany' || relationship.kind === 'hasManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.kind === 'hasManyManyManyManyMany' || relationship.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
$scope.$on('$destroy', function($scope) {     $scope.$on('$destroy', function($scope) {         $scope.$on('$destroy', function($scope) {             $scope.$on('$destroy', function($scope) {                 $scope.$on('$destroy', function($scope) {                     $scope.$on('$destroy', function($scope) {                         $scope.$on('$destroy', function($scope) {                             $scope.$on('$destroy', function($scope) {                                 $scope.$on('$destroy', function($scope) {                                     $scope.$on('$destroy', function($scope) {                                         $scope.$on('$destroy', function($scope) {                                             $scope.$on('$destroy', function($scope) {                                                 $scope.$on('$destroy', function($scope) {                                                     $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                     $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy', function($scope) {                                                         $scope.$on('$destroy', function($scope) {                                                             $scope.$on('$destroy

﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Resources; using System.Windows.Shell.Interop; using System.Windows.Threading; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Resources; using System.Windows.Shell.Interop; using System.Windows.Threading.Tasks; using System.Windows.Data; using System.Windows; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Resources; using System.Windows.Shell.Interop; using System.Windows.Threading; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Resources; using System.Windows.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_View_Helper_Abstract  */ require_once 'Zend/View/Helper/Abstract.php';  /**  * @see Zend_View_Helper_Form  */ require_once 'Zend/View/Helper/Form.php';  /**  * @see Zend_View_Helper_Html  */ require_once 'Zend/View/Helper/Html.php';  /**  * @see Zend_View_Helper_Image  */ require_once 'Zend/View/Helper/Image.php';  /**  * @see Zend_View_Helper_Text  */ require_once 'Zend/View/Helper/Text.php';  /**  * @category   Zend  * @package    Zend_View  * @subpackage Helper  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */ class Zend_View_Helper_Form extends Zend_View_Helper_Abstract {     /**      * Form elements      *      * @var array      */     protected $_elements = array
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.SumOfNumbers")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.SumOfNumbers")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8-8e8e-4e8e-8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.FutureCallback; import org.apache.druid.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
 		if(!uid){ 			return false; 		} 		if(!uid.length){ 			return false; 		} 		if(!uid.charAt(0)){ 			return false; 		} 		if(!uid.charAt(1)){ 			return false; 		} 		if(!uid.charAt(2)){ 			return false; 		} 		if(!uid.charAt(3)){ 			return false; 		} 		if(!uid.charAt(4)){ 			return false; 		} 		if(!uid.charAt(5)){ 			return false; 		} 		if(!uid.charAt(6)){ 			return false; 		} 		if(!uid.charAt(7)){ 			return false; 		} 		if(!uid.charAt(8)){ 			return false; 		} 		if(!uid.charAt(9)){ 			return false; 		} 		if(!uid.charAt(10)){ 			return false; 		} 		if(!uid.charAt(11)){ 			return false; 		} 		if(!uid.charAt(12)){ 			return false; 		} 		if(!uid.charAt(13)){ 			return false; 		} 		if(!uid.charAt(14)){ 			return false; 		} 		if(!uid.charAt(15)){ 			return false; 		} 		if(!uid.charAt(16)){ 			return false; 		} 		if(!uid.charAt(17)){ 			return false; 		} 		if(!uid.charAt(18)){ 			return false; 		} 		if(!uid.charAt(19)){ 		
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.*; import org.apache.ignite.internal.processors.cache.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ign
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid
 		if (this.username.length > 0) { 			this.username = this.username.substring(0, this.username.length - 1); 		} else { 			this.username = ""; 		} 	}, 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteInternalFuture; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.apache
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource_bundle.h" #include "ui/gfx/canvas.h" #include "ui/gfx/image/image.h" #include "ui/gfx/image/image_skia.h" #
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
.nonceCount = 0     this.nonce = generateNonce()     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0     this.nonceCount = 0    
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
     'or': true,     'and': true,     'or': true,     'and': true,     'or': true,     'and': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,     'or': true,
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkBundleExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Husky.Select")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("Husky.Select")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8-8e8e-4e8e-8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
  if (domainEnv) {     res.setHeader('Access-Control-Allow-Origin', domainEnv);   }   if (publicIP) {     res.setHeader('Access-Control-Allow-Origin', publicIP);   }   res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');   res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');   res.setHeader('Access-Control-Allow-Credentials', true);   res.setHeader('Access-Control-Allow-Credentials-Allow-Origin', domainEnv);   res.setHeader('Access-Control-Allow-Credentials-Allow-Methods', 'GET, POST, PUT, DELETE');   res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');   res.setHeader('Access-Control-Allow-Credentials-Allow-Origin', publicIP);   res.setHeader('Access-Control-Allow-Credentials-Allow-Methods', 'GET, POST, PUT, DELETE');   res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');   res.setHeader('Access-Control-Allow-Credentials-Allow-Origin', domainEnv);   res.setHeader('Access-Control-Allow-Credentials-Allow-Methods', 'GET, POST, PUT, DELETE');   res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');   res.setHeader('Access-Control-Allow-Credentials-Allow-Origin', publicIP);   res.setHeader('Access-Control-Allow-Credentials-Allow-Methods', 'GET, POST, PUT, DELETE');   res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept');   res.setHeader('Access-Control-Allow-Credentials-Allow-Origin', domainEnv);   res.setHeader('Access-Control-Allow-Credentials-Allow-Methods', 'GET, POST, PUT, DELETE');   res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content
.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model.getDocs(currentWord)           break         case 'definition': return model
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.beam.sdk.coders.Coder; import org.apache.beam.sdk.coders.CoderException; import org.apache.beam.sdk.coders.StringUtf8Coder; import org.apache.beam.sdk.options.PipelineOptions; import org.apache.beam.sdk.options.PipelineOptionsFactory; import org.apache.beam.sdk.testing.TestPipeline; import org.apache.beam.sdk.testing.TestPipelineFactory; import org.apache.beam.sdk.transforms.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
 (function(window, document, undefined) {   'use strict';    angular     .module('myApp')     .controller('LoginCtrl', LoginCtrl);    LoginCtrl.$inject = ['$scope', '$location', '$locationParams', 'Authentication', 'LoginService'];    function LoginCtrl($scope, $location, $locationParams, Authentication, LoginService) {     var vm = this;      vm.login = login;     vm.loginSuccess = loginSuccess;     vm.loginError = loginError;      vm.logout = logout;     vm.logoutSuccess = logoutSuccess;     vm.logoutError = logoutError;      vm.signup = signup;     vm.signupSuccess = signupSuccess;     vm.signupError = signupError;      vm.signin = signin;     vm.signinSuccess = signinSuccess;     vm.signinError = signinError;      $scope.signup = signup;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signout = signout;     $scope.signoutSuccess = signoutSuccess;     $scope.signoutError = signoutError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signout = signout;     $scope.signoutSuccess = signoutSuccess;     $scope.signoutError = signoutError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess = signinSuccess;     $scope.signinError = signinError;      $scope.signin = signin;     $scope.signinSuccess
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\Logic
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('subject', 'text', array(                 'label' => 'subject',                 'required' => false,             ))             ->add('message', 'textarea', array(                 'label' => 'message',                 'required' => false,             ))         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_EXTENSIONS_API_EXTENSION_API_H_ #define CHROME_BROWSER_EXTENSIONS_API_EXTENSION_API_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_set.h" #include "base/memory/weak_vector.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/extensions/api/extension_api.h" #include "chrome/browser/extensions/api/extension_service.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_util.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/render_widget_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_
{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"통계" } }   ,"statistics":{    "title":"�
 }
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Nw")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("Nw")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("Nw")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("School")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("School")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct();         $this->_text = $text;     }      /**      * Gets the text value for this element.      *      * @return string The text value for this element.      */     public function getText()     {         return $this->_text;     }      /**      * Sets the text value for this element.      *     
     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles = force.obstacles;     obstacles =
exports = {   ShaderCache: ShaderCache,   jsToGl: jsToGl,   WebGl: WebGl,   ShaderCache: ShaderCache,   jsToGl: jsToGl,   WebGl: WebGl,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,   ShaderCache: ShaderCache,  
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
 import React, { Component } from 'react' import PropTypes from 'prop-types' import { connect } from 'react-redux' import { bindActionCreators } from 'redux' import { bindActionCreatorsToProps } from 'redux-actions' import { connect } from 'react-redux' import { bindActionCreatorsToProps } from 'redux-actions' import { bindActionCreatorsToState } from 'redux-state' import { bindActionCreatorsToDispatch } from 'redux-dispatch' import { bindActionCreatorsToRouter } from 'redux-router' import { bindActionCreatorsToState } from 'redux-state' import { bindActionCreatorsToDispatch } from 'redux-dispatch' import { bindActionCreatorsToRouter } from 'redux-router' import { bindActionCreatorsToStateWithRouter } from 'redux-state-with-router' import { connectWithRouter } from 'redux-with-router' import { connectWithStateWithRouter } from 'redux-with-state-with-router' import { bindActionCreatorsToStateWithRouter } from 'redux-with-state-with-router' import { bindActionCreatorsToDispatchWithRouter } from 'redux-with-dispatch-with-router' import { bindActionCreatorsToStateWithRouterWithRouter } from 'redux-with-state-with-router-with-router' import { connectWithStateWithRouterWithRouter } from 'redux-with-state-with-router-with-router' import { connectWithStateWithRouterWithRouterWithRouter } from 'redux-with-state-with-router-with-router' import { connectWithStateWithRouterWithRouterWithRouter } from 'redux-with-state-with-router-with-router' import { connectWithStateWithRouterWithRouterWithRouter } from 'redux-with-state-with-router-with-router' import { connectWithStateWithRouterWithRouterWithRouter } from 'redux-with-state-with-router-with-router' import { connectWithStateWithRouterWithRouterWithRouter } from 'redux-with-state-with-router-with
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
/*  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the RegistryStatusResource class.  * @constructor  * A registry status resource.  *  * @member {string} [name] The name of the resource.  *  * @member {string} [type] The type of the resource.  *  * @member {string} [location] The location of the resource.  *  * @member {string} [etag] A unique read-only string that changes whenever  * the resource is updated.  *  * @member {string} [lastModified] The last modified time of the  * resource.  *  * @member {string} [etag] A unique read-only string that changes whenever  * the resource is updated.  *  * @member {string} [etag] A unique read-only string that changes whenever  * the resource is updated.  */ class RegistryStatusResource extends models {   /**    * Create a RegistryStatusResource.    * @member {string} [name] The name of the resource.    *    * @member {string} [type] The type of the resource.    *    * @member {string} [location] The location of the resource.    *    * @member {string} [etag] A unique read-only string that changes whenever    * the resource is updated.    *    * @member {string} [lastModified] The last modified time of the    * resource.    *    * @member {string} [etag] A unique read-only string that changes whenever    * the resource is updated.    */   constructor() {     super();   }    /**    * Defines the metadata of RegistryStatusResource    *    * @returns {object} metadata of RegistryStatusResource    *    */   mapper
 }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; }                 break; 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache
this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function () {     var byTor; this.testInt = function
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
  , fs = require('fs')   , path = require('path')   , pathUtils = require('path-utils')   , fsUtils = require('fs-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')   , pathUtils = require('path-utils')  
        this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((resolve, reject) => {       this.communication.openRoom().then(() => {             resolve();         });     }); }  viewOpenRoomScreenAnimation() {     return new Promise((
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
     case 'mousedown':       stage._mouseEvents.push('mousedown');     case 'mousemove':       stage._mouseEvents.push('mousemove');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouseEvents.push('mouseout');     case 'mouseover':       stage._mouseEvents.push('mouseover');     case 'mouseout':       stage._mouse
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models {     using Microsoft.Azure;     using Microsoft.Azure.Management;     using Microsoft.Azure.Management.RecoveryServices;     using Microsoft.Azure.Management.RecoveryServices.Backup;     using Microsoft.Azure.Management.RecoveryServices.Backup.Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Management.Automation;     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Microsoft.Rest.Azure.OData;     using Microsoft.Rest.Azure.OData.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Linq;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Net.Http.Headers.Authorization;     using System.Net.Http.Headers.Content;     using System.Net.Http.Headers.Accept;     using System.Net.Http.Headers.Content-Type;     using System.Net.Http.Headers.Accept-Encoding;     using System.Net.Http.Headers.Accept-Language;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 import React, { Component } from 'react' import { connect } from 'react-redux' import { Link } from 'react-router-dom'  import ErrorStore from '../stores/ErrorStore'  class ErrorPagePage extends React.Component {   constructor(props) {     super(props)     this.state = ErrorStore.getState()   }    render() {     return (       <div>         <Link to="/">Home</Link>         <Link to="/about">About</Link>         <Link to="/contact">Contact</Link>         <Link to="/login">Login</Link>         <Link to="/logout">Logout</Link>       </div>     )   } }  const mapStateToProps = (state) => {   return {     error: state.error   } }  const mapDispatchToProps = (dispatch) => {   return {     dispatch: dispatch   } }  export default connect(mapStateToProps, mapDispatchToProps)(ErrorPagePage) 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
) .on('end', (err) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.kill()       process.exit(1)       throw err }) .on('timeout', (err) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.kill()       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('end', (err) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.kill()       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (typeof seleniumServer !== 'undefined') seleniumServer.sendKeys(data)       process.exit(1)       throw err }) .on('data', (data) => {   if (
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
 		} 	} }
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.when;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.ImmutableSortedMap; import com.google.common.collect.ImmutableSortedSet; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.ImmutableSortedSet.Builder; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Multimap; import com.google.common.collect.Multimap.Builder; import com.google.common.collect.Multimap.Builder; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for  * license information.  *  * Code generated by Microsoft (R) AutoRest Code Generator.  * Changes may cause incorrect behavior and will be lost if the code is  * regenerated.  */  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserProfile class.  * @constructor  * A user profile.  *  * @member {string} [id] The ID of the user profile.  *  * @member {string} [name] The name of the user profile.  *  * @member {string} [displayName] The display name of the user profile.  *  * @member {string} [email] The email address of the user profile.  *  * @member {string} [phone] The phone number of the user profile.  *  * @member {string} [password] The password of the user profile.  *  * @member {string} [passwordConfirm] The password confirmation of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [emailConfirmationToken] The email confirmation  * token of the user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of the  * user profile.  *  * @member {string} [passwordResetToken] The password reset token of
 import {connect} from 'react-redux' import {createStore} from 'react-redux' import {connect} from 'react-redux-router' import {connect} from 'react-router-dom' import {connect} from 'react-router-redux' import {withRouter} from 'react-router-redux' import {withRouterHistory} from 'react-router-history' import {withRouterRouter} from 'react-router-redux' import {withState} from 'react-redux-state' import {withRouterHistory} from 'react-router-history' import {withStore} from 'react-redux-store' import {withRouter} from 'react-router' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router-history' import {withRouterHistory} from 'react-router
		'stroke-width': 1, 		'stroke-opacity': 0.5, 		'fill-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0.5, 		'stroke-opacity': 0
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class FPS extends AbstractTag {      protected $Id = '0018,0018';      protected $Name = 'FPS';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'FPS';      protected $flag_Permanent = true; } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache
 		return false; 	} 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * @see Zend_Gdata_Extension_Feed  */ require_once 'Zend/Gdata/Extension/Feed.php';  /**  * @see Zend_Gdata_Extension_Image  */ require_once 'Zend/Gdata/Extension/Image.php';  /**  * @see Zend_Gdata_Extension_Link  */ require_once 'Zend/Gdata/Extension/Link.php';  /**  * @see Zend_Gdata_Extension_Media  */ require_once 'Zend/Gdata/Extension/Media.php';  /**  * @see Zend_Gdata_Extension_Text  */ require_once 'Zend/Gdata/Extension/Text.php';  /**  * @see Zend_Gdata_Extension_Url  */ require_once 'Zend/Gdata/Extension/Url.php';  /**  * @see Zend_Gdata_Extension_Video  */ require_once 'Zend/Gdata/Extension/Video.php';  /**  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util.common.guava.Sequences; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.SumOfNumbers")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.SumOfNumbers")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("8e8e8e8e8-8e8e-4e8e-8e8e8e8e8")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
 return function (bindingDef, targetScope, attrKey, context) {   if (!bindingDef) {     bindingDef = {};   }   if (!targetScope) {     targetScope = {};   }   if (!attrKey) {     attrKey = '';   }   if (!context) {     context = {};   }   bindingDef.targetScope = targetScope;   bindingDef.attrKey = attrKey;   bindingDef.context = context;   return bindingDef; }; Binding.get = function (bindingDef, targetScope, attrKey, context) {   if (!bindingDef) {     bindingDef = {};   }   if (!targetScope) {     targetScope = {};   }   if (!attrKey) {     attrKey = '';   }   if (!context) {     context = {};   }   return bindingDef.targetScope[attrKey]; }; Binding.set = function (bindingDef, targetScope, attrKey, value, context) {   if (!bindingDef) {     bindingDef = {};   }   if (!targetScope) {     targetScope = {};   }   if (!attrKey) {     attrKey = '';   }   if (!context) {     context = {};   }   bindingDef.targetScope[attrKey] = value;   return bindingDef; }; Binding.remove = function (bindingDef, targetScope, attrKey, context) {   if (!bindingDef) {     bindingDef = {};   }   if (!targetScope) {     targetScope = {};   }   if (!attrKey) {     attrKey = '';   }   if (!context) {     context = {};   }   bindingDef.targetScope[attrKey] = null;   return bindingDef; }; Binding.removeAll = function (bindingDef, targetScope, attrKey, context) {   if (!bindingDef) {     bindingDef = {};   }   if (!targetScope) {     targetScope = {};   }   if (!attrKey)
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.GridKernalContext; import org.apache.ignite.internal.processors.cache.GridCacheContext; import org.apache.ignite.internal.processors.cache.GridCacheSharedContext; import org.apache.ignite.internal.processors.cache.GridCacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org
     this.bindSourceData(this.boundSource);     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();     this.__reattach();
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Linq.Expressions; using System.Linq.Expressions.Linq; using System.Linq.Expressions.Queryable; using System.Reflection; using System.Reflection.Emit; using System.Runtime.Serialization; using System.Runtime.Serialization.Formatters.Binary; using System.Runtime.Serialization.Formatters.Xml; using System.Text; using System.Text.RegularExpressions; using System.Xml; using System.Xml.Linq; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.XmlSerializer; using System.Xml.Serialization.Formatters.XmlSerializer.Settings; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters.Binary; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters.Binary.SerializationInfo; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatters.XmlSerializer.SerializationInfo
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony
     if(!localStorage['tutorial-shown']) {  GAME.tutorial = new Tutorial(spawnPos)     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     }      if(!localStorage['tutorial-shown']) {  GAME.tutorial.start()     } 
.data = this.getData()     json.name = this.getName()     return json  var self = this  self.elementToJSON = function() {     var json = {}     json.data = this.getData()     json.name = this.getName()     return json }  self.getData = function() {     return this.data }  self.setData = function(data) {     this.data = data }  self.getName = function() {     return this.name }  self.setName = function(name) {     this.name = name }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data = this.elementToJSON()     json.name = this.getName()     return json }  self.elementToJSON = function() {     var json = {}     json.data
 THREE.ObjectLoader.parseTexture = function( value ) {     if ( typeof value !== 'number' ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );    return THREE[ value ];     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === null ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be null.', value );    return null;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;     }      if ( value === undefined ) {         console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be undefined.', value );    return undefined;
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
                 console.log("accept received")                 this.node.receiveAccept(message.port, message.address, message.proposalId)             } else if (message.type == "reject") {                 console.log("reject received")                 this.node.receiveReject(message.port, message.address, message.proposalId)             } else if (message.type == "rejectAll") {                 console.log("rejectAll received")                 this.node.receiveRejectAll(message.port, message.address, message.proposalId)             } else if (message.type == "acceptAll") {                 console.log("acceptAll received")                 this.node.receiveAcceptAll(message.port, message.address, message.proposalId)             } else if (message.type == "rejectAll") {                 console.log("rejectAll received")                 this.node.receiveRejectAll(message.port, message.address, message.proposalId)             } else if (message.type == "acceptAll") {                 console.log("acceptAll received")                 this.node.receiveAcceptAll(message.port, message.address, message.proposalId)             } else if (message.type == "acceptAll") {                 console.log("acceptAll received")                 this.node.receiveAcceptAll(message.port, message.address, message.proposalId)             } else if (message.type == "rejectAll") {                 console.log("rejectAll received")                 this.node.receiveRejectAll(message.port, message.address, message.proposalId)             } else if (message.type == "acceptAll") {                 console.log("acceptAll received")                 this.node.receiveAcceptAll(message.port, message.address, message.proposalId)             } else if (message.type == "acceptAll") {                 console.log("acceptAll received")                 this.node.receiveAcceptAll(message.port, message.address, message.proposalId)             } else if (message.type == "rejectAll") {                 console.log("rejectAll received")                 this.node.receiveRejectAll(message.port, message.address, message.proposalId)             } else if (message.type == "rejectAll") {                 console.log("rejectAll received")                
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
this.writeToCache(descriptor, config, mark);                 } catch (e3) {                     this.writeToCache(descriptor, config, mark);                 } catch (e4) {                     this.writeToCache(descriptor, config, mark);                 } catch (e5) {                     this.writeToCache(descriptor, config, mark);                 } catch (e6) {                     this.writeToCache(descriptor, config, mark);                 } catch (e7) {                     this.writeToCache(descriptor, config, mark);                 } catch (e8) {                     this.writeToCache(descriptor, config, mark);                 } catch (e9) {                     this.writeToCache(descriptor, config, mark);                 } catch (e10) {                     this.writeToCache(descriptor, config, mark);                 } catch (e11) {                     this.writeToCache(descriptor, config, mark);                 } catch (e12) {                     this.writeToCache(descriptor, config, mark);                 } catch (e13) {                     this.writeToCache(descriptor, config, mark);                 } catch (e14) {                     this.writeToCache(descriptor, config, mark);                 } catch (e15) {                     this.writeToCache(descriptor, config, mark);                 } catch (e16) {                     this.writeToCache(descriptor, config, mark);                 } catch (e17) {                     this.writeToCache(descriptor, config, mark);                 } catch (e18) {                     this.writeToCache(descriptor, config, mark);                 } catch (e19) {                     this.writeToCache(descriptor, config, mark);                 } catch (e20) {                     this.writeToCache(descriptor, config, mark);                 } catch (e21) {                     this.writeToCache(descriptor, config, mark);                 } catch (e22) {                     this.writeToCache(descriptor, config, mark);                 } catch (e23) {                     this.writeToCache(descriptor, config, mark);                 } catch (e24) {                     this.writeToCache(descriptor, config, mark);                 } catch (e25) {                     this.writeToCache(descriptor, config, mark);                 } catch (e26) {                     this.writeToCache(descriptor
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
    var entity = this._entities[key];    if (entity.transformComponent) {       entities.push(entity);     }   }    this._entities = entities;   this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transformComponent(entities);     }   });    this._entities.forEach(function (entity) {     if (entity.transformComponent) {       entity.transform
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.primitives.Ints; import com.google.common.primitives.Longs; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.SettableFuture; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; }                 return raw; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 import PropTypes from 'prop-types' import { connect } from 'react-redux' import { connectWithRouter } from 'react-router-dom' import { Link } from 'react-router-dom' import { Provider } from 'react-redux' import { ProviderRegistry } from 'react-redux-router-dom' import { ProviderState } from 'react-redux-router-dom' import { ProviderStore } from 'react-redux-router-dom' import { ProviderActionCreators } from 'react-redux-router-dom' import { ProviderActions } from 'react-redux-router-dom' import { ProviderHistory } from 'react-redux-router-dom' import { ProviderRouter } from 'react-redux-router-dom' import { ProviderRouterState } from 'react-redux-router-dom' import { ProviderRouterHistory } from 'react-redux-router-dom' import { ProviderHistoryHistory } from 'react-redux-router-dom' import { ProviderRouterHistoryHistory } from 'react-redux-router-dom' import { ProviderStore } from 'react-redux-router-dom' import { ProviderStoreActions } from 'react-redux-router-dom' import { ProviderStoreHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-redux-router-dom' import { ProviderStoreHistoryHistory } from 'react-
 };     WhileStatement.prototype,setCondition = function(condition) {         this._condition = condition; };  };     WhileStatement.prototype,getBody = function() {         return this._body; };  };     WhileStatement.prototype,setBody = function(body) {         this._body = body; };  };     WhileStatement.prototype,getIfStatement = function() {         return this._ifStatement; };  };     WhileStatement.prototype,setIfStatement = function(ifStatement) {         this._ifStatement = ifStatement; };  };     WhileStatement.prototype,getElseStatement = function() {         return this._elseStatement; };  };     WhileStatement.prototype,setElseStatement = function(elseStatement) {         this._elseStatement = elseStatement; };  };     WhileStatement.prototype,getThenStatement = function() {         return this._thenStatement; };  };     WhileStatement.prototype,setThenStatement = function(thenStatement) {         this._thenStatement = thenStatement; };  };     WhileStatement.prototype,getElseStatement = function() {         return this._elseStatement; };  };     WhileStatement.prototype,setElseStatement = function(elseStatement) {         this._elseStatement = elseStatement; };  };     WhileStatement.prototype,getBody = function() {         return this._body; };  };     WhileStatement.prototype,setBody = function(body) {         this._body = body; };  };     WhileStatement.prototype,getIfStatement = function() {         return this._ifStatement; };  };     WhileStatement.prototype,setIfStatement = function(ifStatement) {         this._ifStatement = ifStatement; };  };     WhileStatement.prototype,getElseStatement = function() {         return this._elseStatement; };  };     WhileStatement.prototype,setElseStatement = function(elseStatement) {         this._elseStatement = elseStatement; };  };     WhileStatement.prototype,getThenStatement = function() {         return this._thenStatement; };  };     WhileStatement.prototype,setThenStatement = function(thenStatement) {         this._thenStatement = thenStatement; };  };
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.query.aggregation.Aggregator; import org.apache.druid.query.aggregation.AggregatorFactory; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertSame; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import
 }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<a>${items.dom}</a>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li></li>`) }).data("ui-autocomplete")._renderItems = function (ul, items) {     return $("<ul></ul>")       .data("item.autocomplete", items)       .append(`<li
   throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.';   }  if (!ethUtil.isValidAddress(source)) {     throw 'Please provide a valid Ethereum address as the source.';   }  if (!ethUtil.isValidAddress(target)) {     throw 'Please provide a valid Ethereum address as the target.'
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_TABS_TAB_CONTENTS_VIEW_H_  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/ref_counted.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view.h" #include "chrome/browser/ui/views/tab_contents/tab_contents_view_delegate.h" #include "chrome/browser/ui/views/tabs/tab_strip_model.h" #include "chrome/browser/ui/views/tabs/tab_strip_model_observer.h" #include "chrome/browser/ui/views/tabs/tab_strip_view.h" #include "chrome/browser/ui/views/tabs/tab_strip_view_delegate_delegate.h" #include "chrome/browser/ui/views/tabs/tab_strip_view_observer.h" #include "chrome/browser/ui/views/tabs/tab_strip_view_ui.h" #include "chrome/browser/ui/views/tabs/tab_strip_view_utils.h" #include "chrome/browser/ui/views/tabs/tab_strip_view_view.h" #include "chrome/browser/ui/views/tabs/tab_strip_view_view_delegate.h" #include "chrome/browser/ui/views/tabs/tab_strip_
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Pattern; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('subject', 'text', array(                 'label' => 'subject',                 'required' => false,             ))             ->add('message', 'textarea', array(                 'label' => 'message',                 'required' => false,             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Data\Email'         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_email';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_email';     } }
 var matrix = require('./matrix'); var matrixMode = require('./matrix-mode');  module.exports = matrix;  module.exports.mode = matrixMode;  module.exports.matrix = matrix;  module.exports.matrixMode = matrixMode;  module.exports.set = function(x, y, z) {     matrix.set(x, y, z); };  module.exports.get = function(x, y, z) {     return matrix.get(x, y, z); };  module.exports.setRow = function(x, y, z) {     matrix.setRow(x, y, z); };  module.exports.getRow = function(x, y, z) {     return matrix.getRow(x, y, z); };  module.exports.setCol = function(x, y, z) {     matrix.setCol(x, y, z); };  module.exports.getCol = function(x, y, z) {     return matrix.getCol(x, y, z); };  module.exports.setRowMajor = function(x, y, z) {     matrix.setRowMajor(x, y, z); };  module.exports.getRowMajor = function(x, y, z) {     return matrix.getRowMajor(x, y, z); };  module.exports.setColMajor = function(x, y, z) {     matrix.setColMajor(x, y, z); };  module.exports.getColMajor = function(x, y, z) {     return matrix.getColMajor(x, y, z); };  module.exports.setRowMinor = function(x, y, z) {     matrix.setRowMinor(x, y, z); };  module.exports.getRowMinor = function(x, y, z) {     return matrix.getRowMinor(x, y, z); };  module.exports.setColMinor = function(x, y, z) {     matrix.setColMinor(x, y, z); };  
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param string $text (optional) The text content of the feed.      */     public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct();         $this->_text = $text;     }      /**      * Gets the text content of the feed.      *      * @return string The text content of the feed
     if (str.length === 0) {         return null;     }      if (str.length === 1) {         return str[0];     }      if (str.length === 2) {         return str[1];     }      if (str.length === 3) {         return str[2];     }      if (str.length === 4) {         return str[3];     }      if (str.length === 5) {         return str[4];     }      if (str.length === 6) {         return str[5];     }      if (str.length === 7) {         return str[6];     }      if (str.length === 8) {         return str[7];     }      if (str.length === 9) {         return str[8];     }      if (str.length === 10) {         return str[9];     }      if (str.length === 11) {         return str[10];     }      if (str.length === 12) {         return str[11];     }      if (str.length === 13) {         return str[12];     }      if (str.length === 14) {         return str[13];     }      if (str.length === 15) {         return str[14];     }      if (str.length === 16) {         return str[15];     }      if (str.length === 17) {         return str[16];     }      if (str.length === 18) {         return str[17];     }      if (str.length === 19) {         return str[18];     }      if (str.length === 20) {         return str[19];     }      if (str.length === 21) {         return str[20];     }      if (str.length === 22) {         return str[21];     }      if (str.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("TestApp1")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("TestApp1")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.toJavaScript = function(context, tableid, defcols) { 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.toJavaScript = function(context, tableid, defcols) { 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.toJavaScript = function(context, tableid, defcols) { 		return this.toJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, tableid, defcols) { 		return this.fromJavaScript(context, tableid, defcols); 	};  	yy.Search.prototype.fromJavaScript = function(context, table
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Text;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to get the next set of results.         /// </param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to get the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                
  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx', ' xxx   '.trim());  });  it(`trim`, function*() {   assert.strictEqual('xxx
    html += "<h3>" + o.name + "</h3>";     for (j=0; o=objs[j]; j++) {     if (o.group) {         html += "<h3>" + o.name + "</h3>";         for (k=0; o=objs[k]; k++) {     if (o.group) {             html += "<h3>" + o.name + "</h3>";             for (l=0; o=objs[l]; l++) {     if (o.group) {                 html += "<h3>" + o.name + "</h3>";                 for (m=0; o=objs[m]; m++) {     if (o.group) {                     html += "<h3>" + o.name + "</h3>";                     for (p=0; o=objs[p]; p++) {     if (o.group) {                         html += "<h3>" + o.name + "</h3>";                         for (q=0; o=objs[q]; q++) {     if (o.group) {                             html += "<h3>" + o.name + "</h3>";                             for (r=0; o=objs[r]; r++) {     if (o.group) {                                 html += "<h3>" + o.name + "</h3>";                                 for (s=0; o=objs[s]; s++) {     if (o.group) {                                     html += "<h3>" + o.name + "</h3>";                                     for (t=0; o=objs[t]; t++) {     if (o.group) {                                         html += "<h3>" + o.name + "</h3>";                                         for (u=0; o=objs[u]; u++) {     if (o.group) {                                             html += "<h3>" + o.name + "</h3>";                                             for (v=0; o=objs[v]; v++) {     if (o.group) {                                                 html += "<h3>" + o.name + "</h3>";                                                 for (w=0; o=objs[w
 if (typeof define === 'function' && define.amd) {     // AMD. Register as an anonymous module.     define(['jquery'], function($) {         return $;     }); } else if (typeof module === 'object' && module.exports) {     // Node. Does not work with strict CommonJS, but     // only CommonJS-like environments that support module.exports,     // like Node.     module.exports = function(root, factory) {         if (typeof exports === 'object' && typeof module !== 'undefined') {             // Node. Does not work with strict CommonJS, but             // only CommonJS-like environments that support module.exports,             // like Node.             module.exports = factory(require('jquery'), require('bkwld-tram-js'));         } else {             // Browser globals (root is window)             root.bkwldTram = factory(root.jQuery);         }     }; } else {     // Browser globals (root is window)     root.bkwldTram = factory(root.jQuery); }  if (typeof define === 'function' && define.amd) {     // AMD. Register as an anonymous module.     define(['jquery'], function($) {         return $;     }); } else if (typeof module === 'object' && module.exports) {     // Node. Does not work with strict CommonJS, but     // only CommonJS-like environments that support module.exports,     // like Node.     module.exports = function(root, factory) {         if (typeof exports === 'object' && typeof module !== 'undefined') {             // Node. Does not work with strict CommonJS, but             // only CommonJS-like environments that support module.exports,             // like Node.             module.exports = factory(root.jQuery);         } else {             // Browser globals (root is window)             root.bkwldTram = factory(root.jQuery);         }     }; } else {     // Browser globals (root is window)     root.bkwldTram = factory(root.jQuery); } 
     }     if (directives) {       for (var i = 0; i < directives.length; i++) {         var directive = directives[i];         if (directive) {           if (directives.indexOf(directive) === -1) {             lines.push(directive);           }         }       }     }     return lines;   };    var expandInlineDirectives = function expandInlineDirectives(directives, lines) {     if (directives) {       for (var i = 0; i < directives.length; i++) {         var directive = directives[i];         if (directive) {           if (directives.indexOf(directive) === -1) {             lines.push(directive);           }         }       }     }     return lines;   };    var expandInlineDirectives = function expandInlineDirectives(directives, lines) {     if (directives) {       for (var i = 0; i < directives.length; i++) {         var directive = directives[i];         if (directive) {           if (directives.indexOf(directive) === -1) {             lines.push(directive);           }         }       }     }     return lines;   };    var expandInlineDirectives = function expandInlineDirectives(directives, lines) {     if (directives) {       for (var i = 0; i < directives.length; i++) {         var directive = directives[i];         if (directive) {           if (directives.indexOf(directive) === -1) {             lines.push(directive);           }         }       }     }     return lines;   };    var expandInlineDirectives = function expandInlineDirectives(directives, lines) {     if (directives) {       for (var i = 0; i < directives.length; i++) {         var directive = directives[i];         if (directive) {           if (directives.indexOf(directive) === -1) {             lines.push(directive);           }         }       }     }     return lines;   };    var expandInlineDirectives = function expand
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }      /**      * {@inheritdoc}      */     public function configureOptions(OptionsResolver $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType',         ));     }      /**      * {@inheritdoc}      */     public function getBlockPrefix()     {         return 'symfony_form_type_text';     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'symfony_form_type_text';     } } 
(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         || closeConditional(e.target)         ||
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.VmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ign
  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points =  numeric.identity(dim);     points = 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component\DependencyInjection\Exception\LogicException; use Symfony\Component
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/prefs/pref_service.h" #include "base/strings/string16.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/views/browser_view.h" #include "chrome/browser/ui/views/tabs/tab_strip_model.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_view.h" #include "content/public/browser/web_contents_view_delegate.h" #include "content/public/browser/web_contents_
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')             ->add('price')         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.CacheAtomicityMode; import org.apache.ignite.internal.processors.cache.CacheMode; import org.apache.ignite.internal.processors.cache.CacheWriteSynchronizationMode; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.internal.util.typedef.internal.U; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache.distributed.dht;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.cache.CacheAtomicityMode; import org.apache.ignite.cache.CacheMode; import org.apache.ignite.cache.CacheWriteSynchronizationMode; import org.apache.ignite.configuration.CacheConfiguration; import org.apache.ignite.configuration.IgniteConfiguration; import org.apache.ignite.internal.IgniteEx; import org.apache.ignite.internal.processors.cache.GridCacheAbstractTest; import org.apache.ignite.internal.processors.cache.GridCacheSharedContext; import org.apache.ignite.internal.util.typedef.F; import org.apache.ignite.internal.util.typedef.internal.S; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      /**      * Constructs a new Zend_Gdata_Gdata_Feed object.      *      * @param DOMElement $element (optional) DOMElement from which this      *          object should be constructed.      */     public function __construct($element = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($element);     }      /**      * Retrieves a DOMElement which corresponds to this element and all      * child properties.  This is used to build an entry back
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.IO; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.ComponentModel.DataAnnotations.Properties; using System.ComponentModel.DataAnnotations.Schema.SchemaVersion; using System.Data; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Linq.Expressions; using System.Linq.Expressions.Linq; using System.Reflection; using System.Reflection.Metadata; using System.Runtime.Serialization; using System.Runtime.Serialization.Formatters.Binary; using System.Runtime.Serialization.Formatters.Xml; using System.Text; using System.Text.RegularExpressions; using System.Xml; using System.Xml.Linq; using System.Xml.Serialization; using System.Xml.Serialization.Formatters.XmlSerializer; using System.Xml.Serialization.Formatters.XmlSerializer.Settings; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Formatting; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Schema; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.Properties; using System.Xml.Serialization.Formatters.XmlSerializer.SerializationInfo.SchemaVersion; using
 module.exports = {   resolve: resolve,   dirname: dirname,   read: read,   write: write,   exists: exists,   isAbs: isAbs,   JSONChain: JSONChain } 
    this.emoticons[i].text = text;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;     this.emoticons[i].resourcesDir = resourcesDir;    
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Compute.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using Newtonsoft.Json.Converters;     using System.Runtime;     using System.Runtime.Serialization;     using System.ComponentModel;     using System.ComponentModel.DataAnnotations;     using Microsoft.Rest.Serialization;     using Microsoft.Rest.Azure;     using Models;     using Newtonsoft.Json;     using System.Linq;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using Newtonsoft.Json.Converters;     using System.Runtime.Serialization;     using System.ComponentModel.DataAnnotations;     using Newtonsoft.Json.Converters;     using System.Runtime.Serialization;     using System.ComponentModel.DataAnnotations;     using Newtonsoft.Json.Converters;     using System.Runtime.Serialization;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel.DataAnnotations;     using System.ComponentModel
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\ParameterReference; use Symfony\Component\DependencyInjection\Reference\ParameterReferenceInterface; use Symfony\Component\DependencyInjection\Reference\Reference; use Symfony\Component\DependencyInjection\Reference\ReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ParameterBagReference; use Symfony\Component\DependencyInjection\Reference\ParameterBagReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReference; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\ServiceReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReference; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\VariableReferenceInterface; use Symfony\Component\DependencyInjection\Reference\
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializerProvider; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharpSharp")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharpSharp")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e9e9e9e9")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typ
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Threading;     using System.Threading.Tasks;     using Microsoft.Rest.Azure;     using Microsoft.Rest.Azure.OData;     using Models;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Collections.ObjectModel;     using System.Linq;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Net.Http.Headers.Authorization;     using System.Net.Http.Headers.Content;     using System.Net.Http.Headers.Accept;     using System.Net.Http.Headers.Content-Type;     using System.Net.Http.Headers.Accept-Encoding;     using System.Net.Http.Headers.Content-Length;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Disposition;     using System.Net.Http.Headers.Content-Type;     using System.Net.Http.Headers.
     var el = node.el;      if (typeof name === 'string') {         el.setAttribute(name, val);     } else {         el.setAttribute(name, val);     }      if (typeof asProp === 'string') {         el.setAttribute(asProp, val);     } else {         el.setAttribute(asProp, val);     }      if (typeof initial === 'string') {         el.setAttribute(initial, val);     } else {         el.setAttribute(initial, val);     }      if (typeof asProp === 'string') {         el.setAttribute(asProp, val);     } else {         el.setAttribute(asProp, val);     }      if (typeof initial === 'string') {         el.setAttribute(initial, val);     } else {         el.setAttribute(initial, val);     }      if (typeof asProp === 'string') {         el.setAttribute(asProp, val);     } else {         el.setAttribute(asProp, val);     }      if (typeof initial === 'string') {         el.setAttribute(initial, val);     } else {         el.setAttribute(initial, val);     }      if (typeof asProp === 'string') {         el.setAttribute(asProp, val);     } else {         el.setAttribute(asProp, val);     }      if (typeof initial === 'string') {         el.setAttribute(initial, val);     } else {         el.setAttribute(initial, val);     }      if (typeof asProp === 'string') {         el.setAttribute(asProp, val);     } else {         el.setAttribute(asProp, val);     }      if (typeof initial === 'string') {         el.setAttribute(initial, val);     } else {         el.setAttribute(initial, val);     }      if (typeof asProp === 'string') {         el.setAttribute(asProp, val);
         var oLabel = document.createElement("label");         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.setAttribute("for", x);         oLabel.
 (function() {     'use strict';      angular         .module('app')         .config(config);      config.$inject = ['$stateProvider'];      function config($stateProvider) {         $stateProvider             .state('home', {                 url: '/home',                 templateUrl: 'app/home/home.html',                 controller: 'HomeCtrl'             })             .state('about', {                 url: '/about',                 templateUrl: 'app/about/about.html',                 controller: 'AboutCtrl'             })             .state('contact', {                 url: '/contact',                 templateUrl: 'app/contact/contact.html',                 controller: 'ContactCtrl'             })         ;     } })();  (function() {     'use strict';      angular         .module('app')         .config(config);      config.$inject = ['$stateProvider'];      function config($stateProvider) {         $stateProvider             .state('home', {                 url: '/home',                 templateUrl: 'app/home/home.html',                 controller: 'HomeCtrl'             })             .state('about', {                 url: '/about',                 templateUrl: 'app/about/about.html',                 controller: 'AboutCtrl'             })             .state('contact', {                 url: '/contact',                 templateUrl: 'app/contact/contact.html',                 controller: 'ContactCtrl'             })         ;     } })();  (function() {     'use strict';      angular         .module('app')         .config(config);      config.$inject = ['$stateProvider'];      function config($stateProvider) {         $stateProvider             .state('home', {                 url: '/home',                 templateUrl: 'app/home/home.html',                 controller: 'HomeCtrl'             })             .state('about', {                 url: '/about',                 templateUrl: 'app/about/about.html',                 controller:
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\OptionsResolver\OptionsResolver;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text', array(                 'label' => 'Symfony\Component\Form\Extension\Core\Type\TextType::label',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'Symfony\Component\Form\Extension\Core\Type\TextType';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.pulsar.client.impl;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.when;  import java.util.ArrayList; import java.util.List;  import org.apache.pulsar.client.api.PulsarClient; import org.apache.pulsar.client.api.PulsarClientException; import org.apache.pulsar.client.api.PulsarClientExceptionFactory; import org.apache.pulsar.client.api.PulsarClientExceptionFactoryFactory; import org.apache.pulsar.client.api.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertSame; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.*; import org.apache.ignite.cache.*; import org.apache.ignite.configuration.*; import org.apache.ignite.internal.*; import org.apache.ignite.internal.processors.cache.distributed.*; import org.apache.ignite.internal.processors.cache.distributed.dht.*; import org.apache.ignite.internal.util.*; import org.apache.ignite.internal.util.typedef.*; import org.apache.ignite.lang.*; import org.apache.ignite.spi.discovery.tcp.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.*; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.*; import org.apache.ignite.testframework.*; import org.apache.ignite.testframework.junits.common.*;  import java.util.*;  import static org.apache.ignite.cache.CacheAtomicityMode.*; import static org.apache.ignite.cache.CacheMode.*; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.*; import static org.apache.ignite.cache.CacheWriteSynchronizationMode
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/time/time.h" #include "chrome/browser/chromeos/login/login_manager_delegate.h" #include "chrome/browser/chromeos/login/user_manager.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/render_process_host.h" #include "content/public/browser/render_view_host.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "grit/generated_resources.h" #include "grit/theme_resources.h" #include "ui/base/l10n/l10n_util.h" #include "ui/base/resource/resource
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Bundle\FrameworkBundle\DependencyInjection;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\Config\FileLocator; use Symfony\Component\HttpKernel\DependencyInjection\Extension; use Symfony\Component\DependencyInjection\Loader;  /**  * This is the class that loads and manages your bundle configuration  *  * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}  */ class SymfonyFrameworkExtension extends Extension {     /**      * {@inheritdoc}      */     public function load(array $configs, ContainerBuilder $container)     {         $configuration = new Configuration();         $config = $this->processConfiguration($configuration, $configs);          $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));         $loader->load('services.yml');     } } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Compute {     using Microsoft.Rest;     using Microsoft.Rest.Azure;     using Models;     using System.Collections;     using System.Collections.Generic;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// VirtualMachineScaleSetOperations operations.     /// </summary>     public partial interface IVirtualMachineScaleSetOperations     {         /// <summary>         /// Gets all virtual machine scale sets.         /// </summary>         /// <param name='customHeaders'>         /// The headers that will be added to request.         /// </param>         /// <param name='cancellationToken'>         /// The cancellation token.         /// </param>         /// <exception cref="CloudException">         /// Thrown when the operation returned an invalid status code         /// </exception>         /// <exception cref="SerializationException">         /// Thrown when unable to deserialize the response         /// </exception>         /// <exception cref="ValidationException">         /// Thrown when a required parameter is null         /// </exception>         Task<AzureOperationResponse<IPage<VirtualMachineScaleSet>>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));         /// <summary>         /// Gets all virtual machine scale sets.         /// </summary>         /// <param name='customHeaders'>         /// The headers that will be added to request.         /// </param>         /// <param name='cancellationToken'>         /// The cancellation token.         /// </param>         /// <exception cref="CloudException">         /// Thrown when the operation returned an invalid status code         /// </exception>         /// <exception cref="SerializationException">         /// Thrown when unable to deserialize the response 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.dataflow.value.ISerializerDeserializer; import org.apache.hyracks.api.dataflow.value.ISerializerSerializer; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data
    return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize() {     return stationB.biggestChunk - stationA.biggestChunk; }  function getChunkSize()

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.

﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shell; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Ink; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Data.SqlClient; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media.Imaging; using System.Windows.Shapes.Primitives; using System.Windows.Data; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System.Windows.Shapes.Primitives; using System
 this.loadQueue.push($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.onloaded($.proxy(function() {       this.callback(this.getData()); this.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.beam.sdk.coders.Coder; import org.apache.beam.sdk.coders.CoderException; import org.apache.beam.sdk.coders.StringUtf8Coder; import org.apache.beam.sdk.options.PipelineOptions; import org.apache.beam.sdk.options.PipelineOptionsFactory; import org.apache.beam.sdk.testing.PipelineTestUtils; import org.apache.beam.sdk.testing.TestPipeline; import org.apache.beam.sdk.testing
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.pulsar.client.api;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when;  import java.util.HashMap; import java.util.Map;  import org.apache.pulsar.client.api.exceptions.PulsarClientException; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.apache.pulsar.client.api.exceptions.PulsarClientExceptionFactoryFactoryFactory; import org.
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("School")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("School")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
 }) Transaction.prototype.set = promisify(function (key, value, cb) {   var self = this    if (key == null) throw new Error('A key must be given as an argument')    if (value == null) throw new Error('A value must be given as an argument')    if (cb == null) throw new Error('A callback must be given as an argument')    self.get(key, cb) }) Transaction.prototype.put = promisify(function (key, value, cb) {   var self = this    if (key == null) throw new Error('A key must be given as an argument')    if (value == null) throw new Error('A value must be given as an argument')    if (cb == null) throw new Error('A callback must be given as an argument')    self.put(key, value, cb) }) Transaction.prototype.delete = promisify(function (key, cb) {   var self = this    if (key == null) throw new Error('A key must be given as an argument')    if (cb == null) throw new Error('A callback must be given as an argument')    self.delete(key, cb) }) Transaction.prototype.deleteAll = promisify(function (cb) {   var self = this    if (cb == null) throw new Error('A callback must be given as an argument')    self.deleteAll(cb) }) Transaction.prototype.getAll = promisify(function (cb) {   var self = this    if (cb == null) throw new Error('A callback must be given as an argument')    self.getAll(cb) }) Transaction.prototype.putAll = promisify(function (cb) {   var self = this    if (cb == null) throw new Error('A callback must be given as an argument')    self.putAll(cb) }) Transaction.prototype.remove = promisify(function (key, cb) {   var self = this    if (key == null) throw new Error('A key must be given as an argument')    if (cb == null) throw new Error('A callback must be given as an argument')    self.remove(key, cb)
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Test")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("Test")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.jackrabbit.oak.plugins.index;  import org.apache.jackrabbit.oak.spi.state.NodeState; import org.apache.jackrabbit.oak.spi.state.NodeStateListener; import org.apache.jackrabbit.oak.spi.state.NodeStateResolver; import org.apache.jackrabbit.oak.spi.state.NodeStateResolverFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateType; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeResolver; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeResolverFactory; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeResolverFactoryImpl; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeResolverFactoryImpl; import org.apache.jackrabbit.oak.spi.state.NodeStateTypeResolverFactoryImpl; import org.apache.jackrabbit.oak.spi.state.PropertyState; import org.apache.jackrab
 var vec3 = vec3.prototype; vec3.constructor = vec3; vec3.prototype = Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object.create(Object
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 if (typeof define === 'function' && define.amd) {     // AMD. Register as an anonymous module.     define(function () {         return _This.$EventSrc;     }); } else {     // Browser globals     _This.$EventSrc = _This.$EventSrc || function (event) {         if (typeof event === 'string') {             event = event.toLowerCase();         }         if (typeof event === 'number') {             event = event.toUpperCase();         }         if (typeof event === 'boolean') {             event = event.toLowerCase();         }         if (typeof event === 'string') {             event = event.toLowerCase();         }         if (typeof event === 'number') {             event = event.toUpperCase();         }         if (typeof event === 'boolean') {             event = event.toLowerCase();         }         if (typeof event === 'string') {             event = event.toLowerCase();         }         if (typeof event === 'number') {             event = event.toUpperCase();         }         if (typeof event === 'boolean') {             event = event.toLowerCase();         }         if (typeof event === 'string') {             event = event.toLowerCase();         }         if (typeof event === 'number') {             event = event.toUpperCase();         }         if (typeof event === 'boolean') {             event = event.toLowerCase();         }         if (typeof event === 'string') {             event = event.toLowerCase();         }         if (typeof event === 'number') {             event = event.toUpperCase();         }         if (typeof event === 'boolean') {             event = event.toLowerCase();         }         if (typeof event === 'string') {             event = event.toLowerCase();         }         if (typeof event === 'number') {             event = event.toUpperCase();         }         if (typeof event === 'boolean') {             event = event.toLowerCase();         }         if (typeof event === 'string') {             event = event.toLowerCase();        
db') var _ = require('underscore')  module.exports = function(options) {   var self = this    if (!options) {     options = {}   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.when) {     options.when = when   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {     options.rethinkdb = r   }    if (!options.mongoose) {     options.mongoose = mongoose   }    if (!options.rethinkdb) {    
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_ #define CHROME_BROWSER_UI_VIEWS_CHROME_BROWSER_VIEW_H_  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/scoped_vector.h" #include "base/memory/weak_ptr.h" #include "base/observer_list.h" #include "base/time/time.h" #include "chrome/browser/ui/views/chrome_browser_view.h" #include "chrome/browser/ui/views/chrome_browser_view_delegate.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_service_observer.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_contents_user_data.h" #include "content/public/browser/web_contents_user_data_manager.h" #include "content/public/browser/web_contents_user_data_storage.h" #include "content/public/browser/web_contents_user_

}
  module.exports = {   parse: true,   parse: function (response) {     if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {       response = JSON.parse(response);     }      if (typeof response === 'string') {       response = JSON.parse(response);     }      if (typeof response === 'object') {      
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
if (wantedStates.length === 0) {             return q(null);         } if (wantedStates.length === 1) {             return q(null);         } if (wantedStates.length === 2) {             return q(null);         } if (wantedStates.length === 3) {             return q(null);         } if (wantedStates.length === 4) {             return q(null);         } if (wantedStates.length === 5) {             return q(null);         } if (wantedStates.length === 6) {             return q(null);         } if (wantedStates.length === 7) {             return q(null);         } if (wantedStates.length === 8) {             return q(null);         } if (wantedStates.length === 9) {             return q(null);         } if (wantedStates.length === 10) {             return q(null);         } if (wantedStates.length === 11) {             return q(null);         } if (wantedStates.length === 12) {             return q(null);         } if (wantedStates.length === 13) {             return q(null);         } if (wantedStates.length === 14) {             return q(null);         } if (wantedStates.length === 15) {             return q(null);         } if (wantedStates.length === 16) {             return q(null);         } if (wantedStates.length === 17) {             return q(null);         } if (wantedStates.length === 18) {             return q(null);         } if (wantedStates.length === 19) {             return q(null);         } if (wantedStates.length === 20) {             return q(null);         } if (wantedStates.length === 21) {             return q(null);         } if (wantedStates.length === 22) {             return q(null);         } if (wantedStates.length === 23) {             return q(null);         } if (wantedStates.length === 24) {             return q(null);         } if (wantedStates.length === 25) {             return q(null);         } if (wantedStates.length === 26) {             return q(null);        
/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.hadoop.hbase.regionserver;  import java.io.IOException; import java.util.ArrayList; import java.util.List;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import org.apache.hadoop.hbase.HBaseClassTestRule; import org.apache.hadoop.hbase.HBaseTestingUtility; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.client.Admin; import org.apache.hadoop.hbase.client.Result; import org.apache.hadoop.hbase.client.ResultScanner; import org.apache.hadoop.hbase.client.ResultScannerFactory; import org.apache.hadoop.hbase.client.Scan; import org.apache.hadoop.hbase.client.Table; import org.apache.hadoop.hbase.client.TableDescriptor; import org.apache.hadoop.hbase.client.TableDescriptorBuilder; import org.apache.hadoop.hbase.client.TableDescriptorFactory;
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent.TimeoutException.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.price',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.hadoop.hbase.util;  import java.io.IOException; import java.util.ArrayList; import java.util.HashMap; import java.util.HashSet; import java.util.Iterator; import java.util.List; import java.util.Map; import java.util.Set;  import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseClassTestRule; import org.apache.hadoop.hbase.HConstants; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.TableName; import org.apache.hadoop.hbase.client.Admin; import org.apache.hadoop.hbase.client.Connection; import org.apache.hadoop.hbase.client.Scan; import org.apache.hadoop.hbase.client.Result; import org.apache.hadoop.hbase.client.ResultScanner; import org.apache.hadoop.hbase.client.ResultScannerFactory; import org.apache.hadoop.hbase.client.Scanner; import org.apache.hadoop
 /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */  /**  * @module ember-jsonapi-resources  * @submodule ember-jsonapi-resources/models/resource  */
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
  val = styleObj[arrayOfStyles[i]];   if(val){     css[css.length] = val;   }   return css; }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":           debugger       case "first": case "only":          
;  var _ = require('lodash');  module.exports = {   init: function() {     this.init();   },    init: function() {     this.patternsStarted = true;   },    stop: function() {     this.patternsStarted = false;   },    start: function() {     this.patternsStarted = true;   },    stop: function() {     this.patternsStarted = false;   } };  module.exports.regexStr = regexStr; module.exports.regexStrEnd = regexStrEnd; module.exports.start = function() {   this.patternsStarted = true; }; module.exports.stop = function() {   this.patternsStarted = false; }; module.exports.startAll = function() {   this.patternsStarted = true; }; module.exports.stopAll = function() {   this.patternsStarted = false; }; module.exports.add = function() {   this.patternsStarted = true; }; module.exports.remove = function() {   this.patternsStarted = true; }; module.exports.addAll = function() {   this.patternsStarted = true; }; module.exports.removeAll = function() {   this.patternsStarted = true; }; module.exports.addAllAll = function() {   this.patternsStarted = true; }; module.exports.addAllAllAll = function() {   this.patternsStarted = true; }; module.exports.addAllAllAll = function() {   this.patternsStarted = true; }; module.exports.addAllAllAll = function() {   this.patternsStarted = true; }; module.exports.addAllAllAll = function() {   this.patternsStarted = true; }; module.exports.addAllAllAll = function() {   this.patternsStarted = true; }; module.exports.addAllAllAll = function() {   this.patternsStarted = true; }; module.exports.addAllAllAll = function() {   this.patternsStarted = true; }; module.exports.add
		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "playlists" 		}); 	}  	renderPlaylists() { 		this.setState({ 			currentRoute: "play
.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRulesetList.prototype.visitRulesetList = Compiler.prototype.visitRuleset
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'required' => false,                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 var _regex2 = /^(\s*\*\s*).*$/;           var editor2 = atom.workspace.getActiveTextEditor();           var cursor_position2 = editor2.getCursorBufferPosition(); var _regex3 = /^(\s*\*\s*).*$/;           var editor3 = atom.workspace.getActiveTextEditor();           var cursor_position3 = editor3.getCursorBufferPosition(); var _regex4 = /^(\s*\*\s*).*$/;           var editor4 = atom.workspace.getActiveTextEditor();           var cursor_position4 = editor4.getCursorBufferPosition(); var _regex5 = /^(\s*\*\s*).*$/;           var editor5 = atom.workspace.getActiveTextEditor();           var cursor_position5 = editor5.getCursorBufferPosition(); var _regex6 = /^(\s*\*\s*).*$/;           var editor6 = atom.workspace.getActiveTextEditor();           var cursor_position6 = editor6.getCursorBufferPosition(); var _regex7 = /^(\s*\*\s*).*$/;           var editor7 = atom.workspace.getActiveTextEditor();           var cursor_position7 = editor7.getCursorBufferPosition(); var _regex8 = /^(\s*\*\s*).*$/;           var editor8 = atom.workspace.getActiveTextEditor();           var cursor_position8 = editor8.getCursorBufferPosition(); var _regex9 = /^(\s*\*\s*).*$/;           var editor9 = atom.workspace.getActiveTextEditor();           var cursor_position9 = editor9.getCursorBufferPosition(); var _regex10 = /^(\s*\*\s*).*$/;           var editor10 = atom.workspace.getActiveTextEditor();           var cursor_position10 = editor10.getCursorBufferPosition(); var _regex11 = /^(\s*\*\s*).*$/;           var editor11 = atom.workspace.getActiveTextEditor();           var cursor_position11 = editor11.getCursorBufferPosition(); var _regex12 = /^(\s*\*\s*).*$/;           var editor12 = atom.workspace.getActiveTextEditor();           var cursor_position12 = editor12.getCursorBufferPosition(); var _regex13
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
(function(){    xxx     var x = 0;     var y = 0;     var x1 = 0;     var y1 = 0;     var x2 = 0;     var y2 = 0;     var x3 = 0;     var y3 = 0;     var x4 = 0;     var y4 = 0;     var x5 = 0;     var y5 = 0;     var x6 = 0;     var y6 = 0;     var x7 = 0;     var y7 = 0;     var x8 = 0;     var y8 = 0;     var x9 = 0;     var y9 = 0;     var x10 = 0;     var y10 = 0;     var x11 = 0;     var y11 = 0;     var x12 = 0;     var y12 = 0;     var x13 = 0;     var y13 = 0;     var x14 = 0;     var y14 = 0;     var x15 = 0;     var y15 = 0;     var x16 = 0;     var y16 = 0;     var x17 = 0;     var y17 = 0;     var x18 = 0;     var y18 = 0;     var x19 = 0;     var y19 = 0;     var x20 = 0;     var y20 = 0;     var x21 = 0;     var y21 = 0;     var x22 = 0;     var y22 = 0;     var x23 = 0;     var y23 = 0;     var x24 = 0;     var y24 = 0;     var x25 = 0;     var y25 = 0;     var x26 = 0;     var y26 = 0;     var x27 = 0;     var y27 = 0;     var x28 = 0;     var y28 = 0;     var x29 = 0;     var y29 = 0;     var x30 = 0;     var y30 = 0;     var x31 = 0;    
     const area = document.createElement( 'div' );             if( area.hidden ) {         area.hidden = true;         node.appendChild( area );     }     else {         area.hidden = false;         node.appendChild( area );     }      return node; };  const area = document.createElement( 'div' );             if( area.hidden ) {     area.hidden = true;     node.appendChild( area ); } else {     area.hidden = false;     node.appendChild( area ); }  const area = document.createElement( 'div' );             if( area.hidden ) {     area.hidden = true;     node.appendChild( area ); } else {     area.hidden = false;     node.appendChild( area ); }  const area = document.createElement( 'div' );             if( area.hidden ) {     area.hidden = true;     node.appendChild( area ); } else {     area.hidden = false;     node.appendChild( area ); }  const area = document.createElement( 'div' );             if( area.hidden ) {     area.hidden = true;     node.appendChild( area ); } else {     area.hidden = false;     node.appendChild( area ); }  const area = document.createElement( 'div' );             if( area.hidden ) {     area.hidden = true;     node.appendChild( area ); } else {     area.hidden = false;     node.appendChild( area ); }  const area = document.createElement( 'div' );             if( area.hidden ) {     area.hidden = true;     node.appendChild( area ); } else {     area.hidden = false;     node.appendChild( area ); }  const area = document.createElement( 'div' );             if( area.hidden ) {     area.hidden = true;     node.appendChild( area ); } else {     area.hidden = false;     node.appendChild(
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static com.google.common.base.Preconditions.checkArgument; import static com.google.common.base.Preconditions.checkNotNull; import static com.google.common.base.Preconditions.checkState; import static com.google.common.base.Strings.isNullOrEmpty; import static java.util.Objects.requireNonNull;  import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'required' => false,             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'required' => false,             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
 getComponentDefinition(uri, [ graphUri ]).then((res) => {         console.log(res)         componentDefinition = res.object }).catch((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition = res.object }).then((res) => {         console.log(res)         componentDefinition
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'text', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
    it('element has a thumbnail', function() {         expect(element.hasThumbnail()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#hasImage', function() {     it('element has a image', function() {         expect(element.hasImage()).toBeTruthy();     }); });  describe('#has
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the         /// ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the         /// ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to get the next set of results.</param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to get the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("01.Fibonacci")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.Fibonacci")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyInformationalVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("01.Fibonacci")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this
 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = 'height'; 	shindig.container.ContainerRender.HEIGHT = '
 }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; }  debugger; 
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class TextType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('text', 'text')         ;     }      /**      * {@inheritdoc}      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\TextType'         ));     }      /**      * {@inheritdoc}      */     public function getName()     {         return 'form_text';     } } 
 changed  = require('gulp-changed')   , less      = require('gulp-less')   , rename   = require('gulp-rename')   , uglify   = require('gulp-uglify')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require('gulp-rename')   , rename  = require
 define(['imp/renderModule/nodeShape'], function(nodeShape) {      var NodeShape = nodeShape.NodeShape;      /**      * @class NodeShape      * @extends {NodeShape}      */     function NodeShape() {         NodeShape.apply(this, arguments);     }      NodeShape.prototype = Object.create(NodeShape.prototype);     NodeShape.prototype.constructor = NodeShape;      /**      * @class NodeShapeRelative      * @extends {NodeShape}      */     function NodeShapeRelative() {         NodeShape.apply(this, arguments);     }      NodeShapeRelative.prototype = Object.create(NodeShapeRelative.prototype);     NodeShapeRelative.prototype.constructor = NodeShapeRelative;      /**      * @class NodeShape      * @extends {NodeShapeRelative}      */     function NodeShape() {         NodeShape.apply(this, arguments);     }      NodeShapeRelative.prototype.render = function(context) {         context.beginPath();         context.moveTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.lineTo(this.x, this.y);         context.
     if (unassignObj.resources.length > 0) {         collection = 'service_templates \/' + id + '\/ tags \/' + unassignObj.resources.join(',');     }      $.ajax({         url: collection,         type: 'POST',         dataType: 'json',         success: function(data) {             if (data.status == 'success') {                 $('#service_templates').html(data.html);             }         },         error: function(xhr, textStatus, errorThrown) {             $('#service_templates').html(xhr.responseText);         }     }); }  function getTagsToAddRemove(tagName, tags, origTags) {     var tagsToAddRemove = [];     for (var i = 0; i < tags.length; i++) {         if (tags[i].name == tagName) {             tagsToAddRemove.push(tags[i]);             break;         }     }     return tagsToAddRemove; }  function getTagsToAddAdd(tagName, tags, origTags) {     var tagsToAddAdd = [];     for (var i = 0; i < tags.length; i++) {         if (tags[i].name == tagName) {             tagsToAddAdd.push(tags[i]);             break;         }     }     return tagsToAddAdd; }  function getTagsToAddRemove(tagName, tags, origTags) {     var tagsToAddRemove = [];     for (var i = 0; i < tags.length; i++) {         if (tags[i].name == tagName) {             tagsToAddRemove.push(tags[i]);             break;         }     }     return tagsToAddRemove; }  function getTagsToAddAddRemove(tagName, tags, origTags) {     var tagsToAddAddRemove = [];     for (var i = 0; i < tags.length; i++) {         if (tags[i].name == tagName) {             tagsToAddAddRemove.push(tags[i]);             break;         }     }     return tagsToAddAddRemove; }  
return E48;         break;         case 48 : return E48;         break;         case 49 : return E48;         break;         case 50 : return E48;         break;         case 51 : return E48;         break;         case 52 : return E48;         break;         case 53 : return E48;         break;         case 54 : return E48;         break;         case 55 : return E48;         break;         case 56 : return E48;         break;         case 57 : return E48;         break;         case 58 : return E48;         break;         case 59 : return E48;         break;         case 60 : return E48;         break;         case 61 : return E48;         break;         case 62 : return E48;         break;         case 63 : return E48;         break;         case 64 : return E48;         break;         case 65 : return E48;         break;         case 66 : return E48;         break;         case 67 : return E48;         break;         case 68 : return E48;         break;         case 69 : return E48;         break;         case 70 : return E48;         break;         case 71 : return E48;         break;         case 72 : return E48;         break;         case 73 : return E48;         break;         case 74 : return E48;         break;         case 75 : return E48;         break;         case 76 : return E48;         break;         case 77 : return E48;         break;         case 78 : return E48;         break;         case 79 : return E48;         break;         case 80 : return E48;         break;         case 81 : return E48;         break;         case 82 : return E48;         break;         case 83 : return E48;         break;         case 84 : return E48;         break;         case 85 : return E48;         break;         case 86 : return E48;         break;         case 87 : return E48;         break;         case 88 : return E48;         break;         case 89 : return E48;         break
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Definition; use Symfony\Component\DependencyInjection\Reference; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Parameter; use Symfony\Component\DependencyInjection\ParameterBag; use Symfony\Component\DependencyInjection\ReferenceResolver; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface; use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterfaceFactory; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverInterface; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverFactory; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolverFactory; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolverFactory; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolverFactory; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolverFactory; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\DependencyInjection\ReferenceResolver\ParameterResolverResolver; use Symfony\Component\Dependency
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.StringUtils; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.guava.Sequence; import org.apache.druid.java.util
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to get the next set of results.         /// </param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to get the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "NextLink");             }         }     } } 
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;      /// <summary>     /// Defines headers for ListVpnGateways operation.     /// </summary>     public partial class ListVpnGatewaysHeaders     {         /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         public ListVpnGatewaysHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the ListVpnGatewaysHeaders class.         /// </summary>         /// <param name="nextLink">The URL to get the next set of results.</param>         public ListVpnGatewaysHeaders(string nextPageLink)         {             NextLink = nextPageLink;             CustomInit();         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets the URL to get the next set of results.         /// </summary>         [JsonProperty(PropertyName = "nextLink")]         public string NextLink { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {             if (NextLink == null)             {                 throw new ValidationException(ValidationRules.CannotBeNull, "NextLink");             }         }     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactoryProvider; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.con
(function () {   var $ = require('jquery');   var _ = require('underscore');   var Backbone = require('backbone');   var BackboneView = require('backbone-view');   var BackboneModel = require('backbone-model');   var BackboneCollection = require('backbone-collection');   var BackboneView = require('backbone-view');   var BackboneModel = require('backbone-model');   var BackboneCollection = require('backbone-collection');   var BackboneView = require('backbone-view');   var BackboneCollection = require('backbone-collection');   var BackboneCollectionView = require('backbone-collection-view');   var BackboneCollectionView = require('backbone-collection-view');   var BackboneView = require('backbone-view');   var BackboneCollectionView = require('backbone-collection-view');   var BackboneCollectionView = require('backbone-collection-view');   var BackboneView = require('backbone-view');   var BackboneCollectionView = require('backbone-collection-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view');   var BackboneView = require('backbone-view
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. //  // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  namespace Microsoft.Azure.Management.Network.Models {     using Microsoft.Rest;     using Microsoft.Rest.Serialization;     using Newtonsoft.Json;     using System.Collections;     using System.Collections.Generic;     using System.Linq;     using System.Net;     using System.Net.Http;     using System.Net.Http.Headers;     using System.Threading;     using System.Threading.Tasks;      /// <summary>     /// Defines headers for DeleteVpnGateway operation.     /// </summary>     public partial class DeleteVpnGatewayHeaders     {         /// <summary>         /// Initializes a new instance of the DeleteVpnGatewayHeaders class.         /// </summary>         public DeleteVpnGatewayHeaders()         {             CustomInit();         }          /// <summary>         /// Initializes a new instance of the DeleteVpnGatewayHeaders class.         /// </summary>         /// <param name="customHeaders">The headers that will be added to request.         /// </param>         public DeleteVpnGatewayHeaders(IDictionary<string, List<string>> customHeaders = null)         {             CustomInit(customHeaders);         }          /// <summary>         /// An initialization method that performs custom operations like setting defaults         /// </summary>         partial void CustomInit();          /// <summary>         /// Gets or sets headers that will be added to request.         /// </summary>         [JsonProperty(PropertyName = "headers")]         public IDictionary<string, List<string>> Headers { get; set; }          /// <summary>         /// Validate the object.         /// </summary>         /// <exception cref="ValidationException">         /// Thrown if validation fails         /// </exception>         public virtual void Validate()         {
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0 // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  'use strict';  const models = require('./index');  /**  * @class  * Initializes a new instance of the UserList class.  * @constructor  * A list of users.  *  * @member {string} [nextLink] The URL to the next page of results.  *  * @member {string} [previousLink] The URL to the previous page of results.  *  * @member {string} [nextPageLink] The URL to the next page of results.  *  * @member {string} [previousPageLink] The URL to the previous page of results.  */ class UserList {   constructor() {     this.nextLink = '';     this.previousLink = '';     this.nextPageLink = '';     this.previousPageLink = '';   }    /**    * Defines the metadata of UserList    *    * @returns {object} metadata of UserList    *    */   mapper() {     return {       required: false,       serializedName: 'UserList',       type: {         name: 'Composite',         className: 'UserList',         modelProperties: {           nextLink: {             required: false,             serializedName: 'nextLink',             type: {               name: 'String'             }           },           previousLink: {             required: false,             serializedName: 'previousLink',             type: {               name: 'String'             }           },           nextPageLink: {             required: false,             serializedName: 'nextPageLink',             type: {               name: 'String'             }           },           previousPageLink: {             required: false,             serializedName: 'previousPageLink',             type: {               name: 'String'             }          
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ // require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
 import { connect } from 'react-redux' import { Link } from 'react-router-dom' import { withRouter } from 'react-router-dom' import { Provider } from 'react-redux' import { ProviderRegistry } from 'react-redux-registry' import { ProviderStore } from 'react-redux-store' import { ProviderState } from 'react-redux-state' import { ProviderActionCreators } from 'react-redux-action-creators' import { ProviderActions } from 'react-redux-actions' import { ProviderActionsRegistry } from 'react-redux-actions-registry' import { ProviderHistory } from 'react-router-history' import { ProviderHistoryRegistry } from 'react-router-history-registry' import { ProviderRouter } from 'react-router-router' import { ProviderRouterRegistry } from 'react-router-router-registry' import { ProviderRouterState } from 'react-router-router-state' import { ProviderRouterActions } from 'react-router-router-actions' import { ProviderRouterActionsRegistry } from 'react-router-router-actions-registry' import { ProviderStateRegistry } from 'react-router-state-registry' import { ProviderStoreRegistry } from 'react-router-store-registry' import { ProviderStoreActions } from 'react-router-store-actions' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store-actions-registry' import { ProviderStoreActionsRegistry } from 'react-router-store
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'required' => false,                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 if (markedPoints[markedPointName].dot == null){ markedPoints[markedPointName].dot = new Object(); markedPoints[markedPointName].dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[markedPointName].dot.dot.dot = new Object(); markedPoints[marked
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product';     } } 
 // Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_SCREEN_H_  #include <string>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/ui/webui/chromeos/login/login_screen_delegate.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_factory.h" #include "chrome/browser/ui/webui/chromeos/login/user_manager_observer.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/notification_registrar_observer_list.h" #include "content/public/browser/notification_service.h" #include "content/public/browser/notification_source.h" #include "content/public/browser/notification_types.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_util.h" #include "content/public/browser/web_ui_view.h" #include "content/public/browser/web
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.product.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
 /*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.asterix.runtime.evaluators.functions;  import java.util.ArrayList; import java.util.List;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReferenceFactory; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'required' => false,             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Animation; using System.Windows.Media.Effects; using System.Windows.Media.Imaging; using System.Windows.Media.Media3D; using System.Windows.Media.TextFormatting; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.Collections; using System.Collections.Specialized; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.Core; using System.Data.Entity.Core.Metadata; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations.Infrastructure.Extensions; using System.Data.Entity.Migrations.ModelConfiguration; using System.Data.Entity.Migrations.Preparation; using System.Data.Entity.Migrations.Postparation; using System.Data.Entity.Migrations.Storage; using System.Data.Entity.Migrations.Storage.Infrastructure; using System.Data.Entity.Migrations.Util; using System.Data.Entity.Migrations.Util.Configuration; using System.Data.Entity.Migrations.Util.Extensions; using System.Data.Entity.Migrations.Util.Migrations; using System.Data.Entity.Migrations.Storage.Infrastructure; using System.Data.Entity.Migrations.Storage.ModelConfiguration; using System.Data.Entity.Migrations.Storage.ModelConfiguration.Migrations; using System.Data.Entity.Migrations.Storage.ModelConfiguration.Migrations.Infrastructure; using System.Data.Entity.Migrations.Storage.ModelConfiguration.Migrations.Postparation; using System.Data.Entity.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Email; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\MinLength; use Symfony\Component\Validator\Constraints\Pattern; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface;  /**  * @author Fabien Potencier <fabien@symfony.com>  */ class EmailType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('subject', 'text', array(                 'label' => 'subject',                 'required' => false,             ))             ->add('message', 'textarea', array(                 'label' => 'message',                 'required' => false,             ))         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Symfony\Component\Form\Extension\Core\Type\EmailType'         ));     }      /**      * @return string      */     public function getName()     {         return 'symfony_form_extension_core_type_email';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.pulsar.client.api;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail; import static org.mockito.Mockito.mock; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verify; import static org.mockito.Mockito.verifyNoMoreInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.when; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.when.mock; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.verifyZeroInteractions; import static org.mockito.Mockito.when.mock; 
  width = app.engine.width     height = app.engine.height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top = height     app.camera.right = width     app.camera.bottom = height     app.camera.left = width     app.camera.top =
// Copyright (c) Microsoft Corporation. All rights reserved. // Licensed under the MIT License. See License.txt in the project root for // license information. // // Code generated by Microsoft (R) AutoRest Code Generator. // Changes may cause incorrect behavior and will be lost if the code is // regenerated.  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (see http://semver.org) of the client. func Version() string { 	return "2021-06-01-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (see http://semver.org) of the client. func Version() string { 	return "2021-06-01-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (see http://semver.org) of the client. func Version() string { 	return "2021-06-01-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // UserAgent returns the UserAgent string to use when sending http.Requests. func UserAgent() string { 	return "Azure-SDK-For-Net-1.1-preview" }  // Version returns the semantic version (
    };      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function() {         $scope.$parent.$destroy();     });      $scope.$on('$destroy', function()
 };         var draw_rectangle = function (ctx, outer, width, height, angle) {             ctx.beginPath();             ctx.rect(0, 0, width, height);             ctx.closePath();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill();             ctx.fill
/*  * Copyright (c) Facebook, Inc. and its affiliates.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package com.facebook.buck.android;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue;  import com.facebook.buck.io.ProjectFilesystem; import com.facebook.buck.testutil.TemporaryPaths; import com.facebook.buck.testutil.integration.ProjectWorkspace; import com.facebook.buck.testutil.integration.TestDataHelper; import com.facebook.buck.testutil.integration.TestDataHelper.TemporaryPaths; import com.facebook.buck.util.environment.Platform; import com.facebook.buck.util.environment.Platforms; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import java.io.IOException; import java.nio.file.Path; import java.nio.file.Paths; import org.junit.Before; import org.junit.Rule; import org.junit.Test; import org.junit.rules.ExpectedException; import org.junit.runner.RunWith; import org.junit.runners.JUnit4;  @RunWith(JUnit4.class) 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * Represents the gdata:feed element  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Gdata_Gdata_Feed extends Zend_Gdata_Extension {      protected $_rootElement = 'feed';     protected $_rootNamespace = 'gdata';      public function __construct($text = null)     {         $this->registerAllNamespaces(Zend_Gdata_Gdata::$namespaces);         parent::__construct($text);     }  } 
﻿using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows; using System.Windows.Controls; using System.Windows.Data; using System.Windows.Documents; using System.Windows.Input; using System.Windows.Media; using System.Windows.Media.Imaging; using System.Windows.Navigation; using System.Windows.Shapes; using System.Windows.Shell; using System.IO; using System.Xml; using System.Xml.Linq; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Collections.Specialized; using System.Collections.Specialized.Collections; using System.ComponentModel; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; using System.Data.Entity; using System.Data.Entity.Infrastructure; using System.Data.Entity.ModelConfiguration; using System.Data.Entity.Migrations; using System.Data.Entity.Migrations.Infrastructure; using System.Web; using System.Web.Optimization; using System.Web.Routing; using System.Web.UI; using System.Web.UI.WebControls; using System.Web.UI.HtmlControls; using System.Web.UI.HtmlControls.WebParts; using System.Web.UI.HtmlControls.Xaml; using System.Web.UI.HtmlControls.Xaml.Controls; using System.Web.UI.HtmlControls.Xaml.Data; using System.Web.UI.HtmlControls.Xaml.Documents; using System.Web.UI.HtmlControls.Xaml.Input; using System.Web.UI.HtmlControls.Xaml.Media; using System.Web.UI.HtmlControls.Xaml.Media.Animation; using System.Web.UI.HtmlControls.Xaml.Navigation; using System.Web.UI.HtmlControls.Xaml.Shapes;  // The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.
 }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(this); }   this.timingFunction = this.timingFunction.bind(
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.product.description',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
)  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console.warn('Stashed changes conflicted with hook auto-fixes! Restoring from conflicts...')       return gitPopWithConflicts(options).then(() => cleanup(options)) })  .catch(() => {       console
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.base.Preconditions; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid.java.util.common.logger.Logger; import org.apache.druid.java.util.common.logger.LoggerFactory; import org.apache.druid.java.util.common.util.concurrent.ThreadFactoryBuilder; import org.apache.druid.java.util.common.util.concurrent.ThreadPoolExecutor; import org

/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.dataflow.common.data.accessors.IFrameTupleReference; import org.apache.hyracks.dataflow.common.data.accessors.ITupleReference; import org.apache.hyracks.dataflow.common.data
<?php  /*  * This file is part of PHPExifTool.  *  * (c) 2012 Romain Neutron <imprec@gmail.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace PHPExiftool\Driver\Tag\DICOM;  use JMS\Serializer\Annotation\ExclusionPolicy; use PHPExiftool\Driver\AbstractTag;  /**  * @ExclusionPolicy("all")  */ class Color extends AbstractTag {      protected $Id = '0020,0021';      protected $Name = 'Color';      protected $FullName = 'DICOM::Main';      protected $GroupName = 'DICOM';      protected $g0 = 'DICOM';      protected $g1 = 'DICOM';      protected $g2 = 'Image';      protected $Type = '?';      protected $Writable = false;      protected $Description = 'Color';  } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
 if (typeof this.props.queryResult.meta[col].datatype !== 'undefined') {     newRow[col] = this.props.queryResult.meta[col].datatype; } else {     newRow[col] = this.props.queryResult.meta[col].datatype; }  return newRow;  }                                                                                                                                                                                                                                                                                                                                                                                                                                                    
                if (bufferLevel < minBufferTime) {                     bufferLevel = minBufferTime;                     minBufferTime = timeToEnd;                     isBufferingCompleted = true;                 }                 else {                     bufferLevel = minBufferTime;                     minBufferTime = timeToEnd;                     isBufferingCompleted = false;                 }             }             else {                 if (bufferLevel < minBufferTime) {                     bufferLevel = minBufferTime;                     minBufferTime = timeToEnd;                     isBufferingCompleted = true;                 }                 else {                     bufferLevel = minBufferTime;                     minBufferTime = timeToEnd;                     isBufferingCompleted = false;                 }             }         }         else {             if (bufferLevel < minBufferTime) {                 bufferLevel = minBufferTime;                 minBufferTime = timeToEnd;                 isBufferingCompleted = true;             }             else {                 bufferLevel = minBufferTime;                 minBufferTime = timeToEnd;                 isBufferingCompleted = false;             }         }     }     else {         if (bufferLevel < minBufferTime) {             bufferLevel = minBufferTime;             minBufferTime = timeToEnd;             isBufferingCompleted = true;         }         else {             bufferLevel = minBufferTime;             minBufferTime = timeToEnd;             isBufferingCompleted = false;         }     }     if (bufferLevel < minBufferTime) {         bufferLevel = minBufferTime;         minBufferTime = timeToEnd;         isBufferingCompleted = true;     }     else {         bufferLevel = minBufferTime;         minBufferTime = timeToEnd;         isBufferingCompleted = false;     }     if (bufferLevel < minBufferTime) {         bufferLevel = minBufferTime;         minBufferTime = timeToEnd;         isBufferingCompleted = true;     }     else {         bufferLevel = minBufferTime;         minBufferTime = timeToEnd;         isBufferingCompleted = false;     }     if (bufferLevel < minBufferTime) {         bufferLevel = minBufferTime;         minBufferTime
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package org.apache.beam.runners.core;  import static org.junit.Assert.assertEquals; import static org.junit.Assert.assertFalse; import static org.junit.Assert.assertNotNull; import static org.junit.Assert.assertNull; import static org.junit.Assert.assertTrue; import static org.junit.Assert.fail;  import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import com.google.common.util.concurrent.Futures; import com.google.common.util.concurrent.ListenableFuture; import com.google.common.util.concurrent.ListeningExecutorService; import com.google.common.util.concurrent.MoreExecutors; import com.google.common.util.concurrent.ThreadFactoryBuilder; import com.google.common.util.concurrent.ThreadFactory; import com.google.common.util.concurrent.TimeUnit; import com.google.common.util.concurrent.TimeoutException; import com.google.common.util.concurrent
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Gdata_Extension  */ require_once 'Zend/Gdata/Extension.php';  /**  * @see Zend_Gdata_Extension_Feed  */ require_once 'Zend/Gdata/Extension/Feed.php';  /**  * @see Zend_Gdata_Extension_Image  */ require_once 'Zend/Gdata/Extension/Image.php';  /**  * @see Zend_Gdata_Extension_Link  */ require_once 'Zend/Gdata/Extension/Link.php';  /**  * @see Zend_Gdata_Extension_Media  */ require_once 'Zend/Gdata/Extension/Media.php';  /**  * @see Zend_Gdata_Extension_Text  */ require_once 'Zend/Gdata/Extension/Text.php';  /**  * @see Zend_Gdata_Extension_Url  */ require_once 'Zend/Gdata/Extension/Url.php';  /**  * @see Zend_Gdata_Extension_Video  */ require_once 'Zend/Gdata/Extension/Video.php';  /**  * @category   Zend  * @package    Zend_Gdata  * @subpackage Gdata  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\Form\Extension\Core\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormInterface; use Symfony\Component\Form\FormView; use Symfony\Component\OptionsResolver\OptionsResolver; use Symfony\Component\OptionsResolver\OptionsResolverInterface; use Symfony\Component\Validator\Constraints as Assert; use Symfony\Component\Validator\Constraints\NotBlank; use Symfony\Component\Validator\Constraints\Length; use Symfony\Component\Validator\Constraints\Regex; use Symfony\Component\Validator\Exception\UnexpectedTypeException; use Symfony\Component\Validator\Validator; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\Constraint; use Symfony\Component\Validator\ConstraintValidator; use Symfony\Component\Validator\ConstraintValidatorInterface; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactory; use Symfony\Component\Validator\Exception\UnexpectedValueException; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\Component\Validator\ValidatorInterface; use Symfony\Component\Validator\ValidatorFactoryInterface; use Symfony\
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.TRANSACTIONAL; import static org.apache.ignite.cache.
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control'                 )             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control'                 )             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
<?php  /*  * This file is part of the Symfony package.  *  * (c) Fabien Potencier <fabien@symfony.com>  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  namespace Symfony\Component\DependencyInjection\Compiler;  use Symfony\Component\DependencyInjection\ContainerBuilder; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\RuntimeException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException; use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
  pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),   pr(y),   pr(z),   pr(w),   pr(x),  
  }  Device.prototype.toVersion = function toVersion() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toFamily = function toFamily() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toVersion = function toVersion() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toFamily = function toFamily() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toVersion = function toVersion() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toFamily = function toFamily() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toVersion = function toVersion() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toFamily = function toFamily() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toVersion = function toVersion() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toFamily = function toFamily() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toVersion = function toVersion() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toFamily = function toFamily() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toVersion = function toVersion() {   var output = this.family     , version = this.toVersion();   return version; }  Device.prototype.toFamily = function toFamily() { 
    } }  function done()       {     console.log('done');       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done();       done
 }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter.emit.apply(emitter, eventData); }                         emitter
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
import 'Components/header/logo'; import 'Components/header/heading'; import 'Components/text/heading'; import 'Components/button/button'; import 'Components/button/button-primary'; import 'Components/button/button-secondary'; import 'Components/button/button-primary-secondary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-secondary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary'; import 'Components/button/button-primary-primary'; import 'Components/button/button-secondary-primary'; import 'Components/button/button-secondary-secondary
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, {  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, {  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, {  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License for the  * Apache License, {  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License for the  * Apache License, {  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License for the  * Apache License, {  *  *   http://www.apache
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
/*  * This file is part of SpongeAPI, licensed under the MIT License (MIT).  *  * Copyright (c) SpongePowered <https://www.spongepowered.org>  * Copyright (c) contributors  *  * Permission is hereby granted, free of charge, to any person obtaining a copy  * of this software and associated documentation files (the "Software"), to deal  * in the Software without restriction, including without limitation the rights  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the Software is  * furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice shall be included in  * all copies or substantial portions of the Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  * THE SOFTWARE.  */ package org.spongepowered.api.entity.living;  import org.spongepowered.api.Sponge; import org.spongepowered.api.entity.Entity; import org.spongepowered.api.entity.living.player.Player; import org.spongepowered.api.util.annotation.NonnullByDefault; import org.spongepowered.api.util.annotation.NonNullByDefault; import org.spongepowered.api.util.annotation.NullableByDefault;  
     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype, {     isPlaying: function() {     if (this.isPlaying) {         return true;     }     else {         return false;     } }, Webvs.AnalyserAdapter.prototype,
 this.removeItems = function(newItemDicts) {         for (i in newItemDicts) {             tiid = newItemDicts[i]["_id"]  this.addItems(newItemDicts);  this.removeItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.addItems(newItemDicts);  this.add
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.product.name',                 'attr' => array(                     'class' => 'form-control',                 ),             ))             ->add('price', 'number', array(                 'label' => 'sylius.form.product.price',                 'attr' => array(                     'class' => 'form-control',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("Neo4j")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("Neo4j")] [assembly: AssemblyProduct("Neo4j")] [assembly: AssemblyCopyright("Copyright © Neo4j 2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("1e7e7e7e7e7e7")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
 var path = require('path')  module.exports = PersistedModel.extend({    initialize: function() {     PersistedModel.prototype.initialize.apply(this, arguments);     loopback.initialize.apply(this, arguments);   },    save: function() {     PersistedModel.prototype.save.apply(this, arguments);     loopback.save.apply(this, arguments);   },    load: function() {     PersistedModel.prototype.load.apply(this, arguments);     loopback.load.apply(this, arguments);   },    save: function() {     PersistedModel.prototype.save.apply(this, arguments);     loopback.save.apply(this, arguments);   },    load: function() {     PersistedModel.prototype.load.apply(this, arguments);     loopback.load.apply(this, arguments);   },    save: function() {     PersistedModel.prototype.save.apply(this, arguments);     loopback.save.apply(this, arguments);   },    load: function() {     PersistedModel.prototype.load.apply(this, arguments);     loopback.load.apply(this, arguments);   },    save: function() {     PersistedModel.prototype.save.apply(this, arguments);     loopback.save.apply(this, arguments);   },    load: function() {     PersistedModel.prototype.load.apply(this, arguments);     loopback.load.apply(this, arguments);   },    save: function() {     PersistedModel.prototype.save.apply(this, arguments);     loopback.save.apply(this, arguments);   },    load: function() {     PersistedModel.prototype.load.apply(this, arguments);     loopback.load.apply(this, arguments);   },    save: function() {     PersistedModel.prototype.save.apply(this, arguments);     loopback.save.apply(this, arguments);   },    load: function() {     PersistedModel.prototype.load.apply(this, arguments
﻿using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  // General Information about an assembly is controlled through the following  // set of attributes. Change these attribute values to modify the information // associated with an assembly. [assembly: AssemblyTitle("CSharp.Tests")] [assembly: AssemblyDescription("")] [assembly: AssemblyConfiguration("")] [assembly: AssemblyCompany("")] [assembly: AssemblyProduct("CSharp.Tests")] [assembly: AssemblyCopyright("Copyright ©  2015")] [assembly: AssemblyTrademark("")] [assembly: AssemblyCulture("")]  // Setting ComVisible to false makes the types in this assembly not visible  // to COM components.  If you need to access a type in this assembly from  // COM, set the ComVisible attribute to true on that type. [assembly: ComVisible(false)]  // The following GUID is for the ID of the typelib if this project is exposed to COM [assembly: Guid("e8e8e8e8-e8e8-4e8e-8e8e-8e8e8e8e8e")]  // Version information for an assembly consists of the following four values: // //      Major Version //      Minor Version  //      Build Number //      Revision // // You can specify all the values or you can default the Build and Revision Numbers  // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] 
 exports.create = function(req, res) {   var article = new Article(req.body);   article.save(function(err) {     if (err) {       res.status(400).send(err);     } else {       res.status(200).send(article);     }   }); };  exports.read = function(req, res) {   Article.findById(req.params.id, function(err, article) {     if (err) {       res.status(400).send(err);     } else {       res.status(200).send(article);     }   }); };  exports.update = function(req, res) {   Article.findById(req.params.id, function(err, article) {     if (err) {       res.status(400).send(err);     } else {       article.update(req.body, function(err) {         if (err) {           res.status(400).send(err);         } else {           res.status(200).send(article);         }       });     }   }); };  exports.delete = function(req, res) {   Article.findById(req.params.id, function(err, article) {     if (err) {       res.status(400).send(err);     } else {       article.remove(function(err) {         if (err) {           res.status(400).send(err);         } else {           res.status(200).send(article);         }       });     }   }); };  exports.list = function(req, res) {   Article.find({}, function(err, articles) {     if (err) {       res.status(400).send(err);     } else {       res.status(200).send(articles);     }   }); };
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class OrderType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name', 'text', array(                 'label' => 'sylius.form.order.name',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.name',                 ),             ))             ->add('description', 'textarea', array(                 'label' => 'sylius.form.order.description',                 'attr' => array(                     'class' => 'form-control',                     'placeholder' => 'sylius.form.order.description',                 ),             ))         ;     }          /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Order'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_order';     } } 
<?php  /*  * This file is part of the Sylius package.  *  * (c) Paweł Jędrzejewski  *  * For the full copyright and license information, please view the LICENSE  * file that was distributed with this source code.  */  declare(strict_types=1);  namespace Sylius\Bundle\CoreBundle\Form\Type;  use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\OptionsResolver\OptionsResolverInterface;  /**  * @author Paweł Jędrzejewski <pawel@sylius.org>  */ class ProductType extends AbstractType {     /**      * @param FormBuilderInterface $builder      * @param array $options      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder             ->add('name')             ->add('description')         ;     }      /**      * @param OptionsResolverInterface $resolver      */     public function setDefaultOptions(OptionsResolverInterface $resolver)     {         $resolver->setDefaults(array(             'data_class' => 'Sylius\Bundle\CoreBundle\Entity\Product'         ));     }      /**      * @return string      */     public function getName()     {         return 'sylius_product_type';     } } 
// Copyright (c) 2012 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file.  #ifndef CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_ #define CHROME_BROWSER_UI_WEBUI_CHROMEOS_LOGIN_LOGIN_MANAGER_H_  #include <string> #include <vector>  #include "base/basictypes.h" #include "base/compiler_specific.h" #include "base/memory/scoped_ptr.h" #include "base/memory/weak_ptr.h" #include "base/memory/weak_ptr_set.h" #include "base/observer_list.h" #include "base/observer_list_observer.h" #include "base/observer_list_observer_list.h" #include "base/time/time.h" #include "chrome/browser/profiles/profile.h" #include "chrome/browser/profiles/profile_manager.h" #include "chrome/browser/ui/browser.h" #include "chrome/browser/ui/browser_finder.h" #include "chrome/browser/ui/browser_list.h" #include "chrome/browser/ui/browser_window.h" #include "chrome/browser/ui/tabs/tab_strip_model.h" #include "content/public/browser/notification_observer.h" #include "content/public/browser/notification_registrar.h" #include "content/public/browser/notification_registrar_observer.h" #include "content/public/browser/web_contents.h" #include "content/public/browser/web_contents_observer.h" #include "content/public/browser/web_ui.h" #include "content/public/browser/web_ui_data_source.h" #include "content/public/browser/web_ui_handler.h" #include "
 (function(window, document, undefined) {  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  (function(window, document, undefined) {  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or http://dojofoundation.org/license  */  /*  * Copyright (c) 2011-2013, The Dojo Foundation All rights reserved.  * For licensing, see LICENSE.txt or
 /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable no-unused-vars */ /* eslint-disable
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.functions.IFunctionDescriptorProvider; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryService; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryServiceFactory; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */  package org.apache.druid.query.aggregation;  import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty; import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.annotation.JsonTypeInfo.As; import com.fasterxml.jackson.annotation.JsonTypeInfo.Id; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsArray; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsObject; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsString; import com.fasterxml.jackson.annotation.JsonTypeInfo.IsType; import com.fasterxml.jackson.annotation.JsonTypeName; import com.google.common.collect.ImmutableList; import com.google.common.collect.ImmutableMap; import com.google.common.collect.ImmutableSet; import com.google.common.collect.Iterables; import com.google.common.collect.Lists; import com.google.common.collect.Maps; import com.google.common.collect.Sets; import org.apache.druid.java.util.common.ISE; import org.apache.druid
/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.apache.ignite.internal.processors.cache;  import org.apache.ignite.IgniteCheckedException; import org.apache.ignite.IgniteException; import org.apache.ignite.IgniteLogger; import org.apache.ignite.IgniteSpiException; import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi; import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder; import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder; import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest; import org.apache.ignite.testframework.junits.common.GridCommonTest; import org.jetbrains.annotations.Nullable;  import static org.apache.ignite.cache.CacheAtomicityMode.ATOMIC; import static org.apache.ignite.cache.CacheMode.PARTITIONED; import static org.apache.ignite.cache.CacheMode.REPLICATED; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC; import static org.apache.ignite.cache.CacheWriteSynchronizationMode.SYNC; import static org.apache.ignite.cache.Cache
         }     };      return SearchModelArray; }()); exports.SearchModelArray = SearchModelArray; //# sourceMappingURL=search_model_array.js.map
<?php /**  * Zend Framework  *  * LICENSE  *  * This source file is subject to the new BSD license that is bundled  * with this package in the file LICENSE.txt.  * It is also available through the world-wide-web at this URL:  * http://framework.zend.com/license/new-bsd  * If you did not receive a copy of the license and are unable to  * obtain it through the world-wide-web, please send an email  * to license@zend.com so we can send you a copy immediately.  *  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  * @version    $Id$  */  /**  * @see Zend_Service_DeveloperGarden_Exception  */ require_once 'Zend/Service/DeveloperGarden/Exception.php';  /**  * @category   Zend  * @package    Zend_Service  * @subpackage DeveloperGarden  * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)  * @license    http://framework.zend.com/license/new-bsd     New BSD License  */ class Zend_Service_DeveloperGarden_Exception extends Zend_Service_DeveloperGarden_Exception { } 
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */ package org.apache.asterix.runtime.evaluators.functions;  import org.apache.asterix.om.functions.BuiltinFunctions; import org.apache.asterix.om.functions.IFunctionDescriptor; import org.apache.asterix.om.functions.IFunctionDescriptorFactory; import org.apache.asterix.om.types.ATypeTag; import org.apache.hyracks.algebricks.common.exceptions.AlgebricksException; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluator; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactory; import org.apache.hyracks.algebricks.runtime.base.IScalarEvaluatorFactoryProvider; import org.apache.hyracks.api.context.IHyracksTaskContext; import org.apache.hyracks.api.exceptions.HyracksDataException; import org.apache.hyracks.data.std.api.IPointable; import org.apache.hyracks.data.std.primitive.VoidPointable; import org.apache.hyracks.data.std.util.ArrayBackedValueStorage; import org.apache.hyracks.dataflow.common.data.accessors.
   it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(defaultProps);     expect(name).toBeDefined();   });    it('should be able to create a new object name', () => {     const name = renderer.createObjectName(
 import { connect } from 'react-redux'; import { Link } from 'react-router-dom'; import { connect } from 'react-router-redux'; import { LinkTo } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { Link } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { LinkTo } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from 'react-router-router-dom'; import { withRouter } from '
