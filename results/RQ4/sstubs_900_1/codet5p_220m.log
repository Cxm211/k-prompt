Namespace(log_name='./RQ5/sstubs_900_1/codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='java', output_dir='RQ5/sstubs_900_1/codet5p_220m', data_dir='./data/RQ5/sstubs_900_1', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=8, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '* @should find object given valid uuid    * @should return null if no object found with given uuid    */  public GlobalProperty getGlobalPropertyByUuid(String uuid) throws APIException;   /**    * Get a listing or important variables used in openmrs', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '* @should find object given valid uuid    * @should return null if no object found with given uuid    */  public GlobalProperty getGlobalPropertyByUuid(String uuid);   /**    * Get a listing or important variables used in openmrs'}]
***** Running training *****
  Num examples = 900
  Batch size = 8
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 114
  train_loss = 14.7709
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/sstubs_900_1/validation.jsonl
  codebleu-4 = 94.6 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:94.6
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 227
  train_loss = 3.6124
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_900_1/validation.jsonl
  codebleu-4 = 94.41 	 Previous best codebleu 94.6
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 340
  train_loss = 1.9608
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_900_1/validation.jsonl
  codebleu-4 = 95.37 	 Previous best codebleu 94.6
  ********************
 Achieve Best bleu:95.37
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 453
  train_loss = 1.0665
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_900_1/validation.jsonl
  codebleu-4 = 95.02 	 Previous best codebleu 95.37
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 566
  train_loss = 0.6394
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_900_1/validation.jsonl
  codebleu-4 = 94.92 	 Previous best codebleu 95.37
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 679
  train_loss = 0.4422
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_900_1/validation.jsonl
  codebleu-4 = 94.99 	 Previous best codebleu 95.37
  ********************
early stopping!!!
reload model from RQ5/sstubs_900_1/codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/RQ5/sstubs_900_1/test.jsonl
  codebleu = 95.79 
  Total = 500 
  Exact Fixed = 328 

  Syntax Fixed = 2 
[81, 293]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 500 
  Exact Fixed = 328 

  Syntax Fixed = 2 
[81, 293]
  Cleaned Fixed = 0 
[]
  codebleu = 95.79 
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9167248063681421, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7010984251778435, 0.9056583090096291, 1.0, 1.0, 0.8837036002004135, 1.0, 1.0, 0.7099766481408452, 1.0, 1.0, 1.0, 1.0, 0.9272945586059962, 1.0, 0.9236426846280885, 0.9257671218945684, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8472999580048346, 0.9261420415269246, 1.0, 0.8227700846204091, 0.9435321610524647, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6526670151860275, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8657511945821569, 1.0, 0.8961079319106557, 1.0, 1.0, 0.9544887439837764, 0.9151340803413444, 1.0, 0.7503432335009788, 1.0, 0.9698987396548948, 0.8348805422215138, 1.0, 1.0, 1.0, 0.9699899456986019, 1.0, 1.0, 1.0, 1.0, 0.9557161384210198, 1.0, 1.0, 0.9629467492522685, 1.0, 0.7744076120274651, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9323598782946632, 0.9339261075829457, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8845572237610086, 0.970114879479065, 1.0, 1.0, 0.9498733743967636, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8727245358790694, 1.0, 1.0, 1.0, 1.0, 0.948481584146698, 0.963531800540206, 0.6887796716807858, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9427895563342799, 0.9613211546063425, 0.9469728550743763, 1.0, 1.0, 0.8445246450323679, 1.0, 1.0, 1.0, 1.0, 0.8794064540059643, 0.9464844774151098, 1.0, 1.0, 0.9019927469706532, 0.9375231838826312, 1.0, 1.0, 0.9107730833493335, 0.8825294735748568, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7967629523839908, 1.0, 0.8806751756510949, 1.0, 0.8470042806264737, 0.8840834056802387, 0.822395584879356, 0.8617520551076281, 1.0, 0.7832368085787433, 1.0, 1.0, 1.0, 1.0, 0.9587753838819759, 1.0, 1.0, 1.0, 0.7876421850012838, 1.0, 1.0, 1.0, 1.0, 0.9267516766457782, 0.904775862258383, 0.9044642401339957, 1.0, 0.801180028968093, 0.9530008025801151, 1.0, 0.9546221339246326, 1.0, 0.8664266028701744, 0.9370980324546465, 0.8014447380383962, 1.0, 0.9581095565874824, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8431318837364405, 0.8616715812772971, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.586326465193158, 1.0, 1.0, 0.9215834056802388, 1.0, 1.0, 0.9141720281459855, 0.9365276486140073, 1.0, 0.9583676774082095, 0.8846386294351021, 1.0, 0.9222862123570568, 0.9407613352737074, 1.0, 0.7590096946794502, 1.0, 0.9188441984944269, 1.0, 1.0, 0.9680988793409613, 1.0, 1.0, 1.0, 0.884777214048037, 0.9725011474210121, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8222725521291268, 0.9325400085710811, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9372561368734473, 1.0, 0.9600553834135903, 1.0, 1.0, 1.0, 1.0, 0.9492523028091309, 1.0, 0.8531462888634065, 1.0, 1.0, 1.0, 0.8755319098520675, 1.0, 1.0, 1.0, 1.0, 0.8212636043254029, 1.0, 0.949068802064335, 0.9532160400745728, 1.0, 0.907357971193316, 1.0, 0.8509588599283562, 1.0, 1.0, 1.0, 1.0, 0.9321212086381336, 0.9089670069930953, 1.0, 0.8648103351245982, 0.9466595714446484, 1.0, 1.0, 1.0, 1.0, 0.7016265496309229, 1.0, 0.8947836446510709, 0.9725011474210121, 0.9497338034253828, 1.0, 0.9439975336408695, 0.9119950221406494, 1.0, 1.0, 0.7962718684980241, 0.9601466755014141, 0.9238877689380496, 0.9332624127367197, 0.9155105345510666, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7026615485512439, 1.0, 1.0, 0.7944107194467429, 0.9637364956234171, 0.9647268293826727, 1.0, 0.8784503390575601, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8953661348226227, 1.0, 1.0, 0.8989256641125836, 0.8768888807546595, 0.9630476148256921, 1.0, 1.0, 0.8215803485831588, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.966664755877954, 1.0, 1.0, 1.0, 0.9045508804845042, 0.9698138929646263, 1.0, 0.9493239030379825, 0.9492523028091309, 0.9407613352737074, 1.0, 1.0, 0.9370576952964131, 0.8573835536643046, 0.9443755095409017, 0.9543920430664012, 0.9370576952964131, 0.9465864294209791, 0.8761569670973709, 0.8576767641936891, 1.0, 1.0, 1.0, 0.9472873156881443, 0.9466595714446484, 0.9287546369958737, 1.0, 1.0, 0.7292149374693833, 1.0, 1.0, 0.7016265496309229, 0.9653175874774487, 0.9475019272263487, 1.0, 0.8422237749567263, 1.0, 0.8806751756510949, 0.8045788816545087, 0.8648103351245982, 1.0, 1.0, 1.0, 0.6851513300845844, 0.8755319098520675, 1.0, 1.0, 0.7651340803413443, 0.9207265089204273, 1.0, 1.0, 1.0, 1.0, 0.9583676774082095, 0.6786383641379152, 1.0, 1.0, 1.0, 1.0, 0.9470228248649237, 1.0, 1.0, 1.0, 0.8642470965743208, 0.9309949427736264, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9523104352365284, 0.7032463562196102, 1.0, 1.0, 1.0, 0.8212347889887717, 1.0, 0.9365809638486668, 1.0, 1.0, 0.534613777706259, 0.7810580026281693, 0.8535087661549325, 0.6407450559597011, 1.0, 1.0, 0.9215834056802388, 1.0, 0.936752055107628, 1.0, 0.957982876787582, 1.0, 0.9354021130737269, 1.0, 0.9085309210098864, 1.0, 1.0, 0.8394141655908587, 0.9215834056802388, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7378414230005441, 0.9044642401339957, 1.0, 1.0, 1.0, 0.8212347889887717, 1.0, 1.0, 0.8816015466501335, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.829922431649786, 0.8112458888495773, 0.9468351265733028, 0.862347908057336, 1.0, 0.8313412454774565, 1.0, 0.9099697272423548, 1.0, 1.0, 0.7512913371790793, 1.0, 1.0, 1.0, 0.8535087661549325, 1.0, 1.0, 1.0, 0.9207265089204273, 1.0, 1.0, 1.0, 0.9562237378841005, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8463836287468253, 1.0]
Finish training and take 13m
