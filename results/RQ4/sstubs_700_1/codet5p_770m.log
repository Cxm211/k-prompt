Namespace(log_name='./RQ5/sstubs_700_1/codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='java', output_dir='RQ5/sstubs_700_1/codet5p_770m', data_dir='./data/RQ5/sstubs_700_1', choice=0, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Node node1 = Node.newString(Token.NAME, "f");      node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));      Node node2 = Node.newString(Token.NAME, "f");     assertFalse(node1.checkTreeTypeAwareEqualsSilent(node2));    }    public void testVarArgs1() {', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'Node node1 = Node.newString(Token.NAME, "f");      node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));      Node node2 = Node.newString(Token.NAME, "f");     assertFalse(node1.isEquivalentToTyped(node2));    }    public void testVarArgs1() {'}]
***** Running training *****
  Num examples = 700
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 176
  train_loss = 10.779
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 93.78 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:93.78
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 351
  train_loss = 2.848
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 94.59 	 Previous best codebleu 93.78
  ********************
 Achieve Best bleu:94.59
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 526
  train_loss = 1.4631
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 95.28 	 Previous best codebleu 94.59
  ********************
 Achieve Best bleu:95.28
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 701
  train_loss = 0.9959
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 96.09 	 Previous best codebleu 95.28
  ********************
 Achieve Best bleu:96.09
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 876
  train_loss = 0.6115
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 96.23 	 Previous best codebleu 96.09
  ********************
 Achieve Best bleu:96.23
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1051
  train_loss = 0.6461
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 96.25 	 Previous best codebleu 96.23
  ********************
 Achieve Best bleu:96.25
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1226
  train_loss = 0.3244
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 96.44 	 Previous best codebleu 96.25
  ********************
 Achieve Best bleu:96.44
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1401
  train_loss = 0.2662
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 96.52 	 Previous best codebleu 96.44
  ********************
 Achieve Best bleu:96.52
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 1576
  train_loss = 0.217
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 96.68 	 Previous best codebleu 96.52
  ********************
 Achieve Best bleu:96.68
  ********************

***** Running evaluation *****
  Num examples = 100
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 1751
  train_loss = 0.0934
  ********************
Previous best ppl:inf
BLEU file: ./data/RQ5/sstubs_700_1/validation.jsonl
  codebleu-4 = 96.52 	 Previous best codebleu 96.68
  ********************
reload model from RQ5/sstubs_700_1/codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/RQ5/sstubs_700_1/test.jsonl
  codebleu = 95.79 
  Total = 500 
  Exact Fixed = 342 

  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 500 
  Exact Fixed = 342 

  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 95.79 
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9167248063681421, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9176675865658077, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7010984251778435, 0.9056583090096291, 1.0, 0.8665518607362566, 1.0, 1.0, 1.0, 0.7099766481408452, 1.0, 1.0, 1.0, 1.0, 0.9272945586059962, 1.0, 0.9236426846280885, 0.972668710286829, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8472999580048346, 0.9261420415269246, 1.0, 0.8362511196423215, 1.0, 1.0, 1.0, 0.9443466746607985, 1.0, 1.0, 0.7491375710149024, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8897268293826727, 1.0, 0.8961079319106557, 1.0, 1.0, 0.9544887439837764, 1.0, 1.0, 0.7503432335009788, 1.0, 0.9783152785012215, 0.8348805422215138, 0.9583676774082095, 1.0, 1.0, 0.9324899456986018, 1.0, 1.0, 1.0, 1.0, 0.9557161384210198, 1.0, 1.0, 0.9629467492522685, 1.0, 0.7446226556026081, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9323598782946632, 0.9339261075829457, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8845572237610086, 0.9573394849019141, 1.0, 1.0, 0.9498733743967636, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9027245358790694, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9249627317415372, 0.6887796716807858, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9733211546063425, 0.9469728550743763, 1.0, 1.0, 0.9524183912964097, 1.0, 1.0, 1.0, 1.0, 0.9326807851263892, 0.8139113648956017, 1.0, 1.0, 0.9019927469706532, 0.9375231838826312, 1.0, 1.0, 0.9107730833493335, 0.8825294735748568, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9321659033471614, 1.0, 0.8806751756510949, 1.0, 0.9637364956234171, 0.8840834056802387, 0.822395584879356, 0.8617520551076281, 1.0, 1.0, 1.0, 0.9498733743967636, 1.0, 1.0, 0.9587753838819759, 1.0, 1.0, 1.0, 0.7876421850012838, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6696775320104573, 1.0, 1.0, 0.9546221339246326, 1.0, 1.0, 1.0, 0.8014447380383962, 1.0, 0.849784981903392, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8431318837364405, 0.8616715812772971, 1.0, 0.942891989734737, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6099697272423549, 1.0, 1.0, 0.9215834056802388, 1.0, 1.0, 0.9141720281459855, 1.0, 1.0, 1.0, 0.8846386294351021, 1.0, 0.9222862123570568, 1.0, 1.0, 0.63692132288093, 1.0, 0.9188441984944269, 1.0, 1.0, 0.9680988793409613, 1.0, 1.0, 1.0, 0.884777214048037, 0.9725011474210121, 0.9498733743967636, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8222725521291268, 0.9325400085710811, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9372561368734473, 1.0, 0.9600553834135903, 1.0, 1.0, 1.0, 1.0, 0.910233087519547, 1.0, 0.8531462888634065, 0.8404979526305214, 1.0, 1.0, 0.8755319098520675, 1.0, 1.0, 1.0, 1.0, 0.8212636043254029, 1.0, 0.949068802064335, 0.9259881201117277, 1.0, 0.907357971193316, 1.0, 0.3992295655149921, 1.0, 1.0, 1.0, 1.0, 0.8721212086381336, 0.9089670069930953, 1.0, 0.8648103351245982, 0.9466595714446484, 1.0, 1.0, 1.0, 1.0, 0.7016265496309229, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9439975336408695, 0.9443466746607985, 1.0, 1.0, 0.7962718684980241, 0.9601466755014141, 0.9238877689380496, 0.9332624127367197, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7026615485512439, 1.0, 1.0, 0.7944107194467429, 0.9637364956234171, 1.0, 1.0, 0.8608032802340306, 1.0, 1.0, 0.8895342368991435, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8953661348226227, 1.0, 1.0, 0.9794339527758515, 0.9349697756418187, 0.9630476148256921, 0.9056583090096291, 1.0, 0.8215803485831588, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.966664755877954, 1.0, 1.0, 1.0, 0.9181872441208678, 1.0, 1.0, 0.9493239030379825, 0.910233087519547, 0.9407613352737074, 1.0, 1.0, 0.9370576952964131, 0.8573835536643046, 0.9443755095409017, 0.9543920430664012, 0.9370576952964131, 1.0, 0.8761569670973709, 0.8576767641936891, 1.0, 1.0, 1.0, 0.9472873156881443, 0.9466595714446484, 0.810651403585994, 1.0, 1.0, 0.7292149374693833, 1.0, 1.0, 0.7016265496309229, 0.9653175874774487, 0.8969876166404993, 1.0, 0.8422237749567263, 1.0, 0.8806751756510949, 0.8045788816545087, 0.8648103351245982, 1.0, 1.0, 1.0, 0.6164386875958259, 0.8755319098520675, 1.0, 1.0, 1.0, 0.7864168733338321, 0.940598945729278, 1.0, 1.0, 1.0, 1.0, 0.664853826870836, 0.940101844638672, 1.0, 1.0, 1.0, 0.9470228248649237, 1.0, 1.0, 1.0, 0.8642470965743208, 0.9309949427736264, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7032463562196102, 1.0, 1.0, 1.0, 0.7142024645283338, 1.0, 0.9365809638486668, 1.0, 1.0, 0.534613777706259, 0.7810580026281693, 1.0, 0.7877842946802818, 1.0, 1.0, 0.9215834056802388, 1.0, 1.0, 1.0, 1.0, 0.9693261143428569, 0.9354021130737269, 1.0, 0.9085309210098864, 1.0, 1.0, 0.8994134124087425, 0.9215834056802388, 1.0, 1.0, 0.9149336239632064, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7378414230005441, 0.9044642401339957, 1.0, 1.0, 1.0, 0.7142024645283338, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.829922431649786, 0.8112458888495773, 0.9468351265733028, 0.862347908057336, 1.0, 0.8313412454774565, 1.0, 0.9099697272423548, 0.8648103351245982, 1.0, 0.7486246705124127, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9207265089204273, 0.8087241086127768, 0.8871606681680837, 1.0, 1.0, 1.0, 0.928067052222928, 1.0, 1.0, 1.0, 0.7540759364391331, 0.940101844638672]
Finish training and take 53m
