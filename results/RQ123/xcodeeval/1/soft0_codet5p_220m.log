Namespace(log_name='./xcodeeval/1/soft0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='c', output_dir='xcodeeval/1/soft0_codet5p_220m', data_dir='./data/xcodeeval/1', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include <stdio.h> #include <stdlib.h> void insertSort(int* a, int size) {     int i, j, tmp;     for (i = 1; i < size; ++i)     {         tmp = a[i];         for (j = i - 1; j >= 0 && a[j] < tmp; --j)             a[j + 1] = a[j];         a[j + 1] = tmp;     } } int check(int* a,int* b,int size) {     int i;     for(i=0;i<size;i++)     if (a[i]!=b[i]) return (a[i]);     return a[i]; } int main() {     int i,n,o1,o2;     scanf("%d",&n);     int a[n],b[n-1];     for (i=0;i<n;i++)         scanf("%d",&a[i]);     insertSort(a,n);     puts("First");     for (i=0;i<n-1;i++)         scanf("%d",&b[i]);     insertSort(b,n-1);     puts("Sec1");     o1=check(a,b,n);     puts("Sec2");     for (i=0;i<n-2;i++)         scanf("%d",&a[i]);     insertSort(a,n-2);     puts("Thir1");     o2=check(b,a,n-2);     puts("Thir2");     printf("%d\\n%d",o1,o2);     return 0; }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include <stdio.h> #include <stdlib.h>  int main() {     int i,n,x;     __int64 a=0,b=0,c=0;     scanf("%d",&n);     for (i=0; i<n; i++)     {         scanf("%d",&x);         a+=x;     }     for (i=0; i<n-1; i++)     {         scanf("%d",&x);         b+=x;     }     for (i=0; i<n-2; i++)     {         scanf("%d",&x);         c+=x;      }     printf("%I64d\\n%I64d",a-b,b-c);     return 0; }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 182
  train_loss = 74.788
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.62 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.62
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 363
  train_loss = 60.6242
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.74 	 Previous best codebleu 75.62
  ********************
 Achieve Best bleu:75.74
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 544
  train_loss = 49.8238
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.78 	 Previous best codebleu 75.74
  ********************
 Achieve Best bleu:75.78
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 725
  train_loss = 41.9216
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.8 	 Previous best codebleu 75.78
  ********************
 Achieve Best bleu:75.8
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 906
  train_loss = 37.0328
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.91 	 Previous best codebleu 75.8
  ********************
 Achieve Best bleu:75.91
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1087
  train_loss = 30.7116
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.83 	 Previous best codebleu 75.91
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1268
  train_loss = 26.1251
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.86 	 Previous best codebleu 75.91
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1449
  train_loss = 21.8348
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.74 	 Previous best codebleu 75.91
  ********************
early stopping!!!
reload model from xcodeeval/1/soft0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/xcodeeval/1/test.jsonl
  codebleu = 76.36 
  Total = 135 
  Exact Fixed = 4 
[62, 72, 74, 132]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 2 
[77, 123]
  ********************
  Total = 135 
  Exact Fixed = 4 
[62, 72, 74, 132]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 2 
[77, 123]
  codebleu = 76.36 
[0.7097922458866276, 0.9752926493864778, 0.8419188985107608, 0.8399493211101225, 0.5518850713664085, 0.8995033054005415, 0.655233513178001, 0.8131660563421435, 0.47822580645161283, 0.9295757649014529, 0.6700100781693141, 0.8881108167610436, 0.8920012172763082, 0.8922221884406468, 0.9250674011252755, 0.7938229814514498, 0.6068707460804744, 0.8143502770709957, 0.9126650482788027, 0.9832612094993938, 0.9498733743967636, 0.7584713945723569, 0.9054668285688956, 0.9304372254539681, 0.7521689663631371, 0.8986391637385749, 0.5012202683657422, 0.8381960842127558, 0.9358018387596505, 0.9876232981025004, 0.9857368328793006, 0.8463810160907537, 0.5003910292067191, 0.9389707093964361, 0.8416184535678177, 0.973858151522893, 0.6298491547945411, 0.9258754099074029, 0.46124203184813023, 0.8787907304765896, 0.6432679507343982, 0.6754292375001995, 0.43231737186383545, 0.48170226274723915, 0.7149195155805301, 0.8396113521805657, 0.9465012851429597, 0.973858151522893, 0.5527764741944027, 0.811100358881859, 0.9601466755014141, 0.33580645216805804, 0.9460916285283518, 0.7927906556865255, 0.20708565832447592, 0.9333310235672049, 0.8633660722321144, 0.6778336766746159, 0.9860950428335316, 0.5335581349704818, 0.9492384172683168, 1.0, 0.5077214223305908, 0.9702812943440167, 0.9874055782608233, 0.17524847908718622, 0.9334580759528754, 0.2857544178174171, 0.7598076383450478, 0.8753772142950917, 0.39101342264848765, 1.0, 0.39536345674651, 0.9877105669836239, 0.8760369670517594, 0.9194422946236107, 0.8791990328029993, 0.8373834761279768, 0.8644554554879766, 0.8454546086981599, 0.7557818507099485, 0.7153375795187605, 0.8527875420817158, 0.9128071327141931, 0.9544988779085728, 0.8917793747666807, 0.89451908845154, 0.8424197834374936, 0.7598952407119619, 0.7832059164639751, 0.9617625014218179, 0.8963430088316504, 0.4934678370724654, 0.9109545424921657, 0.5318436795546182, 0.9498733743967636, 0.7253025503608977, 0.855337897791616, 0.5076943976918459, 0.906923058378295, 0.9381767755969468, 0.5998071806896054, 0.6615533517599935, 0.2572497507889638, 0.7556814728598797, 0.9582778026878329, 0.6362439585829495, 0.9365739931432338, 0.29943997880421824, 0.8769250379411355, 0.38466031842423953, 0.9750017397390569, 0.7639496783614648, 0.5412219101899178, 0.5102601887697077, 0.9442248897793943, 0.9692439075113215, 0.7929436912800465, 0.7741939441431783, 0.4668495886935264, 0.9041929640741897, 0.37828106820249585, 0.9455713410474389, 0.3565874055354602, 0.8119506730626463, 0.8349334433697306, 0.7286144481170467, 0.7860803806968684, 0.45601045567543047, 0.7761988507965935, 0.6017150080688712, 1.0, 0.9045578968398897, 0.46985530336379205, 0.7279692304347927]
Finish training and take 44m
Namespace(log_name='./xcodeeval/1/soft0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='c', output_dir='xcodeeval/1/soft0_codet5p_220m', data_dir='./data/xcodeeval/1', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include <stdio.h> #include <stdlib.h> void insertSort(int* a, int size) {     int i, j, tmp;     for (i = 1; i < size; ++i)     {         tmp = a[i];         for (j = i - 1; j >= 0 && a[j] < tmp; --j)             a[j + 1] = a[j];         a[j + 1] = tmp;     } } int check(int* a,int* b,int size) {     int i;     for(i=0;i<size;i++)     if (a[i]!=b[i]) return (a[i]);     return a[i]; } int main() {     int i,n,o1,o2;     scanf("%d",&n);     int a[n],b[n-1];     for (i=0;i<n;i++)         scanf("%d",&a[i]);     insertSort(a,n);     puts("First");     for (i=0;i<n-1;i++)         scanf("%d",&b[i]);     insertSort(b,n-1);     puts("Sec1");     o1=check(a,b,n);     puts("Sec2");     for (i=0;i<n-2;i++)         scanf("%d",&a[i]);     insertSort(a,n-2);     puts("Thir1");     o2=check(b,a,n-2);     puts("Thir2");     printf("%d\\n%d",o1,o2);     return 0; }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include <stdio.h> #include <stdlib.h>  int main() {     int i,n,x;     __int64 a=0,b=0,c=0;     scanf("%d",&n);     for (i=0; i<n; i++)     {         scanf("%d",&x);         a+=x;     }     for (i=0; i<n-1; i++)     {         scanf("%d",&x);         b+=x;     }     for (i=0; i<n-2; i++)     {         scanf("%d",&x);         c+=x;      }     printf("%I64d\\n%I64d",a-b,b-c);     return 0; }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 182
  train_loss = 74.788
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.65 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.65
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 363
  train_loss = 60.6242
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.77 	 Previous best codebleu 75.65
  ********************
 Achieve Best bleu:75.77
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 544
  train_loss = 49.8238
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.81 	 Previous best codebleu 75.77
  ********************
 Achieve Best bleu:75.81
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 725
  train_loss = 41.9216
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.84 	 Previous best codebleu 75.81
  ********************
 Achieve Best bleu:75.84
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 906
  train_loss = 37.0328
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.94 	 Previous best codebleu 75.84
  ********************
 Achieve Best bleu:75.94
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1087
  train_loss = 30.7116
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.86 	 Previous best codebleu 75.94
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1268
  train_loss = 26.1251
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.9 	 Previous best codebleu 75.94
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1449
  train_loss = 21.8348
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.78 	 Previous best codebleu 75.94
  ********************
early stopping!!!
reload model from xcodeeval/1/soft0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/xcodeeval/1/test.jsonl
  codebleu = 76.38 
  Total = 135 
  Exact Fixed = 4 
[62, 72, 74, 132]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 2 
[77, 123]
  ********************
  Total = 135 
  Exact Fixed = 4 
[62, 72, 74, 132]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 2 
[77, 123]
  codebleu = 76.38 
[0.7097922458866276, 0.9752926493864778, 0.8419188985107608, 0.8399493211101225, 0.5518850713664085, 0.8995033054005415, 0.655233513178001, 0.8131660563421435, 0.47822580645161283, 0.9295757649014529, 0.6700100781693141, 0.8881108167610436, 0.8920012172763082, 0.8922221884406468, 0.9250674011252755, 0.7938229814514498, 0.6068707460804744, 0.8143502770709957, 0.9126650482788027, 0.9832612094993938, 0.9498733743967636, 0.7584713945723569, 0.9054668285688956, 0.9304372254539681, 0.7521689663631371, 0.8986391637385749, 0.5012202683657422, 0.8381960842127558, 0.9358018387596505, 0.9876232981025004, 0.9857368328793006, 0.8463810160907537, 0.5003910292067191, 0.9389707093964361, 0.8416184535678177, 0.973858151522893, 0.639224154794541, 0.9258754099074029, 0.46124203184813023, 0.8787907304765896, 0.6432679507343982, 0.6754292375001995, 0.43231737186383545, 0.48170226274723915, 0.7149195155805301, 0.8396113521805657, 0.9465012851429597, 0.973858151522893, 0.5677764741944027, 0.811100358881859, 0.9601466755014141, 0.33580645216805804, 0.9460916285283518, 0.7927906556865255, 0.20708565832447592, 0.9333310235672049, 0.8633660722321144, 0.6778336766746159, 0.9860950428335316, 0.5335581349704818, 0.9492384172683168, 1.0, 0.5077214223305908, 0.9702812943440167, 0.9874055782608233, 0.17524847908718622, 0.9334580759528754, 0.2857544178174171, 0.7598076383450478, 0.8753772142950917, 0.39101342264848765, 1.0, 0.39536345674651, 0.9877105669836239, 0.8760369670517594, 0.9194422946236107, 0.8791990328029993, 0.8373834761279768, 0.8644554554879766, 0.8454546086981599, 0.7557818507099485, 0.7153375795187605, 0.8527875420817158, 0.9128071327141931, 0.9544988779085728, 0.8917793747666807, 0.89451908845154, 0.8424197834374936, 0.7598952407119619, 0.7832059164639751, 0.9617625014218179, 0.8963430088316504, 0.4887803370724654, 0.9109545424921657, 0.5318436795546182, 0.9498733743967636, 0.7253025503608977, 0.855337897791616, 0.5076943976918459, 0.906923058378295, 0.9381767755969468, 0.5998071806896054, 0.6615533517599935, 0.2572497507889638, 0.7556814728598797, 0.9582778026878329, 0.6362439585829495, 0.9365739931432338, 0.29943997880421824, 0.8769250379411355, 0.38466031842423953, 0.9750017397390569, 0.7639496783614648, 0.5412219101899178, 0.5102601887697077, 0.9442248897793943, 0.9692439075113215, 0.7929436912800465, 0.7741939441431783, 0.4668495886935264, 0.9041929640741897, 0.37828106820249585, 0.9455713410474389, 0.3565874055354602, 0.8119506730626463, 0.8349334433697306, 0.7286144481170467, 0.7860803806968684, 0.45601045567543047, 0.7761988507965935, 0.6017150080688712, 1.0, 0.9045578968398897, 0.46985530336379205, 0.7279692304347927]
Finish training and take 44m
Namespace(log_name='./xcodeeval/1/soft0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='c', output_dir='xcodeeval/1/soft0_codet5p_220m', data_dir='./data/xcodeeval/1', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include <stdio.h> #include <stdlib.h> void insertSort(int* a, int size) {     int i, j, tmp;     for (i = 1; i < size; ++i)     {         tmp = a[i];         for (j = i - 1; j >= 0 && a[j] < tmp; --j)             a[j + 1] = a[j];         a[j + 1] = tmp;     } } int check(int* a,int* b,int size) {     int i;     for(i=0;i<size;i++)     if (a[i]!=b[i]) return (a[i]);     return a[i]; } int main() {     int i,n,o1,o2;     scanf("%d",&n);     int a[n],b[n-1];     for (i=0;i<n;i++)         scanf("%d",&a[i]);     insertSort(a,n);     puts("First");     for (i=0;i<n-1;i++)         scanf("%d",&b[i]);     insertSort(b,n-1);     puts("Sec1");     o1=check(a,b,n);     puts("Sec2");     for (i=0;i<n-2;i++)         scanf("%d",&a[i]);     insertSort(a,n-2);     puts("Thir1");     o2=check(b,a,n-2);     puts("Thir2");     printf("%d\\n%d",o1,o2);     return 0; }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include <stdio.h> #include <stdlib.h>  int main() {     int i,n,x;     __int64 a=0,b=0,c=0;     scanf("%d",&n);     for (i=0; i<n; i++)     {         scanf("%d",&x);         a+=x;     }     for (i=0; i<n-1; i++)     {         scanf("%d",&x);         b+=x;     }     for (i=0; i<n-2; i++)     {         scanf("%d",&x);         c+=x;      }     printf("%I64d\\n%I64d",a-b,b-c);     return 0; }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 182
  train_loss = 74.5779
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.88 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.88
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 363
  train_loss = 61.2756
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.96 	 Previous best codebleu 75.88
  ********************
 Achieve Best bleu:75.96
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 544
  train_loss = 50.1812
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.81 	 Previous best codebleu 75.96
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 725
  train_loss = 41.6016
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.93 	 Previous best codebleu 75.96
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 906
  train_loss = 34.5799
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/1/validation.jsonl
  codebleu-4 = 75.88 	 Previous best codebleu 75.96
  ********************
early stopping!!!
reload model from xcodeeval/1/soft0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/xcodeeval/1/test.jsonl
  codebleu = 76.9 
  Total = 135 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 2 
[77, 123]
  ********************
  Total = 135 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 2 
[77, 123]
  codebleu = 76.9 
[0.7097922458866276, 0.9752926493864778, 0.8419188985107608, 0.8399493211101225, 0.5511737119063814, 0.8995033054005415, 0.655233513178001, 0.8131660563421435, 0.46249999999999997, 0.9295757649014529, 0.6700100781693141, 0.8881108167610436, 0.8920012172763082, 0.8635633094990022, 0.9250674011252755, 0.7938229814514498, 0.6068707460804744, 0.8143502770709957, 0.9126650482788027, 0.9832612094993938, 0.9498733743967636, 0.7584713945723569, 0.9054668285688956, 0.9304372254539681, 0.7521689663631371, 0.8986391637385749, 0.5012202683657422, 0.8381960842127558, 0.9358018387596505, 0.9876232981025004, 0.9857368328793006, 0.8463810160907537, 0.5003910292067191, 0.9389707093964361, 0.8215721780929075, 0.973858151522893, 0.6298491547945411, 0.9365819013624168, 0.46124203184813023, 0.9471982954514573, 0.6432679507343982, 0.6754292375001995, 0.41833335359899526, 0.48170226274723915, 0.7149195155805301, 0.8396113521805657, 0.9465012851429597, 0.973858151522893, 0.5677764741944027, 0.811100358881859, 0.9601466755014141, 0.33580645216805804, 0.9460916285283518, 0.7927906556865255, 0.46344533813736777, 0.9333310235672049, 0.8633660722321144, 0.6778336766746159, 0.9860950428335316, 0.5335581349704818, 0.9492384172683168, 0.936202385969982, 0.5077214223305908, 0.9702812943440167, 0.9793950344987075, 0.5951272961962228, 0.9334580759528754, 0.2857544178174171, 0.7598076383450478, 0.8753772142950917, 0.39101342264848765, 0.9604294079167424, 0.39536345674651, 0.9215748937941259, 0.8760369670517594, 0.9194422946236107, 0.8791990328029993, 0.8373834761279768, 0.8644554554879766, 0.8454546086981599, 0.7557818507099485, 0.7153375795187605, 0.8527875420817158, 0.9128071327141931, 0.9903793674040597, 0.8917793747666807, 0.89451908845154, 0.8424197834374936, 0.9638512181124372, 0.7832059164639751, 0.9617625014218179, 0.8963430088316504, 0.4887803370724654, 0.9109545424921657, 0.5355322041447821, 0.9498733743967636, 0.7253025503608977, 0.855337897791616, 0.5076943976918459, 0.906923058378295, 0.9381767755969468, 0.6202958011286538, 0.6492497039213253, 0.2572497507889638, 0.7556814728598797, 0.9582778026878329, 0.6362439585829495, 0.9365739931432338, 0.29943997880421824, 0.8769250379411355, 0.3752162382299256, 0.9750017397390569, 0.7639496783614648, 0.5412219101899178, 0.5102601887697077, 0.9442248897793943, 0.9692439075113215, 0.7929436912800465, 0.7741939441431783, 0.47854531008265005, 0.9041929640741897, 0.37828106820249585, 0.9455713410474389, 0.3565874055354602, 0.8119506730626463, 0.8349334433697306, 0.7286144481170467, 0.8241554247996095, 0.45601045567543047, 0.7761988507965935, 0.6017150080688712, 0.9142918920357144, 0.910618969189708, 0.46985530336379205, 0.7279692304347927]
Finish training and take 15m
