Namespace(log_name='./xcodeeval/2/soft1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='c', output_dir='xcodeeval/2/soft1_gptneo', data_dir='./data/xcodeeval/2', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=2)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include<stdio.h> long long a[100003],b[100003],x[100003]; int main() {     long long n,m,i,total=0,j;     scanf("%lld",&n);     a[0]=0;     b[0]=0;     for(i=1;i<=n;i++)     {         scanf("%lld",&a[i]);         total=total+a[i];         b[i]=total;     }     scanf("%lld",&m);     for(j=1;j<=m;j++)     {         scanf("%lld",&x[j]);     }     for(j=1;j<=m;j++)     {         for(i=1;i<=n;i++)         {             if(b[i]>=x[j])             {                 printf("%lld\\n",i);                 break;             }         }     }     return 0;  }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include<stdio.h> long long a[200000],b[200000]; int main() {     long long n,i,m,total=0,x,j,start,end,mid;     scanf("%lld",&n);     for(i=0;i<n;i++)     {         scanf("%lld",&a[i]);         total=total+a[i];         b[i]=total;     }     scanf("%lld",&m);     for(j=1;j<=m;j++)     {         scanf("%lld",&x);         if(x<=b[0])         {             printf("1\\n");         }         else if(x>=b[n-1])         {             printf("%lld\\n",n);         }         else         {             start=0;             end=n-1;             while(start<=end)             {                 mid=(start+end)/2;                 if(b[mid]>=x&&b[mid-1]<x)                 {                     printf("%lld\\n",(mid+1));                     break;                 }                 else if(b[mid]<x)                 {                     start=mid+1;                 }                 else if(b[mid]>=x&&b[mid-1]>=x)                 {                     end=mid-1;                 }             }         }     }     return 0;  }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 0
  eval_ppl = 1.0089250782250667e+33
  global_step = 182
  train_loss = 145.1078
  ********************
Previous best ppl:inf
Achieve Best ppl:1.0089250782250667e+33
  ********************
BLEU file: ./data/xcodeeval/2/validation.jsonl
  codebleu-4 = 76.15 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:76.15
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 1
  eval_ppl = 1.0010086756143958e+34
  global_step = 363
  train_loss = 60.2263
  ********************
Previous best ppl:1.0089250782250667e+33
BLEU file: ./data/xcodeeval/2/validation.jsonl
  codebleu-4 = 76.9 	 Previous best codebleu 76.15
  ********************
 Achieve Best bleu:76.9
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 2
  eval_ppl = 1.5766176543067707e+29
  global_step = 544
  train_loss = 43.1396
  ********************
Previous best ppl:1.0089250782250667e+33
Achieve Best ppl:1.5766176543067707e+29
  ********************
BLEU file: ./data/xcodeeval/2/validation.jsonl
  codebleu-4 = 77.23 	 Previous best codebleu 76.9
  ********************
 Achieve Best bleu:77.23
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 3
  eval_ppl = 1.6227995422761215e+44
  global_step = 725
  train_loss = 29.6987
  ********************
Previous best ppl:1.5766176543067707e+29
BLEU file: ./data/xcodeeval/2/validation.jsonl
  codebleu-4 = 76.73 	 Previous best codebleu 77.23
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 4
  eval_ppl = 1.1061827456564901e+35
  global_step = 906
  train_loss = 18.7276
  ********************
Previous best ppl:1.5766176543067707e+29
BLEU file: ./data/xcodeeval/2/validation.jsonl
  codebleu-4 = 76.77 	 Previous best codebleu 77.23
  ********************
early stopping!!!
reload model from xcodeeval/2/soft1_gptneo/checkpoint-best-bleu
BLEU file: ./data/xcodeeval/2/test.jsonl
  codebleu = 72.73 
  Total = 135 
  Exact Fixed = 3 
[88, 107, 120]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 1 
[100]
  ********************
  Total = 135 
  Exact Fixed = 3 
[88, 107, 120]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 1 
[100]
  codebleu = 72.73 
[0.39866608837580597, 0.5023065794143076, 0.9435265486810231, 0.86797759239489, 0.6353694670938503, 0.9762879730098617, 0.9895907412940455, 0.7177805199256334, 0.9561795403856062, 0.7141494776867402, 0.2559598986754519, 0.5844229263024725, 0.904590355528839, 0.3013588679008611, 0.03638680962604285, 0.9690929327610214, 0.5725320645398072, 0.740243186456651, 0.8840280108223306, 0.42502175764346617, 0.46397021372643144, 0.8861971446522757, 0.9780384047260811, 0.9617720754477719, 0.8424031755937416, 0.6201159722273546, 0.8697040065925576, 0.7950791435716638, 0.7952222947867109, 0.29476857896785025, 0.3878737250839708, 0.862850054120871, 0.9512127707026883, 0.9488790633951709, 0.6004280366320209, 0.6264576449062644, 0.4782027818671871, 0.9327115121337213, 0.18871986706244026, 0.596030258895899, 0.7219090712625591, 0.8207174296242723, 0.9251568164016057, 0.6406272585514035, 0.944905845113414, 0.9144169886968883, 0.9687829854371817, 0.940387748772268, 0.9840793393103271, 0.8806626901059751, 0.3047297501212361, 0.7162143583702325, 0.4657133305757337, 0.5807763826776465, 0.897868274842214, 0.9402139343391618, 0.8862841277509927, 0.6755177801665618, 0.4953415641367399, 0.7800574440621352, 0.7507584829026313, 0.9582778026878329, 0.9360674082443785, 0.556376903304558, 0.33070238333956836, 0.8886223888442533, 0.6691335802853828, 0.7510867123236671, 0.9768438379914091, 0.875725809740308, 0.9409244155109817, 0.8196951483104229, 0.7558323329080993, 0.6423888919043657, 0.3189454145575712, 0.7852033214625844, 0.6121167449974787, 0.978606091610698, 0.9219995708435906, 0.9609336279140019, 0.31976874551780043, 0.30666666666666664, 0.7269618142997433, 0.7157249744648765, 0.45301000973908595, 0.6434517800108057, 0.35565802228866766, 0.9872114221460186, 0.9343166704551076, 0.709805001952248, 0.6979780721244926, 0.9637360645128197, 0.8688277339527386, 0.8520901934159049, 0.7886954168222011, 0.5461719247723633, 0.9652541117011371, 0.8069755829126246, 0.7067236361805709, 0.9129059150601522, 0.4466796632469585, 0.5715313815373253, 0.4920880344612968, 0.2626947648235539, 0.98905613398207, 0.6951644390669244, 1.0, 0.4200245782702822, 0.9345121855559886, 0.4559058992495705, 0.7075619229391592, 0.7472051837618991, 0.8856566772820293, 0.912198238083447, 0.9143685812083902, 0.8818088825702113, 0.8157060304271155, 0.4335448943198981, 0.9615049129245392, 1.0, 0.39482295249653215, 0.9498733743967636, 0.8580298417070347, 0.8171220069513339, 0.6050860325789538, 0.50980793004376, 0.9645896373785567, 0.5818842126352378, 0.2621892956480607, 0.7390132416145816, 0.7680752406649723, 0.9056265825509175, 0.9612737738433852, 0.9750949338196533, 0.7348529689836785]
Finish training and take 1h12m
