Namespace(log_name='./xcodeeval/3/hard0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='c', output_dir='xcodeeval/3/hard0_codet5p_220m', data_dir='./data/xcodeeval/3', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=2)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include<stdio.h> int main() { int t,i=1; scanf("%d",&t); while(i<=t)  {  int s,a,b,c,d;  scanf("%d%d%d%d",&s,&a,&b,&c);  d=(s/c)+((s/a)*b);  printf("%d",d);  } return 0; }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': ' is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include<stdio.h> int main() { long long s,a,b,c,d,p; int t,i; scanf("%d",&t); for(i=1;i<=t;i++)  {  scanf("%I64d%I64d%I64d%I64d",&s,&a,&b,&c);  p=s/c;  d=(p)+((p/a)*b);  printf("%I64d\\n",d);  } return 0; }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10
Namespace(log_name='./xcodeeval/3/hard0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='c', output_dir='xcodeeval/3/hard0_codet5p_220m', data_dir='./data/xcodeeval/3', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=2)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include<stdio.h> int main() { int t,i=1; scanf("%d",&t); while(i<=t)  {  int s,a,b,c,d;  scanf("%d%d%d%d",&s,&a,&b,&c);  d=(s/c)+((s/a)*b);  printf("%d",d);  } return 0; }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': ' is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include<stdio.h> int main() { long long s,a,b,c,d,p; int t,i; scanf("%d",&t); for(i=1;i<=t;i++)  {  scanf("%I64d%I64d%I64d%I64d",&s,&a,&b,&c);  p=s/c;  d=(p)+((p/a)*b);  printf("%I64d\\n",d);  } return 0; }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 182
  train_loss = 72.0773
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.64 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.64
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 363
  train_loss = 58.2571
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.59 	 Previous best codebleu 75.64
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 544
  train_loss = 47.6787
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.58 	 Previous best codebleu 75.64
  ********************
early stopping!!!
reload model from xcodeeval/3/hard0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/xcodeeval/3/test.jsonl
  codebleu = 75.02 
  Total = 135 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 135 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 75.02 
[0.7802656127733693, 0.5360733989427605, 0.6311616600954335, 0.9444196474782112, 0.9759316203623163, 0.08651205986326166, 0.25656679901645385, 0.7669842146074164, 0.6498389062539932, 0.479569889108895, 0.5564880010186164, 0.8164468849403668, 0.8805670984187464, 0.9432628994248902, 0.9377858074101935, 0.9175636111085979, 0.38735431410528753, 0.947175667983928, 0.7822722252676139, 0.8187917419573252, 0.9705776794701617, 0.9735791100966684, 0.8333813540442871, 0.5524112337326081, 0.7657560530824576, 0.9450171055839813, 0.8324183912964096, 0.9343575548388978, 0.5790261988125887, 0.8896800467143886, 0.91412960455335, 0.4328828981880556, 0.63014750305347, 0.9716642922960141, 0.5925258544448675, 0.7259849312989834, 0.739909040388661, 0.9025560323310975, 0.5717465644724119, 0.9670641264245079, 0.867980815381816, 0.8583791034780668, 0.9306240015142291, 0.955626584171517, 0.7807079788494218, 0.8470562047308248, 0.9623079709182942, 0.6958892250412778, 0.950524665864859, 0.9312349008025642, 0.9323869806229541, 0.9828198222975641, 0.9549147975108003, 0.8518800417151922, 0.760840069363359, 0.9648891735454908, 0.8442458827589905, 0.9235042483378542, 0.951315622822358, 0.33295797590328613, 0.35624122019684656, 0.7982100679121421, 0.9217008915274616, 0.878087949536615, 0.9096266419399884, 0.9858263222388597, 0.9859658995808198, 0.15351946048762036, 0.9289471675486692, 0.8339849455214231, 0.9109344104254649, 0.9669138743101213, 0.9503712900963834, 0.9006565330934351, 0.9486092652092462, 0.6095574224256186, 0.8308197719965693, 0.8657268209604377, 0.6927725662122917, 0.8269793321315543, 0.8947151965627762, 0.9650446019275767, 0.7761391783604946, 0.9512693309096103, 0.5677893088427866, 0.7763879223350485, 0.26765125761038455, 0.9748374025939537, 0.9743329739145192, 0.8980952928375916, 0.5797226856861304, 0.48170226274723915, 0.9498733743967636, 0.6783819388991533, 0.30278837455257246, 0.821773975796796, 0.4196734157127252, 0.5331629480186568, 0.9258576635726143, 0.3913905692778357, 0.9555110270475338, 0.8887166921786569, 0.47266766836385843, 0.9534278780598358, 0.9393217253155881, 0.8897945586059963, 0.3355749130492112, 0.35148053648224986, 0.8956002753268077, 0.3868507250835175, 0.919755073180808, 0.3455555205176508, 0.4954735182274035, 0.9427008679312978, 0.5442886701759317, 0.3816802695568956, 0.8759700055210595, 0.7052622199542771, 0.9732456940628658, 0.817850581479403, 0.5510204081632653, 0.68941044587298, 0.7934303369700066, 0.9764351042658364, 0.4953415641367399, 0.6908535288138271, 0.9294284870142819, 0.37462332268897325, 0.37224533982578545, 0.4191471722230175, 0.9393874070011292, 0.9534993539333827, 0.7855314395331163, 0.4094542044720756, 0.3357637568330429]
Finish training and take 17m
Namespace(log_name='./xcodeeval/3/hard0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='c', output_dir='xcodeeval/3/hard0_codet5p_220m', data_dir='./data/xcodeeval/3', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include<stdio.h> int main() { int t,i=1; scanf("%d",&t); while(i<=t)  {  int s,a,b,c,d;  scanf("%d%d%d%d",&s,&a,&b,&c);  d=(s/c)+((s/a)*b);  printf("%d",d);  } return 0; }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': ' is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include<stdio.h> int main() { long long s,a,b,c,d,p; int t,i; scanf("%d",&t); for(i=1;i<=t;i++)  {  scanf("%I64d%I64d%I64d%I64d",&s,&a,&b,&c);  p=s/c;  d=(p)+((p/a)*b);  printf("%I64d\\n",d);  } return 0; }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 182
  train_loss = 72.2655
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 72.92 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:72.92
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 363
  train_loss = 58.5903
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.87 	 Previous best codebleu 72.92
  ********************
 Achieve Best bleu:75.87
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 544
  train_loss = 47.6238
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.71 	 Previous best codebleu 75.87
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 725
  train_loss = 40.0228
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 76.04 	 Previous best codebleu 75.87
  ********************
 Achieve Best bleu:76.04
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 906
  train_loss = 34.727
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.7 	 Previous best codebleu 76.04
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1087
  train_loss = 28.4421
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.85 	 Previous best codebleu 76.04
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1268
  train_loss = 24.0309
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 76.05 	 Previous best codebleu 76.04
  ********************
 Achieve Best bleu:76.05
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1449
  train_loss = 20.4098
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 76.12 	 Previous best codebleu 76.05
  ********************
 Achieve Best bleu:76.12
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 1630
  train_loss = 17.8436
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.86 	 Previous best codebleu 76.12
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 1811
  train_loss = 16.0047
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.89 	 Previous best codebleu 76.12
  ********************
reload model from xcodeeval/3/hard0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/xcodeeval/3/test.jsonl
  codebleu = 75.36 
  Total = 135 
  Exact Fixed = 4 
[27, 53, 72, 88]
  Syntax Fixed = 1 
[36]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 135 
  Exact Fixed = 4 
[27, 53, 72, 88]
  Syntax Fixed = 1 
[36]
  Cleaned Fixed = 0 
[]
  codebleu = 75.36 
[0.7802656127733693, 0.5373772294604137, 0.6311616600954335, 0.9503998344473819, 0.9759316203623163, 0.08651205986326166, 0.25656679901645385, 0.7669842146074164, 0.6498389062539932, 0.5124474841624163, 0.5564880010186164, 0.8164468849403668, 0.8805670984187464, 0.9432628994248902, 0.9377858074101935, 0.9175636111085979, 0.38735431410528753, 0.947175667983928, 0.7822722252676139, 0.8106836338492169, 0.9705776794701617, 0.9735791100966684, 0.8333813540442871, 0.5524112337326081, 0.7657560530824576, 0.9450171055839813, 1.0, 0.9343575548388978, 0.5790261988125887, 0.8896800467143886, 0.91412960455335, 0.4676655068837078, 0.63014750305347, 0.9716642922960141, 0.5925258544448675, 0.9215834056802388, 0.739909040388661, 0.9025560323310975, 0.5717465644724119, 0.9670641264245079, 0.867980815381816, 0.8583791034780668, 0.9306240015142291, 0.9080790354560686, 0.7807079788494218, 0.8470562047308248, 0.9623079709182942, 0.6998344305207298, 0.950524665864859, 0.9292979625847417, 0.9712222651426679, 0.9828198222975641, 1.0, 0.8633963363946109, 0.760840069363359, 0.9648891735454908, 0.8364536749667827, 0.9477813702498612, 0.951315622822358, 0.33295797590328613, 0.35624122019684656, 0.7982100679121421, 0.9217008915274616, 0.8689970404457057, 0.8997876889229868, 0.944721654597257, 0.9859658995808198, 0.15351946048762036, 0.888272929815244, 0.8339849455214231, 0.9109344104254649, 1.0, 0.9503712900963834, 0.9444842541441154, 0.9426081969205353, 0.5923377715628043, 0.7373915394095187, 0.8657268209604377, 0.6927725662122917, 0.8269793321315543, 0.8947151965627762, 0.9650446019275767, 0.7761391783604946, 0.9512693309096103, 0.5677893088427866, 0.7763879223350485, 0.26765125761038455, 1.0, 0.9743329739145192, 0.8980952928375916, 0.5797226856861304, 0.48170226274723915, 0.9498733743967636, 0.6627312397377404, 0.30278837455257246, 0.821773975796796, 0.4196734157127252, 0.6352418602881265, 0.9258576635726143, 0.3913905692778357, 0.9555110270475338, 0.9676445756671592, 0.47266766836385843, 0.9534278780598358, 0.9393217253155881, 0.8897945586059963, 0.3355749130492112, 0.35148053648224986, 0.9468383894696302, 0.3868507250835175, 0.919755073180808, 0.3455555205176508, 0.4954735182274035, 0.9427008679312978, 0.5442886701759317, 0.3816802695568956, 0.8759700055210595, 0.7052622199542771, 0.9732456940628658, 0.817850581479403, 0.421906779661017, 0.68941044587298, 0.7934303369700066, 0.9764351042658364, 0.4953415641367399, 0.6908535288138271, 0.9294284870142819, 0.37462332268897325, 0.37224533982578545, 0.4191471722230175, 0.9393874070011292, 0.9534993539333827, 0.7855314395331163, 0.4094542044720756, 0.3357637568330429]
Finish training and take 29m
Namespace(log_name='./xcodeeval/3/hard0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='c', output_dir='xcodeeval/3/hard0_codet5p_220m', data_dir='./data/xcodeeval/3', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': '#include<stdio.h> int main() { int t,i=1; scanf("%d",&t); while(i<=t)  {  int s,a,b,c,d;  scanf("%d%d%d%d",&s,&a,&b,&c);  d=(s/c)+((s/a)*b);  printf("%d",d);  } return 0; }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': ' is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': '#include<stdio.h> int main() { long long s,a,b,c,d,p; int t,i; scanf("%d",&t); for(i=1;i<=t;i++)  {  scanf("%I64d%I64d%I64d%I64d",&s,&a,&b,&c);  p=s/c;  d=(p)+((p/a)*b);  printf("%I64d\\n",d);  } return 0; }'}]
***** Running training *****
  Num examples = 1082
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 182
  train_loss = 71.7608
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.94 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.94
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 363
  train_loss = 58.0608
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.89 	 Previous best codebleu 75.94
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 544
  train_loss = 48.0895
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.57 	 Previous best codebleu 75.94
  ********************

***** Running evaluation *****
  Num examples = 136
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 725
  train_loss = 39.7736
  ********************
Previous best ppl:inf
BLEU file: ./data/xcodeeval/3/validation.jsonl
  codebleu-4 = 75.87 	 Previous best codebleu 75.94
  ********************
early stopping!!!
reload model from xcodeeval/3/hard0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/xcodeeval/3/test.jsonl
  codebleu = 75.02 
  Total = 135 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 135 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 75.02 
[0.7802656127733693, 0.5260935064973029, 0.6311616600954335, 0.9503998344473819, 0.9759316203623163, 0.08651205986326166, 0.25656679901645385, 0.7669842146074164, 0.6450304794017896, 0.479569889108895, 0.5564880010186164, 0.8164468849403668, 0.8805670984187464, 0.9432628994248902, 0.9377858074101935, 0.9175636111085979, 0.38735431410528753, 0.947175667983928, 0.7822722252676139, 0.8106836338492169, 0.9705776794701617, 0.9735791100966684, 0.8333813540442871, 0.5524112337326081, 0.7657560530824576, 0.9450171055839813, 0.8324183912964096, 0.9247096249432103, 0.5790261988125887, 0.8896800467143886, 0.91412960455335, 0.4328828981880556, 0.63014750305347, 0.9716642922960141, 0.5925258544448675, 0.7259849312989834, 0.739909040388661, 0.9025560323310975, 0.5717465644724119, 0.9670641264245079, 0.867980815381816, 0.8583791034780668, 0.9306240015142291, 0.955626584171517, 0.7807079788494218, 0.8470562047308248, 0.9623079709182942, 0.7096640442883391, 0.950524665864859, 0.9312349008025642, 0.9323869806229541, 0.9828198222975641, 0.9549147975108003, 0.8518800417151922, 0.7801949080730365, 0.9648891735454908, 0.8403497788628866, 0.9477813702498612, 0.951315622822358, 0.33295797590328613, 0.35624122019684656, 0.7982100679121421, 0.9217008915274616, 0.878087949536615, 0.9096266419399884, 0.9858263222388597, 0.9859658995808198, 0.15351946048762036, 0.9289471675486692, 0.8339849455214231, 0.9109344104254649, 0.9669138743101213, 0.9503712900963834, 0.9006565330934351, 0.9525069902299836, 0.6095574224256186, 0.8308197719965693, 0.8657268209604377, 0.6927725662122917, 0.8269793321315543, 0.8947151965627762, 0.9650446019275767, 0.7761391783604946, 0.9512693309096103, 0.5677893088427866, 0.7763879223350485, 0.26765125761038455, 0.9748374025939537, 0.9743329739145192, 0.8980952928375916, 0.5797226856861304, 0.48170226274723915, 0.9498733743967636, 0.6783819388991533, 0.30278837455257246, 0.821773975796796, 0.4196734157127252, 0.5331629480186568, 0.9258576635726143, 0.3913905692778357, 0.9555110270475338, 0.8887166921786569, 0.47266766836385843, 0.9534278780598358, 0.8844800380249439, 0.8897945586059963, 0.3355749130492112, 0.35148053648224986, 0.8956002753268077, 0.3868507250835175, 0.919755073180808, 0.3455555205176508, 0.4954735182274035, 0.9427008679312978, 0.5442886701759317, 0.3816802695568956, 0.8759700055210595, 0.7052622199542771, 0.9732456940628658, 0.817850581479403, 0.6131424394366902, 0.68941044587298, 0.767483442004329, 0.9764351042658364, 0.4953415641367399, 0.6908535288138271, 0.9294284870142819, 0.37462332268897325, 0.37224533982578545, 0.4191471722230175, 0.9393874070011292, 0.9483341848027562, 0.7855314395331163, 0.4094542044720756, 0.3357637568330429]
Finish training and take 17m
