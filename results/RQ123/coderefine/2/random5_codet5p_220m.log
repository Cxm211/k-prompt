Namespace(log_name='./result/coderefine/2/random5_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='java', output_dir='result/coderefine/2/random5_codet5p_220m', data_dir='./data/coderefine/2', choice=5, no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'is buggy program', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } this . VAR_1 = VAR_1 ; }'}]
***** Running training *****
  Num examples = 523
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 0
  eval_ppl = 2.1738802838111003e+258
  global_step = 132
  train_loss = 20.9073
  ********************
Previous best ppl:inf
Achieve Best ppl:2.1738802838111003e+258
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 82.27 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:82.27
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 1
  eval_ppl = 1.513052182741367e+258
  global_step = 263
  train_loss = 14.3603
  ********************
Previous best ppl:2.1738802838111003e+258
Achieve Best ppl:1.513052182741367e+258
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 82.79 	 Previous best codebleu 82.27
  ********************
 Achieve Best bleu:82.79
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 2
  eval_ppl = 1.2646587128915445e+255
  global_step = 394
  train_loss = 9.9632
  ********************
Previous best ppl:1.513052182741367e+258
Achieve Best ppl:1.2646587128915445e+255
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.97 	 Previous best codebleu 82.79
  ********************
 Achieve Best bleu:83.97
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 3
  eval_ppl = 3.172052360070077e+251
  global_step = 525
  train_loss = 7.2055
  ********************
Previous best ppl:1.2646587128915445e+255
Achieve Best ppl:3.172052360070077e+251
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.58 	 Previous best codebleu 83.97
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 4
  eval_ppl = 5.764788929210611e+252
  global_step = 656
  train_loss = 5.3431
  ********************
Previous best ppl:3.172052360070077e+251
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.73 	 Previous best codebleu 83.97
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 5
  eval_ppl = 4.089329159166796e+252
  global_step = 787
  train_loss = 3.9539
  ********************
Previous best ppl:3.172052360070077e+251
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.38 	 Previous best codebleu 83.97
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 6
  eval_ppl = 1.3664987838058847e+247
  global_step = 918
  train_loss = 2.9607
  ********************
Previous best ppl:3.172052360070077e+251
Achieve Best ppl:1.3664987838058847e+247
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 84.54 	 Previous best codebleu 83.97
  ********************
 Achieve Best bleu:84.54
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 7
  eval_ppl = 3.606404633156575e+248
  global_step = 1049
  train_loss = 2.0913
  ********************
Previous best ppl:1.3664987838058847e+247
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 84.22 	 Previous best codebleu 84.54
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 8
  eval_ppl = 2.0212210896703325e+249
  global_step = 1180
  train_loss = 1.5879
  ********************
Previous best ppl:1.3664987838058847e+247
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 84.56 	 Previous best codebleu 84.54
  ********************
 Achieve Best bleu:84.56
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 9
  eval_ppl = 1.6320425897370425e+252
  global_step = 1311
  train_loss = 1.2374
  ********************
Previous best ppl:1.3664987838058847e+247
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 84.44 	 Previous best codebleu 84.56
  ********************
reload model from result/coderefine/2/random5_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/coderefine/2/test.jsonl
  codebleu = 86.7 
  Total = 65 
  Exact Fixed = 1 
[32]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 1 
[45]
  ********************
  Total = 65 
  Exact Fixed = 1 
[32]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 1 
[45]
  codebleu = 86.7 
[0.974561592577996, 0.7280362060141737, 0.989310412154881, 0.9158219110632493, 0.7909116860917069, 0.7614320201110889, 0.961313257959808, 0.9288050435889952, 0.8440896537679332, 0.877350240374605, 0.8039692791142715, 0.672835396865929, 0.8544562509325568, 0.7452002872503072, 0.6813852958361807, 0.8814119980991142, 0.7528403747516164, 0.837110375724428, 0.9304890334445721, 0.7110903199480014, 0.934542853545171, 1.0, 0.9011891267250418, 0.9819400729018484, 0.8366391585396613, 0.9552973981415056, 0.6729569730451757, 0.9397671148398172, 0.9864954811310649, 0.7634166771283539, 0.9061826429612323, 1.0, 0.9030406908423083, 0.8419990835046497, 0.7746170962173502, 0.9931999228851198, 0.8498217743458556, 0.9138009570203506, 0.9175688234132582, 0.8597687694634735, 0.934378575588243, 0.8778780869299587, 0.910207411261359, 0.9809905131005436, 0.9221557993275098, 0.8918501343788632, 0.7583556269641405, 0.906935406465484, 0.9256457314590425, 0.9482093418654862, 0.8044795411118251, 0.6464046753848991, 0.9829277991416243, 0.8364841891217798, 0.7299220384551639, 0.945929061225333, 0.9106502668410179, 0.774652015702356, 0.6801540738059678, 0.8664336345018628, 0.8879531526601372, 0.9166487297487674, 0.9773276007446154, 0.9805596968667925, 0.782250792342061]
Finish training and take 12m
