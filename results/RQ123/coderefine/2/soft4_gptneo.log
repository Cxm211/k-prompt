Namespace(log_name='./coderefine/2/soft4_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='java', output_dir='coderefine/2/soft4_gptneo', data_dir='./data/coderefine/2', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=2, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } this . VAR_1 = VAR_1 ; }'}]
***** Running training *****
  Num examples = 523
  Batch size = 2
  Num epoch = 10

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 0
  eval_ppl = 2.9537376134749244e+16
  global_step = 263
  train_loss = 24.6951
  ********************
Previous best ppl:inf
Achieve Best ppl:2.9537376134749244e+16
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 67.61 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:67.61
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 1
  eval_ppl = 7.752430636277094e+18
  global_step = 525
  train_loss = 12.6715
  ********************
Previous best ppl:2.9537376134749244e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 78.78 	 Previous best codebleu 67.61
  ********************
 Achieve Best bleu:78.78
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 2
  eval_ppl = 1.7938403821965342e+16
  global_step = 787
  train_loss = 8.1879
  ********************
Previous best ppl:2.9537376134749244e+16
Achieve Best ppl:1.7938403821965342e+16
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 82.28 	 Previous best codebleu 78.78
  ********************
 Achieve Best bleu:82.28
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 3
  eval_ppl = 1.8070563718753842e+25
  global_step = 1049
  train_loss = 5.2969
  ********************
Previous best ppl:1.7938403821965342e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 78.85 	 Previous best codebleu 82.28
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 4
  eval_ppl = 3.3949129973003154e+21
  global_step = 1311
  train_loss = 3.5659
  ********************
Previous best ppl:1.7938403821965342e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 82.76 	 Previous best codebleu 82.28
  ********************
 Achieve Best bleu:82.76
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 5
  eval_ppl = 4.56567342208534e+18
  global_step = 1573
  train_loss = 2.0108
  ********************
Previous best ppl:1.7938403821965342e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 82.95 	 Previous best codebleu 82.76
  ********************
 Achieve Best bleu:82.95
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 6
  eval_ppl = 5.3934465534914646e+32
  global_step = 1835
  train_loss = 1.1221
  ********************
Previous best ppl:1.7938403821965342e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 82.56 	 Previous best codebleu 82.95
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 7
  eval_ppl = 1.797929684578716e+41
  global_step = 2097
  train_loss = 0.5909
  ********************
Previous best ppl:1.7938403821965342e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.23 	 Previous best codebleu 82.95
  ********************
 Achieve Best bleu:83.23
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 8
  eval_ppl = 4.0118851930486444e+38
  global_step = 2359
  train_loss = 0.2408
  ********************
Previous best ppl:1.7938403821965342e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.68 	 Previous best codebleu 83.23
  ********************
 Achieve Best bleu:83.68
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 9
  eval_ppl = 2.6204726243689357e+38
  global_step = 2621
  train_loss = 0.0926
  ********************
Previous best ppl:1.7938403821965342e+16
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.79 	 Previous best codebleu 83.68
  ********************
 Achieve Best bleu:83.79
  ********************
reload model from coderefine/2/soft4_gptneo/checkpoint-best-bleu
BLEU file: ./data/coderefine/2/test.jsonl
  codebleu = 86.41 
  Total = 65 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 1 
[45]
  ********************
  Total = 65 
  Exact Fixed = 0 
[]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 1 
[45]
  codebleu = 86.41 
[0.974561592577996, 0.7590961818320129, 0.989310412154881, 0.9158219110632493, 0.7833648609702594, 0.7614320201110889, 0.961313257959808, 0.9288050435889952, 0.8440896537679332, 0.877350240374605, 0.8802691274728712, 0.7008082096493281, 0.8437419652182712, 0.7214442588961294, 0.6813852958361807, 0.8814119980991142, 0.780954241736842, 0.837110375724428, 0.9304890334445721, 0.7110903199480014, 0.934542853545171, 1.0, 0.8824391267250419, 0.9819400729018484, 0.8366391585396613, 0.9552973981415056, 0.6729569730451757, 0.9397671148398172, 0.9864954811310649, 0.7724193937083985, 0.8993644611430505, 0.8461250639493609, 0.9030406908423083, 0.835477344374215, 0.7746170962173502, 0.9931999228851198, 0.8285211183753238, 0.9138009570203506, 0.9175688234132582, 0.8597687694634735, 0.934378575588243, 0.8778780869299587, 0.8928234031555244, 0.9809905131005436, 0.9221557993275098, 0.8918501343788632, 0.7583556269641405, 0.906935406465484, 0.9256457314590425, 0.9482093418654862, 0.8275564641887483, 0.6199000097150247, 0.9829277991416243, 0.7701990162229027, 0.7299220384551639, 0.945929061225333, 0.9106502668410179, 0.774652015702356, 0.6801540738059678, 0.8664336345018628, 0.8137180233711813, 0.8931223186268689, 0.9773276007446154, 0.9532869695940651, 0.8815931491828888]
Finish training and take 2h17m
