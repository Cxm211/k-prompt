Namespace(log_name='./coderefine/2/soft6_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='java', output_dir='coderefine/2/soft6_codet5p_770m', data_dir='./data/coderefine/2', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } }', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'is buggy program', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } this . VAR_1 = VAR_1 ; }'}]
***** Running training *****
  Num examples = 523
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 0
  eval_ppl = 6.33075570858501e+260
  global_step = 89
  train_loss = 17.282
  ********************
Previous best ppl:inf
Achieve Best ppl:6.33075570858501e+260
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 82.95 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:82.95
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 1
  eval_ppl = 6.815423685644987e+275
  global_step = 177
  train_loss = 10.8506
  ********************
Previous best ppl:6.33075570858501e+260
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 81.79 	 Previous best codebleu 82.95
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 2
  eval_ppl = 1.1180817912545878e+263
  global_step = 265
  train_loss = 6.5134
  ********************
Previous best ppl:6.33075570858501e+260
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 81.66 	 Previous best codebleu 82.95
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 3
  eval_ppl = 9.60835763991298e+253
  global_step = 353
  train_loss = 4.5536
  ********************
Previous best ppl:6.33075570858501e+260
Achieve Best ppl:9.60835763991298e+253
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.89 	 Previous best codebleu 82.95
  ********************
 Achieve Best bleu:83.89
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 4
  eval_ppl = 1.4790849102495056e+265
  global_step = 441
  train_loss = 2.9781
  ********************
Previous best ppl:9.60835763991298e+253
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.2 	 Previous best codebleu 83.89
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 5
  eval_ppl = 1.111111048761813e+252
  global_step = 529
  train_loss = 1.9049
  ********************
Previous best ppl:9.60835763991298e+253
Achieve Best ppl:1.111111048761813e+252
  ********************
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.6 	 Previous best codebleu 83.89
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 6
  eval_ppl = 6.5540971953490725e+258
  global_step = 617
  train_loss = 1.2592
  ********************
Previous best ppl:1.111111048761813e+252
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 83.89 	 Previous best codebleu 83.89
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 7
  eval_ppl = 4.24240341092381e+256
  global_step = 705
  train_loss = 0.7667
  ********************
Previous best ppl:1.111111048761813e+252
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 84.1 	 Previous best codebleu 83.89
  ********************
 Achieve Best bleu:84.1
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 8
  eval_ppl = 1.2122618256508712e+259
  global_step = 793
  train_loss = 0.6115
  ********************
Previous best ppl:1.111111048761813e+252
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 84.06 	 Previous best codebleu 84.1
  ********************

***** Running evaluation *****
  Num examples = 68
  Batch size = 4
  epoch = 9
  eval_ppl = 3.644252034147113e+261
  global_step = 881
  train_loss = 0.352
  ********************
Previous best ppl:1.111111048761813e+252
BLEU file: ./data/coderefine/2/validation.jsonl
  codebleu-4 = 84.18 	 Previous best codebleu 84.1
  ********************
 Achieve Best bleu:84.18
  ********************
reload model from coderefine/2/soft6_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/coderefine/2/test.jsonl
  codebleu = 85.97 
  Total = 65 
  Exact Fixed = 2 
[32, 52]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 65 
  Exact Fixed = 2 
[32, 52]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 85.97 
[0.974561592577996, 0.7590961818320129, 0.989310412154881, 0.9158219110632493, 0.7909116860917069, 0.7614320201110889, 0.7384251600152855, 0.9288050435889952, 0.8440896537679332, 0.877350240374605, 0.8802691274728712, 0.7008082096493281, 0.8651705366468426, 0.7495566360439391, 0.6813852958361807, 0.8814119980991142, 0.8288970321608782, 0.837110375724428, 0.9304890334445721, 0.7110903199480014, 0.934542853545171, 1.0, 0.869986681961724, 0.9819400729018484, 0.8366391585396613, 0.8979100304056242, 0.6542069730451757, 0.9397671148398172, 0.9864954811310649, 0.7724193937083985, 0.8993644611430505, 1.0, 0.9030406908423083, 0.835477344374215, 0.7746170962173502, 0.9064241005152671, 0.7146632012030583, 0.9138009570203506, 0.8692632292959194, 0.8486046634803054, 0.8875945646434347, 0.8778780869299587, 0.9066257190466933, 0.9809905131005436, 0.7592920925929678, 0.8918501343788632, 0.7583556269641405, 0.906935406465484, 0.9256457314590425, 0.9482093418654862, 0.8044795411118251, 1.0, 0.9829277991416243, 0.7701990162229027, 0.7299220384551639, 0.945929061225333, 0.9106502668410179, 0.774652015702356, 0.6801540738059678, 0.8664336345018628, 0.8351465947997527, 0.8385998912799539, 0.9773276007446154, 0.9532869695940651, 0.782250792342061]
Finish training and take 40m
