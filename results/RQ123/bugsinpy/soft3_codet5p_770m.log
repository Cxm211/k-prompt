Namespace(log_name='./bugsinpy/soft3_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='bugsinpy/soft3_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'fixed program is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 937
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 158
  train_loss = 58.2446
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.73 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.73
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 315
  train_loss = 34.9151
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.34 	 Previous best codebleu 74.73
  ********************
 Achieve Best bleu:76.34
  ********************
Namespace(log_name='./bugsinpy/soft3_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='bugsinpy/soft3_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'fixed program is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 937
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 158
  train_loss = 58.2446
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.73 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.73
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 315
  train_loss = 34.9151
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.34 	 Previous best codebleu 74.73
  ********************
 Achieve Best bleu:76.34
  ********************
Namespace(log_name='./bugsinpy/soft3_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='bugsinpy/soft3_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'fixed program is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 937
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 236
  train_loss = 57.8556
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.0 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.0
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 471
  train_loss = 35.6635
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.85 	 Previous best codebleu 74.0
  ********************
 Achieve Best bleu:75.85
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 706
  train_loss = 19.2641
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.11 	 Previous best codebleu 75.85
  ********************
 Achieve Best bleu:77.11
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 941
  train_loss = 10.8389
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.95 	 Previous best codebleu 77.11
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1176
  train_loss = 5.9425
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.21 	 Previous best codebleu 77.11
  ********************
 Achieve Best bleu:78.21
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1411
  train_loss = 3.3389
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.31 	 Previous best codebleu 78.21
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1646
  train_loss = 2.04
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.23 	 Previous best codebleu 78.21
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1881
  train_loss = 1.2687
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.23 	 Previous best codebleu 78.21
  ********************
 Achieve Best bleu:78.23
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2116
  train_loss = 0.8628
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.79 	 Previous best codebleu 78.23
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2351
  train_loss = 0.6481
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.74 	 Previous best codebleu 78.23
  ********************
reload model from bugsinpy/soft3_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 77.17 
  Total = 122 
  Exact Fixed = 22 
[8, 24, 27, 31, 34, 48, 57, 58, 62, 65, 73, 76, 80, 98, 101, 108, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[1]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 22 
[8, 24, 27, 31, 34, 48, 57, 58, 62, 65, 73, 76, 80, 98, 101, 108, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[1]
  Cleaned Fixed = 0 
[]
  codebleu = 77.17 
[0.8303820072639354, 0.7705140023181007, 0.6557886570955636, 0.37083870123065255, 0.9063467386633746, 0.6710385019089349, 0.9411542454583528, 1.0, 0.8300638244826566, 0.5571314709024371, 0.7953587603777192, 0.9666856331752072, 0.6316391998175341, 0.7042491754748079, 0.6011748879306833, 0.7768711691119308, 0.6883720951974961, 0.6936199831009335, 0.8971695160234401, 0.8856389378075658, 0.8642706682188466, 0.68412623369793, 0.6775716059277764, 1.0, 0.40731345397083646, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7053894038892353, 1.0, 0.8754092712592991, 0.8808919461147899, 0.7283421666422167, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.5043038901174404, 0.9142445273649933, 0.7093853536262804, 0.788050295413492, 0.5697993048569746, 1.0, 0.44614066506456135, 0.6038577745749659, 0.7255684925842691, 0.8077895563342797, 0.8782734899756608, 0.5096459235458725, 0.5370157883697394, 0.9309470682699423, 1.0, 1.0, 0.5911195501972704, 0.8362747318435784, 0.5117566728908322, 0.9847962409659572, 0.5767084530894689, 0.7042953619649426, 1.0, 0.6502002482190439, 0.2599906717142791, 0.7652740132249347, 0.46235547333907545, 0.7095762239356153, 0.7481713002943808, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 1.0, 0.8434652034268404, 0.5783615269278233, 0.3031200238102166, 1.0, 0.676525822803221, 0.7094938920491491, 0.36033378139112465, 0.8096114788906146, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.5218510181581382, 0.5212487403397368, 0.767723111687518, 0.8052065398794905, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.4853778236842611, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.8648088911909317, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 1.0, 1.0, 0.9355467351067721, 0.8054823549932149, 0.7225931341121177, 0.7639654153934541, 1.0, 0.6877450065623492, 0.9399649879642329, 0.6606977080382341, 0.5749585113918392, 0.6830881092508377, 1.0, 1.0, 0.6780471420092301]
Finish training and take 1h19m
