Namespace(log_name='./bugsinpy/soft2_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='bugsinpy/soft2_codet5p_220m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix the bug in', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 937
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 236
  train_loss = 67.0733
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.37 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.37
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 471
  train_loss = 45.6951
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 70.98 	 Previous best codebleu 74.37
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 706
  train_loss = 30.4542
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.8 	 Previous best codebleu 74.37
  ********************
 Achieve Best bleu:76.8
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 941
  train_loss = 20.612
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.61 	 Previous best codebleu 76.8
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1176
  train_loss = 14.5873
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.11 	 Previous best codebleu 76.8
  ********************
 Achieve Best bleu:78.11
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1411
  train_loss = 10.4341
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.42 	 Previous best codebleu 78.11
  ********************
 Achieve Best bleu:78.42
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1646
  train_loss = 7.1697
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.99 	 Previous best codebleu 78.42
  ********************
 Achieve Best bleu:78.99
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1881
  train_loss = 5.4333
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.05 	 Previous best codebleu 78.99
  ********************
 Achieve Best bleu:79.05
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2116
  train_loss = 4.0844
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.61 	 Previous best codebleu 79.05
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2351
  train_loss = 3.4659
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.23 	 Previous best codebleu 79.05
  ********************
reload model from bugsinpy/soft2_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 77.22 
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 57, 58, 62, 65, 73, 76, 101, 109, 110, 114, 116, 120]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 57, 58, 62, 65, 73, 76, 101, 109, 110, 114, 116, 120]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 77.22 
[0.7711500935239444, 0.8505702153233261, 0.6601281703247908, 0.47166395418323315, 0.9063467386633746, 0.6533914430854055, 0.9411542454583528, 1.0, 0.7953063269679879, 0.5571314709024371, 0.68965030200429, 0.9666856331752072, 0.7714650156104186, 0.7398658182365634, 0.5824496852666639, 0.7768711691119308, 0.6883720951974961, 0.6936199831009335, 0.8971695160234401, 0.8856389378075658, 0.7002260446833343, 0.7443181170763433, 0.8884573785188872, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.7989961615839867, 0.45472562564808194, 0.4545507520171642, 1.0, 0.9474759345795825, 0.6853803599169206, 1.0, 0.7896354401872717, 0.8808919461147899, 0.7283421666422167, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.1236756043849987, 0.9142445273649933, 0.7093853536262804, 0.6991468984827918, 0.62327537336927, 0.8548397899287874, 0.4740532618616287, 0.5921911079082992, 0.7715012035371895, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9309470682699423, 1.0, 1.0, 0.5911195501972704, 0.8022604263379136, 0.517352076574378, 0.9847962409659572, 0.6939112308588368, 0.7042953619649426, 1.0, 0.8352894783834772, 0.20867343826082332, 0.6356257812621184, 0.5037077119806818, 0.5536484059329159, 0.7286052536335244, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 1.0, 0.8434652034268404, 0.6025441338858055, 0.3031200238102166, 0.9472873156881443, 0.676525822803221, 0.6716794797967491, 0.49150427670545643, 0.8096114788906146, 0.6293814912417595, 0.7449734989717058, 0.8871978499693505, 0.5218510181581382, 0.6651197007114735, 0.6511572092266381, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.7332519354895861, 0.8336108571661149, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7681899150975824, 0.8527547497767987, 0.8233676046914074, 0.782053171927164, 0.8928766700547339, 0.8754861943073293, 0.8768686925984219, 1.0, 0.9355467351067721, 0.8385834949297515, 0.7225931341121177, 0.7639654153934541, 1.0, 0.9114766235414771, 0.9399649879642329, 0.610067068626702, 0.7793778739518044, 0.8631855387221548, 1.0, 0.8475078982959625, 0.7032270811112566]
Finish training and take 24m
