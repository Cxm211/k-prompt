Namespace(log_name='./result/bugsinpy/random3_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='result/bugsinpy/random3_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=3, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'fixed program is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 54.3258
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.64 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.64
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 32.5367
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.3 	 Previous best codebleu 74.64
  ********************
 Achieve Best bleu:78.3
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 18.2624
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.31 	 Previous best codebleu 78.3
  ********************
 Achieve Best bleu:78.31
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 10.5194
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.92 	 Previous best codebleu 78.31
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 6.0826
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.75 	 Previous best codebleu 78.31
  ********************
 Achieve Best bleu:78.75
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 3.0991
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.63 	 Previous best codebleu 78.75
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 1.8857
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.65 	 Previous best codebleu 78.75
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 1.2987
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.21 	 Previous best codebleu 78.75
  ********************
 Achieve Best bleu:79.21
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 0.8059
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.37 	 Previous best codebleu 79.21
  ********************
 Achieve Best bleu:79.37
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2331
  train_loss = 0.5987
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.07 	 Previous best codebleu 79.37
  ********************
reload model from result/bugsinpy/random3_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 74.75 
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 74.75 
[0.42877100737302776, 0.8505702153233261, 0.4141311292908625, 0.3023890208474152, 0.832017097218277, 0.6710385019089349, 0.9411542454583528, 1.0, 0.7953063269679879, 0.5571314709024371, 0.7953587603777192, 0.4358831191087079, 0.6277077482046309, 0.7684009548948627, 0.6531059959405039, 0.7768711691119308, 0.6883720951974961, 0.6936199831009335, 0.8971695160234401, 0.4707924623113833, 0.8642706682188466, 0.1826348262350791, 0.7132642165763982, 1.0, 0.48872372151817023, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7217017872886777, 1.0, 0.7896354401872717, 0.8808919461147899, 0.7283421666422167, 0.7420541780659815, 0.522700245052407, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.10894267292550816, 0.9142445273649933, 0.7093853536262804, 0.6991468984827918, 0.5533794290743125, 0.7882773396727158, 0.5476431965885501, 0.6242275051672941, 0.7572154892514751, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.586678988168406, 0.9309470682699423, 1.0, 1.0, 0.5911195501972704, 0.8362747318435784, 0.5117566728908322, 0.9847962409659572, 0.6939112308588368, 0.5844803074896427, 0.8195222253737042, 0.6502002482190439, 0.21639402649611747, 0.5970503880018869, 0.3765811737351856, 0.7095762239356153, 0.7410003172869702, 0.7319940085727452, 1.0, 0.6441425627537012, 0.6530224530296921, 1.0, 0.8434652034268404, 0.6462541125586169, 0.2552104334919992, 1.0, 0.676525822803221, 0.7269877300065206, 0.5614877244306854, 0.8096114788906146, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.47862910927753755, 0.6516334094610028, 0.6858578888786369, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.7095867076974078, 0.7946728580680849, 0.6339903326368657, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.8726298056056425, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8789801838086921, 1.0, 0.9355467351067721, 0.8038883770438103, 0.7225931341121177, 0.7639654153934541, 1.0, 0.9114766235414771, 0.9399649879642329, 0.6598213631275042, 0.6195389262040769, 0.6484727246354532, 1.0, 1.0, 0.7220447926250532]
Finish training and take 55m
Namespace(log_name='./result/bugsinpy/random3_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='result/bugsinpy/random3_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=3, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'fixed program is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 54.3258
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.64 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.64
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 32.5367
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.3 	 Previous best codebleu 74.64
  ********************
 Achieve Best bleu:78.3
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 18.2624
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.31 	 Previous best codebleu 78.3
  ********************
 Achieve Best bleu:78.31
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 10.5194
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.92 	 Previous best codebleu 78.31
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 6.0826
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.75 	 Previous best codebleu 78.31
  ********************
 Achieve Best bleu:78.75
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 3.0991
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.63 	 Previous best codebleu 78.75
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 1.8857
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.65 	 Previous best codebleu 78.75
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 1.2987
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.21 	 Previous best codebleu 78.75
  ********************
 Achieve Best bleu:79.21
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 0.8059
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.37 	 Previous best codebleu 79.21
  ********************
 Achieve Best bleu:79.37
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2331
  train_loss = 0.5987
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.07 	 Previous best codebleu 79.37
  ********************
reload model from result/bugsinpy/random3_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 74.75 
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 74.75 
[0.42877100737302776, 0.8505702153233261, 0.4141311292908625, 0.3023890208474152, 0.832017097218277, 0.6710385019089349, 0.9411542454583528, 1.0, 0.7953063269679879, 0.5571314709024371, 0.7953587603777192, 0.4358831191087079, 0.6277077482046309, 0.7684009548948627, 0.6531059959405039, 0.7768711691119308, 0.6883720951974961, 0.6936199831009335, 0.8971695160234401, 0.4707924623113833, 0.8642706682188466, 0.1826348262350791, 0.7132642165763982, 1.0, 0.48872372151817023, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7217017872886777, 1.0, 0.7896354401872717, 0.8808919461147899, 0.7283421666422167, 0.7420541780659815, 0.522700245052407, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.10894267292550816, 0.9142445273649933, 0.7093853536262804, 0.6991468984827918, 0.5533794290743125, 0.7882773396727158, 0.5476431965885501, 0.6242275051672941, 0.7572154892514751, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.586678988168406, 0.9309470682699423, 1.0, 1.0, 0.5911195501972704, 0.8362747318435784, 0.5117566728908322, 0.9847962409659572, 0.6939112308588368, 0.5844803074896427, 0.8195222253737042, 0.6502002482190439, 0.21639402649611747, 0.5970503880018869, 0.3765811737351856, 0.7095762239356153, 0.7410003172869702, 0.7319940085727452, 1.0, 0.6441425627537012, 0.6530224530296921, 1.0, 0.8434652034268404, 0.6462541125586169, 0.2552104334919992, 1.0, 0.676525822803221, 0.7269877300065206, 0.5614877244306854, 0.8096114788906146, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.47862910927753755, 0.6516334094610028, 0.6858578888786369, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.7095867076974078, 0.7946728580680849, 0.6339903326368657, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.8726298056056425, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8789801838086921, 1.0, 0.9355467351067721, 0.8038883770438103, 0.7225931341121177, 0.7639654153934541, 1.0, 0.9114766235414771, 0.9399649879642329, 0.6598213631275042, 0.6195389262040769, 0.6484727246354532, 1.0, 1.0, 0.7220447926250532]
Finish training and take 55m
