Namespace(log_name='./result/bugsinpy/random1_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='result/bugsinpy/random1_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=1, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 54.6188
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 73.75 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:73.75
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 33.0654
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.49 	 Previous best codebleu 73.75
  ********************
 Achieve Best bleu:77.49
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 18.4248
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.88 	 Previous best codebleu 77.49
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 10.8452
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.65 	 Previous best codebleu 77.49
  ********************
 Achieve Best bleu:77.65
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 6.1625
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.06 	 Previous best codebleu 77.65
  ********************
 Achieve Best bleu:79.06
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 4.5832
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.37 	 Previous best codebleu 79.06
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 2.5347
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.82 	 Previous best codebleu 79.06
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 1.3897
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.02 	 Previous best codebleu 79.06
  ********************
early stopping!!!
reload model from result/bugsinpy/random1_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 77.01 
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 109, 110, 116, 120, 121]
  Syntax Fixed = 2 
[65, 115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 109, 110, 116, 120, 121]
  Syntax Fixed = 2 
[65, 115]
  Cleaned Fixed = 0 
[]
  codebleu = 77.01 
[0.4314101104400466, 0.8280405710545513, 0.6601281703247908, 0.45499728751656643, 0.9063467386633746, 0.6831708548501114, 0.9411542454583528, 1.0, 0.7953063269679879, 0.5571314709024371, 0.68965030200429, 0.9666856331752072, 0.7714650156104186, 0.7042491754748079, 0.5824496852666639, 0.7768711691119308, 0.6883720951974961, 0.6936199831009335, 0.8971695160234401, 0.8856389378075658, 0.8642706682188466, 0.7443181170763433, 0.7132642165763982, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.732687515041228, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7053894038892353, 1.0, 0.7896354401872717, 0.8808919461147899, 0.7283421666422167, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.7507982187182929, 0.9142445273649933, 0.569984179462049, 0.7313821813372119, 0.5965740195388707, 0.8111411086438911, 0.4740532618616287, 0.29466610165807394, 0.7503437068674359, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9309470682699423, 1.0, 1.0, 0.5911195501972704, 0.8362747318435784, 0.5117566728908322, 0.9847962409659572, 0.5758059068891177, 0.7042953619649426, 0.9021838139883462, 0.6502002482190439, 0.2599906717142791, 0.7652740132249347, 0.5037077119806818, 0.667268531627923, 0.775346132886974, 0.7319940085727452, 1.0, 0.7108279765902673, 0.6530224530296921, 1.0, 0.8434652034268404, 0.6092992309704574, 0.3031200238102166, 1.0, 0.676525822803221, 0.6675881054170294, 0.49150427670545643, 0.8096114788906146, 0.7779853689231081, 0.7057458604486815, 0.8871978499693505, 0.5218510181581382, 0.6070120825929076, 0.767723111687518, 0.8052065398794905, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8093342181595082, 0.8807926879441415, 0.7332519354895861, 0.949504537888815, 0.8253102709145588, 0.8814955038434287, 0.7300840880982107, 0.8594942629236695, 0.8195330229945343, 0.8425294534508236, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8768686925984219, 1.0, 0.9355467351067721, 0.8054823549932149, 0.7225931341121177, 0.7639654153934541, 0.8966210950015963, 0.9114766235414771, 0.9399649879642329, 0.6598213631275042, 0.6391182953466551, 0.6223224823588741, 1.0, 1.0, 0.7243849758480987]
Finish training and take 44m
