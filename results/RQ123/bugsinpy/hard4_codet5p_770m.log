Namespace(log_name='./bugsinpy/hard4_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='bugsinpy/hard4_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': ' is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 937
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 158
  train_loss = 59.4795
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.7 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.7
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 315
  train_loss = 35.1381
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.51 	 Previous best codebleu 74.7
  ********************
 Achieve Best bleu:76.51
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 472
  train_loss = 20.6209
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.88 	 Previous best codebleu 76.51
  ********************
 Achieve Best bleu:77.88
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 629
  train_loss = 11.8561
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.38 	 Previous best codebleu 77.88
  ********************
 Achieve Best bleu:78.38
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 786
  train_loss = 8.8228
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.79 	 Previous best codebleu 78.38
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 943
  train_loss = 4.6749
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.02 	 Previous best codebleu 78.38
  ********************
 Achieve Best bleu:79.02
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1100
  train_loss = 2.7512
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.19 	 Previous best codebleu 79.02
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1257
  train_loss = 1.7396
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.87 	 Previous best codebleu 79.02
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 1414
  train_loss = 1.2313
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.85 	 Previous best codebleu 79.02
  ********************
early stopping!!!
reload model from bugsinpy/hard4_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 75.77 
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 62, 65, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 62, 65, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 75.77 
[0.6728230800934798, 0.8505702153233261, 0.5778495926523601, 0.3715351059677094, 0.9063467386633746, 0.7381684490594698, 0.8034390471338084, 1.0, 0.7588526370388009, 0.5584043094398998, 0.68965030200429, 0.9666856331752072, 0.5763666939158398, 0.7398658182365634, 0.6111481261236192, 0.6754578258868758, 0.6883720951974961, 0.6483259557958929, 0.8673208349360431, 0.8856389378075658, 0.8092096614316411, 0.7443181170763433, 0.8884573785188872, 1.0, 0.5046552364207715, 0.9204219587780458, 1.0, 0.8672809056911601, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7110837109209384, 1.0, 0.7896354401872717, 0.8808919461147899, 0.7283421666422167, 0.6077011080751121, 0.8311106192963744, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.5496437584725373, 0.9142445273649933, 0.6049712300397306, 0.6991468984827918, 0.20109225404915057, 0.8548397899287874, 0.5912098103875224, 0.32031608308714776, 0.7649786662375448, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.6031077155235862, 0.7961136840513544, 0.7585846389475988, 0.4659361653055466, 0.8362747318435784, 0.5117566728908322, 0.9847962409659572, 0.5767084530894689, 0.6363040664755386, 1.0, 0.6502002482190439, 0.27703727958929164, 0.7354245148971754, 0.5037077119806818, 0.7095762239356153, 0.7449266497028206, 0.7531797171538064, 1.0, 0.6079942912046377, 0.6530224530296921, 1.0, 0.8049278804950808, 0.6268694971740015, 0.3031200238102166, 1.0, 0.676525822803221, 0.382981420464771, 0.49150427670545643, 0.8096114788906146, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.6374410208386678, 0.7085737927686857, 0.7230791507066676, 0.8358395384567638, 0.8853918706034951, 0.884250182279102, 0.7164493834577911, 0.7993331259996228, 0.7946728580680849, 0.7332519354895861, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.762863875005932, 0.8233676046914074, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8789801838086921, 1.0, 0.9355467351067721, 0.768273156049638, 0.7225931341121177, 0.7639654153934541, 1.0, 0.9114766235414771, 0.9399649879642329, 0.535233439922561, 0.7109530109048765, 0.8631855387221548, 1.0, 0.8840742273066922, 0.7243849758480987]
Finish training and take 49m
