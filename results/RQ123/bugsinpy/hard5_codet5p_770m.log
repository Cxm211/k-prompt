Namespace(log_name='./bugsinpy/hard5_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='bugsinpy/hard5_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=6, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': ' is buggy program', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': ' is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 937
  Batch size = 6
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 158
  train_loss = 59.053
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.52 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.52
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 315
  train_loss = 34.512
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.0 	 Previous best codebleu 74.52
  ********************
 Achieve Best bleu:76.0
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 472
  train_loss = 19.6389
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.12 	 Previous best codebleu 76.0
  ********************
 Achieve Best bleu:78.12
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 629
  train_loss = 11.8606
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.18 	 Previous best codebleu 78.12
  ********************
 Achieve Best bleu:78.18
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 786
  train_loss = 6.496
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.71 	 Previous best codebleu 78.18
  ********************
 Achieve Best bleu:78.71
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 943
  train_loss = 3.764
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.28 	 Previous best codebleu 78.71
  ********************
 Achieve Best bleu:79.28
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1100
  train_loss = 2.2978
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.19 	 Previous best codebleu 79.28
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1257
  train_loss = 1.7808
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.28 	 Previous best codebleu 79.28
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 1414
  train_loss = 1.2014
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.98 	 Previous best codebleu 79.28
  ********************
early stopping!!!
reload model from bugsinpy/hard5_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 77.05 
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 58, 62, 65, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[57]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 58, 62, 65, 73, 76, 80, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[57]
  Cleaned Fixed = 0 
[]
  codebleu = 77.05 
[0.6728230800934798, 0.8505702153233261, 0.5983573284908311, 0.45499728751656643, 0.9063467386633746, 0.8052050509144788, 0.8387331647808673, 1.0, 0.7734230378433196, 0.5442409354999047, 0.7953587603777192, 0.9666856331752072, 0.6982163971183221, 0.7684009548948627, 0.7601736358670461, 0.7768711691119308, 0.6883720951974961, 0.6488920035219445, 0.739762807685874, 0.8856389378075658, 0.8642706682188466, 0.7443181170763433, 0.7132642165763982, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7053894038892353, 1.0, 0.8836394840336537, 0.8181703404578551, 0.7283421666422167, 0.6000088003828044, 0.8036453284640133, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.4381828576433065, 0.7655701332323688, 0.7093853536262804, 0.7792783655889306, 0.668011686462559, 0.8548397899287874, 0.4388394457460757, 0.39033680718485686, 0.7255684925842691, 0.8077895563342797, 0.841670026056943, 0.5775035025206701, 0.459223709987743, 0.9309470682699423, 0.9537436603531186, 1.0, 0.5540300420888724, 0.8362747318435784, 0.5117566728908322, 0.9847962409659572, 0.5767084530894689, 0.6363040664755386, 1.0, 0.6502002482190439, 0.27703727958929164, 0.7652740132249347, 0.5037077119806818, 0.6731137875049277, 0.7481713002943808, 0.7531797171538064, 1.0, 0.7405534931835488, 0.6530224530296921, 1.0, 0.7712921777983895, 0.6462541125586169, 0.2083376016940779, 1.0, 0.676525822803221, 0.7148800730697742, 0.49150427670545643, 0.8096114788906146, 0.7779853689231081, 0.7449734989717058, 0.8871978499693505, 0.5662698387320015, 0.7318286091585733, 0.767723111687518, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8093342181595082, 0.8254774607423805, 0.7332519354895861, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.8594942629236695, 0.8998004834526132, 0.8233676046914074, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8121018951739367, 1.0, 0.9355467351067721, 0.6593685483105628, 0.7225931341121177, 0.7639654153934541, 1.0, 0.6877450065623492, 0.9399649879642329, 0.5753714376815275, 0.6812954886555639, 0.8631855387221548, 1.0, 1.0, 0.7243849758480987]
Finish training and take 48m
