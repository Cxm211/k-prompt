Namespace(log_name='./result/bugsinpy/random1_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='result/bugsinpy/random1_codet5p_220m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=1, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 64.6743
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.79 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.79
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 44.713
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.21 	 Previous best codebleu 74.79
  ********************
 Achieve Best bleu:77.21
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 30.3355
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.93 	 Previous best codebleu 77.21
  ********************
 Achieve Best bleu:77.93
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 21.6176
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.14 	 Previous best codebleu 77.93
  ********************
 Achieve Best bleu:78.14
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 15.2378
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.28 	 Previous best codebleu 78.14
  ********************
 Achieve Best bleu:79.28
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 10.6734
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.6 	 Previous best codebleu 79.28
  ********************
 Achieve Best bleu:79.6
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 7.7626
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.83 	 Previous best codebleu 79.6
  ********************
 Achieve Best bleu:79.83
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 5.9095
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.6 	 Previous best codebleu 79.83
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 4.7411
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.97 	 Previous best codebleu 79.83
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2331
  train_loss = 4.0089
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.88 	 Previous best codebleu 79.83
  ********************
early stopping!!!
reload model from result/bugsinpy/random1_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 76.37 
  Total = 122 
  Exact Fixed = 15 
[24, 27, 31, 34, 58, 65, 73, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 2 
[8, 115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 15 
[24, 27, 31, 34, 58, 65, 73, 98, 101, 109, 110, 114, 116, 120, 121]
  Syntax Fixed = 2 
[8, 115]
  Cleaned Fixed = 0 
[]
  codebleu = 76.37 
[0.6728230800934798, 0.8505702153233261, 0.6601281703247908, 0.47166395418323315, 0.9063467386633746, 0.6913513004703498, 0.9411542454583528, 0.9543920430664012, 0.8300638244826566, 0.575055558283563, 0.68965030200429, 0.9666856331752072, 0.7714650156104186, 0.7398658182365634, 0.6169643616148939, 0.7768711691119308, 0.6883720951974961, 0.6974243309270205, 0.8971695160234401, 0.8856389378075658, 0.6902260446833343, 0.7443181170763433, 0.8884573785188872, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.6853803599169206, 1.0, 0.8754092712592991, 0.8808919461147899, 0.6623090658678863, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.24159990545106697, 0.9142445273649933, 0.7093853536262804, 0.7313821813372119, 0.1833241969268934, 0.8548397899287874, 0.5192587731305535, 0.39686614731832626, 0.7715012035371895, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9309470682699423, 0.6864998373105733, 1.0, 0.5911195501972704, 0.8022604263379136, 0.5117566728908322, 0.8923125000332248, 0.6939112308588368, 0.7042953619649426, 1.0, 0.8352894783834772, 0.21092408235307708, 0.6188454417963632, 0.5037077119806818, 0.6870782325703427, 0.7423525166375848, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 0.5750974938187585, 0.8434652034268404, 0.6268694971740015, 0.3031200238102166, 0.9472873156881443, 0.676525822803221, 0.28024622090378415, 0.49150427670545643, 0.8096114788906146, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.5218510181581382, 0.7318286091585733, 0.767723111687518, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.7332519354895861, 0.949504537888815, 0.9178662308912058, 0.8219716943196191, 1.0, 0.5894199743134722, 0.8195330229945343, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8789801838086921, 1.0, 0.9355467351067721, 0.8385834949297515, 0.7225931341121177, 0.7639654153934541, 1.0, 0.9114766235414771, 0.9399649879642329, 0.610067068626702, 0.631282340524122, 0.8631855387221548, 1.0, 1.0, 0.6006162211964817]
Finish training and take 22m
