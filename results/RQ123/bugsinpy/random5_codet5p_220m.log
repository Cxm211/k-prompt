Namespace(log_name='./result/bugsinpy/random5_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='result/bugsinpy/random5_codet5p_220m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=5, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'is buggy program', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 64.3621
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.12 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.12
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 42.3153
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.87 	 Previous best codebleu 75.12
  ********************
 Achieve Best bleu:76.87
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 28.8561
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.4 	 Previous best codebleu 76.87
  ********************
 Achieve Best bleu:77.4
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 19.9135
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.88 	 Previous best codebleu 77.4
  ********************
 Achieve Best bleu:77.88
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 14.009
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.95 	 Previous best codebleu 77.88
  ********************
 Achieve Best bleu:78.95
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 10.0365
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 80.09 	 Previous best codebleu 78.95
  ********************
 Achieve Best bleu:80.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 7.0226
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.29 	 Previous best codebleu 80.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 5.3219
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.39 	 Previous best codebleu 80.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 4.1477
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.86 	 Previous best codebleu 80.09
  ********************
early stopping!!!
reload model from result/bugsinpy/random5_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 76.53 
  Total = 122 
  Exact Fixed = 16 
[8, 20, 24, 27, 31, 34, 58, 62, 65, 73, 101, 109, 110, 113, 114, 116]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 16 
[8, 20, 24, 27, 31, 34, 58, 62, 65, 73, 101, 109, 110, 113, 114, 116]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 76.53 
[0.6435993038697035, 0.8505702153233261, 0.6601281703247908, 0.47166395418323315, 0.9063467386633746, 0.6913513004703498, 0.9411542454583528, 1.0, 0.7953063269679879, 0.5571314709024371, 0.68965030200429, 0.9666856331752072, 0.6567429270683093, 0.7398658182365634, 0.6572726626071705, 0.7768711691119308, 0.6883720951974961, 0.6994074932894399, 0.8971695160234401, 1.0, 0.6947304788566451, 0.7443181170763433, 0.8884573785188872, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.5666013053928823, 1.0, 0.7896354401872717, 0.8808919461147899, 0.6623090658678863, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.5054600614040212, 0.9142445273649933, 0.7093853536262804, 0.7313821813372119, 0.5268468019406986, 0.8548397899287874, 0.4740532618616287, 0.39686614731832626, 0.6615425185582952, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9309470682699423, 0.8670599017375464, 1.0, 0.5911195501972704, 0.8022604263379136, 0.5117566728908322, 0.9847962409659572, 0.6939112308588368, 0.7042953619649426, 1.0, 0.8352894783834772, 0.26566608407719106, 0.7652740132249347, 0.2196393533934462, 0.8475332565755729, 0.7286052536335244, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 0.5750974938187585, 0.8046356237794545, 0.16823993979890314, 0.3031200238102166, 0.9472873156881443, 0.676525822803221, 0.6977036054418928, 0.5002377244306854, 0.8096114788906146, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.5218510181581382, 0.5843875095588545, 0.767723111687518, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.7332519354895861, 0.8336108571661149, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.8255369674887578, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8029200558045428, 0.8789801838086921, 1.0, 0.9355467351067721, 0.8383590070600413, 0.7225931341121177, 1.0, 1.0, 0.9114766235414771, 0.9399649879642329, 0.610067068626702, 0.631282340524122, 0.8631855387221548, 0.5497449422266588, 0.8840742273066922, 0.7243849758480987]
Finish training and take 20m
Namespace(log_name='./result/bugsinpy/random5_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='result/bugsinpy/random5_codet5p_220m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=5, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'is buggy program', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 64.3621
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.12 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.12
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 42.3153
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.87 	 Previous best codebleu 75.12
  ********************
 Achieve Best bleu:76.87
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 28.8561
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.4 	 Previous best codebleu 76.87
  ********************
 Achieve Best bleu:77.4
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 19.9135
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.88 	 Previous best codebleu 77.4
  ********************
 Achieve Best bleu:77.88
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 14.009
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.95 	 Previous best codebleu 77.88
  ********************
 Achieve Best bleu:78.95
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 10.0365
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 80.09 	 Previous best codebleu 78.95
  ********************
 Achieve Best bleu:80.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 7.0226
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.29 	 Previous best codebleu 80.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 5.3219
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.39 	 Previous best codebleu 80.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 4.1477
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.86 	 Previous best codebleu 80.09
  ********************
early stopping!!!
reload model from result/bugsinpy/random5_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 76.51 
  Total = 122 
  Exact Fixed = 16 
[8, 20, 24, 27, 31, 34, 58, 62, 65, 73, 101, 109, 110, 113, 114, 116]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 16 
[8, 20, 24, 27, 31, 34, 58, 62, 65, 73, 101, 109, 110, 113, 114, 116]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 76.51 
[0.6435993038697035, 0.8505702153233261, 0.6601281703247908, 0.47166395418323315, 0.9063467386633746, 0.6913513004703498, 0.9411542454583528, 1.0, 0.7953063269679879, 0.5571314709024371, 0.68965030200429, 0.9666856331752072, 0.6567429270683093, 0.7398658182365634, 0.6572726626071705, 0.7768711691119308, 0.6883720951974961, 0.6994074932894399, 0.8971695160234401, 1.0, 0.6947304788566451, 0.7443181170763433, 0.8884573785188872, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.5666013053928823, 1.0, 0.7896354401872717, 0.8808919461147899, 0.6623090658678863, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.5054600614040212, 0.9142445273649933, 0.7093853536262804, 0.7313821813372119, 0.5268468019406986, 0.8548397899287874, 0.4740532618616287, 0.39686614731832626, 0.6615425185582952, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9309470682699423, 0.842735577413222, 1.0, 0.5911195501972704, 0.8022604263379136, 0.5117566728908322, 0.9847962409659572, 0.6939112308588368, 0.7042953619649426, 1.0, 0.8352894783834772, 0.26566608407719106, 0.7652740132249347, 0.2196393533934462, 0.8475332565755729, 0.7286052536335244, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 0.5750974938187585, 0.8046356237794545, 0.16823993979890314, 0.3031200238102166, 0.9472873156881443, 0.676525822803221, 0.6977036054418928, 0.5002377244306854, 0.8096114788906146, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.5218510181581382, 0.5843875095588545, 0.767723111687518, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.7332519354895861, 0.8336108571661149, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.8255369674887578, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8029200558045428, 0.8789801838086921, 1.0, 0.9355467351067721, 0.8383590070600413, 0.7225931341121177, 1.0, 1.0, 0.9114766235414771, 0.9399649879642329, 0.610067068626702, 0.631282340524122, 0.8631855387221548, 0.5497449422266588, 0.8840742273066922, 0.7243849758480987]
Finish training and take 20m
