Namespace(log_name='./bugsinpy/hard0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='bugsinpy/hard0_codet5p_220m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': ' is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 937
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 236
  train_loss = 69.6735
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 74.43 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:74.43
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 471
  train_loss = 46.1909
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.3 	 Previous best codebleu 74.43
  ********************
 Achieve Best bleu:75.3
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 706
  train_loss = 31.2861
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.31 	 Previous best codebleu 75.3
  ********************
 Achieve Best bleu:76.31
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 941
  train_loss = 22.4472
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.5 	 Previous best codebleu 76.31
  ********************
 Achieve Best bleu:77.5
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1176
  train_loss = 16.442
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.48 	 Previous best codebleu 77.5
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1411
  train_loss = 11.4034
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.53 	 Previous best codebleu 77.5
  ********************
 Achieve Best bleu:77.53
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1646
  train_loss = 8.1975
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.08 	 Previous best codebleu 77.53
  ********************
 Achieve Best bleu:78.08
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1881
  train_loss = 6.2368
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.79 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2116
  train_loss = 4.995
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.34 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2351
  train_loss = 4.0554
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.29 	 Previous best codebleu 78.08
  ********************
early stopping!!!
reload model from bugsinpy/hard0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 77.3 
  Total = 122 
  Exact Fixed = 16 
[8, 24, 27, 31, 34, 57, 58, 62, 65, 73, 98, 101, 109, 110, 116, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 16 
[8, 24, 27, 31, 34, 57, 58, 62, 65, 73, 98, 101, 109, 110, 116, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 77.3 
[0.6619726333366234, 0.8752455399986507, 0.6601281703247908, 0.47166395418323315, 0.9063467386633746, 0.6913513004703498, 0.9411542454583528, 1.0, 0.7953063269679879, 0.8091778608118214, 0.68965030200429, 0.9666856331752072, 0.6567429270683093, 0.7684009548948627, 0.5579919444499759, 0.7768711691119308, 0.6883720951974961, 0.6994074932894399, 0.8971695160234401, 0.8856389378075658, 0.8642706682188466, 0.7443181170763433, 0.8884573785188872, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.44081108095569643, 1.0, 0.9474759345795825, 0.7110837109209384, 1.0, 0.7896354401872717, 0.8808919461147899, 0.5264419734307962, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.1897294590838863, 0.9142445273649933, 0.7093853536262804, 0.788050295413492, 0.7572098935987482, 0.8548397899287874, 0.4917256863080903, 0.6242275051672941, 0.7715012035371895, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9058655832843971, 1.0, 1.0, 0.5911195501972704, 0.8022604263379136, 0.5117566728908322, 0.9847962409659572, 0.6939112308588368, 0.7042953619649426, 1.0, 0.8352894783834772, 0.20826579230967396, 0.6647509203346027, 0.5037077119806818, 0.8475332565755729, 0.7347335283423535, 0.7531797171538064, 1.0, 0.590776476661601, 0.6530224530296921, 0.5750974938187585, 0.8434652034268404, 0.6462541125586169, 0.25294211168063613, 0.8472873156881442, 0.676525822803221, 0.6487795790095106, 0.5002377244306854, 0.7229580999755256, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.6374410208386678, 0.7318286091585733, 0.767723111687518, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.7332519354895861, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7594942629236694, 0.8527547497767987, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8789801838086921, 1.0, 0.9355467351067721, 0.8385834949297515, 0.7225931341121177, 0.7639654153934541, 0.878865255109752, 0.9114766235414771, 0.9399649879642329, 0.610067068626702, 0.5992369800765517, 0.8631855387221548, 0.24505101711625965, 1.0, 0.7243849758480987]
Finish training and take 23m
