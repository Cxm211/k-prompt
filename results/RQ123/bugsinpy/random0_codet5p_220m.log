Namespace(log_name='./result/bugsinpy/random0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='result/bugsinpy/random0_codet5p_220m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=0, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 64.9544
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.38 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:75.38
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 42.9076
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.34 	 Previous best codebleu 75.38
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 29.7787
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.57 	 Previous best codebleu 75.38
  ********************
 Achieve Best bleu:77.57
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 19.9292
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.07 	 Previous best codebleu 77.57
  ********************
 Achieve Best bleu:78.07
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 14.0562
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.08 	 Previous best codebleu 78.07
  ********************
 Achieve Best bleu:79.08
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 10.0177
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.09 	 Previous best codebleu 79.08
  ********************
 Achieve Best bleu:79.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 7.8791
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.84 	 Previous best codebleu 79.09
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 5.4656
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.3 	 Previous best codebleu 79.09
  ********************
 Achieve Best bleu:79.3
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 4.267
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.11 	 Previous best codebleu 79.3
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 9
  eval_ppl = inf
  global_step = 2331
  train_loss = 3.6702
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 79.09 	 Previous best codebleu 79.3
  ********************
reload model from result/bugsinpy/random0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 75.98 
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 58, 62, 65, 73, 76, 80, 101, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 17 
[8, 24, 27, 31, 34, 58, 62, 65, 73, 76, 80, 101, 110, 114, 116, 120, 121]
  Syntax Fixed = 1 
[115]
  Cleaned Fixed = 0 
[]
  codebleu = 75.98 
[0.6435993038697035, 0.8505702153233261, 0.6601281703247908, 0.4333555566636644, 0.9063467386633746, 0.6913513004703498, 0.9411542454583528, 1.0, 0.7953063269679879, 0.5376809214518877, 0.68965030200429, 0.9666856331752072, 0.6567429270683093, 0.7398658182365634, 0.5824496852666639, 0.7890003035062592, 0.6883720951974961, 0.6936199831009335, 0.8971695160234401, 0.8856389378075658, 0.5956403222811041, 0.7443181170763433, 0.8884573785188872, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.6853803599169206, 1.0, 0.7896354401872717, 0.8808919461147899, 0.5023129219011417, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.46125978072022955, 0.9142445273649933, 0.7093853536262804, 0.7313821813372119, 0.5528105870541823, 0.8548397899287874, 0.3306975937581339, 0.39686614731832626, 0.7715012035371895, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.7205089220380079, 0.9309470682699423, 0.8023064964381248, 1.0, 0.5911195501972704, 0.8022604263379136, 0.5117566728908322, 0.9847962409659572, 0.6939112308588368, 0.7042953619649426, 1.0, 0.8352894783834772, 0.20867343826082332, 0.7652740132249347, 0.29542940048997074, 0.667268531627923, 0.6082304264151649, 0.7531797171538064, 1.0, 0.6100848835391325, 0.6530224530296921, 1.0, 0.8046356237794545, 0.6439391185600173, 0.3031200238102166, 1.0, 0.676525822803221, 0.6272241998742991, 0.5002377244306854, 0.7229580999755256, 0.9056583090096291, 0.7449734989717058, 0.8871978499693505, 0.6374410208386678, 0.5357938992540616, 0.767723111687518, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.4607623292818609, 0.8336108571661149, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7681899150975824, 0.8802533989863723, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8754861943073293, 0.8789801838086921, 0.64021074690812, 0.9355467351067721, 0.726466738644271, 0.7225931341121177, 0.7639654153934541, 1.0, 0.9114766235414771, 0.9399649879642329, 0.610067068626702, 0.5803135373863274, 0.5788186931493522, 1.0, 1.0, 0.6006162211964817]
Finish training and take 22m
Namespace(log_name='./result/bugsinpy/random0_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='python', output_dir='result/bugsinpy/random0_codet5p_220m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=0, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 64.6296
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 67.04 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:67.04
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 43.0394
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.96 	 Previous best codebleu 67.04
  ********************
 Achieve Best bleu:76.96
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 29.5504
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.01 	 Previous best codebleu 76.96
  ********************
 Achieve Best bleu:78.01
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 20.7798
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.8 	 Previous best codebleu 78.01
  ********************
 Achieve Best bleu:78.8
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 14.7666
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.62 	 Previous best codebleu 78.8
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 11.0621
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.27 	 Previous best codebleu 78.8
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 7.8003
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.47 	 Previous best codebleu 78.8
  ********************
early stopping!!!
reload model from result/bugsinpy/random0_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 77.09 
  Total = 122 
  Exact Fixed = 12 
[24, 27, 31, 34, 57, 58, 73, 101, 109, 110, 116, 121]
  Syntax Fixed = 1 
[65]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 12 
[24, 27, 31, 34, 57, 58, 73, 101, 109, 110, 116, 121]
  Syntax Fixed = 1 
[65]
  Cleaned Fixed = 0 
[]
  codebleu = 77.09 
[0.8011789328434318, 0.8834124216164225, 0.6601281703247908, 0.4500690462517839, 0.9063467386633746, 0.6913513004703498, 0.9411542454583528, 0.8674433454759134, 0.8300638244826566, 0.5571314709024371, 0.7953587603777192, 0.9666856331752072, 0.7714650156104186, 0.8068413656728535, 0.7733604490538593, 0.7768711691119308, 0.6883720951974961, 0.6994074932894399, 0.8971695160234401, 0.8856389378075658, 0.6413921957402942, 0.7443181170763433, 0.8884573785188872, 1.0, 0.583933634540305, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.6853803599169206, 1.0, 0.7896354401872717, 0.8808919461147899, 0.6623090658678863, 0.7420541780659815, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.7507982187182929, 0.9142445273649933, 0.7093853536262804, 0.6125748067108787, 0.4733841540927826, 0.7531496225757797, 0.4740532618616287, 0.39686614731832626, 0.7715012035371895, 0.8077895563342797, 0.8782734899756608, 0.549916846856608, 0.6481253914747869, 0.9309470682699423, 1.0, 1.0, 0.5911195501972704, 0.8022604263379136, 0.5117566728908322, 0.8923125000332248, 0.6939112308588368, 0.7042953619649426, 0.9054803697064888, 0.8352894783834772, 0.20867343826082332, 0.6026966865919932, 0.5037077119806818, 0.8475332565755729, 0.7503415008507734, 0.7474483257271791, 1.0, 0.6441425627537012, 0.6530224530296921, 0.5089224769839813, 0.8434652034268404, 0.6439391185600173, 0.3031200238102166, 0.9472873156881443, 0.676525822803221, 0.6487795790095106, 0.49150427670545643, 0.8096114788906146, 0.7889213653390947, 0.7449734989717058, 0.8871978499693505, 0.5218510181581382, 0.7318286091585733, 0.7738279988463377, 0.8358395384567638, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.7332519354895861, 0.8086254987195756, 0.9178662308912058, 0.8892666294877403, 1.0, 0.7594942629236694, 0.8255369674887578, 0.8736270526063763, 0.782053171927164, 0.864642840063379, 0.8029200558045428, 0.8789801838086921, 1.0, 0.9355467351067721, 0.8385834949297515, 0.7225931341121177, 0.7639654153934541, 0.878865255109752, 0.7106562317997089, 0.9399649879642329, 0.610067068626702, 0.8300101016746005, 0.8631855387221548, 0.621240758456996, 1.0, 0.7243849758480987]
Finish training and take 20m
