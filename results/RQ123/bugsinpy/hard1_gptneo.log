Namespace(log_name='./bugsinpy/hard1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='python', output_dir='bugsinpy/hard1_gptneo', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': ' the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
Namespace(log_name='./bugsinpy/hard1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='python', output_dir='bugsinpy/hard1_gptneo', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': ' the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
Namespace(log_name='./bugsinpy/hard1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='python', output_dir='bugsinpy/hard1_gptneo', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': ' the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
Namespace(log_name='./bugsinpy/hard1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='python', output_dir='bugsinpy/hard1_gptneo', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Namespace(log_name='./bugsinpy/hard1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='python', output_dir='bugsinpy/hard1_gptneo', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=1024, max_target_length=1024, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': ' the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
Namespace(log_name='./bugsinpy/hard1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='python', output_dir='bugsinpy/hard1_gptneo', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=2048, max_target_length=2048, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': ' the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = 3.566710771867069e+28
  global_step = 234
  train_loss = 84.9188
  ********************
Previous best ppl:inf
Achieve Best ppl:3.566710771867069e+28
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 73.07 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:73.07
  ********************
Namespace(log_name='./bugsinpy/hard1_gptneo.log', model_name='EleutherAI/gpt-neo-1.3B', lang='python', output_dir='bugsinpy/hard1_gptneo', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', num_train_epochs=10, num_test_epochs=1, train_batch_size=2, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=2048, max_target_length=2048, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': ' the fixed version is', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 2
  Num epoch = 10

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 0
  eval_ppl = 6.461569546333258e+22
  global_step = 467
  train_loss = 75.2885
  ********************
Previous best ppl:inf
Achieve Best ppl:6.461569546333258e+22
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 70.28 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:70.28
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 1
  eval_ppl = 3.833344490196965e+39
  global_step = 933
  train_loss = 36.3972
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 68.13 	 Previous best codebleu 70.28
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 2
  eval_ppl = 2.927638144693859e+38
  global_step = 1399
  train_loss = 21.0645
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 70.33 	 Previous best codebleu 70.28
  ********************
 Achieve Best bleu:70.33
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 3
  eval_ppl = 1.6996842464897676e+23
  global_step = 1865
  train_loss = 12.8527
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 73.49 	 Previous best codebleu 70.33
  ********************
 Achieve Best bleu:73.49
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 4
  eval_ppl = 1.5059508729949601e+66
  global_step = 2331
  train_loss = 8.3581
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 71.72 	 Previous best codebleu 73.49
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 5
  eval_ppl = 8.017560147192463e+78
  global_step = 2797
  train_loss = 5.4493
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.31 	 Previous best codebleu 73.49
  ********************
 Achieve Best bleu:75.31
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 6
  eval_ppl = 1.4866642891602762e+118
  global_step = 3263
  train_loss = 3.1667
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.77 	 Previous best codebleu 75.31
  ********************
 Achieve Best bleu:75.77
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 7
  eval_ppl = 2.621328139141703e+101
  global_step = 3729
  train_loss = 1.6456
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 73.42 	 Previous best codebleu 75.77
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 8
  eval_ppl = 7.977048891306195e+117
  global_step = 4195
  train_loss = 0.7585
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.92 	 Previous best codebleu 75.77
  ********************
 Achieve Best bleu:75.92
  ********************

***** Running evaluation *****
  Num examples = 116
  Batch size = 4
  epoch = 9
  eval_ppl = 7.871624990564648e+124
  global_step = 4661
  train_loss = 0.3203
  ********************
Previous best ppl:6.461569546333258e+22
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 75.66 	 Previous best codebleu 75.92
  ********************
reload model from bugsinpy/hard1_gptneo/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 74.49 
  Total = 122 
  Exact Fixed = 15 
[8, 24, 27, 34, 58, 65, 73, 76, 80, 98, 109, 110, 116, 120, 121]
  Syntax Fixed = 1 
[70]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 15 
[8, 24, 27, 34, 58, 65, 73, 76, 80, 98, 109, 110, 116, 120, 121]
  Syntax Fixed = 1 
[70]
  Cleaned Fixed = 0 
[]
  codebleu = 74.49 
[0.6658173373369901, 0.8834124216164225, 0.5639788407590163, 0.47166395418323315, 0.8501047076155253, 0.8052050509144788, 0.9411542454583528, 1.0, 0.8300638244826566, 0.6455419079523765, 0.7953587603777192, 0.8551731343162567, 0.7714650156104186, 0.8068413656728535, 0.8475864225311183, 0.7768711691119308, 0.6883720951974961, 0.45644159573041765, 0.8971695160234401, 0.48188341005019736, 0.6413921957402942, 0.19735205454353777, 0.8565193224832746, 1.0, 0.541461235980431, 0.9204219587780458, 1.0, 0.8234479137638847, 0.45472562564808194, 0.4545507520171642, 0.8387451272413023, 0.9474759345795825, 0.6853803599169206, 1.0, 0.8754092712592991, 0.8808919461147899, 0.7283421666422167, 0.7081534493781496, 0.8231560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.6281667441037381, 0.9142445273649933, 0.7093853536262804, 0.675740026717099, 0.18389627944366754, 0.8548397899287874, 0.5240667184733485, 0.4839780567605671, 0.5976301703621436, 0.8077895563342797, 0.8788501405761104, 0.55875350252067, 0.7205089220380079, 0.8338124514725307, 0.742948671701646, 1.0, 0.5911195501972704, 0.7956097277956715, 0.5896484195524934, 0.8923125000332248, 0.655836712828785, 0.7042953619649426, 1.0, 0.6502002482190439, 0.20867343826082332, 0.3054796958603241, 0.32956504566182254, 0.947533256575573, 0.760363499668274, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 1.0, 0.733817206674972, 0.5267658122644725, 0.3031200238102166, 1.0, 0.6030962957640399, 0.2920105524114402, 0.49150427670545643, 0.5390020516905556, 0.9056583090096291, 0.6254435277472727, 0.8871978499693505, 0.6374410208386678, 0.6136711180362201, 0.767723111687518, 0.8019223129918047, 0.8853004704636518, 0.884250182279102, 0.7164493834577911, 0.8573638305228279, 0.8807926879441415, 0.7332519354895861, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 0.8346354401872718, 0.649563242606904, 0.8255369674887578, 0.8219215004998028, 0.782053171927164, 0.8934863054803268, 0.3284828245949264, 0.8361972941755667, 1.0, 0.9355467351067721, 0.8207379294550485, 0.6694202484305086, 0.7639654153934541, 0.932600082373991, 0.6877450065623492, 0.9399649879642329, 0.610067068626702, 0.8300101016746005, 0.8631855387221548, 1.0, 1.0, 0.7679102200584469]
Finish training and take 3h8m
