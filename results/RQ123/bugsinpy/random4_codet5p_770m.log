Namespace(log_name='./result/bugsinpy/random4_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='result/bugsinpy/random4_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=4, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 53.9514
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 73.48 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:73.48
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 32.4832
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.39 	 Previous best codebleu 73.48
  ********************
 Achieve Best bleu:76.39
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 18.2354
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.08 	 Previous best codebleu 76.39
  ********************
 Achieve Best bleu:78.08
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 10.9262
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.96 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 6.1228
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.63 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 3.2425
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.63 	 Previous best codebleu 78.08
  ********************
 Achieve Best bleu:78.63
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 1.9738
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.35 	 Previous best codebleu 78.63
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 1.235
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.26 	 Previous best codebleu 78.63
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 0.8011
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.13 	 Previous best codebleu 78.63
  ********************
early stopping!!!
reload model from result/bugsinpy/random4_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 75.31 
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 113, 114, 116, 120]
  Syntax Fixed = 2 
[49, 65]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 113, 114, 116, 120]
  Syntax Fixed = 2 
[49, 65]
  Cleaned Fixed = 0 
[]
  codebleu = 75.31 
[0.6728230800934798, 0.5772569399034305, 0.5323818219115216, 0.47166395418323315, 0.9063467386633746, 0.6710385019089349, 0.9411542454583528, 1.0, 0.8300638244826566, 0.4853955805801071, 0.7953587603777192, 0.9666856331752072, 0.4941018227771147, 0.7398658182365634, 0.6239393292738371, 0.7768711691119308, 0.6883720951974961, 0.6488920035219445, 0.8971695160234401, 0.6081871132658736, 0.4185728936220697, 0.7443181170763433, 0.8054961490833166, 1.0, 0.5323386010674893, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7053894038892353, 1.0, 0.7896354401872717, 0.8016384192760695, 0.6368667089249187, 0.7113266113993064, 0.8106560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.46125978072022955, 0.6846344744183452, 0.7093853536262804, 0.6991468984827918, 0.5960119450907151, 0.8548397899287874, 0.8617601816890221, 0.6242275051672941, 0.5976301703621436, 0.8077895563342797, 0.7925791169660337, 0.5096459235458725, 0.7205089220380079, 0.8503547350494609, 1.0, 1.0, 0.5911195501972704, 0.8362747318435784, 0.5056819884588546, 0.9847962409659572, 0.5767084530894689, 0.7042953619649426, 0.9021838139883462, 0.6502002482190439, 0.20867343826082332, 0.7652740132249347, 0.4215332529848177, 0.7095762239356153, 0.8146252673489875, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 1.0, 0.8434652034268404, 0.6462541125586169, 0.3031200238102166, 1.0, 0.676525822803221, 0.5662499162330346, 0.46816123363284645, 0.8096114788906146, 0.7673067790722553, 0.7449734989717058, 0.8871978499693505, 0.6374410208386678, 0.6257360207760478, 0.767723111687518, 0.8358395384567638, 0.2444485803882015, 0.884250182279102, 0.7164493834577911, 0.8093342181595082, 0.8807926879441415, 0.7332519354895861, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.8195330229945343, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8287418188132757, 0.8789801838086921, 1.0, 0.9355467351067721, 0.7545523782346959, 0.7225931341121177, 1.0, 1.0, 0.6877450065623492, 0.9399649879642329, 0.5319642755712934, 0.5992369800765517, 0.4891232506908655, 1.0, 0.8695838206063677, 0.7243849758480987]
Finish training and take 52m
Namespace(log_name='./result/bugsinpy/random4_codet5p_770m.log', model_name='Salesforce/codet5p-770m', lang='python', output_dir='result/bugsinpy/random4_codet5p_770m', data_dir='./data/bugsinpy', no_cuda=False, visible_gpu='0', choice=4, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Fix', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:             if cls.run == NotImplemented:                 continue              name = cls.task_family              if name in reg and reg[name] != cls and \\', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is fixed program', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'class Register(abc.ABCMeta):          reg = OrderedDict()          for cls in cls._reg:              name = cls.task_family              if name in reg and reg[name] != cls and \\'}]
***** Running training *****
  Num examples = 932
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 0
  eval_ppl = inf
  global_step = 234
  train_loss = 53.9514
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 73.48 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:73.48
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 1
  eval_ppl = inf
  global_step = 467
  train_loss = 32.4832
  ********************
Previous best ppl:inf
Achieve Best ppl:inf
  ********************
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 76.39 	 Previous best codebleu 73.48
  ********************
 Achieve Best bleu:76.39
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 2
  eval_ppl = inf
  global_step = 700
  train_loss = 18.2354
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.08 	 Previous best codebleu 76.39
  ********************
 Achieve Best bleu:78.08
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 3
  eval_ppl = inf
  global_step = 933
  train_loss = 10.9262
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.96 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 4
  eval_ppl = inf
  global_step = 1166
  train_loss = 6.1228
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 77.63 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 5
  eval_ppl = inf
  global_step = 1399
  train_loss = 3.2425
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.63 	 Previous best codebleu 78.08
  ********************
 Achieve Best bleu:78.63
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 6
  eval_ppl = inf
  global_step = 1632
  train_loss = 1.9738
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.35 	 Previous best codebleu 78.63
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 7
  eval_ppl = inf
  global_step = 1865
  train_loss = 1.235
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.26 	 Previous best codebleu 78.63
  ********************

***** Running evaluation *****
  Num examples = 112
  Batch size = 4
  epoch = 8
  eval_ppl = inf
  global_step = 2098
  train_loss = 0.8011
  ********************
Previous best ppl:inf
BLEU file: ./data/bugsinpy/validation.jsonl
  codebleu-4 = 78.13 	 Previous best codebleu 78.63
  ********************
early stopping!!!
reload model from result/bugsinpy/random4_codet5p_770m/checkpoint-best-bleu
BLEU file: ./data/bugsinpy/test.jsonl
  codebleu = 75.31 
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 113, 114, 116, 120]
  Syntax Fixed = 2 
[49, 65]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 122 
  Exact Fixed = 19 
[8, 24, 27, 31, 34, 57, 58, 62, 73, 76, 80, 98, 101, 109, 110, 113, 114, 116, 120]
  Syntax Fixed = 2 
[49, 65]
  Cleaned Fixed = 0 
[]
  codebleu = 75.31 
[0.6728230800934798, 0.5772569399034305, 0.5323818219115216, 0.47166395418323315, 0.9063467386633746, 0.6710385019089349, 0.9411542454583528, 1.0, 0.8300638244826566, 0.4853955805801071, 0.7953587603777192, 0.9666856331752072, 0.4941018227771147, 0.7398658182365634, 0.6239393292738371, 0.7768711691119308, 0.6883720951974961, 0.6488920035219445, 0.8971695160234401, 0.6081871132658736, 0.4185728936220697, 0.7443181170763433, 0.8054961490833166, 1.0, 0.5323386010674893, 0.9204219587780458, 1.0, 0.8234479137638847, 0.6508693332230462, 0.4545507520171642, 1.0, 0.9474759345795825, 0.7053894038892353, 1.0, 0.7896354401872717, 0.8016384192760695, 0.6368667089249187, 0.7113266113993064, 0.8106560738418289, 0.8962096929024133, 0.8773104352365284, 0.8703246706459902, 0.46125978072022955, 0.6846344744183452, 0.7093853536262804, 0.6991468984827918, 0.5960119450907151, 0.8548397899287874, 0.8617601816890221, 0.6242275051672941, 0.5976301703621436, 0.8077895563342797, 0.7925791169660337, 0.5096459235458725, 0.7205089220380079, 0.8503547350494609, 1.0, 1.0, 0.5911195501972704, 0.8362747318435784, 0.5056819884588546, 0.9847962409659572, 0.5767084530894689, 0.7042953619649426, 0.9021838139883462, 0.6502002482190439, 0.20867343826082332, 0.7652740132249347, 0.4215332529848177, 0.7095762239356153, 0.8146252673489875, 0.7531797171538064, 1.0, 0.6441425627537012, 0.6530224530296921, 1.0, 0.8434652034268404, 0.6462541125586169, 0.3031200238102166, 1.0, 0.676525822803221, 0.5662499162330346, 0.46816123363284645, 0.8096114788906146, 0.7673067790722553, 0.7449734989717058, 0.8871978499693505, 0.6374410208386678, 0.6257360207760478, 0.767723111687518, 0.8358395384567638, 0.2444485803882015, 0.884250182279102, 0.7164493834577911, 0.8093342181595082, 0.8807926879441415, 0.7332519354895861, 0.949504537888815, 0.9178662308912058, 0.8814955038434287, 1.0, 0.7388721037764168, 0.8195330229945343, 0.8736270526063763, 0.782053171927164, 0.8934863054803268, 0.8287418188132757, 0.8789801838086921, 1.0, 0.9355467351067721, 0.7545523782346959, 0.7225931341121177, 1.0, 1.0, 0.6877450065623492, 0.9399649879642329, 0.5319642755712934, 0.5992369800765517, 0.4891232506908655, 1.0, 0.8695838206063677, 0.7243849758480987]
Finish training and take 52m
