if( $( this ).hasClass( 'toggled' ) ) {        self.module.controller.onToggleOff( self.module.data, index );
var replacements = result['replacements'];     for (var i = 0; i < replacements.length; i++) {
"Delete previous character for collapsed (single cursor) selection", function() {         this.document.select({           start: [0, 4],
exports.__esModule = true; exports["default"] = T;
stringWithEmoji = stringWithEmoji        .replace(/\<DT_\w+\>/ig, '')        .replace(new RegExp(`${identifier}`, 'ig'), ` ${emoji[identifier]} `);
return layers; }
this.repl.inject({     servo: servo   });
var oldCount = document.getElementById("tokens");     if (oldCount) {      oldCount.parentNode.removeChild(oldCount);
this.showMoreTimer = null;         this.operationListener = this._operationListener.bind(this);         this.accountListener = this._accountListener.bind(this);     }
current = this.panes[name];         if (!current) throw new Error("Navstack: Unknown pane: "+name);         current.init($pane[0]);
'console' in this && 'cd' in this.console
var last = arguments[arguments.length - 1]   return last }
map.fitBounds(bounds);   }      return map;
var contentTypesCache = null; exports.EditorCommandFactory = (function() {
} else {                 this._tryToDraw(...args);             }
return Q();                         case 'anycpu':
const session = this.get('session');     return session.authenticate(...arguments);   },
mobileDocWithAttributeMarker: {     version: MOBILEDOC_VERSION,
getSingle: function(id, opts, cb) {   var sortBy, sortDir, sortString, mainString, jobString, itemString, selectString;   function select(table) {
var counter=0;                 var refresh=$(this).data('refresh');                 setInterval(function() {
diff: function(context, literal, actual) {       if (typeof literal!=='string' && typeof literal!== 'null') {         context.throw(new Error('literal value must be string if exists'));
var values = this.concat(...Array.prototype.slice.call(arguments)).flatten(1);
import React, { Component } from "react" export default class ScrollUpOnMount extends Component {   componentDidMount() {     window.scrollTo(0, 0)
if (!args) {     throw new Error('Route'+ method.toUpperCase() +'' + routePath +'is not defined');   }
detachEvents = function (stream) {             stream.unsubscribe(Stream.eventList.ENAME_STREAM_UPDATED, this.liveEdgeFinder);             stream.unsubscribe(Stream.eventList.ENAME_STREAM_BUFFERING_COMPLETED, this);         },
yield timeout(this.get('timeout-ms'));     dataset.setReadOffset(offset);
console.error("No command specified. Must be first argument.");     throw new Error("No command specified. Must be first argument."); }
describe('the title should equal "___"', function() {   this.timeout(6000);
baron($('.test_flex-headers'), {         scroller: '.scroller',         bar: '.scroller__bar',
Normalizer.prototype.visitBlock = function(block){   var ret = new nodes.Block;   if (block.hasProperties) {
var c = data['attrs']   for (i = 0, i_end = c.length; i!== i_end; i += 1) {     var d = c[i]
return 'UKNOWN CACHE STATUS';             }
import React, { Component, PropTypes } from "react"; import Collapse from "react-collapse";
self.currentStatus.retryCount = self.currentStatus.retryCount + 1;     self.statusChanged();
"use strict"; Promise = require('bluebird'); const debug = require("debug")("bot-express:flow");
const fetchUrl = constructFetchUrl(SC_API_V1, endpoint, { oauth_token: token });   return fetch(fetchUrl);
$row.siblings().removeClass('selected');        $("input:not(#"+this.id+")[name='"+this.name+"']").prop('checked',false);       }
} else if (sets[set_index].length === 0) {             return;
case 'Task': {         const parallelStates = _.flatMap(state.Branches, branch => _.values(branch.States));         return getTaskStates(parallelStates);
, utils = require('../../utils.js')   , x256 = require('x256')   , _ = require('lodash')
, gasPrice = (options || {}).gasPrice      , deployerInstance = new Deployer()      , deployOptions = {returnType: returnTypes.transactionReceipt()}
var _v = next_values.pop();             if(!!_v){ nextValue(_v); }           }, 20);
setTimeout(function() {   it('test', function() {});   run(); }, 100);
}); }; module.exports = FramesAreUsedToGroupContent;
player = PlayerTest.makePlayer({     tracks: tracks,
toggleVis.call(this, $(children[i].li), show &&!closed);         }     }
args.unshift(Log.color.cyan('mrdoc'));       console[logMethod](...args);
getUpdateInterval() {         return UPDATE_INTERVALS[0];     }
var option = this._options[i];     sum += (option.xweight = option.weight(...arguments));   }
selectionStateReducer.update()     impl._selectionStateReducer = impl._selectionStateReducer   }
this.layers = [ this.$markerLayer, textLayer, this.$cursorLayer ];     this.scrollBar = new ace.ScrollBar(container);     this.scrollBar.addEventListener("scroll", ace.bind(this.onScroll, this));
compositionserver.request(req, res)  })
for(var i = 0; i < this._effects.length; i++)       {
if (!((objectModelDescriptor!= null) && objectModelDescriptor)) {               throw new Error("Internal error getting namespace descriptor for path ID=" + pathId_ + "!");             }
return done(null, connection);     connection.bitfield().interested();   });
var combo = document.getElementById('storage-driver');   for (i = 0; i < this.availableDrivers.length; i++) {    combo.add(new Option(
Editable.prototype.change = function(handler) {   return this.on('change', handler); };
Package.describe({   summary: " \* Fill me in! *\ ",   version: "1.0.0",
this._super(...arguments);
var futures = this.map(function(elt) {      return fstreamline__.spin(fun, this, [null, function(_) {       return fn.call(thisObj, _, elt);
},   classStyle: function (smallFont) {     var style = "";     if (smallFont) {
throw new Error(meta.message + "\n" + meta.stack);     default:
define([], function(){     function TreeNode(value, type, cStart, cEnd) {         this.object = undefined;         this.children = [];
"wiechel": {n:"Wiechel", arg:null, scale:360, ratio:1.0, clip:true},   "winkel3": {n:"Winkel Tripel", n:"", arg:null, scale:196, ratio:1.7} };
return new Cubehelix(h, s, l);   }
if(!value) {           value = value         }
event_failure: function(req){            this.constructor.superClass_.prototype.event_failure.call(this, req);              if (this.needSignature && this.service.isSessionExpiredError(req))
if (diff) {     element.dispatchEvent(new Event(`ps-scroll-${y}`));     if (diff > 0) {
if (rows.length === 0)      throw new Error("no best children of "+best_parent_unit+"?");     var arrMcRows  = rows.filter(function(row){ return (row.is_on_main_chain === 1); });
keystore = jose.JWK.createKeyStore();       await keystore.generate.apply(keystore, preset.keystore);     }
import renderer from'react-test-renderer' import FloatingLabel from '../FloatingLabel'
notCorrectSlugIcon.removeClass('vic-hidden');         }     }else{
if (!req.user) return res.status(401).json({message: strings.unauthenticated});    var oauth2Client = googleConfig.newOauth2Client({
args.push(options);             result = instance[helper].apply(instance, args);             return result;
else{                     var startdate = dateFormat(Date.now(), 'yyyy-mm-dd HH:MM:ss');                     var enddate = dateFormat(Date.now() + current_subscription[0].duration*86400000, 'yyyy-mm-dd HH:MM:ss');                 }
io.sockets.on("connection", function (socket) {     socket.on('disconnect', function(){
else {     var filename = $.url.setUrl(options.src).param('filename');     var shortname = filename.split('/').pop().split('.')[0];   }
, Collection = Backbone.Collection  , ed = require("../lib/end-dash")
} else {             var iconName;             var index = -1;
case 'writeMemory': {               const offset = initialAction.offset;               const value = initialAction.value;
for (var type in this.eventTypesText) {                 if (this.eventTypesText.hasOwnProperty(type)) {                     list.push({                     '$key': type,                     '$descriptor': this.eventTypesText[type]
leapday: ".02.29",                         alias: "yyyy/mm/dd"
matches.param('match_id', function(req, res, next, id) {     redis.get(id, function(err, reply) {         if (!err && reply && false) {             console.log("Cache hit for match " + id);
if (!this.connectors.length) {     this.setType(null).setName('any');    }
test('invalid target', function (done) {     var proxy = rocky({ ws: true })     proxy.forward('ws:
, version: '6.0'     };
FCC_Global.assert.match($(this).context.textContent, /[0-5][0-9]:[0-5][0-9]/, 'Y-axis tick labels aren\'t in the "%M:%S" d3 time format ')         });
function MapCollectionStrategy() {     _classCallCheck(this, MapCollectionStrategy);     _CollectionStrategy.apply(this, arguments);   }
reject(Error("MP3 Worker cannot be started - correct path set in defaults?"));                 }), false);                 this.mp3Worker.postMessage({ping:true});
var alias = this.driller_rules[domain];          for(a in alias){                           if(alias.hasOwnProperty(a)) {                              var url_pattern  = alias[a]['url_pattern'];              var patt = new RegExp(url_pattern);
TableSelectDialog.prototype.bindAggregation = function (...args) {   var self = this;
}     }     else {           }    }
constructor(options) {     this.apiToken = process.env.ENVAPI_ACCESS_TOKEN;
that.close();                     this._timeout_interval = null;                 }
_DeepTreeWalker.prototype = new Object;  _DeepTreeWalker.prototype.constructor = _DeepTreeWalker;
return new CancelablePromise(function onCreate(resolve, reject) {     promise.then(resolve, reject);   }, this._onCancel);
getValidationFailureImpl: function() {     if (this.props.value && parseFloat(this.props.value) == NaN) {       return new ValidationFailure({
, changedAssociations = []          , defaultAttributes = additionalAttributes || {}          , options = defaultAttributes          , promises = []
Roguelike.moveBehaviours = {
if(device_type == "mobile") {   $("#navigation").prepend('<a id=\"updateThread\"><i class=\"fa fa-refresh fa-2x"></i></a>&nbsp;');
typeForAuto: function() {     return this.typeForSerial(...arguments);   },
scope: false,         link: function link(tElement, tAttrs, transclude) {             return {
