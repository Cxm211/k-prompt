self._renderHeadingAndMenu(self.outlineProviders);      self._renderOutline(event.outline, event.title);     });
isBrowserUpdated = true       checkDone()
hasEval = f();     } catch (ex) {       hasEval = false;     }
let reg = /^\d+(\.\d+)+(\-\b\w*\b)?$/;         if (!version || typeof version !== 'string') {
return plugins;
return callback(null);         }
var strCurrentTab = window.location.hostname;                  if (arrBlacklistedDomains.includes(strCurrentTab)) {                      document.body.innerHTML = "";
translate: function (x, y) {       return new SVG.Matrix(this.native().translate(x || 0, y || 0))
this._add_outline_to_selected(svg);
define(["css!dijit/claro/claro.css","css!dojo/dojo.css"], function (ss1, ss2) {  return 1; });
});     } else {
var self = this;   return Cluster.resolveContainers(config, cluster, function(err, list) {
var Uni = require('./unicode')
var escapedRootSelectors = rootSelectors.map(function (rootSelector) {             return rootSelector.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');           });
var index = require("./index"); var objects = require("./objects");
let bundleName = shortName.replace(/[ .]/g, '').toLowerCase();     if (conditionValueOrVariationObject) {
};    gamejs.time.interval(tick); }
exports.handler = (event, context, callback) => {   const path = event.path.replace(/\.netlify\/functions\/[^/]+/, '')   const segments = path.split('/').filter(e => e)
for (i = 0; i < videos.length; ++i) {       videoCounter = i;       var printTime = msConversion(videos[videoCounter]["time"]);
"keyup": "refreshPreview",     "blur input": "validateSelf",
var uglypath = '';             for (var i=0,j=tpath.length; i<j; i++)                 uglypath += (tpath[i][0]||'.') + tpath[i][1];
var _input = document.getElementById(id + '__input');   if (_input === undefined) throw new Error('id is invalid');
if (this.status != "ready") {             throw new Error('Task can only be started in "ready" status.');         }
module.exports = function(grunt) {   var URL_REGEX = /url\(["']?([^"'\(\)]+?)["']?\)[;, ](?!\s*?\/\*\s*?noembed\s*?\*\/)/;   var URL_FILTERING_REGEX = /^(data|http|https):/;
break;
leapday: ".02.29",                         separator: '.',                         alias: "yyyy/mm/dd"
content: contentAndMetadata,                     config: configEntry,                   };
if (_.get(this.context, 'assertCSRF')) {       this.logger.debug('Adding CSRF field')
.then(response => {                 const token = response.token;
throw new Error('impossible to reach this point') }
} else {                  result.suffix += '<span style=\"font-weight:normal;color:orange\">';              }
for (var key in options) {     if (this.config.hasOwnProperty(key)) {       this.config[key] = options[key];
destroyAliveConnections();     server.close();   };
return value;        case 'boolean':
$('.js-confirm').click(function(e) {   if ( !confirm( $(this).data('confirm') || 'Are you sure? This cannot be undone.') )    return e.preventDefault();
direction = DIRECTION_REVERSE;                  break;              case exports.KEYMAP.RIGHT_ARROW:              case exports.KEYMAP.D:
show: function () {             var pos = $.extend({}, this.$element.position(), {
var touches = event.changedTouches,         c = container.call(this, event, d),         n = touches.length, i, gesture;
keystore = jose.JWK.createKeyStore();       await keystore.generate(...preset.keystore);     }
},   inputChildrenHaveErrors () {     var errorIds = $.map(this.props.errors, function(error, errorId) {       return errorId;
line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color : 0x0000ff } ) );  line.rotation.x = Math.PI / 2;
fs.write(fd, data, position, encoding, function(err, written, string){             if (err) return reject(err);             resolve(written);
const staveClef = xmlMeasure.StartClefs[s].getVexClef();
const warning = _t('Warning');         if (!('getUpdateCheckStatusEnum' in PlatformPeg.get())) {             return <div></div>;
let dataToSend, dataFileError, res = null;   try {
console.log(`Encountered ${validationResults.errors.length} errors and ${validationResults.warnings.length} warnings`);
'use strict'; var extend = require('../object/extend')   , captureStackTrace = Error.captureStackTrace
return splitChangesService(splitChangesRequest({
handleAction: function() {         this.waitFor(["Store"], function() {         });
var members =  {         disableAnimations: function () {
const { scenarioId, mockId, request } = action.payload;         APIBridge.set('updateMockedRequest', [ scenarioId, mockId, request ]);
var _this = this;     _this = [];     Object.setPrototypeOf(_this, exports);
var authToken;   if (this.passwordSha1) {     authToken = auth41.calculateTokenFromPasswordSha(this.passwordSha1, this.authPluginData1, this.authPluginData2);
'use strict';
LEAVE = function( channel, blocking ) {         var data   = { uuid : UUID }
i
}      if ( parameters.direction instanceof THREE.Vector3 ) {
svg: 'src/svg/',   img: 'src/img*',
'use strict';
var counter = 0;   function promiser(gen, promise, cb) {
});   this.route('podcast', { path: '/podcast/:podcast_id'});    });
return 'start';       case 'mousemove' :
if (nextOptions.stdin)    throw new Error("Input for the next process invocation has been set already!");   filename = spawn.expandArgument(filename, false);
$(".line_selected").removeClass("line_selected");                            $(this).addClass("line_selected");
return new StopWatch();      };
exports.initWebApp = function(options) {   var config = options.config.email;   var mailer = nodemailer.createTransport(config.method, config.transport);
export function echo(...args) {   console.log('echo ' + args.join(' ')) }
if (headerOverrides) {                     for (key in headerOverrides) {                         if (headerOverrides.hasOwnProperty(key)) {                             headers[key] = headerOverrides[key];                         }
module.exports = EventEmitter;
function e() {             var e = t.call(this) || this;             return e._rewards = [], e         }
ipc.on('synchronous-message', function(event, arg) {   event.returnValue = app.getPath(arg)
const authHelper = require('./auth-helper'); async function ensureSetup(context, resourceName) {
if (!request.url)   throw new Error("no url on request");
that.saveState();    }
import * as HX from 'helix'; function MD5Anim() {
return "Location devices are still initializing.";                 case Windows.Devices.Geolocation.PositionStatus.noData:
attributes = $element[0].attributes;       for (var i = attributes.length; i--; ) {         attribute = attributes[i];
_onwindowmousedown : function() {       try {
, 'firefox/17..latest'         , 'firefox/nightly'         , 'chrome/22..latest'
for ( var m = 1; m < n; m++ ) {         for ( i = 0; i < n-m; i++ ) {             var ho = xs[offset+i] - x;
player = TestHelpers.makePlayer({     tracks: tracks,
constructor(Widget) {         super(Widget);
if (step.name !== step.name) {       throw new Error('Events fired in the wrong order. Step names don\'t match.');     }
bottom = "\\Downarrow";     } else if (delim === "[" || delim === "\\lbrack") {
var Z;  (function (Z) {      var Y = 12;  })(Z || (Z = {}));
function waitFor(checkFn, cb) {   if (checkFn()) {     cb();
}   el.setAttribute(attrClick, "load")
Normalizer.prototype.visitBlock = function(block){   var node;   if (block.hasProperties) {
if (self.listeners(arguments[0]).length > 0) {       self.emit(...arguments);     }
});     it('stops a daemon that is running', function (done) {         var stop = function (next) {
if (typeof atob!=='undefined') {
import client from "js/slycat-web-client"; import ko from "knockout";
constructor(opts) {     var outBuff;
return true;
$(document).ready(function() {   var chatApp = new Chat(socket);   socket.on('nameResult', function(result) {
var a = [];         a[0] = "" + id;
var $box = $(this)          settings || (settings = $box.data('bssettings'));
delta = 1 / 1.2;                         if (typeof this._scaleLimitMap[mapType].min != 'undefined'                          && transform.baseScale <= this._scaleLimitMap[mapType].min
else if(state === 'registered_owners'){        if(obj.first_setup === 'yes'){    $('#startUpPanel, #tint').fadeIn();   }
, linker = require('./linker')
rule: function () {                 var name, value, c = input.charAt(i), important;                 save();
if (this.tight) this.resv();         break;       case 'protected':       case 'transient':
this.onlyInServer_ = !!commandData.onlyInServer;     this.cooldown_ = commandData.cooldown || 0;     this.usersCoolingDown_ = [];
SaveSceneEvent.prototype.commitSave = function (sceneName) {     var obj = (new Converter()).toJSON({
constructor(type) {     super()     this.type = type
if (source) {                         const features = format.readFeatures(source, { featureProjection: projection })
});       } else {
metatests.test('distinct key collector', (test) => {   const expectedResult = {
var InTime = new Date().getTime(); console.log("will save keepalive setting:"+this.checked); chrome.storage.sync.set({
if (typeof name === "object") {     for (var k in name) {      if (name.hasOwnProperty(k)) {       this.data[k] = name[k];      }
(function (window, document, ionic) {
return change.normalize(); }
};     me.callParent();   }
if (cached) {
); } export default store;
if(v1.length){             velocity = createTypedArray('float32', v1.length);             var i;
if (isNewContainer) {             const existElement = this.dom.getFormatElement(contextImage._element);             existElement.parentNode.insertBefore(container, existElement);
} export class Getter extends Emitter {   constructor(store) {
function teleport( entity, destination){   if (typeof entity === 'string' || entity instanceof java.lang.String){     entity = utils.player(entity);
return function (self, args) {       if (self._opbeatUnlisten) {
});     if (typeof done === 'function') {       done(false);
'use strict'; require('../../../TestHelper'); var domify = require('min-dom/lib/domify');
var ctx = Display.context.backgroundCam;    ctx.drawImage(camCache,0,0);
if (hash) {    return Object.keys(hash).length;   }
Object.keys(components).forEach(key => {     let _key = options.prefix ? options.prefix + key : key
if(a < b) return -1;    if(a == b) return 0;   };
_escape = function (s) {   return s.replace(/'/g, "''"); };
'use strict'; var webpackConfig = require('./config');
Diamond.prototype._drawShape = function() {     if (this.width <= 0 || this.height <= 0) {
exports.upperCaseToTitleCase = function(input) {   return (input.charAt(0).toUpperCase() +
this._blocking = false;       return this;     };     Node.prototype.performWait = function() {
if (!contentType) {       var err = new errors.NotAcceptableError('Not an acceptable media type.');       this.error(err);
, queryUtils = require('./util')   , setupQueryModelScope = queryUtils.setupQueryModelScope   ;
EntityManager.prototype.getEntityByName = function (name) {   for (var i = 0; i < this._entities.length; i++) {    var entity = this._entities[i];    if (entity.name === name) {
var code = this.expression.charCodeAt(this.pos);    if (code === 111) {      if (this.expression.charCodeAt(this.pos + 1) !== 114) {
pz.deepClone(value[i]) : value[i]);    }
function checkAuth(storeObj) {     return (nextState) => {         const { user } = storeObj.getState();         if (!user.data) {
this.$dialogSubmitButton.val(action ? 'Save' : 'Add').data('image-id', imageId);             if (imageId === 'undefined'){
} else {         throw new Error('Unhandled config type ' + typeof config + '.');       }
'800': '#6c6c6c',                   '900': '#3f3f3f',               }
for (key in this.table) {             if (this.table.hasOwnProperty(key)) {
define(['exports', 'jquery', 'underscore', 'vendor/js/trimpath'], function(exports, $, _) {
ifNotFound: function(){     throw Error("unit not found?");    },
const names = keysAll(source)           exported = new ExObject           for (const name of names) {
log(`${logPrefix}|$route`, path)   return riot$route(path, route__fn)   function route__fn() {     log(`${logPrefix}|$route|route__fn`, path)
for (i = 0; i < this.positions.length; ++i) {         var line = this.positions[i].str;
class InferredEntryType extends EntryType {   constructor() {     super(key, value)   }
return;     }     if (Array.isArray(value)) {       value = `rgb(${value.join(",")})`;
for (var i = 0; i < Socket.queue.length; i++) {         var q = Socket.queue[i];
this._.ar = false;             __fixKR(this);         }
$scope.isSelected = function (user) {             for (var i in $scope.groupUsers){                 if( user == $scope.groupUsers[i] ){
_reactBootstrap.Row,         (0, _extends3.default)({ key: key }, _lodash2.default.pluck(field.row, 'className')),         _lodash2.default.map(field, function (row, keyRow) {
});  it(`toMoney`, function() {   assert.strictEqual('-9,812,345,678.45678901', '-9812345678.45678901'.toMoney());
if (isArray(current)) {       return acc + appendURL(...current)     }
function loadCompiler(next) {       compiler = new RemixCompiler();
selectTime: function(event) {     var offset = this.$().offset();     var offsetX = event.pageX - offset.left;
return {         x: bezier(...x),         y: bezier(...y)     };
containerId: containerId,       surfaceId: surfaceId     })
module.exports = middify(
it('should merge properties', function(done){     app1.use(function(ctx, next){       assert.equal(ctx.msg, 'hello');
this.play = function(what, next){     next = next || function(){}     if (!what) return next(new Error("No audio file specified"));
, path = require("path") unpublish.usage = "npm unpublish <project>[@<version>]"
toggleBold() {     setSingleStyleProperty(
if (/\.feature$/.test(fileName)) {                          editor.getSession().setMode("ace/mode/gherkin");
for( var i = 0; i<tiles.length; i++ ){        parts = tiles[i].split(':');        if( parts.length == 2 ){
array.each( obj.classList, ( x ) => {       obj.classList.remove( x );      } );
if (!user && passwordMatches) {
log.silly("polling for cacheKey: " + cacheKey + " start: " + start + " to complete", "Polling");     var cc = {};     cc.cacheKey = cacheKey;
var util = require('util')   , EventEmitter = require('events').EventEmitter   ;
self.resolved = false;   self.count = 0; } Waiter.prototype.wait = function() {
var fog = require("../logic/fog");
if (contributors.length > startingSpot + 5){                     for (var iterate = startingSpot; iterate < startingSpot + 5; iterate++) {                         pageToShow.push(contributors[iterate]);
material.fragmentShader = SimpleFS;             pointcloud = new Potree.PointCloudOctree(geometry, material);         } else {
, Pointer = module.exports = ffi.Bindings.Pointer
tabs.setProps({ defaultTab: 'second' });   expect(tabs.find('#second-tab').prop('aria-selected')).toBe(true);   expect(tabs.find('#second').prop('aria-expanded')).toBe(true);
var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];         var StyleSheet = arguments[1];         _lodash2.default.defaultsDeep(options, {
if (!this.fields[name]) {                     throw new Error('Have no parent field');                 }
: makeGetDomFont(view, file)       const getImport = makeGetImport(view, file, as, shouldWriteBoth)
this.frame = function(frame)   {
content.addClass('prime-tab-content');     this.tabContents[dataSet.tabId] = content;   }.bind(this));   this.tabsContainer.addClass('prime-initialized');
if (err) {           log.error(err);         }
if ((textMessages[this.botType]) && (textMessages[this.botType].length > 0)) {           for (let i = 0; i < textMessages[this.botType].length; i++) {             responsePromises.push({
browser.protocol.registerProtocol("goz", request => {
function onKeyDown(e) {             var keyCode = ('which' in e) ? e.which : e.keyCode;             switch (keyCode) {
if ($A.util.isArray(facetValueConfig)) {         for (var i = 0; i < facetValueConfig.length; i++) {             var facetItem = facetValueConfig[i];
export function join( ...fragments ) {    if( fragments.length === 0 ) {
if (i < num_chunks) {             ok = compiler_process.stdin.write(stdInData.substr((i - 1) * CHUNK_SIZE, CHUNK_SIZE),                 "UTF-8");
if (fs.existsSync(scriptFile))   throw new Error("File '" + scriptFile + "' already exists");  console.log("Generating default script in '" + scriptFile + "' " + (local?"[using local nscript]":""));
function update() {
if (match.hash && match.hash.indexOf(hashPrefix) !== 0) {       throw Error('Invalid url "' + url + '", missing hash prefix "' + hashPrefix + '" !');     }
function ouibounce(el, custom_config) {   "use strict";   var config     = custom_config || {},     aggressive   = config.aggressive || false,
_this = __create(_proto2);         }         if (Type.none) {
module.exports = function(Cam) {  const linerase = require('./utils').linerase
if (availableTypes.indexOf(type) === -1) {             throw new Error('Type should be one of : "' + availableTypes.join('", "') + '", "' + type + '" given.');         }
for (var prop in schema.properties) {         if (schema.properties.hasOwnProperty(prop)) {           propTypes[prop] = function (props, propName, componentName) {             var valid = validate(props);
transActionId,     dateString,
function getHandleNearImagePointTouch(element, data, coords) {         Object.keys(data.handles).forEach(function(handle) {             var handleCanvas = cornerstone.pixelToCanvas(element, data.handles[handle]);
if(!hash.type){                 throw new Error("必须指明事件类型")             }             if(method === "on" && !hash.handler ){
{                 dir = __dirname + "\/uploads\/";             }
if (Device.system.desktop) {      setTimeout(function () {       this.getView().byId("searchField").getFocusDomRef().focus();      }.bind(this), 0);     }
if (circular) {         var forwardSequence = sequence;
_handleError: function(jqXHR, textStatus, errorThrown) {   this.set('isSaving', false);
'use strict';
if ( count == 0 ) {      return;
Combine.prototype._maybeEmitValue = function (next) {   const prev = this._currentEvent   if (!prev || !R.equals(prev.value, next))
break;           case UPPER_CASE_KEY(key) + '_FETCH_ERROR':           case UPPER_CASE_KEY(key) + '_UPDATE_ERROR':
for ( key in value ) {     if ( value.hasOwnProperty( key ) && ( key !== '_ractive' || !isArray( value ) ) ) {       newToGet.push( keypath + '.' + key );     }
if (conversationType === 'single') {       if (appKey == null || appKey == '') {         JMessagePlugin.getSingleConversationHistoryMessage(value, from, limit)       } else {
});     chrome.runtime.sendMessage(msg, chromeAPICallWrapper()); }
var ConsoleStrings = []; ConsoleStrings.types = {
}, 0);         },         '-': function(...args) {             return args.reduce(function(a, b) {                 return a - b;
default:       throw new Error('invalid offset size: ' + offSize);   }
if (keyStringLength > 1 && lastChar === '+' && !/[+ ]/.test(charBeforeLast))         keyString = keyString.substring(0, keyString.length - 1);
if (newBitDepth === 8) {         for (let i = 0; i < this.data.length; i++) {
return Canvas; })();
dpDiv.trigger('content:remove', dpDiv);             original._hideDatepicker.call(this, elem, ...rest);             $input.trigger('datepicker:dialogHide');
} const tagquery = str => { return /#/.test(str) } function CachedInput () {
} else {       el.off();        el.observe_field(interval, function () {
this.version = function(number, comment){     var version = anchor.version = {};
}          if (schemaBean.schema.type === "array") {              return new schemas.version["draft-05"].ArrayRenderer(schemaBean, container);          } else if (schemaBean.schema.type === "object") {
import Modal from 'react-modal'; import {gradeText} from '../helpers/gradeText';
new (function() {             this.type = 'viewport';             var ctx;
this._settings = $.extend(true, {}, defaults, options);   }
.then(function(tree) {
if(index < 0) {       index = this._eventTargets.push(target) - 1;     }
} export default Thumbnail;
router.navigate('item_tasks', {trigger: true});     }); });
return function(e){                  func(e);
let A = adapters.NeDB if (Object.getOwnPropertyNames(A.prototype).length === 1)   A = A(Adapter) Test('adapter CRUD', t => {
var targets = fs.readdirSync(targetsDir);     for (var i = 0; i < targets.length; i++) {         var target = targets[i];
} else {             _load(user);         }
if (!exports)         throw new Error("Unable to load dependency " + name + ".");     }
}     tryStates.push(...machine.exceptionBlocks);     return machine.startState;
"use strict"; const chalk = require('chalk')
console.log('Error ' + errorStr);           return false;          });
return $q(function (resolve) {                     var req = new (window.XMLHttpRequest || ActiveXObject)('MSXML2.XMLHTTP.3.0');                     req.open(method.toUpperCase(), url, !sync);
});     ranges = getCSSRanges(rule, sel.start);    } catch(e) {}
} else if (Object.getOwnPropertyDescriptors) {         Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));       } else {
const buffer = [];   function log(...args) {     buffer.push(args.map(stringify).join(' '));   }
if (!cache.openFlag) {                     throw new Error('Must call after open() has successed.');                 }
type: 'leave',                 nick: that.chat_nick             });
coUtils.Debug.reportWarning(       _("%s sequence [%s] was ignored."),       "ETX", Array.slice(arguments));   },
callback(event, filename);             });
if( _inHTMLTag )     _typingGo();    else {
baron({         scroller: '.test_flex-headers .scroller',         bar: '.scroller__bar',
c = mobservable.watch(function() {             cCalcs += 1;
var WEB_GL_ENABLED = true;
} } exports.joinServer = joinServer;
return _regeneratorRuntime2.default.wrap(function deleteDoc$(_context) {       while (1) {
Class.new = function (constructor, args) {          function Create() {              return constructor.apply(this, args);          }
it('inherits from BaseView', function () {       expect(new PayPalView()).to.be.an.instanceOf(BaseView);     });
while (reg.test(tmpl)) {                     tmpl = tmpl.replace(reg, ' $1$3$5~$2$6 ');
var contentTypesCache = null; exports.EditorCommandFactory = (function() {
return (oper_left >= oper_right);     case '<=':
window.settings = {};     window.settings[view_id] = this;     window.messages.post("settings-initialized", {view_id: view_id, setting: this});
if(!message.padId)   {     messageLogger.warn("Droped message, CLIENT_READY Message has no padId!");     return;   }
constructor(map) {         super();         this.map = map;
var _onReset = [];   var onReset = function(name, lambda) {
console.log( stack.yellow ); } exports.getObjectClassName = getObjectClassName;
set: function (type, key, value) {       var store = type === 'local' ? localStorage : sessionStorage;       if (!key || !value) return;
console.info('VFS::exists()', item);     if ( !(item instanceof OFile) ) { throw new Error('Expects a file-object'); }     request(item.path, 'exists', [item], callback);
} else {                 var expander = node.find(".expander");                 if (!expander.hasClass("empty")) {
if(this.transitions[type].handler === undefined){       return next(new Error('Machine does not implement transition '+type));     }
config = config || {};     config.onMouseDown = config.onMouseDown || noop;     config.onMouseMove = config.onMouseMove || noop;     config.onMouseUp = config.onMouseUp || noop;
message.Register("execute", this.Execute.bind(this));     this.Reset();
Object.assign(CollisionComponentSystem.prototype, {         onLibraryLoaded: function () {
,   animationTime:  1000            }
var $ = require('jquery');   var jsonPath = require('jsonpath');
}   }).bind(this);  }
class MarathonStore extends GetSetBaseStore {   constructor(...args) {     super(...args);
var result = true;  for (var alpha = 0x0061; alpha <= 0x007A; alpha++) {   var str = String.fromCharCode(alpha);   var arr = regexp_w.exec(str);    if ((arr === null) || (arr[0] !== str)) {
.replace(/(\/\*[\w'-.,`\s\r\n*@]*\*\/)|(\/\/[^\r\n]*)/g, '')
result = result && recurseCompare(childA, childB);     }
) {           this._removeArrayEl(this.children[i]);         }
, FilesystemError  = require('./errors').FilesystemError   , exec = function (options, out, callback, buildName, ids, files) {       var sizes = {}
} else {         klass = this.find('code').attr('class');         var m = klass.match(/lang-([a-z]+)/);
export default class JassFogState extends JassEnum {}
var Runtime = require('./runtime'); function BrowserCtx() {} var CtxProto = BrowserCtx.prototype = new Runtime.Ctx();
import * as TYPE from 'actions/actiontypes'
constructor() {     super();
class Page extends Component {   render({showDescriptions = false, onUpdateOption = noop}) {     const {kataBundles} = this.props;
import OverflowIcon from "../Icons/Overflow"; import { mediumAndUp, largeAndUp, smallAndUp } from "../../theme/mediaQueries";
bundle = this.bundle( bundle.req, bundle.res, hydrated );   return this.respond( bundle );  }
width: "100%",     minHeight: "100%",     fontFamily: "'Rokkitt', serif",   },
_DeepTreeWalker.prototype = new RefObject;  _DeepTreeWalker.prototype.constructor = _DeepTreeWalker;
capataz.logger.info('Run statistics:\n'+ capataz.statistics);  setTimeout(process.exit, 10); });
var list, calls, i, l;       if (!(calls = this._callbacks)) return this;
if (port.name === 'devtool-background-port') {     _DevtoolPort = port;
acceptsCharsets(...args) {     return this.accept.charsets(...args);   },
_ignored: function() {             var ignored = [];
if (!share.jiff.helpers.array_equals(share.holders, o.holders)) {         throw new Error('shares must be held by the same parties (^)');       }
return cb("cancelled");       default:
testClicks();     var unmounted = ReactDOM.unmountComponentAtNode(container);     assert.equal(unmounted, true);
if(opts && opts.deep) {       for (key in this) {         if (this.hasOwnProperty(key)) {           result[key] = asDeepMutable(this[key]);         }
exports.buildRemoveRange = function(rep, builder, start, end) {
if (arguments.length) {         console.log(util.inspect(obj, false, Infinity, useColors))         console.log()
var OUT_EMPTY_STRING = /out\s*\+=\s*'\s*';/g; var ISTANBUL = /'(istanbul[^']+)';/g; var ERROR_KEYWORD = /\$errorKeyword/g;
};      if(!webshims.support.formvalidation || webshims.bugs.bustedValidity){   implementProperties.push('validationMessage');
for (let node of nodes) {       let watchComponent = () => {         let installer = checkboxModel[node];
var autobin = coerce('autobin' + binDirection);
return !isNaN(unformatted) ? unformatted : 0; } export default unformat;
c = c.getElementsByTagName('layout-container')[0];       if (window.elementLayout.get_layout_values(this.update_layout_bound))         c.clearAndRender(window.elementLayout.get_metrics_template());
target = $(this),         args = [settings];     for(var i = 1, l = arguments.length; i < l; i++) {
for (var i = 0; i < this.d.length; ++i)                 this.d[i] *= v.d[i];
}             }).catch((err) => {                 this.log.error("[ERROR]AC State Sync fail!Error:" + err);             });
if (!first.type.equals(Shade.Types.bool_t))             throw new Error("operator " + operator_name +                     " requires booleans, got argument 1 as " +
return `wadors:${uri}`; }
if (method === 'GET') {                     data = $form.serialize();                 } else {
}         var child = <Component ref="field" {...props} field={field} name={name} form={this.props.form}                                error={err}
this.addState(event.from);       this.addState(event.to);     }.bind(this));
return JSON.parse(fs.readFileSync(resolve(__dirname, 'locale/en.json')));   }
, valid = true     , required = this.required;
if (this.options.requestParams) {       Util.extend(query.params, this.options.requestParams);     }
_.each(this.state.Current, function(instances, protocol) {    _.each(instances, function(key) {     protocols.push(<Protocol key={key} protocol={protocol} name={key} />);    }, this);
this.name = '';     this.state = Element.createState();     this.xdata = Element.createXData();     this.children = [];     this.parent = null;
var getBaseUrlAsync = async function () {
describe('sketchplate.hooks.initServer()', function(){     it('should connect successfully', function( done ){         sketchplate.hooks.initServer('./', { port: 6000 }, function(err, server, app, port){             assert.equal( err, null );
var finishHandler = function () {                 if(!cmp.isValid()) {
return this.varstmt();         case '{':
$(ebaySpecsBlock).find('.dropDownList li, select option, label.checkbox').each(function() {     if($(this).attr('parent-name') == elName) {      var parentValues = $(this).attr('parent-values');
if (typeof it[change.path[i]] === 'undefined') {           it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};         }
return commonUtils.build('covar-settings-editor', CovariateSettingsEditor, view); });
if (!((objectModelDescriptor != null) && objectModelDescriptor)) {               throw new Error("Internal error: Can't find object descriptor for valid path ID '" + pathId_ + ".");             }
tab = {                 init: function () {
this.isState = $state.is;
displayCheckbox('red');         await error.log(err, auth);         process.exit(1);     }
})                 .then((userId) => {                   this.props.loggedIn(userId);                 });
var canSaveCode = !!this.props.token;       var fetching;
function mixin(obj) {   for (const key in RequestBase.prototype) {     if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key)) obj[key] = RequestBase.prototype[key];   }
}   url = url.replace(/&/, '?')   window.history.replaceState(null, null, url)
} require('./methods/normalize')(Term); require('./methods/isA')(Term); require('./methods/out')(Term); require('./methods/tag')(Term);
submit() {     var value = this.refs.input.getDOMNode().value
toggleInformation: function() {             document.body.classList.toggle('photo-info-visible');             settings.display_height = getDisplayHeight();
if (name == IncrementalFont.BASE) {
function bind(context, method) {  if (!context || !method || (typeof method == 'string' && !context[method])) { console.log("bad bind arguments"); }  var curryArgs = Array.prototype.slice.call(arguments, 2)
vg.merge = function () {     var args = flatten(arguments);     var shapes = [];
} else if (options.textAlignment === 'right') {                 this.lines[i][1] = this._maxLineWidth - currentLineWidth;             }
var client = new WallClient(config.server.uri, config.qos);  var messages = new MessageContainer($("section.messages"));
module.exports = {
var result50 = result51 !== null         ? (function($1, $2) {  return new PEG.Grammar.Optional($1);    }).apply(this, result51)         : null;
var line = [];         var lineLength = prefix ? prefix.length - 1 : indent.length - 1;         parts.forEach(function (part) {
transf = "";
jQuery('input[name^="'+vessel+'-dutycycle"]').each(function (index) {   $(this).parent().hide();   }
'use strict';
var parseEnvVariables = function parseEnvVariables(input) {   var regex1 = windows ? /(\%.*?\%)/ : /(\${[a-zA-Z_][a-zA-Z0-9_]*}|\$[a-zA-Z_][a-zA-Z0-9_]*)/;   var regex2 = windows ? /^\%|\%$/g : /^\${|}$|^\$/g;
instance._syncIconUI();    },
}; } export function windowBounds() {
} window.swagger = SwaggerUI(Object.assign(config, window.drsSettings));
updateRectangles: function() {     this.updateRectanglesOld();     let attrs = this.get('attrs');
result.raw = keyData.slice().buffer;                          break;                      case 'ECDH':                      case 'ECDSA':
}         callback(...args);       }));
var app = window.app || {};
_.forEach(_.castArray(deps), ({groupId, artifactId, version, jar, link}) => {             this.addDependency(acc, groupId || 'org.apache.ignite', artifactId, storedVer || this._extractVersion(igniteVer, version) || dfltVer, jar, link);         });
, tooltipOpts: {       content: ""     }
Renderer.prototype.getLayout = async function(id) {   if (!id) return false;
return false;                 } else if ((e.which === $.ui.keyCode.RIGHT || e.which === $.ui.keyCode.TAB) && $focusElement.attr("id") !== "topnavigation_user_options_login_wrapper") {                     closeMenu();
initialize:function(){          this.fastSearchNodes = {};          this.attributes.nodes = [];      },
if(!callback) {             throw new Error('No callback function was given.');         }
super.connectedCallback();     this.addEventListener("chartist-render-draw", this._onCreated.bind(this));   }
render() {      const {status, isSubmitting, passwordOnChange, onChange, passwordHelperText} = this.props      return (
Game.prototype.preload = function () {   this.game.analytics.trackEvent('scene', 'preload', 'game');   this.game.stage.backgroundColor = '#000'; };
return /^\/apps\         }, function*(routingContext) {             var parts = this.req.url.split('/');
}   global.ng.common.locales['ar-ps'] = [     'ar-PS',
d3l.select("g.margin")    .attr("transform", `translate(${hOf}, ${vOf})`)
if (4 === 5)  console.log ("goodbye world");
console.log("orangeejs init");   console.log("orangeejs build samsung|lg|ios");   console.log("orangeejs run samsung|lg|ios"); }
AI.prototype.getBest = function(meta) {  var inputs = this.buildInputs( meta.score, meta.moved );  var action = this.brain.forward( inputs );
removeModule(key) {     var module = this.modules[key];
return checkCurrentRoute(currentRoute, model.value);   })
var index = ++this.requestIndex;   return function( content ) {    if ( index === this.requestIndex ) {     this.__response( content );
.then((data) => {         if (data.error) {
return 0;           }           return scope.accessors.y1.bind(this)(d);         }.bind(this));
if ( fragment ) {    for ( i = 0; ret[i]; i++ ) {     if ( scripts && jQuery.nodeName( ret[i], "script" ) && (!ret[i].type || ret[i].type.toLowerCase() === "text/javascript") ) {
this.protocol = options.protocol || 'http';    this.port = options.port;    this.server = options.server;
var proto;   var sendArray = [];
var methods = mejs.html5media.methods;   for (i=0, il=methods.length; i<il; i++) {    (function(methodName) {
top: bottomTop,           bottom: bottomTop         }
for(var x = 0; x < count; x++){             if (opts.enableAria && (content = $headerColumns.eq(x).text()) ) {               cells.push('<th scope="col" class="floatThead-col">' + content + '</th>');
size = textLength + wordSpace + 1;                }, self));
}    });    break;
self.fileIndicator.textContent = 'decoding audio data...';            self.context.decodeAudioData(req.response, function(buf) {
this.vSlices = vSlices;     this.hSlices = hSlices;     super(PROGRAM, null);     this.uniforms.u_normalMatrix = mat3.create();
this.start = start;     }
Socket.prototype.close = function() {   if (!this.disconnected && this._wsOpen()) {     this._socket.close();
cah.log.debug(textStatus);
node[keypart] = sourceNode.val();                 }
if (def.min !== undefined && (def.exclusiveMin ? def.min >= value : def.min > value)) {     return { type: def.exclusiveMin ? ErrorTypes.MIN_NUMBER_EXCLUSIVE : ErrorTypes.MIN_NUMBER, min: def.min };   }
process.exit();       });
beforeEach(function(){       m.postgrest.token(token);     });
}); }; module.exports = AInPHasADistinctStyle;
})             }).then(() => {
import {getRootPath} from '../util/BrowserUtil.js'; import {fetchUrl} from '../util/WebUtil.js'; import {parseWorldPt} from '../visualize/Point';
destroy: function () {             for (var i = this.children.length - 1; i >= 0; i--) {                 this.children[i].destroy();
$contentEl.css('height', `${$contentEl[0].scrollHeight}px`);     app._clientLeft = $contentEl[0].clientLeft;     $contentEl.transition('');
function ObjectDict() {          this.__data = [];      }
this.index = prev ? prev.index+1 : 0;  }  function TweenAction(prev, t, scope, funct, params) {
self.execute(statements, function(cd) {         if (cd.end) {             done(null);         } else if (cd.start) {
var SchemaObject = require('./mixed')   , isoParse = require('./util/isodate')   , _ = require('lodash')
var fontsmith = require('fontsmith'),     fs = require('fs'),     path = require('path');
return a + b;     case "product":
$scope.data = global.data;         $scope.filters = global.filters;
link: function(scope, element, attrs, ctrl) {        var node = scope.node;          element.addClass('ivh-treeview-toggle');
try {       res = await this.request(url, { method: 'HEAD' });     } catch (e) {
function Mentions() {         this.is_not_init = false;         this.unread_mentions = 0;
this.time = opts.time;             this.writeIndex = this.readIndex + ((this.time * 0.001 * T.samplerate)|0);         }
import App from './src/App';
var rx = /@|[$_A-Za-z][$\w]*|[\-=]>\s*|\S+|\s+/g;       var allWhitespace = /^\s+$/;
return isFunction(e[name]); }
setup_prompt_history: function() {         var entries_ = [], alt_ = [], alt_lang_ = [];         var curr_ = 0;
if (elWidth) {                      aspecty.count ++
it('a function that takes an argument but never calls callback', function(done){     asyncDone(neverDone, function(){       done(new Error('Callback called'));
function loadBytestream(bs) {     let ret;     let pix = new PixelData(codeToPif(bs));
while(!(dojox.json && dojox.json.ref && dojox.json.ref.useRefs) && object.__id.match(parentIdRegex)){
_isPageVisible() {     if (this.get('_fastboot.isFastBoot')) {       return false;
"wiechel": {n:"Wiechel", arg:null, scale:360, ratio:1.0, clip:true},   "winkel3": {n:"Winkel Tripel", arg:null, scale:196, ratio:1.7} };
var j, jLen;     var letterValue;
.then(val => {              })
, collect, data, nestRelease, token   , preDeclSet, ambigSet, preExpSet;
if (targetNamespaceDescriptor.idComponent !== addressedComponentDescriptor.id) {               throw new Error("Invalid path ID specified does not resolve to a namespace in the same component as the source address.");             }
var cpyrows = this.rows;   for(var i = 0; i < cpyrows.length; i++){    try{
var attr = utils.findAttr(digestAlgoNode, "Algorithm")    if (!attr) throw new Error("could not find Algorithm attribute in node " + digestAlgoNode.toString())    var digestAlgo = attr.value
case "ObjectPattern":         queue.push(...pattern.properties)         break       case "ArrayPattern":
set(host, 'data.W9.receivedFromUserIds', receivedFromUserIds);   host.update({ data: host.data }); }
var innerNode = t._contextNode;     if((has('webkit') || has('ie') < 8) && !g.isLeftToRight()){      left = innerNode.scrollWidth - innerNode.offsetWidth - left;     }
return rescale(); }
};   console.log("Created GlobalSign API parameters:", JSON.stringify(args));   return args;
if (this.state.market.type === "combinatorial") {       var events = this.state.market.events;
case 'EADDRINUSE':         error('%s is already in use.', -1, [config.get('port')]);         break;       default:
timeout = null;       if (!immediate) { func.apply(context, args); }    }, wait);
});   exit(1); }
var expandable = ['config', 'json'];   data = grunt.utils.recurse(data, function(value) {     if (typeof value !== 'string') { return value; }
storyRecord.template = template;      tiddler = this.wiki.getTiddler(event.tiddlerTitle);      this.wiki.addTiddler(new $tw.Tiddler(       {
const templateUrl = file.replace(           /^src\/(.*\/[^.]*).*$/,           `${prefix}$1.html`
} else {                                 loop(this);                             }
get positive()      { return {fontColor: "#292"}; }   get strong()        { return {fontWeight: "bold"}; }
plainText = appendPlainText(child, trailingSpace, chars);                      trailingSpace = plainText[1];
.append('li')                 .attr('style', function(d,i) {                     var top = (groupHeight + barGap) * i;
name = 'legacy';             }
network.denizens[3].enqueue(network.time, 1, 4)     network.intercept([ '7' ])
function immediatelyFailingFork() {     throw new Error('immediatelyFailingFork')   }
}, function () {   var i = this._i++;   var done = !(i < this._l);   return { done: done, value: done ? undefined : i };
else if (typeof __dirname !== 'undefined') {     path = __dirname + '/dictionaries';    }    else {
$scope.$watch($attrs.disabled, function(disabled){             if(disabled) {               dropdownToggle.addClass('disabled');
this._onAttach = [];   if (this.policy && this.policy.reattach) {     this._timeouts = u.generateTimeouts(this.policy.reattach);
module.exports = SchemaForm;
} else {                  throw Error( MSG[ERROR.UNMATCHED_AST]);
if (err || data.hasOwnProperty('message')) {             log.error('Error buying at GDAX:', err || data.message);             return this.retry(this.buy, args);         }
function cleanse(html) {       var cleaner = document.implementation.createHTMLDocument("cleaner");
for(var s = 0, len = serviceMatches.length; s < len; ++i)   {
utils.getUnique = function (array) {         var u = {}, a = [];
logger.info('Latest Titanium SDK (' + sdkVersion + ') is already installed.');        cmdCallback();        return;       }
setImmediate(function () { callback(undefined, block); });   };
render() {     const { priority } = this.props;
returnValue = $(toggle).prop("checked");     }
it('can\'t pin item not in datastore', () => {       const falseHash = `${pins.root.slice(0, -2)}ss`
this._layers = {};         this.dbp.lang = options.lang || "en";         this.dbp.includeCities = !!options.includeCities;
exports.install = function (server, prefix) {   prefix = prefix || '/accounts';
exit(1);             return;           }
function Forward(signal, deferred) {   var services = $.map(this.services, function map(service) {    return $.Deferred(function deferredSignal(deferSignal) {
if(db && db.length > 0) {    for(let i = 0; i < db.length; i++) {     if(db[i]['name'] && db[i]['name'] == 'mongo') {
it('paste', function(done) {       this.event.clipboardData.types = ['text'];       spyOn(this.event.clipboardData, 'getData').and.returnValue('|');
var getFormElement = function(field) {           if (field === "message")
getCleanNameFromNotation(str) {     str = str.replace(/([[\]<>]+)/g, '').replace('...', '');     return camelCase(str);
this.unloadModules(this.modulePath);     this.logout(() => {         this.removeListener(this.CHAT, this.onMessage);     });
function makeLine(key, value) {    key = String(key);    value = String(value);    formatted.push('"');    formatted.push(key.replace(/"/g, '\\"'));
var writer = require('../serializers/writer')   , field_flags = require('../constants').field_flags
}.bind(this),               iKey,               this.$('iframe')[0],               this.extractOrigin(tValue)
else {     handler = new StaticHandler('./static');   }
import TaskSidePanelContents from './TaskSidePanelContents'; import Util from '../utils/Util';
if(!!this.props.tracks && !!this.props.tracks.length && this.props.tracks.length > 0) {             return (
, Transaction = require('../transaction')    module.exports = (function() {
var React = require('react')   , dates = require('../util/dates')   , List = require('../common/list')
switchName: function (name) {     return util.execFile([this.command(), '$(Get-VMSwitch | where {$_.SwitchType -eq "external"}).name']).then(out => {
var j = {}   for (var k in this.rows) {     if(this.rows.hasOwnProperty(k))       j[k] = this.rows[k].state   }
search: function(input) {       this.clear();       var results = this.find(input);
if(utils.isDefined(val)) {
user: user,          success: deny       });
import React from 'react' import find from 'lodash.find'
if (outputFile) {             const fs = require('fs');             fs.writeFileSync(outputFile, response.body, {                 encoding: 'utf8',
var pomelo = require('../../pomelo'); var Package = require('pomelo-protocol').Package; var CODE_OK = 200; var CODE_USE_ERROR = 500;
assert.strictEqual('2015-12-29 01:11:01', d1.dateAdd('d', -1).date2Str());  });  it(`dateAdd时`, function() {   assert.strictEqual('2015-12-29 02:11:01', d1.dateAdd('h', 1).date2Str());
existsStub.withArgs(sinon.match(/package\.json/)).returns(false);             existsStub.withArgs(sinon.match(/\.ghost-cli/)).returns(true);
}; window.Clip = require('./clip');
if (!this.socket) {     this.ops.push(() => {       this.socket.setKeepAlive(enable, delay);     });
this.mHeartbeat.clear();     this.mPort.close(function(err) {                  if (err) {
return q.promise;     }     function addItemToKeyInStorage(key, item){
if(!scope.item.gridClasses) {           scope.item.gridClasses = element[0].className.replace('ng-scope', '').replace('ng-isolate-scope', '').replace('ui-resizable', '');         }
if (!observable['equalityComparer'] || !observable['equalityComparer'](_latestValue, newValue)) {                 observable.valueWillMutate();
{                                                   document.location = '/scans.html';
if (params.fn) {    this.append((("\ \n      return " + (this.returnResult())) + (";\
const useAnalyticsData = createAPIHook(async (api, { id, projects, fromDate, currentProjectDomain }) => {   if (!featureToggles.isFeatureEnabled('analytics', id) || !projects.length) {     return getSampleAnalytics();
if (DEBUG) {                                     warn("Cannot find uid of " + o);
var jsonSafeStringify = require('json-stringify-safe') var crypto = require('crypto') var Buffer = require('safe-buffer').Buffer var defer = typeof setImmediate === 'undefined'
return () => {         scrollableEl.removeEventListener('scroll', handleScrollOrResize);         window.removeEventListener('resize', handleScrollOrResize);       };
function query(firstLevelArgs) {
this.core.addPlugin(plugin)       this.setupExternalInterface(plugin)     })     return this.core
console.warn("elementLocation(", el, ") has null parent");       throw new Error("No locatable parent found");     }
const fs = require("fs-extra"); const lodashMerge = require("lodash.merge");
function insertNewView() {       if (self.inserted) {
},     setChartOption: function() { return; },     check: /[a-z0-9_]+/i,
var rowElement = this.createListElementCallback( meta, data );    index = this.insertElement( rowElement, meta );        this.triggerEvent( 'onInsert', {
assert(priv);   const nonce = await findNonce(key, priv);
var list = [];             array.forEach(moment.months, function(name, idx) {                 list.push({
this.executeAction(function () {                 this._restore(state);                 this.dispatch('UPDATE_TITLE');
, Painting = require('../painting')   , Location = require('../location') module.exports = inject;
else {                 throw new Error("Trying to cancel a finalized resolver: " + this.name);             }         }
if (isRepeat && column == 0 && !(count > 1))                 column = util.getRightNthChar(editor, cursor, param, 2);
}.bind(this)                     });                 }.bind(this));             }
const exports = function(options) {
, _gitcmd      = replace(gitcmd, { sincecmd: _sincecmd, untilcmd: _untilcmd })
if (this.seal) Object.seal(this); }
global.IDENTITY = (function() {   return function (str) {
groupedArgs.unshift(value);           value = listener(...groupedArgs);         });
module.exports = function (obj, key, value) {   var flags = obj.__flags || (obj.__flags = Object.create(null));   if (arguments.length === 3) {
controller.on('settingschange', function(e) {   ext.trigger('settingschange', e);   });
}     using.call( this, props, feedback );    };
for (var i = 0; i < images.length; i++) {         hash[images[i]] = 0;       }
this.prompt(prompt, function (data) {     _this4.appFramework = data.appFramework;     done();
var userLectureList2 = new app.ListLectureBlocksView(); var lectureActiveView = new app.LectureActiveView(); var timetableTabView = new app.TimetableTabView();
import { Field } from 'components/fields' import { StyledLoadingBar, StyledSpinner } from 'components/loadingIndicators'
});       patchResponse(req, res, this.patchResponseOptions);
}     return contextGet(context, ['intl', 'locales']); }
el: document.body,         model: self.me       });
if ( $parentH === 0 ) {     console.log( 'undefined' );
if (x instanceof Runtime.vec)         return internal._evalVec(internal._extVec(edge0, x), internal._extVec(edge1, x), x, Builtins.smoothstep);     var t = Builtins.clamp((x - edge0) / (edge1 - edge0), 0, 1);
AlarmCore.prototype.playMediaPrepared = function () {   this.taskTimeout && clearTimeout(this.taskTimeout)
$('#dvs-admin-modal').html('').addClass('dvs-hidden');         $('#dvs-admin-blocker').addClass('dvs-hidden');     }
status: 'error',     description: 'An exception occurred from the underlying WebSocket.'   },
else           top = stackOffsetNeg, bottom = y + stackOffsetNeg;
, groupMemberContext = {}
case NoteShape.OriscusAscending:             return oriscusState;           case NoteShape.OriscusDescending:
} else if(action == "uninstall" && !pluginInstalled(plugin_et, config_file)) {           throw new Error("Plugin "+plugin_id+" not installed");       }
ajax: {    once: TRUE   }
constructor(props, context) {     super(props, context);     bindAll(this, 'handleCancelBuild', 'cancelBuild', 'cancelModal', 'closeCancelModal');
if (resource.type === "Buffer") {                 this.listing.updateValue(resource);
, minilog = require('minilog')   , _s = require('underscore.string'); var log = minilog('traverson');
selectedDate = new String(t0);
console.log('dosomething! ...maybe - to fix size')
$form.find("input[name='mobile']").val(user.mobile);             var roleArr = [];             for (var i = 0; i < user.roleIds.length; i++) {
this._camera = this.scene.getCamera();         }
mhlp.updateOptions(this.config.options, mOpt);
module.exports = new Item();
if ($('#filecontents h1').length > 1) tags.unshift('h1');   for (i = 0; i < tags.length; i++) { tags[i] = '#filecontents ' + tags[i]; }   var lastTag = parseInt(tags[0][1], 10);   $(tags.join(', ')).each(function() {
var number = divaData.getCurrentPageIndex();
var func = eval(script.callbackMethod);              func.call(this);
$.evently.fn.before.async = function(h, cb, args) {     $.evently.utils.funViaString(h.async, this).apply(this, [cb].concat($.argsToArray(args)));   };
break       }     }
d3g: d3g     }   }
ENV.APP.rootElement = '#ember-testing';   }   if (environment === 'production') {     ENV.baseURL = '/ember-seamless-immutable'   }
var args = [].slice.call(arguments)     , msg = args.slice(1);
break;  }
self.getPortOpen = (port, cb) => {     request({       url: "https:
value = JSON.parse(value)    } catch (error) {         }
import "./lib/mdi-weather-iconset-svg.js";
mountContainer(source, index, noRender) {     const optionList = this.findDropdownVariables(index, noRender);     const props = {optionList, noRender, source, ...this.props};
toggleExpandAll() {         const {
.up()             .box0(blocks.glass_pane,20,3,20)             .up(3);     }
return 'paper-conference';
const assert = require('assert'); const http = require('http');
"processedMessageCount": "number",             "failedMessageCount": "number"
var rname = rule_name.replace('_reply_', '', 1);       rule = this.get(rname);       if (rule.replies) {
} else {         log.info(this.title + 'Processed', migration.name);       }
nmcln.on('ready', function(){
var path = require('path');
$merge (...args) {     this._config = _.merge.apply(this, args.unshift(this._config))     return this
isAdmin(req, res, next) {     Tests.findOne({ where:
} else {       val = (first + last) / 2;     }
function createUser (id) {         let time = Date.now()
splice.apply(out, [out.length,1].concat(resolvePathObjects(path(root), root)));     continue;
var divWidth = $('#visualization-graph').width();                 var height = bodyEl.clientHeight;
MongooseStore.prototype.set = MongooseStore.prototype.save = function *(sid, blob) {   try {
import * as util from './util';
invariant(i.value.fieldInfo.array);       }
this.__domReady = true;       this.__fireReady();     },
case 'trustline':         details = {           title: "Trustline " + d.category.split("_")[1],
vLocSumX += vWidget.getColumnBoxWidth(i) + vSpacingX;   }
obj[key] = b[key];     }     for (key in a) {         obj[key] = a[key];
newOpts.tense = Tense.Pa;         return  this.conjugate(verb , newOpts) + "ら";       }              case Mood.Opt:
if (this.polling_ == true) {           this.timeout_ = setTimeout(this.pollActiveUsers_.bind(this),
'02d': 3,     '03d': 7,
this.manualConfirmSubscriptions = [];
constructor(tree, scopeBuilder) {     super();     this.scopeBuilder_ = scopeBuilder;
{ baseInput(i) }        <span className="denomination">{ p.type === BINARY ? binaryLabels[i] : scalarLabels[i] }</span>       </div>
multipart.addText(key, self.params[key]);           loop();         }
console.debug('searchUsersAsync ' + term);              return new Ember.RSVP.Promise(function(resolve) {         if (term.length === 0) {
function dragEnd(event) {     that._$window.off('mousemove.tableheader');
if (transaction) {                 transaction.updateModel(properties);
if(duration.indexOf("ms")!==-1){                          scale = 'ms';                      } else {
callback()   }) }
options = {         type: 'POST',
static innerAngle(n) {         return MathHelper.toRad((n - 2) * 180 / n);     }
for(id in old_list){             $(old_list[id]).remove();
try {     if (require.cache && !!require.cache[localTemplate]) {       delete require.cache[localTemplate];
if (!this.isEnable) {       throw new Error('ZilPay is disabled.')     } else if (!this.isConnect) {
} else if (parentObject3D instanceof Uniform) {       parentObject3D.setValue(newResource);
unspecifiedConfigOwner: "L\'utente autorizzato non è stato configurato.",     invalidConfigOwner: "Il proprietario della storia non è autorizzato.",     createMap: "Impossibile creare la mappa",
callback(null, true);     })
export class ParallelLine extends Element {     constructor(config) {         super(config);
},             update:function(node, val ){                 node.checked = !!val             }
console.log(data);   screen.destroy(); });
this.animation = new Animation(settings);             this.components = settings.components || [];
, favicons = require("gulp-favicons")   , gutil = require("gulp-util")
} } LessThanOrEqualExpression.sign = $lex.LessThanOrEqual;
"use strict";
constructor(sekshi, options) {     this.author = 'ReAnna'
context: this,         isTopLevel: !(this instanceof StepContext),         data: {},
self.addEventListener('fetch', function() {   let x = CONSTANT + 1;   return x; });
if (result.length === 0) {       throw new Error("Ooops!");     }
for (let i = 0; i < n; i++) {     print('Sensor#', i, 'Temperature:', getTemp(rom[i]), '*C');   } }, null);
return x > 0 ? 1 : -1; }
case 4965:       throw new UError('EMPTY_RESULTS', err);     case 5000:
}       }, _callee3);     }));
const Knex = require('knex'); const Promise = require('bluebird');
function importGroup(svg) {
}    } else if ( (geometry && geometry.isGeometry) ) {     var fvA, fvB, fvC;
function makeCallback(taskName) {             return function(...args) {                 var callback = _.last(args);                 runningTasks.push(taskName);
this.x += 1;
for (var testCase in testCases) {         test.assertEquals(utils.cleanUrl(testCase), testCases[testCase], 'cleanUrl() cleans an URL');     }
if (this.visible) {     filter.enabled = false;     renderer.render(this, texture);
);     me.callParent();   }
setTimeout: function() {     this.timeout = setTimeout(function() {         this.sipFromBuffer();     }.bind(this), TIME.betweenCommandsDelay);   },
hoodie.store.find('task', '123').conceal()
(function() {
, 'parse': 'showParse'    }
}      setTimeout(process.exit, 500);     }
render() {         const { activeAccount, accountList, activeAsset, assetList } = this.state;         const states = this.mapAccountsOnStates(accountList);
var $ctrl = this;
messageId = id;     }
getToolConfs: function () {             var me = this,
data.user.teams = [];                   }                   if(data.user.sessionHistory == ["1"]){                     data.user.sessionHistory = [];
$.each(this.split(','), function(j) {       var buttonName = this;       if (buttonName == 'title') {
NOVAE.SheetCount++;
function tameException(ex) {     var tamedEx = orig.tameException(ex);
helpers.each(points, function(point, index) {     me.updateElement(point, index, reset);    });   },
throw new Error(`layer ${id} already exists! remove first...`)     }
proceed.apply(this, args);             if (tooltip.events && tooltip.events.show) {
}, addTextNodeIfNoChildren = function (frag) {             if (!frag.firstChild) {                 frag.appendChild(frag.ownerDocument.createTextNode(''));             }
return;    for(var i = 0, l = this.definition.dataSource.length; i < l; i++) {
if (!(this instanceof Provider)) { throw new Error('missing new'); }     network = Provider.getNetwork(network);
logObjectPrinter: o => util.inspect(o, { depth: 2, colors: true, breakLength: 100 }),  });
}     res = _.pluck(_.values(coms), "com");
lighting = rvertex.lighting2;     const r = (lighting & 0x7C00) >> 10, g = (lighting & 0x03E0) >> 5, b = (lighting & 0x001F);     lighting = ((b << 3) + 0x000007) + ((g << 11) + 0x000700) + ((r << 19) + 0x070000);
let newSlideNumber;
if (jqXHR.status !== 0) {                             alert(me.instance.getLocalization('admin').metadataReadFailure);
.on('pointerup', onTakeEnd).on('pointerup', onDragEnd)                                   .on('pointerupoutside', onTakeEnd).on('pointerupoutside', onDragEnd)                                   .on('pointermove', onDragMove);       }else if(this.usable){
didInsertElement: function() {     var parentView = this.get('parentView');     parentView.registerOption(this);
display: 'flex',         width: size ? size({ ...label }) : width,         height: size ? size({ ...label }) : height,         margin,       }}
working = false;         return ui.error(err);       }
it('should properly configure actors in forked process', async function() {     testSystem = actors({
var Gun = Gun || require('../gun');  if(typeof window !== 'undefined'){ root = window }  describe('Gun', function(){   var t = {};   describe('Utility', function(){
if ((val > 0xff) || (val < 0)) {                     throw new Error("'pack' error.");                 } else {
} else if (project_target - num < closest && project_target > num) {                     closest = project_target - num;                     best = images[i];
}     this.searchWrapper.current.addEventListener("click", this.listenerCallback);   }
} function matcher(...args) {   const regex = toRegex(...args);   return function(num) {
this.container.appendChild(this.sibling)     this.container.appendChild(this.commentAnchor)     document.body.appendChild(this.container)
const iterator = iterable[Symbol.iterator]();   for (;;) {     const { done, value } = iterator.next();
if (rel) {
if (onsave)      that.setEditor(onsave);     else
if (typeof toReplace === 'string' && toReplace !== '' && toReplace !== 'sidr-inner') {       $element.attr(attribute, toReplace.replace(/([A-Za-z0-9_.-]+)/g, 'sidr-' + attribute + '-$1'))     }
logUpdate(`\n${pos} ${dim('Please enter a valid url!')}\n`);   end(1);  }
if (this.telnetState === 'getprompt') {       const stringData = chunk.toString()       let promptIndex = utils.search(stringData, this.shellPrompt)       if (utils.search(stringData, this.loginPrompt) !== -1) {
{                     xtype: 'tbspacer',
var mathRe = constructMathRe(); var onlySymbols = new RC("^[\\s" + REEscape(mathSymbols) + "]*$"); var onlyNumbers = new RC(/^[\s\d]*$/);
item.GitUrl = gitUrl;      exports.getDefaultSshOptions(serviceRegistry, item).then(function func(options){       var gitConfigPreference = new GitConfigPreference(serviceRegistry);
));      var offsets  = this.handle.cumulativeOffset();      this.offsetX = (pointer[0] - offsets[0]);
return output     }     $scope.randomExamples = generateRandomExamples(useCases);
build = function (data, level, forceFull, forceLimit) {               var limit = $.isNaN(forceLimit) ? 3 : forceLimit;
if (options.timeout) {     roptions.timeout = options.timeout;
};             var datagram = new DebugHeader(options);
var findDomainInEmailPattern = /@[^\s]+/ var findEmailPattern = /[\w._-]+@[\w.-]+[\w]/g
} else {           throw new Error('Incompatible rotation controls: %s', data.rotationControls[i]);         }
var files = grunt.file.expand({filter: 'isFile', cwd: process.cwd()},
'users/:id(/:section)': 'usersShow',         'users': 'nothing',         'lists/:id': 'listsShow',
setQuestionStateForRequired(event) {     let field = 'required';
return (       <BrowserRouter basename="/cdap">         <div className="cdap-container">
} var semver = require("semver")   , npm = require("./npm.js")
const fn = async () => { };
menu = list         }
}   function $nest(selector, properties) {     var this$1 = this;     if (arguments.length === 1)
var count = 0     spyOn(apmServer, 'sendErrors').and.callFake(function (errors) {
({  0:  function(module, exports, __webpack_require__) {
var Class = basis.Class;   var createArray = basis.array.create;
default:    throw new Error("format must be HEX, TEXT, B64, or BYTES");   }
{                     let fields = openApi_guiRemoveReadOnlyMark(openApi_guiPrepareFields(api, val.api[query_types[q]].fields, true))
let css=(E,S)=>(E.length?E:[E]).map(e=>Object.keys(S).map(s=>(e.style[s]=S[s],e))[0]);
return next();         case 'ff':             plugin.loginfo("fail, address not local");             return next();         default:
if (support == 'N             message.react("💢");
_.options = this._.options;         _.buttonClick = str => {
let ret = Object.keys(this.fetchedTiles).filter(x => this.visibleTileIds.has(x));         return ret;
return "\x1b[36m";     }
this.compilerInfo = [4,'>= 1.0.0']; helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
"Delete previous character for collapsed (single cursor) selection", function() {         this.editor.selection.set({           start: [0, 4],
res.body.should.have.deep.property('[0].name', null);       res.body.should.have.deep.property('[0].url').that.match(/^https?:\/\/[^/]+\       res.body.should.have.deep.property('[0].author.name').that.is.a('string');
let plaintextDiffer = new EditorsDiff() let markdownDiffer = new EditorsDiff(/([\s,.:]|[*\[\]()])/) export function plaintextDiff (original, final) {
logger.info(         "You can check on their status at " + utils.consoleUrl(projectId, "/functions/logs")       );       return Promise.reject(new FirebaseError("Failed to get status of functions deployments."));
$file_input.fileupload({     url: $(this.form).data('upload-url'),
return _.flatten(_.map(this.perks, function(p) {       return _.filter(p.upgrades, function(u, i) {         return i <= p.upgradeLevel;
import React from 'react' import { Sidebar } from './Sidebar'
var name = 'name3373707';       var done_ = true;       var expectedResponse = {
(function() {   var async, exec, fileUtil, fs, path, _;   fs = require('fs');
return parseXmlString(metadata); }
if (parents.length > 1) {           cloneIcon = (
sendDrawRequest : function(config) {         var startRequest = this.instance.sandbox.getRequestBuilder('Parcel.StartDrawingRequest')(config);
, table     , i;
Connection.prototype.extractFrame = function () {  var fin, opcode, B, HB, mask, len, payload, start, i, hasMask
var Base = new function() {   var hidden = /^(statics|generics|preserve|enumerable|prototype|toString|valueOf)$/,
cx: function (x) {       return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)
this.getFeatureType = function(layer) {       var featureType = layer.get('metadata').name;
, Promise = require('bluebird')   , Model = require('../../../').Model   , InsertWithRelated = require('../../../lib/queryBuilder/InsertWithRelated')
var isBrowser = function () {         return typeof (window) !== 'undefined'; }();
return false;             case "200002":
this.drawMiniPlot_();   } catch(ex) {     Dygraph.warn(ex);   }
this.downloadFile = function downloadFile(json, callback) {         json = json || {};         client.client({             path: 'chatfiles/' + json.uuid,
,sortFunction: nll     }
manageConnection(this);   var dataLoader, someThings, queryThings;
}         this.document.body.style.opacity = 1;     }
const { unit: depositAmount, order: { deposit: depositAddress } } = receive              const eventListeners = createTransferEventListeners(dispatch, send, receive, true)
function(val, oldval) {         if (ctrl.getPosition() !== val) {
for (var index in parents) {           if (Object.prototype.hasOwnProperty.call(parents, index)) {             var parent = parents[index];
import {getLink, defaultAvatar} from '../../models/collection'; import Loader from '../includes/loader.jsx';
import { RequestUtils } from '../commons/utils/RequestUtils'; import { StaticErrorMessage } from '../commons/errors';
var Scheduler = {}; Scheduler.selection = new Selection();
event_sourceChanged: function(dataset, oldSource){        MapReduce.prototype.event_sourceChanged.call(this, dataset, oldSource);
if (!HX.GL.getShaderParameter(shader, HX.GL.COMPILE_STATUS)) {             console.warn(HX.GL.getShaderInfoLog(shader));             console.log(code);             return false;
} } let accountPoller = new AccountsPoller;
query = query.replace(m[0], Array(lc).join("\n"));     }
$menu.setAttribute('class', 'menu');         $menu.innerHTML = '';         $fragment.appendChild($menu);
it('calculates filter response', function () {       var r = filter.response(200)       r.should.be.an.Array       r.length.should.equal(200)
var initCoffee = path.join(self.path, 'init.coffee')               var initJS = path.join(self.path, 'init.js')               var initPath
list.PY$pop = function() {     if (len(this) > 0) {         this._len = -1;
function CubeTextureNode( value, coord, bias ) {  InputNode.call( this, 'v4', { shared: true } );  this.value = value;
}       }       durationTimer = setTimeout(update, 500)     },
let className = 'table room-table table-hover';             for (const item of d.data.items) {                 if (item.type == 'P') {
}                 return findJSDocComment(node.leadingComments, node.loc.start.line);
}    } else if ((i + 1) < argv.length && argv[i + 1] !== undefined) {     this.opts[parts[0]](argv[i + 1]);
return (module)["filename"] = inputPath;;     }   })();
var element = {};       for(j = 0, jlen = this.column_names.length; j < jlen ; j++) {         var cell = source[ "gsx$" + this.column_names[j] ];
let middleware = passport.authenticate('github-token', { session: false }, function(error, user) {         if (error) {
pageConnectModal.remove();   startUpLoadingModal.open();
that.setNumber(that.telInput.val());         } else if (e.which == keys.BACKSPACE || e.which == keys.DELETE || that.isAndroidChrome) {
, changedAssociations = []           , defaultAttributes = additionalAttributes           , promises = []
if (this.isSimpleOutput()) {    this.save(`} catch (${this.declVar(command)}) {`);   }
cell   : {1:true},   cross  : {},    border : {1:true, 2:true},
import editor from '../../editorFixture';
var linkify = exports.linkify = function(message) {     var regex = /(?:https?:\/\/)?(?:[-a-zA-Z0-9@:%_\+~#=]+\.)+[a-z]{2,6}\b(?:[-a-zA-Z0-9@:%_\+.~#?&\/\/=()]*)/gi;     return message.replace(regex, function(e) {
callbacker = callback && function () {                 if (++cb == set.length) {                     callback.call(this);
}.bind(this),     keyUp = function (e) {      if (this.disabled || this.readOnly || e.altKey || e.ctrlKey || e.metaKey) { return; }      this._handleOnChange(this.value, true);
runJSTests(files, options, cb) {     async.waterfall([       (next) => {
if (!openLiftCounts) {     const openLifts = resort.lifts.filter(lift => lift.status === 'open');     openLiftCounts = openLifts.length;
var split = word.match(/^(-*)((?:no-)+)?(.*)$/)     , no = split[2]     , conf = split[3]
this._elem = elem;  this._animatorsData = createSizedArray(this._textData.a.length);  this._pathData = {}
this.append(ws`
if (mode === MODES.JUST_SIGNED_IN) {         setMode(MODES.CONTINUE)       }
unpublish : function($id) {        var master = {};        master.id= $id;         $(mwd.body).addClass("loading");
default:                 value = $el.val();                 break;         }
if (this.options.desiredCapabilities) {     for (var prop in this.options.desiredCapabilities) {       if (this.options.desiredCapabilities.hasOwnProperty(prop)) {         this.desiredCapabilities[prop] = this.options.desiredCapabilities[prop];       }
if (!(proxies[i].ip in headers)) continue;     ports = (headers[proxies[i].port] || '').split(',');     ips = (headers[proxies[i].ip] || '').split(',');
return returnedStats; }
define([ 'modules/default/defaultcontroller' ], function (Default) {
path = require('path'),
.filter('bytes', function() {  return function(bytes) {   if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) {return '';}   var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],
constructor () {         super(Object.assign(initMapState, initMapDispatch))         Object.keys(initMapDispatch).forEach(key => {
var processQueue = async.queue(function(task, next) {  indexer.index(task.infoHash, task.extra, next); }, 5);
, concatStream = require('concat-stream')   , extend       = require('./util').extend   , defaultOptions = {}
function returnFoundModels( err, _models ) {                     var models = [];                                          _models = _models instanceof Array ? _models : [ _models ];
let globalData = getApp().globalData;
{institutionId: this.details.id, userId: parseInt(this.userId)})             .then(angular.bind(this, function successCallback() {                 alert("Membership requested for user " + this.userId + ".");
var consumer = new SMConsumer(map)     , mappingCount = 0
var instances = null;    if( mouse_pos )    {
}       $this.addClass('hide');     });
if (errData) {     switch (errData[`common_${this.uapi_version}:Code`]) {       case '4454':         return Promise.reject(new AirRuntimeError.NoResidualValue(obj));
});   Then(/^I update current user with data \{(.*?)}$/, function (dataBody, callback) {     this.api.updateSelf(JSON.parse('{' + dataBody + '}'))
return this.options['filter-builder'].filterView;                 case 'filter-builder':
} else {         $tw.Bob.logger.log('Target wiki and connected wiki don\'t match', {level:3});       }
template.Resources = this.fixUpDeploymentStage(template.Resources, deploymentId)
let incentiveLayer = contracts[0]     let tbFileSystem = contracts[1]     let tru = contracts[2]
if (!inputName) {         throw new Error('show-errors element has no child input elements with a \'name\' attribute class');       }
var ucs2length = util.ucs2length;
while (objects.length < size) {    objects.push(this._create());   }
if(mode.contains){     dojo.forEach(this.lang.modes, function(lmode){      if(dojo.indexOf(mode.contains, lmode.className) >= 0){       terminators[lmode.begin] = 1;
const session = this.get('session');     return session.invalidate(...arguments);   },
out = put();       out.pad(pad1)
} ); export { PositionNode }
{         throw new Error("QR Error: Invalid mode: " + mode + " in (block:" + this.blockPointer + " bit:" + this.bitPointer + ")");        }
static async delete(id) {         try {
import './_documents_index_item.html'; Template.documentsIndexItem.onCreated(function() {   this.getDocumentId = () => Template.instance().data.document._id; });
for(i=0;item==list[i];i++) jQuery(this.find('.field#' + item)).toggle(item == linkType);     jQuery(this.find('.field#Anchor')).toggle(linkType == 'internal' || linkType == 'anchor');
import React, { Component } from 'react'; import AnimatedWrapper from './AnimatedWrapper';
window.debouncedCall = (f, timeMs = 0) => {     if(_debouncings.has(f)) {
map: function map(x, in_min, in_max, out_min, out_max) {     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;   }
} else {   emitError(err)
Object.keys(protocol.types).forEach(function(k) {     var v = protocol.types[k];
function populate_comments(comments) {         d3.select("#comment-count")
if (_firstRun === undefined) {     _firstRun = exports.user.get('firstRun');     if (_firstRun) {       exports.user.set('firstRun', false);
for (var i = 0; i < len; i++)     result[i] = fn(array[i], _);   return result;
this.visitor["visit_" + type]();              }                this["visit_" + type]();
punctuator = __o8["punctuator"],         reservedWord = __o9["reservedWord"],
.reverse()           .forEach(lineIndex => {             newData.splice(lineIndex * this.grid.width, this.grid.width)           })
splitSubDomain(domain) {   let relatedDomains = [];   let splited = domain.split(".");
var hex = ColorKeywords[ style ];    if ( hex !== undefined ) {
var thisCallSeq = ++this._lastCallSeq;       layer.validateTemplateURL({         success: function () {
stemlet_extension: 7,         partial_beam_length: 10
type={type}             ref={inputRef}             className={className}
}     this.props.hideTabBar(false)
for (let prop in schema.properties) {       if (schema.properties.hasOwnProperty(prop)) {         propTypes[prop] = function(props, propName, componentName) {           const valid = validate(props);
if (!hosts) usageDie('invalid hosts');     basePort = basePort || parseInt(parseArg('--base-port'), 10);     if (!basePort) usageDie('invalid base port');
var fileWatcher = require('./app/fileWatcher.js');
case VALUE_NAN:  val.string += "NaN"; break      case VALUE_NEG_NAN:  val.string += "-NaN"; break      case VALUE_UNDEFINED:  val.string += "undefined"; break
const {listViewData} = this.props     if (!listViewData) {
function cancel() {     if( this._runState === R_RUNNING ) {
Topdoc.prototype.generate = function(callback) {       this.results = this.parseFiles();
if (isStringOrNumber(children)) {           } else if (isArray(children)) {
var config = {             hourText  : text.localize('Hour'),             minuteText: text.localize('Minute'),             amPmText  : [text.localize('AM'), text.localize('PM')],         };
Object.keys(Array.prototype.slice(arguments, 1)).forEach(function (source) {             for (var prop in source) {                 if (source.hasOwnProperty(prop)) {                     obj[prop] = source[prop];                 }
'use strict';
return Meteor.users.find({}, {fields: {       secret_id: false,
assert((three * (seven * ten)) === three); } catch (e) {     console.log(e.message); }
for(var i = 0; this.inputs.length; ++i)    {
args.unshift(Log.color.cyan('mrdoc'));       console.log(...args.map(i => Log.color.red(i)));
var ref, url;   return _regenerator2.default.wrap(function getDownloadURL$(_context3) {     while (1) {
return 'UKNOWN CACHE STATUS';             }
() => {     expect(missings).toEqual([0, 1, 2, 3, 3, 3, 3])     done()
this.clear = (e) => {       dispatcher.trigger(dispatcher.CLEAR_TODOS);
main: typeScale.range(),   modifier: () => typeScale(extname(this.name))  };
Object.defineProperty(Object.prototype, 'map', {enumerable: false, configurable: true, value: function*(map) {   verifyMapArgs(map);   for(var item of this) {
if (!callback) {                     throw new Error('Ping must have callback.');                 }                 var peerIdList = [];
}; BTCStateProvider.prototype.getBalanceForAddress = async function(network, address){   let query = {chain: this.chain, network, address};   return Coin.getBalance({ query }).exec();
this.stop = function*() {    const keys = Object.keys(connections);   for(let i = 0; i < keys.length; i++) {    storageManager.removeStorageHandler(keys[i]);   }
browser.get('index.html');     element(by.binding('INVALID'));     });
LOGIN_SUCCESS: (state, data) => {         state.accessToken = data.accessToken
if (this.field != other.field)     {      throw new Error("QR Error: GF256Polys do not have same GF256 field");     }
return props.searching ? searchingStyle : defaultStyle;     }
function noteOn( noteNum ) {     var voice = onStateNoteVoices[ noteNum ];     if( voice ) { return; }
}; export var unsubscribeItem = function (collection, itemId, user) {   var item = collection.findOne(itemId),       collectionName = collection._name.slice(0,1).toUpperCase()+collection._name.slice(1);
var obj = JSON.parse(data.Body.toString('ascii'));                     debug("SESSION(" + session_id + "):  Notify Starting " + obj.length);                     for (var index=0; index < obj.length; index++) {
handleKeyDown(event) {     if(event.keyCode){              event.keyCode === KEYS.ESCAPE ? this.handleClose() : this.handleClick();
searchPatterns: [    '(^|\\s)import +([\\w\\-\\{\\}\\, \\*\\$]+ )?([\'"]){{valuePattern}}\\3',    '(^|[^\\w-])require\\(([\'"]){{valuePattern}}\\2\\)'
throw new Error("Value was already set.");        }
let fValue = bn2.leq(bn1) && bn1.lt(bn3);       this.stack.pop();       this.stack.pop();       this.stack.pop();
}   const delay = getValue(options.delay, 0)   if (delay) {
var $target = $(event.target);           app.queue.add({
} else {                     newValues[kv[0]] = kv[1];                   }
this[i][name].apply(this[i], arguments);         }         return this;
};     this.setState(newState);
import { ButtonLink } from 'App/Components/Routes';
} else {         zoom = 1.0;     }
throw new Error('First parameter to MemoryMap constructor must be an iterable of [addr, bytes] or undefined');         }         this.namedAddresses = new Map(namedAddresses);     }
})       if (syncErased instanceof Error) {         throw syncErased;
__dirname = '.'; }
import {UiButton} from "../../ui/ui-button/ui-button.js"; import "../../ui/ui-menu/ui-menu.js";
{     FBTest.openNewTab(basePath + "html/6708/issue6708.html", function(win)
{   this.dispatchEvent({type: EVENT_DELETED, item: this, deleted: wall, item_type: 'wall'});   Utils.removeValue(this.walls, wall);
switch (source) {             case 'cabinetInput': {               const keyValue = initialAction.value;               console.log('INIT::action - cabinet key', keyValue);
fs = require('fs'),     path = require('path'),
UserController.prototype.login = function login(req, res, next) {         User.findOne({
if (event.keyCode === 37) {              selectNextAvailableCellInDirection.call(this, 'left');              return;
relation = relations[relationKey];         toModel = loopback.findModel(relation.collectionName);
export function* runtimeSaga() {   yield put(
if (this.errorCount) { return false; }       grunt.log.writeln('File "' + combined_path + '" created.');     }
if (obj) {                                      for (var attr in obj) {                                          if (obj.hasOwnProperty(attr)) {                                              vObj[attr] = obj[attr];                                          }
createIconButtons: function() {   for (var i = 0, length = Phonegap.UIConfiguration.platformDrawersContent.length; i < length ; i++) {    var p = Phonegap.UIConfiguration.platformDrawersContent[i].id;    this.$.platformIconContainer.createComponent(
function(item) {         var tags = [];         item.tags.forEach(
sendControlCmd: function(type) {          $.ajax({
$('<div class="slider"/>').slider({                 value: size,                 max: def_size,
this.watch(                 npmModules.map(function(m) { return "node_modules/" + m + "/lib
msg = '0' + msg;       for (i = 0; i < msg.length; i += 2)         res.push(parseInt(msg[i] + msg[i + 1], 16));
var afterImageLoad = _.bind(function() {
return TAPi18n.__('url-unavailable');     case 'AVAILABLE':       return TAPi18n.__('url-available');
define("uikit-form-select", ["uikit"], function(){             return component || addon(UIkit);         });
$("#concurCommunity").addClass('submited');             $('#form-success').removeClass('form-success-hidden');           }
, caseInsensitive = []         , item
}     }     fullType = parts[0].replace(/^\s+/, '').replace(/\s+$/, '');
init = function() {  graphdef = cv.constants.defaultGraphdef;
const offset = new Vector3();       return (deltaX, deltaY) => {         const element = this.domElement === document ? this.domElement.body : this.domElement;         if (this.object instanceof PerspectiveCamera) {
var bestValue = timings[bestLanguage];       for (var j = 0; j < session.series.length; j++) {         var med = timings[j];
Faker.Lorem.sentence = function (wordCount){   if( typeof wordCount == 'undefined'){ wordCount = 3;}
import _ from 'underscore'; import { reportException } from '../exceptions';
cy.get('[data-test=downloadXMLBtn]').click();   return cy.window()     .its('xml')
const store = storeType.create(options);     store.on('sessionDataUpdated', (data) => {       this.trigger('sessionDataUpdated', data);     });
function getWorklogObjects(key, worklogs){         return new Promise((resolve) => {
) {          this.runnerService = RunnerService;
for (var i = 0, len = selectedSquares.length; i < len; i++) {         if (selectedSquares[i] == target) {           backTo = i+1;
if(!parentGroup) {         return;
export function getUserInfo() {   return Promise.resolve({})
},   animateOrphans(removedSprites, transition, duration) {     this._newOrphanTransitions.push({ removedSprites, transition, duration });     this.get('startAnimation').perform();
import ImageActions from '../../actions/ImageActions'; import ImageStore from '../../stores/ImageStore';
, npm = require("./npm.js")
var mocha = new Mocha({ reporter: 'html' });
import { Provider } from 'react-redux'; import HashHistory from 'react-router/lib/HashHistory';
if (status.nModified < 1) {                     return [];                 }
key = key || null;     frame = frame || null;
atom.workspace.toggle(this);   } }
function forEach(o, fn) {  if (Array.isArray(o)) {   return o.forEach(fn);
utils.url_join_encode(                                 that.base_url, 'notebooks',                                 data.path, data.name
{ path     : null           , type     : this.calcVdevType( vdevAllowedTypes, currentType )           , children : _.sortBy( disks ).map( this.createNewDisk )           };
process.env = process.env || {};
} else if (this.postIsInvalid(post)) {    this.logger.warn("Posted result for ", post.id, " is not valid. Ignoring POST.");    status = 'invalid';
url.should.be.a.String()     url.should.match(new RegExp('https:     done()
let value = node.attribs[k];      let hasBind = reg_tag.test(value);      if (hasBind) {
connect() {     return this.contractor.connect.call(this.contractor)       .then(() => {
console.log(ex);   }
var req = context.request;     if(Number(req.headers['content-length']) > maxUploadSize) {         context.renderError(413);
function $node__rollup() {   return $rollup({     format: 'cjs',
masker.appendChild(gg);                 gg.setAttribute('filter','url(#'+filId+')');
if ('licence' in this.config) {      throw new Error(`Incorrect spelling of license property in ${this.name}`);     }
getDocumentScrollLeft: YUI.DOM.docScrollX,
var call = Function.prototype.call   , hasOwnProperty = Object.prototype.hasOwnProperty
if (diff.progress.length > 0) {     for (let progress of diff.progress) {      if (progress) {
if (!!~ansiCodes.indexOf(seq)) {          ansiCodes.pop()         return '</span>'       }
var attrs = inherited[a].list();             for (var x = 0; x < attrs.length; x++) {                 var id = attrs[x].id;
goog.require('vgps3.proj.GProj'); goog.require('vgps3.topo.AbstractTopo');
}     }.bind(this));   },   loadMoreItems: function(event) {
}   }   a = document.getElementsByTagName('a');   for(i = 0; i < a.length; ++i) {    if(a[i].href) {
chromeMyAdmin.controller("MainFooterController", ["$scope", "modeService", "mySQLClientService", "rowsPagingService", "rowsSelectionService", "targetObjectService", "Events", "Modes", "relationSelectionService", "TableTypes", "routineSelectionService", function($scope, modeService, mySQLClientService, rowsPagingService, rowsSelectionService, targetObjectService, Events, Modes, relationSelectionService, TableTypes, routineSelectionService) {     "use strict";
local.render();         });         componentLocal.set(this, local);       });
createModel() {             return new ModelInstance({                   database    : this.database
function parseJSON(src, fn, options) {   var fn = fn || 'amf';
var name = (             path instanceof Array ?  this._name(path) : path         );
return {      'millisecond': this.millisecond      ,'name': this.name
html += '</div>';         html3 = '<div class="vts-credits-list">';         html3 += this.getCreditsString(credits['mapdata'], '<br/>', true)[0] + '</div>';
BengineConfig.extensibles.audio = new function Audio() {  this.type = "audio";  this.name = "audio";
data.user.activityHistory = [];             }             if(data.user.permissions == {empty:"permission"}){               data.user.permissions = [];
, extensions = ['jpeg', 'jpg', 'png', 'pdf']   , siteTypes = ['url', 'html', 'file'];
it('should sunmit a QueryMarbleByOwner transaction (TP function checks query results)', () => {         let factory = client.getBusinessNetwork().getFactory();
function Controller($scope, $injector) {   gmfControllersAbstractMobileController.call(this, {     autorotate: true,
track.nbNalu = 0;     if(navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
export function mixin(target, source) {  const prototype__target = target.prototype  const prototype__source = source.prototype
adjusted_scale : this.adjusted_scale,  asset_swf_v : "\/c2.glitch.bz\/items\/2012-03\/garden_new-1333148466.swf",  admin_props : true,
conn.on('readable', () => {             while (run) {                 if (!hdr) {
console.log('Command failed.');         throw error;     });
Cypress.Commands.add('testManifest200s', service => {   cy.testResponseCodeAndType(     `/${service}/articles/manifest.json`,     200,
return ret; } export {bind, _triageMustacheHelper, resolveHelper, bindHelper, boundIfHelper, unboundIfHelper, withHelper, ifHelper, unlessHelper, bindAttrHelper, bindAttrHelperDeprecated, bindClasses};
return function(selection) {         var example = 'https:         var modalSelection = uiModal(selection);
if (!this.selection.isEmpty()) {             cursor = this.session.remove(this.getSelectionRange());             this.clearSelection();
addedItem: function(array, item, changeMeta, instanceMeta) {       var itemGuid = guidFor(item),           dependentGuids = getDependentKeyGuids(changeMeta),
let exampleString = '{"example": "string value", "example2": 1, "example": [1, "abc"]}';       expect(Util.parseJSON(exampleString)).to.deep.equal({         example: [1, 'abc'],         example2: 1       });
if( oldIntensity === 0 && newIntensity > 0 ){        spawner.opts.start();       }      }).back()
, isWrite = what || isDel
function Template$render(data) {   this.owner.el.innerHTML = this._template         ? this._template(data)
next(err); }
isValid: computed('errors.length', function () {     if (this.get('errors.length') > 0) {
else {                 self.InteractiveMap.deselectAll();
}     this.client.set(cacheKey, stringifiedEnvelope, function (err) {
var M = [];   for (var i=0; i<n; i++) {     var empty = [];
_inserttableEnabledImpl: function(argument){
color.b += lightColor.b * amount;    } else if ( light.isPointLight ) {     var lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );
var ctor = function () {
storeKeys([{ x: 1 }])     expect(localStorage.getItem(`keys`)).toBe(`[{"x":1}]`)   })
var $export = require('./_export'); var toISOString = require('./_date-to-iso-string');
import React from "react"; import Logo from "../Logo";
this.$api_demo2.load('requests/index')         .then(function (response) {
function cb1(validators) {     return validators.every(cb2, this); }
_getEventConfig: function(type) {       var result = this._super("_getEventConfig", arguments);       if (!result && this.get("gestures")[type]) {
if (typeof this._fields.email !== "undefined"){             if (this._fields.email.type !== "email")                 throw Error("The type of email field should be email!");
}     }, 'recover from collapse')     var shifter = network.denizens[0].log.shifter()     network.denizens[0].enqueue(network.time, 1, 1)
}   logDebug (...args) {     this.log.debug(`[${this.socketId}] UdpSocket` + args.shift(), ...args);   }
} module.exports = {
gridy = snap(posy, fontHeight)     rasterContext.clearRect(gridx, gridy, -fontWidth, -fontHeight);
import {     pagination as PaginationActions } from "../../actions";
import styleBody from 'ghost/mixins/style-body'; var SettingsAboutRoute = AuthenticatedRoute.extend(styleBody, loadingIndicator, {     classNames: ['settings-view-about'],
} })(typeof(window) != 'undefined' ? window : global);
Parser.prototype.defaultError = function (token) {   throw(
}         $("#status-table").append(statusTable);
var userModule = require("/modules/user.js")["userModule"];     var response = userModule.getUsers();     if(response["content"] != null) {
describe('flickr.galleries.getInfo', function () {  it('requires "gallery_id"', function () {   assert.throws(function () {
"BSM": "M14"         }     },
const TypeaheadMobileChipComponent = Radium(React.createClass({   mixins: [PureRenderMixin],
init() {     this._super();
success: function (data) {                     cb(1, readCode(data));                 },                 error: function () {
log.error(LOGGING_CATEGORY, err.stack);                         callback(err);                     }
console.time('  [POST] /unpack');     gRequest.post({'url': url, 'formData': formData, 'headers': headers},         function optionalCallback(error, httpResponse, body) {             if (error) {                 callback(false, body);
this.servers.forEach(server => {             server.registerServices(...this.services);         });
} else {     scope = this.scope;   }
return Restangular.one('items', id).remove();       }     };
};     WebViewUtil.Window.sendAction(WebViewUtil.identifierWindow, 'addLog', addLog);
module.exports = function(out) {     return map(function(file, cb) {
window.log = function(){         if(this.console){
Component.prototype.componentDidMount = function() {          if (this.props.isRoot) return;
console.log(headings.join("\n\n "));   self.help.forEach(function (ky) {    console.log("\t" + ky + "\t\t" + self.help[ky]);   });   console.log("\n\n");
var id = msg.session;       if (!id) throw new Error("Tried to process a signal that had no peer ID");       var name = msg.name;
if (process.env.RESOURCE_DEBUG) {                     page.onResourceRequested = function () {                         console.log.apply(this, [                             "PhantomJS resource requested:"
fulfill(self.parser.parseFeatures(data));                }             igvxhr.loadPathWithConfiguration(self.config, options, parseData, reject);
CL.Tableau.call(this);     this._stayMinusErrorVars = [];     this._stayPlusErrorVars = [];     this._errorVars = new Hashtable();
mw.content = {}; mw.content.CategoriesTree = function() {  this.servicesUrl = '{SITEURL}ajax_helpers/';  this.loadArticles = function(authorId, categoryId) {
.then(function(module) {            console.log("How are we?")
return (instance && (typeof instance)=='object' && Object.getPrototypeOf(instance)===Object.prototype);   case 'array': return (instance instanceof Array);
renderPomodoroText()     if (this.state.status === 'break') {       startBreak()
name: 'Popper',       file: `${dir}/umd/index.js`,       format: 'es',
} export function unmountAll(expressions) {   var i, expl = expressions.length, expr
delete value.name;         for (key in value) {             if (value.hasOwnProperty(key)) content.find('[name='+key+']').val(value[key]);         }
var client = authedClient()       if (typeof opts.type === 'undefined' && opts.order_type === 'maker') {         opts.type = 'exchange limit'
max,   map,
}  render( props ) {   let {node, user, path, extra} = props;         var NewPath = '/'+ (extra ? extra.join('/') : '');
var array_value = document.getElementsByClassName("array_value");     for(x = 0; x < array_value.length; x++){       if(array_value[x].getBoundingClientRect().width < array_value[x].children[0].getBoundingClientRect().width){
}       return heroesObj;
receiver[p] = [];                     _mix(receiver[p], val);                 } else {
if(/\.*?\/[a-zA-Z]+/.test(text)) {                 text = text.replace(/\/(.*?)\/([a-zA-Z]*)/g, function(match, pattern, options) {
if(result.error)             throw new PixivError(result.message, url);         return result;
if (isIE && IE_MODE <= 9) {       $target.removeClass(classes);       fn.apply($target, toArray(arguments));
topic.then(function(res){       });
