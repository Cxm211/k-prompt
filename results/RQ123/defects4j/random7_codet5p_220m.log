Namespace(log_name='./result/defects4j/random8_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='java', output_dir='result/defects4j/random8_codet5p_220m', data_dir='./data/defects4j', no_cuda=False, visible_gpu='0', choice=8, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Please fix a buggy program', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' static TernaryValue getImpureBooleanValue(Node n) {          return TernaryValue.TRUE;        default:          return getPureBooleanValue(n);', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'by taking repair actions', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' Conditional (case in switch) branch addition, Conditional (if) branch addition, Method call addition, Return statement addition, ', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'static TernaryValue getImpureBooleanValue(Node n) {          return TernaryValue.TRUE;       case Token.VOID:         return TernaryValue.FALSE;        default:          return getPureBooleanValue(n);'}]
***** Running training *****
  Num examples = 502
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 0
  eval_ppl = 6.262498686561293e+232
  global_step = 127
  train_loss = 49.9256
  ********************
Previous best ppl:inf
Achieve Best ppl:6.262498686561293e+232
  ********************
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.68 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:77.68
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 1
  eval_ppl = 2.391214254377177e+236
  global_step = 253
  train_loss = 32.2225
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.42 	 Previous best codebleu 77.68
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 2
  eval_ppl = 2.4586951518287857e+246
  global_step = 379
  train_loss = 21.929
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.35 	 Previous best codebleu 77.68
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 3
  eval_ppl = 5.3809759810917384e+249
  global_step = 505
  train_loss = 14.1672
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.97 	 Previous best codebleu 77.68
  ********************
 Achieve Best bleu:77.97
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 4
  eval_ppl = 2.826855704575511e+254
  global_step = 631
  train_loss = 9.9614
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.75 	 Previous best codebleu 77.97
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 5
  eval_ppl = 9.293986895157124e+250
  global_step = 757
  train_loss = 7.2804
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.73 	 Previous best codebleu 77.97
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 6
  eval_ppl = 2.0708944124436987e+253
  global_step = 883
  train_loss = 4.9678
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 78.03 	 Previous best codebleu 77.97
  ********************
 Achieve Best bleu:78.03
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 7
  eval_ppl = 1.0952839436586547e+260
  global_step = 1009
  train_loss = 4.0393
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.96 	 Previous best codebleu 78.03
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 8
  eval_ppl = 2.07807038966745e+259
  global_step = 1135
  train_loss = 2.9377
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 78.2 	 Previous best codebleu 78.03
  ********************
 Achieve Best bleu:78.2
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 9
  eval_ppl = 4.5554712680061654e+259
  global_step = 1261
  train_loss = 2.5184
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.98 	 Previous best codebleu 78.2
  ********************
reload model from result/defects4j/random8_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/defects4j/test.jsonl
  codebleu = 75.41 
  Total = 64 
  Exact Fixed = 9 
[17, 25, 30, 31, 39, 43, 48, 52, 55]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 64 
  Exact Fixed = 9 
[17, 25, 30, 31, 39, 43, 48, 52, 55]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 75.41 
[0.7977509497997374, 0.8318588019770055, 0.541279037950266, 0.7421898091822523, 0.889761361495617, 0.6007163503048495, 0.6576252123917807, 0.8681777725936917, 0.7051146102158162, 0.7526863569708585, 0.7143513682140774, 0.29420521831833274, 0.8721125152975062, 0.877572165029932, 0.7679015196790066, 0.7369092647119393, 1.0, 0.8961434726030306, 0.9617720754477719, 0.8459463132957461, 0.7398507191925657, 0.7670893600228161, 0.7906925479531332, 0.8693059718827794, 1.0, 0.863021098885395, 0.2862125618794039, 0.7694729472672909, 0.6410378892354339, 1.0, 0.9224526824055446, 0.5470596690445572, 0.7176189204658862, 0.8232523732318835, 0.8727340070600411, 0.8575737152700653, 0.8158461676559928, 0.7904665899488785, 0.9569487648577442, 0.6341247058119213, 0.7958826511929267, 0.3788321486588963, 1.0, 0.3205070115741946, 0.6316733772548883, 0.6620374200206556, 0.8295509438760991, 1.0, 0.8028172817807042, 0.8924644874204966, 0.8365049773284279, 1.0, 0.6772432002947886, 0.6148475876717584, 0.9569487648577442, 0.523324030650955, 0.5216692025787918, 0.8134417243841228, 0.8683105217761831, 0.8438720692633894, 0.595153561733246, 0.7329903885524013, 0.46390994156004267, 0.48189924468684703]
Finish training and take 10m
Namespace(log_name='./result/defects4j/random8_codet5p_220m.log', model_name='Salesforce/codet5p-220m', lang='java', output_dir='result/defects4j/random8_codet5p_220m', data_dir='./data/defects4j', no_cuda=False, visible_gpu='0', choice=8, num_train_epochs=10, num_test_epochs=1, train_batch_size=4, eval_batch_size=4, gradient_accumulation_steps=1, load_model_path=None, config_name='', tokenizer_name='', max_source_length=512, max_target_length=512, warm_up_ratio=0.1, do_train=True, do_eval=True, do_test=True, freeze=False, learning_rate=5e-05, beam_size=10, weight_decay=0.0, adam_epsilon=1e-08, local_rank=-1, seed=42, early_stop_threshold=3)
Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
Model created!!
[[{'text': 'Please fix a buggy program', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' static TernaryValue getImpureBooleanValue(Node n) {          return TernaryValue.TRUE;        default:          return getPureBooleanValue(n);', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': 'by taking repair actions', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': ' Conditional (case in switch) branch addition, Conditional (if) branch addition, Method call addition, Return statement addition, ', 'loss_ids': 0, 'shortenable_ids': 0}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}, {'text': 'is the fixed version', 'loss_ids': 0, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'static TernaryValue getImpureBooleanValue(Node n) {          return TernaryValue.TRUE;       case Token.VOID:         return TernaryValue.FALSE;        default:          return getPureBooleanValue(n);'}]
***** Running training *****
  Num examples = 502
  Batch size = 4
  Num epoch = 10

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 0
  eval_ppl = 6.262498686561293e+232
  global_step = 127
  train_loss = 49.9256
  ********************
Previous best ppl:inf
Achieve Best ppl:6.262498686561293e+232
  ********************
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.73 	 Previous best codebleu 0
  ********************
 Achieve Best bleu:77.73
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 1
  eval_ppl = 2.391214254377177e+236
  global_step = 253
  train_loss = 32.2225
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.47 	 Previous best codebleu 77.73
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 2
  eval_ppl = 2.4586951518287857e+246
  global_step = 379
  train_loss = 21.929
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.4 	 Previous best codebleu 77.73
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 3
  eval_ppl = 5.3809759810917384e+249
  global_step = 505
  train_loss = 14.1672
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 78.02 	 Previous best codebleu 77.73
  ********************
 Achieve Best bleu:78.02
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 4
  eval_ppl = 2.826855704575511e+254
  global_step = 631
  train_loss = 9.9614
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.81 	 Previous best codebleu 78.02
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 5
  eval_ppl = 9.293986895157124e+250
  global_step = 757
  train_loss = 7.2804
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 77.86 	 Previous best codebleu 78.02
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 6
  eval_ppl = 2.0708944124436987e+253
  global_step = 883
  train_loss = 4.9678
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 78.08 	 Previous best codebleu 78.02
  ********************
 Achieve Best bleu:78.08
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 7
  eval_ppl = 1.0952839436586547e+260
  global_step = 1009
  train_loss = 4.0393
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 78.01 	 Previous best codebleu 78.08
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 8
  eval_ppl = 2.07807038966745e+259
  global_step = 1135
  train_loss = 2.9377
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 78.32 	 Previous best codebleu 78.08
  ********************
 Achieve Best bleu:78.32
  ********************

***** Running evaluation *****
  Num examples = 64
  Batch size = 4
  epoch = 9
  eval_ppl = 4.5554712680061654e+259
  global_step = 1261
  train_loss = 2.5184
  ********************
Previous best ppl:6.262498686561293e+232
BLEU file: ./data/defects4j/validation.jsonl
  codebleu-4 = 78.11 	 Previous best codebleu 78.32
  ********************
reload model from result/defects4j/random8_codet5p_220m/checkpoint-best-bleu
BLEU file: ./data/defects4j/test.jsonl
  codebleu = 75.39 
  Total = 64 
  Exact Fixed = 9 
[17, 25, 30, 31, 39, 43, 48, 52, 55]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  ********************
  Total = 64 
  Exact Fixed = 9 
[17, 25, 30, 31, 39, 43, 48, 52, 55]
  Syntax Fixed = 0 
[]
  Cleaned Fixed = 0 
[]
  codebleu = 75.39 
[0.7977509497997374, 0.8318588019770055, 0.541279037950266, 0.7421898091822523, 0.889761361495617, 0.6007163503048495, 0.6576252123917807, 0.8681777725936917, 0.7051146102158162, 0.7526863569708585, 0.7143513682140774, 0.29420521831833274, 0.8721125152975062, 0.877572165029932, 0.7679015196790066, 0.7369092647119393, 1.0, 0.8961434726030306, 0.943022075447772, 0.8459463132957461, 0.7398507191925657, 0.7670893600228161, 0.7906925479531332, 0.8693059718827794, 1.0, 0.863021098885395, 0.2862125618794039, 0.7694729472672909, 0.6410378892354339, 1.0, 0.9224526824055446, 0.5470596690445572, 0.7176189204658862, 0.8232523732318835, 0.8727340070600411, 0.8575737152700653, 0.8158461676559928, 0.7904665899488785, 0.9569487648577442, 0.6341247058119213, 0.7958826511929267, 0.3788321486588963, 1.0, 0.3205070115741946, 0.6316733772548883, 0.6620374200206556, 0.8295509438760991, 1.0, 0.8028172817807042, 0.8924644874204966, 0.8365049773284279, 1.0, 0.6772432002947886, 0.6148475876717584, 0.9569487648577442, 0.523324030650955, 0.5216692025787918, 0.8434417243841228, 0.8683105217761831, 0.8438720692633894, 0.595153561733246, 0.7329903885524013, 0.46390994156004267, 0.458822321609924]
Finish training and take 11m
