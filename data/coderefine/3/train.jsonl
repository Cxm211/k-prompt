{"problem": "public java.lang.String toString ( ) { if ( ( VAR_1 ) == null ) { return STRING_1 ; } TYPE_1 VAR_2 = null ; if ( ( ( VAR_3 ) == null ) || ( STRING_1 . equals ( VAR_3 . trim ( ) ) ) ) { VAR_2 = TYPE_1 . METHOD_1 ( VAR_4 ) ; } else { VAR_2 = TYPE_1 . METHOD_1 ( VAR_3 ) ; } return new java.lang.String ( VAR_1 , VAR_2 ) ; }\n", "fixed": "public java.lang.String toString ( ) { if ( ( VAR_1 ) == null ) { return null ; } TYPE_1 VAR_2 = null ; if ( ( ( VAR_3 ) == null ) || ( STRING_1 . equals ( VAR_3 . trim ( ) ) ) ) { VAR_2 = TYPE_1 . METHOD_1 ( VAR_4 ) ; } else { VAR_2 = TYPE_1 . METHOD_1 ( VAR_3 ) ; } return new java.lang.String ( VAR_1 , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( ) ; for ( TYPE_2 VAR_3 : VAR_2 . METHOD_3 ( ) ) { TYPE_3 VAR_4 = TYPE_4 . METHOD_4 ( VAR_3 ) ; java.util.List < TYPE_5 > VAR_5 = VAR_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_3 . METHOD_7 ( VAR_5 ) ; VAR_3 . METHOD_8 ( ) ; VAR_3 . METHOD_9 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; VAR_2 . METHOD_2 ( ) ; for ( TYPE_2 VAR_3 : VAR_2 . METHOD_3 ( ) ) { java.util.List < TYPE_5 > VAR_5 = VAR_1 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; VAR_3 . METHOD_7 ( VAR_5 ) ; VAR_3 . METHOD_8 ( ) ; VAR_3 . METHOD_9 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; names = TYPE_2 . METHOD_3 ( ) ; VAR_1 = TYPE_1 . METHOD_4 ( ) ; VAR_2 = new TYPE_3 ( ) ; VAR_3 = TYPE_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( VAR_3 . first ( ) ) ; VAR_4 . METHOD_8 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { names = TYPE_2 . METHOD_3 ( ) ; VAR_1 = TYPE_1 . METHOD_4 ( ) ; VAR_2 = new TYPE_3 ( ) ; VAR_3 = TYPE_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( VAR_3 . first ( ) ) ; VAR_4 . METHOD_8 ( VAR_2 ) ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 , TYPE_4 { int VAR_3 = VAR_2 . METHOD_2 ( ) ; int count = TYPE_5 . METHOD_3 ( VAR_1 , VAR_2 ) ; if ( count == VAR_3 ) { TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_4 , VAR_2 . METHOD_8 ( ) , STRING_1 ) ; TYPE_5 . METHOD_9 ( ) ; TYPE_5 . METHOD_10 ( VAR_1 , VAR_2 ) ; } }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 , TYPE_4 { int VAR_3 = VAR_2 . METHOD_2 ( ) ; int count = TYPE_5 . METHOD_3 ( VAR_1 , VAR_2 ) ; if ( count == VAR_3 ) { TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_4 , VAR_2 . METHOD_8 ( ) , STRING_1 ) ; TYPE_5 . METHOD_10 ( VAR_1 , VAR_2 ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 ) ) ; int VAR_2 = VAR_1 . METHOD_4 ( VAR_3 ) ; if ( VAR_2 == ( VAR_4 ) ) { java.io.File VAR_5 = VAR_1 . METHOD_5 ( ) ; VAR_6 . setText ( VAR_5 . METHOD_6 ( ) . toString ( ) ) ; } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 ) ) ; int VAR_2 = VAR_1 . METHOD_4 ( this ) ; if ( VAR_2 == ( VAR_4 ) ) { java.io.File VAR_5 = VAR_1 . METHOD_5 ( ) ; VAR_6 . setText ( VAR_5 . METHOD_6 ( ) . toString ( ) ) ; } }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = java.util.Calendar.getInstance ( ) ; TYPE_4 VAR_7 = new TYPE_4 ( STRING_1 ) ; java.lang.String VAR_8 = VAR_7 . format ( VAR_6 . getTime ( ) ) ; VAR_9 = ( ( TYPE_5 ) ( VAR_4 . METHOD_3 ( VAR_10 ) ) ) ; VAR_9 . setText ( VAR_8 ) ; return VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = java.util.Calendar.getInstance ( ) ; TYPE_4 VAR_7 = new TYPE_4 ( STRING_1 ) ; java.lang.String VAR_8 = VAR_7 . format ( VAR_6 . getTime ( ) ) ; VAR_9 = ( ( TYPE_5 ) ( VAR_4 . METHOD_3 ( VAR_10 ) ) ) ; VAR_9 . setText ( VAR_8 ) ; return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 = VAR_2 . getText ( ) . toString ( ) . trim ( ) ; if ( TYPE_1 . isEmpty ( VAR_1 ) ) { METHOD_2 ( STRING_1 ) ; } else { METHOD_3 ( TYPE_2 . METHOD_4 ( this , VAR_3 ) ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { java.lang.String VAR_1 = VAR_2 . getText ( ) . toString ( ) . trim ( ) ; if ( TYPE_1 . isEmpty ( VAR_1 ) ) { METHOD_2 ( STRING_1 ) ; } else { METHOD_3 ( TYPE_2 . METHOD_4 ( this , VAR_1 ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_3 ; VAR_5 = VAR_2 ; VAR_6 = VAR_1 ; TYPE_2 . METHOD_2 ( STRING_1 , ( ( ( java.lang.String . METHOD_3 ( VAR_6 ) ) + ( java.lang.String . METHOD_3 ( VAR_5 ) ) ) + ( java.lang.String . METHOD_3 ( VAR_4 ) ) ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 = VAR_3 ; VAR_5 = VAR_2 + 1 ; VAR_6 = VAR_1 ; TYPE_2 . METHOD_2 ( STRING_1 , ( ( ( java.lang.String . METHOD_3 ( VAR_6 ) ) + ( java.lang.String . METHOD_3 ( VAR_5 ) ) ) + ( java.lang.String . METHOD_3 ( VAR_4 ) ) ) ) ; }\n"}
{"problem": "protected java.util.Map < java.lang.String , java.io.File > METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return new java.util.HashMap < > ( ) ; } return TYPE_1 . METHOD_2 ( VAR_1 . split ( STRING_1 ) ) . METHOD_3 ( ( VAR_2 ) - > VAR_2 . split ( STRING_2 ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ( VAR_3 ) - > VAR_3 [ 0 ] , ( VAR_3 ) - > new java.io.File ( VAR_3 [ 1 ] ) ) ) ; }\n", "fixed": "java.util.Map < java.lang.String , java.io.File > METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return new java.util.HashMap < > ( ) ; } return TYPE_1 . METHOD_2 ( VAR_1 . split ( STRING_1 ) ) . METHOD_3 ( ( VAR_2 ) - > VAR_2 . split ( STRING_2 ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ( VAR_3 ) - > VAR_3 [ 0 ] , ( VAR_3 ) - > new java.io.File ( VAR_3 [ 1 ] ) ) ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { return ; } VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; if ( TYPE_3 . METHOD_5 ( this ) ) { METHOD_6 ( ) ; } else { TYPE_4 . i ( VAR_5 , STRING_1 ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { return ; } VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( VAR_3 ) ; if ( TYPE_3 . METHOD_5 ( this ) ) { METHOD_6 ( ) ; } else { TYPE_4 . i ( VAR_5 , STRING_1 ) ; } }\n"}
{"problem": "private void METHOD_1 ( boolean VAR_1 ) { VAR_2 = STRING_1 ; for ( int i = INT_1 ; i > 0 ; i -- ) { VAR_3 [ i ] = VAR_3 [ ( i - 1 ) ] ; } if ( VAR_1 == true ) { VAR_3 [ 0 ] = STRING_2 ; } else { VAR_3 [ 0 ] = STRING_3 ; } }\n", "fixed": "private void METHOD_1 ( boolean VAR_1 ) { for ( int i = INT_1 ; i > 0 ; i -- ) { VAR_3 [ i ] = VAR_3 [ ( i - 1 ) ] ; } if ( VAR_1 == true ) { VAR_3 [ 0 ] = STRING_2 ; } else { VAR_3 [ 0 ] = STRING_3 ; } }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { if ( TYPE_3 . METHOD_2 ( VAR_3 ) ) return null ; TYPE_1 VAR_4 = VAR_1 . get ( VAR_3 ) ; if ( VAR_4 == null ) { VAR_4 = TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_1 . put ( VAR_3 , ( VAR_4 != null ? VAR_4 : VAR_5 ) ) ; } else if ( VAR_4 == ( VAR_5 ) ) { VAR_4 = null ; } return VAR_4 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { if ( TYPE_3 . METHOD_2 ( VAR_3 ) ) return null ; TYPE_1 VAR_4 = VAR_1 . get ( VAR_3 ) ; if ( VAR_4 == null ) { VAR_4 = TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_1 . put ( VAR_3 , ( VAR_4 != null ? VAR_4 : VAR_5 ) ) ; } else if ( VAR_4 == ( VAR_5 ) ) { VAR_4 = null ; } return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { switch ( event . METHOD_2 ( ) ) { case VAR_1 : VAR_2 . METHOD_3 ( ) ; break ; case VAR_3 : VAR_2 . METHOD_4 ( ) ; break ; case VAR_4 : VAR_2 . METHOD_5 ( ) ; break ; case VAR_5 : VAR_2 . METHOD_6 ( ) ; break ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { switch ( event . METHOD_2 ( ) ) { case VAR_1 : VAR_2 . METHOD_3 ( ) ; break ; case VAR_3 : VAR_2 . METHOD_4 ( ) ; break ; case VAR_4 : VAR_2 . METHOD_5 ( ) ; break ; case VAR_5 : VAR_2 . METHOD_6 ( ) ; break ; default : break ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 position = start ; if ( ( size ) == 1 ) { start = null ; end = null ; ( size ) -- ; return ; } while ( true ) { if ( ( position . METHOD_2 ( ) . METHOD_2 ( ) ) == null ) { position . METHOD_3 ( null ) ; ( size ) -- ; break ; } else { position = position . METHOD_2 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 position = start ; if ( ( size ) == 0 ) { return ; } else if ( ( size ) == 1 ) { start = null ; end = null ; ( size ) -- ; return ; } while ( true ) { if ( ( position . METHOD_2 ( ) . METHOD_2 ( ) ) == null ) { position . METHOD_3 ( null ) ; ( size ) -- ; break ; } else { position = position . METHOD_2 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; try { TYPE_1 . METHOD_3 ( ) ; try { METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; } finally { TYPE_1 . METHOD_6 ( ) ; } } finally { VAR_2 . METHOD_7 ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; try { METHOD_3 ( ) ; try { METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; } finally { METHOD_6 ( ) ; } } finally { VAR_2 . METHOD_7 ( ) ; } }\n"}
{"problem": "void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( ( VAR_2 ) != null ) { java.lang.System.out.println ( VAR_2 . id ) ; VAR_2 = null ; } VAR_2 = this ; VAR_3 . METHOD_2 ( STRING_1 , id , VAR_4 , element ) ; value = VAR_4 . METHOD_3 ( element ) ; VAR_3 . METHOD_2 ( STRING_2 , id , value . getClass ( ) ) ; if ( ( value ) == null ) { throw new TYPE_2 ( ( STRING_3 + ( element ) ) ) ; } }\n", "fixed": "void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( ( VAR_2 ) != null ) { VAR_2 = null ; } VAR_2 = this ; value = VAR_4 . METHOD_3 ( element ) ; if ( ( value ) == null ) { throw new TYPE_2 ( ( STRING_3 + ( element ) ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { METHOD_2 ( response ) ; TYPE_1 error = TYPE_2 . METHOD_3 ( VAR_1 ) ; if ( error == ( VAR_2 ) ) { METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( response , VAR_3 ) ; response . METHOD_6 ( VAR_4 , STRING_1 ) ; METHOD_7 ( response ) ; } else { TYPE_4 . METHOD_8 ( response , STRING_2 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { METHOD_2 ( response ) ; TYPE_1 error = TYPE_2 . METHOD_3 ( VAR_1 ) ; if ( error == ( VAR_2 ) ) { METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( response , VAR_3 ) ; response . METHOD_6 ( VAR_4 , STRING_1 ) ; } else { TYPE_4 . METHOD_8 ( response , STRING_2 ) ; } METHOD_7 ( response ) ; }\n"}
{"problem": "private static boolean METHOD_1 ( java.lang.Class < ? > VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; java.lang.Class < ? > [ ] VAR_4 = VAR_1 . METHOD_3 ( ) ; for ( java.lang.Class < ? > VAR_5 : VAR_4 ) { java.lang.String VAR_6 = VAR_5 . METHOD_2 ( ) ; if ( VAR_6 . equals ( ( VAR_3 + VAR_2 ) ) ) ; return true ; } return false ; }\n", "fixed": "private static boolean METHOD_1 ( java.lang.Class < ? > VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; java.lang.Class < ? > [ ] VAR_4 = VAR_1 . METHOD_3 ( ) ; for ( java.lang.Class < ? > VAR_5 : VAR_4 ) { java.lang.String VAR_6 = VAR_5 . METHOD_2 ( ) ; if ( VAR_6 . equals ( ( VAR_3 + VAR_2 ) ) ) { return true ; } } return false ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException , TYPE_3 { java.io.File VAR_3 = new java.io.File ( VAR_1 ) ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_3 ) ; TYPE_5 VAR_5 = VAR_4 . start ( ) ; TYPE_6 VAR_6 = new TYPE_6 ( ) ; VAR_6 . start ( VAR_5 . METHOD_2 ( ) , null ) ; VAR_4 . METHOD_3 ( ) ; return new TYPE_7 ( VAR_4 , VAR_6 ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException , TYPE_3 { java.io.File VAR_3 = new java.io.File ( VAR_1 ) ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_3 ) ; TYPE_5 VAR_5 = VAR_4 . start ( ) ; TYPE_6 VAR_6 = new TYPE_6 ( ) ; VAR_6 . start ( VAR_5 . METHOD_2 ( ) , VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; return new TYPE_7 ( VAR_4 , VAR_6 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.Integer VAR_2 , java.lang.Integer VAR_3 ) { TYPE_2 VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_5 . info ( STRING_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_6 . METHOD_1 ( VAR_3 ) ; VAR_6 . METHOD_3 ( VAR_3 ) ; return TYPE_3 . METHOD_4 ( INT_1 ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.Integer VAR_2 , java.lang.Integer VAR_3 ) { TYPE_2 VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_5 . info ( STRING_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_6 . METHOD_1 ( VAR_3 ) ; return TYPE_3 . METHOD_4 ( INT_1 ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; for ( int i = ( VAR_1 . length ) - 1 ; i > 0 ; i -- ) { for ( int VAR_2 = 0 ; VAR_2 < INT_1 ; VAR_2 ++ ) { if ( VAR_1 [ i ] . METHOD_4 ( VAR_2 ) ) { return VAR_1 [ i ] . getTime ( ) ; } } } return 0 ; }\n", "fixed": "public int METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = METHOD_2 ( ) ; for ( int i = ( VAR_1 . length ) - 1 ; i > 0 ; i -- ) { for ( int VAR_2 = 0 ; VAR_2 < INT_1 ; VAR_2 ++ ) { if ( VAR_1 [ i ] . METHOD_4 ( VAR_2 ) ) { return VAR_1 [ i ] . getTime ( ) ; } } } return 0 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_4 [ i ] . start ( ) ; try { TYPE_2 . METHOD_2 ( 1 ) ; } catch ( TYPE_3 VAR_5 ) { } } }\n", "fixed": "public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_4 [ i ] . start ( ) ; try { TYPE_2 . METHOD_2 ( 1 ) ; } catch ( TYPE_3 VAR_5 ) { } } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( ( VAR_2 . x ) > ( rows ) ) || ( ( VAR_2 . y ) > ( VAR_3 ) ) ) return false ; for ( TYPE_3 VAR_4 : VAR_5 ) { if ( VAR_4 . METHOD_2 ( ) . equals ( VAR_2 ) ) return false ; } TYPE_4 VAR_6 = VAR_7 [ VAR_2 . x ] [ VAR_2 . y ] ; if ( ! ( VAR_6 . METHOD_3 ( ) ) ) { return true ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( ( VAR_2 . x ) > ( rows ) ) || ( ( VAR_2 . y ) > ( VAR_3 ) ) ) return false ; for ( TYPE_3 VAR_4 : VAR_5 ) { if ( VAR_4 . METHOD_2 ( ) . equals ( VAR_2 ) ) return false ; } TYPE_4 VAR_6 = VAR_7 [ VAR_2 . x ] [ VAR_2 . y ] ; return VAR_6 . METHOD_3 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( long VAR_1 , TYPE_1 [ ] VAR_2 , TYPE_1 [ ] VAR_3 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_2 != null ) { VAR_4 = ( VAR_4 ) + ( VAR_2 . length ) ; } if ( VAR_3 != null ) { TYPE_3 . assertTrue ( STRING_1 , ( ( VAR_4 ) > ( VAR_5 ) ) ) ; VAR_5 = ( VAR_5 ) + ( VAR_3 . length ) ; } VAR_6 = true ; }\n", "fixed": "public void METHOD_1 ( long VAR_1 , TYPE_1 [ ] VAR_2 , TYPE_1 [ ] VAR_3 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_2 != null ) { VAR_4 = ( VAR_4 ) + ( VAR_2 . length ) ; } if ( VAR_3 != null ) { VAR_5 = ( VAR_5 ) + ( VAR_3 . length ) ; } VAR_6 = true ; }\n"}
{"problem": "protected void METHOD_1 ( java.io.File VAR_1 ) { try { java.lang.String VAR_2 = new java.lang.String ( TYPE_1 . METHOD_2 ( TYPE_2 . get ( VAR_1 . METHOD_3 ( ) ) ) , VAR_3 ) ; TYPE_3 VAR_4 = VAR_5 . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( VAR_4 , true ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_8 . error ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) , VAR_7 ) ; } }\n", "fixed": "protected void METHOD_1 ( java.io.File VAR_1 ) { try { java.lang.String VAR_2 = new java.lang.String ( TYPE_1 . METHOD_2 ( TYPE_2 . get ( VAR_1 . METHOD_3 ( ) ) ) , VAR_3 ) ; TYPE_3 VAR_4 = VAR_5 . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( VAR_4 ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_8 . error ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) , VAR_7 ) ; } }\n"}
{"problem": "private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = VAR_1 . trim ( ) . split ( STRING_1 ) ; byte [ ] VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 [ 1 ] . trim ( ) ) ; if ( VAR_3 != null ) { return new java.lang.String ( VAR_3 ) ; } else { if ( VAR_4 . METHOD_3 ( ) ) { VAR_4 . METHOD_4 ( STRING_2 ) ; } return null ; } }\n", "fixed": "private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return null ; } java.lang.String [ ] VAR_2 = VAR_1 . trim ( ) . split ( STRING_1 ) ; byte [ ] VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 [ 1 ] . trim ( ) ) ; if ( VAR_3 != null ) { return new java.lang.String ( VAR_3 ) ; } else { if ( VAR_4 . METHOD_3 ( ) ) { VAR_4 . METHOD_4 ( STRING_2 ) ; } return null ; } }\n"}
{"problem": "public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( query ) ; for ( TYPE_2 VAR_3 : VAR_1 . METHOD_3 ( ) ) { VAR_4 . METHOD_4 ( new TYPE_3 ( ( ( ( STRING_1 + ( VAR_3 . METHOD_5 ( ) ) ) + STRING_2 ) + ( VAR_3 . getText ( ) ) ) ) ) ; } } catch ( TYPE_4 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( query ) ; for ( TYPE_2 VAR_3 : VAR_1 . METHOD_3 ( ) ) { java.lang.String tmp = ( ( STRING_1 + ( VAR_3 . METHOD_5 ( ) ) ) + STRING_2 ) + ( VAR_3 . getText ( ) ) ; VAR_4 . METHOD_4 ( new TYPE_3 ( tmp ) ) ; } } catch ( TYPE_4 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , java.io.IOException { response . METHOD_2 ( STRING_1 ) ; TYPE_4 out = response . METHOD_3 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_4 ( STRING_2 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_4 ( STRING_3 ) ; if ( TYPE_5 . METHOD_5 ( VAR_2 , VAR_3 ) ) { response . METHOD_6 ( STRING_4 ) ; } else { out . METHOD_7 ( STRING_5 ) ; response . METHOD_6 ( STRING_6 ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , java.io.IOException { response . METHOD_2 ( STRING_1 ) ; TYPE_4 out = response . METHOD_3 ( ) ; java.lang.String name = VAR_1 . METHOD_4 ( STRING_2 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_4 ( STRING_3 ) ; if ( METHOD_5 ( name , VAR_3 ) ) { response . METHOD_6 ( STRING_4 ) ; } else { out . METHOD_7 ( STRING_5 ) ; response . METHOD_6 ( STRING_6 ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 ; VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; if ( VAR_1 != null ) VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_5 = METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) . replace ( VAR_6 , VAR_2 ) . commit ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 ; VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_5 = METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) . replace ( VAR_6 , VAR_2 ) . commit ( ) ; }\n"}
{"problem": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Object VAR_3 , java.lang.Object [ ] VAR_4 ) throws TYPE_3 , TYPE_4 { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_4 ) ; METHOD_5 ( VAR_1 ) ; return target . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }\n", "fixed": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Object VAR_3 , java.lang.Object [ ] VAR_4 ) throws TYPE_3 , TYPE_4 { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_4 ) ; METHOD_5 ( VAR_1 , VAR_4 ) ; return target . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { int VAR_1 = VAR_2 . size ( ) ; if ( VAR_1 < 0 ) return null ; if ( VAR_1 == 0 ) return VAR_2 . get ( 0 ) ; return VAR_2 . get ( ( ( ( VAR_3 ) ++ ) % VAR_1 ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { int VAR_1 = VAR_2 . size ( ) ; if ( VAR_1 == 0 ) return null ; if ( VAR_1 == 1 ) return VAR_2 . get ( 0 ) ; return VAR_2 . get ( ( ( ( VAR_3 ) ++ ) % VAR_1 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( true ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_2 . show ( ( ( TYPE_3 ) ( context ) ) . METHOD_5 ( ) , STRING_1 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( true ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_2 . show ( ( ( TYPE_3 ) ( context ) ) . METHOD_5 ( ) , STRING_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 state , int VAR_4 ) { java.util.List < TYPE_2 > VAR_5 = this . VAR_1 . get ( ) ; this . VAR_1 . remove ( ) ; if ( VAR_5 != null ) { VAR_1 . METHOD_2 ( VAR_5 ) ; } else { METHOD_3 ( VAR_1 , ( ( TYPE_6 ) ( VAR_2 ) ) , null , VAR_3 , 1.0F , VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 state , int VAR_4 ) { java.util.List < TYPE_2 > VAR_5 = this . VAR_1 . get ( ) ; this . VAR_1 . remove ( ) ; if ( VAR_5 != null ) { VAR_1 . METHOD_2 ( VAR_5 ) ; } else { if ( ! ( VAR_2 instanceof TYPE_6 ) ) { return ; } METHOD_3 ( VAR_1 , ( ( TYPE_6 ) ( VAR_2 ) ) , null , VAR_3 , 1.0F , VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getActivity ( ) ) ; VAR_2 . METHOD_2 ( new TYPE_2 ( getActivity ( ) ) ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( true ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( new TYPE_3 ( getContext ( ) ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( getActivity ( ) ) ; VAR_2 . METHOD_2 ( new TYPE_2 ( getActivity ( ) ) ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( true ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( new TYPE_3 ( getContext ( ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( true ) ; TYPE_1 . METHOD_2 ( VAR_2 . METHOD_5 ( ) ) . METHOD_4 ( VAR_3 ) ; METHOD_6 ( VAR_4 . METHOD_7 ( ) . size ( ) , 0 ) ; VAR_4 . METHOD_8 ( ) ; assertTrue ( ( ( VAR_4 . METHOD_7 ( ) . size ( ) ) > 0 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( true ) ; METHOD_2 ( VAR_2 . METHOD_5 ( ) ) . METHOD_4 ( VAR_3 ) ; METHOD_6 ( VAR_4 . METHOD_7 ( ) . size ( ) , 0 ) ; VAR_4 . METHOD_8 ( ) ; assertTrue ( ( ( VAR_4 . METHOD_7 ( ) . size ( ) ) > 0 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ; TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ; TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_7 ( VAR_3 ) ) . METHOD_8 ( TYPE_5 . METHOD_9 ( TYPE_3 . METHOD_10 ( ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ; TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_7 ( VAR_3 ) ) . METHOD_8 ( TYPE_5 . METHOD_9 ( TYPE_3 . METHOD_10 ( ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , METHOD_3 ( STRING_1 ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . commit ( ) ; VAR_3 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( VAR_5 . METHOD_8 ( VAR_6 ) ) ; TYPE_2 . METHOD_7 ( VAR_5 . METHOD_8 ( VAR_7 ) ) ; TYPE_2 . assertTrue ( VAR_5 . METHOD_8 ( VAR_8 ) ) ; METHOD_9 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , METHOD_3 ( STRING_1 ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . commit ( ) ; VAR_3 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( ) ; METHOD_7 ( VAR_5 . METHOD_8 ( VAR_6 ) ) ; METHOD_7 ( VAR_5 . METHOD_8 ( VAR_7 ) ) ; assertTrue ( VAR_5 . METHOD_8 ( VAR_8 ) ) ; METHOD_9 ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int x , int y ) { for ( TYPE_2 VAR_1 : VAR_2 ) { if ( ( ( ( VAR_1 . METHOD_2 ( ) ) == x ) && ( ( VAR_1 . METHOD_3 ( ) ) == y ) ) && ( VAR_1 instanceof TYPE_1 ) ) return ( ( TYPE_1 ) ( VAR_1 ) ) ; } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int x , int y ) { for ( TYPE_2 VAR_1 : VAR_2 ) { if ( ( ( VAR_1 instanceof TYPE_1 ) && ( ( VAR_1 . METHOD_2 ( ) ) == x ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == y ) ) return ( ( TYPE_1 ) ( VAR_1 ) ) ; } return null ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( file , STRING_1 ) ; this . VAR_1 . METHOD_3 ( target ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; TYPE_2 . assertEquals ( STRING_3 , VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( file , STRING_1 ) ; this . VAR_1 . METHOD_3 ( target ) ; assertEquals ( STRING_2 , VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; assertEquals ( STRING_3 , VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = ( ( java.util.List < TYPE_1 > ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ) ) ; TYPE_1 VAR_3 = ( ( VAR_2 . size ( ) ) > 0 ) ? VAR_2 . get ( 0 ) : null ; return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = ( ( java.util.List < TYPE_1 > ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ) ) ; TYPE_1 VAR_3 = ( ( VAR_2 . size ( ) ) > 0 ) ? VAR_2 . get ( 0 ) : new TYPE_1 ( new TYPE_2 ( 0 , 0 ) , 0 ) ; return VAR_3 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = null ; try { java.lang.String [ ] VAR_3 = new java.lang.String [ ] { VAR_4 } ; VAR_2 = context . METHOD_2 ( ) . query ( VAR_1 , VAR_3 , null , null , null ) ; int VAR_5 = VAR_2 . METHOD_3 ( VAR_6 ) ; VAR_2 . METHOD_4 ( ) ; return VAR_2 . getString ( VAR_5 ) ; } finally { if ( VAR_2 != null ) { VAR_2 . METHOD_5 ( ) ; } } }\n", "fixed": "public java.lang.String METHOD_1 ( android.content.Context context , TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = null ; try { java.lang.String [ ] VAR_3 = new java.lang.String [ ] { VAR_6 } ; VAR_2 = context . METHOD_2 ( ) . query ( VAR_1 , VAR_3 , null , null , null ) ; int VAR_5 = VAR_2 . METHOD_3 ( VAR_6 ) ; VAR_2 . METHOD_4 ( ) ; return VAR_2 . getString ( VAR_5 ) ; } finally { if ( VAR_2 != null ) { VAR_2 . METHOD_5 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case 0 : if ( ! ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } case 1 : VAR_1 . METHOD_5 ( ) ; VAR_3 . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { switch ( VAR_2 ) { case 0 : if ( ! ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } case 1 : VAR_1 . METHOD_5 ( ) ; VAR_3 . show ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( this ) ; android.widget.Button VAR_5 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_6 ) ) ) ; VAR_5 . METHOD_4 ( this ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_3 . METHOD_4 ( this ) ; TYPE_2 VAR_5 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_6 ) ) ) ; VAR_5 . METHOD_4 ( this ) ; }\n"}
{"problem": "void METHOD_1 ( ) { java.util.Date VAR_1 = java.util.Calendar.getInstance ( ) . getTime ( ) ; java.util.Date VAR_2 = java.util.Calendar.getInstance ( ) . getTime ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 , new TYPE_2 < TYPE_3 > ( ) ) ; assertEquals ( VAR_3 . METHOD_1 ( ) , new TYPE_2 < TYPE_3 > ( ) ) ; }\n", "fixed": "void METHOD_1 ( ) { java.util.Date VAR_1 = java.util.Calendar.getInstance ( ) . getTime ( ) ; java.util.Date VAR_2 = java.util.Calendar.getInstance ( ) . getTime ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 , new java.util.ArrayList < TYPE_3 > ( ) ) ; assertEquals ( VAR_3 . METHOD_1 ( ) , new java.util.ArrayList < TYPE_3 > ( ) ) ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_2 ( ) . method ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) . METHOD_7 ( TYPE_4 . METHOD_8 ( VAR_1 . METHOD_8 ( ) ) ) . METHOD_9 ( VAR_1 . METHOD_10 ( ) ) . build ( ) ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return TYPE_1 . METHOD_2 ( ) . method ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) . METHOD_7 ( TYPE_4 . METHOD_8 ( VAR_1 . METHOD_8 ( ) ) ) . METHOD_9 ( ( ( VAR_1 . METHOD_10 ( ) ) != null ? VAR_1 . METHOD_10 ( ) : new byte [ ] { } ) ) . build ( ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { if ( ! ( VAR_3 . METHOD_2 ( VAR_2 ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } if ( ! ( VAR_4 . METHOD_3 ( VAR_2 ) ) ) { this . METHOD_4 ( VAR_2 ) ; } return VAR_4 . get ( VAR_2 ) ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { if ( ! ( VAR_3 . METHOD_2 ( VAR_2 ) ) ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } if ( ! ( VAR_4 . METHOD_3 ( VAR_2 ) ) ) { this . METHOD_4 ( VAR_2 ) ; } return VAR_4 . get ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( ( p . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( ) ) && ( ( VAR_1 . METHOD_5 ( ) ) instanceof TYPE_2 ) ) && ( ! ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( STRING_1 ) ) ) ) { VAR_1 . METHOD_7 ( true ) ; } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( ! ( VAR_1 . METHOD_3 ( ) . METHOD_6 ( STRING_1 ) ) ) && ( p . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( ) ) ) { VAR_1 . METHOD_7 ( true ) ; } }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < TYPE_1 > VAR_2 ) { for ( int i = 0 ; i != ( VAR_1 . size ( ) ) ; ++ i ) { TYPE_2 VAR_3 = VAR_1 . METHOD_2 ( i ) ; if ( ( VAR_3 instanceof TYPE_1 ) && ( ! ( METHOD_1 ( ( ( TYPE_1 ) ( VAR_3 ) ) , VAR_2 ) ) ) ) { return false ; } } if ( VAR_1 instanceof TYPE_3 ) { VAR_2 . add ( VAR_1 ) ; } return true ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < TYPE_1 > VAR_2 ) { for ( int i = 0 ; i != ( VAR_1 . size ( ) ) ; ++ i ) { TYPE_2 VAR_3 = VAR_1 . METHOD_2 ( i ) ; if ( VAR_3 instanceof TYPE_1 ) { METHOD_1 ( ( ( TYPE_1 ) ( VAR_3 ) ) , VAR_2 ) ; } } if ( VAR_1 instanceof TYPE_3 ) { VAR_2 . add ( VAR_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { try { java.lang.String query = STRING_1 + VAR_1 ; VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_1 VAR_4 = VAR_2 . METHOD_3 ( query ) ; while ( VAR_4 . METHOD_4 ( ) ) { VAR_5 = ( ( VAR_4 . getString ( STRING_2 ) ) + STRING_3 ) + ( VAR_4 . getString ( STRING_4 ) ) ; } java.lang.System.out.println ( VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { try { java.lang.String query = STRING_1 + VAR_1 ; VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_1 VAR_4 = VAR_2 . METHOD_3 ( query ) ; while ( VAR_4 . METHOD_4 ( ) ) { VAR_5 = ( ( VAR_4 . getString ( STRING_2 ) ) + STRING_3 ) + ( VAR_4 . getString ( STRING_4 ) ) ; } } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_5 ( ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 b : TYPE_2 . METHOD_3 ( VAR_2 ) ) { if ( ( b . getType ( ) ) == ( VAR_3 ) ) { return b ; } } return null ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_1 . METHOD_2 ( ) ) == null ) ) { return null ; } final TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 b : TYPE_2 . METHOD_3 ( VAR_2 ) ) { if ( ( b . getType ( ) ) == ( VAR_3 ) ) { return b ; } } return null ; }\n"}
{"problem": "private synchronized void setState ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = state ; if ( ! ( state . METHOD_1 ( VAR_1 ) ) ) { throw new TYPE_2 ( ( ( ( STRING_1 + ( state ) ) + STRING_2 ) + VAR_1 ) ) ; } state = VAR_1 ; if ( ( VAR_3 ) != null ) { synchronized ( VAR_3 ) { VAR_3 . METHOD_2 ( state , VAR_2 ) ; } } }\n", "fixed": "private synchronized void setState ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = state ; if ( ! ( state . METHOD_1 ( VAR_1 ) ) ) { throw new TYPE_2 ( ( ( ( STRING_1 + ( state ) ) + STRING_2 ) + VAR_1 ) ) ; } state = VAR_1 ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( this , state , VAR_2 ) ; } }\n"}
{"problem": "private boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { int x = java.lang.Integer.parseInt ( VAR_1 ) ; if ( x <= ( VAR_2 . METHOD_3 ( ) ) ) { return true ; } else { METHOD_4 ( STRING_1 ) ; return false ; } } else { METHOD_4 ( STRING_2 ) ; return false ; } }\n", "fixed": "private boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { int x = java.lang.Integer.parseInt ( VAR_1 ) ; if ( ( x < ( VAR_2 . METHOD_3 ( ) ) ) && ( x > ( - 1 ) ) ) { return true ; } else { METHOD_4 ( STRING_1 ) ; return false ; } } else { METHOD_4 ( STRING_2 ) ; return false ; } }\n"}
{"problem": "private void METHOD_1 ( int VAR_1 , java.util.ArrayList < java.lang.Double > VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { double VAR_3 = TYPE_1 . METHOD_2 ( ) . VAR_4 . METHOD_3 ( false , true ) ; java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( i ) ; java.lang.System.out.println ( VAR_3 ) ; VAR_2 . set ( i , VAR_3 ) ; java.lang.System.out.println ( STRING_2 ) ; } }\n", "fixed": "private void METHOD_1 ( int VAR_1 , java.util.ArrayList < java.lang.Double > VAR_2 ) { java.lang.System.out.println ( VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { double VAR_3 = TYPE_1 . METHOD_2 ( ) . VAR_4 . METHOD_3 ( false , true ) ; VAR_2 . set ( i , VAR_3 ) ; } }\n"}
{"problem": "public double METHOD_1 ( ) { double VAR_1 ; if ( ( size ) == 0 ) { java.lang.System.out.println ( STRING_1 ) ; return - FLOAT_1 ; } else if ( ( size ) == 1 ) { VAR_1 = VAR_2 . data ; VAR_3 = null ; VAR_2 = null ; } else { VAR_1 = VAR_2 . data ; VAR_2 = VAR_4 ; VAR_5 = null ; VAR_6 = null ; } ( size ) -- ; return VAR_1 ; }\n", "fixed": "public double METHOD_1 ( ) { double VAR_1 ; if ( ( size ) == 0 ) { java.lang.System.out.println ( STRING_1 ) ; return 0 ; } else if ( ( size ) == 1 ) { VAR_1 = VAR_2 . data ; VAR_3 = null ; VAR_2 = null ; } else { VAR_1 = VAR_2 . data ; VAR_2 = VAR_4 ; VAR_5 = null ; VAR_6 = null ; } ( size ) -- ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 ; int VAR_3 ; for ( int i = 0 ; i < ( VAR_1 . METHOD_3 ( ) ) ; i ++ ) { VAR_2 = VAR_1 . METHOD_4 ( i ) ; VAR_3 = VAR_4 ; VAR_5 [ VAR_3 ] = VAR_2 ; VAR_6 = 0 ; } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 ; int VAR_3 ; for ( int i = 0 ; i < ( VAR_1 . METHOD_3 ( ) ) ; i ++ ) { VAR_2 = VAR_1 . METHOD_4 ( i ) ; VAR_3 = VAR_4 ; VAR_5 [ VAR_3 ] = VAR_2 ; VAR_6 = false ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 ; synchronized ( VAR_2 ) { while ( true ) { while ( ( VAR_2 . METHOD_2 ( ) ) == null ) { try { VAR_2 . METHOD_3 ( ) ; } catch ( TYPE_2 VAR_3 ) { java.lang.System.out.println ( STRING_1 ) ; } } VAR_1 = VAR_2 . METHOD_4 ( ) ; if ( VAR_1 != null ) { VAR_4 . METHOD_5 ( VAR_5 , VAR_1 ) ; } } } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 ; while ( true ) { synchronized ( VAR_2 ) { while ( true ) { try { VAR_2 . METHOD_3 ( ) ; break ; } catch ( TYPE_2 VAR_3 ) { java.lang.System.out.println ( STRING_1 ) ; } } VAR_1 = VAR_2 . METHOD_4 ( ) ; } assert VAR_1 != null ; VAR_4 . METHOD_5 ( VAR_5 , VAR_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 . getValue ( ) ) ) { java.util.Calendar c = ( ( java.util.Calendar ) ( VAR_3 . getValue ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; c . add ( VAR_4 , 1 ) ; METHOD_4 ( c ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ! ( VAR_2 . getValue ( ) ) ) { java.util.Calendar c = ( ( java.util.Calendar ) ( VAR_3 . getValue ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; c . add ( VAR_4 , ( - 1 ) ) ; METHOD_4 ( c ) ; } }\n"}
{"problem": "public int METHOD_1 ( long VAR_1 , int VAR_2 ) { TYPE_1 query = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; query . METHOD_4 ( STRING_2 , VAR_1 ) . METHOD_5 ( STRING_3 , VAR_2 ) ; return java.lang.Integer.parseInt ( query . METHOD_6 ( ) . toString ( ) ) ; }\n", "fixed": "public int METHOD_1 ( long VAR_1 , int VAR_2 ) { TYPE_1 query = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; query . METHOD_4 ( STRING_2 , VAR_1 ) . METHOD_5 ( STRING_3 , VAR_2 ) ; java.lang.Object result = query . METHOD_6 ( ) ; if ( result == null ) { return - 1 ; } return java.lang.Integer.parseInt ( result . toString ( ) ) ; }\n"}
{"problem": "public void execute ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_1 ( STRING_1 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; java.util.List < TYPE_3 > list = VAR_3 . METHOD_2 ( VAR_2 ) ; for ( TYPE_3 VAR_4 : list ) { this . VAR_5 . METHOD_3 ( new TYPE_4 ( VAR_4 . METHOD_4 ( ) ) ) ; } }\n", "fixed": "public void execute ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_1 ( STRING_1 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; java.util.List < java.lang.String > list = VAR_3 . METHOD_2 ( VAR_2 ) ; for ( java.lang.String VAR_4 : list ) { this . VAR_5 . METHOD_3 ( new TYPE_4 ( VAR_4 ) ) ; } }\n"}
{"problem": "public void init ( TYPE_1 event ) throws TYPE_2 , TYPE_3 { TYPE_4 . init ( ) ; TYPE_5 . METHOD_1 ( new TYPE_6 ( ) ) ; TYPE_5 . METHOD_1 ( new TYPE_7 ( ) ) ; TYPE_5 . METHOD_1 ( new TYPE_4 ( ) ) ; TYPE_5 . METHOD_1 ( new TYPE_8 ( ) ) ; VAR_1 = TYPE_9 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 class , VAR_4 class , 0 , VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_6 class , VAR_7 class , 1 , VAR_8 ) ; }\n", "fixed": "public void init ( TYPE_1 event ) throws TYPE_2 , TYPE_3 { TYPE_5 . METHOD_1 ( new TYPE_6 ( ) ) ; TYPE_5 . METHOD_1 ( new TYPE_7 ( ) ) ; TYPE_5 . METHOD_1 ( new TYPE_4 ( ) ) ; TYPE_5 . METHOD_1 ( new TYPE_8 ( ) ) ; VAR_1 = TYPE_9 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 class , VAR_4 class , 0 , VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_6 class , VAR_7 class , 1 , VAR_8 ) ; }\n"}
{"problem": "private void METHOD_1 ( boolean VAR_1 ) { try { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( VAR_1 ) assertTrue ( VAR_2 . equals ( VAR_4 ) ) ; else METHOD_3 ( VAR_2 . equals ( VAR_4 ) ) ; } catch ( TYPE_2 VAR_5 ) { assert false ; } }\n", "fixed": "private void METHOD_1 ( boolean VAR_1 ) { try { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( VAR_1 ) assertTrue ( VAR_2 . equals ( VAR_4 ) ) ; else METHOD_3 ( VAR_2 . equals ( VAR_4 ) ) ; } catch ( TYPE_2 VAR_5 ) { fail ( ) ; } }\n"}
{"problem": "public final < TYPE_1 , TYPE_2 , TYPE_3 > void METHOD_1 ( final TYPE_4 < TYPE_1 , TYPE_2 , TYPE_3 > VAR_1 , final TYPE_1 ... params ) { TYPE_5 VAR_2 = new TYPE_5 ( TYPE_6 . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( new TYPE_7 ( ) { public void METHOD_4 ( ) { VAR_1 . execute ( params ) ; } } ) ; }\n", "fixed": "public final < TYPE_1 , TYPE_2 , TYPE_3 > void METHOD_1 ( final TYPE_4 < TYPE_1 , TYPE_2 , TYPE_3 > VAR_1 , final TYPE_1 ... params ) { VAR_2 . METHOD_3 ( new TYPE_7 ( ) { public void METHOD_4 ( ) { VAR_1 . execute ( params ) ; } } ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; VAR_2 = this . VAR_3 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; VAR_1 . METHOD_3 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; VAR_2 = VAR_3 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; VAR_1 . METHOD_3 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; return VAR_1 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String string ) throws TYPE_2 { TYPE_3 context = new TYPE_3 ( string ) ; TYPE_4 . METHOD_2 ( ( p ) - > p . METHOD_3 ( context ) ) ; java.lang.String VAR_1 ; do { VAR_1 = context . getString ( ) ; TYPE_5 . METHOD_2 ( ( p ) - > p . METHOD_3 ( context ) ) ; } while ( ! ( VAR_1 . equals ( context . getString ( ) ) ) ) ; return context . METHOD_4 ( ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String string ) throws TYPE_2 { TYPE_3 context = new TYPE_3 ( string . trim ( ) ) ; TYPE_4 . METHOD_2 ( ( p ) - > p . METHOD_3 ( context ) ) ; java.lang.String VAR_1 ; do { VAR_1 = context . getString ( ) ; TYPE_5 . METHOD_2 ( ( p ) - > p . METHOD_3 ( context ) ) ; } while ( ! ( VAR_1 . equals ( context . getString ( ) ) ) ) ; return context . METHOD_4 ( ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ( ( VAR_4 ) + ( VAR_5 ) ) , VAR_1 . METHOD_3 ( ) , null ) ; VAR_3 . METHOD_4 ( ) ; return VAR_3 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ( ( VAR_4 ) + ( VAR_2 ) ) , VAR_1 . METHOD_3 ( ) , null ) ; VAR_3 . METHOD_4 ( ) ; return VAR_3 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( ( VAR_2 ) & ( VAR_3 ) ) != 0 ) ? new TYPE_1 ( new TYPE_2 < java.lang.String , java.lang.Object > ( ) ) : new TYPE_1 ( ) ; METHOD_1 ( VAR_1 , null ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( ( VAR_2 ) & ( VAR_3 ) ) != 0 ) ? new TYPE_1 ( new TYPE_2 < java.lang.String , java.lang.Object > ( ) ) : new TYPE_1 ( ) ; return ( ( TYPE_1 ) ( METHOD_1 ( VAR_1 , null ) ) ) ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String key , java.lang.String value ) { try { java.lang.Object VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_2 , key , value ) ; ( ( java.util.HashMap < java.lang.String , java.lang.Object > ) ( VAR_5 . get ( VAR_1 ) ) ) . put ( VAR_6 , VAR_2 ) ; } catch ( TYPE_2 | TYPE_3 | TYPE_4 VAR_7 ) { VAR_7 . METHOD_4 ( ) ; } }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String key , java.lang.String value ) { try { java.lang.Object VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( VAR_2 , key , value ) ; ( ( java.util.Map < java.lang.String , java.lang.Object > ) ( VAR_5 . get ( VAR_1 ) ) ) . put ( VAR_6 , VAR_2 ) ; } catch ( TYPE_2 | TYPE_3 | TYPE_4 VAR_7 ) { VAR_7 . METHOD_4 ( ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 ) ; if ( VAR_3 . METHOD_2 ( VAR_1 ) ) return ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_3 ) + CHAR_1 ; return null ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { if ( ( VAR_4 ) == null ) return null ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 ) ; if ( VAR_3 . METHOD_2 ( VAR_1 ) ) return ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_3 ) + CHAR_1 ; return null ; }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String [ ] VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( java.lang.String VAR_3 : VAR_1 ) { for ( TYPE_1 VAR_4 : METHOD_2 ( ) ) { if ( ( ( VAR_4 . METHOD_3 ( ) ) != null ) && ( VAR_4 . METHOD_3 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . add ( VAR_4 ) ; } } } return VAR_2 ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String [ ] VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_4 : METHOD_2 ( ) ) { if ( ( VAR_4 . METHOD_3 ( ) ) != null ) { for ( java.lang.String VAR_3 : VAR_1 ) { if ( VAR_4 . METHOD_3 ( ) . contains ( VAR_3 ) ) { VAR_2 . add ( VAR_4 ) ; } } } } return VAR_2 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( long VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; if ( VAR_3 . METHOD_2 ( ) ) VAR_3 . METHOD_3 ( ( STRING_2 + VAR_2 ) ) ; return VAR_4 . METHOD_4 ( VAR_2 , new java.lang.Object [ ] { VAR_1 } , new TYPE_2 ( ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( long VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; if ( VAR_3 . METHOD_2 ( ) ) VAR_3 . METHOD_3 ( ( STRING_2 + VAR_2 ) ) ; java.util.List < TYPE_1 > result = VAR_4 . query ( VAR_2 , new java.lang.Object [ ] { VAR_1 } , new TYPE_2 ( ) ) ; if ( ( result . size ( ) ) > 0 ) { return result . get ( 0 ) ; } else { return null ; } }\n"}
{"problem": "private void METHOD_1 ( ) { final java.lang.String VAR_1 = VAR_2 . getText ( ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { VAR_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } else VAR_2 . setText ( VAR_3 . METHOD_4 ( ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { final java.lang.String VAR_1 = VAR_2 . getText ( ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { VAR_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } }\n"}
{"problem": "public double METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = METHOD_2 ( ) ; for ( TYPE_1 b : VAR_2 ) { java.util.ArrayList < TYPE_2 > VAR_3 = b . METHOD_3 ( ) ; for ( TYPE_2 a : VAR_3 ) { if ( ( a . METHOD_4 ( ) ) == VAR_1 ) { return a . METHOD_1 ( ) ; } } } return - 1 ; }\n", "fixed": "public double METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = METHOD_2 ( ) ; for ( TYPE_1 b : VAR_2 ) { java.util.ArrayList < TYPE_2 > VAR_3 = b . METHOD_3 ( ) ; for ( TYPE_2 a : VAR_3 ) { if ( a . METHOD_4 ( ) . equals ( VAR_1 ) ) { return a . METHOD_1 ( ) ; } } } return - 1 ; }\n"}
{"problem": "private java.lang.Object get ( java.lang.String VAR_1 , int type ) { synchronized ( VAR_2 ) { if ( ! ( METHOD_1 ( VAR_1 , type ) ) ) { throw new TYPE_1 ( ( STRING_1 + VAR_1 ) ) ; } return VAR_3 . get ( VAR_1 ) . getValue ( ) ; } }\n", "fixed": "private java.lang.Object get ( java.lang.String VAR_1 , int type ) { synchronized ( VAR_2 ) { if ( ! ( METHOD_1 ( VAR_1 , type ) ) ) { throw new TYPE_1 ( ( STRING_1 + ( VAR_1 . toLowerCase ( ) ) ) ) ; } return VAR_3 . get ( VAR_1 . toLowerCase ( ) ) . getValue ( ) ; } }\n"}
{"problem": "public boolean delete ( TYPE_1 t ) { if ( ( ( t . METHOD_1 ( ) ) && ( VAR_1 ) ) && ( ! ( VAR_2 ) ) ) { java.lang.String VAR_3 = ( ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) + ( VAR_5 ) ) + STRING_3 ) + ( t . id ) ; synchronized ( VAR_6 ) { VAR_6 . METHOD_2 ( VAR_3 ) ; } return true ; } return false ; }\n", "fixed": "public boolean delete ( TYPE_1 t ) { if ( ( ( t . METHOD_1 ( ) ) && ( VAR_1 ) ) && ( ! ( VAR_2 ) ) ) { java.lang.String VAR_3 = ( ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) + ( VAR_5 ) ) + STRING_3 ) + ( t . id ( ) ) ; synchronized ( VAR_6 ) { VAR_6 . METHOD_2 ( VAR_3 ) ; } return true ; } return false ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 event ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) && ( ( event . METHOD_3 ( ) ) == ( VAR_2 ) ) ) && ( ( event . METHOD_4 ( ) ) == ( VAR_3 ) ) ) { if ( ( ( VAR_4 ) == ( VAR_5 ) ) && ( VAR_6 ) ) { return false ; } else { TYPE_2 VAR_7 = VAR_8 . METHOD_5 ( ) ; VAR_7 . METHOD_6 ( ) ; } } return super . METHOD_1 ( event ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 event ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) && ( ( event . METHOD_3 ( ) ) == ( VAR_2 ) ) ) && ( ( event . METHOD_4 ( ) ) == ( VAR_3 ) ) ) { TYPE_2 VAR_7 = VAR_8 . METHOD_5 ( ) ; VAR_7 . METHOD_6 ( ) ; } return super . METHOD_1 ( event ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { java.util.List < java.lang.String > VAR_1 = item . METHOD_2 ( ) ; boolean result = VAR_2 . remove ( item ) ; VAR_1 . METHOD_3 ( ( VAR_3 ) - > TYPE_2 . METHOD_4 ( VAR_3 ) ) ; java.lang.System.out.println ( TYPE_2 . METHOD_5 ( ) ) ; return result ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { java.util.List < java.lang.String > VAR_1 = item . METHOD_2 ( ) ; boolean result = VAR_2 . remove ( item ) ; VAR_1 . METHOD_3 ( ( VAR_3 ) - > TYPE_2 . METHOD_4 ( VAR_3 ) ) ; return result ; }\n"}
{"problem": "public java.lang.Integer METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; switch ( VAR_2 . size ( ) ) { case 0 : return VAR_3 ; case 1 : VAR_4 . remove ( VAR_2 . get ( 0 ) ) ; file . METHOD_2 ( ) ; file . METHOD_4 ( METHOD_5 ( VAR_4 ) ) ; return VAR_5 ; default : TYPE_2 . METHOD_6 ( ) . METHOD_7 ( METHOD_5 ( VAR_2 ) ) ; return VAR_6 ; } }\n", "fixed": "public java.lang.Integer METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; switch ( VAR_2 . size ( ) ) { case 0 : return VAR_3 ; case 1 : VAR_4 . remove ( VAR_2 . get ( 0 ) ) ; file . METHOD_2 ( ) ; file . METHOD_4 ( METHOD_5 ( ) ) ; return VAR_5 ; default : TYPE_2 . METHOD_6 ( ) . METHOD_7 ( METHOD_5 ( VAR_2 ) ) ; return VAR_6 ; } }\n"}
{"problem": "protected < TYPE_1 > void METHOD_1 ( TYPE_2 < ? > VAR_1 , TYPE_3 < TYPE_1 > VAR_2 ) { TYPE_4 VAR_3 = METHOD_2 ( VAR_1 ) ; try { java.lang.Object result = METHOD_1 ( VAR_1 , VAR_3 ) ; VAR_2 . METHOD_3 ( ( ( TYPE_1 ) ( result ) ) ) ; } catch ( java.lang.Throwable VAR_4 ) { VAR_2 . METHOD_4 ( VAR_4 ) ; } }\n", "fixed": "protected < TYPE_1 > void METHOD_1 ( TYPE_2 < ? > VAR_1 , TYPE_3 < TYPE_1 > VAR_2 ) { try { TYPE_4 VAR_3 = METHOD_2 ( VAR_1 ) ; java.lang.Object result = METHOD_1 ( VAR_1 , VAR_3 ) ; VAR_2 . METHOD_3 ( ( ( TYPE_1 ) ( result ) ) ) ; } catch ( java.lang.Throwable VAR_4 ) { VAR_2 . METHOD_4 ( VAR_4 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final java.util.Map < java.lang.String , TYPE_3 > VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; final TYPE_3 VAR_3 = VAR_2 . get ( VAR_1 . METHOD_4 ( ) ) ; if ( VAR_3 != null ) { return VAR_3 . METHOD_5 ( ) ; } else { return VAR_4 ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final java.util.Map < java.lang.String , TYPE_3 > VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; final TYPE_3 VAR_3 = VAR_2 . get ( VAR_1 . METHOD_4 ( ) ) ; if ( VAR_3 == null ) { return null ; } return VAR_3 . METHOD_5 ( ) ; }\n"}
{"problem": "public static java.util.List < TYPE_1 > METHOD_1 ( java.lang.String name ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_2 : VAR_3 . METHOD_2 ( ) ) { if ( ( VAR_3 . get ( VAR_2 ) ) == name ) { VAR_1 . add ( VAR_2 ) ; return VAR_1 ; } } return null ; }\n", "fixed": "public static TYPE_1 [ ] METHOD_1 ( java.lang.String name ) { for ( TYPE_1 VAR_2 : VAR_3 . METHOD_2 ( ) ) { if ( ( VAR_3 . get ( VAR_2 ) ) == name ) { return new TYPE_1 [ ] { VAR_2 } ; } } return null ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws TYPE_2 { boolean VAR_1 = METHOD_2 ( ) ; try { if ( ! VAR_1 ) { throw new TYPE_2 ( STRING_1 ) ; } java.util.List < TYPE_3 > VAR_2 = VAR_3 . METHOD_3 ( ) ; if ( VAR_2 . isEmpty ( ) ) { throw new TYPE_2 ( STRING_2 ) ; } return VAR_3 . METHOD_4 ( VAR_2 ) ; } catch ( TYPE_4 VAR_4 ) { throw new TYPE_2 ( ( STRING_3 + ( VAR_4 . METHOD_5 ( ) ) ) ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws TYPE_2 { boolean VAR_1 = METHOD_2 ( ) ; try { if ( ! VAR_1 ) { throw new TYPE_2 ( STRING_1 ) ; } java.util.List < TYPE_3 > VAR_2 = VAR_3 . METHOD_3 ( ) ; return VAR_3 . METHOD_4 ( VAR_2 ) ; } catch ( TYPE_4 VAR_4 ) { throw new TYPE_2 ( ( STRING_3 + ( VAR_4 . METHOD_5 ( ) ) ) ) ; } }\n"}
{"problem": "private < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_3 VAR_1 , java.lang.Class < TYPE_1 > VAR_2 ) { TYPE_2 VAR_3 = null ; try { METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( true ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_4 . METHOD_6 ( ) ; } catch ( java.lang.Exception VAR_5 ) { TYPE_4 . METHOD_7 ( VAR_6 , STRING_1 , VAR_5 ) ; } }\n", "fixed": "private < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_3 VAR_1 , java.lang.Class < TYPE_1 > VAR_2 ) { try { METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( true ) ; METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_4 . METHOD_6 ( ) ; } catch ( java.lang.Exception VAR_5 ) { TYPE_4 . METHOD_7 ( VAR_6 , STRING_1 , VAR_5 ) ; } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { args = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 } ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , args ) ; java.lang.System.out.println ( VAR_3 ) ; if ( VAR_4 ) { VAR_2 . METHOD_1 ( ) ; java.lang.System.exit ( 0 ) ; } TYPE_3 . METHOD_2 ( TYPE_4 . get ( VAR_5 ) , VAR_1 . size ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , args ) ; java.lang.System.out.println ( VAR_3 ) ; if ( VAR_4 ) { VAR_2 . METHOD_1 ( ) ; java.lang.System.exit ( 0 ) ; } TYPE_3 . METHOD_2 ( TYPE_4 . get ( VAR_5 ) , VAR_1 . size ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return VAR_1 ; } if ( METHOD_3 ( ) ) { return VAR_2 ; } TYPE_2 . METHOD_4 ( STRING_1 ) ; if ( METHOD_5 ( 0 ) ) { java.lang.System.out.println ( STRING_2 ) ; return VAR_3 ; } else if ( METHOD_5 ( 1 ) ) { java.lang.System.out.println ( STRING_3 ) ; return VAR_4 ; } throw new TYPE_3 ( STRING_4 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return VAR_1 ; } if ( METHOD_3 ( ) ) { return VAR_2 ; } TYPE_2 . METHOD_4 ( STRING_1 ) ; if ( METHOD_5 ( 0 ) ) { return VAR_3 ; } else if ( METHOD_5 ( 1 ) ) { java.lang.System.out.println ( STRING_3 ) ; return VAR_4 ; } throw new TYPE_3 ( STRING_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 value ) { ( VAR_1 ) -- ; if ( ( size ) == 0 ) ( VAR_2 ) -- ; if ( ( VAR_1 ) < 0 ) { VAR_1 = ( data . length ) - 1 ; } data [ VAR_1 ] = value ; ( size ) ++ ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 value ) { if ( ( VAR_1 ) < 0 ) { VAR_1 = ( data . length ) - 1 ; } data [ VAR_1 ] = value ; ( VAR_1 ) -- ; if ( ( size ) == 0 ) ( VAR_2 ) -- ; ( size ) ++ ; }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > VAR_2 , java.util.ArrayList < TYPE_3 > VAR_3 ) { int VAR_4 = 0 ; java.util.ArrayList < TYPE_2 > VAR_5 = METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; for ( TYPE_2 p : VAR_5 ) { VAR_4 += METHOD_4 ( VAR_3 , p ) . size ( ) ; } return VAR_4 == 0 ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < TYPE_2 > VAR_2 , java.util.ArrayList < TYPE_3 > VAR_3 ) { int VAR_4 = 0 ; java.util.ArrayList < TYPE_2 > VAR_5 = METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; for ( TYPE_2 p : VAR_5 ) { VAR_4 += METHOD_4 ( VAR_3 , p , VAR_2 , VAR_1 ) . size ( ) ; } return VAR_4 == 0 ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { final java.lang.String title = item . METHOD_2 ( ) . toString ( ) ; if ( STRING_1 . equals ( title ) ) { METHOD_3 ( item . METHOD_4 ( ) ) ; } else if ( STRING_2 . equals ( title ) ) { METHOD_5 ( item . METHOD_4 ( ) ) ; } else { return false ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { final java.lang.String title = item . METHOD_2 ( ) . toString ( ) ; if ( STRING_1 . equals ( title ) ) { METHOD_3 ( item . METHOD_4 ( ) ) ; } else { return false ; } return true ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; params . put ( STRING_1 , path ) ; params . put ( STRING_2 , VAR_1 ) ; java.lang.String VAR_2 = TYPE_2 . METHOD_2 ( TYPE_3 ) ; params . put ( STRING_3 , VAR_2 ) ; return VAR_3 . METHOD_1 ( params ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; params . put ( STRING_1 , path ) ; params . put ( STRING_2 , VAR_1 ) ; java.lang.String VAR_2 = TYPE_3 . toString ( ) ; params . put ( STRING_3 , VAR_2 ) ; return VAR_3 . METHOD_1 ( params ) ; }\n"}
{"problem": "private double METHOD_1 ( java.lang.String key ) { VAR_1 . info ( ( STRING_1 + key ) ) ; double value = 0.0 ; java.lang.String VAR_2 = ( ( java.lang.String ) ( VAR_3 . get ( key ) ) ) ; if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { value = java.lang.Double . METHOD_3 ( VAR_2 ) ; } VAR_1 . info ( ( STRING_2 + value ) ) ; return value ; }\n", "fixed": "private double METHOD_1 ( java.lang.String key ) { double value = 0.0 ; java.lang.String VAR_2 = ( ( java.lang.String ) ( VAR_3 . get ( key ) ) ) ; if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { value = java.lang.Double . METHOD_3 ( VAR_2 ) ; } return value ; }\n"}
{"problem": "public boolean METHOD_1 ( ) throws TYPE_1 { boolean VAR_1 ; try { TYPE_2 result = METHOD_2 ( VAR_2 ) . METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) ) ; VAR_1 = result . METHOD_5 ( ) ; } catch ( TYPE_3 VAR_4 ) { throw new TYPE_1 ( ( ( STRING_3 + ( VAR_3 ) ) + STRING_4 ) , VAR_4 ) ; } return VAR_1 ; }\n", "fixed": "public boolean METHOD_1 ( ) throws TYPE_1 { boolean VAR_1 ; try { TYPE_2 result = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) ) ; VAR_1 = result . METHOD_5 ( ) ; } catch ( TYPE_3 VAR_4 ) { throw new TYPE_1 ( ( ( STRING_3 + ( VAR_3 ) ) + STRING_4 ) , VAR_4 ) ; } return VAR_1 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String VAR_3 = STRING_1 ; if ( VAR_1 != null ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { TYPE_1 VAR_4 = VAR_1 [ i ] ; VAR_3 += ( STRING_2 + VAR_4 ) + STRING_3 ; } if ( ( VAR_1 . size ( ) ) == 0 ) { VAR_3 += STRING_4 ; } } else { VAR_3 += STRING_4 ; } return VAR_3 ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String VAR_3 = STRING_1 ; if ( VAR_1 != null ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { TYPE_1 VAR_4 = VAR_1 [ i ] ; VAR_3 += ( STRING_2 + VAR_4 ) + STRING_3 ; } if ( ( VAR_1 . length ) == 0 ) { VAR_3 += STRING_4 ; } } else { VAR_3 += STRING_4 ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_5 ) { java.util.logging.Logger.getLogger ( VAR_6 class . getName ( ) ) . METHOD_5 ( VAR_7 , null , VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { try { VAR_1 . METHOD_1 ( ) ; VAR_4 . METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } catch ( java.io.IOException VAR_5 ) { java.util.logging.Logger.getLogger ( VAR_6 class . getName ( ) ) . METHOD_5 ( VAR_7 , null , VAR_5 ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 message ) { if ( VAR_1 . isEmpty ( ) ) { throw new TYPE_3 ( ) ; } boolean VAR_2 = false ; for ( TYPE_4 VAR_3 : VAR_4 ) { try { VAR_3 . METHOD_2 ( VAR_1 , message ) ; VAR_2 = true ; } catch ( java.lang.Exception VAR_5 ) { VAR_6 . error ( STRING_1 , VAR_3 . toString ( ) , VAR_5 . METHOD_3 ( ) ) ; } } if ( ! VAR_2 ) { METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 message ) { if ( VAR_1 . isEmpty ( ) ) { throw new TYPE_3 ( ) ; } boolean VAR_2 = false ; for ( TYPE_4 VAR_3 : VAR_4 ) { try { VAR_3 . METHOD_2 ( VAR_1 , message ) ; VAR_2 = true ; break ; } catch ( java.lang.Exception VAR_5 ) { VAR_6 . error ( STRING_1 , VAR_3 . toString ( ) , VAR_5 . METHOD_3 ( ) ) ; } } if ( ! VAR_2 ) { METHOD_4 ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.util.Map < TYPE_3 , java.lang.Integer > VAR_3 ) throws TYPE_4 { java.util.ArrayList < TYPE_5 > VAR_4 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) ; if ( METHOD_3 ( VAR_4 ) ) { METHOD_4 ( VAR_3 , VAR_4 ) ; } else { METHOD_5 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.util.Map < TYPE_3 , java.lang.Integer > VAR_3 ) throws TYPE_4 { java.util.ArrayList < TYPE_5 > VAR_4 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( METHOD_3 ( VAR_4 ) ) { METHOD_4 ( VAR_3 , VAR_4 ) ; } else { METHOD_5 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { if ( ( VAR_2 instanceof TYPE_1 ) && ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) { TYPE_1 VAR_4 = ( ( TYPE_1 ) ( VAR_2 ) ) ; return ( VAR_4 . getId ( ) . METHOD_3 ( ) ) == ( VAR_5 ) ; } else { if ( ( VAR_2 instanceof TYPE_1 ) && ( ! ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) ) { TYPE_2 . METHOD_4 ( ) . METHOD_5 ( STRING_1 ) ; } return false ; } }\n", "fixed": "public boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { if ( ( VAR_2 instanceof TYPE_1 ) && ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) { TYPE_1 VAR_4 = ( ( TYPE_1 ) ( VAR_2 ) ) ; return ( VAR_4 . getId ( ) . METHOD_3 ( ) ) == ( VAR_5 ) ; } else { return false ; } }\n"}
{"problem": "private java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > node ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new TYPE_1 < java.lang.String , java.lang.String > ( ) ; for ( java.lang.String VAR_2 : node . METHOD_2 ( ) ) { java.lang.String value = ( ( java.lang.String ) ( node . get ( VAR_2 ) ) ) ; if ( TYPE_2 . METHOD_3 ( value ) ) { VAR_1 . put ( VAR_2 , value ) ; } } return VAR_1 ; }\n", "fixed": "private java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > node ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new TYPE_1 < java.lang.String , java.lang.String > ( ) ; if ( node != null ) { for ( java.lang.String VAR_2 : node . METHOD_2 ( ) ) { java.lang.String value = ( ( java.lang.String ) ( node . get ( VAR_2 ) ) ) ; if ( TYPE_2 . METHOD_3 ( value ) ) { VAR_1 . put ( VAR_2 , value ) ; } } } return VAR_1 ; }\n"}
{"problem": "private android.view.View METHOD_1 ( int x , int y ) { android.widget.Button VAR_1 = new android.widget.Button ( context ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ( ( INT_1 * x ) + y ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , x , y ) ; VAR_4 . add ( VAR_3 ) ; return VAR_1 ; }\n", "fixed": "private android.view.View METHOD_1 ( int x , int y ) { android.widget.Button VAR_1 = new android.widget.Button ( context ) ; VAR_1 . METHOD_3 ( ( ( INT_1 * x ) + y ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , x , y ) ; VAR_4 . add ( VAR_3 ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) ) + ( VAR_1 . x ) ) , ( ( VAR_2 . METHOD_4 ( ) ) + ( VAR_1 . y ) ) ) ; VAR_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) ) + ( VAR_1 . x ) ) , ( ( VAR_2 . METHOD_4 ( ) ) + ( VAR_1 . y ) ) ) ; VAR_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ; }\n"}
{"problem": "public long METHOD_1 ( int VAR_1 ) { long VAR_2 = METHOD_2 ( size ) ; assert ( ( size ) > 0 ) || ( VAR_2 != 0 ) ; if ( ( VAR_2 & ( ~ ( VAR_3 ) ) ) != ( ( VAR_2 + VAR_1 ) & ( ~ ( VAR_3 ) ) ) ) { VAR_2 = ( VAR_2 + ( VAR_3 ) ) & ( ~ ( VAR_3 ) ) ; METHOD_3 ( size , VAR_2 ) ; } return VAR_2 ; }\n", "fixed": "public long METHOD_1 ( int VAR_1 ) { long VAR_2 = METHOD_2 ( size ) ; assert ( ( size ) == 0 ) || ( VAR_2 != 0 ) ; if ( ( VAR_2 & ( ~ ( VAR_3 ) ) ) != ( ( VAR_2 + VAR_1 ) & ( ~ ( VAR_3 ) ) ) ) { VAR_2 = ( VAR_2 + ( VAR_3 ) ) & ( ~ ( VAR_3 ) ) ; METHOD_3 ( size , VAR_2 ) ; } return VAR_2 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { try { TYPE_2 VAR_1 = this . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( this . VAR_2 ) ; } } catch ( java.lang.Exception VAR_3 ) { VAR_4 = false ; VAR_5 = VAR_3 . METHOD_4 ( ) ; VAR_6 = VAR_3 ; } return VAR_7 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { try { TYPE_2 VAR_1 = this . METHOD_2 ( ) ; if ( ( VAR_1 != null ) && ( ( VAR_2 ) != null ) ) { VAR_1 . METHOD_3 ( this . VAR_2 ) ; } } catch ( java.lang.Exception VAR_3 ) { VAR_4 = false ; VAR_5 = VAR_3 . METHOD_4 ( ) ; VAR_6 = VAR_3 ; } return VAR_7 ; }\n"}
{"problem": "public java.util.Date METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; if ( VAR_1 == null ) return null ; java.util.Calendar c = new TYPE_2 ( ) ; c . METHOD_3 ( ) ; c . METHOD_4 ( VAR_2 ) ; c . set ( VAR_3 , VAR_4 ) ; c . set ( VAR_5 , VAR_6 ) ; c . set ( VAR_7 , VAR_8 ) ; if ( c == null ) return null ; return c . getTime ( ) ; }\n", "fixed": "public java.util.Date METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; if ( VAR_1 == null ) return null ; java.util.Calendar c = new TYPE_2 ( ) ; c . METHOD_3 ( ) ; c . METHOD_4 ( VAR_2 ) ; c . set ( VAR_3 , VAR_4 ) ; c . set ( VAR_5 , VAR_6 ) ; c . set ( VAR_7 , VAR_8 ) ; return c . getTime ( ) ; }\n"}
{"problem": "public void init ( ) { if ( ( VAR_1 ) == null ) { java.lang.String url = VAR_2 ; if ( url . startsWith ( VAR_3 ) ) { METHOD_1 ( new TYPE_1 ( url ) ) ; } else { TYPE_2 VAR_4 = new TYPE_2 ( url ) ; VAR_4 . METHOD_2 ( ) ; METHOD_1 ( new TYPE_3 ( VAR_4 , VAR_5 ) ) ; } } }\n", "fixed": "public void init ( ) { if ( ( ( VAR_1 ) == null ) && ( ( VAR_2 ) != null ) ) { java.lang.String url = VAR_2 ; if ( url . startsWith ( VAR_3 ) ) { METHOD_1 ( new TYPE_1 ( url ) ) ; } else { TYPE_2 VAR_4 = new TYPE_2 ( url ) ; VAR_4 . METHOD_2 ( ) ; METHOD_1 ( new TYPE_3 ( VAR_4 , VAR_5 ) ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 , INT_2 ) ; VAR_2 . METHOD_2 ( ( - INT_1 ) , ( - INT_2 ) ) ; VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_4 ( ) ) ) ; TYPE_1 . assertEquals ( FLOAT_1 , VAR_1 . METHOD_6 ( ) , FLOAT_2 ) ; TYPE_1 . assertEquals ( ( - FLOAT_3 ) , VAR_1 . METHOD_7 ( ) , FLOAT_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( INT_1 , INT_2 ) ; VAR_2 . METHOD_2 ( ( - INT_1 ) , ( - INT_2 ) ) ; VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_4 ( ) ) ) ; assertEquals ( FLOAT_1 , VAR_1 . METHOD_6 ( ) , FLOAT_2 ) ; assertEquals ( ( - FLOAT_3 ) , VAR_1 . METHOD_7 ( ) , FLOAT_2 ) ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( ) { final java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( VAR_2 ) ; if ( VAR_1 . isEmpty ( ) ) { throw new TYPE_1 ( STRING_1 ) ; } final int VAR_3 = ( VAR_4 . METHOD_2 ( ) ) % ( VAR_1 . size ( ) ) ; return VAR_1 . get ( VAR_3 ) ; }\n", "fixed": "private java.lang.String METHOD_1 ( ) { final java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( VAR_2 ) ; if ( VAR_1 . isEmpty ( ) ) { throw new TYPE_1 ( STRING_1 ) ; } final int VAR_3 = VAR_4 . METHOD_2 ( VAR_1 . size ( ) ) ; return VAR_1 . get ( VAR_3 ) ; }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { java.lang.String [ ] VAR_1 = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , \"0\" , STRING_4 , STRING_5 , STRING_6 } ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 c = new TYPE_2 ( VAR_2 ) ; try { c . METHOD_1 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { java.lang.System.err.println ( VAR_3 . METHOD_2 ( ) ) ; c . METHOD_3 ( ) ; } }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 c = new TYPE_2 ( VAR_2 ) ; try { c . METHOD_1 ( args ) ; } catch ( java.lang.Exception VAR_3 ) { java.lang.System.err.println ( VAR_3 . METHOD_2 ( ) ) ; c . METHOD_3 ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = getIntent ( ) . METHOD_3 ( STRING_1 , false ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_4 ( this ) ; if ( ( VAR_4 . getBoolean ( STRING_2 , false ) ) && ( ! ( VAR_3 ) ) ) { android.content.Intent i = new android.content.Intent ( this , VAR_5 class ) ; METHOD_5 ( i ) ; METHOD_6 ( ) ; return ; } METHOD_7 ( VAR_6 ) ; init ( ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_3 = getIntent ( ) . METHOD_3 ( STRING_1 , false ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_4 ( this ) ; if ( ( VAR_4 . getBoolean ( STRING_2 , false ) ) && ( ! ( VAR_3 ) ) ) { android.content.Intent i = new android.content.Intent ( this , VAR_5 class ) ; METHOD_5 ( i ) ; METHOD_6 ( ) ; return ; } METHOD_7 ( VAR_6 ) ; init ( ) ; }\n"}
{"problem": "public int METHOD_1 ( int position ) { if ( ( this . VAR_1 ) != null ) { if ( position < ( this . VAR_1 . length ) ) { return this . VAR_1 [ position ] ; } else { return this . VAR_1 [ ( ( this . VAR_1 . length ) - 1 ) ] ; } } else { if ( position < ( this . name . length ( ) ) ) { return position ; } else { return this . name . length ( ) ; } } }\n", "fixed": "public int METHOD_1 ( int position ) { if ( ( this . VAR_1 ) != null ) { if ( position < ( this . VAR_1 . length ) ) { return this . VAR_1 [ position ] ; } else { return this . name . length ( ) ; } } else { if ( position < ( this . name . length ( ) ) ) { return position ; } else { return this . name . length ( ) ; } } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { listener . METHOD_2 ( VAR_1 . end , METHOD_3 ( ) ) ; VAR_2 = false ; int VAR_3 = VAR_4 . METHOD_4 ( VAR_5 , VAR_1 . end , VAR_6 , true , false , true ) ; VAR_7 . info ( STRING_1 , VAR_3 ) ; if ( VAR_3 > 0 ) { while ( ! ( VAR_2 ) ) { VAR_8 . METHOD_5 ( ) ; } } VAR_7 . info ( STRING_2 , VAR_9 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { listener . METHOD_2 ( VAR_1 . end , METHOD_3 ( ) ) ; VAR_2 = false ; int VAR_3 = VAR_4 . METHOD_4 ( VAR_5 , VAR_1 . end , VAR_6 , true , false , false ) ; VAR_7 . info ( STRING_1 , VAR_3 ) ; if ( VAR_3 > 0 ) { while ( ! ( VAR_2 ) ) { VAR_8 . METHOD_5 ( ) ; } } VAR_7 . info ( STRING_2 , VAR_9 ) ; }\n"}
{"problem": "protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 results ) { if ( ( results . count ) == 0 ) { METHOD_2 ( ) ; } else { VAR_2 . data = ( ( java.util.List < TYPE_2 > ) ( results . values ) ) ; METHOD_3 ( ) ; } }\n", "fixed": "protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 results ) { if ( ( results . count ) == 0 ) { VAR_2 . data = ( ( java.util.List < TYPE_2 > ) ( results . values ) ) ; METHOD_2 ( ) ; } else { VAR_2 . data = ( ( java.util.List < TYPE_2 > ) ( results . values ) ) ; METHOD_3 ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( 0 , INT_1 , INT_2 , 1 ) ; VAR_2 = new TYPE_3 ( ( - INT_3 ) , INT_4 , 0 , INT_4 ) ; add ( VAR_3 , VAR_1 ) ; METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 = true ; }\n", "fixed": "private void METHOD_1 ( ) { if ( VAR_5 ) { return ; } TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( 0 , INT_1 , INT_2 , 1 ) ; VAR_2 = new TYPE_3 ( ( - INT_3 ) , INT_4 , 0 , INT_4 ) ; add ( VAR_3 , VAR_1 ) ; METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 = true ; }\n"}
{"problem": "public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , java.io.IOException { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_4 ( VAR_5 ) ; java.util.Scanner VAR_6 = new java.util.Scanner ( VAR_7 ) ; if ( VAR_6 . METHOD_5 ( ) ) VAR_1 . METHOD_6 ( VAR_5 , VAR_6 . METHOD_7 ( ) ) ; }\n", "fixed": "public static void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , java.io.IOException { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_4 ( VAR_5 ) ; java.util.Scanner VAR_6 = new java.util.Scanner ( VAR_7 ) ; if ( VAR_6 . METHOD_5 ( ) ) VAR_1 . METHOD_6 ( VAR_5 , VAR_6 . METHOD_7 ( ) ) ; else VAR_1 . METHOD_6 ( VAR_5 , VAR_6 . METHOD_7 ( ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_2 VAR_4 , TYPE_3 VAR_5 , TYPE_4 response ) throws TYPE_5 , TYPE_6 { TYPE_7 data = new TYPE_7 ( VAR_1 , VAR_2 , VAR_3 , null , 0 , null , VAR_4 , VAR_5 ) ; java.lang.Object out = METHOD_2 ( VAR_6 , data , response ) ; if ( out instanceof TYPE_1 ) { return ( ( TYPE_1 ) ( out ) ) ; } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_2 VAR_4 , TYPE_3 VAR_5 , TYPE_4 response ) throws TYPE_5 , TYPE_6 { TYPE_7 data = new TYPE_7 ( VAR_1 , VAR_2 , VAR_3 , null , null , null , VAR_4 , VAR_5 ) ; java.lang.Object out = METHOD_2 ( VAR_6 , data , response ) ; if ( out instanceof TYPE_1 ) { return ( ( TYPE_1 ) ( out ) ) ; } return null ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; int VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; try { java.util.Set < TYPE_3 > VAR_3 = VAR_1 . METHOD_3 ( VAR_2 , INT_1 , INT_2 ) ; } catch ( TYPE_4 VAR_4 ) { TYPE_5 . assertEquals ( VAR_4 . METHOD_4 ( ) , STRING_3 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; int VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; try { VAR_1 . METHOD_3 ( VAR_2 , INT_1 , INT_2 ) ; } catch ( TYPE_4 VAR_4 ) { TYPE_5 . assertEquals ( VAR_4 . METHOD_4 ( ) , STRING_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String text = VAR_2 . getText ( ) . toString ( ) ; if ( ! ( text . isEmpty ( ) ) ) { VAR_3 . METHOD_2 ( text ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . setValue ( VAR_3 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String text = VAR_2 . getText ( ) . toString ( ) ; if ( ! ( text . isEmpty ( ) ) ) { VAR_3 . METHOD_2 ( text ) ; TYPE_1 . METHOD_3 ( name ) . METHOD_4 ( ) . setValue ( VAR_3 ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { try { VAR_1 = VAR_1 . toLowerCase ( ) ; java.util.List < ? > VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) == 0 ) return false ; java.lang.Object VAR_3 = VAR_2 . get ( 0 ) ; return java.lang.Boolean . METHOD_3 ( VAR_3 . toString ( ) ) ; } catch ( TYPE_1 VAR_4 ) { return false ; } }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { try { java.util.List < ? > VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) == 0 ) return false ; java.lang.Object VAR_3 = VAR_2 . get ( 0 ) ; return java.lang.Boolean . METHOD_3 ( VAR_3 . toString ( ) ) ; } catch ( TYPE_1 VAR_4 ) { return false ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { setState ( VAR_1 ) ; try { if ( METHOD_2 ( ) ) { METHOD_3 ( VAR_2 , null ) ; setState ( VAR_3 ) ; } } catch ( TYPE_1 VAR_4 ) { setState ( VAR_5 ) ; throw VAR_4 ; } }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { setState ( VAR_1 ) ; try { if ( METHOD_2 ( ) ) { METHOD_3 ( VAR_2 , null ) ; } setState ( VAR_3 ) ; } catch ( TYPE_1 VAR_4 ) { setState ( VAR_5 ) ; throw VAR_4 ; } }\n"}
{"problem": "public java.lang.Double METHOD_1 ( java.util.List < java.lang.Double > VAR_1 , java.lang.Double x ) { java.lang.Double result = 0.0 ; int size = VAR_1 . size ( ) ; for ( java.lang.Double VAR_2 : VAR_1 ) { if ( ( -- size ) == 0 ) { result += VAR_2 ; } else { result += VAR_2 * x ; } } return result ; }\n", "fixed": "public java.lang.Double METHOD_1 ( java.util.List < java.lang.Double > VAR_1 , java.lang.Double x ) { java.lang.Double result = 0.0 ; int size = VAR_1 . size ( ) ; for ( java.lang.Double VAR_2 : VAR_1 ) { if ( ( -- size ) == 0 ) { result += VAR_2 ; } else { result += VAR_2 * ( java.lang.Math.pow ( x , size ) ) ; } } return result ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 query = VAR_4 . METHOD_2 ( STRING_1 ) ; query . METHOD_3 ( 1 , VAR_1 ) ; query . METHOD_3 ( 1 , VAR_2 ) ; TYPE_2 VAR_5 = VAR_4 . METHOD_2 ( ( STRING_2 + STRING_3 ) ) ; VAR_5 . METHOD_3 ( 1 , VAR_3 ) ; VAR_5 . METHOD_3 ( INT_1 , VAR_2 ) ; query . METHOD_4 ( ) ; VAR_5 . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 query = VAR_4 . METHOD_2 ( STRING_1 ) ; query . METHOD_3 ( 1 , VAR_1 ) ; query . METHOD_3 ( INT_1 , VAR_2 ) ; TYPE_2 VAR_5 = VAR_4 . METHOD_2 ( ( STRING_2 + STRING_3 ) ) ; VAR_5 . METHOD_3 ( 1 , VAR_3 ) ; VAR_5 . METHOD_3 ( INT_1 , VAR_2 ) ; query . METHOD_4 ( ) ; VAR_5 . METHOD_4 ( ) ; }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.HashMap < TYPE_2 , TYPE_2 > VAR_1 , TYPE_2 start , TYPE_2 VAR_2 ) { java.util.LinkedList < TYPE_1 > path = new java.util.LinkedList < TYPE_1 > ( ) ; TYPE_2 VAR_3 = VAR_2 ; while ( ! ( VAR_3 . equals ( start ) ) ) { path . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_3 = VAR_1 . get ( VAR_3 ) ; } return path ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.HashMap < TYPE_2 , TYPE_2 > VAR_1 , TYPE_2 start , TYPE_2 VAR_2 ) { java.util.LinkedList < TYPE_1 > path = new java.util.LinkedList < TYPE_1 > ( ) ; TYPE_2 VAR_3 = VAR_2 ; while ( ! ( VAR_3 . equals ( start ) ) ) { path . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_3 = VAR_1 . get ( VAR_3 ) ; } path . METHOD_2 ( start . METHOD_3 ( ) ) ; return path ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 key , TYPE_2 VAR_1 ) { if ( null != VAR_1 ) { VAR_2 = true ; if ( ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . METHOD_3 ( ) ) ) { VAR_3 . METHOD_4 ( VAR_1 . handle , VAR_4 ) ; VAR_3 . METHOD_5 ( false ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 key , TYPE_2 VAR_1 ) { if ( null != VAR_1 ) { VAR_2 = true ; if ( ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . METHOD_3 ( ) ) ) { VAR_3 . METHOD_4 ( VAR_1 . handle , VAR_4 ) ; } } }\n"}
{"problem": "TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_4 ( ) . METHOD_2 ( TYPE_5 . METHOD_3 ( VAR_1 ) ) . METHOD_4 ( TYPE_6 . METHOD_5 ( TYPE_7 . METHOD_6 ( ) ) ) . METHOD_7 ( VAR_4 ) . METHOD_8 ( VAR_2 ) . build ( ) ; return VAR_3 ; }\n", "fixed": "TYPE_1 METHOD_1 ( TYPE_3 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_4 ( ) . METHOD_2 ( TYPE_5 . METHOD_3 ( ) ) . METHOD_4 ( TYPE_6 . METHOD_5 ( TYPE_7 . METHOD_6 ( ) ) ) . METHOD_7 ( VAR_4 ) . METHOD_8 ( VAR_2 ) . build ( ) ; return VAR_3 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = this . VAR_2 ; VAR_1 += STRING_1 ; for ( int i = 0 ; i < ( VAR_3 . length ) ; ++ i ) { VAR_1 += VAR_3 [ i ] . toString ( ) ; if ( i != ( ( VAR_3 . length ) - 1 ) ) { VAR_1 += STRING_2 ; } else { VAR_1 += STRING_3 ; } } return VAR_1 ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = this . VAR_2 ; VAR_1 += STRING_1 ; for ( int i = 0 ; i < ( VAR_3 . length ) ; ++ i ) { VAR_1 += VAR_3 [ i ] . toString ( ) ; if ( i != ( ( VAR_3 . length ) - 1 ) ) { VAR_1 += STRING_2 ; } } VAR_1 += STRING_3 ; return VAR_1 ; }\n"}
{"problem": "public void handle ( TYPE_1 view , TYPE_2 VAR_1 ) throws TYPE_3 { view . METHOD_1 ( STRING_1 , VAR_1 . getName ( ) , this . VAR_2 ) ; this . position = ( VAR_1 . METHOD_2 ( ) ) + ( this . VAR_2 ) ; if ( ( this . position ) < 1 ) { this . position = INT_1 + ( this . position ) ; } view . METHOD_3 ( VAR_1 , this . position ) ; VAR_1 . METHOD_3 ( this . position ) ; }\n", "fixed": "public void handle ( TYPE_1 view , TYPE_2 VAR_1 ) throws TYPE_3 { view . METHOD_1 ( STRING_1 , VAR_1 . getName ( ) , this . VAR_2 ) ; this . position = ( VAR_1 . METHOD_2 ( ) ) + ( this . VAR_2 ) ; if ( ( this . position ) < 0 ) { this . position = INT_1 + ( this . position ) ; } view . METHOD_3 ( VAR_1 , this . position ) ; VAR_1 . METHOD_3 ( this . position ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; VAR_5 = ( ( TYPE_2 ) ( VAR_1 . METHOD_4 ( VAR_6 ) ) ) ; } else { VAR_3 = VAR_2 . METHOD_5 ( ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_6 ( ) . METHOD_4 ( VAR_6 ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( this ) ; super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 != null ) { VAR_3 = VAR_1 . METHOD_3 ( VAR_4 ) ; } else { VAR_3 = VAR_2 . METHOD_5 ( ) ; } VAR_5 = ( ( TYPE_2 ) ( METHOD_6 ( ) . METHOD_4 ( VAR_6 ) ) ) ; }\n"}
{"problem": "private void METHOD_1 ( boolean [ ] b , int offset ) { int n = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( b [ ( offset + i ) ] ) { n |= 1 < < ( INT_2 - i ) ; } } METHOD_2 ( n ) ; }\n", "fixed": "private void METHOD_1 ( boolean [ ] b , int offset ) { int n = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( b [ ( offset + i ) ] ) { n |= 1 < < i ; } } METHOD_2 ( n ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 view , java.lang.String url ) { super . METHOD_1 ( view , url ) ; if ( view != null ) { TYPE_2 . METHOD_2 ( VAR_1 , view . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( ) . METHOD_5 ( view . METHOD_6 ( ) , ( ( view . METHOD_3 ( ) ) + STRING_1 ) , view . METHOD_7 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 view , java.lang.String url ) { super . METHOD_1 ( view , url ) ; if ( view != null ) { TYPE_2 . METHOD_2 ( VAR_1 , view . METHOD_6 ( ) ) ; TYPE_3 . METHOD_4 ( ) . METHOD_5 ( view . METHOD_6 ( ) , ( ( view . METHOD_3 ( ) ) + STRING_1 ) , view . METHOD_3 ( ) ) ; } }\n"}
{"problem": "public static java.lang.String METHOD_1 ( TYPE_1 t ) { TYPE_2 VAR_1 ; if ( t != null ) { if ( ( t . METHOD_2 ( ) ) == 0 ) { VAR_1 = TYPE_2 . METHOD_3 ( STRING_1 ) . METHOD_4 ( VAR_2 ) ; } else { VAR_1 = TYPE_2 . METHOD_3 ( STRING_2 ) . METHOD_4 ( VAR_2 ) ; } return t . format ( VAR_1 ) ; } else { return null ; } }\n", "fixed": "public static java.lang.String METHOD_1 ( TYPE_1 t ) { TYPE_2 VAR_1 ; if ( ( t . METHOD_2 ( ) ) == 0 ) { VAR_1 = TYPE_2 . METHOD_3 ( STRING_1 ) . METHOD_4 ( VAR_2 ) ; } else { VAR_1 = TYPE_2 . METHOD_3 ( STRING_2 ) . METHOD_4 ( VAR_2 ) ; } return t . format ( VAR_1 ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; if ( ! ( TYPE_3 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( TYPE_4 . METHOD_1 ( ) ) ; VAR_1 . METHOD_3 ( TYPE_5 . METHOD_1 ( ) ) ; } return new TYPE_6 ( VAR_1 ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; if ( TYPE_3 . METHOD_2 ( ) ) return VAR_1 ; VAR_1 . METHOD_3 ( TYPE_4 . METHOD_1 ( ) ) ; VAR_1 . METHOD_3 ( TYPE_5 . METHOD_1 ( ) ) ; return new TYPE_6 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String text = VAR_2 . getText ( ) . toString ( ) ; if ( ! ( text . equals ( STRING_1 ) ) ) { VAR_3 . open ( ) ; VAR_3 . METHOD_2 ( VAR_2 . getText ( ) . toString ( ) , new java.util.Date ( ) . getTime ( ) ) ; VAR_3 . METHOD_3 ( ) ; } METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.String text = VAR_2 . getText ( ) . toString ( ) ; if ( ! ( text . equals ( STRING_1 ) ) ) { VAR_3 . METHOD_2 ( VAR_2 . getText ( ) . toString ( ) , new java.util.Date ( ) . getTime ( ) ) ; } METHOD_4 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( java.util.ArrayList data ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( data . size ( ) ) ) ) ; for ( int i = 0 ; i < ( data . size ( ) ) ; i ++ ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_3 + ( data . toString ( ) ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.util.ArrayList data ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + ( data . size ( ) ) ) ) ; for ( int i = 0 ; i < ( data . size ( ) ) ; i ++ ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_3 + ( data . get ( i ) . toString ( ) ) ) ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.StringBuilder VAR_2 , java.util.Set < ? extends TYPE_2 > list ) { for ( final TYPE_2 element : list ) { final TYPE_3 p = element . METHOD_2 ( VAR_3 class ) ; VAR_2 . append ( STRING_1 ) . append ( METHOD_3 ( element ) ) . append ( STRING_2 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( element ) ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.StringBuilder VAR_2 , java.util.Set < ? extends TYPE_2 > list ) { for ( final TYPE_2 element : list ) { VAR_2 . append ( STRING_1 ) . append ( METHOD_3 ( element ) ) . append ( STRING_2 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( element ) ) ; } }\n"}
{"problem": "public boolean equals ( TYPE_1 VAR_1 ) { return ( ( ( VAR_1 != null ) && ( ( VAR_1 . x ) == ( x ) ) ) && ( ( VAR_1 . x ) == ( y ) ) ) && ( ( VAR_2 ) == ( VAR_3 ) ) ; }\n", "fixed": "public boolean equals ( TYPE_1 VAR_1 ) { return ( ( ( VAR_1 != null ) && ( ( VAR_1 . x ) == ( x ) ) ) && ( ( VAR_1 . y ) == ( y ) ) ) && ( ( VAR_2 ) == ( VAR_3 ) ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 p = new TYPE_1 ( 0 , 0 , 0 , 0 , 0 , STRING_1 ) ; p . x = VAR_1 . METHOD_2 ( ) ; p . y = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = INT_1 ; VAR_4 = VAR_1 . METHOD_2 ( ) ; VAR_5 = STRING_2 + ( VAR_1 . METHOD_3 ( ) ) ; return p ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 p = new TYPE_1 ( 0 , 0 , 0 , 0 , 0 , STRING_1 ) ; p . x = VAR_1 . METHOD_2 ( ) ; p . y = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_1 . METHOD_2 ( ) ; VAR_5 = STRING_2 + ( VAR_1 . METHOD_3 ( ) ) ; return p ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( VAR_3 , VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; VAR_3 = ( VAR_3 ) + 1 ; if ( ( VAR_2 . size ( ) ) != ( VAR_3 ) ) { METHOD_3 ( VAR_3 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . set ( VAR_3 , VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; VAR_3 = ( VAR_3 ) + 1 ; if ( ( VAR_2 . size ( ) ) != ( VAR_3 ) ) { METHOD_3 ( ) ; } }\n"}
{"problem": "private static java.lang.String METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; for ( java.lang.String query : VAR_1 ) { VAR_2 . append ( ( ( query . trim ( ) ) + STRING_1 ) ) ; } return VAR_2 . toString ( ) ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; for ( java.lang.String query : VAR_1 ) { VAR_2 . append ( query . trim ( ) ) . append ( STRING_1 ) ; } return VAR_2 . toString ( ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; switch ( view . getId ( ) ) { case VAR_2 : break ; case VAR_3 : if ( ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) ) > 0 ) { METHOD_5 ( new android.content.Intent ( getActivity ( ) , VAR_5 class ) ) ; } else { METHOD_6 ( ) ; } break ; case VAR_6 : break ; } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; switch ( view . getId ( ) ) { case VAR_2 : break ; case VAR_3 : if ( ( ( VAR_4 ) != null ) && ( ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) ) > 0 ) ) { METHOD_5 ( new android.content.Intent ( getActivity ( ) , VAR_5 class ) ) ; } else { METHOD_6 ( ) ; } break ; case VAR_6 : break ; } }\n"}
{"problem": "public void METHOD_1 ( android.content.Context context ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( context , STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_3 ( VAR_2 ) . METHOD_3 ( ) ; if ( TYPE_4 . METHOD_4 ( ) ) { TYPE_4 . METHOD_5 ( context ) ; } if ( ! ( TYPE_4 . METHOD_6 ( context ) ) ) { TYPE_5 . METHOD_7 ( TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_9 ( context ) ) ; } }\n", "fixed": "public void METHOD_1 ( android.content.Context context ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( context , STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 = new TYPE_3 ( VAR_2 ) . METHOD_3 ( ) ; if ( ( TYPE_4 . METHOD_4 ( ) ) && ( ! ( TYPE_4 . METHOD_6 ( context ) ) ) ) { TYPE_4 . METHOD_5 ( context ) ; TYPE_5 . METHOD_7 ( TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_9 ( context ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . setEnabled ( true ) ; } else { VAR_3 . METHOD_3 ( VAR_6 ) ; VAR_5 . setEnabled ( false ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { if ( ( VAR_3 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . setEnabled ( true ) ; } else { VAR_3 . METHOD_3 ( VAR_6 ) ; VAR_5 . setEnabled ( false ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ( ( this . METHOD_4 ( ) ) - ( ( this . METHOD_5 ( ) ) * INT_1 ) ) ) ; VAR_1 . METHOD_6 ( ( VAR_2 ) - > { java.lang.System.out.println ( ( STRING_1 + ( VAR_1 . getValue ( ) . toString ( ) ) ) ) ; METHOD_7 ( VAR_1 . getValue ( ) . toString ( ) ) ; } ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ( ( this . METHOD_4 ( ) ) - ( ( this . METHOD_5 ( ) ) * INT_1 ) ) ) ; VAR_1 . METHOD_6 ( ( VAR_2 ) - > { METHOD_7 ( VAR_1 . getValue ( ) . toString ( ) ) ; } ) ; }\n"}
{"problem": "public static void METHOD_1 ( final long VAR_1 ) { synchronized ( VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_2 ) { if ( VAR_3 != null ) { try { VAR_3 . METHOD_2 ( VAR_1 ) ; } catch ( final TYPE_2 VAR_4 ) { VAR_5 . error ( STRING_1 , VAR_4 ) ; } catch ( final TYPE_3 VAR_4 ) { VAR_5 . error ( STRING_2 , VAR_4 ) ; java.lang.Thread . METHOD_3 ( ) . METHOD_4 ( ) ; } } } TYPE_4 . METHOD_5 ( VAR_2 , null ) ; } }\n", "fixed": "public static void METHOD_1 ( final long VAR_1 ) { synchronized ( VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_2 ) { if ( VAR_3 != null ) { try { VAR_3 . METHOD_2 ( VAR_1 ) ; } catch ( final TYPE_3 VAR_4 ) { VAR_5 . error ( STRING_2 , VAR_4 ) ; java.lang.Thread . METHOD_3 ( ) . METHOD_4 ( ) ; } } } TYPE_4 . METHOD_5 ( VAR_2 , null ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.io.File file , java.io.InputStream VAR_2 ) { try { TYPE_2 . METHOD_2 ( VAR_2 , file . METHOD_3 ( ) ) ; } catch ( java.io.IOException VAR_3 ) { TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( TYPE_5 . METHOD_5 ( VAR_3 ) ) , STRING_1 ) ; if ( VAR_4 ) { VAR_3 . METHOD_6 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( java.io.File file , java.io.InputStream VAR_2 ) { try { TYPE_2 . METHOD_2 ( VAR_2 , file . METHOD_3 ( ) ) ; } catch ( java.io.IOException VAR_3 ) { TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( TYPE_5 . METHOD_5 ( VAR_3 ) ) , STRING_1 ) ; if ( VAR_4 ) { VAR_3 . METHOD_6 ( ) ; } } }\n"}
{"problem": "public < TYPE_1 extends TYPE_2 > TYPE_3 < ? > METHOD_1 ( final java.lang.String VAR_1 , final TYPE_4 < TYPE_1 > VAR_2 ) { final TYPE_3 < ? > VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { return VAR_3 ; } if ( ( VAR_5 ) == null ) { return null ; } final TYPE_5 VAR_6 = VAR_5 . METHOD_2 ( VAR_1 ) ; return VAR_6 . METHOD_3 ( VAR_2 ) ; }\n", "fixed": "public < TYPE_1 extends TYPE_2 > TYPE_3 < ? > METHOD_1 ( final java.lang.String VAR_1 , final TYPE_4 < TYPE_1 > VAR_2 ) { final TYPE_3 < ? > VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { return VAR_3 ; } if ( ( VAR_5 ) == null ) { return null ; } final TYPE_5 VAR_6 = VAR_5 . METHOD_2 ( VAR_1 ) ; if ( VAR_6 == null ) { return null ; } return VAR_6 . METHOD_3 ( VAR_2 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { java.lang.System.out.println ( VAR_2 . METHOD_2 ( ) ) ; switch ( VAR_2 . METHOD_2 ( ) ) { case STRING_1 : METHOD_3 ( VAR_1 , VAR_3 ) ; break ; case STRING_2 : METHOD_4 ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; break ; case STRING_3 : break ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { switch ( VAR_2 . METHOD_2 ( ) ) { case STRING_1 : METHOD_3 ( VAR_1 , VAR_3 ) ; break ; case STRING_2 : METHOD_4 ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ; break ; case STRING_3 : break ; } }\n"}
{"problem": "public synchronized void METHOD_1 ( ) { try { switch ( state . type ) { case VAR_1 : break ; case VAR_2 : case VAR_3 : if ( VAR_4 . METHOD_2 ( ) ) { VAR_4 . METHOD_3 ( STRING_1 , VAR_5 , new TYPE_1 ( STRING_2 ) ) ; } VAR_6 . METHOD_1 ( ) ; break ; case VAR_7 : break ; } } finally { state = new TYPE_2 ( VAR_8 , 0 , null , null , new java.lang.Throwable ( STRING_3 ) ) ; } }\n", "fixed": "public synchronized void METHOD_1 ( ) { try { switch ( state . type ) { case VAR_1 : break ; case VAR_2 : if ( VAR_4 . METHOD_2 ( ) ) { VAR_4 . METHOD_3 ( STRING_1 , VAR_5 , new TYPE_1 ( STRING_2 ) ) ; } VAR_6 . METHOD_1 ( ) ; break ; case VAR_7 : break ; } } finally { state = new TYPE_2 ( VAR_8 , null , null , new java.lang.Throwable ( STRING_3 ) ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String name ) { if ( VAR_1 != ( VAR_3 ) ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_4 , VAR_2 , name ) ) ; } return super . METHOD_1 ( VAR_4 , VAR_2 , name ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String string , int VAR_2 , java.lang.String name ) { if ( string != ( VAR_3 ) ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_4 , VAR_2 , name ) ) ; } return super . METHOD_1 ( VAR_4 , VAR_2 , name ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { for ( int i = 1 ; i < ( ( VAR_1 . size ( ) ) + 1 ) ; i += INT_1 ) { byte [ ] k = VAR_1 . get ( i ) ; byte [ ] VAR_2 = VAR_1 . get ( ( i + 1 ) ) ; keys . add ( k ) ; VAR_3 . put ( k , VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { for ( int i = 1 ; ( i + 1 ) < ( VAR_1 . size ( ) ) ; i += INT_1 ) { byte [ ] k = VAR_1 . get ( i ) ; byte [ ] VAR_2 = VAR_1 . get ( ( i + 1 ) ) ; keys . add ( k ) ; VAR_3 . put ( k , VAR_2 ) ; } }\n"}
{"problem": "public void update ( java.lang.Object data ) { TYPE_1 p = ( ( TYPE_1 ) ( data ) ) ; if ( ( p . type ) == ( VAR_1 ) ) { } else if ( ( p . type ) == ( VAR_2 ) ) { } else if ( ( p . type ) == ( VAR_3 ) ) { if ( ( VAR_4 . size ( ) ) > 0 ) { METHOD_1 ( VAR_4 ) ; } } }\n", "fixed": "public void update ( java.lang.Object data ) { TYPE_1 p = ( ( TYPE_1 ) ( data ) ) ; if ( ( p . type ) == ( VAR_3 ) ) { if ( ( VAR_4 . size ( ) ) > 0 ) { METHOD_1 ( VAR_4 ) ; } } }\n"}
{"problem": "private METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; while ( ( VAR_2 != 1 ) && ( VAR_1 < ( VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ) ) { VAR_3 . set ( VAR_2 , VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ; VAR_2 /= INT_1 ; } VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; while ( ( VAR_2 != 1 ) && ( VAR_1 < ( VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ) ) { VAR_3 . set ( VAR_2 , VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ; VAR_2 /= INT_1 ; } VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 . height ) ; VAR_4 . METHOD_2 ( INT_1 ) ; VAR_5 = VAR_2 ; if ( ( VAR_6 ) != null ) { VAR_7 . add ( VAR_8 ) ; VAR_9 = VAR_4 . METHOD_3 ( ) ; } java.lang.System.out.println ( STRING_1 ) ; return VAR_10 ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == ( VAR_6 ) ) { VAR_2 = new TYPE_2 ( VAR_3 , VAR_4 . height ) ; VAR_4 . METHOD_2 ( INT_1 ) ; VAR_5 = VAR_2 ; if ( ( VAR_6 ) != null ) { VAR_7 . add ( VAR_8 ) ; VAR_9 = VAR_4 . METHOD_3 ( ) ; } java.lang.System.out.println ( STRING_1 ) ; } return VAR_10 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_3 . METHOD_2 ( VAR_4 . getId ( ) ) ; if ( VAR_2 ) { TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_3 ( null , STRING_1 , STRING_2 , VAR_6 ) ; } else { TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_3 ( null , STRING_3 , STRING_2 , VAR_7 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_3 . METHOD_2 ( VAR_4 . getId ( ) ) ; if ( VAR_2 ) { TYPE_2 VAR_5 = new TYPE_2 ( ) ; TYPE_2 . METHOD_3 ( null , STRING_1 , STRING_2 , VAR_6 ) ; } else { TYPE_2 VAR_5 = new TYPE_2 ( ) ; TYPE_2 . METHOD_3 ( null , STRING_3 , STRING_2 , VAR_7 ) ; } }\n"}
{"problem": "private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = VAR_1 ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 , this . VAR_5 ) ; if ( VAR_3 != null ) { TYPE_2 VAR_6 = new TYPE_2 ( VAR_3 ) ; VAR_7 . put ( VAR_2 , VAR_6 ) ; } return STRING_1 ; }\n", "fixed": "private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , this . VAR_5 ) ; if ( VAR_3 != null ) { TYPE_2 VAR_6 = new TYPE_2 ( VAR_3 ) ; VAR_7 . put ( VAR_1 , VAR_6 ) ; } return STRING_1 ; }\n"}
{"problem": "public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + intent ) ) ; if ( TYPE_2 . equals ( intent . METHOD_3 ( ) ) ) { int VAR_2 = TYPE_3 . METHOD_4 ( context ) . METHOD_5 ( ) ; if ( VAR_2 < ( VAR_3 ) ) { METHOD_6 ( ) ; } } else if ( TYPE_4 . equals ( intent . METHOD_3 ( ) ) ) { METHOD_7 ( ) ; } }\n", "fixed": "public void METHOD_1 ( android.content.Context context , android.content.Intent intent ) { TYPE_1 . METHOD_2 ( VAR_1 , ( STRING_1 + intent ) ) ; if ( TYPE_2 . equals ( intent . METHOD_3 ( ) ) ) { int VAR_2 = TYPE_3 . METHOD_4 ( context ) . METHOD_5 ( ) ; if ( VAR_2 < ( VAR_3 ) ) { METHOD_6 ( context ) ; } } else if ( TYPE_4 . equals ( intent . METHOD_3 ( ) ) ) { METHOD_7 ( context ) ; } }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( VAR_1 instanceof TYPE_2 ) ? ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) : 0 ; int VAR_4 = ( VAR_2 instanceof TYPE_2 ) ? ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( ) : 0 ; return java.lang.Integer . METHOD_1 ( VAR_3 , VAR_4 ) ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int x = ( VAR_1 instanceof TYPE_2 ) ? ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) : 0 ; int y = ( VAR_2 instanceof TYPE_2 ) ? ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( ) : 0 ; return x < y ? - 1 : x == y ? 0 : 1 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) { VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( METHOD_5 ( ) . METHOD_6 ( VAR_6 ) ) ; } else { VAR_2 . METHOD_3 ( VAR_7 ) ; VAR_5 . METHOD_4 ( METHOD_5 ( ) . METHOD_6 ( VAR_8 ) ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) { VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( context . METHOD_5 ( ) . METHOD_6 ( VAR_6 ) ) ; } else { VAR_2 . METHOD_3 ( VAR_7 ) ; VAR_5 . METHOD_4 ( context . METHOD_5 ( ) . METHOD_6 ( VAR_8 ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = ( VAR_1 ) + 1 ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_2 ) . show ( ) ; if ( ( VAR_1 ) > 1 ) { VAR_3 . METHOD_4 ( ) ; this . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = ( VAR_1 ) + 1 ; if ( ( ( VAR_1 ) < 1 ) || ( ( VAR_1 ) == 1 ) ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , STRING_1 , VAR_2 ) . show ( ) ; } if ( ( VAR_1 ) > 1 ) { VAR_3 . METHOD_4 ( ) ; this . METHOD_5 ( ) ; } }\n"}
{"problem": "public static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , double VAR_3 ) { TYPE_2 [ ] buf = new TYPE_2 [ INT_1 ] ; int num = VAR_4 . METHOD_2 ( buf , ( ( long ) ( buf . length ) ) , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 [ ] VAR_5 = new TYPE_1 [ num ] ; for ( int k = 0 ; k < num ; k ++ ) VAR_5 [ k ] = new TYPE_1 ( buf [ k ] ) ; return VAR_5 ; }\n", "fixed": "public static TYPE_1 [ ] METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , double VAR_3 ) { TYPE_2 [ ] buf = new TYPE_2 [ INT_1 ] ; int num = VAR_4 . METHOD_2 ( buf , buf . length , VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 [ ] VAR_5 = new TYPE_1 [ num ] ; for ( int k = 0 ; k < num ; k ++ ) VAR_5 [ k ] = new TYPE_1 ( buf [ k ] ) ; return VAR_5 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = new int [ length ] [ length ] ; for ( int i = 0 ; i < ( length ) ; i ++ ) for ( int j = 0 ; j < ( length ) ; j ++ ) VAR_1 [ i ] [ j ] = METHOD_2 ( i , j ) ; return ; }\n", "fixed": "public void METHOD_1 ( ) { for ( int i = 0 ; i < ( length ) ; i ++ ) for ( int j = 0 ; j < ( length ) ; j ++ ) VAR_1 [ i ] [ j ] = METHOD_2 ( i , j ) ; return ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_3 { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { VAR_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; } if ( ( VAR_1 . METHOD_4 ( ) ) != null ) { VAR_2 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; } if ( ( VAR_1 . METHOD_6 ( ) ) != null ) { VAR_2 . METHOD_7 ( VAR_1 . METHOD_6 ( ) ) ; } return VAR_2 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_3 { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { VAR_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; } if ( ( VAR_1 . METHOD_4 ( ) ) != null ) { VAR_2 . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; } if ( ( VAR_1 . METHOD_6 ( ) ) != null ) { VAR_2 . METHOD_7 ( VAR_1 . METHOD_6 ( ) ) ; } return VAR_2 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( new java.util.ArrayList < java.lang.String > ( ) ) ; if ( ( ! ( TYPE_2 . isEmpty ( VAR_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ) ) && ( TYPE_2 . isEmpty ( VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) ) ) { METHOD_6 ( VAR_1 . METHOD_2 ( ) , STRING_1 ) ; } return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( new java.util.ArrayList < java.lang.String > ( ) ) ; if ( ( ! ( TYPE_2 . isEmpty ( VAR_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ) ) && ( TYPE_2 . isEmpty ( VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) ) ) { METHOD_6 ( VAR_1 . METHOD_2 ( ) , STRING_1 ) ; } } return VAR_1 ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 query , float VAR_1 , java.util.Map < java.lang.String , TYPE_2 > VAR_2 ) throws java.io.IOException { if ( query instanceof TYPE_3 ) { return ; } else if ( query instanceof TYPE_4 ) { return ; } else if ( query instanceof TYPE_5 ) { super . METHOD_1 ( ( ( TYPE_5 ) ( query ) ) . METHOD_2 ( ) , VAR_1 , VAR_2 ) ; } else { super . METHOD_1 ( query , VAR_1 , VAR_2 ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 query , float VAR_1 , java.util.Map < java.lang.String , TYPE_2 > VAR_2 ) throws java.io.IOException { if ( query instanceof TYPE_4 ) { return ; } else if ( query instanceof TYPE_5 ) { super . METHOD_1 ( ( ( TYPE_5 ) ( query ) ) . METHOD_2 ( ) , VAR_1 , VAR_2 ) ; } else { super . METHOD_1 ( query , VAR_1 , VAR_2 ) ; } }\n"}
{"problem": "private java.util.List < java.lang.String > METHOD_1 ( final java.util.List < ? extends TYPE_1 > VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < > ( VAR_1 . size ( ) ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_2 . add ( VAR_3 . getId ( ) ) ; } return VAR_2 ; }\n", "fixed": "private java.util.List < java.lang.String > METHOD_1 ( final java.util.List < ? extends TYPE_1 > VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( VAR_1 . size ( ) ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_2 . add ( VAR_3 . getId ( ) ) ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ! ( TYPE_2 . isEmpty ( VAR_1 ) ) ) { TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 ) ; } TYPE_3 . METHOD_3 ( VAR_4 , VAR_5 ) ; TYPE_3 . METHOD_3 ( VAR_6 , VAR_7 ) ; TYPE_3 . METHOD_3 ( VAR_8 , VAR_9 ) ; TYPE_3 . METHOD_3 ( VAR_10 , VAR_11 ) ; TYPE_1 . METHOD_4 ( VAR_12 ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ! ( TYPE_2 . isEmpty ( VAR_1 ) ) ) { TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 ) ; } TYPE_3 . METHOD_3 ( VAR_4 , VAR_5 ) ; TYPE_3 . METHOD_3 ( VAR_6 , VAR_7 ) ; TYPE_3 . METHOD_3 ( VAR_8 , VAR_9 ) ; TYPE_3 . METHOD_3 ( VAR_10 , VAR_11 ) ; TYPE_1 . METHOD_4 ( VAR_2 ) ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String str , int VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { if ( METHOD_2 ( str ) ) return STRING_1 ; int length = str . length ( ) ; if ( length <= VAR_1 ) { return str ; } else if ( length <= VAR_2 ) { return str . substring ( VAR_1 , length ) ; } else { return ( str . substring ( VAR_1 , VAR_2 ) ) + VAR_3 ; } }\n", "fixed": "public static java.lang.String METHOD_1 ( java.lang.String str , int VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { if ( METHOD_2 ( str ) ) return STRING_1 ; int length = str . length ( ) ; if ( length <= VAR_1 ) { return str ; } else if ( length <= VAR_2 ) { return str . substring ( VAR_1 , length ) ; } else { if ( VAR_3 == null ) { VAR_3 = STRING_1 ; } return ( str . substring ( VAR_1 , VAR_2 ) ) + VAR_3 ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { synchronized ( status ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( VAR_2 . getName ( ) , getName ( ) ) ; } VAR_3 . METHOD_1 ( ) ; VAR_3 . METHOD_4 ( ) ; status = VAR_4 ; } }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { synchronized ( status ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( VAR_2 . getName ( ) , getName ( ) ) ; } VAR_3 . METHOD_4 ( ) ; VAR_3 . METHOD_1 ( ) ; status = VAR_4 ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , ( ( ( ( ( ( item + STRING_2 ) + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_1 . METHOD_4 ( ) ) ) + STRING_2 ) + ( VAR_2 . get ( item ) ) ) ) ; VAR_1 . METHOD_5 ( VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , ( ( ( ( ( ( item + STRING_2 ) + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_1 . METHOD_4 ( ) ) ) + STRING_2 ) + ( VAR_2 . get ( item ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( boolean show ) { if ( ! show ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 = ( VAR_4 ) != 0 ; VAR_5 = true ; } else { VAR_1 . show ( ) ; if ( VAR_3 ) VAR_2 . show ( ) ; VAR_5 = false ; } }\n", "fixed": "public void METHOD_1 ( boolean show ) { if ( ! show ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_5 = true ; } else { VAR_1 . show ( ) ; if ( VAR_3 ) VAR_2 . show ( ) ; VAR_5 = false ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( true ) ; } context = this ; VAR_2 = new TYPE_2 ( this ) ; VAR_3 = VAR_2 . METHOD_5 ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { context = this ; TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( true ) ; } VAR_2 = new TYPE_2 ( this ) ; VAR_3 = VAR_2 . METHOD_5 ( ) ; }\n"}
{"problem": "public synchronized java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = STRING_1 + ( ( ( VAR_1 . METHOD_2 ( ) ) == null ) || ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ? STRING_2 : VAR_1 . METHOD_2 ( ) . get ( 0 ) . METHOD_3 ( ) ) ; java.lang.Long VAR_3 = METHOD_4 ( VAR_2 ) ; if ( VAR_3 == null ) { VAR_4 . METHOD_5 ( VAR_2 , 0L ) ; } return VAR_2 + ( java.lang.String.format ( STRING_3 , VAR_3 ) ) ; }\n", "fixed": "public synchronized java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = STRING_1 + ( ( ( VAR_1 . METHOD_2 ( ) ) == null ) || ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ? STRING_2 : VAR_1 . METHOD_2 ( ) . get ( 0 ) . METHOD_3 ( ) ) ; java.lang.Long VAR_3 = METHOD_4 ( VAR_2 ) ; if ( VAR_3 == null ) { VAR_3 = 0L ; VAR_4 . METHOD_5 ( VAR_2 , VAR_3 ) ; } return VAR_2 + ( java.lang.String.format ( STRING_3 , VAR_3 ) ) ; }\n"}
{"problem": "public synchronized void METHOD_1 ( ) throws java.io.IOException { VAR_1 = METHOD_2 ( ) ; if ( ( METHOD_3 ( ) ) != 0 ) { METHOD_4 ( ) ; VAR_2 = VAR_3 ; if ( ( VAR_1 . METHOD_5 ( METHOD_6 ( ) , VAR_2 ) ) != null ) { METHOD_7 ( ) ; ( VAR_2 ) ++ ; } } else VAR_2 = 0 ; VAR_4 = false ; }\n", "fixed": "public synchronized void METHOD_1 ( ) throws java.io.IOException { VAR_1 = METHOD_2 ( ) ; if ( ( VAR_3 ) != 0 ) { METHOD_4 ( ) ; VAR_2 = VAR_3 ; if ( ( VAR_1 . METHOD_5 ( METHOD_6 ( ) , VAR_2 ) ) != null ) { METHOD_7 ( ) ; ( VAR_2 ) ++ ; } } else VAR_2 = 0 ; VAR_4 = false ; }\n"}
{"problem": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( this ) ; if ( getIntent ( ) . METHOD_4 ( VAR_2 ) ) { TYPE_2 . METHOD_5 ( VAR_3 , ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( getIntent ( ) . METHOD_6 ( VAR_2 , 0 ) ) ) ) ; VAR_4 = getIntent ( ) . METHOD_6 ( VAR_2 , 0 ) ; } }\n", "fixed": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; if ( getIntent ( ) . METHOD_4 ( VAR_2 ) ) { TYPE_2 . METHOD_5 ( VAR_3 , ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( getIntent ( ) . METHOD_6 ( VAR_2 , 0 ) ) ) ) ; VAR_4 = getIntent ( ) . METHOD_6 ( VAR_2 , 0 ) ; } }\n"}
{"problem": "protected void METHOD_1 ( java.lang.String VAR_1 ) { java.util.regex.Matcher VAR_2 = TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 ) ; int VAR_3 = 0 ; while ( VAR_2 . METHOD_4 ( ) ) { ( VAR_4 ) ++ ; VAR_3 = ( VAR_2 . end ( ) ) - 1 ; } VAR_5 = ( VAR_1 . length ( ) ) - VAR_3 ; }\n", "fixed": "protected void METHOD_1 ( java.lang.String VAR_1 ) { java.util.regex.Matcher VAR_2 = TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 ) ; int VAR_3 = - 1 ; while ( VAR_2 . METHOD_4 ( ) ) { ( VAR_4 ) ++ ; VAR_3 = ( VAR_2 . end ( ) ) - 1 ; } VAR_5 = ( VAR_1 . length ( ) ) - VAR_3 ; }\n"}
{"problem": "public static void METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( ) ; boolean VAR_2 = TYPE_1 . METHOD_3 ( ) ; if ( ( ! VAR_1 ) && ( ! VAR_2 ) ) { TYPE_1 . METHOD_4 ( ) ; } if ( TYPE_1 . METHOD_3 ( ) ) { TYPE_2 . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( ) ; boolean VAR_2 = TYPE_1 . METHOD_3 ( ) ; if ( ( ! VAR_1 ) && ( ! VAR_2 ) ) { TYPE_1 . METHOD_4 ( ) ; } if ( TYPE_1 . METHOD_3 ( ) ) { TYPE_2 . METHOD_5 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.util.List < java.lang.String > list ) { if ( ( METHOD_2 ( ) ) != null ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; list . add ( ( ( ( ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + ( VAR_1 . METHOD_3 ( null ) ) ) + STRING_2 ) + ( VAR_1 . METHOD_4 ( null ) ) ) + STRING_3 ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.util.List < java.lang.String > list ) { if ( ( METHOD_2 ( ) ) instanceof TYPE_1 ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; list . add ( ( ( ( ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + ( VAR_1 . METHOD_3 ( null ) ) ) + STRING_2 ) + ( VAR_1 . METHOD_4 ( null ) ) ) + STRING_3 ) ) ; } }\n"}
{"problem": "public boolean equals ( java.lang.Object t ) { if ( ( t == null ) | ( ! ( t instanceof TYPE_1 ) ) ) { return false ; } TYPE_1 VAR_1 = ( ( TYPE_1 ) ( t ) ) ; return ( this . getName ( ) . equals ( VAR_1 . getName ( ) ) ) && ( this . METHOD_1 ( ) . equals ( VAR_1 . METHOD_1 ( ) ) ) ; }\n", "fixed": "public boolean equals ( java.lang.Object t ) { if ( ( t == null ) || ( ! ( t instanceof TYPE_1 ) ) ) { return false ; } TYPE_1 VAR_1 = ( ( TYPE_1 ) ( t ) ) ; return ( this . getName ( ) . equals ( VAR_1 . getName ( ) ) ) && ( this . METHOD_1 ( ) . equals ( VAR_1 . METHOD_1 ( ) ) ) ; }\n"}
{"problem": "public void init ( ) { if ( VAR_1 ) return ; buffer = new TYPE_1 ( VAR_2 , VAR_3 , this , VAR_4 ) ; TYPE_2 VAR_5 = new TYPE_2 ( STRING_1 ) ; VAR_5 . METHOD_1 ( ) ; java.lang.String VAR_6 = VAR_5 . METHOD_2 ( VAR_7 . String class , STRING_2 ) ; VAR_5 . METHOD_3 ( ) ; if ( ( VAR_8 ) == null ) VAR_8 = new TYPE_3 ( VAR_6 ) ; VAR_1 = true ; }\n", "fixed": "public void init ( ) { if ( ! ( VAR_1 ) ) { buffer = new TYPE_1 ( VAR_2 , VAR_3 , this , VAR_4 ) ; TYPE_2 VAR_5 = new TYPE_2 ( STRING_1 ) ; VAR_5 . METHOD_1 ( ) ; java.lang.String VAR_6 = VAR_5 . METHOD_2 ( VAR_7 . String class , STRING_2 ) ; VAR_5 . METHOD_3 ( ) ; if ( ( VAR_8 ) == null ) VAR_8 = new TYPE_3 ( VAR_6 ) ; VAR_1 = true ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( ) . init ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_3 = METHOD_8 ( ) ; METHOD_9 ( INT_1 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( ) . init ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_3 = METHOD_8 ( ) ; }\n"}
{"problem": "public < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , double VAR_2 , TYPE_1 context ) { METHOD_2 ( VAR_1 ) ; for ( java.util.Map.Entry < TYPE_3 , java.lang.Double > value : VAR_1 . METHOD_3 ( this , VAR_2 , context ) . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 , value ) ; } METHOD_6 ( ) ; }\n", "fixed": "public < TYPE_1 > void METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , double VAR_2 , TYPE_1 context ) { METHOD_2 ( VAR_1 , context ) ; for ( java.util.Map.Entry < TYPE_3 , java.lang.Double > value : VAR_1 . METHOD_3 ( this , VAR_2 , context ) . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 , value ) ; } METHOD_6 ( ) ; }\n"}
{"problem": "private boolean METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; TYPE_2 p = VAR_2 . METHOD_3 ( ) ; for ( TYPE_2 VAR_4 : METHOD_4 ( ( 1 - VAR_1 ) ) ) { if ( VAR_4 . equals ( p ) ) { return true ; } } return false ; }\n", "fixed": "private boolean METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { TYPE_2 p = VAR_2 . METHOD_3 ( ) ; for ( TYPE_2 VAR_4 : METHOD_4 ( ( 1 - VAR_1 ) ) ) { if ( VAR_4 . equals ( p ) ) { return true ; } } return false ; } return true ; }\n"}
{"problem": "void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { return ; } java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( ( ( VAR_3 ) == null ) || ( METHOD_3 ( VAR_2 ) ) ) { java.util.Map < java.lang.String , java.lang.Object > VAR_4 = VAR_1 . METHOD_4 ( ) ; if ( VAR_4 != null ) { TYPE_2 VAR_5 = new TYPE_2 ( VAR_4 ) ; VAR_3 = new TYPE_3 ( this , VAR_5 ) ; } } }\n", "fixed": "void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { return ; } java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( ( ( VAR_3 ) == null ) || ( METHOD_3 ( VAR_2 ) ) ) { VAR_3 = null ; java.util.Map < java.lang.String , java.lang.Object > VAR_4 = VAR_1 . METHOD_4 ( ) ; if ( VAR_4 != null ) { TYPE_2 VAR_5 = new TYPE_2 ( VAR_4 ) ; VAR_3 = new TYPE_3 ( this , VAR_5 ) ; } } }\n"}
{"problem": "protected void init ( ) { TYPE_1 args = new TYPE_1 ( ) ; args . METHOD_1 ( VAR_1 , VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( args ) ; METHOD_3 ( ) . METHOD_4 ( ) . add ( VAR_4 , VAR_3 ) . commit ( ) ; }\n", "fixed": "protected void init ( ) { TYPE_1 args = new TYPE_1 ( ) ; args . METHOD_1 ( VAR_1 , VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( args ) ; METHOD_3 ( ) . METHOD_4 ( ) . replace ( VAR_4 , VAR_3 ) . commit ( ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getString ( VAR_3 ) ; if ( ( VAR_2 ) != null ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View view , TYPE_1 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; VAR_2 = METHOD_2 ( ) . getString ( VAR_3 ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( id ) ; VAR_2 . METHOD_3 ( this , VAR_3 ) ; final TYPE_3 VAR_4 = METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) . replace ( VAR_5 , VAR_2 , VAR_2 . METHOD_6 ( ) ) . METHOD_7 ( null ) . commit ( ) ; super . METHOD_1 ( VAR_1 , view , position , id ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( id ) ; final TYPE_3 VAR_4 = METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) . replace ( VAR_5 , VAR_2 , VAR_2 . METHOD_6 ( ) ) . METHOD_7 ( null ) . commit ( ) ; super . METHOD_1 ( VAR_1 , view , position , id ) ; }\n"}
{"problem": "public byte [ ] METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) { if ( ( VAR_2 ) == 0 ) { return METHOD_1 ( VAR_1 , null ) ; } else { return METHOD_1 ( VAR_1 , VAR_3 [ 0 ] . getClass ( ) ) ; } }\n", "fixed": "public byte [ ] METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) { if ( ( VAR_2 ) == 0 ) { return METHOD_1 ( VAR_1 , null ) ; } else { return METHOD_1 ( VAR_1 , VAR_3 . get ( 0 ) . getClass ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { int VAR_1 = INT_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( INT_1 , null ) ; int VAR_3 = INT_2 ; TYPE_1 VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 , null ) ; TYPE_3 . assertTrue ( ( VAR_4 != null ) ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_4 . getId ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { int VAR_1 = INT_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 , null ) ; int VAR_3 = INT_2 ; TYPE_1 VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 , null ) ; TYPE_3 . assertTrue ( ( VAR_4 != null ) ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_4 . getId ( ) ) ; }\n"}
{"problem": "protected java.util.Map < TYPE_1 , java.io.File > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_2 . METHOD_6 ( ( VAR_2 ) - > TYPE_3 . METHOD_7 ( VAR_2 . METHOD_8 ( ) . trim ( ) . toUpperCase ( TYPE_4 . METHOD_9 ( ) ) ) , java.util.Map.Entry : : getValue ) ) ; }\n", "fixed": "java.util.Map < TYPE_1 , java.io.File > METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_2 . METHOD_6 ( ( VAR_2 ) - > TYPE_3 . METHOD_7 ( VAR_2 . METHOD_8 ( ) . trim ( ) . toUpperCase ( TYPE_4 . METHOD_9 ( ) ) ) , java.util.Map.Entry : : getValue ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_1 ) ) { METHOD_3 ( ) ; TYPE_2 VAR_2 = METHOD_4 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_5 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_6 , VAR_7 ) ; TYPE_4 VAR_8 = new TYPE_4 ( ) ; VAR_8 . METHOD_6 ( VAR_3 ) ; VAR_8 . show ( VAR_2 , STRING_1 ) ; return false ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_1 ) ) { METHOD_3 ( ) ; TYPE_2 VAR_2 = METHOD_4 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_5 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_6 , VAR_7 ) ; TYPE_4 VAR_8 = new TYPE_4 ( ) ; VAR_8 . METHOD_6 ( VAR_3 ) ; VAR_8 . show ( VAR_2 , STRING_1 ) ; return true ; } return true ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 ) { if ( VAR_1 == null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; throw new TYPE_5 ( ) ; } VAR_2 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_3 ( STRING_3 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_5 . METHOD_5 ( ) ) ; return VAR_2 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 ) { if ( VAR_1 == null ) { VAR_2 . METHOD_2 ( STRING_1 ) ; throw new TYPE_5 ( ) ; } VAR_2 . METHOD_2 ( STRING_2 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_5 . METHOD_5 ( ) ) ; return VAR_2 ; }\n"}
{"problem": "private static void METHOD_1 ( final java.lang.String url , final TYPE_1 VAR_1 , final android.content.Context context ) { if ( VAR_1 == null ) return ; final TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( url ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == null ) { return ; } TYPE_3 . METHOD_4 ( ) . execute ( new TYPE_4 ( VAR_2 , VAR_1 , TYPE_3 . get ( context ) ) ) ; }\n", "fixed": "private static void METHOD_1 ( final java.lang.String url , final TYPE_1 VAR_1 , final android.content.Context context ) { if ( ( VAR_1 == null ) || ( url == null ) ) return ; final TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( url ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == null ) { return ; } TYPE_3 . METHOD_4 ( ) . execute ( new TYPE_4 ( VAR_2 , VAR_1 , TYPE_3 . get ( context ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) . substring ( 0 , ( ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) . length ( ) ) - ( VAR_3 . METHOD_3 ( ) . getName ( ) . length ( ) ) ) ) , VAR_3 . METHOD_3 ( ) . getName ( ) ) ; METHOD_5 ( ) ; VAR_2 . METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_3 . METHOD_3 ( ) ) != null ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) . substring ( 0 , ( ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) . length ( ) ) - ( VAR_3 . METHOD_3 ( ) . getName ( ) . length ( ) ) ) ) , VAR_3 . METHOD_3 ( ) . getName ( ) ) ; METHOD_5 ( ) ; VAR_2 . METHOD_6 ( ) ; } }\n"}
{"problem": "public static java.util.Date METHOD_1 ( java.util.Date VAR_1 , int VAR_2 ) { java.util.Calendar c = java.util.Calendar.getInstance ( ) ; c . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; c . set ( VAR_3 , 1 ) ; c . add ( VAR_4 , VAR_2 ) ; return c . getTime ( ) ; }\n", "fixed": "public static java.util.Date METHOD_1 ( java.util.Date VAR_1 , int VAR_2 ) { java.util.Calendar c = java.util.Calendar.getInstance ( ) ; c . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; c . add ( VAR_4 , VAR_2 ) ; c . set ( VAR_3 , 1 ) ; return c . getTime ( ) ; }\n"}
{"problem": "public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { int i = 0 ; int j = 0 ; for ( TYPE_1 a : VAR_1 ) { i = a . y ( ) ; j = a . x ( ) ; VAR_2 [ i ] [ j ] . METHOD_2 ( VAR_3 ) ; VAR_2 [ i ] [ j ] . METHOD_3 ( ( i * ( VAR_4 ) ) , ( j * ( VAR_4 ) ) , VAR_4 , VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { int i = 0 ; int j = 0 ; for ( TYPE_1 a : VAR_1 ) { i = a . x ( ) ; j = a . y ( ) ; VAR_2 [ i ] [ j ] . METHOD_2 ( VAR_3 ) ; VAR_2 [ i ] [ j ] . METHOD_3 ( j , i , VAR_4 , VAR_4 ) ; } }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_2 ) + ( VAR_1 . getId ( ) ) ) ) ; for ( java.lang.Object VAR_3 : VAR_4 . values ( ) ) { if ( TYPE_2 . METHOD_3 ( VAR_3 , VAR_1 . getId ( ) ) ) { TYPE_2 . METHOD_4 ( VAR_3 , VAR_2 , VAR_1 , false ) ; } } java.lang.System.out.println ( ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_2 ) + ( VAR_1 . getId ( ) ) ) ) ; for ( java.lang.Object VAR_3 : VAR_4 . values ( ) ) { if ( TYPE_2 . METHOD_3 ( VAR_3 , VAR_1 . getId ( ) ) ) { TYPE_2 . METHOD_4 ( VAR_3 , VAR_1 , VAR_2 , false ) ; } } java.lang.System.out.println ( ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 + ( VAR_2 ) ; TYPE_1 VAR_3 = this . METHOD_2 ( ) ; TYPE_2 VAR_4 = VAR_3 . METHOD_3 ( VAR_1 , null ) ; VAR_4 . METHOD_4 ( ) ; return VAR_4 . METHOD_5 ( ) ; }\n", "fixed": "public int METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 + ( VAR_2 ) ; TYPE_1 VAR_3 = this . METHOD_2 ( ) ; TYPE_2 VAR_4 = VAR_3 . METHOD_3 ( VAR_1 , null ) ; int count = VAR_4 . METHOD_5 ( ) ; VAR_4 . METHOD_4 ( ) ; return count ; }\n"}
{"problem": "protected java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_4 VAR_3 = TYPE_5 . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) ) ; return VAR_3 . getId ( ) ; }\n", "fixed": "protected java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_4 VAR_3 = TYPE_5 . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) ) ; if ( VAR_3 == null ) { return null ; } else { return VAR_3 . getId ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? , ? > VAR_1 , java.lang.Object VAR_2 , int line , int VAR_3 , java.lang.String msg , TYPE_2 VAR_4 ) { errors . add ( ( ( ( ( ( ( ( STRING_1 + ( VAR_2 . toString ( ) ) ) + STRING_2 ) + line ) + STRING_3 ) + VAR_3 ) + STRING_4 ) + msg ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? , ? > VAR_1 , java.lang.Object VAR_2 , int line , int VAR_3 , java.lang.String msg , TYPE_2 VAR_4 ) { errors . add ( ( ( ( ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + line ) + STRING_3 ) + VAR_3 ) + STRING_4 ) + msg ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_6 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_7 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_8 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_7 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_9 . METHOD_2 ( ) ; VAR_10 . METHOD_2 ( ) ; VAR_11 . METHOD_2 ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_6 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_7 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_8 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_7 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_9 . METHOD_2 ( ) ; VAR_10 . METHOD_2 ( ) ; VAR_11 . METHOD_2 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { TYPE_2 p = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; if ( ( ( VAR_1 . METHOD_2 ( ) ) instanceof TYPE_2 ) && ( VAR_3 . contains ( p ) ) ) { VAR_1 . METHOD_3 ( true ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) instanceof TYPE_2 ) && ( VAR_2 ) ) { TYPE_2 p = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; if ( ( ( VAR_1 . METHOD_2 ( ) ) instanceof TYPE_2 ) && ( VAR_3 . contains ( p ) ) ) { VAR_1 . METHOD_3 ( true ) ; } } }\n"}
{"problem": "private boolean METHOD_1 ( ) { if ( ( ( VAR_1 ) > INT_1 ) || ( ( VAR_2 ) < 1 ) ) { return false ; } java.util.Calendar VAR_3 = java.util.Calendar.getInstance ( ) ; VAR_3 . METHOD_2 ( new java.util.Date ( ) ) ; return ( ( VAR_3 . get ( VAR_4 ) ) > ( VAR_2 ) ) || ( ( ( VAR_3 . get ( VAR_4 ) ) == ( VAR_2 ) ) && ( ( VAR_3 . get ( VAR_5 ) ) >= ( VAR_1 ) ) ) ; }\n", "fixed": "private boolean METHOD_1 ( ) { if ( ( ( VAR_1 ) > INT_1 ) || ( ( VAR_2 ) < 1 ) ) { return true ; } java.util.Calendar VAR_3 = java.util.Calendar.getInstance ( ) ; return ( ( VAR_3 . get ( VAR_4 ) ) > ( VAR_2 ) ) || ( ( ( VAR_3 . get ( VAR_4 ) ) == ( VAR_2 ) ) && ( ( VAR_3 . get ( VAR_5 ) ) >= ( VAR_1 ) ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { android.view.View VAR_1 = METHOD_2 ( ) ; TYPE_1 VAR_2 = super . METHOD_1 ( ) ; TYPE_2 VAR_3 = METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_4 = METHOD_4 ( VAR_1 , VAR_3 ) ; METHOD_5 ( VAR_1 , VAR_3 , VAR_4 , VAR_2 ) ; METHOD_6 ( VAR_1 , VAR_2 ) ; return super . METHOD_1 ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { android.view.View VAR_1 = METHOD_2 ( ) ; TYPE_1 VAR_2 = super . METHOD_1 ( ) ; TYPE_2 VAR_3 = METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_4 = METHOD_4 ( VAR_1 , VAR_3 ) ; METHOD_5 ( VAR_1 , VAR_3 , VAR_4 , VAR_2 ) ; METHOD_6 ( VAR_1 , VAR_2 ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { int VAR_1 ; VAR_2 = INT_1 ; VAR_3 = 0 ; VAR_4 = INT_2 ; p . METHOD_2 ( ) ; assert ( VAR_2 ) == ( ( VAR_2 ) - ( VAR_4 ) ) ; assert ( VAR_3 ) == ( ( VAR_3 ) + ( VAR_4 ) ) ; VAR_2 = 1 ; p . METHOD_2 ( ) ; assert VAR_5 . equals ( STRING_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) { int VAR_1 ; VAR_2 = INT_1 ; VAR_3 = 0 ; VAR_4 = INT_2 ; p . METHOD_2 ( 1 ) ; assert ( VAR_2 ) == ( ( VAR_2 ) - ( VAR_4 ) ) ; assert ( VAR_3 ) == ( ( VAR_3 ) + ( VAR_4 ) ) ; VAR_2 = 1 ; p . METHOD_2 ( 1 ) ; assert VAR_5 . equals ( STRING_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( ! ( VAR_2 . contains ( VAR_1 . METHOD_2 ( ) ) ) ) { VAR_2 . add ( VAR_1 . METHOD_2 ( ) ) ; if ( ( VAR_3 ) == null ) { VAR_3 = METHOD_3 ( ) ; } VAR_3 . add ( VAR_1 ) ; } METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( ! ( VAR_2 . contains ( VAR_1 . METHOD_2 ( ) ) ) ) { if ( ( VAR_3 ) == null ) { VAR_3 = METHOD_3 ( ) ; } VAR_2 . add ( VAR_1 . METHOD_2 ( ) ) ; VAR_3 . add ( VAR_1 ) ; } METHOD_4 ( ) ; }\n"}
{"problem": "protected final int METHOD_1 ( TYPE_1 VAR_1 , java.lang.String ... names ) { if ( ( ( VAR_1 == null ) || ( names == null ) ) || ( ( names . length ) == 0 ) ) return 0 ; int count = 0 ; for ( java.lang.String name : names ) { java.lang.String VAR_2 = this . getString ( name ) ; VAR_1 . set ( name , VAR_2 ) ; count ++ ; } return count ; }\n", "fixed": "public final int METHOD_1 ( TYPE_1 VAR_1 , java.lang.String ... names ) { if ( ( ( VAR_1 == null ) || ( names == null ) ) || ( ( names . length ) == 0 ) ) return 0 ; int count = 0 ; for ( java.lang.String name : names ) { java.lang.String VAR_2 = this . getString ( name ) ; VAR_1 . set ( name , VAR_2 ) ; count ++ ; } return count ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_6 ) ; android.content.Intent VAR_7 = new android.content.Intent ( this , VAR_8 class ) ; METHOD_6 ( VAR_7 , VAR_9 , VAR_10 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; VAR_5 = METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_6 ) ; VAR_7 = new android.content.Intent ( this , VAR_8 class ) ; METHOD_6 ( VAR_7 , VAR_9 , VAR_10 ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; TYPE_1 VAR_4 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_6 = new TYPE_2 ( this ) ; VAR_6 . METHOD_4 ( STRING_2 ) ; VAR_6 . METHOD_5 ( false ) ; VAR_6 . METHOD_6 ( true ) ; VAR_6 . show ( ) ; }\n", "fixed": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; TYPE_1 VAR_4 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_6 = TYPE_2 . show ( this , STRING_1 , STRING_2 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( METHOD_3 ( VAR_2 , java.lang.Double . METHOD_4 ( METHOD_5 ( ) ) ) ) ; VAR_3 . METHOD_6 ( ) ; TYPE_2 VAR_4 = ( ( TYPE_3 ) ( getActivity ( ) ) ) . METHOD_7 ( ) ; double VAR_5 = VAR_4 . METHOD_8 ( java.lang.Double . METHOD_4 ( METHOD_5 ( ) ) , VAR_6 , VAR_7 ) ; VAR_1 . setText ( java.lang.String.format ( TYPE_4 . METHOD_9 ( ) , STRING_1 , VAR_5 ) ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_4 = ( ( TYPE_3 ) ( getActivity ( ) ) ) . METHOD_7 ( ) ; double VAR_5 = VAR_4 . METHOD_8 ( java.lang.Double . METHOD_4 ( METHOD_5 ( ) ) , VAR_6 , VAR_7 ) ; VAR_1 . setText ( java.lang.String.format ( TYPE_4 . METHOD_9 ( ) , STRING_1 , VAR_5 ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { VAR_4 . info ( STRING_1 ) ; TYPE_4 VAR_5 = VAR_1 . METHOD_2 ( ) ; boolean VAR_6 = false ; if ( VAR_5 != null ) { java.lang.String VAR_7 = VAR_5 . get ( VAR_8 ) ; if ( VAR_7 != null ) { try { VAR_6 = METHOD_3 ( VAR_7 ) ; } catch ( java.lang.Exception VAR_9 ) { VAR_4 . error ( STRING_2 ) ; return false ; } } } return VAR_6 ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 VAR_5 = VAR_1 . METHOD_2 ( ) ; boolean VAR_6 = false ; if ( VAR_5 != null ) { java.lang.String VAR_7 = VAR_5 . get ( VAR_8 ) ; if ( VAR_7 != null ) { try { VAR_6 = METHOD_3 ( VAR_7 ) ; } catch ( java.lang.Exception VAR_9 ) { VAR_4 . error ( ( STRING_2 + VAR_9 ) ) ; return false ; } } } return VAR_6 ; }\n"}
{"problem": "public double METHOD_1 ( ) { double VAR_1 = 0 ; for ( int i = 0 ; i >= ( VAR_2 . size ( ) ) ; i ++ ) { TYPE_1 TYPE_2 = VAR_2 . get ( i ) ; VAR_1 = VAR_1 + ( TYPE_2 . METHOD_2 ( ) ) ; } return VAR_1 ; }\n", "fixed": "public double METHOD_1 ( ) { double VAR_1 = 0 ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { TYPE_1 TYPE_2 = VAR_2 . get ( i ) ; VAR_1 = VAR_1 + ( TYPE_2 . METHOD_2 ( ) ) ; } return VAR_1 ; }\n"}
{"problem": "public double METHOD_1 ( ) { if ( ! ( java.lang.Double . METHOD_2 ( VAR_1 ) ) ) return VAR_1 ; for ( int i = 0 ; i < ( METHOD_3 ( ) [ 0 ] . length ) ; i ++ ) { final double VAR_2 = METHOD_3 ( 0 , i , INT_1 ) ; if ( VAR_2 >= ( VAR_1 ) ) VAR_1 = VAR_2 ; } return VAR_1 ; }\n", "fixed": "public double METHOD_1 ( ) { if ( ! ( java.lang.Double . METHOD_2 ( VAR_1 ) ) ) return VAR_1 ; for ( int i = 0 ; i < ( METHOD_3 ( ) [ 0 ] . length ) ; i ++ ) { final double VAR_2 = METHOD_3 ( 0 , i , INT_1 ) ; if ( ( VAR_2 >= ( VAR_1 ) ) || ( java.lang.Double . METHOD_2 ( VAR_1 ) ) ) VAR_1 = VAR_2 ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 listener , long VAR_1 , java.lang.String VAR_2 , java.lang.String date , TYPE_2 < TYPE_3 > VAR_3 ) throws TYPE_4 { TYPE_5 VAR_4 = TYPE_6 . METHOD_2 ( VAR_1 , VAR_2 , date , VAR_3 ) ; new TYPE_7 ( listener , VAR_4 ) . execute ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 listener , long VAR_1 , java.lang.String VAR_2 , java.lang.String date , java.util.List < TYPE_3 > VAR_3 ) throws TYPE_4 { TYPE_5 VAR_4 = TYPE_6 . METHOD_2 ( VAR_1 , VAR_2 , date , VAR_3 ) ; new TYPE_7 ( listener , VAR_4 ) . execute ( ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) && ( null != ( VAR_1 ) ) ) { TYPE_1 VAR_2 = new TYPE_2 ( STRING_1 , TYPE_3 . METHOD_3 ( new TYPE_4 ( STRING_2 ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; return VAR_2 . format ( METHOD_8 ( ) ) ; } return value ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) && ( null != ( VAR_1 ) ) ) { TYPE_1 VAR_2 = new TYPE_2 ( STRING_1 , TYPE_3 . METHOD_3 ( new TYPE_4 ( STRING_2 ) ) ) ; return format ( VAR_2 ) ; } return value ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_1 , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_2 , VAR_3 ) ; if ( VAR_4 != null ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_3 , VAR_4 ) ; } TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_4 , VAR_5 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_1 , VAR_2 ) ; if ( VAR_3 != null ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_2 , VAR_3 ) ; } if ( VAR_4 != null ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_3 , VAR_4 ) ; } TYPE_2 . METHOD_2 ( VAR_1 , VAR_6 , STRING_4 , VAR_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; ( ( TYPE_1 ) ( context ) ) . METHOD_3 ( VAR_4 ) . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_4 ( ) . replace ( VAR_7 , new TYPE_2 ( VAR_8 . get ( position ) ) ) . METHOD_5 ( VAR_9 ) . commit ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; ( ( TYPE_1 ) ( context ) ) . METHOD_3 ( VAR_4 ) . METHOD_2 ( VAR_5 ) ; VAR_6 . METHOD_4 ( ) . replace ( VAR_7 , new TYPE_2 ( VAR_8 . get ( position ) ) , VAR_9 ) . METHOD_5 ( VAR_9 ) . commit ( ) ; }\n"}
{"problem": "protected final void METHOD_1 ( ) { try { final java.lang.String line = this . VAR_1 . METHOD_2 ( ) ; if ( line == null ) { this . METHOD_3 ( ) ; } this . METHOD_1 ( line ) ; } catch ( java.lang.Exception VAR_2 ) { this . METHOD_3 ( ) ; throw new TYPE_1 ( VAR_2 ) ; } }\n", "fixed": "protected final void METHOD_1 ( ) { try { final java.lang.String line = this . VAR_1 . METHOD_2 ( ) ; if ( line == null ) { this . METHOD_3 ( ) ; return ; } this . METHOD_1 ( line ) ; } catch ( java.lang.Exception VAR_2 ) { this . METHOD_3 ( ) ; throw new TYPE_1 ( VAR_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 [ VAR_1 ] [ VAR_2 ] = ( ( ( VAR_4 ) ^ ( ( VAR_5 ) & ( VAR_3 [ ( VAR_1 - 1 ) ] [ VAR_2 ] ) ) ) ^ ( ( VAR_6 ) & ( VAR_3 [ ( VAR_1 - 1 ) ] [ ( VAR_2 + 1 ) ] ) ) ) ^ ( ( VAR_5 ) & ( VAR_6 ) ) ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 ) { VAR_3 [ VAR_1 ] [ VAR_2 ] = ( ( VAR_4 ) ^ ( ( VAR_5 ) & ( VAR_3 [ ( VAR_1 - 1 ) ] [ VAR_2 ] ) ) ) ^ ( ( VAR_6 ) & ( VAR_3 [ ( VAR_1 - 1 ) ] [ ( VAR_2 + 1 ) ] ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 event ) throws java.io.IOException { java.lang.String message = event . METHOD_2 ( ) ; java.lang.String VAR_1 = METHOD_3 ( message ) ; if ( message . startsWith ( VAR_2 ) ) { return VAR_3 . get ( METHOD_3 ( message ) ) . execute ( event . METHOD_4 ( ) , event . METHOD_5 ( ) , METHOD_6 ( message ) ) ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 event ) throws java.io.IOException { java.lang.String message = event . METHOD_2 ( ) ; if ( message . startsWith ( VAR_2 ) ) { return VAR_3 . get ( METHOD_3 ( message ) ) . execute ( event . METHOD_4 ( ) , event . METHOD_5 ( ) , METHOD_6 ( message ) ) ; } return false ; }\n"}
{"problem": "private static int METHOD_1 ( ) { final long VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; final long VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ; final long VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_5 ( ) ; return ( ( int ) ( ( VAR_2 + ( VAR_1 - VAR_3 ) ) / INT_1 ) ) ; }\n", "fixed": "private static long METHOD_1 ( ) { final long VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; final long VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ; final long VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_5 ( ) ; return ( VAR_2 > > 1 ) + ( ( VAR_1 - VAR_3 ) > > 1 ) ; }\n"}
{"problem": "private static java.lang.String METHOD_1 ( java.lang.String time ) { java.lang.String VAR_1 = time . substring ( INT_1 , time . length ( ) ) ; int VAR_2 = java.lang.Integer.parseInt ( time . substring ( 0 , INT_2 ) ) ; if ( VAR_1 . equals ( STRING_1 ) ) { VAR_2 += INT_3 ; } else { if ( VAR_2 == INT_3 ) VAR_2 = 0 ; } return ( java.lang.String.format ( STRING_2 , VAR_2 ) ) + ( time . substring ( INT_2 , INT_1 ) ) ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.lang.String time ) { java.lang.String VAR_1 = time . substring ( INT_1 , time . length ( ) ) ; int VAR_2 = java.lang.Integer.parseInt ( time . substring ( 0 , INT_2 ) ) ; VAR_2 = ( VAR_2 == INT_3 ) ? 0 : VAR_2 ; if ( VAR_1 . equals ( STRING_1 ) ) VAR_2 += INT_3 ; return ( java.lang.String.format ( STRING_2 , VAR_2 ) ) + ( time . substring ( INT_2 , INT_1 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , TYPE_2 result ) throws TYPE_3 { if ( VAR_2 == ( VAR_3 . size ( ) ) ) { VAR_3 . add ( VAR_1 ) ; VAR_4 . add ( VAR_2 ) ; } else VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) throws TYPE_3 { if ( VAR_2 == ( VAR_3 . size ( ) ) ) { VAR_3 . add ( VAR_1 ) ; VAR_4 . add ( VAR_2 ) ; } else VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n"}
{"problem": "public java.lang.Integer update ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( STRING_1 ) ; TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; java.lang.System.out.println ( VAR_2 ) ; VAR_3 . update ( VAR_2 ) ; return VAR_2 . getId ( ) ; }\n", "fixed": "public java.lang.Integer update ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( STRING_1 ) ; TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_4 VAR_2 = METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; VAR_3 . update ( VAR_2 ) ; return VAR_2 . getId ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { assertEquals ( STRING_1 , 0 , VAR_1 . METHOD_1 ( ( ( VAR_2 ) - ( ( VAR_3 ) / INT_1 ) ) ) ) ; assertEquals ( STRING_2 , ( ( height ) / INT_1 ) , VAR_1 . METHOD_1 ( VAR_2 ) ) ; assertEquals ( STRING_3 , height , VAR_1 . METHOD_1 ( ( ( VAR_2 ) + ( ( VAR_3 ) / INT_1 ) ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { assertEquals ( STRING_1 , 0 , VAR_1 . METHOD_1 ( ( ( VAR_2 ) + ( ( VAR_3 ) / INT_1 ) ) ) ) ; assertEquals ( STRING_2 , ( ( height ) / INT_1 ) , VAR_1 . METHOD_1 ( VAR_2 ) ) ; assertEquals ( STRING_3 , height , VAR_1 . METHOD_1 ( ( ( VAR_2 ) - ( ( VAR_3 ) / INT_1 ) ) ) ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( this , new TYPE_2 ( ) { public void METHOD_4 ( ) { VAR_3 super . METHOD_1 ( ) ; } } ) ; }\n", "fixed": "protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( this , new TYPE_2 ( ) { public void METHOD_4 ( ) { VAR_3 super . METHOD_1 ( ) ; } } ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; case VAR_4 : android.content.Intent VAR_5 = new android.content.Intent ( this , VAR_6 class ) ; METHOD_3 ( VAR_5 ) ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : android.content.Intent VAR_2 = new android.content.Intent ( this , VAR_3 class ) ; METHOD_3 ( VAR_2 ) ; break ; case VAR_4 : android.content.Intent VAR_5 = new android.content.Intent ( this , VAR_6 class ) ; METHOD_3 ( VAR_5 ) ; break ; } return false ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { VAR_2 . METHOD_1 ( ) ; VAR_3 . METHOD_1 ( ) ; } catch ( java.io.IOException VAR_4 ) { VAR_5 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; } finally { VAR_1 . METHOD_4 ( ) ; } } VAR_1 = null ; }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { try { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_1 ( ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; } } catch ( java.io.IOException VAR_4 ) { VAR_5 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; } finally { VAR_1 . METHOD_4 ( ) ; } } VAR_1 = null ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( ! ( VAR_1 . METHOD_2 ( ) . equals ( METHOD_3 ( ) ) ) ) { throw new TYPE_2 ( ( ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_2 ) + ( METHOD_3 ( ) ) ) ) ; } VAR_2 . add ( VAR_1 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { if ( ! ( VAR_1 . METHOD_2 ( ) . equals ( METHOD_3 ( ) ) ) ) { throw new TYPE_2 ( ( ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_2 ) + ( METHOD_3 ( ) ) ) ) ; } VAR_2 . add ( new TYPE_1 ( VAR_1 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; if ( ( METHOD_3 ( ) ) != ( VAR_3 ) ) { METHOD_4 ( VAR_3 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_2 ) ; METHOD_5 ( VAR_1 ) ; for ( TYPE_3 listener : VAR_4 ) { listener . METHOD_6 ( ) ; } } else { VAR_5 . METHOD_7 ( VAR_1 ) ; METHOD_8 ( METHOD_9 ( ) . METHOD_10 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; if ( ( METHOD_3 ( ) ) != ( VAR_3 ) ) { METHOD_4 ( VAR_3 ) ; TYPE_2 . METHOD_2 ( VAR_2 , STRING_2 ) ; METHOD_5 ( VAR_1 ) ; for ( TYPE_3 listener : VAR_4 ) { listener . METHOD_6 ( ) ; } } else { VAR_5 . METHOD_7 ( VAR_1 ) ; VAR_1 . METHOD_8 ( METHOD_9 ( ) . METHOD_10 ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { try { java.util.Set < TYPE_1 > output ; output = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( output ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 ) ; VAR_5 . METHOD_5 ( ) ; VAR_3 . METHOD_6 ( ) ; TYPE_3 . show ( VAR_3 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { try { java.util.Set < TYPE_1 > output ; output = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( output ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 ) ; VAR_5 . METHOD_5 ( VAR_3 ) ; VAR_3 . METHOD_6 ( ) ; TYPE_3 . show ( VAR_3 ) ; } }\n"}
{"problem": "private double [ ] METHOD_1 ( double [ ] VAR_1 ) { for ( int i = ( VAR_2 . size ( ) ) - 1 ; i > 0 ; i -- ) { VAR_1 = VAR_2 . get ( i ) . METHOD_2 ( VAR_1 ) ; } return VAR_1 ; }\n", "fixed": "private double [ ] METHOD_1 ( double [ ] VAR_1 ) { for ( int i = ( VAR_2 . size ( ) ) - 1 ; i >= 0 ; i -- ) { VAR_1 = VAR_2 . get ( i ) . METHOD_2 ( VAR_1 ) ; } return VAR_1 ; }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( VAR_2 . METHOD_2 ( ) ) - ( VAR_1 . METHOD_2 ( ) ) ; if ( VAR_3 == 0 ) { return ( VAR_2 . METHOD_3 ( ) ) - ( VAR_1 . METHOD_3 ( ) ) ; } return VAR_3 ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( VAR_1 . METHOD_2 ( ) ) - ( VAR_2 . METHOD_2 ( ) ) ; if ( VAR_3 == 0 ) { return ( VAR_1 . METHOD_3 ( ) ) - ( VAR_2 . METHOD_3 ( ) ) ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 -= ( TYPE_1 . METHOD_2 ( ( ( VAR_1 ) / FLOAT_1 ) ) ) * FLOAT_1 ; if ( ( VAR_1 ) > FLOAT_2 ) { VAR_1 -= FLOAT_1 ; } else if ( ( VAR_1 ) < ( - FLOAT_2 ) ) { VAR_1 += FLOAT_1 ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 -= ( TYPE_1 . METHOD_2 ( ( ( VAR_1 ) / FLOAT_1 ) ) ) * FLOAT_1 ; if ( ( VAR_1 ) > FLOAT_2 ) { VAR_1 -= FLOAT_1 ; } else if ( ( VAR_1 ) < ( - FLOAT_2 ) ) { VAR_1 += FLOAT_1 ; } int a = 0 ; }\n"}
{"problem": "protected java.lang.Boolean METHOD_1 ( java.lang.Void ... params ) { java.lang.Boolean result = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( ) ; if ( ( TYPE_1 . METHOD_4 ( ) ) != null ) { VAR_3 = TYPE_1 . METHOD_5 ( TYPE_1 . METHOD_4 ( ) . getName ( ) , TYPE_1 . METHOD_4 ( ) . METHOD_6 ( ) ) ; } return result ; }\n", "fixed": "protected java.lang.Boolean METHOD_1 ( java.lang.Void ... params ) { java.lang.Boolean result = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( ( TYPE_1 . METHOD_4 ( ) ) != null ) { VAR_3 = TYPE_1 . METHOD_5 ( TYPE_1 . METHOD_4 ( ) . getName ( ) , TYPE_1 . METHOD_4 ( ) . METHOD_6 ( ) ) ; } return result ; }\n"}
{"problem": "TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_4 key , final TYPE_5 VAR_1 ) throws java.lang.Exception { TYPE_6 context = METHOD_2 ( VAR_2 , VAR_3 , VAR_1 . METHOD_3 ( VAR_4 class ) ) ; final TYPE_1 < TYPE_7 , TYPE_8 > VAR_5 = METHOD_4 ( context , VAR_6 , VAR_7 ) ; TYPE_7 VAR_8 = VAR_5 . METHOD_5 ( ) ; TYPE_8 VAR_9 = VAR_5 . METHOD_6 ( ) ; return METHOD_7 ( VAR_2 , VAR_3 , VAR_10 , VAR_11 , VAR_1 , context , VAR_8 , VAR_9 ) ; }\n", "fixed": "TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_6 context , TYPE_4 key , final TYPE_5 VAR_1 ) throws java.lang.Exception { final TYPE_1 < TYPE_7 , TYPE_8 > VAR_5 = METHOD_4 ( context , VAR_6 , VAR_7 ) ; TYPE_7 VAR_8 = VAR_5 . METHOD_5 ( ) ; TYPE_8 VAR_9 = VAR_5 . METHOD_6 ( ) ; return METHOD_7 ( VAR_2 , VAR_3 , VAR_10 , VAR_11 , VAR_1 , context , VAR_8 , VAR_9 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_2 VAR_4 = METHOD_3 ( ) ; if ( VAR_4 != null ) { this . VAR_5 = true ; try { VAR_4 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; METHOD_6 ( ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ) ; } finally { this . VAR_5 = false ; } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_2 VAR_4 = METHOD_3 ( ) ; if ( VAR_4 != null ) { this . VAR_5 = true ; try { VAR_4 . METHOD_4 ( VAR_2 ) ; METHOD_5 ( false ) ; METHOD_6 ( ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) ) ) ; } finally { this . VAR_5 = false ; } } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.util.Collection < TYPE_2 > words ) { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . init ( VAR_2 , words , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; if ( VAR_7 ) { java.lang.System.err.println ( STRING_1 ) ; METHOD_2 ( VAR_1 , words ) ; } else java.lang.System.err.println ( STRING_2 ) ; METHOD_3 ( VAR_1 , words ) ; VAR_1 . METHOD_4 ( ) ; TYPE_1 VAR_8 = new TYPE_1 ( VAR_1 ) ; return VAR_8 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.util.Collection < TYPE_2 > words ) { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . init ( VAR_2 , words , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; if ( VAR_7 ) { java.lang.System.err.println ( STRING_1 ) ; METHOD_2 ( VAR_1 , words ) ; } else { java.lang.System.err.println ( STRING_2 ) ; METHOD_3 ( VAR_1 , words ) ; } VAR_1 . METHOD_4 ( ) ; TYPE_1 VAR_8 = new TYPE_1 ( VAR_1 ) ; return VAR_8 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) . equals ( TYPE_2 ) ) && ( VAR_2 . equals ( VAR_3 ) ) ) { try { return TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_4 ) ; } catch ( TYPE_4 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } } return TYPE_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( ( TYPE_2 . equals ( VAR_1 . METHOD_2 ( ) ) ) && ( VAR_2 . equals ( VAR_3 ) ) ) { try { return TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_4 ) ; } catch ( TYPE_4 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } } return TYPE_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_3 = VAR_1 ; android.content.Intent i = new android.content.Intent ( this , VAR_4 class ) ; i . METHOD_2 ( VAR_5 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ; i . METHOD_2 ( VAR_6 , true ) ; METHOD_5 ( i ) ; METHOD_6 ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { VAR_3 = VAR_2 ; android.content.Intent i = new android.content.Intent ( this , VAR_4 class ) ; i . METHOD_2 ( VAR_5 , VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ; i . METHOD_2 ( VAR_6 , true ) ; METHOD_5 ( i ) ; METHOD_6 ( ) ; VAR_2 = null ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_1 ) ) { VAR_2 = VAR_3 . METHOD_3 ( info . position ) ; VAR_4 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( ) ; VAR_3 . remove ( VAR_2 ) ; VAR_3 . METHOD_7 ( ) ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_1 ) ) { VAR_2 = VAR_3 . METHOD_3 ( info . position ) ; VAR_3 . remove ( VAR_2 ) ; VAR_3 . METHOD_7 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( ) ; } return true ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { TYPE_2 id = VAR_1 . METHOD_2 ( i ) ; TYPE_3 type = VAR_1 . getType ( i ) ; id = new TYPE_2 ( VAR_2 , id . name , id . array , false , i , id . line , VAR_3 ) ; VAR_1 . METHOD_3 ( i , id ) ; VAR_4 . METHOD_4 ( id . name , id ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { TYPE_2 id = VAR_1 . METHOD_2 ( i ) ; TYPE_3 type = VAR_1 . getType ( i ) ; id = new TYPE_2 ( VAR_2 , id . name , id . array , false , i , id . line , VAR_3 , false ) ; VAR_1 . METHOD_3 ( i , id ) ; VAR_4 . METHOD_4 ( id . name , id ) ; } }\n"}
{"problem": "private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_1 ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( new TYPE_4 ( true , false ) ) ; TYPE_2 . METHOD_5 ( ) ; return true ; }\n", "fixed": "private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 . add ( VAR_1 ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( new TYPE_4 ( VAR_1 , true , false ) ) ; TYPE_2 . METHOD_5 ( ) ; return true ; }\n"}
{"problem": "public static void METHOD_1 ( ) throws TYPE_1 { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.System.out.print ( STRING_1 ) ; java.lang.Integer VAR_3 = VAR_1 . METHOD_2 ( ) ; java.lang.String remove = STRING_2 ; VAR_4 . METHOD_3 ( false ) ; VAR_5 = VAR_4 . METHOD_4 ( remove ) ; VAR_5 . METHOD_5 ( 1 , VAR_3 ) ; VAR_4 . commit ( ) ; java.lang.System.out.println ( STRING_3 ) ; }\n", "fixed": "public static void METHOD_1 ( ) throws TYPE_1 { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.System.out.print ( STRING_1 ) ; java.lang.Integer VAR_3 = VAR_1 . METHOD_2 ( ) ; java.lang.String remove = STRING_2 ; VAR_4 . METHOD_3 ( false ) ; VAR_5 = VAR_4 . METHOD_4 ( remove ) ; VAR_5 . METHOD_5 ( 1 , VAR_3 . toString ( ) ) ; VAR_4 . commit ( ) ; java.lang.System.out.println ( STRING_3 ) ; }\n"}
{"problem": "private int METHOD_1 ( final TYPE_1 first , final java.lang.Object VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) { return first . METHOD_2 ( ) . compareTo ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) ) ; } else if ( VAR_1 instanceof TYPE_2 ) { return 1 ; } else if ( VAR_1 instanceof TYPE_3 ) { return - 1 ; } return VAR_2 ; }\n", "fixed": "private int METHOD_1 ( final TYPE_1 first , final java.lang.Object VAR_1 ) { if ( VAR_1 instanceof TYPE_1 ) { return first . METHOD_2 ( ) . compareTo ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) ) ; } else if ( VAR_1 instanceof TYPE_3 ) { return - 1 ; } return 1 ; }\n"}
{"problem": "public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( VAR_1 == null ) { VAR_2 . add ( new TYPE_1 ( VAR_2 . get ( VAR_3 class ) . get ( ) ) ) ; } else { TYPE_2 VAR_4 = METHOD_2 ( ) ; TYPE_2 VAR_5 = TYPE_2 . METHOD_3 ( VAR_1 , VAR_6 , VAR_7 ) ; VAR_2 . add ( new TYPE_1 ( VAR_5 ) ) ; } }\n", "fixed": "public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( VAR_1 == null ) { VAR_2 . get ( ) . add ( new TYPE_1 ( VAR_2 . get ( ) . get ( VAR_3 class ) . get ( ) ) ) ; } else { TYPE_2 VAR_4 = METHOD_2 ( ) ; TYPE_2 VAR_5 = TYPE_2 . METHOD_3 ( VAR_1 , VAR_6 , VAR_7 ) ; VAR_2 . get ( ) . add ( new TYPE_1 ( VAR_5 ) ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 response ) { java.util.List < TYPE_4 > VAR_2 = new java.util.ArrayList < TYPE_4 > ( ) ; TYPE_5 VAR_3 = new TYPE_5 ( ) ; try { VAR_2 = VAR_3 . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_6 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } return new TYPE_1 ( STRING_2 , VAR_2 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 response ) { java.util.List < TYPE_4 > VAR_2 = new java.util.ArrayList < TYPE_4 > ( ) ; try { VAR_2 = VAR_3 . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_6 VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } return new TYPE_1 ( STRING_2 , VAR_2 ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . equals ( this . VAR_2 ) ) ) { TYPE_2 VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( this ) ; VAR_4 . add ( VAR_3 ) ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . equals ( this . VAR_2 ) ) ) { TYPE_2 VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_3 . METHOD_2 ( this ) ; VAR_4 . add ( VAR_3 ) ; return false ; } return true ; }\n"}
{"problem": "public double METHOD_1 ( double VAR_1 , double VAR_2 , double VAR_3 ) { VAR_1 = this . METHOD_2 ( this . a , this . b ) ; VAR_2 = this . METHOD_2 ( this . a , this . c ) ; VAR_3 = this . METHOD_2 ( this . b , this . c ) ; return ( ( VAR_1 + VAR_2 ) + VAR_3 ) / INT_1 ; }\n", "fixed": "public double METHOD_1 ( ) { double VAR_1 = this . METHOD_2 ( this . a , this . b ) ; double VAR_2 = this . METHOD_2 ( this . a , this . c ) ; double VAR_3 = this . METHOD_2 ( this . b , this . c ) ; return ( ( VAR_1 + VAR_2 ) + VAR_3 ) / INT_1 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_3 ) != null ) { int i = 0 ; for ( TYPE_2 VAR_4 : VAR_3 ) { if ( VAR_1 . equals ( VAR_4 . getName ( ) ) ) { VAR_3 . set ( i , VAR_2 ) ; break ; } i ++ ; } } return this ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { int i = 0 ; for ( TYPE_2 VAR_4 : VAR_3 ) { if ( VAR_1 . equals ( VAR_4 . getName ( ) ) ) { VAR_3 . set ( i , VAR_2 ) ; break ; } i ++ ; } return this ; }\n"}
{"problem": "private static void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; java.lang.System.out.println ( TYPE_2 . METHOD_1 ( VAR_2 , VAR_3 ) ) ; }\n", "fixed": "private static double METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; return TYPE_2 . METHOD_1 ( VAR_2 , VAR_3 ) ; }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 < java.lang.Integer , java.lang.String > VAR_1 = new TYPE_1 < java.lang.Integer , java.lang.String > ( ) ; VAR_1 . add ( INT_1 , STRING_1 ) ; VAR_1 . add ( INT_2 , STRING_2 ) ; VAR_1 . add ( INT_3 , STRING_3 ) ; VAR_1 . add ( INT_4 , STRING_4 ) ; VAR_2 . METHOD_1 ( STRING_5 , VAR_1 . METHOD_2 ( INT_5 ) ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 < java.lang.Integer , java.lang.String > VAR_1 = new TYPE_1 < java.lang.Integer , java.lang.String > ( ) ; VAR_1 . add ( INT_1 , STRING_1 ) ; VAR_1 . add ( INT_2 , STRING_2 ) ; VAR_1 . add ( INT_3 , STRING_3 ) ; VAR_1 . add ( INT_4 , STRING_4 ) ; VAR_2 . METHOD_1 ( STRING_5 , VAR_1 . size ( INT_1 ) ) ; }\n"}
{"problem": "public void start ( java.lang.String name ) { METHOD_1 ( ) ; try { TYPE_1 message = new TYPE_1 ( ) ; message . put ( \"name\" , name ) ; VAR_1 . METHOD_2 ( STRING_1 , message ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 . execute ( new TYPE_3 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } ) ; }\n", "fixed": "public void start ( java.lang.String name ) { try { TYPE_1 message = new TYPE_1 ( ) ; message . put ( \"name\" , name ) ; VAR_1 . METHOD_2 ( STRING_1 , message ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 . execute ( new TYPE_3 ( ) { public void METHOD_4 ( ) { METHOD_1 ( ) ; } } ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) . size ( ) ) == 1 ) { VAR_2 = true ; VAR_3 . METHOD_3 ( ( ( ( VAR_1 . METHOD_2 ( ) . get ( 0 ) ) + STRING_1 ) + ( VAR_4 ) ) ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) . size ( ) ) == 1 ) { VAR_2 = true ; VAR_3 . METHOD_3 ( ( ( ( VAR_1 . METHOD_2 ( ) . get ( 0 ) . getName ( ) ) + STRING_1 ) + ( VAR_4 ) ) ) ; } }\n"}
{"problem": "protected static boolean METHOD_1 ( java.io.File VAR_1 ) { java.io.File VAR_2 = new java.io.File ( ( ( VAR_1 + ( VAR_3 ) ) + STRING_1 ) ) ; java.io.File [ ] VAR_4 = VAR_2 . METHOD_2 ( ( java.io.File VAR_5 , java.lang.String name ) - > { return name . toLowerCase ( ) . METHOD_3 ( STRING_2 ) ; } ) ; return ( VAR_4 . length ) > 0 ; }\n", "fixed": "protected static boolean METHOD_1 ( java.io.File VAR_1 ) { java.io.File VAR_2 = new java.io.File ( ( ( VAR_1 + ( VAR_3 ) ) + STRING_1 ) ) ; java.io.File [ ] VAR_4 = VAR_2 . METHOD_2 ( ( java.io.File VAR_5 , java.lang.String name ) - > name . toLowerCase ( ) . METHOD_3 ( STRING_2 ) ) ; return ( VAR_4 . length ) > 0 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { java.util.Random VAR_1 = new java.util.Random ( ) ; if ( VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { if ( ( VAR_1 . METHOD_3 ( INT_1 ) ) == 0 ) { VAR_3 . show ( ) ; } else { METHOD_4 ( ) ; } } else { METHOD_4 ( ) ; } } else { METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { java.util.Random VAR_1 = new java.util.Random ( ) ; if ( VAR_2 ) { if ( VAR_3 . METHOD_2 ( ) ) { if ( ( VAR_1 . METHOD_3 ( INT_1 ) ) == 0 ) { VAR_3 . show ( ) ; } } } METHOD_4 ( ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < java.lang.Long > VAR_1 ) throws TYPE_2 { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList ( ) ; for ( java.lang.Long VAR_3 : VAR_4 ) { VAR_2 . add ( METHOD_2 ( VAR_3 ) ) ; } return VAR_2 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < java.lang.Long > VAR_4 ) throws TYPE_2 { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList ( ) ; for ( java.lang.Long VAR_3 : VAR_4 ) { VAR_2 . add ( METHOD_2 ( VAR_3 ) ) ; } return VAR_2 ; }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( long VAR_1 , TYPE_2 VAR_2 , TYPE_2 to , int VAR_3 , TYPE_3 VAR_4 ) { TYPE_4 . METHOD_2 ( VAR_2 , to ) ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , VAR_2 , to , 1 , VAR_4 ) ; VAR_6 . add ( VAR_5 ) ; VAR_7 . add ( VAR_5 ) ; return VAR_5 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( long VAR_1 , TYPE_2 VAR_2 , TYPE_2 to , int VAR_3 , TYPE_3 VAR_4 ) { TYPE_4 . METHOD_2 ( VAR_2 , to ) ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , VAR_2 , to , VAR_3 , VAR_4 ) ; VAR_6 . add ( VAR_5 ) ; VAR_7 . add ( VAR_5 ) ; return VAR_5 ; }\n"}
{"problem": "public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; if ( context instanceof TYPE_1 ) VAR_1 = ( ( TYPE_1 ) ( context ) ) ; else throw new TYPE_2 ( ( ( context . toString ( ) ) + STRING_1 ) ) ; if ( ( VAR_2 ) != null ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_2 . METHOD_2 ( VAR_4 ) ) ) ; if ( VAR_3 != null ) VAR_5 = ( ( TYPE_3 ) ( VAR_2 . METHOD_2 ( VAR_4 ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; if ( context instanceof TYPE_1 ) VAR_1 = ( ( TYPE_1 ) ( context ) ) ; else throw new TYPE_2 ( ( ( context . toString ( ) ) + STRING_1 ) ) ; }\n"}
{"problem": "public synchronized void add ( TYPE_1 key , TYPE_2 VAR_1 ) { if ( ( VAR_2 . size ( ) ) == ( VAR_3 ) ) { METHOD_1 ( ) ; } if ( VAR_2 . METHOD_2 ( key ) ) { METHOD_3 ( VAR_2 . get ( key ) ) ; } VAR_2 . put ( key , METHOD_4 ( key , VAR_1 ) ) ; }\n", "fixed": "public synchronized void add ( TYPE_1 key , TYPE_2 VAR_1 ) { if ( ( ( VAR_2 . size ( ) ) == ( VAR_3 ) ) && ( ! ( VAR_2 . METHOD_2 ( key ) ) ) ) { METHOD_1 ( ) ; } remove ( key ) ; VAR_2 . put ( key , METHOD_4 ( key , VAR_1 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 index , TYPE_2 c , int VAR_1 , java.util.ArrayList < TYPE_3 > VAR_2 ) { TYPE_4 type = TYPE_5 . METHOD_2 ( c . type ( ) ) ; VAR_2 . add ( new TYPE_6 ( c . METHOD_3 ( 0 ) , type ) ) ; TYPE_7 VAR_3 = new TYPE_7 ( type ) ; VAR_2 . add ( new TYPE_8 ( VAR_4 , STRING_1 , VAR_3 , VAR_5 ) ) ; VAR_2 . add ( new TYPE_9 ( c . target ( ) , type ) ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 index , TYPE_2 c , int VAR_1 , java.util.ArrayList < TYPE_3 > VAR_2 ) { TYPE_4 type = METHOD_2 ( c . type ( ) ) ; VAR_2 . add ( new TYPE_6 ( c . METHOD_3 ( 0 ) , type ) ) ; TYPE_7 VAR_3 = new TYPE_7 ( type ) ; VAR_2 . add ( new TYPE_8 ( VAR_4 , STRING_1 , VAR_3 , VAR_5 ) ) ; VAR_2 . add ( new TYPE_9 ( c . target ( ) , type ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { TYPE_1 VAR_3 = VAR_2 . get ( i ) ; VAR_4 . add ( new TYPE_3 ( VAR_3 , this ) ) ; METHOD_1 ( VAR_3 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { TYPE_1 VAR_3 = VAR_2 . get ( i ) ; VAR_4 . add ( new TYPE_3 ( VAR_3 , this ) ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) . METHOD_7 ( VAR_1 . METHOD_8 ( ) , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_9 ( ) ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 = METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) . METHOD_7 ( VAR_1 . METHOD_8 ( ) , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_9 ( ) ) ; }\n"}
{"problem": "public int METHOD_1 ( java.io.FileOutputStream VAR_1 , java.io.FileOutputStream VAR_2 ) { if ( ( VAR_3 ) == null ) return - 1 ; int result = 0 ; if ( ( VAR_3 . METHOD_2 ( ) ) > INT_1 ) { TYPE_1 . METHOD_3 ( ) ; if ( ( VAR_4 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ) == true ) { result = 1 ; } if ( VAR_1 != null ) METHOD_6 ( VAR_1 ) ; if ( VAR_2 != null ) { METHOD_7 ( VAR_2 ) ; } } return result ; }\n", "fixed": "public int METHOD_1 ( java.io.FileOutputStream VAR_1 , java.io.FileOutputStream VAR_2 ) { if ( ( VAR_3 ) == null ) return - 1 ; int result = 0 ; if ( ( VAR_3 . METHOD_2 ( ) ) > INT_1 ) { if ( ( VAR_4 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ) == true ) { result = 1 ; } if ( VAR_1 != null ) METHOD_6 ( VAR_1 ) ; if ( VAR_2 != null ) { METHOD_7 ( VAR_2 ) ; } } return result ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . METHOD_3 ( position , ( ! ( VAR_2 . METHOD_4 ( ) ) ) ) ; VAR_2 . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( VAR_5 , ( ( ( STRING_1 + position ) + STRING_2 ) + ( VAR_2 . METHOD_4 ( ) ) ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 . METHOD_3 ( ( position - 1 ) , ( ! ( VAR_2 . METHOD_4 ( ) ) ) ) ; VAR_2 . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( VAR_5 , ( ( ( STRING_1 + position ) + STRING_2 ) + ( VAR_2 . METHOD_4 ( ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( FLOAT_1 , FLOAT_1 , FLOAT_1 , 1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ( ( text ) + \"\\n\" ) ) ; text = STRING_1 ; VAR_5 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( float VAR_1 ) { VAR_2 . METHOD_2 ( FLOAT_1 , FLOAT_1 , FLOAT_1 , 1 ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; if ( ! ( text . equals ( STRING_1 ) ) ) VAR_4 . METHOD_4 ( ( ( text ) + \"\\n\" ) ) ; text = STRING_1 ; VAR_5 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 step ) { for ( TYPE_1 VAR_1 : step . METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_1 ) ) { if ( ( VAR_1 . METHOD_4 ( ) ) && ( VAR_1 . METHOD_5 ( ) ) ) { ( counter ) ++ ; } } else { METHOD_1 ( VAR_1 ) ; } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 step ) { if ( ( step . METHOD_4 ( ) ) && ( step . METHOD_5 ( ) ) ) { ( counter ) ++ ; } for ( TYPE_1 VAR_1 : step . METHOD_2 ( ) ) { METHOD_1 ( VAR_1 ) ; } }\n"}
{"problem": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { java.util.HashMap < java.lang.String , TYPE_1 > VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { for ( java.lang.String key : VAR_2 . METHOD_2 ( ) ) { TYPE_1 VAR_4 = VAR_2 . get ( key ) ; if ( VAR_4 != null ) { return VAR_4 . METHOD_1 ( ) ; } else { TYPE_2 . METHOD_3 ( ( ( STRING_1 + key ) + STRING_2 ) ) ; } } } return false ; }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { java.util.Map < java.lang.String , TYPE_1 > VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { for ( java.lang.String key : VAR_2 . METHOD_2 ( ) ) { TYPE_1 VAR_4 = VAR_2 . get ( key ) ; if ( VAR_4 != null ) { return VAR_4 . METHOD_1 ( ) ; } else { TYPE_2 . METHOD_3 ( ( ( STRING_1 + key ) + STRING_2 ) ) ; } } } return false ; }\n"}
{"problem": "public boolean execute ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { switch ( VAR_1 . METHOD_1 ( ) ) { case VAR_3 : VAR_1 . METHOD_2 ( VAR_4 ) ; break ; case VAR_5 : VAR_1 . METHOD_2 ( VAR_6 ) ; break ; case VAR_7 : VAR_1 . METHOD_2 ( VAR_8 ) ; break ; case VAR_9 : VAR_1 . METHOD_2 ( VAR_10 ) ; break ; } return true ; }\n", "fixed": "public boolean execute ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { switch ( VAR_1 . METHOD_1 ( ) ) { case VAR_3 : VAR_1 . METHOD_2 ( VAR_4 ) ; break ; case VAR_5 : VAR_1 . METHOD_2 ( VAR_8 ) ; break ; case VAR_7 : VAR_1 . METHOD_2 ( VAR_6 ) ; break ; case VAR_9 : VAR_1 . METHOD_2 ( VAR_10 ) ; break ; } return true ; }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; TYPE_2 time = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( time ) ; VAR_1 . METHOD_1 ( time , 1 , 1 , VAR_3 ) ; VAR_1 . METHOD_1 ( VAR_2 , 1 , 1 , VAR_3 ) ; new java.lang.Thread ( VAR_2 ) . start ( ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_1 . METHOD_1 ( VAR_2 , 1 , 1 , VAR_3 ) ; new java.lang.Thread ( VAR_2 ) . start ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = VAR_2 ; TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_4 VAR_3 = TYPE_3 . METHOD_3 ( STRING_2 ) ; TYPE_5 VAR_4 = VAR_3 . METHOD_4 ( ) ; TYPE_2 VAR_5 = TYPE_6 . METHOD_5 ( VAR_3 , VAR_4 , STRING_3 , VAR_6 ) ; TYPE_7 . assertEquals ( VAR_1 , VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = VAR_2 ; TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_4 VAR_3 = TYPE_3 . METHOD_3 ( STRING_2 ) ; TYPE_2 VAR_5 = TYPE_6 . METHOD_5 ( VAR_3 , STRING_3 , VAR_6 ) ; TYPE_7 . assertEquals ( VAR_1 , VAR_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; final TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 class ) ; final TYPE_4 VAR_4 = TYPE_4 . METHOD_4 ( TYPE_1 . METHOD_2 ( STRING_2 ) , STRING_3 , VAR_2 , TYPE_5 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( VAR_2 ) . update ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) { final TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 class ) ; final TYPE_4 VAR_4 = TYPE_4 . METHOD_4 ( TYPE_1 . METHOD_2 ( STRING_2 ) , STRING_3 , VAR_2 , TYPE_5 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( VAR_2 ) . update ( VAR_4 ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 . add ( VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) ) ; VAR_2 . remove ( ( ( VAR_2 . size ( ) ) - 1 ) ) ; } }\n", "fixed": "protected void METHOD_1 ( ) { for ( int i = 0 ; i < 1 ; i ++ ) { VAR_1 . add ( VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) ) ; VAR_2 . remove ( ( ( VAR_2 . size ( ) ) - 1 ) ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 response , java.util.Map < java.lang.String , java.lang.Object > VAR_3 ) { try { VAR_4 . METHOD_1 ( VAR_1 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_4 VAR_5 ) { METHOD_3 ( VAR_1 , VAR_5 ) ; } return METHOD_4 ( VAR_1 , VAR_2 , response , VAR_3 ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 response , java.util.Map < java.lang.String , java.lang.Object > VAR_3 ) { try { VAR_4 . METHOD_1 ( VAR_1 ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_4 VAR_5 ) { METHOD_3 ( VAR_1 , VAR_5 ) ; } return METHOD_4 ( VAR_1 , VAR_2 , response , VAR_3 ) ; }\n"}
{"problem": "public double METHOD_1 ( ) { double VAR_1 = 0 ; if ( ( VAR_2 ) != null ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) { for ( java.lang.Double VAR_3 : VAR_2 ) { VAR_1 += VAR_3 ; } int size = VAR_2 . size ( ) ; if ( size != 0 ) { VAR_1 /= size ; return VAR_1 ; } } } return 0 ; }\n", "fixed": "public double METHOD_1 ( ) { double VAR_1 = 0 ; int size = 0 ; if ( ( VAR_2 ) != null ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) { for ( java.lang.Double VAR_3 : VAR_2 ) { if ( VAR_3 > 0 ) { VAR_1 += VAR_3 ; size ++ ; } } if ( size != 0 ) { VAR_1 /= size ; return VAR_1 ; } } } return 0 ; }\n"}
{"problem": "public TYPE_1 remove ( final int index ) { this . METHOD_1 ( ) ; this . METHOD_2 ( this . value . get ( index ) , null ) ; java.util.List < TYPE_1 > VAR_1 = null ; if ( ! ( this . VAR_2 . isEmpty ( ) ) ) VAR_1 = TYPE_2 . METHOD_3 ( this . value ) ; final TYPE_1 VAR_3 = this . value . remove ( index ) ; this . METHOD_4 ( VAR_1 , this . value ) ; return VAR_3 ; }\n", "fixed": "public TYPE_1 remove ( final int index ) { java.util.List < TYPE_1 > VAR_1 = null ; if ( ! ( this . VAR_2 . isEmpty ( ) ) ) VAR_1 = TYPE_2 . METHOD_3 ( this . value ) ; final TYPE_1 VAR_3 = this . value . remove ( index ) ; this . METHOD_1 ( ) ; this . METHOD_2 ( VAR_3 , null ) ; this . METHOD_4 ( VAR_1 , this . value ) ; return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = this . VAR_1 ; if ( ( VAR_2 > ( - INT_1 ) ) && ( VAR_2 <= 0 ) ) { this . VAR_3 = VAR_4 ; } else if ( ( VAR_2 > 0 ) && ( VAR_2 <= INT_1 ) ) { this . VAR_3 = VAR_5 ; } else if ( ( VAR_2 > INT_1 ) && ( VAR_2 <= INT_2 ) ) { this . VAR_3 = VAR_6 ; } }\n", "fixed": "public void METHOD_1 ( ) { int VAR_2 = this . VAR_1 ; if ( ( VAR_2 > ( - INT_1 ) ) && ( VAR_2 <= 0 ) ) { this . VAR_3 = VAR_4 ; } else if ( ( VAR_2 > 0 ) && ( VAR_2 <= INT_1 ) ) { this . VAR_3 = VAR_5 ; } else if ( ( VAR_2 > INT_1 ) && ( VAR_2 <= INT_2 ) ) { this . VAR_3 = VAR_6 ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . remove ( VAR_1 . getId ( ) ) ; VAR_4 . remove ( VAR_1 ) ; METHOD_3 ( ) ; return true ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . remove ( VAR_1 . getId ( ) ) ; for ( TYPE_1 t : VAR_4 ) { if ( ( t . getId ( ) ) == ( VAR_1 . getId ( ) ) ) { VAR_4 . remove ( t ) ; break ; } } METHOD_3 ( ) ; return true ; } return false ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . add ( VAR_2 . METHOD_3 ( ( ! ( VAR_3 . METHOD_4 ( ) ) ? true : false ) , VAR_4 , VAR_5 , VAR_6 , false , true , path ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . add ( VAR_2 . METHOD_3 ( ( ! ( VAR_3 . METHOD_4 ( ) ) ) , VAR_4 , VAR_5 , VAR_6 , false , true , path ) ) ; }\n"}
{"problem": "public static long METHOD_1 ( long i ) { if ( i < INT_1 ) ; return i ; long a = 0 ; long b = 1 ; long VAR_1 = 1 ; for ( long x = INT_1 ; x <= i ; x ++ ) { VAR_1 = a + b ; a = b ; b = VAR_1 ; } return VAR_1 ; }\n", "fixed": "public static long METHOD_1 ( long i ) { if ( i < INT_1 ) return i ; long a = 0 ; long b = 1 ; long VAR_1 = 1 ; for ( long x = INT_1 ; x <= i ; x ++ ) { VAR_1 = a + b ; a = b ; b = VAR_1 ; } return VAR_1 ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) ) ; VAR_5 = METHOD_5 ( ) ; VAR_3 . METHOD_6 ( VAR_4 , ( ( TYPE_3 ) ( METHOD_7 ( VAR_6 ) ) ) ) ; android.content.Intent i = new android.content.Intent ( METHOD_8 ( ) , VAR_7 class ) ; i . METHOD_9 ( STRING_1 , STRING_2 ) ; METHOD_8 ( ) . METHOD_10 ( i ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) ) ; VAR_5 = METHOD_5 ( ) ; VAR_3 . METHOD_6 ( VAR_4 , ( ( TYPE_3 ) ( METHOD_7 ( VAR_6 ) ) ) ) ; android.content.Intent i = new android.content.Intent ( METHOD_8 ( ) , VAR_7 class ) ; METHOD_8 ( ) . METHOD_10 ( i ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } catch ( java.lang.ClassNotFoundException | TYPE_2 | TYPE_3 | TYPE_4 VAR_1 ) { VAR_1 . METHOD_4 ( ) ; } METHOD_5 ( VAR_2 ) ; VAR_3 = new TYPE_5 ( ) ; VAR_3 . METHOD_6 ( STRING_1 , VAR_4 ) ; VAR_3 . METHOD_6 ( STRING_2 , VAR_5 ) ; add ( VAR_3 ) ; METHOD_7 ( null ) ; METHOD_8 ( true ) ; METHOD_9 ( ) ; METHOD_10 ( true ) ; }\n", "fixed": "private void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } catch ( java.lang.ClassNotFoundException | TYPE_2 | TYPE_3 | TYPE_4 VAR_1 ) { VAR_1 . METHOD_4 ( ) ; } METHOD_5 ( VAR_2 ) ; VAR_3 = new TYPE_5 ( ) ; VAR_3 . METHOD_6 ( STRING_1 , VAR_4 ) ; VAR_3 . METHOD_6 ( STRING_2 , VAR_5 ) ; add ( VAR_3 ) ; METHOD_7 ( null ) ; METHOD_8 ( false ) ; METHOD_9 ( ) ; METHOD_10 ( true ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 , TYPE_2 { if ( TYPE_3 . METHOD_2 ( VAR_2 ) ) { throw new TYPE_1 ( ) ; } if ( ! ( TYPE_3 . METHOD_2 ( VAR_2 ) ) ) { throw new TYPE_2 ( ) ; } VAR_3 . put ( VAR_2 , VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 , TYPE_2 { if ( TYPE_3 . METHOD_2 ( VAR_2 ) ) { throw new TYPE_1 ( ) ; } if ( ! ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) { throw new TYPE_2 ( ) ; } VAR_3 . put ( VAR_2 , VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( boolean VAR_1 ) { if ( ( this . state ) != ( VAR_2 ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . state = VAR_3 ; this . VAR_4 . METHOD_2 ( STRING_2 , VAR_2 , this . state ) ; if ( VAR_1 ) { int VAR_5 = METHOD_3 ( ) ; METHOD_4 ( ) ; this . VAR_4 . METHOD_2 ( STRING_3 , VAR_5 , ( VAR_5 + 1 ) ) ; } }\n", "fixed": "public void METHOD_1 ( boolean VAR_1 ) { if ( ( this . state ) != ( VAR_2 ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . state = VAR_3 ; this . VAR_4 . METHOD_2 ( STRING_2 , VAR_2 , this . state ) ; if ( VAR_1 ) { int VAR_5 = METHOD_3 ( ) ; METHOD_4 ( ) ; } }\n"}
{"problem": "protected final TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 , final TYPE_3 VAR_3 , final TYPE_4 [ ] VAR_4 , final long VAR_5 ) throws TYPE_5 { if ( ( VAR_6 ) == ( - 1 ) ) { VAR_6 = VAR_1 . METHOD_2 ( ) ; } final TYPE_6 VAR_7 = new TYPE_6 ( VAR_2 , METHOD_3 ( ) , VAR_3 ) ; final TYPE_7 VAR_8 = new TYPE_7 ( VAR_6 , VAR_7 , VAR_4 ) ; return METHOD_4 ( VAR_1 , VAR_8 , VAR_5 ) ; }\n", "fixed": "protected final TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 , final TYPE_3 VAR_3 , final TYPE_4 [ ] VAR_4 , final long VAR_5 ) throws TYPE_5 { VAR_6 = VAR_1 . METHOD_2 ( ) ; final TYPE_6 VAR_7 = new TYPE_6 ( VAR_2 , METHOD_3 ( ) , VAR_3 ) ; final TYPE_7 VAR_8 = new TYPE_7 ( VAR_6 , VAR_7 , VAR_4 ) ; return METHOD_4 ( VAR_1 , VAR_8 , VAR_5 ) ; }\n"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 , java.lang.String [ ] args ) { return ( args.length ) == 1 ? TYPE_2 . METHOD_2 ( args , new java.lang.String [ ] { STRING_1 , STRING_2 } ) : ( ( args.length ) > INT_1 ) && ( args [ 1 ] . equals ( STRING_1 ) ) ? TYPE_2 . METHOD_2 ( args , new java.lang.String [ ] { STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 } ) : null ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 , java.lang.String [ ] args ) { return ( args.length ) == 1 ? METHOD_2 ( args , new java.lang.String [ ] { STRING_1 , STRING_2 } ) : ( ( args.length ) > INT_1 ) && ( args [ 1 ] . equals ( STRING_1 ) ) ? METHOD_2 ( args , new java.lang.String [ ] { STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 } ) : null ; }\n"}
{"problem": "public void METHOD_1 ( ) { int size = VAR_1 ; TYPE_1 < TYPE_2 > VAR_2 = ( ( TYPE_1 < TYPE_2 > ) ( TYPE_3 . METHOD_2 ( VAR_3 class ) ) ) ; TYPE_3 . METHOD_3 ( VAR_2 . size ( ) ) . METHOD_4 ( size ) ; TYPE_4 . assertTrue ( VAR_4 . METHOD_5 ( VAR_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { int size = ( VAR_1 ) - 1 ; TYPE_1 < TYPE_2 > VAR_2 = ( ( TYPE_1 < TYPE_2 > ) ( TYPE_3 . METHOD_2 ( VAR_3 class ) ) ) ; TYPE_3 . METHOD_3 ( VAR_2 . size ( ) ) . METHOD_4 ( size ) ; TYPE_4 . assertTrue ( VAR_4 . METHOD_5 ( VAR_2 ) ) ; }\n"}
{"problem": "private int METHOD_1 ( ) { final TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; int id = VAR_1 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 ) ; if ( id == 0 ) id = VAR_3 ; try { return VAR_1 . METHOD_4 ( id ) ; } catch ( TYPE_1 VAR_4 ) { assert false : STRING_4 ; return ( ( int ) ( TYPE_2 . METHOD_5 ( VAR_5 , VAR_6 , VAR_1 . METHOD_6 ( ) ) ) ) ; } }\n", "fixed": "private int METHOD_1 ( ) { final TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; int id = VAR_3 ; try { return VAR_1 . METHOD_4 ( id ) ; } catch ( TYPE_1 VAR_4 ) { assert false : STRING_4 ; return ( ( int ) ( TYPE_2 . METHOD_5 ( VAR_5 , VAR_6 , VAR_1 . METHOD_6 ( ) ) ) ) ; } }\n"}
{"problem": "protected void METHOD_1 ( java.lang.Boolean result ) { try { if ( ( VAR_1 ) == null ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; return ; } if ( VAR_1 . METHOD_3 ( ) ) VAR_2 . METHOD_4 ( VAR_5 , VAR_6 ) ; else VAR_2 . METHOD_2 ( VAR_1 . METHOD_5 ( ) , VAR_4 ) ; } catch ( java.lang.Exception VAR_7 ) { } }\n", "fixed": "protected void METHOD_1 ( java.lang.Boolean result ) { try { if ( ( VAR_1 ) == null ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; return ; } if ( VAR_1 . METHOD_3 ( ) ) if ( result ) VAR_2 . METHOD_4 ( VAR_5 , VAR_6 ) ; else VAR_2 . METHOD_2 ( VAR_1 . METHOD_5 ( ) , VAR_4 ) ; else VAR_2 . METHOD_2 ( VAR_1 . METHOD_5 ( ) , VAR_4 ) ; } catch ( java.lang.Exception VAR_7 ) { } }\n"}
{"problem": "private void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_3 ) { try { for ( int i = 0 ; i < ( VAR_4 . size ( ) ) ; i ++ ) { VAR_2 . add ( VAR_4 . get ( i ) . VAR_5 ) ; } } catch ( TYPE_1 VAR_6 ) { } } VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_7 . METHOD_4 ( VAR_2 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_3 ) { for ( int i = 0 ; i < ( VAR_4 . size ( ) ) ; i ++ ) { VAR_2 . add ( VAR_4 . get ( i ) . VAR_5 ) ; } } VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_7 . METHOD_4 ( VAR_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { if ( ( ( ( ( this . METHOD_2 ( ) ) || ( this . METHOD_3 ( ) ) ) || ( this . METHOD_4 ( ) ) ) || ( VAR_1 < 0 ) ) || ( VAR_1 < ( VAR_2 ) ) ) { throw new TYPE_1 ( STRING_1 ) ; } this . VAR_3 = false ; this . VAR_4 = false ; this . VAR_5 = true ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) throws TYPE_1 { if ( ( ( ( ( this . METHOD_2 ( ) ) || ( this . METHOD_3 ( ) ) ) || ( this . METHOD_4 ( ) ) ) || ( VAR_1 < 0 ) ) || ( VAR_1 < ( VAR_2 ) ) ) { throw new TYPE_1 ( STRING_1 ) ; } else { this . VAR_3 = false ; this . VAR_4 = false ; this . VAR_5 = true ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . build ( ) ; METHOD_4 ( VAR_2 ) ; if ( VAR_3 ) { TYPE_4 VAR_4 = METHOD_5 ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = VAR_2 . METHOD_6 ( ) ; VAR_5 . put ( VAR_6 , VAR_4 ) ; } return VAR_2 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . build ( ) ; METHOD_4 ( VAR_2 ) ; TYPE_4 VAR_4 = METHOD_5 ( VAR_3 ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = VAR_2 . METHOD_6 ( ) ; VAR_5 . put ( VAR_6 , VAR_4 ) ; return VAR_2 ; }\n"}
{"problem": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_1 . append ( STRING_1 ) . append ( VAR_2 ) ; VAR_1 . append ( java.lang.String.format ( STRING_2 , VAR_3 , VAR_4 ) ) ; if ( VAR_5 ) VAR_1 . append ( STRING_3 ) . append ( VAR_6 ) ; VAR_1 . append ( STRING_4 ) ; return VAR_1 . toString ( ) ; }\n", "fixed": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( java.lang.String.format ( STRING_2 , VAR_3 , VAR_4 ) ) ; VAR_1 . append ( STRING_3 ) . append ( VAR_6 ) ; VAR_1 . append ( STRING_4 ) ; return VAR_1 . toString ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { for ( int VAR_1 = 0 ; VAR_1 < ( VAR_2 . size ( ) ) ; VAR_1 ++ ) { METHOD_2 ( VAR_1 ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; VAR_3 = null ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { for ( int VAR_1 = 0 ; VAR_1 < ( VAR_2 . size ( ) ) ; VAR_1 ++ ) { METHOD_2 ( VAR_1 ) ; } } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_1 ( ) ; VAR_3 = null ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) != null ) && ( VAR_3 ) ) try { VAR_2 . start ( ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; } catch ( java.lang.Exception VAR_4 ) { } if ( ( VAR_5 ) != null ) VAR_5 . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_2 . start ( ) ; VAR_2 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; } catch ( java.lang.Exception VAR_4 ) { } if ( ( VAR_5 ) != null ) VAR_5 . METHOD_5 ( ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.util.List < java.lang.Integer > VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , int VAR_4 , TYPE_4 VAR_5 ) { TYPE_1 VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_2 ( new java.util.ArrayList < java.lang.Integer > ( VAR_1 ) ) ; VAR_6 . METHOD_3 ( new TYPE_2 ( VAR_2 ) ) ; VAR_6 . METHOD_4 ( new TYPE_3 ( VAR_3 ) ) ; VAR_6 . METHOD_5 ( VAR_4 ) ; VAR_6 . METHOD_6 ( VAR_5 ) ; return VAR_6 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( java.util.List < java.lang.Integer > VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , int VAR_4 , TYPE_4 VAR_5 ) { TYPE_1 VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_2 ( new java.util.ArrayList < java.lang.Integer > ( VAR_1 ) ) ; VAR_6 . METHOD_3 ( new TYPE_2 ( VAR_2 ) ) ; VAR_6 . METHOD_4 ( new TYPE_3 ( VAR_3 ) ) ; VAR_6 . METHOD_5 ( VAR_4 ) ; VAR_6 . METHOD_6 ( VAR_5 ) ; return VAR_6 ; }\n"}
{"problem": "TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 result = new TYPE_1 ( ) ; VAR_2 = VAR_1 ; { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_3 . setText ( STRING_1 ) ; float VAR_4 = ( ( float ) ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; VAR_5 = ( ( float ) ( VAR_3 . METHOD_5 ( ) ) ) ; VAR_6 = VAR_4 - ( VAR_5 ) ; } return result ; }\n", "fixed": "TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 result = new TYPE_1 ( ) ; VAR_2 = VAR_1 ; if ( VAR_1 != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; VAR_3 . setText ( STRING_1 ) ; float VAR_4 = ( ( float ) ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; VAR_5 = ( ( float ) ( VAR_3 . METHOD_5 ( ) ) ) ; VAR_6 = VAR_4 - ( VAR_5 ) ; } return result ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { if ( VAR_1 . equals ( STRING_1 ) ) return STRING_2 + ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ; else if ( VAR_2 . equals ( STRING_1 ) ) return TYPE_2 . METHOD_2 ( VAR_1 ) ; else return ( ( TYPE_2 . METHOD_2 ( VAR_1 ) ) + STRING_2 ) + ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { if ( VAR_1 . equals ( STRING_1 ) ) return STRING_2 + ( METHOD_2 ( VAR_2 ) ) ; else if ( VAR_2 . equals ( STRING_1 ) ) return METHOD_2 ( VAR_1 ) ; else return ( ( METHOD_2 ( VAR_1 ) ) + STRING_2 ) + ( METHOD_2 ( VAR_2 ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . put ( \"id\" , VAR_2 ) ; VAR_1 . put ( STRING_1 , VAR_3 ) ; VAR_1 . put ( STRING_2 , VAR_4 ) ; VAR_1 . put ( STRING_3 , VAR_5 . METHOD_2 ( ) ) ; VAR_1 . put ( STRING_4 , VAR_6 ) ; VAR_1 . put ( STRING_5 , VAR_7 ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . put ( \"id\" , VAR_2 ) ; VAR_1 . put ( STRING_1 , VAR_3 . METHOD_1 ( ) ) ; VAR_1 . put ( STRING_2 , VAR_4 . METHOD_1 ( ) ) ; VAR_1 . put ( STRING_3 , VAR_5 . METHOD_2 ( ) ) ; VAR_1 . put ( STRING_4 , VAR_6 ) ; VAR_1 . put ( STRING_5 , VAR_7 ) ; return VAR_1 ; }\n"}
{"problem": "public java.util.Collection < TYPE_1 > METHOD_1 ( java.lang.String status ) { java.util.Collection < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > VAR_2 : TYPE_2 . METHOD_2 ( ) ) { if ( ( VAR_2 . METHOD_3 ( ) ) != status ) { VAR_1 . METHOD_4 ( METHOD_5 ( VAR_2 . getValue ( ) ) ) ; } } return VAR_1 ; }\n", "fixed": "public java.util.Collection < TYPE_1 > METHOD_1 ( java.lang.String status ) { java.util.Collection < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > VAR_2 : TYPE_2 . METHOD_2 ( ) ) { if ( ! ( VAR_2 . METHOD_3 ( ) . equals ( status ) ) ) { VAR_1 . METHOD_4 ( METHOD_5 ( VAR_2 . METHOD_3 ( ) ) ) ; } } return VAR_1 ; }\n"}
{"problem": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { try { java.lang.String VAR_3 = VAR_4 . METHOD_3 ( ) ; VAR_5 = new java.lang.String ( VAR_3 ) ; java.lang.System.out.println ( VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { java.lang.System.err.println ( VAR_6 . toString ( ) ) ; } } }\n", "fixed": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { try { java.lang.String VAR_3 = VAR_4 . METHOD_3 ( ) ; VAR_5 = new java.lang.String ( VAR_3 ) ; java.lang.System.out.println ( VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { } } }\n"}
{"problem": "public static void METHOD_1 ( android.content.Context context ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( context , VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = TYPE_2 . METHOD_2 ( context , VAR_4 ) ; if ( VAR_3 != null ) { VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_6 . METHOD_3 ( VAR_3 ) ; } if ( VAR_1 != null ) { VAR_7 . METHOD_3 ( VAR_1 ) ; VAR_6 . METHOD_3 ( VAR_1 ) ; } }\n", "fixed": "private static void METHOD_1 ( android.content.Context context ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( context , VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = TYPE_2 . METHOD_2 ( context , VAR_4 ) ; if ( VAR_3 != null ) { VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_6 . METHOD_3 ( VAR_3 ) ; } if ( VAR_1 != null ) { VAR_7 . METHOD_3 ( VAR_1 ) ; VAR_6 . METHOD_3 ( VAR_1 ) ; } }\n"}
{"problem": "public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 , int VAR_4 , int height ) throws java.io.IOException { for ( TYPE_3 writer : TYPE_4 . METHOD_2 ( ) . METHOD_3 ( VAR_5 class ) ) { if ( VAR_1 . equals ( writer . METHOD_4 ( ) ) ) { writer . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , height ) ; } } throw new java.io.IOException ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 , int VAR_4 , int height ) throws java.io.IOException { for ( TYPE_3 writer : TYPE_4 . METHOD_2 ( ) . METHOD_3 ( VAR_5 class ) ) { if ( VAR_1 . equals ( writer . METHOD_4 ( ) ) ) { writer . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , height ) ; return ; } } throw new java.io.IOException ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; }\n"}
{"problem": "protected void METHOD_1 ( android.view.View VAR_1 , int position ) { if ( ! ( VAR_2 . get ( position ) ) ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , 0.0F ) ; } else { if ( VAR_3 . get ( position ) ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_4 . METHOD_3 ( ) ) ; } else { TYPE_1 . METHOD_2 ( VAR_1 , ( - ( VAR_4 . METHOD_3 ( ) ) ) ) ; } } }\n", "fixed": "protected void METHOD_1 ( android.view.View VAR_1 , int position ) { if ( ! ( VAR_2 . get ( position ) ) ) { TYPE_1 . METHOD_2 ( VAR_1 , 0.0F ) ; } else { if ( VAR_3 . get ( position ) ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_4 . METHOD_3 ( ) ) ; } else { TYPE_1 . METHOD_2 ( VAR_1 , ( - ( VAR_4 . METHOD_3 ( ) ) ) ) ; } } }\n"}
{"problem": "public boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) ; final TYPE_2 VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ; if ( ( VAR_6 ) >= ( VAR_7 ) ) { if ( VAR_1 . METHOD_4 ( ) ) return false ; } return ( VAR_4 . METHOD_5 ( ) ) == ( VAR_8 ) ; }\n", "fixed": "public boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) ; final TYPE_2 VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ; if ( VAR_1 . METHOD_4 ( ) ) return false ; return ( VAR_4 . METHOD_5 ( ) ) == ( VAR_8 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { VAR_2 = null ; if ( response . METHOD_2 ( ) ) { if ( ! ( VAR_3 ) ) TYPE_4 . METHOD_3 ( ) . METHOD_4 ( new TYPE_5 ( path , response . METHOD_5 ( ) ) ) ; TYPE_6 . METHOD_6 ( VAR_4 , STRING_1 ) ; } else { TYPE_6 . METHOD_6 ( VAR_4 , STRING_2 ) ; } VAR_5 . METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_2 > response ) { VAR_2 = null ; if ( response . METHOD_2 ( ) ) { if ( ! ( VAR_3 ) ) TYPE_4 . METHOD_3 ( ) . METHOD_4 ( new TYPE_5 ( path , response . METHOD_5 ( ) ) ) ; TYPE_6 . METHOD_6 ( VAR_4 , STRING_1 ) ; } else { TYPE_6 . METHOD_6 ( VAR_4 , STRING_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) != null ) { if ( event != null ) { VAR_1 . METHOD_2 ( new TYPE_2 ( this . VAR_2 ) , VAR_3 , event . METHOD_3 ( ) ) ; } else { VAR_1 . METHOD_2 ( new TYPE_2 ( this . VAR_2 ) , VAR_3 , null ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) != null ) { if ( event != null ) { VAR_1 . METHOD_2 ( this . VAR_2 , VAR_3 , event . METHOD_3 ( ) ) ; } else { VAR_1 . METHOD_2 ( this . VAR_2 , VAR_3 , null ) ; } } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 , double VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( java.lang.String.format ( VAR_4 , id ) ) ; VAR_3 . METHOD_2 ( 1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_5 ) ) ; return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 , double VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( java.lang.String.format ( VAR_4 , id ) ) ; VAR_3 . METHOD_2 ( id ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_5 ) ) ; return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 ) { TYPE_2 < TYPE_3 , TYPE_4 > VAR_3 = TYPE_5 . METHOD_2 ( ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { TYPE_3 VAR_5 = METHOD_3 ( VAR_4 , VAR_2 ) ; if ( VAR_3 . METHOD_4 ( VAR_5 ) ) { VAR_3 . remove ( VAR_5 ) ; } } }\n", "fixed": "public void METHOD_1 ( java.util.List < TYPE_3 > VAR_1 ) { TYPE_2 < TYPE_3 , TYPE_4 > VAR_3 = TYPE_5 . METHOD_2 ( ) ; for ( TYPE_3 VAR_5 : VAR_1 ) { if ( VAR_3 . METHOD_4 ( VAR_5 ) ) { VAR_3 . remove ( VAR_5 ) ; } } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; float VAR_3 = VAR_1 . METHOD_3 ( ) ; float VAR_4 = VAR_1 . METHOD_4 ( ) ; if ( ( ( VAR_5 ) != 1 ) || ( ( VAR_6 ) != 1 ) ) VAR_1 . getData ( ) . METHOD_5 ( VAR_5 , VAR_6 ) ; METHOD_6 ( ) ; if ( ( ( VAR_5 ) != 1 ) || ( ( VAR_6 ) != 1 ) ) VAR_1 . getData ( ) . METHOD_5 ( VAR_3 , VAR_4 ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; float VAR_3 = VAR_1 . METHOD_3 ( ) ; float VAR_4 = VAR_1 . METHOD_4 ( ) ; if ( ( ( VAR_5 ) != VAR_3 ) || ( ( VAR_6 ) != VAR_4 ) ) VAR_1 . getData ( ) . METHOD_5 ( VAR_5 , VAR_6 ) ; METHOD_6 ( ) ; if ( ( ( VAR_5 ) != VAR_3 ) || ( ( VAR_6 ) != VAR_4 ) ) VAR_1 . getData ( ) . METHOD_5 ( VAR_3 , VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( VAR_3 . isEmpty ( ) ) ? METHOD_2 ( VAR_1 ) : VAR_3 . get ( ( ( VAR_3 . size ( ) ) - 1 ) ) ; TYPE_1 VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_5 . METHOD_4 ( VAR_4 , VAR_1 ) ) { VAR_2 . add ( VAR_1 ) ; } else { METHOD_2 ( VAR_1 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_3 . isEmpty ( ) ) { METHOD_2 ( VAR_1 ) ; return ; } TYPE_2 VAR_2 = VAR_3 . get ( ( ( VAR_3 . size ( ) ) - 1 ) ) ; TYPE_1 VAR_4 = VAR_2 . METHOD_3 ( ) ; if ( VAR_5 . METHOD_4 ( VAR_4 , VAR_1 ) ) { VAR_2 . add ( VAR_1 ) ; } else { METHOD_2 ( VAR_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { final TYPE_2 < TYPE_3 > VAR_1 = METHOD_2 ( ) ; final TYPE_2 < TYPE_3 > VAR_2 = METHOD_3 ( VAR_1 , STRING_1 , STRING_2 ) ; assertThat ( VAR_2 . size ( ) , TYPE_4 . METHOD_4 ( 1 ) ) ; assertTrue ( VAR_2 . get ( 0 ) . getType ( ) . METHOD_5 ( STRING_3 ) ) ; assertThat ( VAR_2 . get ( 0 ) . METHOD_6 ( ) , TYPE_4 . METHOD_4 ( STRING_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { final TYPE_2 < TYPE_3 > VAR_1 = METHOD_2 ( ) ; final TYPE_2 < TYPE_3 > VAR_2 = METHOD_3 ( VAR_1 , STRING_2 , STRING_1 ) ; assertThat ( VAR_2 . size ( ) , TYPE_4 . METHOD_4 ( 1 ) ) ; assertThat ( VAR_2 . get ( 0 ) . getType ( ) , TYPE_4 . METHOD_4 ( STRING_2 ) ) ; assertTrue ( VAR_2 . get ( 0 ) . METHOD_6 ( ) . METHOD_5 ( STRING_3 ) ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_2 VAR_4 , java.lang.Boolean data , boolean VAR_5 ) { TYPE_3 VAR_6 = new TYPE_3 ( new TYPE_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; TYPE_5 VAR_7 = new TYPE_5 ( data ) ; TYPE_6 VAR_8 = new TYPE_6 ( VAR_6 , VAR_4 , VAR_7 ) ; TYPE_1 VAR_9 = new TYPE_1 ( TYPE_7 . METHOD_2 ( VAR_4 , VAR_5 ) , VAR_8 ) ; return VAR_9 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_2 VAR_4 , java.lang.Boolean data , boolean VAR_5 ) { TYPE_3 VAR_6 = new TYPE_3 ( new TYPE_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; TYPE_5 VAR_7 = new TYPE_5 ( data ) ; TYPE_6 VAR_8 = new TYPE_6 ( VAR_6 , VAR_4 , VAR_7 ) ; return new TYPE_1 ( TYPE_7 . METHOD_2 ( VAR_4 , VAR_5 ) , VAR_8 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . getText ( ) ; try { java.lang.Integer.parseInt ( VAR_2 ) ; } catch ( TYPE_2 VAR_4 ) { return ; } int VAR_5 = java.lang.Integer.parseInt ( VAR_2 ) ; VAR_6 = VAR_5 ; VAR_7 . METHOD_2 ( ( INT_1 / VAR_5 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . getText ( ) . trim ( ) ; try { int VAR_5 = java.lang.Integer.parseInt ( VAR_2 ) ; if ( VAR_5 <= 0 ) return ; VAR_6 = VAR_5 ; VAR_7 . METHOD_2 ( ( INT_1 / VAR_5 ) ) ; } catch ( TYPE_2 VAR_4 ) { } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_4 ) { if ( ( ( VAR_3 . x ) == ( VAR_2 . x ) ) && ( VAR_3 != VAR_1 ) ) return ; } VAR_4 . remove ( VAR_1 ) ; VAR_4 . add ( VAR_2 ) ; VAR_5 = false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_4 ) if ( ( ( VAR_3 . x ) == ( VAR_2 . x ) ) && ( VAR_3 != VAR_1 ) ) return false ; if ( ! ( VAR_4 . contains ( VAR_1 ) ) ) return false ; VAR_4 . remove ( VAR_1 ) ; VAR_4 . add ( VAR_2 ) ; VAR_5 = false ; return true ; }\n"}
{"problem": "public void start ( ) throws TYPE_1 { super . start ( ) ; if ( ( ( java.lang.Math.random ( ) ) * INT_1 ) >= INT_2 ) VAR_1 = VAR_2 ; else VAR_1 = VAR_3 ; METHOD_1 ( ) ; if ( ( METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_4 = CHAR_1 ; VAR_5 = CHAR_2 ; } else { VAR_5 = CHAR_2 ; VAR_4 = CHAR_1 ; } METHOD_3 ( ) ; }\n", "fixed": "public void start ( ) throws TYPE_1 { super . start ( ) ; if ( ( ( java.lang.Math.random ( ) ) * INT_1 ) >= INT_2 ) VAR_1 = VAR_2 ; else VAR_1 = VAR_3 ; VAR_1 = VAR_3 ; METHOD_1 ( ) ; if ( ( METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_4 = CHAR_1 ; VAR_5 = CHAR_2 ; } else { VAR_5 = CHAR_2 ; VAR_4 = CHAR_1 ; } METHOD_3 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; try { METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( java.lang.Long.parseLong ( VAR_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { METHOD_5 ( VAR_5 , VAR_4 . METHOD_6 ( ) ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; try { METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( java.lang.Long.parseLong ( VAR_1 ) ) ; } catch ( java.lang.Exception VAR_4 ) { METHOD_5 ( VAR_5 , VAR_4 . METHOD_6 ( ) ) ; } VAR_2 . METHOD_4 ( VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { try { java.io.FileInputStream VAR_2 = new java.io.FileInputStream ( VAR_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_2 ) ; VAR_4 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_3 . METHOD_3 ( ) ; VAR_2 . METHOD_3 ( ) ; java.lang.System.out.println ( VAR_4 ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } catch ( java.lang.ClassNotFoundException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { try { java.io.FileInputStream VAR_2 = new java.io.FileInputStream ( VAR_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_2 ) ; VAR_4 = ( ( TYPE_2 ) ( VAR_3 . METHOD_2 ( ) ) ) ; VAR_3 . METHOD_3 ( ) ; VAR_2 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } catch ( java.lang.ClassNotFoundException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = STRING_1 ; } else { VAR_2 = VAR_1 . format ( VAR_3 ) . toString ( ) ; VAR_4 = VAR_1 ; if ( ( VAR_4 ) != null ) { value = ( ( METHOD_2 ( ) ) + STRING_2 ) + ( METHOD_3 ( ) ) ; } else { value = METHOD_2 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = STRING_1 ; VAR_4 = VAR_1 ; value = METHOD_2 ( ) ; } else { VAR_2 = VAR_1 . format ( VAR_3 ) . toString ( ) ; VAR_4 = VAR_1 ; if ( ( VAR_4 ) != null ) { value = ( ( METHOD_2 ( ) ) + STRING_2 ) + ( METHOD_3 ( ) ) ; } else { value = METHOD_2 ( ) ; } } }\n"}
{"problem": "public void setValue ( java.lang.Float [ ] value ) { for ( int i = 0 ; i < ( value . length ) ; ++ i ) VAR_1 . METHOD_1 ( i ) . setValue ( value [ i ] ) ; VAR_2 = ++ ( VAR_3 ) ; }\n", "fixed": "public void setValue ( float [ ] value ) { for ( int i = 0 ; i < ( value . length ) ; ++ i ) VAR_1 . METHOD_1 ( i ) . setValue ( value [ i ] ) ; VAR_2 = ++ ( VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_3 ( null ) ; if ( ( ( ( VAR_4 ) != null ) && ( ( VAR_4 . length ) > 0 ) ) && ( ( VAR_4 [ 0 ] ) != null ) ) this . VAR_5 . METHOD_4 ( VAR_4 [ 0 ] . METHOD_5 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = true ; VAR_3 . METHOD_3 ( null ) ; if ( ( ( ( VAR_4 ) != null ) && ( ( VAR_4 . length ) > 0 ) ) && ( ( VAR_4 [ 0 ] ) != null ) ) this . VAR_5 . METHOD_4 ( VAR_4 [ 0 ] . METHOD_5 ( ) ) ; }\n"}
{"problem": "protected java.util.List < java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( java.lang.String ... params ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > list ; java.lang.String str = TYPE_1 . METHOD_2 ( params [ 0 ] ) ; TYPE_2 . METHOD_3 ( STRING_1 , str ) ; list = TYPE_1 . METHOD_4 ( str , STRING_2 ) ; TYPE_2 . METHOD_3 ( STRING_3 , list . toString ( ) ) ; return list ; }\n", "fixed": "protected java.util.List < java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( java.lang.String ... params ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > list ; java.lang.String str = TYPE_1 . METHOD_2 ( params [ 0 ] ) ; list = TYPE_1 . METHOD_4 ( str , STRING_2 ) ; return list ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . getData ( ) ) != null ) { VAR_2 = VAR_1 . getData ( ) . get ( 0 ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_4 = new TYPE_2 ( getActivity ( ) , VAR_3 , VAR_2 ) ; VAR_4 . METHOD_3 ( true ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; } else { TYPE_3 . METHOD_5 ( getActivity ( ) , STRING_1 , VAR_6 ) . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . getData ( ) ) != null ) { VAR_2 = VAR_1 . getData ( ) . get ( 0 ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_4 = new TYPE_2 ( getActivity ( ) , VAR_3 , VAR_2 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; } else { TYPE_3 . METHOD_5 ( getActivity ( ) , STRING_1 , VAR_6 ) . show ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( final int min , final int VAR_1 , final TYPE_1 VAR_2 , final TYPE_1 ... VAR_3 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( min , VAR_1 , VAR_2 , VAR_3 ) ; } execute ( VAR_5 , 0 , null , null ) ; this . VAR_6 = null ; this . VAR_7 = null ; }\n", "fixed": "public void METHOD_1 ( final int min , final int VAR_1 , final TYPE_1 VAR_2 , final TYPE_1 ... VAR_3 ) { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_1 ( min , VAR_1 , VAR_2 , VAR_3 ) ; } execute ( VAR_5 , 0 , 0 , null , null ) ; this . VAR_6 = null ; this . VAR_7 = null ; }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 expr , java.util.List < ? extends TYPE_1 > args ) { if ( ( args != null ) && ( ! ( args . isEmpty ( ) ) ) ) { for ( TYPE_1 arg : args ) { if ( arg instanceof TYPE_2 ) { return METHOD_1 ( expr , ( ( TYPE_2 ) ( arg ) ) . METHOD_2 ( ) ) ; } if ( arg == expr ) { return true ; } } } return false ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 expr , java.util.List < ? extends TYPE_1 > args ) { if ( ( args != null ) && ( ! ( args . isEmpty ( ) ) ) ) { for ( TYPE_1 arg : args ) { if ( arg == expr ) { return true ; } if ( arg instanceof TYPE_2 ) { return METHOD_1 ( expr , ( ( TYPE_2 ) ( arg ) ) . METHOD_2 ( ) ) ; } } } return false ; }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.io.File f = new java.io.File ( STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_1 ( f , STRING_1 ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( VAR_2 , STRING_2 ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.io.File f = new java.io.File ( STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_1 ( f , STRING_1 , null ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( VAR_2 , STRING_2 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { type = null ; VAR_1 = - 1L ; VAR_2 = null ; VAR_3 = - 1L ; VAR_4 = null ; VAR_5 = - 1L ; VAR_6 = null ; VAR_7 = null ; startTime = 0L ; endTime = 0L ; VAR_8 = false ; }\n", "fixed": "private void METHOD_1 ( ) { type = null ; VAR_1 = - 1L ; VAR_2 = null ; VAR_3 = - 1L ; VAR_4 = null ; VAR_5 = - 1L ; VAR_6 = null ; VAR_7 = null ; startTime = 0L ; endTime = 0L ; }\n"}
{"problem": "public long METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; long time = 0 ; if ( ( VAR_1 ) != null ) { for ( java.util.Date [ ] VAR_2 : VAR_1 ) { time += ( VAR_2 [ 1 ] . getTime ( ) ) - ( VAR_2 [ 0 ] . getTime ( ) ) ; } } return time ; }\n", "fixed": "public long METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( ) ; long time = 0 ; if ( ( VAR_1 ) != null ) { for ( java.util.Date [ ] VAR_2 : VAR_1 ) { if ( ( VAR_2 [ 1 ] ) != null ) time += ( VAR_2 [ 1 ] . getTime ( ) ) - ( VAR_2 [ 0 ] . getTime ( ) ) ; } } return time ; }\n"}
{"problem": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( this , STRING_1 , VAR_2 ) . show ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_5 ( STRING_2 , ( ( TYPE_3 ) ( VAR_1 ) ) ) ; METHOD_6 ( intent ) ; METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { METHOD_3 ( ) . METHOD_4 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_5 ( STRING_2 , ( ( TYPE_3 ) ( VAR_1 ) ) ) ; METHOD_6 ( intent ) ; METHOD_7 ( ) ; }\n"}
{"problem": "public boolean METHOD_1 ( ) { final TYPE_1 type = set . METHOD_2 ( ) . getType ( ) ; if ( ( type != ( VAR_1 ) ) && ( type != ( VAR_2 ) ) ) { return true ; } return ( set . METHOD_3 ( ) ) <= FLOAT_1 ; }\n", "fixed": "public boolean METHOD_1 ( ) { final TYPE_1 type = set . METHOD_2 ( ) . getType ( ) ; if ( ( type != ( VAR_1 ) ) && ( type != ( VAR_2 ) ) ) { return true ; } return ( set . METHOD_3 ( ) ) == 0.0 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { java.lang.String VAR_2 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_3 ) ) ) . getText ( ) . toString ( ) ; android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_4 class ) ; intent . METHOD_3 ( VAR_5 , VAR_6 ) ; intent . METHOD_3 ( VAR_7 , VAR_2 ) ; getActivity ( ) . METHOD_4 ( VAR_8 , intent ) ; getActivity ( ) . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { java.lang.String VAR_2 = ( ( TYPE_2 ) ( view . METHOD_2 ( VAR_3 ) ) ) . getText ( ) . toString ( ) ; android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_3 ( VAR_5 , VAR_6 ) ; intent . METHOD_3 ( VAR_7 , VAR_2 ) ; getActivity ( ) . METHOD_4 ( VAR_8 , intent ) ; getActivity ( ) . METHOD_5 ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { java.lang.String name = getName ( ) ; TYPE_2 VAR_1 = METHOD_2 ( ) ; if ( ( name != null ) && ( VAR_1 != null ) ) { java.lang.String className = VAR_1 . METHOD_3 ( ) ; java.lang.String VAR_2 = TYPE_3 . METHOD_4 ( name ) ; return TYPE_4 . METHOD_5 ( METHOD_6 ( ) , className , VAR_2 ) ; } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { java.lang.String name = getName ( ) ; TYPE_2 VAR_1 = METHOD_2 ( ) ; if ( ( name != null ) && ( VAR_1 != null ) ) { java.lang.String className = VAR_1 . METHOD_3 ( ) ; if ( className != null ) { java.lang.String VAR_2 = TYPE_3 . METHOD_4 ( name ) ; return TYPE_4 . METHOD_5 ( METHOD_6 ( ) , className , VAR_2 ) ; } } return null ; }\n"}
{"problem": "private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = new java.lang.String [ ( VAR_1 . size ( ) ) + 1 ] ; VAR_2 [ 0 ] = STRING_1 ; for ( int VAR_3 = 0 ; VAR_3 < ( VAR_1 . size ( ) ) ; VAR_3 ++ ) { VAR_2 [ VAR_3 ] = VAR_1 . get ( VAR_3 ) . getName ( ) ; } }\n", "fixed": "private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { VAR_2 = new java.lang.String [ VAR_1 . size ( ) ] ; for ( int VAR_3 = 0 ; VAR_3 < ( VAR_1 . size ( ) ) ; VAR_3 ++ ) { VAR_2 [ VAR_3 ] = VAR_1 . get ( VAR_3 ) . getName ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; if ( ( VAR_4 . METHOD_4 ( ) ) == ( VAR_4 . METHOD_5 ( ) ) ) { VAR_1 . METHOD_6 ( VAR_5 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } else { VAR_1 . METHOD_6 ( VAR_6 . x ) ; VAR_7 = - 1 ; METHOD_8 ( ) ; } VAR_3 . start ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; if ( ( VAR_4 . METHOD_4 ( ) ) == ( VAR_4 . METHOD_5 ( ) ) ) { VAR_1 . METHOD_6 ( VAR_5 ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } else { VAR_1 . METHOD_6 ( VAR_6 . x ) ; VAR_7 = 0 ; METHOD_8 ( ) ; } VAR_3 . start ( ) ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = null ; if ( VAR_1 != ( - 1 ) ) { VAR_2 = TYPE_2 . METHOD_2 ( ) . get ( VAR_1 ) ; this . VAR_2 = VAR_2 ; } else this . VAR_2 = null ; if ( METHOD_3 ( ) ) { view . get ( ) . METHOD_4 ( VAR_2 . getName ( ) , VAR_2 . getName ( ) , this ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = null ; if ( VAR_1 != ( - 1 ) ) { VAR_2 = TYPE_2 . METHOD_2 ( ) . get ( VAR_1 ) ; this . VAR_2 = VAR_2 ; } else this . VAR_2 = null ; if ( METHOD_3 ( ) ) { view . get ( ) . METHOD_4 ( source . getName ( ) , VAR_2 . getName ( ) , this ) ; } }\n"}
{"problem": "public void METHOD_1 ( final android.content.Context context , final java.lang.String VAR_1 ) { TYPE_1 . i ( ( STRING_1 + VAR_1 ) ) ; if ( ( VAR_2 ) != null ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( ) { VAR_2 . METHOD_1 ( context , VAR_1 ) ; } } ) ; } else { TYPE_1 . i ( STRING_2 ) ; } }\n", "fixed": "public void METHOD_1 ( final android.content.Context context , final java.lang.String VAR_1 ) { TYPE_1 . i ( ( STRING_1 + VAR_1 ) ) ; if ( ( VAR_2 ) != null ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( ) { VAR_2 . METHOD_1 ( context , VAR_1 ) ; } } ) ; } }\n"}
{"problem": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { int VAR_2 = METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + ( VAR_1 . getId ( ) ) ) , STRING_2 , getContext ( ) . METHOD_4 ( ) ) ; METHOD_5 ( VAR_2 ) ; id . setText ( VAR_1 . toString ( ) ) ; } }\n", "fixed": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { int VAR_2 = METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + ( VAR_1 . getId ( ) ) ) , STRING_2 , getContext ( ) . METHOD_4 ( ) ) ; id . setText ( VAR_1 . toString ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = event . METHOD_2 ( ) ; boolean VAR_2 = false ; if ( VAR_1 . METHOD_3 ( ) ) { VAR_3 . info ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ; VAR_2 = true ; } event . METHOD_5 ( VAR_2 ) ; event . METHOD_6 ( ) ; if ( VAR_2 ) { METHOD_7 ( VAR_1 . METHOD_4 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = event . METHOD_2 ( ) ; boolean VAR_2 = false ; if ( VAR_1 . METHOD_3 ( ) ) { VAR_2 = true ; } event . METHOD_5 ( VAR_2 ) ; event . METHOD_6 ( ) ; if ( VAR_2 ) { METHOD_7 ( VAR_1 . METHOD_4 ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( METHOD_2 ( ) . METHOD_3 ( ) ) { if ( VAR_1 . METHOD_4 ( METHOD_2 ( ) ) ) { throw new TYPE_3 ( this , METHOD_2 ( ) . get ( ) ) ; } else { VAR_1 . put ( METHOD_2 ( ) . get ( ) , this ) ; } } else { throw new TYPE_4 ( METHOD_5 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { if ( METHOD_2 ( ) . METHOD_3 ( ) ) { if ( ( VAR_1 . get ( METHOD_2 ( ) . get ( ) ) ) != null ) { throw new TYPE_3 ( this , METHOD_2 ( ) . get ( ) ) ; } else { VAR_1 . put ( METHOD_2 ( ) . get ( ) , this ) ; } } else { throw new TYPE_4 ( METHOD_5 ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.Thread . METHOD_2 ( INT_1 ) ; TYPE_1 VAR_1 = this . METHOD_3 ( ) ; TYPE_2 . assertTrue ( ( ( VAR_1 . compareTo ( VAR_2 ) ) >= 0 ) ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 . METHOD_4 ( node ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.Thread . METHOD_2 ( INT_1 ) ; TYPE_1 VAR_1 = this . METHOD_3 ( ) ; if ( ( VAR_1 . compareTo ( VAR_2 ) ) >= 0 ) { TYPE_2 . assertEquals ( VAR_3 , VAR_4 . METHOD_4 ( node ) ) ; } }\n"}
{"problem": "private void METHOD_1 ( java.lang.String source ) { TYPE_1 . i ( VAR_1 , ( STRING_1 + source ) ) ; try { VAR_2 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_3 ) { TYPE_3 . METHOD_3 ( METHOD_4 ( ) . METHOD_4 ( ) , METHOD_4 ( ) . METHOD_5 ( ) . getString ( VAR_4 ) , VAR_5 ) . show ( ) ; } TYPE_1 . i ( VAR_1 , ( STRING_2 + source ) ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.String source ) { try { VAR_2 . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_3 ) { TYPE_3 . METHOD_3 ( METHOD_4 ( ) . METHOD_4 ( ) , METHOD_4 ( ) . METHOD_5 ( ) . getString ( VAR_4 ) , VAR_5 ) . show ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; } else { if ( ( VAR_2 . size ( ) ) > 0 ) { java.lang.String VAR_3 = event . METHOD_3 ( ) ; METHOD_4 ( getString ( VAR_4 ) , METHOD_5 ( TYPE_3 . METHOD_6 ( ) . METHOD_7 ( ) , event . METHOD_8 ( ) , event . METHOD_9 ( ) , ( ( ( VAR_5 ) + STRING_1 ) + VAR_3 ) ) , METHOD_10 ( VAR_2 ) ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; } else { if ( ( VAR_2 . size ( ) ) > 0 ) { java.lang.String VAR_3 = event . METHOD_3 ( ) ; METHOD_4 ( getString ( VAR_4 ) , METHOD_5 ( TYPE_3 . METHOD_6 ( ) . METHOD_7 ( ) , event . METHOD_8 ( ) , ( ( ( VAR_5 ) + STRING_1 ) + VAR_3 ) ) , METHOD_10 ( VAR_2 ) ) ; } } }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String time = VAR_1 . split ( STRING_1 ) [ 0 ] ; java.lang.String VAR_2 = VAR_1 . split ( STRING_1 ) [ 1 ] ; int VAR_3 = java.lang.Integer.parseInt ( time . split ( STRING_2 ) [ 0 ] ) ; if ( VAR_2 . equals ( STRING_3 ) ) { VAR_3 += INT_1 ; } return VAR_3 + STRING_4 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String time = VAR_1 . split ( STRING_1 ) [ 0 ] ; java.lang.String VAR_2 = VAR_1 . split ( STRING_1 ) [ 1 ] ; int VAR_3 = java.lang.Integer.parseInt ( time . split ( STRING_2 ) [ 0 ] ) ; if ( VAR_3 == INT_1 ) { VAR_3 = 0 ; } if ( VAR_2 . equals ( STRING_3 ) ) { VAR_3 += INT_1 ; } return VAR_3 + STRING_4 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_1 VAR_3 = null ; java.lang.String VAR_4 = VAR_5 . METHOD_2 ( STRING_1 , ( ( VAR_1 + STRING_2 ) + VAR_2 ) ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_6 class ) ; TYPE_4 . info ( ( ( ( ( STRING_3 + VAR_1 ) + STRING_2 ) + VAR_2 ) + STRING_4 ) ) ; return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_1 VAR_3 = null ; java.lang.String VAR_4 = VAR_5 . METHOD_2 ( STRING_1 , ( ( VAR_1 + STRING_2 ) + VAR_2 ) ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_6 class ) ; return VAR_3 ; }\n"}
{"problem": "private void METHOD_1 ( ) { int VAR_1 = VAR_2 ; java.lang.String response ; while ( VAR_1 > 0 ) { METHOD_2 ( VAR_1 ) ; response = VAR_3 . METHOD_3 ( ) ; if ( response . equals ( STRING_1 ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( response ) ; if ( VAR_4 ) { return ; } } VAR_1 -= 1 ; } VAR_5 = true ; }\n", "fixed": "private void METHOD_1 ( ) { int VAR_1 = VAR_2 ; java.lang.String response ; while ( VAR_1 > 0 ) { METHOD_2 ( VAR_1 ) ; response = VAR_3 . METHOD_3 ( ) ; if ( response . equals ( STRING_1 ) ) { METHOD_4 ( ) ; continue ; } else { METHOD_5 ( response ) ; if ( VAR_4 ) { return ; } } VAR_1 -= 1 ; } VAR_5 = true ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_2 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; VAR_2 . put ( VAR_3 , VAR_4 . METHOD_2 ( ) ) ; VAR_5 . METHOD_3 ( VAR_6 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_2 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; VAR_2 . put ( VAR_3 , VAR_4 . METHOD_2 ( ) ) ; VAR_5 . METHOD_3 ( VAR_6 , null , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { if ( position == ( VAR_2 . size ( ) ) ) { ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( VAR_2 . size ( ) ) ; } else { ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( VAR_2 . get ( position ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { if ( position == 0 ) { } else if ( position == ( ( VAR_2 . size ( ) ) + 1 ) ) { ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( VAR_2 . size ( ) ) ; } else { ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( VAR_2 . get ( ( position - 1 ) ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = this . METHOD_2 ( ) ; TYPE_3 values = new TYPE_3 ( ) ; values . put ( VAR_3 , VAR_1 . getName ( ) ) ; values . put ( VAR_4 , VAR_1 . METHOD_3 ( ) ) ; values . put ( VAR_5 , VAR_1 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_6 , null , values ) ; VAR_2 . METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = this . METHOD_2 ( ) ; TYPE_3 values = new TYPE_3 ( ) ; values . put ( VAR_3 , VAR_1 . getName ( ) ) ; values . put ( VAR_4 , VAR_1 . METHOD_3 ( ) ) ; values . put ( VAR_1 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( VAR_6 , null , values ) ; VAR_2 . METHOD_6 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( 0 , FLOAT_1 , FLOAT_2 , new java.util.HashMap < > ( ) ) ; TYPE_3 . assertEquals ( FLOAT_3 , VAR_1 . METHOD_2 ( null , VAR_2 ) , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( 0 , FLOAT_1 , FLOAT_2 , null , new java.util.HashMap < > ( ) ) ; TYPE_3 . assertEquals ( FLOAT_3 , VAR_1 . METHOD_2 ( null , VAR_2 ) , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.Class < ? > value ) { java.lang.String VAR_1 = STRING_1 ; for ( java.lang.String key : VAR_2 . METHOD_2 ( ) ) { java.lang.Class < ? > VAR_3 = VAR_2 . get ( key ) ; if ( VAR_3 . getName ( ) . equals ( value ) ) { VAR_1 = key ; break ; } } if ( ( VAR_1 . length ( ) ) > 0 ) { VAR_2 . put ( VAR_1 , value ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.Class < ? > value ) { java.lang.String VAR_1 = STRING_1 ; for ( java.lang.String key : VAR_2 . METHOD_2 ( ) ) { java.lang.Class < ? > VAR_3 = VAR_2 . get ( key ) ; if ( VAR_3 . getName ( ) . equals ( value . getName ( ) ) ) { VAR_1 = key ; break ; } } if ( ( VAR_1 . length ( ) ) > 0 ) { VAR_2 . put ( VAR_1 , value ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) throws java.io.IOException { TYPE_1 . METHOD_2 ( null ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_3 ( getClass ( ) . METHOD_4 ( STRING_1 ) ) ) ) ; ( ( TYPE_2 ) ( TYPE_4 . getView ( STRING_2 ) ) ) . METHOD_5 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( ) throws java.io.IOException { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_3 ( getClass ( ) . METHOD_4 ( STRING_1 ) ) ) ) ; ( ( TYPE_2 ) ( TYPE_4 . getView ( STRING_2 ) ) ) . METHOD_5 ( VAR_1 ) ; }\n"}
{"problem": "public static void METHOD_1 ( android.content.Context context , java.lang.CharSequence msg ) { if ( ( ( context == null ) || ( msg == null ) ) || ( msg . equals ( STRING_1 ) ) ) return ; TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( context , msg , VAR_2 ) ; VAR_1 . METHOD_3 ( ( ( VAR_3 ) | ( VAR_4 ) ) , 0 , INT_1 ) ; VAR_1 . show ( ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( android.content.Context context , java.lang.CharSequence msg ) { if ( ( ( context == null ) || ( msg == null ) ) || ( msg . equals ( STRING_1 ) ) ) return null ; TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( context , msg , VAR_2 ) ; VAR_1 . METHOD_3 ( ( ( VAR_3 ) | ( VAR_4 ) ) , 0 , INT_1 ) ; VAR_1 . show ( ) ; return VAR_1 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; TYPE_3 VAR_5 = VAR_6 . METHOD_2 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; return new TYPE_1 ( VAR_6 . METHOD_4 ( VAR_5 ) , VAR_7 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; TYPE_3 VAR_5 = VAR_6 . METHOD_2 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_6 . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; return new TYPE_1 ( VAR_5 , VAR_7 ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 element , final TYPE_2 VAR_1 ) { final TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; final int VAR_3 = element . METHOD_3 ( ) ; final int VAR_4 = element . METHOD_4 ( ) ; final java.lang.String VAR_5 = VAR_2 . METHOD_5 ( VAR_3 ) ; final java.lang.String name = VAR_2 . METHOD_5 ( VAR_4 ) ; final TYPE_4 VAR_6 = TYPE_4 . METHOD_6 ( VAR_5 ) ; VAR_1 . METHOD_1 ( VAR_6 ) ; VAR_1 . add ( STRING_1 ) ; VAR_1 . add ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 element , final TYPE_2 VAR_1 ) { final TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; final int VAR_3 = element . METHOD_3 ( ) ; final int VAR_4 = element . METHOD_4 ( ) ; final java.lang.String VAR_5 = VAR_2 . METHOD_5 ( VAR_3 ) ; final java.lang.String name = VAR_2 . METHOD_5 ( VAR_4 ) ; final TYPE_4 VAR_6 = TYPE_4 . METHOD_6 ( VAR_5 ) ; VAR_1 . METHOD_1 ( VAR_6 ) ; VAR_1 . add ( STRING_1 ) ; VAR_1 . add ( name ) ; }\n"}
{"problem": "protected java.lang.Object METHOD_1 ( java.lang.String type ) throws TYPE_1 , TYPE_2 { if ( VAR_1 class . METHOD_2 ( ) . equals ( type ) ) { return new TYPE_3 ( ) ; } else if ( VAR_2 class . METHOD_2 ( ) . equals ( type ) ) { return new TYPE_4 ( ) ; } throw new TYPE_1 ( this . getName ( ) , type ) ; }\n", "fixed": "protected java.lang.Object METHOD_1 ( java.lang.String type ) throws TYPE_1 , TYPE_2 { if ( VAR_1 class . METHOD_2 ( ) . equals ( type ) ) { return new TYPE_3 ( ) ; } else if ( VAR_2 class . METHOD_2 ( ) . equals ( type ) ) { return new TYPE_4 ( ) ; } else { throw new TYPE_1 ( this . getName ( ) , type ) ; } }\n"}
{"problem": "public static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 , INT_2 ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( true ) ; try { TYPE_2 . METHOD_4 ( new TYPE_3 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( new TYPE_4 ( ) , VAR_1 ) ; TYPE_2 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_4 ) { VAR_4 . METHOD_7 ( ) ; } TYPE_6 . METHOD_8 ( 0 , 0 , VAR_2 , VAR_3 ) ; }\n", "fixed": "public static void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 , INT_2 ) . METHOD_2 ( true ) . METHOD_3 ( true ) ; try { TYPE_2 . METHOD_4 ( new TYPE_3 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( new TYPE_4 ( ) , VAR_1 ) ; TYPE_2 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_4 ) { VAR_4 . METHOD_7 ( ) ; } TYPE_6 . METHOD_8 ( 0 , 0 , VAR_2 , VAR_3 ) ; }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return false ; } java.lang.System.out.println ( VAR_1 ) ; java.lang.String [ ] data = VAR_1 . split ( STRING_1 ) ; if ( TYPE_1 . METHOD_2 ( VAR_2 , data [ 0 ] , data [ 1 ] ) ) { return true ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { java.lang.System.out.println ( VAR_1 ) ; return false ; } java.lang.System.out.println ( VAR_1 ) ; java.lang.String [ ] data = VAR_1 . split ( STRING_1 ) ; if ( TYPE_1 . METHOD_2 ( VAR_2 , data [ 0 ] , data [ 1 ] ) ) { return true ; } return false ; }\n"}
{"problem": "private static void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 , final TYPE_3 VAR_3 , final TYPE_4 VAR_4 , final java.lang.String VAR_5 , final TYPE_5 VAR_6 ) throws java.lang.Exception { java.util.List < TYPE_6 > VAR_7 = VAR_3 . METHOD_2 ( VAR_4 , VAR_5 , VAR_6 , VAR_2 . METHOD_3 ( ) ) ; for ( TYPE_6 VAR_8 : VAR_7 ) { java.lang.String VAR_9 = VAR_2 . METHOD_4 ( VAR_8 . METHOD_5 ( ) ) ; TYPE_7 . METHOD_6 ( VAR_2 . METHOD_7 ( VAR_9 ) , VAR_8 , VAR_9 , VAR_1 ) ; } }\n", "fixed": "private static void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 , final TYPE_3 VAR_3 , final TYPE_4 VAR_4 , final java.lang.String VAR_5 , final TYPE_5 VAR_6 ) throws java.lang.Exception { java.util.List < TYPE_6 > VAR_7 = VAR_3 . METHOD_2 ( VAR_4 , VAR_5 , VAR_6 , VAR_2 . METHOD_3 ( ) ) ; for ( TYPE_6 VAR_8 : VAR_7 ) { java.lang.String VAR_9 = VAR_2 . METHOD_4 ( VAR_8 . METHOD_5 ( ) ) ; TYPE_7 . METHOD_6 ( VAR_8 , VAR_9 , VAR_1 , true ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( 0 , 0 , 0 ) ) ; TYPE_3 . METHOD_5 ( this ) . METHOD_6 ( VAR_3 ) . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( VAR_4 ) . METHOD_10 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( 0 , 0 , 0 ) ) ; TYPE_3 . METHOD_5 ( this ) . METHOD_6 ( VAR_3 ) . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( VAR_4 ) . METHOD_10 ( VAR_1 ) ; }\n"}
{"problem": "private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { android.content.Intent intent ; intent = new android.content.Intent ( ) ; intent . METHOD_2 ( VAR_3 , VAR_1 ) ; intent . METHOD_2 ( VAR_4 , VAR_2 ) ; intent . METHOD_2 ( VAR_5 , this . VAR_6 . METHOD_3 ( ) ) ; intent . METHOD_2 ( VAR_7 , VAR_6 . METHOD_4 ( ) ) ; VAR_6 . getActivity ( ) . METHOD_5 ( VAR_8 , intent ) ; }\n", "fixed": "private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { android.content.Intent intent ; intent = new android.content.Intent ( ) ; intent . METHOD_2 ( VAR_3 , VAR_1 ) ; intent . METHOD_2 ( VAR_4 , VAR_2 ) ; intent . METHOD_2 ( VAR_5 , java.lang.Integer.toString ( this . VAR_6 . METHOD_3 ( ) ) ) ; intent . METHOD_2 ( VAR_7 , VAR_6 . METHOD_4 ( ) ) ; VAR_6 . getActivity ( ) . METHOD_5 ( VAR_8 , intent ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( STRING_1 ) ; if ( METHOD_4 ( ) ) { VAR_1 = VAR_2 ; METHOD_5 ( ) ; VAR_3 . setText ( java.lang.String.format ( STRING_2 , VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ) ; } else { METHOD_8 ( ) ; if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_3 . setText ( getString ( VAR_5 ) ) ; } } VAR_3 . METHOD_9 ( VAR_6 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( METHOD_4 ( ) ) { VAR_1 = VAR_2 ; METHOD_5 ( ) ; VAR_3 . setText ( java.lang.String.format ( STRING_2 , VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) ) ; } else { METHOD_8 ( ) ; if ( ( VAR_1 ) == ( VAR_2 ) ) { VAR_3 . setText ( getString ( VAR_5 ) ) ; } } VAR_3 . METHOD_9 ( VAR_6 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent intent ) { super . METHOD_1 ( VAR_1 , VAR_2 , intent ) ; if ( ( ( VAR_3 ) != null ) && ( VAR_1 == ( VAR_4 ) ) ) { TYPE_1 array = new TYPE_1 ( ) ; array . put ( STRING_1 ) ; array . put ( ( VAR_2 == ( VAR_5 ) ) ) ; VAR_3 . METHOD_2 ( new TYPE_2 ( VAR_6 , ( VAR_2 == ( VAR_5 ) ) ) ) ; VAR_3 = null ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent intent ) { super . METHOD_1 ( VAR_1 , VAR_2 , intent ) ; if ( ( ( VAR_3 ) != null ) && ( VAR_1 == ( VAR_4 ) ) ) { TYPE_1 array = new TYPE_1 ( ) ; array . put ( STRING_1 ) ; array . put ( true ) ; array . put ( null ) ; VAR_3 . METHOD_2 ( new TYPE_2 ( VAR_6 , array ) ) ; VAR_3 = null ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_2 ( STRING_3 ) ; TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) . replaceAll ( STRING_4 , STRING_5 ) ) ; VAR_1 = true ; }\n", "fixed": "private void METHOD_1 ( ) { if ( ( TYPE_1 ) != null ) TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( ( TYPE_2 ) != null ) TYPE_2 . METHOD_2 ( STRING_2 ) ; if ( ( TYPE_3 ) != null ) { TYPE_3 . METHOD_2 ( STRING_3 ) ; TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) . replaceAll ( STRING_4 , STRING_5 ) ) ; } VAR_1 = true ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 [ i ] ) ; METHOD_3 ( ) . METHOD_4 ( VAR_4 [ i ] ) ; if ( ( VAR_5 ) >= ( VAR_6 ) ) { METHOD_5 ( ) . METHOD_6 ( VAR_7 [ i ] ) ; } ( i ) ++ ; VAR_8 . METHOD_2 ( VAR_9 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 [ i ] ) ; METHOD_3 ( ) . METHOD_4 ( VAR_4 [ i ] ) ; if ( ( VAR_5 ) >= ( VAR_6 ) ) { METHOD_5 ( ) . METHOD_6 ( VAR_7 [ i ] ) ; } VAR_8 . METHOD_2 ( VAR_9 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; TYPE_3 VAR_2 = VAR_1 . query ( VAR_3 , VAR_4 , ( ( ( ( ( ( VAR_5 ) + STRING_1 ) + ( VAR_5 ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) , null , null , null , null ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 VAR_6 = METHOD_4 ( VAR_2 ) ; VAR_2 . METHOD_5 ( ) ; VAR_1 . METHOD_5 ( ) ; return VAR_6 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) ; TYPE_3 VAR_2 = VAR_1 . query ( VAR_3 , VAR_4 , ( ( ( ( ( ( VAR_5 ) + STRING_1 ) + ( VAR_5 ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) , null , null , null , null ) ; VAR_2 . METHOD_3 ( ) ; TYPE_1 VAR_6 = METHOD_4 ( VAR_2 ) ; VAR_2 . METHOD_5 ( ) ; return VAR_6 ; }\n"}
{"problem": "public static java.lang.String [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.lang.String [ ] VAR_2 = VAR_1 . trim ( ) . split ( STRING_1 ) ; if ( ( VAR_2 . length ) == INT_1 ) { byte [ ] VAR_3 = TYPE_2 . METHOD_2 ( VAR_2 [ 1 ] . trim ( ) ) ; if ( VAR_3 != null ) { java.lang.String VAR_4 = new java.lang.String ( VAR_3 , VAR_5 ) ; return VAR_4 . split ( STRING_2 ) ; } } java.lang.String VAR_6 = STRING_3 ; throw new TYPE_1 ( VAR_6 ) ; }\n", "fixed": "public static java.lang.String [ ] METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.lang.String [ ] VAR_2 = VAR_1 . trim ( ) . split ( STRING_1 ) ; if ( ( VAR_2 . length ) >= INT_1 ) { byte [ ] VAR_3 = TYPE_2 . METHOD_2 ( VAR_2 [ 1 ] . trim ( ) ) ; if ( VAR_3 != null ) { java.lang.String VAR_4 = new java.lang.String ( VAR_3 , VAR_5 ) ; return VAR_4 . split ( STRING_2 ) ; } } java.lang.String VAR_6 = STRING_3 ; throw new TYPE_1 ( VAR_6 ) ; }\n"}
{"problem": "public int update ( TYPE_1 VAR_1 , TYPE_2 values , java.lang.String VAR_2 , java.lang.String [ ] VAR_3 ) { final TYPE_3 VAR_4 = new TYPE_4 ( getContext ( ) ) . METHOD_1 ( ) ; int rows = VAR_4 . update ( VAR_5 , values , getSelection ( VAR_1 , VAR_2 ) , VAR_3 ) ; if ( rows > 0 ) { getContext ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null ) ; } return rows ; }\n", "fixed": "public int update ( TYPE_1 VAR_1 , TYPE_2 values , java.lang.String VAR_2 , java.lang.String [ ] VAR_3 ) { int rows = VAR_4 . update ( VAR_5 , values , getSelection ( VAR_1 , VAR_2 ) , VAR_3 ) ; if ( rows > 0 ) { getContext ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null ) ; } return rows ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = VAR_3 . query ( VAR_4 , null , null , null , null ) ; android.content.Intent i = new android.content.Intent ( VAR_5 ) ; VAR_2 . METHOD_2 ( position ) ; TYPE_3 VAR_6 = TYPE_3 . METHOD_3 ( VAR_2 . getString ( INT_1 ) ) ; i . METHOD_4 ( VAR_6 ) ; METHOD_5 ( i ) ; VAR_2 . METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = VAR_3 . query ( VAR_4 , null , null , null , null ) ; VAR_2 . METHOD_2 ( position ) ; android.content.Intent i = new android.content.Intent ( VAR_5 ) ; TYPE_3 VAR_6 = TYPE_3 . METHOD_3 ( VAR_2 . getString ( INT_1 ) ) ; i . METHOD_4 ( VAR_6 ) ; METHOD_5 ( i ) ; VAR_2 . METHOD_6 ( ) ; }\n"}
{"problem": "protected float METHOD_1 ( double value ) { return ( ( float ) ( ( VAR_1 . METHOD_2 ( ) ) - ( ( ( value + ( java.lang.Math.abs ( VAR_2 ) ) ) * ( VAR_3 ) ) / ( ( VAR_4 . get ( 1 ) ) + ( java.lang.Math.abs ( VAR_2 ) ) ) ) ) ) ; }\n", "fixed": "protected float METHOD_1 ( double value ) { return ( ( float ) ( ( VAR_1 . METHOD_2 ( ) ) - ( ( ( value - ( VAR_2 ) ) * ( VAR_3 ) ) / ( ( VAR_4 . get ( 1 ) ) - ( VAR_2 ) ) ) ) ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { int time = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( time ) ; int VAR_3 = ( ( ( VAR_4 ) * INT_1 ) + ( ( VAR_5 ) * INT_2 ) ) + ( VAR_6 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } }\n", "fixed": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { int time = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( time ) ; int VAR_3 = ( ( ( VAR_4 ) * INT_1 ) + ( ( VAR_5 ) * INT_2 ) ) + ( VAR_6 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } else { VAR_2 . METHOD_3 ( 0 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 , TYPE_1 VAR_3 ) { if ( ( VAR_4 [ index ] ) == null ) { VAR_5 [ index ] . METHOD_2 ( TYPE_2 . values ( ) [ ( ( int ) ( VAR_2 ) ) ] ) ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 , TYPE_1 VAR_3 ) { if ( ( VAR_4 [ index ] ) != null ) { VAR_5 [ index ] . METHOD_2 ( TYPE_2 . values ( ) [ ( ( int ) ( VAR_2 ) ) ] ) ; } return true ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 ) { if ( ( getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( ) . VAR_2 ) != ( VAR_3 ) ) { getActivity ( ) . METHOD_4 ( VAR_4 ) ; } else { getActivity ( ) . METHOD_4 ( VAR_5 ) ; } } else { getActivity ( ) . METHOD_4 ( VAR_6 ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.Boolean VAR_1 ) { if ( VAR_1 ) { if ( ( getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( ) . VAR_2 ) != ( VAR_3 ) ) { getActivity ( ) . METHOD_4 ( VAR_4 ) ; } else { getActivity ( ) . METHOD_4 ( VAR_5 ) ; } } else { getActivity ( ) . METHOD_4 ( VAR_6 ) ; } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) ) ; VAR_1 = TYPE_1 . METHOD_1 ( ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_3 ) ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_1 ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) ) ; VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_3 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( VAR_3 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_4 , VAR_5 , STRING_4 , STRING_5 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_6 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_7 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( VAR_3 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_4 , VAR_5 , STRING_4 , STRING_5 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { if ( ! ( VAR_1 . getText ( ) . toString ( ) . isEmpty ( ) ) ) { VAR_1 . setText ( STRING_1 ) ; } else { TYPE_1 . METHOD_2 ( this , STRING_2 , VAR_2 ) . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { if ( ( ! ( VAR_1 . getText ( ) . toString ( ) . isEmpty ( ) ) ) || ( ! ( result . getText ( ) . toString ( ) . isEmpty ( ) ) ) ) { VAR_1 . setText ( STRING_1 ) ; result . setText ( STRING_1 ) ; } else { TYPE_1 . METHOD_2 ( this , STRING_2 , VAR_2 ) . show ( ) ; } }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > VAR_3 ) { android.content.Intent intent = new android.content.Intent ( VAR_1 . getActivity ( ) , VAR_4 class ) ; intent . METHOD_2 ( VAR_5 , VAR_2 ) ; VAR_1 . getActivity ( ) . METHOD_3 ( intent ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.util.HashMap < java.lang.String , java.lang.String > VAR_3 ) { if ( VAR_1 != null ) { android.content.Intent intent = new android.content.Intent ( VAR_1 . getActivity ( ) , VAR_4 class ) ; intent . METHOD_2 ( VAR_5 , VAR_2 ) ; VAR_1 . getActivity ( ) . METHOD_3 ( intent ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 , android.view.View VAR_2 , int position , long id ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_2 ( STRING_1 , VAR_5 ) ; VAR_3 . METHOD_2 ( STRING_2 , VAR_6 ) ; TYPE_2 VAR_7 = ( ( TYPE_2 ) ( list . get ( position ) ) ) ; VAR_3 . METHOD_2 ( STRING_3 , VAR_7 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_3 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 , android.view.View VAR_2 , int position , long id ) { android.content.Intent VAR_3 = new android.content.Intent ( this , VAR_4 class ) ; VAR_3 . METHOD_2 ( STRING_1 , VAR_5 ) ; VAR_3 . METHOD_2 ( STRING_2 , VAR_6 ) ; TYPE_2 VAR_7 = ( ( TYPE_2 ) ( list . get ( position ) ) ) ; VAR_3 . METHOD_2 ( STRING_3 , VAR_7 . getId ( ) ) ; METHOD_4 ( VAR_3 ) ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { java.io.File file = null ; TYPE_4 VAR_2 = null ; if ( ( ( VAR_3 ) != null ) && ( ( VAR_3 . file ) != null ) ) { file = VAR_3 . file ; VAR_3 . file = null ; VAR_2 = new TYPE_4 ( file . getName ( ) ) ; } return this . VAR_4 . METHOD_2 ( this , null , VAR_1 , VAR_2 , file ) ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { java.io.File file = null ; TYPE_4 VAR_2 = null ; if ( ( ( VAR_3 ) != null ) && ( ( VAR_3 . file ) != null ) ) { file = VAR_3 . file ; VAR_3 . file = null ; VAR_2 = new TYPE_4 ( file . getName ( ) ) ; } return VAR_4 . METHOD_2 ( this , null , VAR_1 , VAR_2 , file ) ; }\n"}
{"problem": "protected void METHOD_1 ( int VAR_1 , java.lang.String msg ) { switch ( VAR_1 ) { case 0 : case INT_1 : case INT_2 : case INT_3 : throw new TYPE_1 ( msg , STRING_1 , VAR_1 , null ) ; default : throw new TYPE_2 ( ( ( ( msg + STRING_2 ) + VAR_1 ) + STRING_3 ) , null , VAR_1 , null ) ; } }\n", "fixed": "protected void METHOD_1 ( int VAR_1 , java.lang.String msg ) { switch ( VAR_1 ) { case 0 : case INT_1 : case INT_2 : case INT_3 : throw new TYPE_1 ( msg , STRING_1 , VAR_1 , null , null , null ) ; default : throw new TYPE_2 ( ( ( ( msg + STRING_2 ) + VAR_1 ) + STRING_3 ) , null , VAR_1 , null , null , null ) ; } }\n"}
{"problem": "public void remove ( int index ) { if ( ( ( VAR_1 ) == null ) || ( METHOD_1 ( index ) ) ) return ; TYPE_1 < TYPE_2 > . VAR_2 < TYPE_2 > n = VAR_1 ; if ( index == 0 ) { n = VAR_3 ; VAR_4 = null ; VAR_1 = n ; } else { int i = 0 ; while ( ( i ++ ) < ( index - 1 ) ) { n = VAR_3 ; } VAR_3 = VAR_5 ; } ( length ) -- ; }\n", "fixed": "public void remove ( int index ) { if ( ( ( VAR_1 ) == null ) || ( METHOD_1 ( index ) ) ) return ; TYPE_1 < TYPE_2 > . VAR_2 < TYPE_2 > n = VAR_1 ; if ( index == 0 ) { n = VAR_3 ; VAR_1 = n ; } else { int i = 0 ; while ( ( i ++ ) < ( index - 1 ) ) { n = VAR_3 ; } VAR_3 = VAR_5 ; } ( length ) -- ; }\n"}
{"problem": "public TYPE_1 build ( ) { return new TYPE_2 ( VAR_1 , TYPE_3 . METHOD_1 ( VAR_2 ) , VAR_3 . METHOD_2 ( new TYPE_4 [ VAR_3 . size ( ) ] ) , VAR_4 . METHOD_2 ( new TYPE_5 [ VAR_4 . size ( ) ] ) , new TYPE_6 ( VAR_5 ) , VAR_6 , VAR_7 , VAR_8 ) ; }\n", "fixed": "public TYPE_1 build ( ) { return new TYPE_2 ( VAR_1 , TYPE_3 . METHOD_1 ( VAR_2 ) , VAR_3 . METHOD_2 ( new TYPE_4 [ VAR_3 . size ( ) ] ) , VAR_4 . METHOD_2 ( new TYPE_5 [ VAR_4 . size ( ) ] ) , new TYPE_6 ( VAR_5 ) ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( ) . METHOD_2 ( TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( STRING_1 ) , STRING_2 ) ) . METHOD_5 ( VAR_1 ) . METHOD_6 ( VAR_2 ) . METHOD_7 ( VAR_3 ) . METHOD_8 ( STRING_3 , STRING_4 ) . build ( ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_3 ( ) . METHOD_2 ( TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( STRING_1 ) , STRING_2 ) ) . METHOD_5 ( VAR_1 ) . METHOD_6 ( VAR_2 ) . METHOD_7 ( VAR_3 ) . message ( STRING_2 ) . METHOD_8 ( STRING_3 , STRING_4 ) . build ( ) ; }\n"}
{"problem": "public java.lang.String execute ( ) throws java.lang.Exception { if ( TYPE_1 . METHOD_1 ( VAR_1 ) ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; this . VAR_4 = METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) . size ( ) ) ; VAR_5 = new java.util.ArrayList ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; } else { return VAR_6 ; } return VAR_7 ; }\n", "fixed": "public java.lang.String execute ( ) throws java.lang.Exception { if ( TYPE_1 . METHOD_1 ( VAR_1 ) ) { VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; this . VAR_4 = METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) . size ( ) ) ; VAR_5 = new java.util.ArrayList ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; java.util.Collections.sort ( VAR_5 ) ; } else { return VAR_6 ; } return VAR_7 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . toString ( ) ; if ( ! ( VAR_3 . equals ( VAR_2 ) ) ) if ( ( VAR_2 . length ( ) ) > INT_1 ) { VAR_3 = VAR_2 ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_2 ( true ) ; TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . execute ( VAR_3 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . toString ( ) ; if ( ! ( VAR_3 . equals ( VAR_2 ) ) ) if ( ( VAR_2 . length ( ) ) > INT_1 ) { VAR_3 = VAR_2 ; if ( ( VAR_4 ) != null ) VAR_4 . METHOD_2 ( true ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . execute ( VAR_3 ) ; } }\n"}
{"problem": "public static java.util.List < java.lang.String > METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { VAR_3 . add ( ( ( VAR_3 . size ( ) ) / INT_1 ) , VAR_2 ) ; } return VAR_3 ; }\n", "fixed": "public static java.util.List < java.lang.String > METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { VAR_3 . add ( ( ( VAR_3 . size ( ) ) / INT_1 ) , VAR_2 ) ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { VAR_3 . info ( STRING_1 , VAR_1 ) ; VAR_3 . info ( STRING_2 ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > VAR_4 : VAR_2 . METHOD_2 ( ) ) { VAR_3 . info ( STRING_3 , VAR_4 . METHOD_3 ( ) ) ; VAR_3 . info ( STRING_4 , VAR_4 . getValue ( ) ) ; } }\n", "fixed": "public int METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { VAR_3 . info ( STRING_1 , VAR_1 ) ; VAR_3 . info ( STRING_2 ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > VAR_4 : VAR_2 . METHOD_2 ( ) ) { VAR_3 . info ( STRING_3 , VAR_4 . METHOD_3 ( ) ) ; VAR_3 . info ( STRING_4 , VAR_4 . getValue ( ) ) ; } return 0 ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( ) ; java.util.List < TYPE_3 > list = VAR_3 . METHOD_5 ( ) . list ( ) ; METHOD_6 ( new TYPE_4 ( VAR_3 . METHOD_5 ( ) . list ( ) ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_6 ( new TYPE_4 ( VAR_3 . METHOD_5 ( ) . list ( ) ) ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { final TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . add ( TYPE_4 . METHOD_4 ( VAR_4 , VAR_1 ) ) ; VAR_3 . METHOD_3 ( ) . add ( TYPE_4 . METHOD_4 ( VAR_5 , VAR_2 ) ) ; VAR_3 . METHOD_3 ( ) . add ( TYPE_4 . METHOD_4 ( VAR_6 , VAR_7 ) ) ; return VAR_3 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { final TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . add ( TYPE_4 . METHOD_4 ( VAR_4 , VAR_1 ) ) ; VAR_3 . METHOD_3 ( ) . add ( TYPE_4 . METHOD_4 ( VAR_5 , VAR_7 ) ) ; VAR_3 . METHOD_3 ( ) . add ( TYPE_4 . METHOD_4 ( VAR_6 , VAR_7 ) ) ; return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = view . METHOD_2 ( ) ; TYPE_2 VAR_2 = view . METHOD_3 ( ) ; if ( VAR_2 != null ) { } else { VAR_2 = VAR_3 ; } for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_2 . METHOD_4 ( VAR_1 . get ( i ) ) ; } view . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = view . METHOD_2 ( ) ; TYPE_2 VAR_2 = view . METHOD_3 ( ) ; if ( VAR_2 == null ) return ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { VAR_2 . METHOD_4 ( VAR_1 . get ( i ) ) ; } view . METHOD_5 ( ) ; }\n"}
{"problem": "private static java.lang.String METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , java.lang.String key , java.lang.String VAR_2 ) { java.lang.String str = ( ( java.lang.String ) ( VAR_1 . get ( key ) ) ) ; if ( ! ( TYPE_1 . isEmpty ( str ) ) ) { VAR_2 = str ; } return VAR_2 ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , java.lang.String key , java.lang.String VAR_2 ) { java.lang.String str = VAR_1 . get ( key ) . toString ( ) ; if ( ! ( TYPE_1 . isEmpty ( str ) ) ) { VAR_2 = str ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; VAR_1 . METHOD_7 ( VAR_7 ) ; VAR_1 . METHOD_8 ( VAR_8 ) ; VAR_1 . METHOD_9 ( VAR_9 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; VAR_1 . METHOD_7 ( VAR_7 ) ; VAR_1 . METHOD_8 ( VAR_8 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 , VAR_3 ) ; TYPE_4 VAR_4 = TYPE_5 . METHOD_2 ( this . VAR_5 . METHOD_3 ( ) , VAR_6 ) ; TYPE_6 VAR_7 = TYPE_7 . list ( VAR_4 . METHOD_4 ( ) ) . get ( 0 ) ; VAR_2 . METHOD_5 ( VAR_7 ) ; TYPE_8 . assertEquals ( VAR_2 . METHOD_6 ( VAR_3 , VAR_8 ) , VAR_9 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 , VAR_3 ) ; TYPE_4 VAR_4 = TYPE_5 . METHOD_2 ( this . VAR_5 . METHOD_3 ( ) , VAR_6 ) ; TYPE_6 VAR_7 = TYPE_7 . list ( VAR_4 . METHOD_4 ( ) ) . get ( 0 ) ; VAR_2 . METHOD_5 ( VAR_7 ) ; TYPE_8 . assertEquals ( VAR_9 , VAR_2 . METHOD_6 ( VAR_8 , VAR_3 ) ) ; }\n"}
{"problem": "public int METHOD_1 ( int position ) { if ( position == 0 ) { return VAR_1 ; } else if ( position == INT_1 ) { return VAR_2 ; } TYPE_1 type = VAR_3 . get ( ( position - ( VAR_4 ) ) ) . type ( ) ; return VAR_5 . METHOD_2 ( type ) ; }\n", "fixed": "public int METHOD_1 ( int position ) { if ( position == 0 ) { return VAR_1 ; } else if ( position == 1 ) { return VAR_2 ; } TYPE_1 type = VAR_3 . get ( ( position - ( VAR_4 ) ) ) . type ( ) ; return VAR_5 . METHOD_2 ( type ) ; }\n"}
{"problem": "public java.util.List < java.lang.Double > METHOD_1 ( ) { java.util.List < java.lang.Double > result = null ; try { result = new java.util.ArrayList < java.lang.Double > ( VAR_1 . size ( ) ) ; TYPE_1 . METHOD_2 ( result , VAR_1 ) ; return result ; } catch ( java.lang.NullPointerException VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; return result ; } }\n", "fixed": "public java.util.List < java.lang.Double > METHOD_1 ( ) { java.util.List < java.lang.Double > result = null ; try { result = new java.util.ArrayList < java.lang.Double > ( VAR_1 ) ; return result ; } catch ( java.lang.NullPointerException VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; return result ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; if ( VAR_4 ) { TYPE_3 . METHOD_2 ( VAR_5 , STRING_1 ) ; } else { TYPE_3 . METHOD_2 ( VAR_5 , STRING_2 ) ; } if ( ( VAR_6 ) != null ) VAR_6 . METHOD_3 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) throws java.lang.Exception { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; if ( VAR_4 ) { TYPE_3 . METHOD_2 ( VAR_5 , STRING_1 ) ; if ( ( VAR_6 ) != null ) VAR_6 . METHOD_3 ( ) ; } else { TYPE_3 . METHOD_2 ( VAR_5 , STRING_2 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { return null ; } TYPE_3 [ ] VAR_3 = METHOD_3 ( ) . METHOD_4 ( ) ; for ( TYPE_3 VAR_4 : VAR_3 ) { if ( VAR_4 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) { return VAR_4 . METHOD_1 ( VAR_1 ) ; } } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { return null ; } TYPE_3 [ ] VAR_3 = METHOD_3 ( ) . METHOD_4 ( ) ; for ( TYPE_3 VAR_4 : VAR_3 ) { if ( VAR_4 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) { TYPE_1 info = VAR_4 . METHOD_1 ( VAR_1 ) ; if ( info != null ) { return info ; } } } return null ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { if ( false ) { final TYPE_1 [ ] buffer = VAR_1 ; final long index = VAR_2 ; final long VAR_3 = VAR_4 ; final long offset = TYPE_2 . METHOD_2 ( index , VAR_3 ) ; java.lang.Object VAR_5 = TYPE_2 . METHOD_3 ( buffer , offset ) ; if ( VAR_5 == ( VAR_6 ) ) { return METHOD_4 ( METHOD_5 ( buffer , VAR_3 ) , index ) ; } return ( ( TYPE_1 ) ( VAR_5 ) ) ; } return METHOD_6 ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { final TYPE_1 [ ] buffer = VAR_1 ; final long index = VAR_2 ; final long VAR_3 = VAR_4 ; final long offset = TYPE_2 . METHOD_2 ( index , VAR_3 ) ; java.lang.Object VAR_5 = TYPE_2 . METHOD_3 ( buffer , offset ) ; if ( VAR_5 == ( VAR_6 ) ) { return METHOD_4 ( METHOD_5 ( buffer , VAR_3 ) , index ) ; } return ( ( TYPE_1 ) ( VAR_5 ) ) ; }\n"}
{"problem": "public double METHOD_1 ( java.lang.String VAR_1 ) { switch ( VAR_1 ) { case STRING_1 : return ( VAR_2 . METHOD_2 ( ) ) * INT_1 ; case STRING_2 : return - ( VAR_2 . METHOD_2 ( ) ) ; case STRING_3 : return ( VAR_2 . METHOD_2 ( ) ) * INT_2 ; default : return INT_3 ; } }\n", "fixed": "protected double METHOD_1 ( java.lang.String VAR_1 ) { switch ( VAR_1 ) { case STRING_1 : return ( VAR_2 . METHOD_2 ( ) ) * INT_1 ; case STRING_2 : return - ( VAR_2 . METHOD_2 ( ) ) ; case STRING_3 : return ( VAR_2 . METHOD_2 ( ) ) * INT_2 ; default : return INT_3 ; } }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ ] { null } ; VAR_2 = ( ( java.lang.String ) ( TYPE_1 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_3 , METHOD_3 ( ) , null , VAR_1 [ 0 ] ) ) ) ; if ( ( VAR_2 ) == null ) { METHOD_4 ( ) ; } VAR_4 = VAR_2 . toUpperCase ( ) ; VAR_5 = VAR_2 . toLowerCase ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = new java.lang.Object [ ] { null } ; VAR_2 = ( ( java.lang.String ) ( TYPE_1 . METHOD_2 ( null , STRING_1 , STRING_2 , VAR_3 , METHOD_3 ( ) , null , VAR_1 [ 0 ] ) ) ) ; while ( ( VAR_2 ) == null ) { METHOD_4 ( ) ; METHOD_1 ( ) ; } VAR_4 = VAR_2 . toUpperCase ( ) ; VAR_5 = VAR_2 . toLowerCase ( ) ; }\n"}
{"problem": "private boolean METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_3 , VAR_1 . get ( VAR_4 ) ) ; java.lang.String VAR_5 = METHOD_2 ( VAR_6 , VAR_1 . get ( VAR_7 ) ) ; return ( VAR_2 == null ) || ( STRING_1 . equals ( VAR_5 ) ) ; }\n", "fixed": "private boolean METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_3 , VAR_1 . get ( VAR_4 ) ) ; java.lang.String VAR_5 = METHOD_2 ( VAR_6 , VAR_1 . get ( VAR_7 ) ) ; return ( ( VAR_2 == null ) || ( STRING_1 . equals ( VAR_5 ) ) ) || ( VAR_5 == null ) ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { int result = TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( STRING_1 ) , TYPE_3 . METHOD_3 ( STRING_2 ) , VAR_3 , VAR_4 ) ; if ( result == ( VAR_5 ) ) { VAR_6 . put ( STRING_3 , VAR_2 ) ; TYPE_4 . METHOD_4 ( ) ; } }\n", "fixed": "public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { int result = TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( STRING_1 ) , TYPE_3 . METHOD_3 ( STRING_2 ) , VAR_3 , VAR_4 ) ; if ( result == ( VAR_5 ) ) { VAR_6 . put ( STRING_3 , VAR_2 ) ; TYPE_4 . METHOD_4 ( ) ; return true ; } return false ; }\n"}
{"problem": "public boolean METHOD_1 ( int VAR_1 , TYPE_1 msg ) { if ( msg . getType ( ) . equals ( STRING_1 ) ) { java.lang.String VAR_2 = METHOD_2 ( msg . METHOD_3 ( ) ) . TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; java.lang.System.out.println ( ( STRING_2 + VAR_2 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_3 . METHOD_6 ( ) ; java.lang.System.out.println ( STRING_3 ) ; } else { } return false ; }\n", "fixed": "public boolean METHOD_1 ( int VAR_1 , TYPE_1 msg ) { java.lang.String VAR_2 = METHOD_2 ( msg . METHOD_3 ( ) ) . TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ; java.lang.System.out.println ( ( STRING_2 + VAR_2 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_3 . METHOD_6 ( ) ; java.lang.System.out.println ( STRING_3 ) ; return false ; }\n"}
{"problem": "public TYPE_1 get ( int index ) { if ( index >= ( size ( ) ) ) { throw new TYPE_2 ( ( ( ( STRING_1 + index ) + STRING_2 ) + ( size ) ) ) ; } TYPE_3 < TYPE_1 > . VAR_1 result = VAR_2 ; while ( index != 0 ) { result = VAR_3 ; index -- ; } return result . data ; }\n", "fixed": "public TYPE_1 get ( int index ) { if ( index >= ( size ( ) ) ) { throw new TYPE_2 ( ( ( ( STRING_1 + index ) + STRING_2 ) + ( size ) ) ) ; } TYPE_3 < TYPE_1 > . VAR_1 result = VAR_2 ; while ( index != 0 ) { result = VAR_3 ; index -- ; } return result . getData ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { android.content.Intent i = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; i . METHOD_3 ( STRING_1 , VAR_3 . get ( ( position - 1 ) ) . METHOD_4 ( ) ) ; i . METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_5 ( i ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { if ( position > 0 ) { android.content.Intent i = new android.content.Intent ( METHOD_2 ( ) , VAR_2 class ) ; i . METHOD_3 ( STRING_1 , VAR_3 . get ( ( position - 1 ) ) . METHOD_4 ( ) ) ; i . METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_5 ( i ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = null ; TYPE_2 VAR_2 = VAR_3 ; VAR_3 = VAR_4 ; if ( ( VAR_3 ) == null ) { VAR_5 = null ; } else { VAR_1 = VAR_6 ; VAR_7 = null ; } VAR_8 = VAR_9 ; VAR_10 = null ; VAR_6 = null ; VAR_11 = false ; VAR_9 = VAR_2 ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = null ; TYPE_2 VAR_2 = VAR_3 ; VAR_3 = VAR_4 ; VAR_1 = VAR_6 ; if ( ( VAR_3 ) == null ) { VAR_5 = null ; } else { VAR_7 = null ; } VAR_8 = VAR_9 ; VAR_10 = null ; VAR_6 = null ; VAR_11 = false ; VAR_9 = VAR_2 ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( ) ; new java.lang.Thread ( VAR_1 , STRING_1 ) . start ( ) ; VAR_2 = new TYPE_3 ( ) ; new java.lang.Thread ( VAR_2 , STRING_2 ) . start ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; VAR_1 = new TYPE_2 ( ) ; new java.lang.Thread ( VAR_1 , STRING_1 ) . start ( ) ; VAR_2 = new TYPE_3 ( ) ; new java.lang.Thread ( VAR_2 , STRING_2 ) . start ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 out ) throws java.lang.Exception { out . METHOD_2 ( STRING_1 , this . getClass ( ) . METHOD_3 ( ) ) ; out . METHOD_4 ( ( STRING_2 + ( VAR_1 . length ) ) ) ; for ( TYPE_2 VAR_2 : VAR_1 ) { out . METHOD_4 ( ( STRING_3 + ( VAR_2 . size ( ) ) ) ) ; for ( TYPE_3 VAR_3 : VAR_2 ) { VAR_3 . METHOD_1 ( out ) ; } out . METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 out ) throws java.lang.Exception { out . METHOD_2 ( STRING_1 , this . getClass ( ) . METHOD_3 ( ) ) ; out . METHOD_4 ( ( STRING_2 + ( VAR_1 . length ) ) ) ; for ( TYPE_2 VAR_2 : VAR_1 ) { out . METHOD_4 ( ( STRING_3 + ( VAR_2 . size ( ) ) ) ) ; for ( TYPE_3 VAR_3 : VAR_2 ) { VAR_3 . METHOD_1 ( out ) ; out . METHOD_4 ( ) ; } out . METHOD_4 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { final java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( VAR_2 , VAR_3 ) ; final TYPE_1 < java.lang.Object > VAR_4 = VAR_5 . METHOD_2 ( VAR_6 , VAR_1 , new TYPE_2 < > ( ) , null , new java.lang.Object ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { final java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( VAR_2 , VAR_3 ) ; VAR_5 . METHOD_2 ( VAR_6 , VAR_1 , new TYPE_2 < > ( ) , null , new java.lang.Object ( ) ) ; }\n"}
{"problem": "private java.util.Properties METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { java.io.InputStream VAR_2 = null ; try { VAR_2 = new java.io.FileInputStream ( VAR_1 ) ; java.util.Properties VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; return VAR_3 ; } catch ( java.lang.Exception VAR_4 ) { throw new TYPE_1 ( STRING_1 , VAR_4 ) ; } finally { TYPE_3 . METHOD_3 ( VAR_2 ) ; } }\n", "fixed": "private java.util.Properties METHOD_1 ( java.io.File VAR_1 ) throws TYPE_1 { java.io.InputStream VAR_2 = null ; try { VAR_2 = new java.io.FileInputStream ( VAR_1 ) ; java.util.Properties VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; return VAR_3 ; } catch ( java.lang.Exception VAR_4 ) { throw new TYPE_1 ( STRING_1 , VAR_4 ) ; } finally { TYPE_3 . METHOD_3 ( VAR_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; switch ( VAR_2 . METHOD_2 ( ) ) { case VAR_3 : METHOD_3 ( VAR_2 ) ; return ; case VAR_4 : METHOD_4 ( VAR_2 ) ; case VAR_5 : METHOD_5 ( VAR_2 ) ; return ; case VAR_6 : METHOD_6 ( VAR_2 ) ; return ; default : out . METHOD_7 ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; switch ( VAR_2 . METHOD_2 ( ) ) { case VAR_3 : METHOD_3 ( VAR_2 ) ; return ; case VAR_4 : METHOD_4 ( VAR_2 ) ; return ; case VAR_5 : METHOD_5 ( VAR_2 ) ; return ; case VAR_6 : METHOD_6 ( VAR_2 ) ; return ; default : out . METHOD_7 ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_1 = VAR_1 . toLowerCase ( ) ; java.util.List < ? > VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) == 0 ) return false ; else { java.lang.Object VAR_3 = VAR_2 . get ( 0 ) ; return VAR_3 instanceof java.lang.Double ; } }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < ? > VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 . size ( ) ) == 0 ) return false ; else { java.lang.Object VAR_3 = VAR_2 . get ( 0 ) ; return VAR_3 instanceof java.lang.Double ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 ) ; if ( VAR_2 != null ) { TYPE_3 VAR_3 = VAR_4 . METHOD_3 ( VAR_2 ) ; if ( VAR_3 != null ) { java.lang.String VAR_5 = TYPE_4 . METHOD_4 ( ) ; TYPE_5 VAR_6 = new TYPE_5 ( VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_6 ) ; try { VAR_4 . METHOD_5 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_7 . METHOD_6 ( ) ; } } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 != null ) && ( ( VAR_4 . METHOD_3 ( VAR_2 ) ) != null ) ) { try { VAR_4 . METHOD_5 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_7 . METHOD_6 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( this . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) . METHOD_4 ( getString ( VAR_3 ) , VAR_4 . getText ( ) . toString ( ) ) . commit ( ) ; TYPE_1 . METHOD_5 ( ) . METHOD_6 ( VAR_4 . getText ( ) . toString ( ) , this ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( this . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) . METHOD_4 ( getString ( VAR_3 ) , VAR_4 . getText ( ) . toString ( ) ) . commit ( ) ; TYPE_1 . METHOD_5 ( ) . METHOD_6 ( VAR_4 . getText ( ) . toString ( ) , this , true ) ; } }\n"}
{"problem": "private java.lang.String METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; for ( TYPE_1 < java.lang.String , java.lang.String > VAR_3 : VAR_4 . METHOD_4 ( ) ) { VAR_1 . METHOD_2 ( STRING_2 , VAR_3 . METHOD_5 ( ) , VAR_3 . getValue ( ) ) ; } java.lang.System.out.print ( STRING_3 ) ; java.lang.String VAR_5 = VAR_6 . METHOD_6 ( ) ; return VAR_5 . trim ( ) . toLowerCase ( ) ; }\n", "fixed": "private java.lang.String METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > VAR_3 : VAR_4 . METHOD_4 ( ) ) { VAR_1 . METHOD_2 ( STRING_2 , VAR_3 . METHOD_5 ( ) , VAR_3 . getValue ( ) ) ; } java.lang.System.out.print ( STRING_3 ) ; java.lang.String VAR_5 = VAR_6 . METHOD_6 ( ) ; return VAR_5 . trim ( ) . toLowerCase ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String out = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = TYPE_1 . METHOD_3 ( out ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String out = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = TYPE_1 . METHOD_3 ( out ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_2 ) ; TYPE_2 . assertTrue ( VAR_1 . METHOD_5 ( ) ) ; }\n"}
{"problem": "void METHOD_1 ( java.lang.String element , java.lang.String text ) { switch ( element ) { case VAR_1 : { METHOD_2 ( text ) ; METHOD_3 ( VAR_2 , text ) ; break ; } case VAR_3 : { if ( VAR_4 ) METHOD_4 ( ) ; else { METHOD_5 ( ) ; METHOD_1 ( VAR_1 , getString ( VAR_5 ) ) ; } METHOD_3 ( VAR_6 , null ) ; break ; } } }\n", "fixed": "void METHOD_1 ( java.lang.String text ) { if ( text != null ) { METHOD_2 ( text ) ; } if ( VAR_4 ) { METHOD_3 ( text ) ; METHOD_4 ( ) ; } else { METHOD_2 ( getString ( VAR_5 ) ) ; METHOD_3 ( null ) ; METHOD_5 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( int [ ] VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { VAR_2 . METHOD_2 ( ( i % INT_1 ) , ( i / INT_1 ) , TYPE_1 . METHOD_3 ( VAR_1 [ i ] ) ) ; } METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( int [ ] VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { VAR_2 . METHOD_2 ( ( i % INT_1 ) , ( i / INT_1 ) , VAR_1 [ i ] ) ; } METHOD_4 ( ) ; }\n"}
{"problem": "private boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_2 . getSelection ( ) ) { if ( VAR_3 . METHOD_2 ( ) . equals ( VAR_1 ) ) { return true ; } } for ( TYPE_1 VAR_4 : VAR_2 . METHOD_3 ( ) ) { java.lang.Boolean VAR_5 = METHOD_1 ( VAR_1 , VAR_4 ) ; if ( VAR_5 != null ) { return VAR_5 ; } } return false ; }\n", "fixed": "private boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { for ( TYPE_2 VAR_3 : VAR_2 . getSelection ( ) ) { if ( VAR_3 . METHOD_2 ( ) . equals ( VAR_1 ) ) { return true ; } } for ( TYPE_1 VAR_4 : VAR_2 . METHOD_3 ( ) ) { return METHOD_1 ( VAR_1 , VAR_4 ) ; } return false ; }\n"}
{"problem": "public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { byte [ ] VAR_2 = VAR_3 ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 [ i ] , VAR_2 ) ; METHOD_2 ( ( STRING_1 + ( VAR_1 [ i ] . name ( ) ) ) , TYPE_2 . METHOD_3 ( VAR_4 , VAR_2 ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { byte [ ] VAR_2 = VAR_3 ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 [ i ] , VAR_2 , true ) ; METHOD_2 ( ( STRING_1 + ( VAR_1 [ i ] . name ( ) ) ) , TYPE_2 . METHOD_3 ( VAR_4 , VAR_2 ) ) ; } }\n"}
{"problem": "public static java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , new TYPE_3 ( false ) ) ; java.util.Set < java.lang.String > VAR_3 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_4 class . getName ( ) ) ; java.util.List < TYPE_1 > VAR_5 = new java.util.ArrayList ( ) ; for ( java.lang.String className : VAR_3 ) { java.util.List < TYPE_1 > VAR_6 = TYPE_4 . METHOD_4 ( className ) ; TYPE_4 . METHOD_5 ( VAR_5 , VAR_6 ) ; } return VAR_5 ; }\n", "fixed": "private static java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , new TYPE_3 ( false ) ) ; java.util.Set < java.lang.String > VAR_3 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_4 class . getName ( ) ) ; java.util.List < TYPE_1 > VAR_5 = new java.util.ArrayList ( ) ; for ( java.lang.String className : VAR_3 ) { java.util.List < TYPE_1 > VAR_6 = TYPE_4 . METHOD_4 ( className ) ; TYPE_4 . METHOD_5 ( VAR_5 , VAR_6 ) ; } return VAR_5 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_1 out = new TYPE_1 ( ) ; VAR_4 = VAR_2 . getString ( VAR_5 ) ; VAR_6 = VAR_2 . getString ( VAR_7 ) ; VAR_8 = VAR_2 . getString ( VAR_9 ) ; VAR_10 = VAR_2 . getInt ( VAR_11 ) ; VAR_12 = VAR_2 . getInt ( VAR_13 ) ; return out ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; TYPE_1 out = new TYPE_1 ( ) ; VAR_4 = VAR_2 . getString ( VAR_5 ) ; VAR_6 = VAR_2 . getString ( VAR_7 ) ; VAR_8 = VAR_2 . getString ( VAR_9 ) ; VAR_10 = VAR_2 . getInt ( VAR_11 ) ; VAR_12 = VAR_2 . getInt ( VAR_13 ) ; VAR_1 . remove ( VAR_3 ) ; return out ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String [ ] > VAR_3 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_2 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , java.util.Arrays.asList ( VAR_3 . getValue ( ) ) ) ; VAR_2 . METHOD_6 ( ( ( TYPE_4 ) ( VAR_1 . METHOD_7 ( ) . METHOD_8 ( STRING_1 ) ) ) ) ; } return VAR_2 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_6 ( ( ( TYPE_4 ) ( VAR_1 . METHOD_7 ( ) . METHOD_8 ( STRING_1 ) ) ) ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String [ ] > VAR_3 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_2 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , java.util.Arrays.asList ( VAR_3 . getValue ( ) ) ) ; } return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( ) { java.lang.String value = ( ( java.lang.String ) ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ) ) ; switch ( value ) { case VAR_2 : METHOD_3 ( null , VAR_3 , null ) ; break ; case VAR_4 : METHOD_3 ( null , VAR_5 , null ) ; break ; } METHOD_3 ( null , VAR_6 , null ) ; }\n", "fixed": "private void METHOD_1 ( ) { java.lang.String value = ( ( java.lang.String ) ( TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ) ) ; switch ( value ) { case VAR_2 : METHOD_3 ( null , VAR_3 , null ) ; break ; case VAR_4 : METHOD_3 ( null , VAR_5 , null ) ; break ; default : METHOD_3 ( null , VAR_3 , null ) ; break ; } METHOD_3 ( null , VAR_6 , null ) ; }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 source , TYPE_1 step ) { for ( TYPE_2 VAR_1 : VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( ) . equals ( source ) ) && ( VAR_1 . METHOD_3 ( ) . equals ( step ) ) ) { return VAR_1 . METHOD_4 ( ) ; } } return - 1 ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 source , TYPE_1 step ) { for ( TYPE_2 VAR_1 : VAR_2 ) { if ( ( ( VAR_1 . METHOD_2 ( ) . equals ( source ) ) && ( VAR_1 . METHOD_3 ( ) . equals ( step ) ) ) || ( ( VAR_1 . METHOD_2 ( ) . equals ( step ) ) && ( VAR_1 . METHOD_3 ( ) . equals ( source ) ) ) ) { return VAR_1 . METHOD_4 ( ) ; } } return - 1 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws java.lang.Exception { for ( TYPE_4 VAR_3 : VAR_1 . METHOD_2 ( ) ) { try { return TYPE_5 . METHOD_1 ( VAR_3 , VAR_2 ) ; } catch ( java.lang.Exception VAR_4 ) { } } throw new java.lang.Exception ( ( STRING_1 + VAR_2 ) ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws java.lang.Exception { for ( TYPE_4 VAR_3 : VAR_1 . METHOD_2 ( ) ) { try { return TYPE_5 . METHOD_1 ( VAR_3 , VAR_2 ) ; } catch ( java.lang.Exception VAR_4 ) { } } throw new java.lang.Exception ( ( STRING_1 + ( VAR_2 . getId ( ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > data ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_4 . setText ( VAR_6 ) ; VAR_7 . METHOD_4 ( ) ; if ( ( data != null ) && ( ! ( data . isEmpty ( ) ) ) ) { VAR_7 . METHOD_5 ( data ) ; VAR_4 . setText ( null ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > data ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_4 . setText ( VAR_6 ) ; VAR_7 . METHOD_4 ( ) ; if ( ( data != null ) && ( ! ( data . isEmpty ( ) ) ) ) { VAR_7 . METHOD_5 ( data ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_3 = METHOD_3 ( ) ; VAR_2 . add ( VAR_3 . getId ( ) ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; return VAR_1 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_3 = METHOD_3 ( ) ; VAR_2 . add ( VAR_3 . getId ( ) ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; return VAR_1 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; try { java.lang.String VAR_6 = VAR_2 . getString ( ( ( VAR_7 ) + VAR_1 ) , TYPE_3 . name ( ) ) ; return TYPE_1 . METHOD_3 ( VAR_6 ) ; } catch ( java.lang.Exception VAR_8 ) { } return VAR_9 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ; try { java.lang.String VAR_6 = VAR_2 . getString ( ( ( VAR_7 ) + VAR_1 ) , TYPE_3 . name ( ) ) ; return TYPE_1 . METHOD_3 ( VAR_6 . toUpperCase ( ) ) ; } catch ( java.lang.Exception VAR_8 ) { } return VAR_9 ; }\n"}
{"problem": "public java.lang.StringBuilder METHOD_1 ( java.lang.String [ ] [ ] field ) { java.lang.StringBuilder result = new java.lang.StringBuilder ( ) ; for ( int j = 0 ; j < ( this . VAR_1 . METHOD_2 ( ) ) ; ++ j ) { for ( int i = 0 ; i < ( this . VAR_1 . METHOD_3 ( ) ) ; ++ i ) { result . append ( field [ i ] [ j ] ) . append ( STRING_1 ) ; } result . append ( \"\\n\" ) ; } return result ; }\n", "fixed": "public java.lang.StringBuilder METHOD_1 ( java.lang.String [ ] [ ] field ) { java.lang.StringBuilder result = new java.lang.StringBuilder ( ) ; for ( int j = 0 ; j < ( VAR_1 . METHOD_2 ( ) ) ; j ++ ) { for ( int i = 0 ; i < ( VAR_1 . METHOD_3 ( ) ) ; i ++ ) { result . append ( field [ i ] [ j ] ) . append ( STRING_1 ) ; } result . append ( \"\\n\" ) ; } return result ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; VAR_3 = ( ( ( VAR_4 ) % INT_1 ) == 0 ) ? 1 : 0 ; ( VAR_4 ) ++ ; java.lang.System.out.println ( ( STRING_1 + ( VAR_3 ) ) ) ; VAR_5 . METHOD_2 ( VAR_6 [ VAR_3 ] . METHOD_3 ( ) , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; VAR_3 = ( ( ( VAR_4 ) % INT_1 ) == 0 ) ? 0 : 1 ; java.lang.System.out.println ( ( STRING_1 + ( VAR_3 ) ) ) ; VAR_5 . METHOD_2 ( VAR_6 [ VAR_3 ] . METHOD_3 ( ) , VAR_3 ) ; ( VAR_4 ) ++ ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { java.lang.String [ ] tmp = VAR_1 . split ( STRING_1 ) ; java.lang.String format = tmp [ ( ( tmp . length ) - 1 ) ] ; TYPE_1 . METHOD_1 ( VAR_2 , format , new java.io.File ( VAR_3 ) ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_2 . METHOD_2 ( null , STRING_2 , STRING_3 , VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { java.lang.String [ ] tmp = VAR_1 . split ( STRING_1 ) ; java.lang.String format = tmp [ ( ( tmp . length ) - 1 ) ] ; TYPE_1 . METHOD_1 ( VAR_2 , format , new java.io.File ( VAR_3 ) ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException { try { return VAR_2 . METHOD_2 ( VAR_3 ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_4 . error ( STRING_1 , VAR_4 ) ; response . METHOD_3 ( VAR_5 , VAR_1 . METHOD_4 ( ) ) ; return null ; } }\n", "fixed": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException { try { return VAR_2 . METHOD_2 ( VAR_3 ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_4 . error ( STRING_1 , VAR_4 ) ; response . METHOD_3 ( VAR_5 ) ; return null ; } }\n"}
{"problem": "public boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( METHOD_3 ( ) ) == 0 ) { return true ; } else if ( ( METHOD_4 ( ) ) == 0 ) { return true ; } else if ( ( ( METHOD_4 ( ) ) == 1 ) && ( ( METHOD_3 ( ) ) == 1 ) ) { return true ; } return false ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( METHOD_3 ( ) ) == 0 ) { return true ; } else if ( ( METHOD_4 ( ) ) == 0 ) { return true ; } else if ( ( METHOD_4 ( ) ) == ( METHOD_3 ( ) ) ) { return true ; } return false ; } return false ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < > ( ) ; VAR_2 = new java.util.HashMap < > ( ) ; java.util.List < TYPE_1 > VAR_3 = VAR_4 . METHOD_2 ( ) ; for ( TYPE_1 VAR_5 : VAR_3 ) { VAR_1 . put ( VAR_5 . getName ( ) , java.lang.String . METHOD_3 ( VAR_5 . getId ( ) ) ) ; VAR_2 . put ( java.lang.String . METHOD_3 ( VAR_5 . getId ( ) ) , VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < > ( ) ; VAR_2 = new java.util.HashMap < > ( ) ; java.util.List < TYPE_1 > VAR_3 = VAR_4 . METHOD_2 ( ) ; for ( TYPE_1 VAR_5 : VAR_3 ) { VAR_1 . put ( VAR_5 . getName ( ) , java.lang.String . METHOD_3 ( VAR_5 . getId ( ) ) ) ; VAR_2 . put ( java.lang.String . METHOD_3 ( VAR_5 . getId ( ) ) , VAR_5 ) ; } }\n"}
{"problem": "private int METHOD_1 ( int VAR_1 , java.util.LinkedList < java.lang.Integer > VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 . METHOD_2 ( ) ) ; java.util.LinkedList < java.lang.Integer > VAR_5 ; for ( java.lang.Integer i : VAR_2 ) { if ( ! ( VAR_3 . get ( i ) ) ) { VAR_3 . set ( i ) ; VAR_5 = METHOD_3 ( i , VAR_3 ) ; if ( VAR_5 == null ) { continue ; } METHOD_4 ( VAR_1 , VAR_5 ) ; } } return 0 ; }\n", "fixed": "private int METHOD_1 ( int VAR_1 , java.util.LinkedList < java.lang.Integer > VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 . METHOD_2 ( ) ) ; java.util.LinkedList < java.lang.Integer > VAR_5 ; for ( java.lang.Integer i : VAR_2 ) { if ( ! ( VAR_3 . get ( i ) ) ) { VAR_3 . set ( i ) ; VAR_5 = METHOD_3 ( i , VAR_3 ) ; if ( VAR_5 == null ) { continue ; } METHOD_4 ( VAR_1 , VAR_5 ) ; return 1 ; } } return 0 ; }\n"}
{"problem": "public int METHOD_1 ( java.lang.String [ ] VAR_1 , java.lang.String VAR_2 ) { for ( java.lang.String filePath : VAR_1 ) { try { VAR_3 . METHOD_2 ( ) . METHOD_3 ( filePath , VAR_2 ) ; java.lang.System.out.println ( STRING_1 ) ; return 0 ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_4 ( ) ; } } return - 1 ; }\n", "fixed": "public int METHOD_1 ( java.lang.String [ ] VAR_1 , java.lang.String VAR_2 ) { try { for ( java.lang.String filePath : VAR_1 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( filePath , VAR_2 ) ; } java.lang.System.out.println ( STRING_1 ) ; return 0 ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_4 ( ) ; return - 1 ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_6 ) ) ) ; METHOD_5 ( ) ; TYPE_3 VAR_7 = ( ( TYPE_3 ) ( METHOD_4 ( VAR_8 ) ) ) ; TYPE_4 VAR_9 = new TYPE_5 ( ) . METHOD_6 ( getString ( VAR_10 ) ) . build ( ) ; VAR_7 . METHOD_7 ( VAR_9 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_6 ) ) ) ; METHOD_5 ( false ) ; TYPE_3 VAR_7 = ( ( TYPE_3 ) ( METHOD_4 ( VAR_8 ) ) ) ; TYPE_4 VAR_9 = new TYPE_5 ( ) . METHOD_6 ( getString ( VAR_10 ) ) . build ( ) ; VAR_7 . METHOD_7 ( VAR_9 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( VAR_2 , 1 , 1 , 0 ) ; assertEquals ( new java.lang.Integer ( 0 ) , VAR_1 . METHOD_2 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { fail ( ( STRING_1 + ( VAR_3 . METHOD_3 ( ) ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( VAR_2 , 1 , 1 , 1 ) ; assertEquals ( new java.lang.Integer ( 1 ) , VAR_1 . METHOD_2 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { fail ( ( STRING_1 + ( VAR_3 . METHOD_3 ( ) ) ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 . METHOD_1 ( VAR_4 [ VAR_2 ] , VAR_1 , VAR_3 , 1 , new java.util.Properties ( ) ) ; METHOD_1 ( VAR_1 , VAR_4 [ VAR_2 ] , VAR_3 ) ; java.util.List < TYPE_2 > VAR_5 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_5 . add ( VAR_6 [ VAR_2 ] ) ; TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_5 ) , VAR_1 , 0 , INT_1 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 ) { METHOD_1 ( VAR_1 , VAR_4 [ VAR_2 ] , VAR_3 ) ; java.util.List < TYPE_2 > VAR_5 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_5 . add ( VAR_6 [ VAR_2 ] ) ; TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_5 ) , VAR_1 , 0 , INT_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) ; TYPE_3 f = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_4 . METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_5 . METHOD_5 ( f . toString ( ) ) ; TYPE_5 . METHOD_5 ( VAR_1 . toString ( ) ) ; TYPE_6 . assertEquals ( VAR_2 , f . getName ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) ; TYPE_3 f = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_4 . METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_5 . METHOD_5 ( f . toString ( ) ) ; TYPE_5 . METHOD_5 ( VAR_1 . toString ( ) ) ; assertEquals ( VAR_2 , f . getName ( ) ) ; }\n"}
{"problem": "public void put ( double [ ] data ) { final int VAR_1 = data . length ; int i = 0 ; while ( i < VAR_1 ) { final double VAR_2 = data [ VAR_1 ] ; min = ( VAR_2 < ( min ) ) ? VAR_2 : min ; VAR_3 = ( VAR_2 > ( VAR_3 ) ) ? VAR_2 : VAR_3 ; } }\n", "fixed": "public void put ( double [ ] data ) { final int VAR_1 = data . length ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { final double VAR_2 = data [ i ] ; min = ( VAR_2 < ( min ) ) ? VAR_2 : min ; VAR_3 = ( VAR_2 > ( VAR_3 ) ) ? VAR_2 : VAR_3 ; } }\n"}
{"problem": "public void METHOD_1 ( float VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( text , ( ( ( METHOD_3 ( ) ) + ( METHOD_4 ( ) ) ) + ( VAR_3 ) ) , ( ( ( METHOD_5 ( ) ) + ( ( METHOD_6 ( ) ) / INT_1 ) ) - ( ( VAR_2 . METHOD_7 ( ) ) / INT_1 ) ) , VAR_4 , VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( float VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( text , ( ( ( METHOD_3 ( ) ) + ( METHOD_4 ( ) ) ) + ( VAR_3 ) ) , ( ( ( METHOD_5 ( ) ) + ( ( METHOD_6 ( ) ) / INT_1 ) ) - ( ( ( VAR_2 . METHOD_7 ( ) ) * ( VAR_4 ) ) / INT_1 ) ) , VAR_4 , VAR_5 ) ; }\n"}
{"problem": "public static synchronized java.util.Date METHOD_1 ( java.lang.String pattern , java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) . get ( pattern ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_1 ( pattern ) ; TYPE_2 . METHOD_2 ( ) . put ( pattern , VAR_2 ) ; } try { return VAR_2 . METHOD_3 ( VAR_1 ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } return null ; }\n", "fixed": "public static synchronized java.util.Date METHOD_1 ( java.lang.String pattern , java.lang.String VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) . get ( pattern ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_1 ( pattern ) ; TYPE_2 . METHOD_2 ( ) . put ( pattern , VAR_2 ) ; } try { return VAR_2 . METHOD_3 ( VAR_1 ) ; } catch ( TYPE_3 VAR_3 ) { } return null ; }\n"}
{"problem": "private java.util.ArrayList < java.lang.Integer > METHOD_1 ( int VAR_1 ) { java.util.ArrayList < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > ( ) ; for ( int i = 0 ; i < ( VAR_2 [ VAR_1 ] . length ) ; i ++ ) { if ( ( VAR_2 [ VAR_1 ] [ i ] ) != 0 ) { result . add ( ( i - 1 ) ) ; } } return result ; }\n", "fixed": "private java.util.ArrayList < java.lang.Integer > METHOD_1 ( int VAR_1 ) { java.util.ArrayList < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > ( ) ; for ( int i = 0 ; i < ( VAR_2 [ VAR_1 ] . length ) ; i ++ ) { if ( ( VAR_2 [ VAR_1 ] [ i ] ) != 0 ) { result . add ( i ) ; } } return result ; }\n"}
{"problem": "public synchronized TYPE_1 METHOD_1 ( final TYPE_1 event ) { if ( event == null ) { throw new TYPE_2 ( STRING_1 ) ; } long start = TYPE_3 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( event ) ; event . METHOD_4 ( ) ; long VAR_2 = start - ( TYPE_3 . METHOD_2 ( ) ) ; if ( VAR_2 > INT_1 ) { this . VAR_3 . METHOD_5 ( VAR_4 , STRING_2 , new java.lang.Object [ ] { event , VAR_2 } ) ; } return event ; }\n", "fixed": "public synchronized TYPE_1 METHOD_1 ( final TYPE_1 event ) { if ( event == null ) { throw new TYPE_2 ( STRING_1 ) ; } long start = TYPE_3 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( event ) ; event . METHOD_4 ( ) ; long VAR_2 = ( TYPE_3 . METHOD_2 ( ) ) - start ; if ( VAR_2 > INT_1 ) { this . VAR_3 . METHOD_5 ( VAR_4 , STRING_2 , new java.lang.Object [ ] { event , VAR_2 } ) ; } return event ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 ) ? VAR_1 : VAR_1 . METHOD_3 ( STRING_1 ) ? VAR_1 + STRING_2 : VAR_1 . METHOD_3 ( STRING_3 ) ? ( TYPE_1 . METHOD_4 ( VAR_1 , STRING_3 ) ) + STRING_4 : VAR_1 + STRING_1 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( VAR_1 . METHOD_3 ( STRING_2 ) ) ) || ( VAR_1 . METHOD_3 ( STRING_4 ) ) ? VAR_1 : VAR_1 . METHOD_3 ( STRING_1 ) ? VAR_1 + STRING_2 : VAR_1 . METHOD_3 ( STRING_3 ) ? ( TYPE_1 . METHOD_4 ( VAR_1 , STRING_3 ) ) + STRING_4 : VAR_1 + STRING_1 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String op ) { for ( java.lang.String key : this . VAR_1 . METHOD_2 ( ) ) { java.lang.String VAR_2 = key ; java.lang.String VAR_3 = this . VAR_1 . get ( VAR_2 ) ; if ( op . equals ( VAR_3 ) ) { return key ; } } return STRING_1 ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String op ) { for ( java.lang.String key : this . VAR_1 . METHOD_2 ( ) ) { java.lang.String value = this . VAR_1 . get ( key ) ; if ( op . equals ( value ) ) { return key ; } } return null ; }\n"}
{"problem": "public final void METHOD_1 ( ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_1 , VAR_2 ) ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } while ( ! ( VAR_1 . isEmpty ( ) ) ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_2 , VAR_2 ) ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_2 . error ( STRING_1 , java.lang.Thread . METHOD_5 ( ) . getName ( ) ) ; VAR_3 . METHOD_4 ( ) ; } } }\n", "fixed": "public final void METHOD_1 ( ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_1 , VAR_2 ) ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } while ( ! ( VAR_1 . isEmpty ( ) ) ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_2 , VAR_2 ) ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } } }\n"}
{"problem": "public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { boolean result = super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( STRING_1 , VAR_5 . toString ( ) ) ; if ( VAR_6 . METHOD_3 ( ) ) { VAR_6 . METHOD_4 ( VAR_5 . x , VAR_5 . y ) ; } return result ; }\n", "fixed": "public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { boolean result = super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_6 . METHOD_3 ( ) ) { VAR_6 . METHOD_4 ( VAR_5 . x , VAR_5 . y ) ; } return result ; }\n"}
{"problem": "private void METHOD_1 ( ) { for ( int y = VAR_1 ; y <= ( height ) ; y ++ ) { VAR_2 . METHOD_2 ( ) [ y ] . METHOD_3 ( new TYPE_1 ( VAR_3 , ( ( VAR_3 ) + ( VAR_4 ) ) ) ) ; } }\n", "fixed": "private void METHOD_1 ( ) { for ( int y = VAR_1 ; y <= ( ( VAR_1 ) + ( height ) ) ; y ++ ) { VAR_2 . METHOD_2 ( ) [ y ] . METHOD_3 ( new TYPE_1 ( VAR_3 , ( ( VAR_3 ) + ( VAR_4 ) ) ) ) ; } java.lang.System.out.println ( ) ; }\n"}
{"problem": "private static void METHOD_1 ( java.util.List < TYPE_1 < java.lang.String , java.lang.String > > words , java.lang.String VAR_1 ) { try { java.io.FileOutputStream file = new java.io.FileOutputStream ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_3 ( ) ; TYPE_4 VAR_3 = VAR_2 . METHOD_2 ( ) ; TYPE_5 . METHOD_3 ( words , VAR_3 ) ; VAR_2 . METHOD_4 ( file ) ; file . METHOD_5 ( ) ; file . METHOD_6 ( ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_6 ( STRING_1 ) ; } }\n", "fixed": "private static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > words , java.lang.String VAR_1 ) { try { java.io.FileOutputStream file = new java.io.FileOutputStream ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_3 ( ) ; TYPE_4 VAR_3 = VAR_2 . METHOD_2 ( ) ; TYPE_5 . METHOD_3 ( words , VAR_3 ) ; VAR_2 . METHOD_4 ( file ) ; file . METHOD_5 ( ) ; file . METHOD_6 ( ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_6 ( STRING_1 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { return false ; } if ( ! ( VAR_2 . equals ( VAR_1 . METHOD_4 ( ) ) ) ) { return false ; } if ( ! ( VAR_3 . equals ( VAR_1 . METHOD_5 ( ) ) ) ) { return false ; } if ( ! ( VAR_4 . equals ( VAR_1 . METHOD_6 ( ) ) ) ) { return false ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { return false ; } if ( ! ( VAR_2 . equals ( VAR_1 . METHOD_4 ( ) ) ) ) { return false ; } if ( ! ( VAR_3 . equals ( VAR_1 . METHOD_5 ( ) ) ) ) { return false ; } return VAR_4 . equals ( VAR_1 . METHOD_6 ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; java.lang.String [ ] VAR_2 = VAR_3 ; if ( VAR_2 != null ) { for ( java.lang.String VAR_4 : VAR_2 ) { if ( ! ( TYPE_1 . isEmpty ( VAR_4 ) ) ) { this . VAR_1 . put ( VAR_4 , VAR_4 ) ; } } } this . VAR_1 = VAR_1 ; }\n", "fixed": "private void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; java.lang.String [ ] VAR_2 = VAR_3 ; if ( VAR_2 != null ) { for ( java.lang.String VAR_4 : VAR_2 ) { if ( ! ( TYPE_1 . isEmpty ( VAR_4 ) ) ) { VAR_1 . put ( VAR_4 , VAR_4 ) ; } } } this . VAR_1 = VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 method = VAR_2 ; this . handle ( VAR_3 , new java.lang.String [ ] { new java.lang.String ( VAR_4 ) , METHOD_2 ( method , false ) } , new java.lang.String [ ] { new java.lang.String ( VAR_4 ) , METHOD_2 ( method , true ) } , ( ( ( VAR_5 ) | ( VAR_6 ) ) | ( VAR_7 ) ) , VAR_8 , VAR_1 . METHOD_3 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_2 method , int start , int end ) { this . handle ( VAR_3 , new java.lang.String [ ] { new java.lang.String ( VAR_4 ) , METHOD_2 ( method , false ) } , new java.lang.String [ ] { new java.lang.String ( VAR_4 ) , METHOD_2 ( method , true ) } , ( ( ( VAR_5 ) | ( VAR_6 ) ) | ( VAR_7 ) ) , start , end ) ; }\n"}
{"problem": "private java.lang.Object [ ] METHOD_1 ( java.lang.Object [ ] VAR_1 ) { int i = 0 ; for ( java.lang.Object obj : VAR_1 ) { if ( obj != null ) { if ( obj . equals ( VAR_2 ) ) { VAR_1 [ i ] = VAR_3 ; } } else if ( i > ( VAR_4 . length ) ) { return VAR_1 ; } else { VAR_1 [ i ] = VAR_3 ; } i ++ ; } return VAR_1 ; }\n", "fixed": "private java.lang.Object [ ] METHOD_1 ( java.lang.Object [ ] VAR_1 ) { int i = 0 ; for ( java.lang.Object obj : VAR_1 ) { if ( obj != null ) { if ( obj . equals ( VAR_2 ) ) { VAR_1 [ i ] = VAR_3 ; } } else { VAR_1 [ i ] = VAR_3 ; } i ++ ; } return VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( ) { try { java.lang.String fileName = METHOD_2 ( ) ; java.io.File VAR_1 = new java.io.File ( METHOD_3 ( ) ) ; if ( ( ! ( VAR_1 . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) { VAR_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_3 ( ) , METHOD_8 ( ) ) ; } } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_9 ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { try { java.io.File VAR_1 = new java.io.File ( METHOD_3 ( ) ) ; if ( ( ! ( VAR_1 . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) { VAR_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_3 ( ) , METHOD_8 ( ) ) ; } } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_9 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 != null ) { METHOD_3 ( METHOD_4 ( ) ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_5 ( ) . get ( 1 ) ; if ( VAR_3 . METHOD_6 ( ) . contains ( STRING_1 ) ) { VAR_4 = false ; } TYPE_4 . METHOD_7 ( VAR_5 , ( STRING_2 + ( VAR_2 . METHOD_8 ( ) ) ) ) ; } else { TYPE_4 . METHOD_7 ( VAR_5 , STRING_3 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 != null ) { TYPE_3 VAR_3 = VAR_2 . METHOD_5 ( ) . get ( 1 ) ; if ( VAR_3 . METHOD_6 ( ) . contains ( STRING_1 ) ) { VAR_4 = false ; } METHOD_3 ( METHOD_4 ( ) ) ; TYPE_4 . METHOD_7 ( VAR_5 , ( STRING_2 + ( VAR_2 . METHOD_8 ( ) ) ) ) ; } else { TYPE_4 . METHOD_7 ( VAR_5 , STRING_3 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( VAR_1 instanceof TYPE_2 ) && ( ( value ) == ( ( ( TYPE_2 ) ( VAR_1 ) ) . value ) ) ) || ( ( VAR_1 instanceof TYPE_3 ) && ( ( value ) == ( ( ( TYPE_3 ) ( VAR_1 ) ) . value ) ) ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_1 instanceof TYPE_2 ? ( value ) == ( ( ( TYPE_2 ) ( VAR_1 ) ) . value ) : ( VAR_1 instanceof TYPE_3 ) && ( ( value ) == ( ( ( TYPE_3 ) ( VAR_1 ) ) . value ) ) ; }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , java.util.List < TYPE_1 > > VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_3 ) { for ( java.lang.String VAR_4 : VAR_5 ) { java.util.List < TYPE_1 > VAR_6 = VAR_1 . get ( ( ( VAR_4 + STRING_1 ) + ( VAR_2 . getId ( ) ) ) ) ; if ( VAR_6 != null ) { return VAR_6 ; } } return null ; } return VAR_1 . get ( VAR_2 . getId ( ) ) ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , java.util.List < TYPE_1 > > VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_3 ) { for ( java.lang.String VAR_4 : VAR_5 ) { java.util.List < TYPE_1 > VAR_6 = VAR_1 . get ( ( ( VAR_4 + STRING_1 ) + ( VAR_2 . getId ( ) ) ) ) ; if ( VAR_6 != null ) { return VAR_6 ; } } } return VAR_1 . get ( VAR_2 . getId ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . set ( STRING_1 , this . VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ( ( ( ( ( ( VAR_4 ) + ( VAR_5 ) ) + STRING_2 ) + ( VAR_6 ) ) + ( this . VAR_1 ) ) + STRING_3 ) ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; VAR_2 . set ( STRING_1 , this . VAR_1 ) ; METHOD_2 ( ) ; VAR_3 . METHOD_4 ( ( ( ( ( ( ( VAR_4 ) + ( VAR_5 ) ) + STRING_2 ) + ( VAR_6 ) ) + ( this . VAR_1 ) ) + STRING_3 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { for ( java.util.Map.Entry < java.lang.String , TYPE_1 > VAR_1 : VAR_2 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } VAR_3 = VAR_4 ; if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_5 ( VAR_6 , VAR_3 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { for ( java.util.Map.Entry < java.lang.String , TYPE_1 > VAR_1 : VAR_2 . METHOD_2 ( ) ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } if ( ( VAR_5 ) != null ) { VAR_5 . METHOD_5 ( VAR_6 , VAR_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( final java.util.List < ? extends TYPE_1 > VAR_1 ) { for ( final TYPE_1 obj : VAR_1 ) { if ( ( obj . METHOD_2 ( ) ) != null ) { if ( obj . METHOD_3 ( ) ) { VAR_2 . remove ( obj . METHOD_2 ( ) ) ; } else { VAR_2 . put ( obj . METHOD_2 ( ) , obj ) ; } } } super . METHOD_1 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( final java.util.List < ? extends TYPE_1 > VAR_1 ) { for ( final TYPE_1 obj : VAR_1 ) { if ( ( obj . METHOD_2 ( ) ) != null ) { if ( ( ( obj . METHOD_3 ( ) ) != null ) && ( obj . METHOD_3 ( ) ) ) { VAR_2 . remove ( obj . METHOD_2 ( ) ) ; } else { VAR_2 . put ( obj . METHOD_2 ( ) , obj ) ; } } } super . METHOD_1 ( VAR_1 ) ; }\n"}
{"problem": "private float METHOD_1 ( ) { float VAR_1 = ( x ) + ( ( VAR_2 ) / INT_1 ) ; float VAR_3 = ( VAR_4 ) + ( ( VAR_2 ) / INT_1 ) ; return ( ( float ) ( TYPE_1 . METHOD_2 ( ( ( java.lang.Math.pow ( ( ( VAR_5 . METHOD_3 ( ) . x ) - VAR_1 ) , INT_1 ) ) + ( java.lang.Math.pow ( ( ( VAR_5 . METHOD_3 ( ) . VAR_4 ) - VAR_3 ) , INT_1 ) ) ) ) ) ) ; }\n", "fixed": "public float METHOD_1 ( ) { float VAR_1 = ( x ) + ( ( VAR_2 ) / INT_1 ) ; float VAR_3 = ( VAR_4 ) + ( ( VAR_2 ) / INT_1 ) ; return ( ( float ) ( TYPE_1 . METHOD_2 ( ( ( java.lang.Math.pow ( ( ( VAR_5 . METHOD_3 ( ) . x ) - VAR_1 ) , INT_1 ) ) + ( java.lang.Math.pow ( ( ( VAR_5 . METHOD_3 ( ) . VAR_4 ) - VAR_3 ) , INT_1 ) ) ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; TYPE_4 VAR_4 = new TYPE_4 ( ) ; switch ( position ) { case 0 : METHOD_2 ( VAR_2 ) ; break ; case 1 : METHOD_2 ( VAR_3 ) ; break ; case INT_1 : METHOD_2 ( VAR_4 ) ; break ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; switch ( position ) { case 0 : METHOD_2 ( VAR_2 ) ; break ; case 1 : METHOD_2 ( VAR_3 ) ; break ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , VAR_2 ) ; if ( VAR_3 == 0 ) { METHOD_3 ( ) ; } else { if ( ( VAR_4 . METHOD_4 ( ) ) == 0 ) { VAR_4 . METHOD_5 ( 0 ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , VAR_2 ) ; if ( VAR_3 == 0 ) { METHOD_3 ( ) ; } else if ( ( VAR_4 . METHOD_4 ( ) ) == 0 ) { VAR_4 . METHOD_5 ( 0 ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 b = new TYPE_1 ( ) ; b . METHOD_2 ( STRING_1 , VAR_2 . getId ( ) ) ; b . METHOD_3 ( STRING_2 , VAR_3 . METHOD_4 ( VAR_2 . getText ( ) . toString ( ) , STRING_3 , STRING_4 ) ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_5 ( b ) ; VAR_4 . show ( METHOD_6 ( ) , STRING_5 ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 b = new TYPE_1 ( ) ; b . METHOD_3 ( STRING_2 , VAR_3 . METHOD_4 ( VAR_2 . getText ( ) . toString ( ) , STRING_3 , STRING_4 ) ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_5 ( b ) ; VAR_4 . show ( METHOD_6 ( ) , STRING_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( VAR_2 != null ) { METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) ) ; if ( METHOD_3 ( ) . METHOD_5 ( ) . equals ( STRING_3 ) ) { METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_2 . METHOD_6 ( ) ) ) + STRING_2 ) ) ; } METHOD_7 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; if ( VAR_2 != null ) { METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_2 . METHOD_6 ( ) ) ) + STRING_2 ) ) ; if ( ( ( VAR_4 ) != null ) && ( ( VAR_2 . METHOD_6 ( ) ) != ( VAR_4 ) ) ) { METHOD_3 ( ) . METHOD_4 ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) ) ; } METHOD_7 ( ) ; } }\n"}
{"problem": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( 1 , VAR_3 ) ) ; if ( ( VAR_2 . METHOD_4 ( ) ) < ( VAR_4 ) ) { throw new TYPE_2 ( STRING_1 ) ; } else VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; if ( ( VAR_1 . METHOD_5 ( ) ) != 0 ) { throw new TYPE_2 ( STRING_2 ) ; } } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_2 ( VAR_5 ) ; } }\n", "fixed": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { byte [ ] buffer = VAR_2 . METHOD_3 ( VAR_3 ) ; if ( buffer != null ) VAR_1 . METHOD_2 ( buffer ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_2 ( VAR_5 ) ; } if ( ( VAR_1 . METHOD_5 ( ) ) != 0 ) { throw new TYPE_2 ( STRING_2 ) ; } }\n"}
{"problem": "public synchronized void METHOD_1 ( final TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; java.util.Set < TYPE_1 > VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { for ( TYPE_1 VAR_5 : VAR_3 ) { if ( ( VAR_5 . getId ( ) ) == ( VAR_1 . getId ( ) ) ) { java.lang.System.out.println ( STRING_1 ) ; VAR_3 . remove ( VAR_5 ) ; } } VAR_3 . add ( VAR_1 ) ; VAR_4 . put ( VAR_2 , VAR_3 ) ; } }\n", "fixed": "public synchronized void METHOD_1 ( final TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; java.util.Set < TYPE_1 > VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_3 != null ) { for ( TYPE_1 VAR_5 : VAR_3 ) { if ( ( VAR_5 . getId ( ) ) == ( VAR_1 . getId ( ) ) ) { VAR_3 . remove ( VAR_5 ) ; } } VAR_3 . add ( VAR_1 ) ; VAR_4 . put ( VAR_2 , VAR_3 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( int num ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( ( VAR_1 [ i ] ) == 0 ) { VAR_1 [ i ] = num ; return true ; } } return false ; }\n", "fixed": "public boolean METHOD_1 ( int num ) { if ( ( num <= 0 ) || ( num > INT_1 ) ) return false ; for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( ( VAR_1 [ i ] ) == 0 ) { VAR_1 [ i ] = num ; return true ; } } return false ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; java.lang.String VAR_3 = STRING_3 ; java.lang.String VAR_4 = STRING_4 ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_4 , VAR_3 ) ; VAR_6 . METHOD_1 ( VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; java.lang.String VAR_3 = STRING_3 ; java.lang.String VAR_4 = STRING_4 ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_6 . METHOD_1 ( VAR_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; final int VAR_1 = INT_1 ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; TYPE_1 VAR_3 = METHOD_5 ( ) ; TYPE_2 . info ( STRING_1 ) ; java.lang.Thread . METHOD_6 ( INT_2 ) ; assertEquals ( ( STRING_2 + ( VAR_3 . METHOD_7 ( ) ) ) , VAR_2 , VAR_3 . METHOD_7 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false ) ; final int VAR_1 = INT_1 ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; TYPE_1 VAR_3 = METHOD_5 ( ) ; TYPE_2 . info ( STRING_1 ) ; java.lang.Thread . METHOD_6 ( INT_2 ) ; assertEquals ( ( STRING_2 + ( VAR_3 . METHOD_7 ( ) ) ) , VAR_2 , VAR_3 . METHOD_7 ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String filePath ) { TYPE_1 VAR_1 = ( ) - > { int VAR_2 ; VAR_2 = file . METHOD_2 ( filePath ) ; if ( VAR_2 == ( VAR_3 ) ) { VAR_4 . METHOD_3 ( ) ; } else { VAR_4 . METHOD_4 ( VAR_2 ) ; } } ; VAR_1 . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String filePath ) { TYPE_1 VAR_1 = ( ) - > { int VAR_2 ; VAR_2 = file . METHOD_2 ( filePath ) ; if ( ( VAR_4 ) != null ) { if ( VAR_2 == ( VAR_3 ) ) { VAR_4 . METHOD_3 ( ) ; } else { VAR_4 . METHOD_4 ( VAR_2 ) ; } } } ; VAR_1 . METHOD_5 ( ) ; }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_3 ) return 1 ; java.lang.String VAR_4 = VAR_1 . name ; java.lang.String VAR_5 = VAR_2 . name ; return VAR_6 . METHOD_2 ( VAR_4 ) . replaceAll ( STRING_1 ) . METHOD_3 ( VAR_6 . METHOD_2 ( VAR_5 ) . replaceAll ( STRING_1 ) ) ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == VAR_3 ) return 1 ; if ( VAR_2 == VAR_3 ) return - 1 ; java.lang.String VAR_4 = VAR_1 . name ; java.lang.String VAR_5 = VAR_2 . name ; return VAR_6 . METHOD_2 ( VAR_4 ) . replaceAll ( STRING_1 ) . METHOD_3 ( VAR_6 . METHOD_2 ( VAR_5 ) . replaceAll ( STRING_1 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 event ) { if ( ! ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ) { f = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( f . METHOD_6 ( ) ) ; java.lang.System.out.print ( ( STRING_1 + ( VAR_2 . size ( ) ) ) ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 event ) { if ( ! ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ) { f = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( f . METHOD_6 ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 . METHOD_3 ( position ) ) ) ; java.lang.String VAR_3 = STRING_3 + ( VAR_2 . getString ( VAR_2 . METHOD_4 ( VAR_4 ) ) ) ; TYPE_4 VAR_5 = METHOD_5 ( VAR_3 ) ; android.content.Intent VAR_6 = new android.content.Intent ( this , VAR_7 class ) ; VAR_6 . METHOD_6 ( STRING_4 , VAR_5 ) ; METHOD_7 ( VAR_6 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 . METHOD_3 ( position ) ) ) ; java.lang.String VAR_3 = STRING_3 + ( VAR_2 . getString ( VAR_2 . METHOD_4 ( VAR_4 ) ) ) ; TYPE_4 VAR_5 = METHOD_5 ( VAR_3 ) ; android.content.Intent VAR_6 = new android.content.Intent ( this , VAR_7 class ) ; VAR_6 . METHOD_6 ( STRING_4 , VAR_5 ) ; METHOD_7 ( VAR_6 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { boolean VAR_1 = false ; int counter = 0 ; while ( ! VAR_1 ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.System.out.println ( ( ( ( STRING_1 + counter ) + STRING_2 ) + ( VAR_2 . METHOD_3 ( ) ) ) ) ; try { assert ( VAR_2 . METHOD_3 ( ) ) == 1.0 ; } catch ( java.lang.Exception VAR_3 ) { java.lang.System.out.println ( ( STRING_3 + counter ) ) ; } counter ++ ; } return VAR_2 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { boolean VAR_1 = false ; int counter = 0 ; while ( ! VAR_1 ) { VAR_1 = VAR_2 . METHOD_2 ( ) ; try { assert ( VAR_2 . METHOD_3 ( ) ) == 1.0 ; } catch ( java.lang.Exception VAR_3 ) { java.lang.System.out.println ( ( STRING_3 + counter ) ) ; } counter ++ ; } return VAR_2 ; }\n"}
{"problem": "protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean result = false ; if ( VAR_1 != null ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; if ( ( VAR_1 . METHOD_4 ( ) ) > 0 ) result = true ; } } return result ; }\n", "fixed": "protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean result = false ; if ( VAR_1 != null ) { if ( VAR_1 . METHOD_2 ( ) ) VAR_1 . METHOD_3 ( ) ; if ( ( VAR_1 . METHOD_4 ( ) ) > 0 ) result = true ; } return result ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( query , INT_1 ) ; query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; METHOD_4 ( query , INT_2 ) ; query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ; METHOD_4 ( query , INT_3 ) ; query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_5 ) ; METHOD_4 ( query , 0 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( query , INT_1 ) ; query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; METHOD_4 ( query , INT_2 ) ; query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ; METHOD_4 ( query , 1 ) ; query = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_5 ) ; METHOD_4 ( query , 0 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . toString ( ) ) ; if ( VAR_2 . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; } else { METHOD_7 ( ) ; METHOD_8 ( VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . toString ( ) ) ; if ( VAR_2 . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 ) ; } else { METHOD_7 ( ) ; METHOD_8 ( VAR_4 ) ; } }\n"}
{"problem": "private int METHOD_1 ( java.util.ArrayList < TYPE_1 [ ] > VAR_1 ) { int rows = 1 ; TYPE_1 time = new TYPE_1 ( startTime . METHOD_2 ( ) , startTime . METHOD_3 ( ) ) ; if ( ( VAR_1 . isEmpty ( ) ) == false ) rows ++ ; while ( time != null ) { time = METHOD_4 ( time , VAR_1 ) ; if ( time != null ) rows ++ ; } return rows ; }\n", "fixed": "private int METHOD_1 ( java.util.ArrayList < TYPE_1 [ ] > VAR_1 ) { int rows = 1 ; TYPE_1 time = null ; do { time = METHOD_4 ( time , VAR_1 ) ; if ( time != null ) rows ++ ; } while ( time != null ) ; return rows ; }\n"}
{"problem": "public static boolean METHOD_1 ( android.content.Context context ) { VAR_1 = true ; VAR_2 = VAR_3 ; if ( ( VAR_4 ) == ( VAR_5 ) ) { TYPE_1 . METHOD_2 ( context ) ; } if ( ( TYPE_1 . METHOD_3 ( ) ) > 1 ) TYPE_2 . METHOD_4 ( 0 , 0 , VAR_6 , 0 ) ; return true ; }\n", "fixed": "public static boolean METHOD_1 ( android.content.Context context ) { VAR_1 = true ; VAR_2 = VAR_3 ; if ( ( VAR_4 ) == ( VAR_5 ) ) { TYPE_1 . METHOD_2 ( context ) ; } if ( ( TYPE_1 . METHOD_3 ( ) ) > 1 ) { TYPE_2 . METHOD_4 ( 0 , 0 , VAR_6 , 0 ) ; TYPE_2 . METHOD_4 ( 0 , 0 , VAR_6 , 1 ) ; } return true ; }\n"}
{"problem": "public static void init ( ) { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; VAR_4 = 1 ; try { TYPE_3 . METHOD_1 ( STRING_1 , VAR_5 , VAR_6 ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_7 . METHOD_2 ( ) ; } }\n", "fixed": "public static void init ( ) { try { VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( ) ; TYPE_3 . METHOD_1 ( STRING_1 , VAR_5 , VAR_6 ) ; VAR_4 = 1 ; } catch ( java.lang.Throwable VAR_7 ) { VAR_7 . METHOD_2 ( ) ; VAR_1 = null ; VAR_3 = null ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( ! ( VAR_4 . getText ( ) . trim ( ) . equals ( STRING_1 ) ) ) { return ( ( ( VAR_1 + ( VAR_5 ) ) + VAR_3 ) + ( VAR_5 ) ) + ( VAR_4 . getText ( ) . trim ( ) ) ; } return ( VAR_1 + ( VAR_5 ) ) + VAR_3 ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_2 . getId ( ) ; if ( ! ( VAR_4 . getText ( ) . trim ( ) . equals ( STRING_1 ) ) ) { return ( ( ( VAR_1 + ( VAR_5 ) ) + VAR_3 ) + ( VAR_5 ) ) + ( VAR_4 . getText ( ) . trim ( ) ) ; } return ( VAR_1 + ( VAR_5 ) ) + VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ) ; METHOD_3 ( new TYPE_3 ( null , METHOD_4 ( ) ) ) ; java.lang.System.out.println ( METHOD_4 ( ) . length ) ; if ( VAR_5 . METHOD_5 ( VAR_1 ) ) { for ( TYPE_4 VAR_6 : VAR_5 . get ( VAR_1 ) ) { METHOD_3 ( VAR_6 ) ; } } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ) ; METHOD_3 ( new TYPE_3 ( null , METHOD_4 ( ) ) ) ; if ( VAR_5 . METHOD_5 ( VAR_1 ) ) { for ( TYPE_4 VAR_6 : VAR_5 . get ( VAR_1 ) ) { METHOD_3 ( VAR_6 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 listener ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( this . METHOD_2 ( ) [ 0 ] ) ) ; TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( ) [ i ] ) ) ; VAR_2 . METHOD_3 ( listener ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 listener ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( this . METHOD_2 ( ) [ 1 ] ) ) ; TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( ) [ i ] ) ) ; VAR_2 . METHOD_3 ( listener ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.io.InputStream VAR_3 ) { TYPE_2 VAR_4 = this . METHOD_2 ( VAR_1 ) ; java.lang.String VAR_5 = this . METHOD_3 ( VAR_2 , VAR_6 ) ; TYPE_3 VAR_7 = VAR_4 . METHOD_4 ( ) . append ( VAR_5 ) ; this . METHOD_5 ( new TYPE_4 ( VAR_7 , VAR_3 ) ) ; return VAR_7 . METHOD_6 ( ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.io.InputStream VAR_3 ) { java.lang.String VAR_5 = this . METHOD_3 ( VAR_2 , VAR_6 ) ; TYPE_3 VAR_7 = new TYPE_3 ( VAR_1 ) . append ( VAR_5 ) ; this . METHOD_5 ( new TYPE_4 ( VAR_7 , VAR_3 ) ) ; return VAR_7 . METHOD_6 ( ) ; }\n"}
{"problem": "private double METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; double VAR_3 = METHOD_2 ( VAR_1 ) ; final double VAR_4 = - ( VAR_5 . METHOD_3 ( VAR_3 , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ) ; if ( ( java.lang.Math.abs ( VAR_4 ) ) > FLOAT_1 ) { VAR_1 . METHOD_6 ( ) . METHOD_7 ( VAR_6 , VAR_4 ) ; } return VAR_3 ; }\n", "fixed": "private double METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; double VAR_3 = METHOD_2 ( VAR_1 ) ; final double VAR_4 = VAR_5 . METHOD_3 ( VAR_3 , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; if ( ( java.lang.Math.abs ( VAR_4 ) ) > FLOAT_1 ) { VAR_1 . METHOD_6 ( ) . METHOD_7 ( VAR_6 , VAR_4 ) ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 . getContext ( ) , VAR_3 class ) ; if ( null == item ) { TYPE_1 . METHOD_2 ( STRING_1 , ( STRING_2 + position ) ) ; return ; } intent . METHOD_3 ( VAR_4 , VAR_5 . METHOD_4 ( ) ) ; intent . METHOD_3 ( VAR_6 , VAR_5 . METHOD_5 ( ) ) ; VAR_2 . getContext ( ) . METHOD_6 ( intent ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { android.content.Intent intent = new android.content.Intent ( VAR_2 . getContext ( ) , VAR_3 class ) ; intent . METHOD_3 ( VAR_4 , VAR_5 . METHOD_4 ( ) ) ; intent . METHOD_3 ( VAR_6 , VAR_5 . METHOD_5 ( ) ) ; VAR_2 . getContext ( ) . METHOD_6 ( intent ) ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , INT_1 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( VAR_2 , STRING_1 , true ) ; VAR_3 = TYPE_2 . METHOD_2 ( ) . METHOD_5 ( VAR_2 , VAR_4 , VAR_5 ) ; VAR_3 . METHOD_6 ( STRING_2 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( VAR_2 , STRING_3 , true ) ; VAR_6 = TYPE_2 . METHOD_2 ( ) . METHOD_7 ( VAR_2 ) ; return VAR_2 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , INT_1 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( VAR_2 , STRING_1 , true ) ; VAR_3 = TYPE_2 . METHOD_2 ( ) . METHOD_5 ( VAR_2 , VAR_4 , VAR_5 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( VAR_2 , STRING_3 , true ) ; VAR_6 = TYPE_2 . METHOD_2 ( ) . METHOD_7 ( VAR_2 ) ; return VAR_2 ; }\n"}
{"problem": "private static java.util.List < java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( null , VAR_1 ) ) ) ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > VAR_4 = new java.util.ArrayList < java.util.Map < java.lang.String , java.lang.Object > > ( ) ; for ( TYPE_3 VAR_5 : VAR_3 . METHOD_3 ( ) ) { VAR_4 . add ( VAR_5 . METHOD_4 ( ) ) ; } return VAR_4 ; }\n", "fixed": "private static java.util.Set < java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( null , VAR_1 ) ) ) ; java.util.Set < java.util.Map < java.lang.String , java.lang.Object > > VAR_4 = new java.util.HashSet < java.util.Map < java.lang.String , java.lang.Object > > ( ) ; for ( TYPE_3 VAR_5 : VAR_3 . METHOD_3 ( ) ) { VAR_4 . add ( VAR_5 . METHOD_4 ( ) ) ; } return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ) ) ; TYPE_1 VAR_5 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_4 ( STRING_1 ) ) ) ; TYPE_2 . METHOD_5 ( METHOD_2 ( ) , VAR_1 ) ; TYPE_2 . METHOD_6 ( METHOD_2 ( ) , VAR_3 ) ; VAR_6 . METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ) ) ; TYPE_1 VAR_5 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_4 ( STRING_1 ) ) ) ; TYPE_2 . METHOD_6 ( METHOD_2 ( ) , VAR_3 ) ; TYPE_2 . METHOD_5 ( METHOD_2 ( ) , VAR_1 ) ; VAR_6 . METHOD_7 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 ; if ( ( super . METHOD_2 ( ) ) > INT_1 ) { VAR_2 = super . METHOD_3 ( ) ; java.lang.System.out.println ( ( ( ( ( STRING_1 + ( name ) ) + STRING_2 ) + VAR_2 ) + STRING_3 ) ) ; } else { VAR_2 = 0 ; java.lang.System.out.println ( STRING_4 ) ; } VAR_1 . METHOD_4 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int count ) { int VAR_2 ; if ( ( super . METHOD_2 ( ) ) > INT_1 ) { VAR_2 = ( super . METHOD_3 ( ) ) * count ; java.lang.System.out.println ( ( ( ( ( STRING_1 + ( name ) ) + STRING_2 ) + VAR_2 ) + STRING_3 ) ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; } else { VAR_2 = 0 ; java.lang.System.out.println ( STRING_4 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; if ( ! ( VAR_3 ) ) { VAR_1 . METHOD_4 ( VAR_4 ) . METHOD_5 ( false ) ; VAR_1 . METHOD_4 ( VAR_5 ) . METHOD_5 ( false ) ; VAR_1 . METHOD_4 ( VAR_6 ) . METHOD_5 ( false ) ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; if ( ! ( VAR_3 ) ) { VAR_1 . METHOD_4 ( VAR_4 ) . METHOD_5 ( false ) ; VAR_1 . METHOD_4 ( VAR_5 ) . METHOD_5 ( false ) ; } return true ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . i ( VAR_1 , STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( VAR_2 ) ; intent . METHOD_3 ( STRING_2 , VAR_3 . METHOD_4 ( ) ) ; intent . METHOD_3 ( STRING_3 , VAR_3 . METHOD_5 ( ) ) ; VAR_4 . METHOD_6 ( intent ) ; }\n", "fixed": "public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( VAR_2 ) ; intent . METHOD_3 ( STRING_2 , VAR_3 . METHOD_4 ( ) ) ; intent . METHOD_3 ( STRING_3 , VAR_3 . METHOD_5 ( ) ) ; VAR_4 . METHOD_6 ( intent ) ; }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 file : VAR_1 ) { if ( ! ( VAR_3 . METHOD_2 ( file ) ) ) { TYPE_2 VAR_4 = TYPE_3 . METHOD_3 ( file ) ; VAR_2 . add ( file ) ; VAR_3 . put ( file , VAR_4 ) ; } } return VAR_2 ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 file : VAR_1 ) { if ( ! ( VAR_3 . METHOD_2 ( file ) ) ) { TYPE_2 VAR_4 = TYPE_3 . METHOD_3 ( file ) ; if ( VAR_4 != null ) { VAR_2 . add ( file ) ; VAR_3 . put ( file , VAR_4 ) ; } } } return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) . METHOD_3 ( STRING_1 , VAR_4 ) ; if ( ( VAR_1 . size ( ) ) != 0 ) { VAR_5 . METHOD_4 ( VAR_6 ) ; VAR_7 . METHOD_5 ( VAR_8 ) ; } else { VAR_5 . METHOD_4 ( VAR_9 ) ; VAR_7 . METHOD_5 ( null ) ; } }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) . METHOD_3 ( STRING_1 , VAR_4 ) ; if ( ( VAR_1 . size ( ) ) != 0 ) { VAR_5 . METHOD_4 ( VAR_6 ) ; VAR_7 . METHOD_5 ( VAR_8 ) ; } else { VAR_5 . METHOD_4 ( VAR_9 ) ; VAR_7 . METHOD_5 ( null ) ; } }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String VAR_6 ) { TYPE_1 VAR_7 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 , VAR_5 ) ; TYPE_2 VAR_8 = new TYPE_3 ( ) . METHOD_2 ( VAR_1 ) . build ( ) ; VAR_9 . METHOD_3 ( ) . METHOD_4 ( VAR_8 ) ; VAR_10 . METHOD_5 ( VAR_11 . METHOD_6 ( ) ) . setValue ( VAR_7 ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String VAR_6 ) { TYPE_1 VAR_7 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 , VAR_5 ) ; TYPE_2 VAR_8 = new TYPE_3 ( ) . METHOD_2 ( VAR_1 ) . build ( ) ; VAR_9 . METHOD_3 ( ) . METHOD_4 ( VAR_8 ) ; VAR_10 . METHOD_5 ( VAR_9 . METHOD_3 ( ) . METHOD_6 ( ) ) . setValue ( VAR_7 ) ; }\n"}
{"problem": "void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , long id ) { this . id = id ; this . VAR_1 = VAR_1 ; if ( ( ( VAR_2 ) != null ) && ( ( VAR_2 . getId ( ) ) != id ) ) { VAR_2 = null ; } }\n", "fixed": "void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , java.lang.Long id ) { this . id = id ; this . VAR_1 = VAR_1 ; if ( ( ( VAR_2 ) != null ) && ( ( id == null ) || ( ! ( id . equals ( VAR_2 . getId ( ) ) ) ) ) ) { VAR_2 = null ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( TYPE_2 t : VAR_2 . values ( ) ) { if ( ( ( ( VAR_3 ) + INT_1 ) + ( t . METHOD_2 ( ) . length ( ) ) ) > INT_2 ) { TYPE_3 . fail ( ( STRING_1 + ( t . getName ( ) ) ) ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( TYPE_2 t : VAR_2 . values ( ) ) { if ( ( ( + INT_1 ) + ( t . METHOD_2 ( ) . length ( ) ) ) > INT_2 ) { TYPE_3 . fail ( ( STRING_1 + ( t . getName ( ) ) ) ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ) . METHOD_5 ( null ) ; java.lang.String VAR_2 = STRING_1 ; VAR_3 . METHOD_6 ( TYPE_3 . get ( ( ( VAR_4 ) + STRING_2 ) , VAR_2 ) ) . METHOD_7 ( TYPE_4 . status ( ) . METHOD_8 ( ) ) ; TYPE_5 . METHOD_9 ( VAR_1 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_2 = STRING_1 ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) . METHOD_5 ( null ) ; VAR_3 . METHOD_6 ( TYPE_3 . get ( ( ( VAR_4 ) + STRING_2 ) , VAR_2 ) ) . METHOD_7 ( TYPE_4 . status ( ) . METHOD_8 ( ) ) ; TYPE_5 . METHOD_9 ( VAR_1 ) . METHOD_3 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { if ( VAR_1 ) { if ( ( VAR_2 ) == 0 ) { METHOD_2 ( position ) ; } else if ( ( VAR_2 ) == 1 ) { if ( ! ( ( ( position % INT_1 ) > INT_2 ) || ( ( position / INT_1 ) < INT_3 ) ) ) { METHOD_3 ( position ) ; } } } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { if ( ( VAR_1 ) && ( ! ( ( ( position % INT_1 ) > INT_2 ) || ( ( position / INT_1 ) < INT_3 ) ) ) ) { if ( ( VAR_2 ) == 0 ) METHOD_2 ( position ) ; else if ( ( VAR_2 ) == 1 ) METHOD_3 ( position ) ; } }\n"}
{"problem": "public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj instanceof TYPE_1 ) { TYPE_1 c = ( ( TYPE_1 ) ( obj ) ) ; java.lang.String id = c . getId ( ) ; if ( ( id != null ) || ( id . equals ( getId ( ) ) ) ) { return true ; } } return false ; }\n", "fixed": "public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj instanceof TYPE_1 ) { TYPE_1 c = ( ( TYPE_1 ) ( obj ) ) ; java.lang.String id = c . getId ( ) ; if ( ( id != null ) && ( id . equals ( getId ( ) ) ) ) { return true ; } } return false ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { try { java.net.URL VAR_1 = new java.net.URL ( VAR_2 ) ; TYPE_1 VAR_3 = VAR_1 . METHOD_2 ( ) ; java.io.BufferedReader VAR_4 = new java.io.BufferedReader ( new TYPE_2 ( VAR_3 . METHOD_3 ( ) ) ) ; java.lang.String VAR_5 = VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; return VAR_5 ; } catch ( java.io.IOException VAR_6 ) { VAR_6 . METHOD_6 ( ) ; } return null ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { try { java.net.URL VAR_1 = new java.net.URL ( VAR_2 ) ; TYPE_1 VAR_3 = VAR_1 . METHOD_2 ( ) ; java.io.BufferedReader VAR_4 = new java.io.BufferedReader ( new TYPE_2 ( VAR_3 . METHOD_3 ( ) ) ) ; java.lang.String VAR_5 = VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; return VAR_5 ; } catch ( java.io.IOException VAR_6 ) { } return null ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; VAR_1 = null ; if ( id == ( VAR_2 ) ) { android.content.Intent VAR_3 = new android.content.Intent ( VAR_4 ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( VAR_3 , 0 ) ; } else { METHOD_5 ( id ) ; } TYPE_2 VAR_5 = ( ( TYPE_2 ) ( METHOD_6 ( VAR_6 ) ) ) ; VAR_5 . METHOD_7 ( VAR_7 ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_2 ) ) { android.content.Intent VAR_3 = new android.content.Intent ( VAR_4 ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( VAR_3 , 0 ) ; } else { METHOD_5 ( id ) ; } TYPE_2 VAR_5 = ( ( TYPE_2 ) ( METHOD_6 ( VAR_6 ) ) ) ; VAR_5 . METHOD_7 ( VAR_7 ) ; return true ; }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ) ) ; if ( ( VAR_6 ) != null ) { if ( ( VAR_6 . METHOD_3 ( ) ) != null ) { ( ( TYPE_2 ) ( VAR_6 . METHOD_3 ( ) ) ) . METHOD_4 ( VAR_6 ) ; } VAR_4 . METHOD_5 ( VAR_6 ) ; } return VAR_4 ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ) ) ; if ( ( VAR_6 . METHOD_3 ( ) ) != null ) { ( ( TYPE_2 ) ( VAR_6 . METHOD_3 ( ) ) ) . METHOD_4 ( VAR_6 ) ; } VAR_4 . METHOD_5 ( VAR_6 ) ; return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = null ; try { VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) . commit ( ) ; } finally { if ( ( VAR_2 != null ) && ( VAR_2 . METHOD_7 ( ) ) ) { VAR_2 . METHOD_8 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = null ; try { java.lang.System.out.println ( VAR_1 . toString ( ) ) ; VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) . commit ( ) ; } finally { if ( ( VAR_2 != null ) && ( VAR_2 . METHOD_7 ( ) ) ) { VAR_2 . METHOD_8 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Long VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . getContext ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( ) ; VAR_1 = VAR_3 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; VAR_3 . METHOD_8 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Long VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . getContext ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; VAR_3 . METHOD_8 ( VAR_1 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 query = new TYPE_1 ( VAR_1 ) ; try { TYPE_2 . METHOD_2 ( query , new TYPE_3 < TYPE_4 > ( ) { public void METHOD_3 ( TYPE_4 VAR_2 , TYPE_5 response ) { METHOD_4 ( VAR_2 ) ; } public void METHOD_5 ( TYPE_6 error ) { TYPE_7 . METHOD_6 ( METHOD_7 ( ) , STRING_1 ) ; } } ) ; } catch ( TYPE_8 VAR_3 ) { VAR_3 . METHOD_8 ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 query = new TYPE_1 ( VAR_1 ) ; try { TYPE_2 . METHOD_2 ( query , new TYPE_3 < TYPE_4 > ( ) { public void METHOD_3 ( TYPE_4 VAR_2 , TYPE_5 response ) { METHOD_4 ( VAR_2 ) ; } public void METHOD_5 ( TYPE_6 error ) { } } ) ; } catch ( TYPE_8 VAR_3 ) { VAR_3 . METHOD_8 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_3 . METHOD_2 ( ) ; VAR_4 . setText ( data ) ; VAR_5 . setText ( ( STRING_1 + ( data ) ) ) ; VAR_5 . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( android.view.View VAR_6 ) { java.lang.System.out.println ( ( STRING_2 + ( data ) ) ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_4 . setText ( data ) ; VAR_5 . setText ( ( STRING_1 + ( data ) ) ) ; VAR_5 . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( android.view.View VAR_6 ) { java.lang.System.out.println ( ( STRING_2 + ( data ) ) ) ; } } ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { execute ( STRING_1 ) ; METHOD_2 ( ) ; java.io.File VAR_1 = VAR_2 . METHOD_3 ( ) ; try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( VAR_1 ) ) ) { writer.write ( STRING_2 ) ; } catch ( java.io.IOException VAR_3 ) { throw VAR_3 ; } VAR_4 . METHOD_4 ( VAR_5 class ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; execute ( STRING_4 , new java.lang.Object [ ] { VAR_1 . METHOD_6 ( ) } ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { execute ( STRING_1 ) ; METHOD_2 ( ) ; java.io.File VAR_1 = VAR_2 . METHOD_3 ( ) ; try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( VAR_1 ) ) ) { writer.write ( STRING_2 ) ; } VAR_4 . METHOD_4 ( VAR_5 class ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; execute ( STRING_4 , new java.lang.Object [ ] { VAR_1 . METHOD_6 ( ) } ) ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( int length ) { java.lang.String VAR_1 = STRING_1 ; for ( int i = 0 ; i < length ; i ++ ) { switch ( ( ( int ) ( ( java.lang.Math.random ( ) ) * INT_1 ) ) ) { case 0 : } } }\n", "fixed": "private java.lang.String METHOD_1 ( int length ) { java.lang.String VAR_1 = STRING_1 ; for ( int i = 0 ; i < length ; i ++ ) { switch ( ( ( int ) ( ( java.lang.Math.random ( ) ) * INT_1 ) ) ) { case 0 : } } return null ; }\n"}
{"problem": "private float METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == ( VAR_3 ) ) { return VAR_4 ; } if ( VAR_1 == ( VAR_5 ) ) { return VAR_6 ; } if ( VAR_1 == ( VAR_7 ) ) { return VAR_8 ; } if ( VAR_1 == ( VAR_9 ) ) { return VAR_10 ; } return 0 ; }\n", "fixed": "public float METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == ( VAR_3 ) ) { return VAR_4 ; } if ( VAR_1 == ( VAR_5 ) ) { return VAR_6 ; } if ( VAR_1 == ( VAR_7 ) ) { return VAR_8 ; } if ( VAR_1 == ( VAR_9 ) ) { return VAR_10 ; } return 0 ; }\n"}
{"problem": "private java.io.File METHOD_1 ( java.io.File VAR_1 ) throws TYPE_1 { if ( VAR_1 == null ) { throw new TYPE_1 ( STRING_1 ) ; } if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { throw new TYPE_1 ( ( STRING_2 + ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ) ; } return VAR_1 ; }\n", "fixed": "private java.io.File METHOD_1 ( java.io.File VAR_1 ) throws TYPE_1 { if ( VAR_1 == null ) { return null ; } if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { throw new TYPE_1 ( ( STRING_2 + ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ) ; } return VAR_1 ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 type ) { switch ( type ) { case VAR_1 : return VAR_2 ; case VAR_3 : return VAR_4 ; case VAR_5 : return VAR_6 ; case VAR_7 : return VAR_8 ; case VAR_9 : return VAR_10 ; case VAR_11 : return VAR_2 ; } java.lang.System.out.println ( STRING_1 ) ; return VAR_2 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 type ) { switch ( type ) { case VAR_1 : return VAR_2 ; case VAR_3 : return VAR_4 ; case VAR_5 : return VAR_6 ; case VAR_7 : return VAR_8 ; case VAR_9 : return VAR_10 ; case VAR_11 : return VAR_10 ; } java.lang.System.out.println ( STRING_1 ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { while ( ! ( this . VAR_2 . isEmpty ( ) ) ) { for ( TYPE_1 < TYPE_2 > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( ) ; } } } finally { VAR_1 . METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { while ( ! ( VAR_2 . isEmpty ( ) ) ) { for ( TYPE_1 < TYPE_2 > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( ) ; } } } finally { VAR_1 . METHOD_4 ( ) ; } }\n"}
{"problem": "public int METHOD_1 ( java.lang.String id ) { int i = 0 ; while ( i < ( VAR_1 . size ( ) ) ) { if ( VAR_1 . get ( i ) . contains ( id ) ) break ; else i ++ ; } return VAR_1 . get ( i ) . get ( id ) ; }\n", "fixed": "public int METHOD_1 ( java.lang.String id ) { int i = 0 ; while ( i < ( VAR_1 . size ( ) ) ) { if ( VAR_1 . get ( i ) . contains ( id ) ) return VAR_1 . get ( i ) . get ( id ) ; else i ++ ; } return VAR_1 . get ( ( i - 1 ) ) . get ( id ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( isEmpty ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } else { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 = first ; if ( ( VAR_2 ) == null ) { VAR_3 = null ; } else { VAR_4 = null ; } first = VAR_2 ; return VAR_1 ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws TYPE_2 { if ( isEmpty ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } else { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 = first ; if ( ( VAR_2 ) == null ) { VAR_3 = null ; } else { VAR_4 = null ; } first = VAR_2 ; ( size ) -- ; return VAR_1 ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ( ( this . VAR_3 ) == null ) || ( VAR_1 > ( ( this . VAR_3 . size ( ) ) - 1 ) ) ) { return null ; } switch ( VAR_2 ) { case VAR_4 : return VAR_3 . get ( VAR_1 ) . METHOD_2 ( ) ; case VAR_5 : return VAR_3 . get ( VAR_1 ) . METHOD_3 ( ) ; } return null ; }\n", "fixed": "public java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( ( ( ( this . VAR_3 ) == null ) || ( VAR_1 > ( ( this . VAR_3 . size ( ) ) - 1 ) ) ) || ( VAR_1 == ( - 1 ) ) ) { return null ; } switch ( VAR_2 ) { case VAR_4 : return VAR_3 . get ( VAR_1 ) . METHOD_2 ( ) ; case VAR_5 : return VAR_3 . get ( VAR_1 ) . METHOD_3 ( ) ; } return null ; }\n"}
{"problem": "public void METHOD_1 ( int id , java.lang.String date ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ( ( ( ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + date ) + STRING_3 ) + ( VAR_3 ) ) + STRING_4 ) + id ) ) ; VAR_1 . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( int id , java.lang.String date ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ( ( ( ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + date ) + STRING_3 ) + ( VAR_3 ) ) + STRING_4 ) + id ) ) ; }\n"}
{"problem": "public static boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null ) { return false ; } if ( VAR_1 . equals ( VAR_3 ) ) { return true ; } try { TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_4 . METHOD_4 ( ) ) ) { return true ; } else { return false ; } } catch ( TYPE_4 VAR_5 ) { return false ; } }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == null ) { return false ; } try { TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_4 . METHOD_4 ( ) ) ) { return true ; } else { return false ; } } catch ( TYPE_4 VAR_5 ) { return false ; } }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 , java.lang.String VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_4 : VAR_1 ) { java.util.List < TYPE_3 > VAR_5 = METHOD_2 ( ) . METHOD_3 ( VAR_6 , java.lang.Long.parseLong ( VAR_4 . METHOD_4 ( ) ) ) ; TYPE_1 VAR_7 = new TYPE_1 ( ) ; METHOD_5 ( VAR_5 , VAR_2 , VAR_7 ) ; VAR_3 . add ( VAR_7 ) ; } return VAR_3 ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 , java.lang.String VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_4 : VAR_1 ) { java.util.List < TYPE_3 > VAR_5 = METHOD_2 ( ) . METHOD_3 ( VAR_6 , java.lang.Long.parseLong ( VAR_4 . METHOD_4 ( ) ) , true ) ; TYPE_1 VAR_7 = new TYPE_1 ( ) ; METHOD_5 ( VAR_5 , VAR_2 , VAR_7 ) ; VAR_3 . add ( VAR_7 ) ; } return VAR_3 ; }\n"}
{"problem": "public boolean delete ( ) { if ( METHOD_1 ( ) ) { for ( java.io.File VAR_1 : file . METHOD_2 ( ) ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . delete ( ) ; } } return file . delete ( ) ; }\n", "fixed": "public boolean delete ( ) { if ( METHOD_1 ( ) ) { for ( java.io.File VAR_1 : file . METHOD_2 ( ) ) { if ( VAR_1 != null ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . delete ( ) ; } } } return file . delete ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( this . VAR_1 . equals ( STRING_1 ) ) java.lang.System.out.println ( ( ( ( ( ( this . line ) + STRING_2 ) + STRING_3 ) + STRING_4 ) + ( this . VAR_2 ) ) ) ; else if ( this . VAR_1 . equals ( STRING_5 ) ) java.lang.System.out.println ( ( ( ( ( ( this . line ) + STRING_2 ) + STRING_6 ) + STRING_4 ) + ( this . VAR_2 ) ) ) ; else return ; }\n", "fixed": "public void METHOD_1 ( ) { if ( this . VAR_1 . equals ( STRING_1 ) ) java.lang.System.out.println ( ( ( ( ( ( this . line . trim ( ) ) + STRING_2 ) + STRING_3 ) + STRING_4 ) + ( this . VAR_2 ) ) ) ; else if ( this . VAR_1 . equals ( STRING_5 ) ) java.lang.System.out.println ( ( ( ( ( ( this . line . trim ( ) ) + STRING_2 ) + STRING_6 ) + STRING_4 ) + ( this . VAR_2 ) ) ) ; else return ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) return VAR_1 ; synchronized ( this ) { if ( ( VAR_1 ) != null ) return VAR_1 ; byte [ ] content = METHOD_2 ( ) ; if ( content != null ) { VAR_1 = TYPE_2 . METHOD_3 ( new TYPE_3 ( content ) ) ; if ( VAR_2 ) content = null ; } } return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) != null ) return VAR_1 ; synchronized ( this ) { if ( ( VAR_1 ) != null ) return VAR_1 ; byte [ ] content = METHOD_2 ( ) ; if ( ( content != null ) && ( ( content . length ) > 0 ) ) { VAR_1 = TYPE_2 . METHOD_3 ( new TYPE_3 ( content ) ) ; if ( VAR_2 ) content = null ; } } return VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( int VAR_1 ) { java.lang.String [ ] VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; java.util.ArrayList < java.lang.String > VAR_4 = new java.util.ArrayList < > ( ) ; TYPE_1 . METHOD_3 ( VAR_4 , VAR_2 ) ; TYPE_2 < java.lang.String > VAR_5 = new TYPE_2 < java.lang.String > ( getActivity ( ) , VAR_6 , VAR_2 ) ; VAR_7 . METHOD_4 ( VAR_5 ) ; VAR_7 . METHOD_5 ( new TYPE_3 ( ) ) ; }\n", "fixed": "private void METHOD_1 ( int VAR_1 ) { java.lang.String [ ] VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; java.util.ArrayList < java.lang.String > VAR_4 = new java.util.ArrayList < > ( ) ; TYPE_1 . METHOD_3 ( VAR_4 , VAR_2 ) ; TYPE_2 < java.lang.String > VAR_5 = new TYPE_2 < java.lang.String > ( getActivity ( ) , VAR_6 , VAR_2 ) ; VAR_7 . METHOD_4 ( VAR_5 ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { } }\n"}
{"problem": "public java.util.Collection < java.lang.Integer > METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { TYPE_2 < TYPE_1 , java.lang.Integer , java.lang.Integer > VAR_5 = VAR_6 . get ( METHOD_2 ( VAR_2 , VAR_3 ) ) ; return VAR_5 . METHOD_3 ( VAR_1 ) . values ( ) ; }\n", "fixed": "public java.util.Collection < java.lang.Integer > METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_2 < TYPE_1 , java.lang.Integer , java.lang.Integer > VAR_5 = VAR_6 . get ( METHOD_2 ( VAR_2 , VAR_3 ) ) ; return VAR_5 . METHOD_3 ( VAR_1 ) . values ( ) ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; if ( VAR_1 == 1 ) { if ( VAR_2 == ( VAR_4 ) ) { if ( data != null ) { java.lang.String VAR_5 = data . METHOD_4 ( ) . getString ( STRING_1 ) ; VAR_6 . setText ( VAR_5 ) ; } } } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; if ( VAR_1 == 1 ) { if ( VAR_2 == ( VAR_4 ) ) { if ( data != null ) { java.lang.String VAR_5 = data . METHOD_4 ( ) . getString ( STRING_1 ) ; VAR_6 . setText ( VAR_5 ) ; getActivity ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; } } } }\n"}
