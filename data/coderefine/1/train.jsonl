{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.LinkedList < > ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_2 . add ( VAR_3 . METHOD_2 ( ) ) ; } return VAR_2 ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.LinkedList < > ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { if ( VAR_3 != null ) { VAR_2 . add ( VAR_3 . METHOD_2 ( ) ) ; } } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( ( VAR_1 ) > 0 ) && ( ( METHOD_2 ( ) ) >= INT_1 ) ) { METHOD_3 ( ) ; } if ( ( ( VAR_1 ) < 0 ) && ( ( METHOD_2 ( ) ) <= INT_2 ) ) { METHOD_3 ( ) ; } METHOD_4 ( ( ( METHOD_2 ( ) ) + ( VAR_1 ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { if ( ( ( VAR_1 ) > 0 ) && ( ( METHOD_2 ( ) ) >= INT_1 ) ) { METHOD_3 ( true ) ; } if ( ( ( VAR_1 ) < 0 ) && ( ( METHOD_2 ( ) ) <= INT_2 ) ) { METHOD_3 ( true ) ; } METHOD_4 ( ( ( METHOD_2 ( ) ) + ( VAR_1 ) ) ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) throws java.lang.ClassNotFoundException { TYPE_3 node = VAR_1 . METHOD_2 ( VAR_2 ) . item ( 0 ) ; java.lang.String pattern = STRING_1 ; if ( node != null ) { pattern = this . METHOD_1 ( ( ( TYPE_2 ) ( node ) ) ) ; } VAR_3 . METHOD_3 ( ( STRING_2 + pattern ) ) ; java.lang.System.out.println ( pattern ) ; return new TYPE_1 ( pattern ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) throws java.lang.ClassNotFoundException { TYPE_3 node = VAR_1 . METHOD_2 ( VAR_2 ) . item ( 0 ) ; java.lang.String pattern = STRING_1 ; if ( node != null ) { pattern = this . METHOD_1 ( ( ( TYPE_2 ) ( node ) ) ) ; } VAR_3 . METHOD_3 ( ( STRING_2 + pattern ) ) ; return new TYPE_1 ( pattern ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws java.lang.ClassNotFoundException , TYPE_2 , TYPE_3 { VAR_1 = new TYPE_4 ( ) { protected void METHOD_2 ( ) { if ( METHOD_3 ( ) ) { super . METHOD_2 ( ) ; } } protected java.util.Set < TYPE_5 > METHOD_4 ( ) { if ( ( VAR_2 ) != null ) { return VAR_2 ; } return super . METHOD_4 ( ) ; } } ; VAR_1 . METHOD_5 ( this ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws java.lang.ClassNotFoundException , TYPE_2 , TYPE_3 { VAR_1 = new TYPE_4 ( false ) { protected void METHOD_2 ( ) { if ( METHOD_3 ( ) ) { super . METHOD_2 ( ) ; } } protected java.util.Set < TYPE_5 > METHOD_4 ( ) { if ( ( VAR_2 ) != null ) { return VAR_2 ; } return super . METHOD_4 ( ) ; } } ; VAR_1 . METHOD_5 ( this ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 == 1 ) { TYPE_1 VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_5 = data . METHOD_3 ( STRING_1 , 0 ) ; VAR_3 . setText ( ( ( STRING_2 + ( VAR_5 ) ) + STRING_3 ) ) ; } super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , android.content.Intent data ) { if ( VAR_1 == 1 ) { if ( data != null ) { TYPE_1 VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_5 = data . METHOD_3 ( STRING_1 , 0 ) ; VAR_3 . setText ( ( ( STRING_2 + ( VAR_5 ) ) + STRING_3 ) ) ; } } super . METHOD_1 ( VAR_1 , VAR_2 , data ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { synchronized ( this ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_2 . substring ( 0 , VAR_2 . METHOD_3 ( STRING_1 ) ) ; java.lang.String id = VAR_2 . substring ( ( ( VAR_2 . METHOD_3 ( STRING_1 ) ) + INT_1 ) ) ; VAR_4 . put ( VAR_3 , id ) ; } }\n", "fixed": "private synchronized void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_2 . substring ( 0 , VAR_2 . METHOD_3 ( STRING_1 ) ) ; java.lang.String id = VAR_2 . substring ( ( ( VAR_2 . METHOD_3 ( STRING_1 ) ) + INT_1 ) ) ; VAR_4 . put ( VAR_3 , id ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { VAR_1 . update ( METHOD_2 ( STRING_1 ) , event . METHOD_3 ( ) , event . METHOD_4 ( ) , event . METHOD_5 ( ) , event . METHOD_6 ( ) , event . getType ( ) , event . getValue ( ) , event . METHOD_7 ( ) , event . METHOD_8 ( ) , event . METHOD_9 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { VAR_1 . update ( METHOD_2 ( STRING_1 ) , event . METHOD_3 ( ) , event . METHOD_4 ( ) , event . METHOD_5 ( ) , event . METHOD_6 ( ) , event . getType ( ) , event . getValue ( ) , event . METHOD_7 ( ) , event . METHOD_8 ( ) , ( event . METHOD_9 ( ) ? 1 : 0 ) ) ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( java.lang.String fileName , TYPE_1 VAR_1 ) { java.lang.String path = METHOD_2 ( TYPE_2 . METHOD_3 ( fileName ) ) ; java.lang.String VAR_2 = TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; java.lang.String VAR_3 = ( fileName + STRING_1 ) + VAR_2 ; return TYPE_2 . METHOD_6 ( path , VAR_3 ) ; }\n", "fixed": "private java.lang.String METHOD_1 ( java.lang.String fileName , TYPE_1 VAR_1 ) { java.lang.String path = METHOD_2 ( TYPE_2 . METHOD_4 ( fileName ) ) ; java.lang.String VAR_2 = TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; java.lang.String VAR_3 = ( fileName + STRING_1 ) + VAR_2 ; return TYPE_2 . METHOD_6 ( path , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String query ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 VAR_3 = METHOD_3 ( VAR_1 ) ; if ( VAR_3 != null ) { TYPE_2 VAR_4 = VAR_3 . METHOD_1 ( query ) ; if ( ! ( VAR_5 ) ) { if ( VAR_4 == null ) { java.lang.System.out.println ( STRING_1 ) ; VAR_4 = VAR_3 . METHOD_1 ( VAR_6 ) ; } else { VAR_6 = query ; } VAR_2 . METHOD_4 ( VAR_4 ) ; } VAR_5 = false ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String query ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_1 VAR_3 = METHOD_3 ( VAR_1 ) ; if ( VAR_3 != null ) { TYPE_2 VAR_4 = VAR_3 . METHOD_1 ( query ) ; if ( ! ( VAR_5 ) ) { if ( VAR_4 == null ) { VAR_4 = VAR_3 . METHOD_1 ( VAR_6 ) ; } else { VAR_6 = query ; } VAR_2 . METHOD_4 ( VAR_4 ) ; } VAR_5 = false ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( STRING_1 ) ; java.lang.String VAR_1 = STRING_2 ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; java.io.File VAR_3 = new java.io.File ( VAR_1 ) ; TYPE_2 . assertEquals ( true , VAR_3 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( STRING_3 , STRING_4 ) ; VAR_2 . commit ( ) ; VAR_2 . METHOD_6 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; TYPE_2 . assertEquals ( false , VAR_3 . METHOD_4 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( STRING_1 ) ; java.lang.String VAR_1 = STRING_2 ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; java.io.File VAR_3 = new java.io.File ( VAR_1 ) ; assertEquals ( true , VAR_3 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( STRING_3 , STRING_4 ) ; VAR_2 . commit ( ) ; VAR_2 . METHOD_6 ( ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; assertEquals ( false , VAR_3 . METHOD_4 ( ) ) ; }\n"}
{"problem": "static int [ ] METHOD_1 ( int [ ] VAR_1 , int num , int length ) { for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_1 [ i ] ) < num ) { for ( int j = i ; j < ( length - 1 ) ; j ++ ) { VAR_1 [ ( j + 1 ) ] = VAR_1 [ j ] ; } VAR_1 [ i ] = num ; } } return VAR_1 ; }\n", "fixed": "static int [ ] METHOD_1 ( int [ ] VAR_1 , int num , int length ) { for ( int i = 0 ; i < length ; i ++ ) { if ( ( VAR_1 [ i ] ) < num ) { for ( int j = length - 1 ; j > i ; j -- ) { VAR_1 [ j ] = VAR_1 [ ( j - 1 ) ] ; } VAR_1 [ i ] = num ; break ; } } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , INT_1 , METHOD_2 ( ) ) ; TYPE_2 . equals ( VAR_1 . METHOD_3 ( ) , INT_1 , STRING_2 ) ; TYPE_2 . equals ( VAR_1 . METHOD_4 ( ) , FLOAT_1 , STRING_3 ) ; TYPE_2 . equals ( VAR_1 . METHOD_5 ( ) , FLOAT_2 , STRING_4 ) ; TYPE_2 . equals ( VAR_1 . METHOD_6 ( ) , STRING_1 , STRING_5 ) ; METHOD_7 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , INT_1 , METHOD_2 ( ) ) ; TYPE_2 . equals ( VAR_1 . METHOD_3 ( ) , INT_1 , STRING_2 ) ; TYPE_2 . equals ( VAR_1 . METHOD_4 ( ) , FLOAT_1 , STRING_3 ) ; TYPE_2 . equals ( VAR_1 . METHOD_5 ( ) , FLOAT_2 , STRING_4 ) ; METHOD_7 ( VAR_1 ) ; }\n"}
{"problem": "public int METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( new TYPE_2 ( ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( new TYPE_2 ( ) ) ; return ( VAR_2 . METHOD_2 ( java.util.Arrays.asList ( STRING_1 ) , java.util.Arrays.asList ( VAR_2 . METHOD_3 ( VAR_1 , STRING_2 ) ) ) ) + ( VAR_3 . METHOD_2 ( java.util.Arrays.asList ( STRING_1 ) , java.util.Arrays.asList ( VAR_3 . METHOD_3 ( VAR_1 , STRING_3 ) ) ) ) ; }\n", "fixed": "public int METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( new TYPE_2 ( ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( new TYPE_2 ( ) ) ; return ( VAR_2 . METHOD_2 ( java.util.Arrays.asList ( STRING_1 ) , java.util.Arrays.asList ( VAR_2 . METHOD_3 ( VAR_1 , STRING_3 ) ) ) ) + ( VAR_3 . METHOD_2 ( java.util.Arrays.asList ( STRING_1 ) , java.util.Arrays.asList ( VAR_3 . METHOD_3 ( VAR_1 , STRING_2 ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String op , java.util.Set < java.lang.String > VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + op ) ) ; java.lang.String VAR_2 = METHOD_2 ( op ) ; this . VAR_3 . put ( VAR_2 , STRING_2 ) ; if ( this . VAR_4 . contains ( op ) ) { java.lang.System.out.println ( ( STRING_3 + op ) ) ; java.lang.System.out.println ( ( ( ( STRING_4 + VAR_2 ) + STRING_5 ) + ( METHOD_3 ( op ) ) ) ) ; this . VAR_4 . remove ( op ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String op , java.util.Set < java.lang.String > VAR_1 ) { java.lang.System.out.println ( ( STRING_1 + op ) ) ; java.lang.String key = METHOD_2 ( op ) ; this . VAR_3 . put ( key , STRING_2 ) ; if ( this . VAR_4 . contains ( op ) ) { java.lang.System.out.println ( ( STRING_3 + op ) ) ; java.lang.System.out.println ( ( ( ( STRING_4 + key ) + STRING_5 ) + ( METHOD_3 ( op ) ) ) ) ; this . VAR_4 . remove ( op ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_1 . METHOD_4 ( VAR_5 , VAR_6 ) ; TYPE_2 . get ( VAR_7 ) ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = true ; TYPE_2 . get ( VAR_7 ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_1 . METHOD_4 ( VAR_5 , VAR_6 ) ; VAR_8 = VAR_9 ; VAR_10 = VAR_11 ; VAR_12 = true ; TYPE_2 . get ( VAR_7 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 msg ; try { while ( true ) { if ( ( msg = VAR_1 . get ( ) ) != null ) java.lang.String.format ( msg . toString ( ) ) ; java.lang.Thread . METHOD_2 ( VAR_2 ) ; } } catch ( TYPE_2 VAR_3 ) { } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 msg ; try { while ( true ) { if ( ( msg = VAR_1 . get ( ) ) != null ) java.lang.System.out.println ( msg . toString ( ) ) ; java.lang.Thread . METHOD_2 ( VAR_2 ) ; } } catch ( TYPE_2 VAR_3 ) { } }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { return ( ( ( ( ( VAR_1 ) != null ) && ( VAR_1 ) ? STRING_1 : STRING_2 ) + ( ( type ) == null ? STRING_2 : ( type . toString ( ) ) + STRING_3 ) ) + ( VAR_2 ) ) + ( ( VAR_3 ) == null ? STRING_2 : STRING_3 + ( VAR_3 . toString ( ) ) ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { return ( ( ( ( ( VAR_1 ) != null ) && ( VAR_1 ) ? STRING_1 : STRING_2 ) + ( ( type ) == null ? STRING_2 : ( type . toString ( ) ) + STRING_3 ) ) + ( ( VAR_2 ) == null ? STRING_2 : ( VAR_2 ) + STRING_3 ) ) + ( ( VAR_3 ) == null ? STRING_2 : VAR_3 . toString ( ) ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( METHOD_6 ( ) ) ; super . METHOD_1 ( VAR_1 ) ; VAR_4 = ( METHOD_7 ( ) . METHOD_8 ( ) . VAR_5 ) == ( VAR_6 ) ; VAR_7 = METHOD_7 ( ) . getBoolean ( VAR_8 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( METHOD_6 ( ) ) ; super . METHOD_1 ( VAR_1 ) ; VAR_4 = ( METHOD_7 ( ) . METHOD_8 ( ) . VAR_5 ) == ( VAR_6 ) ; VAR_7 = METHOD_7 ( ) . getBoolean ( VAR_8 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; try { if ( VAR_1 == null ) { VAR_1 = new TYPE_1 ( ) ; } if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( true ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; VAR_1 . METHOD_8 ( METHOD_9 ( ) ) ; METHOD_10 ( VAR_1 ) ; } } catch ( TYPE_2 | TYPE_3 VAR_3 ) { METHOD_11 ( VAR_3 ) ; } return STRING_1 ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; try { if ( VAR_1 == null ) { VAR_1 = new TYPE_1 ( ) ; } if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( true ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; VAR_1 . METHOD_8 ( METHOD_9 ( ) ) ; METHOD_10 ( VAR_1 ) ; } } catch ( TYPE_2 | TYPE_3 VAR_3 ) { METHOD_11 ( VAR_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . setText ( STRING_1 ) ; VAR_3 . setText ( STRING_1 ) ; VAR_4 . setText ( STRING_1 ) ; VAR_5 . setText ( STRING_1 ) ; VAR_6 . setText ( java.lang.String . METHOD_2 ( 0 ) ) ; VAR_7 . setText ( java.lang.String . METHOD_2 ( 0 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . setText ( null ) ; VAR_3 . setText ( null ) ; VAR_4 . setText ( null ) ; VAR_5 . setText ( null ) ; VAR_6 . setText ( java.lang.String . METHOD_2 ( 0 ) ) ; VAR_7 . setText ( java.lang.String . METHOD_2 ( 0 ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( int VAR_1 , TYPE_1 event ) { try { if ( ( VAR_1 == ( VAR_2 ) ) && ( VAR_3 . METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_4 , STRING_1 ) ; VAR_5 . METHOD_4 ( ) ; METHOD_5 ( ) ; return true ; } } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_6 ( ) ; } return super . METHOD_1 ( VAR_1 , event ) ; }\n", "fixed": "public boolean METHOD_1 ( int VAR_1 , TYPE_1 event ) { try { if ( ( VAR_1 == ( VAR_2 ) ) && ( VAR_3 . METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( VAR_4 , STRING_1 ) ; VAR_5 . METHOD_4 ( ) ; return true ; } } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_6 ( ) ; } return super . METHOD_1 ( VAR_1 , event ) ; }\n"}
{"problem": "private static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String message ) { if ( ( VAR_1 != null ) || ( message != null ) ) { try { VAR_2 . METHOD_2 ( VAR_1 , INT_1 , message . METHOD_3 ( ) ) ; } catch ( TYPE_1 VAR_3 ) { java.lang.System.err.println ( ( STRING_1 + ( VAR_3 . METHOD_4 ( ) ) ) ) ; } } else { java.lang.System.err.println ( STRING_2 ) ; } }\n", "fixed": "private static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String message ) { if ( ( VAR_1 != null ) && ( message != null ) ) { try { VAR_2 . METHOD_2 ( VAR_1 , INT_1 , message . METHOD_3 ( ) ) ; } catch ( TYPE_1 VAR_3 ) { java.lang.System.err.println ( ( STRING_1 + ( VAR_3 . METHOD_4 ( ) ) ) ) ; } } else { java.lang.System.err.println ( STRING_2 ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { java.lang.String VAR_3 = STRING_1 ; if ( VAR_2 == true ) { VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; } else if ( VAR_2 == false ) { VAR_3 = VAR_5 . METHOD_2 ( VAR_1 ) . METHOD_4 ( ) ; } }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { java.lang.String VAR_3 = STRING_1 ; if ( VAR_2 == true ) { VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; } else if ( VAR_2 == false ) { VAR_3 = VAR_5 . METHOD_2 ( VAR_1 ) . METHOD_4 ( ) ; } return VAR_3 ; }\n"}
{"problem": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; if ( ( VAR_2 . length ) > 0 ) { for ( java.lang.String n : VAR_2 ) { VAR_1 . append ( ( STRING_1 + n ) ) ; VAR_1 . append ( STRING_2 ) ; } VAR_1 . METHOD_1 ( ( ( VAR_1 . length ( ) ) - 1 ) ) ; if ( ( VAR_3 ) == ( VAR_4 ) ) { VAR_1 . append ( STRING_3 ) ; } } return VAR_1 . toString ( ) ; }\n", "fixed": "public java.lang.String toString ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; if ( ( VAR_2 . length ) > 0 ) { for ( java.lang.String n : VAR_2 ) { VAR_1 . append ( ( STRING_1 + n ) ) ; if ( ( VAR_3 ) == ( VAR_4 ) ) { VAR_1 . append ( STRING_3 ) ; } VAR_1 . append ( STRING_2 ) ; } VAR_1 . METHOD_1 ( ( ( VAR_1 . length ( ) ) - 1 ) ) ; } return VAR_1 . toString ( ) ; }\n"}
{"problem": "public java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { final java.util.List values = new java.util.ArrayList ( ) ; for ( TYPE_2 value : TYPE_1 . getValue ( ) ) { values . add ( TYPE_1 . METHOD_3 ( METHOD_4 ( value ) ) ) ; } return new java.util.HashMap < java.lang.String , java.lang.Object > ( ) { { put ( getName ( ) , values . METHOD_5 ( ) ) ; } } ; } else { return super . METHOD_1 ( ) ; } }\n", "fixed": "public java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { final java.util.List values = new java.util.ArrayList ( ) ; for ( TYPE_2 value : getValue ( ) ) { values . add ( TYPE_1 . METHOD_3 ( METHOD_4 ( value ) ) ) ; } return new java.util.HashMap < java.lang.String , java.lang.Object > ( ) { { put ( getName ( ) , values . METHOD_5 ( ) ) ; } } ; } else { return super . METHOD_1 ( ) ; } }\n"}
{"problem": "public static double METHOD_1 ( double x , int p ) { if ( p <= INT_1 ) { return java.lang.Math.pow ( x , p ) ; } double tmp = x ; double VAR_1 = ( ( p & 1 ) == 1 ) ? x : 1.0 ; p >>= 1 ; while ( true ) { if ( p == 1 ) { return VAR_1 * tmp ; } if ( ( p & 1 ) != 0 ) { VAR_1 *= tmp ; } tmp *= tmp ; p >>= 1 ; } }\n", "fixed": "public static double METHOD_1 ( double x , int p ) { if ( p <= INT_1 ) { return java.lang.Math.pow ( x , p ) ; } double tmp = x ; double VAR_1 = ( ( p & 1 ) == 1 ) ? x : 1.0 ; while ( true ) { tmp *= tmp ; p >>= 1 ; if ( p == 1 ) { return VAR_1 * tmp ; } if ( ( p & 1 ) != 0 ) { VAR_1 *= tmp ; } } }\n"}
{"problem": "public static boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_4 VAR_2 = TYPE_5 . METHOD_2 ( VAR_1 ) ; java.util.Map < TYPE_6 , TYPE_7 < TYPE_4 , TYPE_8 > > VAR_3 = TYPE_9 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; return VAR_3 . METHOD_6 ( VAR_4 ) ; }\n", "fixed": "public static boolean METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { java.util.Map < TYPE_6 , TYPE_7 < TYPE_4 , TYPE_8 > > VAR_3 = TYPE_9 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; if ( VAR_3 == null ) return false ; return ( VAR_3 . METHOD_6 ( VAR_4 ) ) & ( ! ( VAR_3 . get ( VAR_4 ) . isEmpty ( ) ) ) ? true : false ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.StringBuilder VAR_2 ) { try { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( ) ; java.lang.String VAR_5 = java.lang.String.format ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , ( VAR_11 ? 1 : 0 ) , VAR_12 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; } catch ( java.lang.Exception VAR_13 ) { VAR_2 . append ( VAR_13 . METHOD_4 ( ) ) ; return false ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.StringBuilder VAR_2 ) { try { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( ) ; java.lang.String VAR_5 = java.lang.String.format ( VAR_6 , VAR_7 , VAR_8 , VAR_10 , ( VAR_11 ? 1 : 0 ) , VAR_12 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; } catch ( java.lang.Exception VAR_13 ) { VAR_2 . append ( VAR_13 . METHOD_4 ( ) ) ; return false ; } return true ; }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( 1 , STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( STRING_2 , STRING_3 , true ) ; VAR_1 . METHOD_4 ( VAR_2 . getId ( ) , STRING_1 ) ; java.lang.Exception VAR_3 = null ; try { VAR_1 . METHOD_3 ( STRING_2 , STRING_3 , true ) ; TYPE_3 . fail ( STRING_4 ) ; } catch ( TYPE_1 VAR_4 ) { VAR_3 = VAR_4 ; } TYPE_3 . assertNotNull ( STRING_5 , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( 1 , STRING_1 ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( STRING_2 , STRING_3 , true ) ; VAR_1 . METHOD_4 ( VAR_2 . getId ( ) , STRING_1 ) ; java.lang.Exception VAR_3 = null ; try { VAR_1 . METHOD_3 ( STRING_2 , STRING_3 , true ) ; fail ( STRING_4 ) ; } catch ( TYPE_1 VAR_4 ) { VAR_3 = VAR_4 ; } assertNotNull ( STRING_5 , VAR_3 ) ; }\n"}
{"problem": "private java.lang.Integer METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.Integer VAR_3 = null ; if ( ( ( ( VAR_2 == ( VAR_4 ) ) || ( VAR_2 == ( VAR_5 ) ) ) || ( VAR_2 == ( VAR_6 ) ) ) || ( VAR_2 == ( VAR_7 ) ) ) { VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; } if ( VAR_3 == null ) { TYPE_3 VAR_8 = VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_8 . METHOD_4 ( ) ; } return VAR_3 ; }\n", "fixed": "protected java.lang.Integer METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.Integer VAR_3 = null ; if ( ( ( ( VAR_2 == ( VAR_4 ) ) || ( VAR_2 == ( VAR_5 ) ) ) || ( VAR_2 == ( VAR_6 ) ) ) || ( VAR_2 == ( VAR_7 ) ) ) { VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; } if ( VAR_3 == null ) { TYPE_3 VAR_8 = VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_8 . METHOD_4 ( ) ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 ) { TYPE_3 < TYPE_2 > VAR_2 = new TYPE_4 ( ) . METHOD_2 ( VAR_3 , new TYPE_5 < TYPE_3 < TYPE_2 > > ( ) { } . getType ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 . get ( 0 ) ) ; VAR_1 . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 ) { TYPE_3 < TYPE_2 > VAR_2 = new TYPE_4 ( ) . METHOD_2 ( VAR_3 , new TYPE_5 < TYPE_3 < TYPE_2 > > ( ) { } . getType ( ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_1 . METHOD_3 ( VAR_2 . get ( 0 ) ) ; } VAR_1 . METHOD_4 ( ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) { TYPE_1 status = VAR_1 . METHOD_2 ( ) ; if ( ( status . METHOD_3 ( ) ) > 0 ) { VAR_2 . info ( STRING_1 , status . METHOD_3 ( ) ) ; status . METHOD_4 ( VAR_3 ) ; } else { VAR_2 . info ( STRING_2 ) ; status . METHOD_4 ( VAR_4 ) ; } return status ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) { TYPE_1 status = VAR_1 . METHOD_2 ( ) ; if ( ( status . METHOD_3 ( ) ) > 0 ) { VAR_2 . info ( STRING_1 , status . METHOD_3 ( ) ) ; status . METHOD_1 ( VAR_3 ) ; } else { VAR_2 . info ( STRING_2 ) ; status . METHOD_1 ( VAR_4 ) ; } return status ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 < java.lang.Object > VAR_1 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_4 . assertThat ( VAR_1 , TYPE_5 . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_2 class ) ) ) ; TYPE_4 . assertThat ( VAR_1 . count ( ) , TYPE_5 . METHOD_4 ( TYPE_5 . METHOD_6 ( 0 ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 < java.lang.Object > VAR_1 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_4 . assertThat ( VAR_1 , TYPE_5 . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_2 class ) ) ) ; TYPE_4 . assertThat ( VAR_1 . count ( ) , TYPE_5 . METHOD_4 ( TYPE_5 . METHOD_6 ( 0L ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; java.lang.String VAR_2 = STRING_1 ; VAR_3 . METHOD_6 ( METHOD_7 ( VAR_2 , 0 ) ) ; TYPE_1 . METHOD_8 ( VAR_4 ) . METHOD_6 ( METHOD_7 ( VAR_2 , 1 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; java.lang.String VAR_2 = STRING_1 ; VAR_3 . METHOD_6 ( METHOD_7 ( VAR_2 , 0 ) ) ; METHOD_8 ( VAR_4 ) . METHOD_6 ( METHOD_7 ( VAR_2 , 1 ) ) ; }\n"}
{"problem": "public void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( STRING_1 , null ) ; try { VAR_1 . METHOD_2 ( STRING_2 ) ; } catch ( java.lang.Exception VAR_2 ) { } try { VAR_1 . METHOD_2 ( STRING_3 ) ; } catch ( java.lang.Exception VAR_2 ) { } try { VAR_1 . METHOD_2 ( STRING_4 ) ; } catch ( java.lang.Exception VAR_2 ) { } }\n", "fixed": "public void init ( ) { VAR_1 = TYPE_1 . METHOD_1 ( STRING_1 , null ) ; delete ( ) ; try { VAR_1 . METHOD_2 ( STRING_2 ) ; } catch ( java.lang.Exception VAR_2 ) { } try { VAR_1 . METHOD_2 ( STRING_3 ) ; } catch ( java.lang.Exception VAR_2 ) { } try { VAR_1 . METHOD_2 ( STRING_4 ) ; } catch ( java.lang.Exception VAR_2 ) { } }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) . VAR_3 ; VAR_2 . add ( new TYPE_2 ( null ) ) ; VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) . VAR_3 = VAR_1 ; }\n", "fixed": "public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = VAR_2 . get ( 0 ) . VAR_3 ; VAR_2 . add ( new TYPE_2 ( null ) ) ; VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) . VAR_3 = VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) . setText ( STRING_1 ) ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_5 . METHOD_3 ( VAR_6 , 0 , ( ( java.lang.Integer.parseInt ( TYPE_3 . METHOD_4 ( VAR_1 ) . getString ( TYPE_4 . toString ( ) , STRING_2 ) ) ) * INT_1 ) , VAR_3 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) . setText ( STRING_1 ) ; for ( TYPE_2 VAR_3 : VAR_4 ) { VAR_5 . METHOD_3 ( VAR_6 , 0 , ( ( java.lang.Integer.parseInt ( TYPE_3 . METHOD_4 ( VAR_1 ) . getString ( TYPE_4 . toString ( ) , STRING_2 ) ) ) * INT_1 ) , VAR_3 ) ; } }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = TYPE_4 . METHOD_3 ( this , VAR_4 ) ; VAR_7 . METHOD_4 ( new TYPE_5 ( VAR_4 . getContext ( ) , VAR_8 , false ) ) ; TYPE_6 VAR_9 = new TYPE_6 ( ) ; VAR_9 . METHOD_5 ( VAR_10 ) ; VAR_7 . METHOD_6 ( VAR_9 ) ; return VAR_4 ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = TYPE_4 . METHOD_3 ( this , VAR_4 ) ; VAR_7 . METHOD_4 ( new TYPE_5 ( VAR_4 . getContext ( ) , VAR_8 , false ) ) ; VAR_9 = new TYPE_6 ( ) ; VAR_7 . METHOD_6 ( VAR_9 ) ; VAR_9 . METHOD_5 ( VAR_10 ) ; return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( true ) ; VAR_2 = VAR_1 ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_3 ) { VAR_2 . METHOD_6 ( TYPE_4 . METHOD_7 ( new TYPE_5 ( FLOAT_1 , FLOAT_2 ) , INT_1 ) ) ; if ( METHOD_3 ( ) ) METHOD_6 ( ) ; VAR_1 . METHOD_4 ( null ) ; } } ) ; VAR_1 . METHOD_8 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_3 ) { VAR_2 . METHOD_6 ( TYPE_4 . METHOD_7 ( new TYPE_5 ( FLOAT_1 , FLOAT_2 ) , INT_1 ) ) ; if ( METHOD_3 ( ) ) METHOD_6 ( ) ; VAR_1 . METHOD_4 ( null ) ; } } ) ; VAR_1 . METHOD_8 ( VAR_4 ) ; }\n"}
{"problem": "public void init ( ) { java.lang.System.out.println ( STRING_1 ) ; try { VAR_1 = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_1 = new java.util.ArrayList < TYPE_3 > ( ) ; } java.lang.System.out.println ( ( STRING_2 + ( VAR_1 ) ) ) ; VAR_4 = INT_1 ; VAR_5 = STRING_3 ; }\n", "fixed": "public void init ( ) { VAR_3 . info ( STRING_1 ) ; try { VAR_1 = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_1 = new java.util.ArrayList < TYPE_3 > ( ) ; } VAR_3 . info ( ( STRING_2 + ( VAR_1 ) ) ) ; VAR_4 = INT_1 ; VAR_5 = STRING_3 ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( ( VAR_2 . METHOD_2 ( STRING_1 ) ) || ( VAR_2 . METHOD_2 ( \"0\" ) ) ) { VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( ) ) | ( VAR_3 ) ) ) ; } else { VAR_1 . METHOD_3 ( 0 ) ; } }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( ( ! ( VAR_2 . METHOD_2 ( STRING_1 ) ) ) || ( VAR_2 . METHOD_2 ( \"0\" ) ) ) { VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( ) ) | ( VAR_3 ) ) ) ; } else { VAR_1 . METHOD_3 ( 0 ) ; } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 < java.lang.Integer > VAR_1 = new TYPE_1 < java.lang.Integer > ( ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 . METHOD_1 ( i ) ; } for ( int i : VAR_1 ) { java.lang.System.out.println ( i ) ; } }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 < java.lang.Integer > VAR_1 = new TYPE_1 < java.lang.Integer > ( ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 . METHOD_1 ( i ) ; } int count = 0 ; for ( int i : VAR_1 ) { count ++ ; } java.lang.System.out.println ( count ) ; }\n"}
{"problem": "protected java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { java.lang.String VAR_2 = METHOD_2 ( ) ; if ( VAR_2 != null ) { TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; if ( VAR_3 != null ) { TYPE_2 VAR_4 = VAR_3 . METHOD_3 ( STRING_1 ) ; if ( VAR_4 != null ) { java.lang.String VAR_5 = VAR_4 . getString ( STRING_2 ) ; return VAR_5 ; } } } return null ; }\n", "fixed": "protected java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { java.lang.String VAR_2 = METHOD_2 ( ) ; if ( VAR_2 != null ) { TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; if ( VAR_3 != null ) { TYPE_2 VAR_4 = VAR_3 . METHOD_3 ( STRING_1 ) ; if ( VAR_4 != null ) { java.lang.String VAR_5 = VAR_4 . get ( STRING_2 ) . toString ( ) ; return VAR_5 ; } } } return null ; }\n"}
{"problem": "private static void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : TYPE_3 . METHOD_2 ( ) ) { try { VAR_1 . METHOD_3 ( TYPE_4 . build ( VAR_2 ) ) ; } catch ( TYPE_5 VAR_3 ) { } catch ( TYPE_6 VAR_4 ) { } catch ( TYPE_7 VAR_4 ) { } catch ( TYPE_8 VAR_4 ) { assert false : STRING_1 ; } } }\n", "fixed": "private static void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : TYPE_3 . METHOD_2 ( ) ) { try { VAR_1 . METHOD_3 ( VAR_2 ) ; } catch ( TYPE_5 VAR_3 ) { } catch ( TYPE_6 VAR_4 ) { } catch ( TYPE_7 VAR_4 ) { } catch ( TYPE_8 VAR_4 ) { assert false : STRING_1 ; } } }\n"}
{"problem": "public TYPE_1 remove ( TYPE_2 key ) { TYPE_1 value = null ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( values [ i ] . METHOD_1 ( ) . equals ( key ) ) { value = values [ i ] . getValue ( ) ; values [ i ] = null ; ( size ) -- ; METHOD_2 ( i ) ; } } return value ; }\n", "fixed": "public TYPE_1 remove ( TYPE_2 key ) { TYPE_1 value = null ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( ( ( values [ i ] ) != null ) && ( values [ i ] . METHOD_1 ( ) . equals ( key ) ) ) { value = values [ i ] . getValue ( ) ; values [ i ] = null ; ( size ) -- ; METHOD_2 ( i ) ; } } return value ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.HashMap < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < > ( ) ; for ( TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ) ; VAR_2 . METHOD_3 ( METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ) ; VAR_3 . METHOD_8 ( VAR_2 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { java.util.HashMap < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < > ( ) ; VAR_2 . METHOD_3 ( METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ) ; VAR_2 . METHOD_3 ( METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ) ; VAR_3 . METHOD_8 ( VAR_2 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { if ( TYPE_2 . METHOD_2 ( ) ) { java.lang.System.out.println ( java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 , VAR_3 ) ) ; } try { TYPE_1 VAR_4 = METHOD_3 ( TYPE_2 . getData ( VAR_1 , VAR_2 , VAR_3 ) ) ; return VAR_4 ; } catch ( java.lang.NullPointerException VAR_5 ) { return null ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { if ( TYPE_2 . METHOD_2 ( ) ) { java.lang.System.err.println ( java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 , VAR_3 ) ) ; } try { TYPE_1 VAR_4 = METHOD_3 ( TYPE_2 . getData ( VAR_1 , VAR_2 , VAR_3 ) ) ; return VAR_4 ; } catch ( java.lang.NullPointerException VAR_5 ) { return null ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( int id , TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_4 . METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( STRING_3 , VAR_5 . METHOD_5 ( ) ) ; VAR_1 . METHOD_3 ( STRING_4 , true ) ; VAR_1 . METHOD_3 ( STRING_5 , METHOD_6 ( ) ) ; return STRING_1 ; }\n", "fixed": "public java.lang.String METHOD_1 ( int id , TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( id ) ; VAR_1 . METHOD_3 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_4 , true ) ; VAR_1 . METHOD_3 ( STRING_5 , METHOD_6 ( ) ) ; return STRING_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { execute ( STRING_1 ) ; METHOD_2 ( ) ; java.io.File VAR_1 = VAR_2 . METHOD_3 ( ) ; try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( VAR_1 ) ) ) { writer.write ( STRING_2 ) ; } catch ( java.io.IOException VAR_3 ) { throw VAR_3 ; } VAR_4 . METHOD_4 ( VAR_5 class ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; execute ( STRING_4 , new java.lang.Object [ ] { VAR_1 . METHOD_6 ( ) } ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { execute ( STRING_1 ) ; METHOD_2 ( ) ; java.io.File VAR_1 = VAR_2 . METHOD_3 ( ) ; try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.FileWriter ( VAR_1 ) ) ) { writer.write ( STRING_2 ) ; } VAR_4 . METHOD_4 ( VAR_5 class ) ; VAR_4 . METHOD_5 ( STRING_3 ) ; execute ( STRING_4 , new java.lang.Object [ ] { VAR_1 . METHOD_6 ( ) } ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = new TYPE_1 [ ] { VAR_2 , VAR_3 , VAR_4 } ; TYPE_2 VAR_5 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_6 class ) , VAR_7 , VAR_1 , null ) ; TYPE_4 . METHOD_3 ( VAR_5 . METHOD_4 ( null , null ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 [ ] VAR_1 = new TYPE_1 [ ] { VAR_2 , VAR_3 , VAR_4 } ; TYPE_2 VAR_5 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_6 class ) , VAR_1 , null ) ; TYPE_4 . METHOD_3 ( VAR_5 . METHOD_4 ( null , null ) ) ; }\n"}
{"problem": "public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) return true ; if ( ( VAR_1 == null ) || ( ( getClass ( ) ) != ( VAR_1 . getClass ( ) ) ) ) return false ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return getId ( ) . equals ( VAR_2 . getId ( ) ) ; }\n", "fixed": "public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) return true ; if ( ( VAR_1 == null ) || ( ( getClass ( ) ) != ( VAR_1 . getClass ( ) ) ) ) return false ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return ( ( getId ( ) ) != null ) && ( getId ( ) . equals ( VAR_2 . getId ( ) ) ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 ; java.io.InputStream VAR_3 ; try { VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 ; } catch ( TYPE_3 VAR_4 ) { } catch ( java.io.IOException VAR_4 ) { } return null ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 ; java.io.InputStream VAR_3 ; try { VAR_3 = METHOD_2 ( VAR_1 ) ; VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_3 . METHOD_4 ( ) ; return VAR_2 ; } catch ( TYPE_3 VAR_4 ) { } catch ( java.io.IOException VAR_4 ) { } catch ( java.lang.NullPointerException VAR_4 ) { } return null ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; java.lang.String [ ] VAR_2 = new java.lang.String [ ] { VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 } ; java.lang.String VAR_9 = ( VAR_10 ) + STRING_1 ; VAR_11 = METHOD_2 ( ) . query ( VAR_12 , VAR_2 , VAR_9 , null , ( ( VAR_5 ) + STRING_2 ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; java.lang.String [ ] VAR_2 = new java.lang.String [ ] { VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_8 } ; java.lang.String VAR_9 = ( VAR_10 ) + STRING_1 ; VAR_11 = METHOD_2 ( ) . query ( VAR_12 , VAR_2 , VAR_9 , null , ( ( VAR_5 ) + STRING_2 ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { try { TYPE_3 VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; return METHOD_1 ( VAR_3 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_4 . error ( VAR_4 , VAR_4 ) ; throw new TYPE_2 ( VAR_4 . METHOD_4 ( ) ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { try { TYPE_3 VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 != null ) { return METHOD_1 ( VAR_3 . METHOD_3 ( ) ) ; } else { return null ; } } catch ( java.lang.Exception VAR_4 ) { TYPE_4 . error ( VAR_4 , VAR_4 ) ; throw new TYPE_2 ( VAR_4 . METHOD_4 ( ) ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_1 tmp ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 method = tmp . METHOD_3 ( ) . getClass ( ) . METHOD_4 ( STRING_2 , new java.lang.Class [ ] { VAR_1 } ) ; return ( ( TYPE_1 ) ( method . METHOD_5 ( tmp . METHOD_3 ( ) , new java.lang.Object [ ] { java.lang.Integer . METHOD_6 ( 1 ) } ) ) ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_1 tmp ) throws java.lang.Exception { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 method = tmp . METHOD_3 ( ) . getClass ( ) . METHOD_4 ( STRING_2 , VAR_1 ) ; return ( ( TYPE_1 ) ( method . METHOD_5 ( tmp . METHOD_3 ( ) , 1 ) ) ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { java.lang.String result = STRING_1 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( VAR_1 [ i ] ) result += ( java.lang.String . METHOD_2 ( ( i + 1 ) ) ) + STRING_2 ; } return result . substring ( 0 , ( ( result . length ( ) ) - 1 ) ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { java.lang.String result = STRING_1 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( VAR_1 [ i ] ) result += ( java.lang.String . METHOD_2 ( ( i + 1 ) ) ) + STRING_2 ; } if ( result . equals ( STRING_1 ) ) return result ; else return result . substring ( 0 , ( ( result . length ( ) ) - 1 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_5 = VAR_6 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_7 . contains ( VAR_5 ) ) && ( VAR_8 . contains ( VAR_3 ) ) ) { VAR_7 . remove ( VAR_5 ) ; VAR_8 . remove ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_6 . METHOD_3 ( VAR_5 ) ; VAR_9 . METHOD_4 ( VAR_3 , VAR_5 . id ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.Long VAR_1 , java.lang.Long VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_5 = VAR_6 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_7 . contains ( VAR_5 ) ) && ( VAR_8 . contains ( VAR_3 ) ) ) { VAR_7 . remove ( VAR_5 ) ; VAR_8 . remove ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_9 . METHOD_4 ( VAR_3 , VAR_5 . id ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , TYPE_2 method , java.util.List < java.lang.Object > VAR_2 ) { TYPE_3 . METHOD_2 ( ( VAR_1 != null ) ) ; TYPE_3 . METHOD_2 ( ( method != null ) ) ; TYPE_3 . METHOD_2 ( ( VAR_2 != null ) ) ; java.util.List < java.lang.Object > VAR_3 = TYPE_4 . METHOD_3 ( new java.util.ArrayList < > ( VAR_2 ) ) ; TYPE_3 . METHOD_2 ( ( ! ( VAR_2 . contains ( null ) ) ) ) ; return new TYPE_1 ( VAR_1 , method , VAR_3 ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , TYPE_2 method , java.util.List < java.lang.Object > VAR_2 ) { TYPE_3 . METHOD_2 ( ( VAR_1 != null ) ) ; TYPE_3 . METHOD_2 ( ( method != null ) ) ; TYPE_3 . METHOD_2 ( ( VAR_2 != null ) ) ; return new TYPE_1 ( VAR_1 , method , TYPE_4 . METHOD_3 ( new java.util.ArrayList < > ( VAR_2 ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object result ) { java.lang.Long id = ( ( java.lang.Long ) ( VAR_1 . METHOD_2 ( ) [ 0 ] ) ) ; java.util.Set < java.lang.Long > VAR_2 = METHOD_3 ( id ) ; TYPE_2 VAR_3 = new TYPE_2 ( id . toString ( ) , METHOD_4 ( ) , METHOD_5 ( ) , VAR_4 , VAR_5 , new java.util.Date ( ) , VAR_2 . toString ( ) ) ; VAR_6 . METHOD_6 ( VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object result ) { java.lang.Long id = ( ( java.lang.Long ) ( VAR_1 . METHOD_2 ( ) [ 0 ] ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( id . toString ( ) , METHOD_4 ( ) , METHOD_5 ( ) , VAR_4 , VAR_5 , new java.util.Date ( ) , null ) ; VAR_6 . METHOD_6 ( VAR_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 < java.lang.Integer > VAR_1 , int VAR_2 ) { if ( VAR_1 . contains ( VAR_2 ) ) return ; TYPE_2 < java.lang.Integer > VAR_3 = source . METHOD_2 ( VAR_2 ) ; for ( int VAR_4 : VAR_3 ) { VAR_1 . add ( VAR_4 ) ; METHOD_1 ( VAR_1 , VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 < java.lang.Integer > VAR_1 , int VAR_2 ) { if ( VAR_1 . contains ( VAR_2 ) ) return ; VAR_1 . add ( VAR_2 ) ; TYPE_2 < java.lang.Integer > VAR_3 = source . METHOD_2 ( VAR_2 ) ; for ( int VAR_4 : VAR_3 ) { METHOD_1 ( VAR_1 , VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; i ++ ) { double [ ] VAR_2 = METHOD_2 ( VAR_3 ) ; double [ ] VAR_4 = METHOD_2 ( VAR_5 ) ; int VAR_6 = METHOD_3 ( VAR_2 ) ; int VAR_7 = METHOD_3 ( VAR_4 ) ; VAR_8 = METHOD_4 ( VAR_7 , VAR_8 , VAR_3 ) ; VAR_8 = METHOD_4 ( VAR_6 , VAR_9 , VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; i ++ ) { double [ ] VAR_2 = METHOD_2 ( VAR_3 ) ; double [ ] VAR_4 = METHOD_2 ( VAR_5 ) ; int VAR_6 = METHOD_3 ( VAR_2 ) ; int VAR_7 = METHOD_3 ( VAR_4 ) ; VAR_8 = METHOD_4 ( VAR_7 , VAR_6 , VAR_8 , VAR_3 ) ; VAR_8 = METHOD_4 ( VAR_6 , VAR_7 , VAR_8 , VAR_5 ) ; } }\n"}
{"problem": "private static java.lang.String toString ( java.lang.Object VAR_1 ) { if ( VAR_1 == null ) { return STRING_1 ; } else if ( VAR_1 instanceof java.util.Map ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; return VAR_2 . METHOD_1 ( ( ( java.util.Map ) ( VAR_1 ) ) ) ; } else { return VAR_1 . toString ( ) ; } }\n", "fixed": "private static java.lang.String toString ( java.lang.Object VAR_1 ) { if ( VAR_1 == null ) { return STRING_1 ; } else if ( VAR_1 instanceof java.util.Map ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; return VAR_2 . METHOD_1 ( ( ( java.util.Map ) ( VAR_1 ) ) ) ; } else if ( VAR_1 instanceof java.util.List ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; return VAR_2 . METHOD_1 ( ( ( java.util.List ) ( VAR_1 ) ) ) ; } else { return VAR_1 . toString ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_5 = new TYPE_1 ( ) { public void handle ( ) { VAR_2 . METHOD_2 ( VAR_6 ) ; } } ; VAR_7 = new TYPE_1 ( ) { public void handle ( ) { METHOD_4 ( ) ; } } ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_5 = new TYPE_1 ( ) { public void handle ( ) { VAR_2 . METHOD_2 ( VAR_6 ) ; } } ; VAR_7 = new TYPE_1 ( ) { public void handle ( ) { METHOD_4 ( ) ; } } ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( VAR_3 ) ; } VAR_4 = VAR_1 ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( ) ; VAR_7 . METHOD_3 ( VAR_6 ) ; VAR_7 . METHOD_4 ( ) ; if ( ! ( VAR_8 ) ) { VAR_9 . METHOD_5 ( VAR_1 . getId ( ) ) ; if ( VAR_9 . METHOD_6 ( ) ) { VAR_9 . METHOD_7 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 ) { METHOD_2 ( VAR_3 ) ; } VAR_4 = VAR_1 ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( ) ; if ( ! ( VAR_8 ) ) { VAR_9 . METHOD_5 ( VAR_1 . getId ( ) ) ; if ( VAR_9 . METHOD_6 ( ) ) { VAR_9 . METHOD_7 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( this , VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; VAR_5 = new TYPE_2 ( ( ( int ) ( INT_1 / INT_2 ) ) , this ) ; VAR_5 . start ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = true ; VAR_2 = new TYPE_1 ( this , VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; if ( ( VAR_5 ) == null ) { VAR_5 = new TYPE_2 ( ( ( int ) ( INT_1 / INT_2 ) ) , this ) ; } VAR_5 . start ( ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( long VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = null ; try { VAR_3 = VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( 1 , VAR_1 ) ; VAR_3 . METHOD_4 ( INT_1 , VAR_1 ) ; return METHOD_5 ( VAR_3 , VAR_2 ) ; } catch ( TYPE_4 VAR_5 ) { METHOD_6 ( VAR_5 , VAR_1 ) ; throw new TYPE_5 ( VAR_6 , VAR_5 ) ; } finally { METHOD_7 ( VAR_3 ) ; } }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( long VAR_1 , TYPE_2 VAR_2 ) { try ( TYPE_3 VAR_3 = VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ) { VAR_3 . METHOD_4 ( 1 , VAR_1 ) ; VAR_3 . METHOD_4 ( INT_1 , VAR_1 ) ; return METHOD_5 ( VAR_3 , VAR_2 ) ; } catch ( TYPE_4 VAR_5 ) { METHOD_6 ( VAR_5 , VAR_1 ) ; throw new TYPE_5 ( VAR_6 , VAR_5 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( 0 ) ; int VAR_2 = METHOD_2 ( 1 , 1 ) ; int VAR_3 = METHOD_2 ( STRING_1 , INT_1 ) ; METHOD_3 ( STRING_2 , VAR_1 ) ; METHOD_3 ( STRING_3 , VAR_4 . METHOD_4 ( VAR_2 , VAR_3 , STRING_4 , STRING_5 , VAR_5 . METHOD_5 ( VAR_1 ) . get ( STRING_6 ) ) ) ; METHOD_6 ( STRING_7 ) ; }\n", "fixed": "public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( 0 ) ; int VAR_2 = METHOD_2 ( STRING_3 , 1 ) ; int VAR_3 = METHOD_2 ( STRING_1 , INT_1 ) ; METHOD_3 ( STRING_2 , VAR_1 ) ; METHOD_3 ( STRING_3 , VAR_4 . METHOD_4 ( VAR_2 , VAR_3 , STRING_4 , STRING_5 , VAR_5 . METHOD_5 ( VAR_1 ) . get ( STRING_6 ) ) ) ; METHOD_6 ( STRING_7 ) ; }\n"}
{"problem": "public void handle ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 ) ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; java.lang.String VAR_4 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_2 ) ; TYPE_3 . METHOD_4 ( STRING_3 , VAR_4 , VAR_3 ) ; TYPE_3 . METHOD_4 ( STRING_4 , VAR_4 , VAR_2 ) ; VAR_1 . response ( ) . METHOD_5 ( INT_1 ) . end ( ) ; VAR_1 . response ( ) . METHOD_6 ( ) ; }\n", "fixed": "public void handle ( TYPE_1 VAR_1 ) { java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; java.lang.String VAR_4 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_2 ) ; TYPE_3 . METHOD_4 ( STRING_3 , VAR_4 , VAR_3 ) ; TYPE_3 . METHOD_4 ( STRING_4 , VAR_4 , VAR_3 ) ; VAR_1 . response ( ) . METHOD_5 ( INT_1 ) . end ( ) ; VAR_1 . response ( ) . METHOD_6 ( ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_3 . METHOD_4 ( true ) ; VAR_5 = ( ( TYPE_3 ) ( METHOD_5 ( VAR_6 ) ) ) ; VAR_7 = ( ( TYPE_3 ) ( METHOD_5 ( VAR_8 ) ) ) ; boolean VAR_9 ; VAR_9 = ( VAR_3 . METHOD_6 ( ) ) != null ; if ( VAR_9 ) { METHOD_7 ( ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_3 . METHOD_4 ( true ) ; VAR_5 = ( ( TYPE_3 ) ( METHOD_5 ( VAR_6 ) ) ) ; VAR_7 = ( ( TYPE_3 ) ( METHOD_5 ( VAR_8 ) ) ) ; boolean VAR_9 ; VAR_9 = ( VAR_3 . METHOD_6 ( ) ) != null ; if ( VAR_9 ) { METHOD_7 ( ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_4 VAR_3 = this . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; if ( VAR_3 != null ) { TYPE_5 VAR_4 = VAR_3 . METHOD_4 ( VAR_1 ) ; return TYPE_6 . METHOD_5 ( VAR_4 ) ; } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_4 VAR_3 = this . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; if ( VAR_3 != null ) { TYPE_5 VAR_4 = VAR_3 . METHOD_4 ( VAR_1 ) ; if ( VAR_4 != null ) { return TYPE_6 . METHOD_5 ( VAR_4 ) ; } } return null ; }\n"}
{"problem": "public TYPE_1 < java.lang.Boolean > METHOD_1 ( int id , TYPE_2 args ) { VAR_1 . METHOD_2 ( VAR_2 ) ; switch ( id ) { case VAR_3 : final java.lang.String [ ] VAR_4 = METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ; return new TYPE_3 ( this , VAR_4 ) ; default : throw new TYPE_4 ( STRING_1 ) ; } }\n", "fixed": "public TYPE_1 < java.lang.Boolean > METHOD_1 ( int id , TYPE_2 args ) { switch ( id ) { case VAR_3 : final java.lang.String [ ] VAR_4 = METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ; return new TYPE_3 ( this , VAR_4 ) ; default : throw new TYPE_4 ( STRING_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String data , TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 response , TYPE_4 VAR_3 ) throws java.io.IOException { new TYPE_5 ( STRING_1 , ( STRING_2 + data ) , STRING_3 ) ; java.lang.String VAR_4 = data ; java.lang.String VAR_5 = VAR_6 . METHOD_1 ( VAR_4 ) ; TYPE_6 out = response . METHOD_2 ( ) ; TYPE_7 VAR_7 = new TYPE_7 ( ) ; java.lang.String VAR_8 = VAR_7 . METHOD_3 ( VAR_5 ) ; java.lang.System.out.println ( ( STRING_4 + VAR_8 ) ) ; out.write ( VAR_8 ) ; out . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String data , TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 response ) throws java.io.IOException { new TYPE_5 ( STRING_1 , ( STRING_2 + data ) , STRING_3 ) ; java.lang.String VAR_4 = data ; java.lang.String VAR_5 = VAR_6 . METHOD_1 ( VAR_4 ) ; TYPE_6 out = response . METHOD_2 ( ) ; TYPE_7 VAR_7 = new TYPE_7 ( ) ; java.lang.String VAR_8 = VAR_7 . METHOD_3 ( VAR_5 ) ; java.lang.System.out.println ( ( STRING_4 + VAR_8 ) ) ; out.write ( VAR_8 ) ; out . METHOD_4 ( ) ; }\n"}
{"problem": "public android.view.View getView ( int position , android.view.View VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_1 ( ( STRING_1 + position ) ) ; TYPE_3 . METHOD_2 ( position ) ; android.view.View VAR_3 = METHOD_3 ( position , VAR_1 , VAR_2 , this . VAR_4 . get ( position ) . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( this . VAR_5 ) ; return VAR_3 ; }\n", "fixed": "public android.view.View getView ( int position , android.view.View VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . METHOD_1 ( ( STRING_1 + position ) ) ; TYPE_3 . METHOD_2 ( position ) ; android.view.View VAR_3 = METHOD_3 ( position , VAR_1 , VAR_2 , this . VAR_4 . get ( position ) . METHOD_4 ( ) ) ; return VAR_3 ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 ) { try { VAR_2 = VAR_1 [ 0 ] [ 0 ] . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_2 = new TYPE_1 ( VAR_4 ) ; } VAR_2 . METHOD_3 ( VAR_5 ) ; VAR_2 . position ( VAR_6 , VAR_6 ) ; VAR_2 . METHOD_4 ( 0 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 [ ] [ ] VAR_1 ) { try { VAR_2 = VAR_1 [ 0 ] [ 0 ] . METHOD_2 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_2 = new TYPE_1 ( VAR_4 ) ; } VAR_2 . METHOD_3 ( VAR_5 ) ; VAR_2 . position ( VAR_6 , VAR_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_1 = VAR_1 ; this . VAR_3 = ( ( ( ( ( VAR_4 ) + ( VAR_5 ) ) + ( id ) ) + ( VAR_5 ) ) + VAR_1 ) + ( VAR_6 . replace ( STRING_1 , STRING_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; this . VAR_1 = VAR_1 ; this . VAR_3 = ( ( ( ( ( ( VAR_4 ) + ( VAR_5 ) ) + ( id ) ) + ( VAR_5 ) ) + VAR_1 ) + ( VAR_5 ) ) + ( VAR_6 . replace ( STRING_1 , STRING_2 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( this ) ; this . METHOD_2 ( ) . METHOD_3 ( ) ; this . add ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { this . METHOD_2 ( ) . METHOD_3 ( ) ; this . add ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; }\n"}
{"problem": "private void commit ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = TYPE_4 . METHOD_1 ( ) . METHOD_2 ( VAR_4 , \"true\" ) . METHOD_2 ( VAR_5 , \"true\" ) . build ( ) ; try { VAR_1 . update ( VAR_3 , null , null , null ) ; TYPE_5 . METHOD_3 ( VAR_6 , STRING_1 ) ; TYPE_6 . METHOD_4 ( ) ; } catch ( TYPE_7 VAR_7 ) { TYPE_5 . METHOD_5 ( VAR_6 , STRING_2 , VAR_7 ) ; VAR_8 = true ; } }\n", "fixed": "private void commit ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = TYPE_4 . METHOD_1 ( ) . METHOD_2 ( VAR_4 , \"true\" ) . METHOD_2 ( VAR_5 , \"true\" ) . build ( ) ; try { VAR_1 . update ( VAR_3 , null , null , null ) ; TYPE_5 . METHOD_3 ( VAR_6 , STRING_1 ) ; TYPE_6 . METHOD_4 ( ) ; } catch ( java.lang.Exception VAR_7 ) { TYPE_5 . METHOD_5 ( VAR_6 , STRING_2 , VAR_7 ) ; VAR_8 = true ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; try { VAR_3 . remove ( VAR_1 . getName ( ) ) ; VAR_4 . remove ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; } finally { VAR_2 . METHOD_2 ( ) . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; try { if ( ( VAR_3 . get ( VAR_1 . getName ( ) ) ) == VAR_1 ) { VAR_3 . remove ( VAR_1 . getName ( ) ) ; VAR_4 . remove ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; } } finally { VAR_2 . METHOD_2 ( ) . METHOD_6 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; if ( ( VAR_1 ) != null ) { METHOD_4 ( VAR_3 , VAR_1 . getId ( ) , 1 ) ; } else { int id = METHOD_2 ( ) . getInt ( VAR_4 ) ; METHOD_4 ( VAR_3 , id , 1 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; if ( ( VAR_1 ) != null ) { METHOD_4 ( VAR_3 , VAR_1 . getId ( ) , 1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_2 ( view , VAR_3 ) ; VAR_4 = TYPE_4 . METHOD_2 ( view , VAR_5 ) ; VAR_4 . METHOD_3 ( this ) ; VAR_6 = new TYPE_5 ( ) ; VAR_2 . METHOD_4 ( VAR_6 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( new TYPE_6 ( getContext ( ) ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { super . METHOD_1 ( view , VAR_1 ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_2 ( view , VAR_3 ) ; VAR_4 = TYPE_4 . METHOD_2 ( view , VAR_5 ) ; VAR_4 . METHOD_3 ( this ) ; if ( ( VAR_6 ) == null ) { VAR_6 = new TYPE_5 ( ) ; } VAR_2 . METHOD_4 ( VAR_6 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( new TYPE_6 ( getContext ( ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( int start , int end ) { if ( ( ( VAR_1 ) == ( - 1 ) ) || ( ( VAR_1 ) > start ) ) { VAR_1 = start ; } if ( ( ( VAR_2 ) == ( - 1 ) ) || ( ( VAR_2 ) < end ) ) { VAR_2 = end ; } VAR_3 . add ( new TYPE_1 ( this , start , end ) ) ; }\n", "fixed": "public void METHOD_1 ( int start , int end ) { if ( ( ( VAR_1 ) == ( - 1 ) ) || ( ( VAR_1 ) > start ) ) { VAR_1 = start ; } if ( ( ( VAR_2 ) == ( - 1 ) ) || ( ( VAR_2 ) < end ) ) { VAR_2 = end ; } VAR_3 . add ( new TYPE_1 ( this , start , end ) ) ; java.util.Collections.sort ( VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , java.io.IOException { try { TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( STRING_2 ) ; METHOD_4 ( VAR_1 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_3 , VAR_4 , STRING_4 , STRING_5 ) ; METHOD_4 ( VAR_3 , VAR_2 , STRING_6 ) ; METHOD_5 ( VAR_5 , VAR_6 , STRING_7 , STRING_8 ) ; } finally { TYPE_3 . METHOD_2 ( STRING_9 ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , java.io.IOException { try { TYPE_3 . METHOD_2 ( STRING_1 ) ; METHOD_4 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_4 ( VAR_1 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_3 , VAR_4 , STRING_4 , STRING_5 ) ; METHOD_4 ( VAR_3 , VAR_2 , STRING_6 ) ; METHOD_5 ( VAR_5 , VAR_6 , STRING_7 , STRING_8 ) ; } finally { TYPE_3 . METHOD_2 ( STRING_9 ) ; } }\n"}
{"problem": "public synchronized void METHOD_1 ( ) { try { this . VAR_1 = true ; super . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_2 ) { view . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } finally { for ( TYPE_2 c : VAR_3 ) { try { c . METHOD_1 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } } this . METHOD_1 ( ) ; } view . METHOD_5 ( ) ; }\n", "fixed": "public synchronized void METHOD_1 ( ) { try { this . VAR_1 = true ; super . METHOD_1 ( ) ; } catch ( TYPE_1 VAR_2 ) { view . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } finally { for ( TYPE_2 c : VAR_3 ) { try { c . METHOD_1 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } } } view . METHOD_5 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ( ( ( VAR_2 . toString ( ) ) + STRING_1 ) + ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) , VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_6 ) ; VAR_7 = new TYPE_1 ( STRING_2 , VAR_5 ) ; VAR_7 . METHOD_3 ( VAR_6 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) , VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_6 ) ; VAR_7 = new TYPE_1 ( STRING_2 , VAR_5 ) ; VAR_7 . METHOD_3 ( VAR_6 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { return VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_5 . METHOD_6 ( STRING_1 , VAR_1 , VAR_4 ) ; return null ; } }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { return VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_3 ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_5 . METHOD_6 ( STRING_1 , VAR_1 ) ; return null ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception , TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; for ( TYPE_3 VAR_2 : list ) { VAR_3 . put ( VAR_2 , ( ( INT_1 * ( VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) . size ( ) ) ) / ( VAR_2 . METHOD_4 ( ) ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception , TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; for ( TYPE_3 VAR_2 : list ) { VAR_3 . put ( VAR_2 , VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) . size ( ) ) ; } }\n"}
{"problem": "public static java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_2 ) ; java.util.List < TYPE_1 > list = VAR_1 . METHOD_3 ( STRING_3 , VAR_3 class ) . METHOD_4 ( ) ; java.lang.System.out.println ( STRING_4 ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; return list ; }\n", "fixed": "public static java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; java.util.List < TYPE_1 > list = VAR_1 . METHOD_3 ( STRING_3 , VAR_3 class ) . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; return list ; }\n"}
{"problem": "public boolean METHOD_1 ( ) { try { return ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) > 0 ; } catch ( java.lang.Exception VAR_2 ) { TYPE_1 status = new TYPE_2 ( VAR_3 , VAR_4 , VAR_2 . METHOD_4 ( ) , VAR_2 ) ; VAR_5 . METHOD_5 ( status ) ; return false ; } }\n", "fixed": "public boolean METHOD_1 ( ) { try { return ( VAR_1 . METHOD_3 ( ) ) > 0 ; } catch ( java.lang.Exception VAR_2 ) { TYPE_1 status = new TYPE_2 ( VAR_3 , VAR_4 , VAR_2 . METHOD_4 ( ) , VAR_2 ) ; VAR_5 . METHOD_5 ( status ) ; return false ; } }\n"}
{"problem": "private void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_3 ) { try { for ( int i = 0 ; i < ( VAR_4 . size ( ) ) ; i ++ ) { VAR_2 . add ( VAR_4 . get ( i ) . VAR_5 ) ; } } catch ( TYPE_1 VAR_6 ) { } } VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_7 . METHOD_4 ( VAR_2 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { synchronized ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_3 ) { for ( int i = 0 ; i < ( VAR_4 . size ( ) ) ; i ++ ) { VAR_2 . add ( VAR_4 . get ( i ) . VAR_5 ) ; } } VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_7 . METHOD_4 ( VAR_2 ) ; } }\n"}
{"problem": "public java.util.ArrayList < java.lang.String > METHOD_1 ( ) { java.lang.String query = STRING_1 ; java.util.ArrayList < java.lang.String > output = new java.util.ArrayList < > ( ) ; try { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 result = VAR_1 . METHOD_3 ( query ) ; do { output . add ( result . getString ( 1 ) ) ; } while ( result . METHOD_4 ( ) ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } return output ; }\n", "fixed": "public java.util.ArrayList < java.lang.String > METHOD_1 ( ) { java.lang.String query = STRING_1 ; java.util.ArrayList < java.lang.String > output = new java.util.ArrayList < > ( ) ; try { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 result = VAR_1 . METHOD_3 ( query ) ; while ( result . METHOD_4 ( ) ) { output . add ( result . getString ( 1 ) ) ; } } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } return output ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( VAR_2 , 1 , 1 , 0 ) ; assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { fail ( ( STRING_1 + ( VAR_3 . METHOD_3 ( ) ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( VAR_2 , 1 , 1 , 1 ) ; assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) ) ; } catch ( TYPE_2 VAR_3 ) { fail ( ( STRING_1 + ( VAR_3 . METHOD_3 ( ) ) ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 msg ) { switch ( VAR_1 ) { case VAR_2 : VAR_3 . put ( VAR_4 , VAR_5 ) ; break ; case VAR_6 : VAR_3 . remove ( VAR_4 ) ; break ; case VAR_7 : METHOD_2 ( VAR_8 ) ; break ; default : super . METHOD_1 ( msg ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 msg ) { switch ( VAR_1 ) { case VAR_2 : VAR_3 . put ( VAR_8 , VAR_5 ) ; break ; case VAR_6 : VAR_3 . remove ( VAR_8 ) ; break ; case VAR_7 : METHOD_2 ( VAR_8 ) ; break ; default : super . METHOD_1 ( msg ) ; } }\n"}
{"problem": "public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 = VAR_3 . get ( STRING_1 ) ; TYPE_3 = VAR_3 . get ( STRING_2 ) ; TYPE_2 . METHOD_1 ( VAR_4 ) ; VAR_5 = VAR_3 . get ( STRING_3 ) ; TYPE_4 = VAR_3 . get ( STRING_4 ) ; TYPE_4 . METHOD_1 ( VAR_4 ) ; }\n", "fixed": "public void init ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; TYPE_2 = VAR_3 . get ( STRING_1 ) ; TYPE_3 = VAR_3 . get ( STRING_2 ) ; TYPE_3 . METHOD_1 ( VAR_4 ) ; VAR_5 = VAR_3 . get ( STRING_3 ) ; TYPE_4 = VAR_3 . get ( STRING_4 ) ; TYPE_4 . METHOD_1 ( VAR_4 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 . getContext ( ) ; VAR_4 = new TYPE_3 ( VAR_3 ) ; android.view.View VAR_5 = TYPE_4 . METHOD_2 ( VAR_1 . getContext ( ) ) . METHOD_3 ( VAR_6 , VAR_1 , false ) ; TYPE_1 VAR_7 = new TYPE_1 ( VAR_5 , VAR_2 ) ; return VAR_7 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { VAR_3 = VAR_1 . getContext ( ) ; VAR_4 = new TYPE_3 ( ) ; android.view.View VAR_5 = TYPE_4 . METHOD_2 ( VAR_1 . getContext ( ) ) . METHOD_3 ( VAR_6 , VAR_1 , false ) ; TYPE_1 VAR_7 = new TYPE_1 ( VAR_5 , VAR_2 ) ; return VAR_7 ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Throwable { java.lang.String VAR_1 = METHOD_2 ( ) ; java.util.List < java.lang.String > VAR_2 = METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; final java.lang.String VAR_4 = STRING_3 ; METHOD_5 ( VAR_1 , VAR_4 , true , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Throwable { java.lang.String VAR_1 = METHOD_2 ( ) ; java.util.List < java.lang.String > VAR_2 = METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; final java.lang.String VAR_4 = STRING_3 ; METHOD_5 ( VAR_1 , VAR_2 , VAR_4 , true ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String className , TYPE_2 data ) { className = className . replace ( CHAR_1 , CHAR_2 ) ; if ( VAR_1 == null ) { VAR_1 = VAR_2 ; } java.util.Map < java.lang.String , TYPE_2 > VAR_3 = TYPE_3 . get ( VAR_1 ) . METHOD_2 ( ) ; VAR_3 . put ( className , data ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String className , TYPE_2 data ) { className = className . replace ( CHAR_1 , CHAR_2 ) ; java.util.Map < java.lang.String , TYPE_2 > VAR_3 = TYPE_3 . get ( VAR_1 ) . METHOD_2 ( ) ; VAR_3 . put ( className , data ) ; }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) . METHOD_3 ( ) ) > ( ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( ) . METHOD_3 ( ) ) ? - 1 : 1 ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) . METHOD_3 ( ) ) >= ( ( ( TYPE_1 ) ( VAR_2 ) ) . METHOD_2 ( ) . METHOD_3 ( ) ) ? - 1 : 1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_1 . getColor ( ) ) ; VAR_5 . METHOD_1 ( VAR_1 ) ; if ( VAR_6 ) { METHOD_5 ( VAR_1 ) ; } METHOD_6 ( VAR_1 ) ; } else { VAR_1 . METHOD_3 ( VAR_7 ) ; VAR_4 . METHOD_4 ( VAR_1 . getColor ( ) ) ; } }\n", "fixed": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_1 . getColor ( ) ) ; VAR_5 . METHOD_1 ( VAR_1 ) ; if ( VAR_6 ) { METHOD_5 ( VAR_1 ) ; } METHOD_6 ( VAR_1 ) ; } else { VAR_1 . METHOD_3 ( VAR_7 ) ; METHOD_4 ( VAR_1 . getColor ( ) ) ; } }\n"}
{"problem": "protected java.lang.Void METHOD_1 ( java.lang.Void ... params ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 . id , 0 ) ; VAR_1 . update ( VAR_4 , INT_1 , STRING_1 , STRING_2 , STRING_3 , \"0\" , STRING_4 , ( STRING_5 + ( TYPE_2 . METHOD_3 ( ) ) ) ) ; return null ; }\n", "fixed": "protected java.lang.Void METHOD_1 ( java.lang.Void ... params ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . update ( VAR_4 , INT_1 , STRING_1 , STRING_2 , STRING_3 , \"0\" , STRING_4 , ( STRING_5 + ( TYPE_2 . METHOD_3 ( ) ) ) ) ; return null ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; ++ i ) { int VAR_2 = ( VAR_3 [ VAR_4 ] . METHOD_2 ( ) ) + 1 ; if ( VAR_2 >= ( VAR_5 . size ( ) ) ) { VAR_3 [ VAR_4 ] . METHOD_3 ( ) ; } VAR_3 [ VAR_4 ] . METHOD_4 ( ( VAR_2 % ( VAR_5 . size ( ) ) ) ) ; METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { for ( int i = 0 ; i < VAR_1 ; ++ i ) { int VAR_2 = ( VAR_3 [ VAR_4 ] . METHOD_2 ( ) ) + 1 ; if ( VAR_2 >= ( VAR_5 . size ( ) ) ) { VAR_3 [ VAR_4 ] . METHOD_3 ( ) ; } VAR_3 [ VAR_4 ] . METHOD_4 ( ( VAR_2 % ( VAR_5 . size ( ) ) ) ) ; } METHOD_5 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 key ) throws java.io.IOException { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( false ) ; TYPE_1 VAR_3 = VAR_1 . METHOD_4 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_5 ( new TYPE_3 ( VAR_3 , VAR_6 ) ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 key ) throws java.io.IOException { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( false ) ; TYPE_1 VAR_3 = VAR_1 . METHOD_4 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_5 ( new TYPE_3 ( VAR_3 , VAR_6 , this ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . get ( ) . METHOD_2 ( this ) ; VAR_1 = 0 ; message ( ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) ) ; TYPE_2 . get ( ) . METHOD_3 ( ) ; TYPE_2 . get ( ) . METHOD_4 ( ) ; for ( TYPE_3 p : METHOD_5 ( ) ) { TYPE_4 . METHOD_6 ( p , p . getName ( ) ) ; } METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . get ( ) . METHOD_2 ( this ) ; VAR_1 = 0 ; message ( ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) ) ; TYPE_2 . get ( ) . METHOD_3 ( ) ; TYPE_2 . get ( ) . METHOD_4 ( ) ; for ( TYPE_3 p : METHOD_5 ( ) ) { } METHOD_7 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_3 = getActivity ( ) ; VAR_4 = METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ; VAR_6 = METHOD_3 ( ) . METHOD_4 ( VAR_7 ) ; VAR_8 = TYPE_2 . METHOD_5 ( ) . METHOD_6 ( ) ; VAR_9 = VAR_2 . getString ( VAR_10 ) ; VAR_11 = VAR_2 . getString ( VAR_12 ) ; METHOD_7 ( true ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( ) ; VAR_3 = getActivity ( ) ; VAR_4 = METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ; VAR_6 = METHOD_3 ( ) . METHOD_4 ( VAR_7 ) ; VAR_8 = TYPE_2 . METHOD_5 ( ) . METHOD_6 ( ) ; VAR_9 = VAR_2 . getString ( VAR_10 ) ; METHOD_7 ( true ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( this . VAR_1 ) return ; int VAR_2 = 0 ; for ( int i = 0 ; i < ( this . position ) ; i ++ ) VAR_2 += this . VAR_3 [ i ] ; this . VAR_4 = ( ( byte ) ( INT_1 - VAR_2 ) ) ; this . VAR_1 = true ; }\n", "fixed": "public void METHOD_1 ( ) { if ( this . VAR_1 ) return ; int VAR_2 = 0 ; for ( int i = 0 ; i < ( this . position ) ; i ++ ) VAR_2 += this . VAR_3 [ i ] ; this . VAR_4 = INT_1 - ( VAR_2 & INT_1 ) ; this . VAR_1 = true ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.util.ArrayList < TYPE_2 > VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; if ( ! ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) { VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ; } TYPE_3 . METHOD_5 ( VAR_1 , VAR_4 ) ; VAR_3 . add ( VAR_2 ) ; TYPE_3 . METHOD_6 ( VAR_1 , VAR_3 ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.util.ArrayList < TYPE_2 > VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; if ( ! ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) { VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ; } TYPE_3 . METHOD_5 ( VAR_1 , VAR_4 ) ; if ( ! ( VAR_3 . contains ( VAR_2 ) ) ) { VAR_3 . add ( VAR_2 ) ; } TYPE_3 . METHOD_6 ( VAR_1 , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { for ( TYPE_1 VAR_1 : TYPE_1 . values ( ) ) { TYPE_2 VAR_2 = new TYPE_2 ( ( ( VAR_1 . toString ( ) ) + STRING_1 ) ) ; java.lang.System.out.println ( VAR_2 . METHOD_2 ( ) ) ; assertEquals ( VAR_1 , VAR_3 . METHOD_3 ( VAR_2 ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { for ( TYPE_1 VAR_1 : TYPE_1 . values ( ) ) { TYPE_2 VAR_2 = new TYPE_2 ( ( ( VAR_1 . toString ( ) ) + STRING_1 ) ) ; assertEquals ( VAR_1 , VAR_3 . METHOD_3 ( VAR_2 ) ) ; } }\n"}
{"problem": "public void build ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . length ) > ( VAR_3 . METHOD_1 ( ) ) ) { VAR_4 = VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 . length , title ) ; } else { VAR_4 = VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 , title ) ; } METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }\n", "fixed": "public void build ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . length ) > ( VAR_3 . METHOD_1 ( ) ) ) { VAR_4 = VAR_5 . METHOD_2 ( ) . METHOD_3 ( null , VAR_2 . length , title ) ; } else { VAR_4 = VAR_5 . METHOD_2 ( ) . METHOD_3 ( null , VAR_3 , title ) ; } METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; if ( ( ( VAR_3 ) != null ) && ( ( VAR_4 ) != 0 ) ) { VAR_4 = 0 ; VAR_5 . METHOD_3 ( VAR_6 ) ; METHOD_4 ( VAR_7 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = false ; if ( ( VAR_2 ) != null ) VAR_2 . METHOD_2 ( ) ; if ( ( ( VAR_3 ) != null ) && ( ( VAR_4 ) != 0 ) ) { VAR_4 = 0 ; VAR_5 . METHOD_3 ( VAR_6 ) ; METHOD_4 ( 0 ) ; } }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , java.lang.String.format ( STRING_1 , VAR_1 . getClass ( ) . METHOD_3 ( ) ) ) ; synchronized ( VAR_3 ) { METHOD_4 ( METHOD_5 ( ) , VAR_1 ) . execute ( ) ; } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , java.lang.String.format ( STRING_1 , VAR_1 . getClass ( ) . METHOD_3 ( ) ) ) ; synchronized ( METHOD_5 ( ) ) { METHOD_4 ( METHOD_5 ( ) , VAR_1 ) . execute ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_2 ( this ) ; if ( VAR_3 . METHOD_3 ( ) ) { METHOD_4 ( new android.content.Intent ( this , VAR_4 class ) ) ; METHOD_5 ( ) ; } METHOD_6 ( ) ; VAR_5 . METHOD_7 ( this ) ; VAR_6 . METHOD_7 ( this ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; init ( ) ; VAR_3 = new TYPE_2 ( this ) ; if ( VAR_3 . METHOD_3 ( ) ) { METHOD_4 ( new android.content.Intent ( this , VAR_4 class ) ) ; METHOD_5 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { int id = VAR_1 . getId ( ) ; switch ( id ) { case VAR_2 : { METHOD_2 ( new android.content.Intent ( this , VAR_3 class ) ) ; break ; } case VAR_4 : { METHOD_3 ( ) ; break ; } case VAR_5 : { METHOD_4 ( VAR_1 ) ; } case VAR_6 : { METHOD_2 ( new android.content.Intent ( this , VAR_7 class ) ) ; break ; } } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { int id = VAR_1 . getId ( ) ; switch ( id ) { case VAR_2 : { METHOD_2 ( new android.content.Intent ( this , VAR_3 class ) ) ; break ; } case VAR_4 : { METHOD_3 ( ) ; break ; } case VAR_6 : { METHOD_2 ( new android.content.Intent ( this , VAR_7 class ) ) ; break ; } } }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( java.lang.String ... path ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( path [ 0 ] ) ; if ( ( VAR_2 ) == null ) VAR_2 = TYPE_2 . METHOD_3 ( METHOD_4 ( ) , VAR_3 ) ; if ( VAR_1 != null ) { VAR_1 = METHOD_5 ( VAR_1 , VAR_4 . x , VAR_4 . y , false ) ; TYPE_3 VAR_5 = new TYPE_3 ( VAR_1 ) ; VAR_5 . METHOD_6 ( VAR_2 , 0 , 0 , VAR_6 ) ; } return VAR_1 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( java.lang.String ... path ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( path [ 0 ] ) ; if ( VAR_1 != null ) { VAR_1 = METHOD_5 ( VAR_1 , VAR_4 . x , VAR_4 . y , false ) ; TYPE_3 VAR_5 = new TYPE_3 ( VAR_1 ) ; VAR_5 . METHOD_6 ( VAR_2 , 0 , 0 , VAR_6 ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view , int position ) { if ( position == 0 ) return ; if ( VAR_1 . METHOD_2 ( position ) ) return ; if ( ( ( VAR_1 ) != null ) && ( VAR_2 ) ) { if ( VAR_3 . METHOD_3 ( position ) ) METHOD_4 ( view , position , false ) ; else METHOD_5 ( view , position , false ) ; } VAR_4 . put ( position , view ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View view , int position ) { if ( ( position == 0 ) || ( VAR_1 . METHOD_2 ( position ) ) ) return ; if ( ( ( VAR_1 ) != null ) && ( VAR_2 ) ) { if ( VAR_3 . METHOD_3 ( position ) ) METHOD_4 ( view , position , false ) ; else METHOD_5 ( view , position , false ) ; } VAR_4 . put ( position , view ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( long id , TYPE_2 VAR_1 ) { java.util.List < java.lang.Integer [ ] > VAR_2 = new java.util.LinkedList < > ( ) ; for ( TYPE_3 VAR_3 : this ) if ( METHOD_2 ( VAR_1 ) ) VAR_2 . METHOD_3 ( METHOD_4 ( VAR_1 , VAR_3 ) ) ; else VAR_2 . add ( METHOD_5 ( VAR_3 , VAR_1 ) ) ; java.lang.Integer [ ] VAR_4 = METHOD_6 ( VAR_2 ) ; return new TYPE_1 ( id , METHOD_7 ( VAR_4 ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( long id , TYPE_2 VAR_1 ) { java.util.List < java.lang.Integer [ ] > VAR_2 = new java.util.LinkedList < > ( ) ; for ( TYPE_3 VAR_3 : this ) if ( METHOD_2 ( VAR_1 ) ) VAR_2 . METHOD_3 ( METHOD_4 ( VAR_1 , VAR_3 ) ) ; else VAR_2 . add ( METHOD_5 ( VAR_3 , VAR_1 ) ) ; java.lang.Integer [ ] VAR_4 = METHOD_6 ( VAR_2 ) ; return new TYPE_1 ( id , METHOD_7 ( VAR_4 , VAR_1 ) ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , TYPE_3 { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_1 ( new TYPE_4 ( VAR_1 ) ) ; if ( VAR_2 == null ) { throw new TYPE_2 ( VAR_4 , VAR_5 , new java.lang.String [ ] { VAR_1 } ) ; } return METHOD_2 ( VAR_2 ) ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , TYPE_3 { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_1 ( new TYPE_4 ( VAR_1 ) ) ; if ( ( VAR_2 == null ) || ( ( VAR_2 . size ( ) ) == 0 ) ) { throw new TYPE_2 ( VAR_4 , VAR_5 , new java.lang.String [ ] { VAR_1 } ) ; } return METHOD_2 ( VAR_2 ) ; }\n"}
{"problem": "private int METHOD_1 ( final java.lang.String VAR_1 ) { final TYPE_1 VAR_2 = new TYPE_1 ( new java.io.File ( VAR_1 ) , ( ( java.io.File ) ( null ) ) , VAR_3 ) ; final java.util.Iterator < TYPE_2 > VAR_4 = VAR_2 . METHOD_2 ( ) ; int VAR_5 = 0 ; while ( VAR_4 . METHOD_3 ( ) ) { final TYPE_2 VAR_6 = VAR_4 . METHOD_4 ( ) ; VAR_5 ++ ; } VAR_2 . METHOD_5 ( ) ; return VAR_5 ; }\n", "fixed": "private int METHOD_1 ( final java.lang.String VAR_1 ) { final TYPE_1 VAR_2 = new TYPE_1 ( new java.io.File ( VAR_1 ) , ( ( java.io.File ) ( null ) ) , VAR_3 ) ; final java.util.Iterator < TYPE_2 > VAR_4 = VAR_2 . METHOD_2 ( ) ; int VAR_5 = 0 ; while ( VAR_4 . METHOD_3 ( ) ) { VAR_4 . METHOD_4 ( ) ; VAR_5 ++ ; } VAR_2 . METHOD_5 ( ) ; return VAR_5 ; }\n"}
{"problem": "public int METHOD_1 ( ) { java.lang.String VAR_1 = ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ; open ( ) ; TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 , null ) ; VAR_4 . METHOD_3 ( ) ; int count = VAR_4 . getInt ( 0 ) ; VAR_4 . METHOD_4 ( ) ; METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_6 , ( ( STRING_3 + count ) + STRING_4 ) ) ; return count ; }\n", "fixed": "public int METHOD_1 ( ) { java.lang.String VAR_1 = ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ; TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_1 , null ) ; VAR_4 . METHOD_3 ( ) ; int count = VAR_4 . getInt ( 0 ) ; VAR_4 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_6 , ( ( STRING_3 + count ) + STRING_4 ) ) ; return count ; }\n"}
{"problem": "public void METHOD_1 ( final java.lang.String VAR_1 , boolean VAR_2 ) { if ( ( listener ( ) ) != null ) listener ( ) . METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_3 ( new TYPE_1 ( ) { public void METHOD_4 ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_1 ( VAR_5 , VAR_1 , null , VAR_3 . METHOD_5 ( ) ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( listener ( ) ) != null ) listener ( ) . METHOD_2 ( ) ; super . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_3 ( new TYPE_1 ( ) { public void METHOD_4 ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_1 ( VAR_5 , VAR_1 , null , VAR_3 . METHOD_5 ( ) ) ; } } ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = this . VAR_1 ; if ( VAR_1 == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; } if ( ! ( VAR_1 . isEmpty ( ) ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; this . VAR_1 = TYPE_3 . METHOD_4 ( VAR_1 ) ; } super . METHOD_1 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = this . VAR_1 ; if ( VAR_1 == null ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; } if ( ! ( VAR_1 . isEmpty ( ) ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; } this . VAR_1 = TYPE_3 . METHOD_4 ( VAR_1 ) ; super . METHOD_1 ( ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = false ; if ( ! ( VAR_3 . equals ( STRING_1 ) ) ) { for ( java.lang.String VAR_3 : this . VAR_3 . split ( STRING_2 ) ) { if ( VAR_1 . METHOD_2 ( VAR_3 ) ) { VAR_2 = true ; } if ( VAR_1 . METHOD_2 ( ( STRING_3 + VAR_3 ) ) ) { return false ; } } } else { VAR_2 = true ; } return VAR_2 ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = false ; if ( ! ( VAR_3 . equals ( STRING_1 ) ) ) { for ( java.lang.String VAR_3 : this . VAR_3 . split ( STRING_2 ) ) { if ( VAR_1 . METHOD_2 ( VAR_3 ) ) { VAR_2 = true ; } } } else { VAR_2 = true ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , byte [ ] data , int count ) { byte [ ] VAR_3 = new byte [ count ] ; TYPE_3 . METHOD_2 ( data , 0 , VAR_3 , 0 , count ) ; VAR_4 . add ( new TYPE_4 ( VAR_1 , VAR_2 , data ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , byte [ ] data , int count ) { byte [ ] VAR_3 = new byte [ count ] ; TYPE_3 . METHOD_2 ( data , 0 , VAR_3 , 0 , count ) ; VAR_4 . add ( new TYPE_4 ( VAR_1 , VAR_2 , VAR_3 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 ) throws java.lang.Exception { try { java.lang.Class . METHOD_2 ( VAR_3 ) ; } catch ( java.lang.ClassNotFoundException VAR_4 ) { if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( VAR_2 , java.lang.String.format ( STRING_1 , VAR_4 . toString ( ) ) ) ; } VAR_5 . error ( STRING_2 , VAR_4 ) ; throw VAR_4 ; } }\n", "fixed": "private void METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 ) throws java.lang.Exception { try { java.lang.Class . METHOD_2 ( VAR_3 ) ; } catch ( final java.lang.ClassNotFoundException VAR_4 ) { if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( VAR_2 , java.lang.String.format ( STRING_1 , VAR_4 . toString ( ) ) ) ; } this . VAR_5 . error ( STRING_2 , VAR_4 ) ; throw VAR_4 ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( ) . execute ( VAR_2 , VAR_3 ) ; try { VAR_4 . remove ( STRING_1 ) ; VAR_4 . put ( STRING_1 , VAR_3 ) ; } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_2 ( ) ; } VAR_6 . setText ( STRING_2 ) ; VAR_7 . METHOD_3 ( VAR_8 ) ; VAR_9 . METHOD_3 ( VAR_8 ) ; VAR_10 . METHOD_3 ( VAR_8 ) ; TYPE_2 . METHOD_4 ( STRING_3 , VAR_4 . toString ( ) ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { new TYPE_1 ( ) . execute ( VAR_2 , VAR_3 ) ; try { VAR_4 . remove ( STRING_1 ) ; VAR_4 . put ( STRING_1 , VAR_3 ) ; } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_2 ( ) ; } VAR_6 . setText ( STRING_2 ) ; VAR_7 . METHOD_3 ( VAR_8 ) ; VAR_9 . METHOD_3 ( VAR_8 ) ; VAR_10 . METHOD_3 ( VAR_8 ) ; }\n"}
{"problem": "private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) TYPE_1 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; if ( VAR_1 ) { VAR_4 = TYPE_2 . open ( ) ; TYPE_3 p = VAR_4 . METHOD_3 ( ) ; p . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_5 ( p ) ; VAR_6 = true ; } else { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_6 ( ) ; } VAR_6 = false ; } }\n", "fixed": "private void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) TYPE_1 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; if ( VAR_1 ) { VAR_4 = TYPE_2 . open ( ) ; TYPE_3 p = VAR_4 . METHOD_3 ( ) ; p . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_5 ( p ) ; } else { if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_6 ( ) ; } } }\n"}
{"problem": "private int METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 instanceof TYPE_3 ) { return VAR_1 . METHOD_1 ( ( ( TYPE_3 ) ( VAR_2 ) ) , VAR_3 ) ; } return METHOD_2 ( VAR_1 , VAR_2 , ( - 1 ) , ( - 1 ) ) . size ( ) ; }\n", "fixed": "private int METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( ( VAR_2 . getValue ( ) ) != null ) && ( VAR_2 instanceof TYPE_3 ) ) { return VAR_1 . METHOD_1 ( ( ( TYPE_3 ) ( VAR_2 ) ) , VAR_3 ) ; } return METHOD_2 ( VAR_1 , VAR_2 , ( - 1 ) , ( - 1 ) ) . size ( ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; VAR_1 . METHOD_4 ( false ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { VAR_1 . METHOD_5 ( VAR_3 , VAR_4 ) ; } VAR_1 . METHOD_6 ( STRING_3 ) ; addComponent ( VAR_1 ) ; }\n", "fixed": "protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; TYPE_1 VAR_1 = new TYPE_1 ( this . VAR_2 ) ; VAR_1 . METHOD_4 ( false ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { VAR_1 . METHOD_5 ( VAR_3 , VAR_4 ) ; } VAR_1 . METHOD_6 ( STRING_3 ) ; addComponent ( VAR_1 ) ; }\n"}
{"problem": "public final void METHOD_1 ( ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_1 , VAR_2 ) ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } while ( ! ( VAR_1 . isEmpty ( ) ) ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_2 , VAR_2 ) ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_2 . error ( STRING_1 , java.lang.Thread . METHOD_5 ( ) . getName ( ) ) ; VAR_3 . METHOD_4 ( ) ; } } }\n", "fixed": "public final void METHOD_1 ( ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_1 , VAR_2 ) ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } while ( ! ( VAR_1 . isEmpty ( ) ) ) { try { METHOD_2 ( VAR_1 . METHOD_3 ( INT_2 , VAR_2 ) ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } } }\n"}
{"problem": "public java.util.List < java.lang.String > replace ( java.util.List < java.lang.String > list , java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( ( VAR_2 == null ) || ( VAR_1 == null ) ) { return list ; } for ( int i = 0 ; i < ( list . size ( ) ) ; i ++ ) { list . set ( i , list . get ( i ) . replace ( VAR_1 , VAR_2 ) ) ; } return list ; }\n", "fixed": "public java.util.List < java.lang.String > replace ( java.util.List < java.lang.String > list , java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( list == null ) { return null ; } if ( ( VAR_2 == null ) || ( VAR_1 == null ) ) { return list ; } for ( int i = 0 ; i < ( list . size ( ) ) ; i ++ ) { list . set ( i , list . get ( i ) . replace ( VAR_1 , VAR_2 ) ) ; } return list ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) { TYPE_1 status = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = null ; if ( ( status . METHOD_3 ( ) ) == true ) { VAR_2 = METHOD_4 ( VAR_3 ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == true ) { status . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; METHOD_7 ( ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_2 . METHOD_6 ( ) ) ) ) ; } } return status ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) { TYPE_1 status = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = null ; if ( ( ( status . METHOD_3 ( ) ) == true ) && ( ( VAR_3 ) != null ) ) { VAR_2 = METHOD_4 ( VAR_3 ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == true ) { status . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; METHOD_7 ( ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_2 . METHOD_6 ( ) ) ) ) ; } } return status ; }\n"}
{"problem": "public static void METHOD_1 ( java.io.FileWriter writer , java.lang.String VAR_1 , java.util.Date start ) throws java.io.IOException { if ( start != null ) { final TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 ) ; writer.write ( java.lang.String.format ( VAR_4 , VAR_1 , VAR_2 . format ( start ) ) ) ; } else { writer.write ( VAR_5 . NULL ) ; } }\n", "fixed": "public static void METHOD_1 ( java.io.FileWriter writer , java.lang.String VAR_1 , java.util.Date start ) throws java.io.IOException { if ( start != null ) { writer.write ( java.lang.String.format ( VAR_4 , VAR_1 , start . getTime ( ) ) ) ; } else { writer.write ( VAR_5 . NULL ) ; } }\n"}
{"problem": "public void start ( java.lang.String name ) { METHOD_1 ( ) ; try { TYPE_1 message = new TYPE_1 ( ) ; message . put ( \"name\" , name ) ; VAR_1 . METHOD_2 ( STRING_1 , message ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 . execute ( new TYPE_3 ( ) { public void METHOD_4 ( ) { METHOD_5 ( ) ; } } ) ; }\n", "fixed": "public void start ( java.lang.String name ) { try { TYPE_1 message = new TYPE_1 ( ) ; message . put ( \"name\" , name ) ; VAR_1 . METHOD_2 ( STRING_1 , message ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } VAR_3 . execute ( new TYPE_3 ( ) { public void METHOD_4 ( ) { METHOD_1 ( ) ; } } ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , java.util.Set < java.lang.Integer > VAR_2 ) { int VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_2 VAR_4 = VAR_5 . get ( VAR_3 ) ; if ( VAR_4 == null ) { METHOD_3 ( VAR_1 ) ; } else { VAR_2 . remove ( VAR_3 ) ; METHOD_4 ( VAR_1 , VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_2 VAR_4 = VAR_5 . get ( VAR_3 ) ; if ( VAR_4 == null ) { METHOD_3 ( VAR_1 ) ; } else { METHOD_4 ( VAR_1 , VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String words = METHOD_2 ( ) . getString ( VAR_1 . words ) ; java.lang.String [ ] VAR_2 = words . split ( STRING_1 ) ; TYPE_1 . METHOD_3 ( VAR_3 , ( STRING_2 + ( VAR_2 . length ) ) ) ; VAR_4 = VAR_2 [ VAR_5 . METHOD_4 ( ( ( VAR_2 . length ) - 1 ) ) ] ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String [ ] VAR_2 = METHOD_2 ( ) . getString ( VAR_1 . words ) . split ( STRING_1 ) ; TYPE_1 . METHOD_3 ( VAR_3 , ( STRING_2 + ( VAR_2 . length ) ) ) ; VAR_4 = VAR_2 [ VAR_5 . METHOD_4 ( ( ( VAR_2 . length ) - 1 ) ) ] ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == false ) { if ( ( ( ( VAR_2 ) ++ ) % INT_1 ) == 0 ) { query ( VAR_3 , VAR_4 ) ; VAR_2 = 0 ; } query ( VAR_5 , VAR_4 ) ; METHOD_2 ( VAR_6 ) ; VAR_7 . METHOD_3 ( VAR_8 , VAR_9 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_1 ) == false ) { if ( ( ( ( VAR_2 ) ++ ) % INT_1 ) == 0 ) { query ( VAR_3 , VAR_4 ) ; } else { query ( VAR_5 , VAR_4 ) ; } METHOD_2 ( VAR_6 ) ; VAR_7 . METHOD_3 ( VAR_8 , VAR_9 ) ; } }\n"}
{"problem": "public int [ ] METHOD_1 ( ) { return new int [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , VAR_15 , VAR_16 , VAR_17 , VAR_18 , VAR_19 } ; }\n", "fixed": "public int [ ] METHOD_1 ( ) { return new int [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , VAR_15 , VAR_16 , VAR_17 , VAR_18 , VAR_19 } ; }\n"}
{"problem": "private void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { int sum = 0 ; for ( java.lang.String str : VAR_1 ) { try { sum += METHOD_2 ( new java.io.File ( str ) , true ) ; } catch ( TYPE_1 | TYPE_2 | java.io.IOException VAR_2 ) { VAR_3 . error ( VAR_2 ) ; } } if ( sum > 0 ) METHOD_3 ( VAR_4 ) ; }\n", "fixed": "private void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { int sum = 0 ; for ( java.lang.String str : VAR_1 ) { try { sum += METHOD_2 ( new java.io.File ( str ) , false ) ; } catch ( TYPE_1 | TYPE_2 | java.io.IOException VAR_2 ) { VAR_3 . error ( VAR_2 ) ; } } if ( sum > 0 ) METHOD_3 ( VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { for ( TYPE_1 n : VAR_1 ) { VAR_2 . put ( n . getId ( ) , n ) ; } this . VAR_3 = ( ( ( VAR_2 . size ( ) ) - 1 ) * ( VAR_4 ) ) * INT_1 ; }\n", "fixed": "public void METHOD_1 ( java.util.Set < TYPE_1 > VAR_1 ) { for ( TYPE_1 n : VAR_1 ) { VAR_2 . put ( n . getId ( ) , n ) ; } this . VAR_3 = ( ( VAR_2 . size ( ) ) - 1 ) * ( VAR_4 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) . METHOD_6 ( VAR_3 , null ) ) ; VAR_1 . METHOD_2 ( VAR_4 ) . METHOD_7 ( this ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( METHOD_5 ( ) . METHOD_6 ( VAR_3 , null ) ) ; VAR_1 . METHOD_2 ( VAR_4 ) . METHOD_7 ( this ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( ) ) { TYPE_3 . METHOD_4 ( VAR_3 , STRING_1 ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ) ; } else { TYPE_4 . METHOD_8 ( this , STRING_2 , VAR_4 ) . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_2 ( ) ; if ( VAR_1 . METHOD_3 ( ) ) { TYPE_3 . METHOD_4 ( VAR_3 , STRING_1 ) ; TYPE_3 . METHOD_4 ( VAR_3 , VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) . toString ( ) ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ) ; } else { TYPE_4 . METHOD_8 ( this , STRING_2 , VAR_4 ) . show ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( ( VAR_1 ) == ( ( VAR_2 ) + 1 ) ) && ( VAR_3 ) ) { VAR_3 = false ; METHOD_2 ( STRING_1 ) ; VAR_4 . METHOD_3 ( this ) ; ( VAR_1 ) ++ ; } else { ( VAR_1 ) ++ ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( ( VAR_1 ) == ( ( VAR_2 ) + 1 ) ) && ( VAR_3 ) ) { VAR_3 = false ; METHOD_2 ( STRING_1 ) ; VAR_4 . METHOD_3 ( this ) ; ( VAR_1 ) ++ ; } else if ( VAR_3 ) { ( VAR_1 ) ++ ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . getActivity ( ) . METHOD_3 ( VAR_4 ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 . getView ( ) , VAR_5 ) ; ( ( TYPE_1 ) ( VAR_3 . getActivity ( ) . METHOD_3 ( VAR_4 ) ) ) . METHOD_4 ( VAR_1 . getView ( ) , 0 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . getView ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 . getActivity ( ) . METHOD_3 ( VAR_4 ) ) ) ; VAR_2 . METHOD_4 ( VAR_1 . getView ( ) , VAR_5 ) ; ( ( TYPE_1 ) ( VAR_3 . getActivity ( ) . METHOD_3 ( VAR_4 ) ) ) . METHOD_4 ( VAR_1 . getView ( ) , 0 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ! ( VAR_1 . equals ( STRING_1 ) ) ) { VAR_2 . setText ( METHOD_2 ( VAR_3 . get ( VAR_4 ) ) . toUpperCase ( ) ) ; } else { VAR_2 . setText ( VAR_3 . get ( VAR_4 ) . toUpperCase ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = VAR_3 . get ( VAR_4 ) ; if ( ! ( VAR_1 . equals ( STRING_1 ) ) ) { VAR_2 . setText ( METHOD_2 ( VAR_3 . get ( VAR_4 ) ) . toUpperCase ( ) ) ; } else { VAR_2 . setText ( VAR_3 . get ( VAR_4 ) . toUpperCase ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; VAR_4 . setText ( VAR_2 . METHOD_2 ( ) ) ; VAR_5 . setText ( VAR_2 . METHOD_3 ( ) ) ; VAR_6 . setText ( VAR_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( VAR_7 ) . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) . METHOD_8 ( VAR_8 ) ; VAR_9 = VAR_2 ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int position ) { TYPE_2 VAR_2 = VAR_3 . get ( position ) ; VAR_4 . setText ( VAR_2 . METHOD_2 ( ) ) ; VAR_6 . setText ( VAR_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( VAR_7 ) . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) . METHOD_8 ( VAR_8 ) ; VAR_9 = VAR_2 ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = true ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; while ( VAR_2 ) { VAR_2 = false ; for ( int x = 0 ; x < ( VAR_4 . size ( ) ) ; x ++ ) { if ( VAR_3 . equals ( VAR_4 . get ( x ) . METHOD_2 ( ) ) ) { return false ; } } } VAR_4 . add ( VAR_1 ) ; METHOD_3 ( VAR_3 ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = true ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; while ( VAR_2 ) { VAR_2 = false ; for ( int x = 0 ; x < ( VAR_4 . size ( ) ) ; x ++ ) { if ( VAR_3 . equals ( VAR_4 . get ( x ) . METHOD_2 ( ) ) ) { return false ; } } } VAR_4 . add ( VAR_1 ) ; METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; return true ; }\n"}
{"problem": "public static java.io.File METHOD_1 ( java.lang.String fileName ) { java.io.File file = new java.io.File ( fileName ) ; boolean VAR_1 = false ; if ( ! ( file . METHOD_2 ( ) ) ) { try { VAR_1 = file . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } } return VAR_1 ? file : null ; }\n", "fixed": "public static java.io.File METHOD_1 ( java.lang.String fileName ) { java.io.File file = new java.io.File ( fileName ) ; if ( ! ( file . METHOD_2 ( ) ) ) { try { file . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } } return file ; }\n"}
{"problem": "public TYPE_1 remove ( TYPE_1 obj ) { if ( ( VAR_1 ) != 0 ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { if ( ( ( ( TYPE_2 < TYPE_1 > ) ( obj ) ) . compareTo ( array [ i ] ) ) == 0 ) { TYPE_1 temp = array [ i ] ; ( VAR_1 ) -- ; METHOD_1 ( false ) ; METHOD_2 ( i , false ) ; return temp ; } } } return null ; }\n", "fixed": "public TYPE_1 remove ( TYPE_1 obj ) { if ( ! ( isEmpty ( ) ) ) { for ( int i = 0 ; i < ( VAR_1 ) ; i ++ ) { if ( ( ( ( TYPE_2 < TYPE_1 > ) ( obj ) ) . compareTo ( array [ i ] ) ) == 0 ) { TYPE_1 temp = array [ i ] ; ( VAR_1 ) -- ; METHOD_1 ( false ) ; METHOD_2 ( i , false ) ; return temp ; } } } return null ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( INT_1 ) ) ) . METHOD_5 ( ) ; ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( INT_1 ) ) ) . add ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( 1 ) . METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( 1 ) . show ( false ) ; ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( INT_1 ) ) ) . METHOD_5 ( ) ; ( ( TYPE_2 ) ( METHOD_3 ( ) . METHOD_4 ( INT_1 ) ) ) . add ( VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( 1 ) . METHOD_6 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = new TYPE_1 ( STRING_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( INT_1 ) ; VAR_2 . METHOD_3 ( INT_2 ) ; VAR_2 . METHOD_4 ( 1 ) ; VAR_2 . METHOD_5 ( INT_3 ) ; VAR_2 . METHOD_6 ( INT_4 ) ; VAR_2 . METHOD_7 ( STRING_3 ) ; assertEquals ( TYPE_3 . METHOD_8 ( VAR_1 ) , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = new TYPE_1 ( STRING_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( INT_1 ) ; VAR_2 . METHOD_3 ( INT_2 ) ; VAR_2 . METHOD_4 ( 1 ) ; VAR_2 . METHOD_5 ( INT_3 ) ; VAR_2 . METHOD_6 ( INT_4 ) ; VAR_2 . METHOD_7 ( STRING_3 ) ; assertEquals ( TYPE_3 . METHOD_8 ( VAR_1 , true ) , VAR_2 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; TYPE_2 VAR_2 = VAR_3 . get ( VAR_4 ) . METHOD_3 ( ) ; try { VAR_3 . get ( VAR_4 ) . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_5 ) { TYPE_3 . METHOD_5 ( VAR_6 , STRING_2 ) ; } new TYPE_4 ( this ) . execute ( VAR_2 . toString ( ) , VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( this , STRING_1 , VAR_1 ) . show ( ) ; TYPE_2 VAR_2 = VAR_3 . get ( VAR_4 ) . METHOD_3 ( ) ; try { VAR_3 . get ( VAR_4 ) . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_5 ) { TYPE_3 . METHOD_5 ( VAR_6 , STRING_2 ) ; } new TYPE_4 ( this ) . execute ( VAR_2 . toString ( ) , VAR_4 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( null ) ; try { VAR_2 = new java.io.FileInputStream ( VAR_3 ) ; VAR_4 = new TYPE_2 ( VAR_2 ) ; VAR_1 = ( ( TYPE_1 ) ( VAR_4 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } if ( ( VAR_6 ) == null ) java.lang.System.out.println ( STRING_1 ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( null ) ; try { VAR_2 = new java.io.FileInputStream ( VAR_3 ) ; VAR_4 = new TYPE_2 ( VAR_2 ) ; VAR_1 = ( ( TYPE_1 ) ( VAR_4 . METHOD_2 ( ) ) ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { while ( ! ( VAR_1 . isEmpty ( ) ) ) { VAR_2 = VAR_1 . get ( 0 ) ; VAR_1 . remove ( VAR_2 ) ; VAR_3 . add ( VAR_2 ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { while ( ! ( VAR_1 . isEmpty ( ) ) ) { VAR_2 = VAR_1 . get ( 0 ) ; VAR_3 . add ( VAR_2 ) ; VAR_4 . METHOD_2 ( VAR_2 , VAR_1 , VAR_3 ) ; VAR_1 . remove ( VAR_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { this . METHOD_2 ( this . VAR_4 ) ; } if ( ( VAR_2 ) == ( VAR_5 ) ) { this . METHOD_3 ( this . VAR_4 ) ; } if ( ( VAR_2 ) == ( VAR_6 ) ) { this . METHOD_2 ( this . VAR_7 ) ; } if ( ( VAR_2 ) == ( VAR_8 ) ) { this . METHOD_3 ( this . VAR_7 ) ; } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { METHOD_2 ( VAR_4 ) ; } if ( ( VAR_2 ) == ( VAR_5 ) ) { METHOD_3 ( VAR_4 ) ; } if ( ( VAR_2 ) == ( VAR_6 ) ) { METHOD_2 ( VAR_7 ) ; } if ( ( VAR_2 ) == ( VAR_8 ) ) { METHOD_3 ( VAR_7 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_1 ) ) { VAR_2 = VAR_3 . METHOD_3 ( info . position ) ; VAR_4 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( ) ; VAR_3 . remove ( VAR_2 ) ; VAR_3 . METHOD_7 ( ) ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_1 ) ) { VAR_2 = VAR_3 . METHOD_3 ( info . position ) ; VAR_3 . remove ( VAR_2 ) ; VAR_3 . METHOD_7 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( ) ; } return true ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; if ( VAR_2 == 1 ) { VAR_1 . METHOD_4 ( INT_1 ) ; } else if ( VAR_2 == INT_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_5 ( INT_2 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_2 == 1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( INT_1 ) ; } else if ( VAR_2 == INT_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_5 ( INT_2 ) ; } }\n"}
{"problem": "private boolean METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == 0 ) return false ; if ( ! ( METHOD_3 ( ) ) ) return false ; TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; while ( ! ( VAR_2 . isEmpty ( ) ) ) { VAR_2 . METHOD_4 ( ) ; } return true ; }\n", "fixed": "private boolean METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( VAR_1 < 0 ) return false ; if ( ! ( METHOD_3 ( ) ) ) return false ; TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; while ( ! ( VAR_2 . isEmpty ( ) ) ) { VAR_2 . METHOD_4 ( ) ; } return true ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 [ ] data = new TYPE_2 [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 } ; VAR_2 . METHOD_2 ( data ) ; return VAR_1 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; java.lang.String [ ] data = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 } ; VAR_2 . METHOD_2 ( data ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( INT_1 ) ; VAR_3 . METHOD_5 ( INT_2 ) ; VAR_3 . METHOD_6 ( java.lang.Integer.parseInt ( STRING_2 ) ) ; TYPE_2 . METHOD_7 ( VAR_1 . METHOD_8 ( VAR_2 , VAR_3 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( INT_1 ) ; VAR_3 . METHOD_5 ( INT_2 ) ; VAR_3 . METHOD_6 ( STRING_2 ) ; TYPE_2 . METHOD_7 ( VAR_1 . METHOD_8 ( VAR_2 , VAR_3 ) ) ; }\n"}
{"problem": "void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { TYPE_1 element = VAR_1 . get ( i ) ; java.lang.System.out.println ( ( ( ( STRING_1 + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) ) ; VAR_3 . METHOD_2 ( STRING_4 , VAR_4 , VAR_5 , VAR_6 ) ; } }\n", "fixed": "void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { TYPE_1 element = VAR_1 . get ( i ) ; java.lang.System.out.println ( ( ( ( STRING_1 + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) ) ; VAR_3 . METHOD_2 ( STRING_4 , VAR_5 , VAR_4 , VAR_6 ) ; } }\n"}
{"problem": "void METHOD_1 ( ) { if ( ( node . METHOD_2 ( ) ) != null ) { for ( TYPE_1 VAR_1 : node . METHOD_2 ( ) . values ( ) ) { try { TYPE_2 VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_1 . delete ( false ) ; } } } init ( ) ; }\n", "fixed": "void METHOD_1 ( ) { if ( ( node . METHOD_2 ( ) ) != null ) { for ( TYPE_1 VAR_1 : node . METHOD_2 ( ) . values ( ) ) { try { TYPE_2 VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_2 , VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_1 . delete ( false ) ; } } } init ( ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_2 ) TYPE_1 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; METHOD_3 ( ( STRING_2 + VAR_1 ) , false ) ; if ( ! ( VAR_4 . isEmpty ( ) ) ) { java.lang.String VAR_5 = VAR_4 . METHOD_4 ( ) ; VAR_6 = java.lang.Integer.parseInt ( VAR_5 ) ; METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_3 ( ( STRING_2 + VAR_1 ) , false ) ; if ( ! ( VAR_4 . isEmpty ( ) ) ) { java.lang.String VAR_5 = VAR_4 . METHOD_4 ( ) ; VAR_6 = java.lang.Integer.parseInt ( VAR_5 ) ; METHOD_5 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( int [ ] data ) { int VAR_1 = ( data . length ) - ( VAR_2 ) ; if ( VAR_1 < 0 ) VAR_1 = 0 ; double VAR_3 = VAR_2 ; if ( ( data . length ) < ( VAR_2 ) ) VAR_3 = data . length ; double sum = 0.0 ; for ( int i = data . length ; i > VAR_1 ; i ++ ) { sum += data [ i ] ; } VAR_4 = sum / VAR_3 ; }\n", "fixed": "public void METHOD_1 ( int [ ] data ) { int VAR_1 = ( data . length ) - ( VAR_2 ) ; if ( VAR_1 < 0 ) VAR_1 = 0 ; double VAR_3 = VAR_2 ; if ( ( data . length ) < ( VAR_2 ) ) VAR_3 = data . length ; double sum = 0.0 ; for ( int i = VAR_1 ; i < ( data . length ) ; i ++ ) { sum += data [ i ] ; } VAR_4 = sum / VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( 0 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } catch ( java.io.IOException VAR_5 ) { java.lang.System.out.println ( STRING_1 ) ; } VAR_6 . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { try { VAR_1 = new TYPE_1 ( 0 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_3 = VAR_1 . METHOD_2 ( ) ; VAR_4 = VAR_2 . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } catch ( java.io.IOException VAR_5 ) { java.lang.System.out.println ( STRING_1 ) ; } }\n"}
{"problem": "public synchronized TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) throws java.lang.Exception { final TYPE_1 p = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_1 ) ) ) ; final TYPE_2 t = ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( STRING_2 , p . METHOD_4 ( ) ) ) ) ; p . METHOD_5 ( t . getName ( ) ) ; p . METHOD_6 ( METHOD_7 ( p . METHOD_8 ( ) ) ) ; return p ; }\n", "fixed": "public synchronized TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) throws java.lang.Exception { final TYPE_1 p = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_1 ) ) ) ; if ( p != null ) { final TYPE_2 t = ( ( TYPE_2 ) ( METHOD_2 ( ) . METHOD_3 ( STRING_2 , p . METHOD_4 ( ) ) ) ) ; p . METHOD_5 ( t . getName ( ) ) ; p . METHOD_6 ( METHOD_7 ( p . METHOD_8 ( ) ) ) ; } return p ; }\n"}
{"problem": "public static void METHOD_1 ( ) { if ( ( ( TYPE_1 . getTime ( ) ) - ( VAR_1 ) ) > 1.0 ) { VAR_2 = VAR_3 ; TYPE_2 . METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_4 , VAR_2 ) ) ; VAR_3 = 0 ; ( VAR_1 ) ++ ; } ( VAR_3 ) ++ ; }\n", "fixed": "public static void METHOD_1 ( ) { if ( ( ( TYPE_1 . getTime ( ) ) - ( VAR_1 ) ) >= 1.0 ) { VAR_2 = VAR_3 ; TYPE_2 . METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_4 , VAR_2 ) ) ; VAR_3 = 0 ; ( VAR_1 ) ++ ; } ( VAR_3 ) ++ ; }\n"}
{"problem": "public static int METHOD_1 ( TYPE_1 offset , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 . equals ( VAR_2 ) ) return 0 ; return ( VAR_1 . METHOD_2 ( offset . x , offset . y , VAR_3 ) ) > ( VAR_2 . METHOD_2 ( offset . x , offset . y , VAR_3 ) ) ? 1 : - 1 ; }\n", "fixed": "public static int METHOD_1 ( TYPE_1 offset , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 . equals ( VAR_2 ) ) return 0 ; return ( ( int ) ( ( VAR_1 . METHOD_2 ( offset . x , offset . y , VAR_3 ) ) - ( VAR_2 . METHOD_2 ( offset . x , offset . y , VAR_3 ) ) ) ) ; }\n"}
{"problem": "private boolean METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 ; TYPE_2 VAR_3 ; VAR_3 = getContext ( ) . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( 0 ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { if ( VAR_5 . equals ( VAR_1 ) ) return true ; } return false ; }\n", "fixed": "private boolean METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 > VAR_2 ; TYPE_2 VAR_3 ; VAR_3 = getContext ( ) . METHOD_2 ( ) ; VAR_2 = VAR_3 . METHOD_3 ( 0 ) ; int i = 0 ; while ( i < ( VAR_2 . size ( ) ) ) { TYPE_1 VAR_4 = VAR_2 . get ( i ) ; if ( ! ( VAR_5 . equals ( VAR_1 ) ) ) { i ++ ; } else { return true ; } } return false ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 . delete ( 0 , VAR_2 . length ( ) ) ; VAR_2 . append ( \"\\n\" ) ; VAR_2 . append ( VAR_3 ) . append ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; VAR_4 . info ( VAR_2 . append ( VAR_5 ) ) ; VAR_6 . error ( STRING_1 , VAR_1 ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.Exception VAR_1 ) { VAR_2 . delete ( 0 , VAR_2 . length ( ) ) ; VAR_2 . append ( VAR_3 ) . append ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; VAR_4 . info ( VAR_2 . append ( VAR_5 ) ) ; VAR_6 . error ( STRING_1 , VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( INT_1 ) ; VAR_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_5 ( ) ; TYPE_2 . assertNotNull ( VAR_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( INT_1 ) ; VAR_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_5 ( ) ; TYPE_2 . assertNotNull ( VAR_2 . METHOD_7 ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; boolean VAR_3 = false ; synchronized ( this ) { VAR_3 = VAR_4 . add ( VAR_2 ) ; } if ( ( VAR_3 && ( VAR_5 ) ) && ( ! ( VAR_6 ) ) ) METHOD_3 ( VAR_7 , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ! ( VAR_5 ) ) return ; final TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; boolean VAR_3 = false ; synchronized ( this ) { VAR_3 = VAR_4 . add ( VAR_2 ) ; } if ( VAR_3 && ( ! ( VAR_6 ) ) ) METHOD_3 ( VAR_7 , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String VAR_1 = STRING_1 ; final TYPE_1 < TYPE_2 > VAR_2 = VAR_3 . build ( VAR_1 , VAR_4 ) ; TYPE_3 . assertThat ( VAR_2 . METHOD_2 ( VAR_5 ) , TYPE_4 . METHOD_3 ( true ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String VAR_1 = null ; final TYPE_1 < TYPE_2 > VAR_2 = VAR_3 . build ( VAR_1 , VAR_4 ) ; TYPE_3 . assertThat ( VAR_2 . METHOD_2 ( VAR_5 ) , TYPE_4 . METHOD_3 ( true ) ) ; }\n"}
{"problem": "public java.lang.Integer [ ] METHOD_1 ( int id ) { VAR_1 . METHOD_2 ( id ) ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_1 . METHOD_3 ( ) . size ( ) ] ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; return VAR_2 ; }\n", "fixed": "public java.lang.Integer [ ] METHOD_1 ( int id ) { if ( ! ( VAR_1 . METHOD_2 ( id ) ) ) return null ; java.lang.Integer [ ] VAR_2 = new java.lang.Integer [ VAR_1 . METHOD_3 ( ) . size ( ) ] ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( final android.content.Context VAR_1 , final java.lang.String VAR_2 ) { final TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_4 . METHOD_2 ( VAR_5 ) ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_6 ) . METHOD_6 ( VAR_3 , new TYPE_3 ( ) { public void METHOD_7 ( ) { } public void METHOD_8 ( ) { TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_6 ( VAR_3 ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( final android.content.Context VAR_1 , final java.lang.String VAR_2 ) { final TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_4 . METHOD_2 ( VAR_5 ) ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_6 ) . METHOD_6 ( VAR_3 , new TYPE_3 ( ) { public void METHOD_7 ( ) { } public void METHOD_8 ( ) { TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_6 ( VAR_3 ) ; } } ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; assertEquals ( 0 , VAR_1 . size ( ) ) ; TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; TYPE_4 . METHOD_6 ( ) . info ( ( STRING_1 + ( VAR_4 ) ) ) ; assertEquals ( VAR_5 , VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; assertEquals ( 0 , VAR_1 . size ( ) ) ; TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; TYPE_4 . METHOD_6 ( ) . info ( ( STRING_1 + ( VAR_4 ) ) ) ; assertEquals ( 0 , VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) && ( VAR_1 != ( VAR_3 ) ) ) { VAR_2 = VAR_1 ; } else if ( ( VAR_2 ) == VAR_1 ) { VAR_2 = null ; } else if ( ( ( VAR_3 ) == null ) && ( VAR_1 != ( VAR_2 ) ) ) { VAR_3 = VAR_1 ; } else if ( ( VAR_3 ) == VAR_1 ) { VAR_3 = null ; } this . METHOD_2 ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) && ( VAR_1 != ( VAR_3 ) ) ) { VAR_2 = VAR_1 ; } else if ( ( VAR_2 ) == VAR_1 ) { VAR_2 = null ; } else if ( ( ( VAR_3 ) == null ) && ( VAR_1 != ( VAR_2 ) ) ) { VAR_3 = VAR_1 ; } else if ( ( VAR_3 ) == VAR_1 ) { VAR_3 = null ; } this . METHOD_2 ( ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = ( this . VAR_2 ) ? this . VAR_3 . METHOD_2 ( this . VAR_4 ) : this . VAR_4 . METHOD_2 ( this . VAR_3 ) ; return METHOD_3 ( ( ( this . VAR_1 . compareTo ( VAR_5 ) ) > 0 ? this . VAR_1 : VAR_5 ) ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 = ( this . VAR_2 ) ? this . VAR_3 . METHOD_2 ( this . VAR_4 ) : this . VAR_4 . METHOD_2 ( this . VAR_3 ) ; this . VAR_1 = METHOD_3 ( ( ( this . VAR_1 . compareTo ( VAR_5 ) ) > 0 ? this . VAR_1 : VAR_5 ) ) ; return this . VAR_1 ; }\n"}
{"problem": "private java.util.List < java.lang.String > METHOD_1 ( ) { if ( ! ( list . isEmpty ( ) ) ) { return list ; } final java.lang.String VAR_1 = METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { METHOD_3 ( VAR_2 ) ; } final TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_4 ) ; while ( VAR_3 . METHOD_4 ( ) ) { METHOD_3 ( VAR_3 . METHOD_5 ( ) ) ; } return this . list ; }\n", "fixed": "private java.util.List < java.lang.String > METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { METHOD_3 ( VAR_2 ) ; } else { final java.lang.String VAR_1 = METHOD_2 ( ) ; final TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_4 ) ; while ( VAR_3 . METHOD_4 ( ) ) { METHOD_3 ( VAR_3 . METHOD_5 ( ) ) ; } } return list ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 element ) { java.lang.String VAR_1 = element . METHOD_2 ( STRING_1 ) ; java.lang.String fileName = TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , STRING_2 ) ) ; java.lang.String path = METHOD_5 ( ) ; try { TYPE_3 . METHOD_6 ( VAR_1 , path , fileName ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_7 ( ) ; } return new TYPE_1 ( path , fileName ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 element ) { java.lang.String VAR_1 = element . METHOD_2 ( STRING_1 ) ; java.lang.String fileName = TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , STRING_2 ) ) ; if ( ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ) { return null ; } java.lang.String path = METHOD_5 ( ) ; try { TYPE_3 . METHOD_6 ( VAR_1 , path , fileName ) ; } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_7 ( ) ; } return new TYPE_1 ( path , fileName ) ; }\n"}
{"problem": "public void remove ( TYPE_1 key ) { TYPE_2 VAR_1 = VAR_2 . remove ( METHOD_1 ( key ) ) ; METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; if ( VAR_3 ) METHOD_2 ( ) . commit ( ) ; VAR_4 . METHOD_4 ( new TYPE_3 ( TYPE_4 . METHOD_5 ( ) , VAR_5 . METHOD_6 ( ) , VAR_6 ) ) ; }\n", "fixed": "public void remove ( TYPE_1 key ) { synchronized ( VAR_5 ) { TYPE_2 VAR_1 = VAR_2 . remove ( METHOD_1 ( key ) ) ; METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; if ( VAR_3 ) METHOD_2 ( ) . commit ( ) ; } VAR_4 . METHOD_4 ( new TYPE_3 ( TYPE_4 . METHOD_5 ( ) , VAR_5 . METHOD_6 ( ) , VAR_6 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String item ) { java.util.Iterator < TYPE_1 > iterator = VAR_1 . iterator ( ) ; while ( iterator . METHOD_2 ( ) ) { if ( iterator . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( item ) ) { iterator . remove ( ) ; return ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 item ) { java.util.Iterator < TYPE_1 > iterator = VAR_1 . iterator ( ) ; while ( iterator . METHOD_2 ( ) ) { if ( ( iterator . METHOD_3 ( ) ) == item ) { iterator . remove ( ) ; return ; } } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_1 TYPE_2 ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.util.Set < java.lang.Integer > VAR_2 = VAR_3 . METHOD_2 ( ) ; for ( java.lang.Integer node : VAR_2 ) { VAR_1 . METHOD_3 ( node ) ; } for ( java.lang.Integer node : VAR_2 ) { java.util.HashSet < java.lang.Integer > VAR_4 = VAR_3 . get ( node ) ; for ( java.lang.Integer VAR_5 : VAR_4 ) { VAR_1 . METHOD_4 ( VAR_5 , node ) ; } } return VAR_1 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.util.Set < java.lang.Integer > VAR_2 = VAR_3 . METHOD_2 ( ) ; for ( java.lang.Integer node : VAR_2 ) { VAR_1 . METHOD_3 ( node ) ; } for ( java.lang.Integer node : VAR_2 ) { java.util.HashSet < java.lang.Integer > VAR_4 = VAR_3 . get ( node ) ; for ( java.lang.Integer VAR_5 : VAR_4 ) { VAR_1 . METHOD_4 ( VAR_5 , node ) ; } } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 p = new TYPE_2 ( ) ; TYPE_3 . assertTrue ( VAR_3 . METHOD_3 ( ) . get ( null , VAR_2 , p ) ) ; TYPE_3 . assertEquals ( VAR_2 . getValue ( ) , STRING_1 ) ; TYPE_3 . assertEquals ( new java.lang.String ( p . getValue ( ) ) , STRING_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 p = new TYPE_2 ( ) ; assertTrue ( VAR_3 . METHOD_3 ( ) . get ( null , VAR_2 , p ) ) ; assertEquals ( VAR_2 . getValue ( ) , STRING_1 ) ; assertEquals ( new java.lang.String ( p . getValue ( ) ) , STRING_2 ) ; }\n"}
{"problem": "TYPE_1 METHOD_1 ( int VAR_1 ) throws java.lang.Exception { return new TYPE_1 ( new TYPE_2 ( ( STRING_1 + VAR_1 ) ) , null , new TYPE_3 ( new TYPE_4 ( ( STRING_2 + ( java.lang.Math.abs ( VAR_1 ) ) ) ) , new TYPE_4 ( ( STRING_2 + ( java.lang.Math.abs ( ( VAR_1 + 1 ) ) ) ) ) ) ) ; }\n", "fixed": "TYPE_1 METHOD_1 ( int VAR_1 ) throws java.lang.Exception { return new TYPE_1 ( new TYPE_2 ( ( STRING_1 + VAR_1 ) ) , null , null , new TYPE_3 ( new TYPE_4 ( ( STRING_2 + ( java.lang.Math.abs ( VAR_1 ) ) ) ) , new TYPE_4 ( ( STRING_2 + ( java.lang.Math.abs ( ( VAR_1 + 1 ) ) ) ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 t = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; switch ( VAR_2 ) { case VAR_3 : METHOD_3 ( VAR_4 ) ; break ; case VAR_5 : METHOD_3 ( VAR_6 ) ; break ; case VAR_7 : METHOD_3 ( VAR_8 ) ; break ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 t = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; switch ( VAR_2 ) { case VAR_3 : METHOD_3 ( VAR_4 ) ; break ; case VAR_5 : METHOD_3 ( VAR_6 ) ; break ; case VAR_7 : METHOD_3 ( VAR_8 ) ; break ; } java.lang.System.out.println ( VAR_2 ) ; }\n"}
{"problem": "public static boolean METHOD_1 ( TYPE_1 [ ] VAR_1 ) { for ( int i = 0 ; i < ( ( VAR_1 . length ) - 1 ) ; i ++ ) { for ( int j = i + 1 ; j < ( VAR_1 . length ) ; j ++ ) { if ( ( VAR_1 [ i ] . index ) == ( VAR_1 [ j ] . index ) ) { return false ; } } } return true ; }\n", "fixed": "public static boolean METHOD_1 ( TYPE_1 [ ] VAR_1 ) { for ( int i = 0 ; i < ( ( VAR_1 . length ) - 1 ) ; i ++ ) { for ( int j = i + 1 ; j < ( VAR_1 . length ) ; j ++ ) { if ( ( VAR_1 [ i ] . index ) == ( VAR_1 [ j ] . index ) ) { return true ; } } } return false ; }\n"}
{"problem": "public TYPE_1 getValue ( ) { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = VAR_2 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { TYPE_2 VAR_4 = TYPE_3 . get ( i ) ; VAR_3 = VAR_4 . METHOD_1 ( ) . METHOD_2 ( new TYPE_1 ( VAR_5 [ i ] ) ) ; VAR_1 . add ( VAR_3 ) ; } VAR_1 . add ( VAR_6 ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 getValue ( ) { VAR_1 = VAR_2 ; TYPE_1 VAR_3 = VAR_2 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_3 = TYPE_3 . get ( i ) . METHOD_1 ( ) . METHOD_2 ( new TYPE_1 ( VAR_5 [ i ] ) ) ; VAR_1 = VAR_1 . add ( VAR_3 ) ; } VAR_1 . add ( VAR_6 ) ; return VAR_1 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( INT_1 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( STRING_1 , VAR_1 ) ; return STRING_2 ; }\n", "fixed": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( STRING_1 , VAR_1 ) ; return STRING_2 ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String id ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) . METHOD_4 ( ) , ( ( STRING_1 + id ) + STRING_2 ) , null ) . METHOD_5 ( ) . METHOD_6 ( ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { return VAR_2 . get ( 0 ) ; } else { return null ; } }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String id ) { java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) . METHOD_4 ( ) , ( ( STRING_1 + id ) + STRING_2 ) , null ) . METHOD_5 ( ) . METHOD_6 ( ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { return VAR_2 . get ( 0 ) ; } return null ; }\n"}
{"problem": "private int METHOD_1 ( byte [ ] b , int VAR_1 , int VAR_2 ) throws java.io.IOException { if ( ( ( VAR_3 ) - ( VAR_4 ) ) == 0 ) { METHOD_2 ( ) ; } int VAR_5 = VAR_6 . METHOD_3 ( b , VAR_1 , VAR_2 ) ; VAR_4 += VAR_5 ; VAR_7 += VAR_5 ; return VAR_5 ; }\n", "fixed": "private int METHOD_1 ( byte [ ] b , int VAR_1 , int VAR_2 ) throws java.io.IOException { if ( ( VAR_4 ) == ( VAR_3 ) ) { METHOD_2 ( ) ; } int VAR_5 = VAR_6 . METHOD_3 ( b , VAR_1 , VAR_2 ) ; VAR_4 += VAR_5 ; VAR_7 += VAR_5 ; return VAR_5 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { if ( ( size ) == 0 ) throw new TYPE_2 ( ) ; final TYPE_3 < TYPE_1 > . VAR_1 VAR_2 = VAR_3 ; if ( ( size ) == 1 ) { first = null ; VAR_3 = null ; } else { VAR_3 = VAR_4 ; VAR_5 = null ; if ( ( size ) == INT_1 ) VAR_6 = null ; } ( size ) -- ; return VAR_2 . item ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( ( size ) == 0 ) throw new TYPE_2 ( ) ; final TYPE_3 < TYPE_1 > . VAR_1 VAR_2 = VAR_3 ; if ( ( size ) == 1 ) { first = null ; VAR_3 = null ; } else { VAR_3 = VAR_4 ; VAR_5 = null ; } ( size ) -- ; return VAR_2 . item ; }\n"}
{"problem": "private void METHOD_1 ( final boolean VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 . get ( VAR_3 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_6 , VAR_4 , VAR_5 . get ( VAR_6 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_7 , VAR_4 , VAR_5 . get ( VAR_7 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_8 , VAR_4 , VAR_5 . get ( VAR_8 ) ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 . get ( VAR_3 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_6 , VAR_4 , VAR_5 . get ( VAR_6 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_7 , VAR_4 , VAR_5 . get ( VAR_7 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_8 , VAR_4 , VAR_5 . get ( VAR_8 ) ) ) ; }\n"}
{"problem": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 , int index , boolean VAR_2 ) { METHOD_2 ( index , VAR_2 ) ; TYPE_2 VAR_3 = VAR_4 . get ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 . set ( index ) ; VAR_4 . put ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int index , boolean VAR_2 ) { synchronized ( VAR_1 ) { METHOD_2 ( index , VAR_2 ) ; TYPE_2 VAR_3 = VAR_4 . get ( VAR_1 . METHOD_3 ( ) ) ; VAR_3 . set ( index ) ; VAR_4 . put ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ; } }\n"}
{"problem": "public java.lang.Object get ( long VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 , TYPE_3 , TYPE_4 { if ( ( result ) != null ) { return result ; } long VAR_3 = VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; try { while ( ( result ) != null ) { if ( VAR_1 <= 0 ) { throw new TYPE_4 ( ) ; } VAR_3 = VAR_5 . METHOD_3 ( VAR_3 ) ; } return result ; } finally { VAR_4 . METHOD_4 ( ) ; } }\n", "fixed": "public java.lang.Object get ( long VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 , TYPE_3 , TYPE_4 { if ( ( result ) != null ) { return result ; } long VAR_3 = VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_2 ( ) ; try { while ( ( result ) == null ) { if ( VAR_1 <= 0 ) { throw new TYPE_4 ( ) ; } VAR_3 = VAR_5 . METHOD_3 ( VAR_3 ) ; } return result ; } finally { VAR_4 . METHOD_4 ( ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( ) ; if ( VAR_2 == null ) { java.lang.String path = path ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_5 = true ; TYPE_3 . METHOD_2 ( path , VAR_4 ) ; VAR_6 = METHOD_3 ( VAR_4 , VAR_1 , VAR_1 ) ; VAR_5 = false ; VAR_3 = new TYPE_4 ( TYPE_3 . METHOD_2 ( path , VAR_4 ) ) ; } return VAR_2 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( ) ; if ( VAR_2 == null ) { java.lang.String path = path ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_5 = true ; TYPE_3 . METHOD_2 ( path , VAR_4 ) ; VAR_6 = METHOD_3 ( VAR_4 , VAR_1 , VAR_1 ) ; VAR_5 = false ; VAR_2 = TYPE_3 . METHOD_2 ( path , VAR_4 ) ; VAR_3 = new TYPE_4 ( VAR_2 ) ; } return VAR_2 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int n ) { TYPE_1 VAR_1 = VAR_2 ; if ( ( VAR_1 . equals ( null ) ) == false ) { for ( int i = 0 ; i < n ; i ++ ) { if ( ( VAR_3 . equals ( null ) ) == false ) VAR_1 = VAR_3 ; else return null ; } return VAR_1 ; } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int n ) { TYPE_1 VAR_1 = VAR_2 ; if ( VAR_1 != null ) { for ( int i = 0 ; i < n ; i ++ ) { if ( ( VAR_3 ) != null ) VAR_1 = VAR_3 ; else return null ; } return VAR_1 ; } return null ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; try { while ( true ) { java.lang.Thread . METHOD_2 ( INT_1 ) ; if ( VAR_1 ) METHOD_3 ( new TYPE_1 ( INT_2 ) ) ; while ( VAR_2 ) { METHOD_3 ( new TYPE_1 ( INT_2 ) ) ; execute ( ) ; METHOD_4 ( ) ; if ( ( ! ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ) java.lang.System.out.println ( STRING_2 ) ; } } } catch ( TYPE_2 VAR_4 ) { java.lang.System.out.println ( STRING_3 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; try { while ( true ) { java.lang.Thread . METHOD_2 ( INT_1 ) ; if ( VAR_1 ) METHOD_3 ( ) ; while ( VAR_2 ) { METHOD_3 ( ) ; execute ( ) ; METHOD_4 ( ) ; if ( ( ! ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ) java.lang.System.out.println ( STRING_2 ) ; } } } catch ( TYPE_2 VAR_4 ) { java.lang.System.out.println ( STRING_3 ) ; } }\n"}
{"problem": "public java.lang.String toString ( ) { java.lang.String url = ( VAR_1 ) + ( METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) ) ) ; url = ( ( VAR_3 . size ( ) ) > 0 ) ? ( url + STRING_1 ) + ( METHOD_5 ( ) ) : url ; return url ; }\n", "fixed": "public java.lang.String toString ( ) { java.lang.String url = VAR_1 ; if ( ( METHOD_1 ( ) . size ( ) ) > 0 ) { url += ( VAR_2 ) + ( METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) ) ) ; } url = ( ( VAR_3 . size ( ) ) > 0 ) ? ( url + STRING_1 ) + ( METHOD_5 ( ) ) : url ; return url ; }\n"}
{"problem": "public void add ( int index , TYPE_1 t ) { if ( ( list . isEmpty ( ) ) || ( ( list . get ( index ) . METHOD_1 ( ) ) < ( t . METHOD_1 ( ) ) ) ) { list . add ( index , t ) ; } }\n", "fixed": "public void add ( int index , TYPE_1 t ) { if ( ( list . isEmpty ( ) ) || ( ( list . get ( index ) . METHOD_1 ( ) ) < ( t . METHOD_1 ( ) ) ) ) { if ( ( ( index - 1 ) < 0 ) || ( ( list . get ( ( index - 1 ) ) . METHOD_1 ( ) ) > ( t . METHOD_1 ( ) ) ) ) { list . add ( index , t ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int item ) { switch ( item ) { case 0 : METHOD_2 ( STRING_1 ) ; break ; case 1 : METHOD_2 ( STRING_2 ) ; break ; case INT_1 : METHOD_2 ( STRING_3 ) ; break ; } VAR_2 . METHOD_3 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int item ) { switch ( item ) { case 0 : METHOD_2 ( STRING_1 ) ; break ; case 1 : METHOD_2 ( STRING_2 ) ; break ; default : METHOD_2 ( STRING_3 ) ; break ; } VAR_2 . METHOD_3 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.io.File VAR_3 ) { METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; try { VAR_1 . build ( VAR_3 ) ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_4 ( ) ; this . METHOD_5 ( ) . error ( ( STRING_1 + ( VAR_2 . getName ( ) ) ) , VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.io.File VAR_3 ) { if ( VAR_1 == null ) { VAR_1 = new TYPE_1 ( ) ; } METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 ) ; try { VAR_1 . build ( VAR_3 ) ; } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_4 ( ) ; this . METHOD_5 ( ) . error ( ( STRING_1 + ( VAR_2 . getName ( ) ) ) , VAR_4 ) ; } }\n"}
{"problem": "public static void handle ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { final TYPE_3 VAR_3 = VAR_2 . METHOD_1 ( ) ; final TYPE_4 VAR_4 = TYPE_5 . METHOD_2 ( VAR_1 , VAR_3 ) ; if ( VAR_4 == null ) { return ; } TYPE_5 . METHOD_3 ( VAR_1 , VAR_4 ) ; TYPE_5 . METHOD_4 ( VAR_1 , VAR_3 ) ; }\n", "fixed": "public static void handle ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { final TYPE_3 VAR_3 = VAR_2 . METHOD_1 ( ) ; if ( TYPE_5 . METHOD_2 ( VAR_1 , VAR_3 ) ) { TYPE_5 . METHOD_3 ( VAR_1 , VAR_3 ) ; TYPE_5 . METHOD_4 ( VAR_1 , VAR_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_3 , INT_1 ) ; VAR_1 . METHOD_2 ( VAR_4 , INT_2 ) ; java.util.List < TYPE_1 > VAR_5 = null ; try { VAR_5 = VAR_6 . METHOD_3 ( VAR_1 ) ; } catch ( TYPE_2 VAR_7 ) { VAR_7 . METHOD_4 ( ) ; TYPE_3 . fail ( ) ; } TYPE_3 . assertEquals ( 1 , VAR_5 . size ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_3 , INT_1 ) ; java.util.List < TYPE_1 > VAR_5 = null ; try { VAR_5 = VAR_6 . METHOD_3 ( VAR_1 ) ; } catch ( TYPE_2 VAR_7 ) { VAR_7 . METHOD_4 ( ) ; TYPE_3 . fail ( ) ; } TYPE_3 . assertEquals ( 1 , VAR_5 . size ( ) ) ; }\n"}
{"problem": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { int VAR_2 = FLOAT_1 ; int VAR_3 = FLOAT_2 ; for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( ( VAR_4 . METHOD_2 ( ) ) < VAR_2 ) || ( ( VAR_4 . METHOD_3 ( ) ) < VAR_3 ) ) { VAR_1 . remove ( VAR_4 ) ; } } }\n", "fixed": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { double VAR_2 = FLOAT_1 ; double VAR_3 = FLOAT_2 ; for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( ( VAR_4 . METHOD_2 ( ) ) < VAR_2 ) || ( ( VAR_4 . METHOD_3 ( ) ) < VAR_3 ) ) { VAR_1 . remove ( VAR_4 ) ; } } return VAR_1 ; }\n"}
{"problem": "public boolean get ( TYPE_1 source , java.io.File VAR_1 , java.lang.String title ) throws java.io.IOException { VAR_2 = new TYPE_2 ( VAR_3 , 0 , INT_1 ) ; TYPE_3 VAR_4 = new TYPE_3 ( title ) ; VAR_4 . METHOD_1 ( true ) ; boolean result = METHOD_2 ( source , VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; return result ; }\n", "fixed": "public boolean get ( TYPE_1 source , java.io.File VAR_1 , java.lang.String title ) throws java.io.IOException { VAR_2 = new TYPE_2 ( VAR_3 , 0 , INT_1 ) ; VAR_4 = new TYPE_3 ( title ) ; VAR_4 . METHOD_1 ( true ) ; boolean result = METHOD_2 ( source , VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; return result ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( ) { TYPE_1 nodes = METHOD_2 ( STRING_1 , STRING_2 ) ; java.util.ArrayList < java.lang.String > values = METHOD_3 ( nodes , STRING_2 ) ; if ( ( values . size ( ) ) > 0 ) { return values . get ( 0 ) ; } return null ; }\n", "fixed": "private int METHOD_1 ( ) { TYPE_1 nodes = METHOD_2 ( STRING_1 , STRING_2 ) ; java.util.ArrayList < java.lang.String > values = METHOD_3 ( nodes , STRING_2 ) ; if ( ( values . size ( ) ) > 0 ) { return java.lang.Integer.parseInt ( values . get ( 0 ) ) ; } return 0 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 TYPE_2 ) { output . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) ) + STRING_1 ) ) ; if ( TYPE_2 instanceof TYPE_3 ) return METHOD_1 ( ( ( TYPE_3 ) ( TYPE_2 ) ) ) ; else if ( TYPE_2 instanceof TYPE_4 ) return METHOD_1 ( ( ( TYPE_4 ) ( TYPE_2 ) ) ) ; throw new TYPE_5 ( STRING_2 ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String name , TYPE_1 TYPE_2 ) { output . METHOD_2 ( ( ( TYPE_2 . METHOD_3 ( ) ) + STRING_1 ) ) ; if ( TYPE_2 instanceof TYPE_3 ) return METHOD_1 ( name , ( ( TYPE_3 ) ( TYPE_2 ) ) ) ; else if ( TYPE_2 instanceof TYPE_4 ) return METHOD_1 ( ( ( TYPE_4 ) ( TYPE_2 ) ) ) ; throw new TYPE_5 ( STRING_2 ) ; }\n"}
{"problem": "public void put ( java.lang.String key , int value ) { VAR_1 . put ( key , value ) ; if ( key . contains ( STRING_1 ) ) { int VAR_2 = get ( STRING_2 ) ; put ( STRING_2 , ( VAR_2 + value ) ) ; } if ( ( key . contains ( STRING_3 ) ) && ( ! ( key . equals ( STRING_4 ) ) ) ) { int VAR_3 = get ( STRING_4 ) ; put ( STRING_4 , ( VAR_3 + value ) ) ; } METHOD_1 ( ) ; }\n", "fixed": "public void put ( java.lang.String key , float value ) { VAR_1 . put ( key , value ) ; if ( key . contains ( STRING_1 ) ) { float VAR_2 = get ( STRING_2 ) ; put ( STRING_2 , ( VAR_2 + value ) ) ; } if ( ( key . contains ( STRING_3 ) ) && ( ! ( key . equals ( STRING_4 ) ) ) ) { float VAR_3 = get ( STRING_4 ) ; put ( STRING_4 , ( VAR_3 + value ) ) ; } METHOD_1 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = STRING_1 ; } else { VAR_2 = VAR_1 . format ( VAR_3 ) . toString ( ) ; VAR_4 = VAR_1 ; if ( ( VAR_4 ) != null ) { value = ( ( METHOD_2 ( ) ) + STRING_2 ) + ( METHOD_3 ( ) ) ; } else { value = METHOD_2 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = STRING_1 ; VAR_4 = VAR_1 ; value = METHOD_2 ( ) ; } else { VAR_2 = VAR_1 . format ( VAR_3 ) . toString ( ) ; VAR_4 = VAR_1 ; if ( ( VAR_4 ) != null ) { value = ( ( METHOD_2 ( ) ) + STRING_2 ) + ( METHOD_3 ( ) ) ; } else { value = METHOD_2 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 , final int height ) { VAR_3 = VAR_2 ; VAR_4 = height ; boolean VAR_5 = ( VAR_6 ) == ( VAR_7 ) ; boolean VAR_8 = ( ( VAR_9 ) == VAR_2 ) && ( ( VAR_10 ) == height ) ; if ( ( ( ( VAR_11 ) != null ) && VAR_5 ) && VAR_8 ) { if ( ( VAR_12 ) != 0 ) { METHOD_2 ( VAR_12 ) ; } start ( ) ; } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 , final int height ) { VAR_3 = VAR_2 ; VAR_4 = height ; boolean VAR_5 = ( VAR_6 ) == ( VAR_7 ) ; boolean VAR_8 = ( VAR_2 > 0 ) && ( height > 0 ) ; if ( ( ( ( VAR_11 ) != null ) && VAR_5 ) && VAR_8 ) { if ( ( VAR_12 ) != 0 ) { METHOD_2 ( VAR_12 ) ; } start ( ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { if ( VAR_1 . equals ( new java.util.Date ( 0 ) ) ) { return STRING_1 ; } else { TYPE_1 VAR_2 = new TYPE_2 ( STRING_2 ) ; java.util.Date VAR_3 = VAR_1 . getTime ( ) ; java.lang.String VAR_4 = VAR_2 . format ( VAR_3 ) ; return VAR_4 ; } }\n", "fixed": "public java.lang.String METHOD_1 ( ) { if ( VAR_1 . getTime ( ) . equals ( new java.util.Date ( 0 ) ) ) { return STRING_1 ; } else { TYPE_1 VAR_2 = new TYPE_2 ( STRING_2 ) ; java.util.Date VAR_3 = VAR_1 . getTime ( ) ; java.lang.String VAR_4 = VAR_2 . format ( VAR_3 ) ; return VAR_4 ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 , VAR_3 class ) ; TYPE_2 VAR_4 = VAR_5 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , VAR_6 ) ; VAR_2 . METHOD_2 ( STRING_3 , STRING_4 , VAR_7 class ) ; TYPE_4 . assertThat ( TYPE_5 . METHOD_5 ( VAR_4 ) , TYPE_6 . METHOD_6 ( STRING_5 , STRING_6 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 , VAR_3 class ) ; TYPE_2 VAR_4 = VAR_5 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , VAR_6 ) ; TYPE_4 . assertThat ( TYPE_5 . METHOD_5 ( VAR_4 ) , TYPE_6 . METHOD_6 ( STRING_5 , STRING_6 ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 [ ] results ) { if ( ( results . length ) == 0 ) VAR_1 = ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ; TYPE_1 VAR_4 = super . METHOD_1 ( results ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; return VAR_4 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_1 [ ] results ) { if ( ( results . length ) == 0 ) VAR_1 = ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ; TYPE_1 VAR_4 = super . METHOD_1 ( results ) ; if ( VAR_4 != null ) VAR_5 = VAR_4 . METHOD_2 ( ) ; else VAR_5 = 0.0F ; return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( ( VAR_2 ) == null ) ) ) ; if ( ( ( VAR_2 ) != null ) && ( ! ( VAR_2 . METHOD_3 ( ) ) ) ) { VAR_1 . METHOD_4 ( VAR_2 , null , METHOD_5 ( ) , VAR_3 ) ; } else { VAR_1 . METHOD_6 ( METHOD_5 ( ) , VAR_3 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( ( VAR_2 ) != null ) && ( ! ( VAR_2 . METHOD_3 ( ) ) ) ) { VAR_1 . METHOD_4 ( VAR_2 , null , METHOD_5 ( ) , VAR_3 ) ; } else { VAR_1 . METHOD_6 ( METHOD_5 ( ) , VAR_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( CHAR_1 , INT_1 , INT_2 , VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( CHAR_2 , INT_1 , INT_1 , VAR_2 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; try { VAR_3 . METHOD_3 ( VAR_4 ) ; } catch ( TYPE_2 VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } assertTrue ( VAR_1 . METHOD_5 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( CHAR_1 , INT_1 , INT_2 , VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( CHAR_2 , INT_1 , INT_1 , VAR_2 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; try { VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; } catch ( TYPE_2 VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } assertTrue ( VAR_1 . METHOD_5 ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( java.io.File VAR_1 , java.lang.String VAR_2 ) { for ( java.io.File f : VAR_1 . METHOD_2 ( VAR_3 ) ) { TYPE_1 . METHOD_3 ( f , VAR_2 , VAR_4 , VAR_5 ) ; } for ( java.io.File VAR_6 : VAR_1 . METHOD_2 ( VAR_7 ) ) { METHOD_1 ( VAR_6 , ( ( VAR_2 + ( VAR_6 . getName ( ) ) ) + STRING_1 ) ) ; } }\n", "fixed": "private void METHOD_1 ( java.io.File VAR_1 , java.lang.String VAR_2 ) { for ( java.io.File f : VAR_1 . METHOD_2 ( VAR_3 ) ) { METHOD_3 ( f , VAR_2 , VAR_4 , VAR_5 ) ; } for ( java.io.File VAR_6 : VAR_1 . METHOD_2 ( VAR_7 ) ) { METHOD_1 ( VAR_6 , ( ( VAR_2 + ( VAR_6 . getName ( ) ) ) + STRING_1 ) ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object ... args ) { return TYPE_2 . select ( VAR_2 , VAR_3 , VAR_4 . METHOD_2 ( STRING_1 , STRING_2 ) , VAR_5 . name , VAR_6 , VAR_7 ) . METHOD_3 ( VAR_1 , STRING_3 , args ) . METHOD_4 ( VAR_1 ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object ... args ) { return TYPE_2 . select ( VAR_2 , VAR_3 , VAR_4 . METHOD_2 ( STRING_1 , STRING_2 ) , VAR_5 . name , VAR_6 , VAR_7 ) . METHOD_3 ( VAR_1 , STRING_3 , args ) . METHOD_4 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( METHOD_3 ( 1L , \"name\" ) , 1L , \"name\" ) ; METHOD_4 ( VAR_2 . METHOD_5 ( 1L ) ) . METHOD_6 ( VAR_1 ) ; java.util.List < TYPE_2 > VAR_3 = VAR_4 . METHOD_7 ( 1L ) ; TYPE_3 . assertThat ( VAR_3 . size ( ) , TYPE_4 . METHOD_8 ( 1 ) ) ; TYPE_3 . assertThat ( VAR_3 . get ( 0 ) . METHOD_9 ( ) , TYPE_4 . METHOD_8 ( 1L ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( METHOD_3 ( 1L , \"name\" ) , 1L , \"name\" , true ) ; METHOD_4 ( VAR_2 . METHOD_5 ( 1L ) ) . METHOD_6 ( VAR_1 ) ; java.util.List < TYPE_2 > VAR_3 = VAR_4 . METHOD_7 ( 1L ) ; TYPE_3 . assertThat ( VAR_3 . size ( ) , TYPE_4 . METHOD_8 ( 1 ) ) ; TYPE_3 . assertThat ( VAR_3 . get ( 0 ) . METHOD_9 ( ) , TYPE_4 . METHOD_8 ( 1L ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { for ( int i = 0 ; i < ( ( VAR_1 . length ) - 1 ) ; i ++ ) { this . VAR_1 [ i ] . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( TYPE_2 VAR_2 ) { } } ) ; } }\n", "fixed": "private void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { this . VAR_1 [ i ] . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( TYPE_2 VAR_2 ) { } } ) ; } }\n"}
{"problem": "private void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 title = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) ; if ( title != null ) { title . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_4 ( title , VAR_5 ) ; } }\n", "fixed": "private void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_1 != null ) { TYPE_1 title = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) ; if ( title != null ) { title . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_4 ( title , VAR_5 ) ; } } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { double VAR_1 ; double min = this . min ; double VAR_2 = this . VAR_2 ; VAR_1 = ( VAR_3 ) / FLOAT_1 ; double VAR_4 = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( min ) ) ) ) ) ) ; if ( VAR_2 > VAR_4 ) { min += VAR_1 ; VAR_2 -= VAR_1 ; } return new TYPE_1 ( min , VAR_2 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { double min = this . min ; double VAR_2 = this . VAR_2 ; double VAR_4 = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_2 ( min ) ) ) ) ) ) ; if ( VAR_2 > VAR_4 ) { double VAR_1 = ( VAR_3 ) / FLOAT_1 ; min += VAR_1 ; VAR_2 -= VAR_1 ; } return new TYPE_1 ( min , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . i ( VAR_2 , STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_3 ( METHOD_2 ( ) ) . METHOD_4 ( intent ) . METHOD_5 ( 0 , VAR_5 ) ; TYPE_4 VAR_6 = new TYPE_4 ( METHOD_2 ( ) ) ; VAR_6 . METHOD_6 ( VAR_4 ) ; METHOD_7 ( intent ) ; METHOD_8 ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 . i ( VAR_2 , STRING_1 ) ; android.content.Intent intent = new android.content.Intent ( METHOD_2 ( ) , VAR_3 class ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_3 ( METHOD_2 ( ) ) . METHOD_4 ( intent ) . METHOD_5 ( 0 , VAR_5 ) ; TYPE_4 VAR_6 = new TYPE_4 ( METHOD_2 ( ) ) ; VAR_6 . METHOD_6 ( VAR_4 ) ; METHOD_7 ( intent ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( this . VAR_1 . y ) == 0 ) { this . VAR_1 = new TYPE_1 ( ( ( this . VAR_1 . x ) + ( VAR_2 ) ) , ( ( this . VAR_1 . y ) - ( VAR_3 ) ) ) ; if ( VAR_4 ) { this . VAR_1 . x = 0 ; } } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( this . VAR_1 . y ) == 0 ) { this . VAR_1 = new TYPE_1 ( ( ( this . VAR_1 . x ) + ( VAR_2 ) ) , ( ( this . VAR_1 . y ) - ( VAR_3 ) ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , java.util.List VAR_2 ) { if ( ( VAR_3 ) == null ) VAR_4 = true ; else { for ( java.lang.Object item : VAR_2 ) { if ( item instanceof TYPE_1 ) METHOD_2 ( ( ( TYPE_1 ) ( item ) ) ) ; else { TYPE_1 VAR_5 = METHOD_3 ( item ) ; if ( VAR_5 != null ) METHOD_2 ( VAR_5 ) ; } } METHOD_4 ( ) ; } if ( ( VAR_6 ) != null ) VAR_6 . METHOD_5 ( VAR_7 ) ; VAR_8 = true ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 , java.util.List VAR_2 ) { if ( ( VAR_3 ) == null ) VAR_4 = true ; else { for ( java.lang.Object item : VAR_2 ) { if ( item instanceof TYPE_1 ) METHOD_2 ( ( ( TYPE_1 ) ( item ) ) ) ; else { TYPE_1 VAR_5 = METHOD_3 ( item ) ; if ( VAR_5 != null ) METHOD_2 ( VAR_5 ) ; } } } if ( ( VAR_6 ) != null ) VAR_6 . METHOD_5 ( VAR_7 ) ; VAR_8 = true ; }\n"}
{"problem": "protected java.lang.String METHOD_1 ( java.lang.String ... params ) { try { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_2 ) ) ; TYPE_4 . METHOD_3 ( STRING_1 , VAR_1 . get ( 0 ) . toString ( ) ) ; TYPE_5 . METHOD_4 ( VAR_1 . get ( 0 ) ) ; VAR_3 . METHOD_5 ( new android.content.Intent ( getActivity ( ) , VAR_4 class ) ) ; } catch ( TYPE_6 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } return STRING_2 ; }\n", "fixed": "protected java.lang.String METHOD_1 ( java.lang.String ... params ) { try { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_2 ) ) ; TYPE_4 . METHOD_3 ( STRING_1 , VAR_1 . get ( 0 ) . toString ( ) ) ; TYPE_5 . METHOD_4 ( VAR_1 . get ( 0 ) ) ; VAR_3 . METHOD_5 ( new android.content.Intent ( VAR_3 . getActivity ( ) , VAR_4 class ) ) ; } catch ( TYPE_6 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } return STRING_2 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { TYPE_1 . get ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( STRING_1 , TYPE_1 . get ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; METHOD_8 ( ) . METHOD_9 ( ) . add ( VAR_4 , VAR_2 ) . commit ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { TYPE_1 . get ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( STRING_1 , TYPE_1 . get ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; METHOD_8 ( ) . METHOD_9 ( ) . replace ( VAR_4 , VAR_2 ) . commit ( ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 param ) throws java.lang.Throwable { try { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { try { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , STRING_2 ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_4 . METHOD_3 ( STRING_3 ) ; } } android.content.Context context = ( ( android.content.Context ) ( param . args [ 0 ] ) ) ; METHOD_4 ( context ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 param ) throws java.lang.Throwable { try { VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , STRING_2 ) ; } catch ( TYPE_3 VAR_3 ) { } android.content.Context context = ( ( android.content.Context ) ( param . args [ 0 ] ) ) ; METHOD_4 ( context ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event , float x , float y ) { java.lang.System.out.print ( ( STRING_1 + ( f . METHOD_2 ( ) ) ) ) ; java.lang.System.out.print ( STRING_2 ) ; if ( ( VAR_1 ) && ( VAR_2 ) ) { METHOD_3 ( VAR_3 , f , VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event , float x , float y ) { java.lang.System.out.print ( ( STRING_1 + ( f . METHOD_2 ( ) ) ) ) ; java.lang.System.out.print ( STRING_2 ) ; if ( ( VAR_1 ) && ( VAR_2 ) ) { METHOD_3 ( f , VAR_4 ) ; } }\n"}
{"problem": "private void METHOD_1 ( java.lang.String filePath ) throws TYPE_1 , java.io.IOException { assert filePath != null ; VAR_1 . METHOD_2 ( VAR_2 , STRING_1 , TYPE_2 . METHOD_3 ( filePath ) ) ; java.io.FileInputStream VAR_3 = null ; try { VAR_3 = new java.io.FileInputStream ( filePath ) ; } catch ( TYPE_1 VAR_4 ) { throw VAR_4 ; } finally { if ( VAR_3 != null ) { VAR_3 . METHOD_4 ( ) ; } } METHOD_5 ( VAR_3 ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.String filePath ) throws TYPE_1 , java.io.IOException { assert filePath != null ; VAR_1 . METHOD_2 ( VAR_2 , STRING_1 , TYPE_2 . METHOD_3 ( filePath ) ) ; java.io.FileInputStream VAR_3 = null ; try { VAR_3 = new java.io.FileInputStream ( filePath ) ; METHOD_5 ( VAR_3 ) ; } catch ( TYPE_1 VAR_4 ) { throw VAR_4 ; } finally { if ( VAR_3 != null ) { VAR_3 . METHOD_4 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( final int offset , final int count , final java.lang.String arg ) throws TYPE_1 { if ( offset < 0 ) { throw new TYPE_1 ( VAR_1 , STRING_1 ) ; } throw new TYPE_2 ( ( STRING_2 + ( this . METHOD_2 ( ) ) ) ) ; }\n", "fixed": "public void METHOD_1 ( final int offset , final int count , final java.lang.String arg ) throws TYPE_1 { if ( ( offset < 0 ) || ( count < 0 ) ) { throw new TYPE_1 ( VAR_1 , STRING_1 ) ; } throw new TYPE_2 ( ( STRING_2 + ( this . METHOD_2 ( ) ) ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_2 ( STRING_3 ) ; TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) . replaceAll ( STRING_4 , STRING_5 ) ) ; VAR_1 = true ; }\n", "fixed": "private void METHOD_1 ( ) { if ( ( TYPE_1 ) != null ) TYPE_1 . METHOD_2 ( STRING_1 ) ; if ( ( TYPE_2 ) != null ) TYPE_2 . METHOD_2 ( STRING_2 ) ; if ( ( TYPE_3 ) != null ) { TYPE_3 . METHOD_2 ( STRING_3 ) ; TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) . replaceAll ( STRING_4 , STRING_5 ) ) ; } VAR_1 = true ; }\n"}
{"problem": "public void METHOD_1 ( ) { for ( int i = VAR_1 ; i <= ( VAR_2 ) ; i ++ ) { for ( int j = 0 ; j < ( VAR_3 . length ) ; j ++ ) { for ( int k = 0 ; k < ( VAR_3 . length ) ; k ++ ) { VAR_4 [ i ] [ j ] += ( VAR_3 [ i ] [ k ] ) * ( VAR_5 [ k ] [ j ] ) ; } } } }\n", "fixed": "public void METHOD_1 ( ) { for ( int i = VAR_1 ; i <= ( VAR_2 ) ; i ++ ) { for ( int j = 0 ; j < ( VAR_5 . length ) ; j ++ ) { for ( int k = 0 ; k < ( VAR_3 . length ) ; k ++ ) { VAR_4 [ i ] [ j ] += ( VAR_3 [ i ] [ k ] ) * ( VAR_5 [ k ] [ j ] ) ; } } } }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.Long VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { return new TYPE_1 < TYPE_2 > ( VAR_2 , VAR_4 ) ; } return new TYPE_1 < TYPE_2 > ( VAR_5 ) ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.Long VAR_1 , java.lang.String name ) { TYPE_2 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; if ( VAR_2 != null ) { return new TYPE_1 < TYPE_2 > ( VAR_2 , VAR_4 ) ; } return new TYPE_1 < TYPE_2 > ( VAR_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { synchronized ( VAR_1 ) { try { VAR_1 . METHOD_2 ( new java.lang.String ( ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 ) ) ) . getText ( ) . toString ( ) ) . METHOD_4 ( ) , INT_1 ) ; ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 ) ) ) . getText ( ) . METHOD_5 ( ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_2 . METHOD_6 ( STRING_1 , STRING_2 ) ; VAR_3 . METHOD_7 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { { try { VAR_1 . METHOD_2 ( new java.lang.String ( ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 ) ) ) . getText ( ) . toString ( ) ) . METHOD_4 ( ) , INT_1 ) ; ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 ) ) ) . getText ( ) . METHOD_5 ( ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_2 . METHOD_6 ( STRING_1 , STRING_2 ) ; VAR_3 . METHOD_7 ( ) ; } } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , java.lang.String VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_1 ) { if ( VAR_3 . getName ( ) . trim ( ) . toLowerCase ( ) . equals ( VAR_2 ) ) return VAR_3 ; } return null ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , java.lang.String VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_1 ) { if ( VAR_3 . getName ( ) . trim ( ) . toLowerCase ( ) . equals ( VAR_2 . toLowerCase ( ) ) ) return VAR_3 ; } return null ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.Throwable VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( java.lang.Throwable t ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( t . METHOD_3 ( ) ) ) ) ; t . METHOD_4 ( ) ; } }\n", "fixed": "public static void METHOD_1 ( java.lang.Throwable VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( java.lang.Throwable t ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + ( VAR_1 . METHOD_3 ( ) ) ) ) ; VAR_1 . METHOD_4 ( ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.String VAR_3 = VAR_2 . METHOD_2 ( STRING_1 ) ; if ( TYPE_3 . METHOD_3 ( VAR_3 ) ) { TYPE_4 VAR_4 = TYPE_5 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( STRING_2 , VAR_4 . METHOD_6 ( ) ) ; VAR_1 . METHOD_5 ( STRING_3 , VAR_4 . METHOD_7 ( ) . METHOD_8 ( ) ) ; VAR_1 . METHOD_5 ( STRING_4 , VAR_3 ) ; } return STRING_5 ; }\n", "fixed": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.String VAR_3 = VAR_2 . METHOD_2 ( STRING_1 ) ; if ( TYPE_3 . METHOD_3 ( VAR_3 ) ) { TYPE_4 VAR_4 = TYPE_5 . METHOD_4 ( VAR_3 ) ; if ( VAR_4 != null ) { VAR_1 . METHOD_5 ( STRING_2 , VAR_4 . METHOD_6 ( ) ) ; VAR_1 . METHOD_5 ( STRING_3 , VAR_4 . METHOD_7 ( ) . METHOD_8 ( ) ) ; VAR_1 . METHOD_5 ( STRING_4 , VAR_3 ) ; } } return STRING_5 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= INT_1 ) && ( VAR_1 < INT_2 ) ) return VAR_2 ; else if ( ( ( VAR_1 > 0 ) && ( VAR_1 < INT_1 ) ) || ( ( VAR_1 >= INT_2 ) && ( VAR_1 <= INT_3 ) ) ) return VAR_3 ; else return VAR_4 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= INT_1 ) && ( VAR_1 < INT_2 ) ) return VAR_2 ; else if ( ( ( VAR_1 >= 0 ) && ( VAR_1 < INT_1 ) ) || ( ( VAR_1 >= INT_2 ) && ( VAR_1 <= INT_3 ) ) ) return VAR_3 ; else return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; int [ ] VAR_2 = new int [ ] { INT_1 , INT_2 , - INT_3 , INT_4 , INT_5 , INT_6 } ; assertEquals ( STRING_1 , ( - INT_3 ) , VAR_1 . METHOD_2 ( VAR_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.System.out.println ( ( ( - INT_3 ) % INT_1 ) ) ; int [ ] VAR_2 = new int [ ] { INT_1 , INT_2 , - INT_3 , INT_4 , INT_5 , INT_6 } ; assertEquals ( STRING_1 , ( - INT_3 ) , VAR_1 . METHOD_2 ( VAR_2 ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_3 = new TYPE_5 ( new TYPE_6 ( VAR_2 ) ) ; VAR_4 = new TYPE_7 ( VAR_3 , VAR_5 ) ; TYPE_8 VAR_6 = VAR_4 . METHOD_2 ( ) ; TYPE_9 VAR_7 = ( ( TYPE_9 ) ( VAR_8 ) ) ; TYPE_1 VAR_9 = ( ( TYPE_1 ) ( VAR_10 ) ) ; java.lang.System.out.println ( ( STRING_1 + ( VAR_9 . toString ( ) ) ) ) ; return VAR_9 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_3 = new TYPE_5 ( new TYPE_6 ( VAR_2 ) ) ; VAR_4 = new TYPE_7 ( VAR_3 , VAR_5 ) ; TYPE_8 VAR_6 = VAR_4 . METHOD_2 ( ) ; TYPE_9 VAR_7 = ( ( TYPE_9 ) ( VAR_8 ) ) ; TYPE_1 VAR_9 = ( ( TYPE_1 ) ( VAR_10 ) ) ; return VAR_9 ; }\n"}
{"problem": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 ) ; METHOD_3 ( intent ) ; METHOD_4 ( intent , VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_5 ( STRING_2 , STRING_3 ) ; TYPE_2 . METHOD_6 ( this ) . METHOD_7 ( VAR_4 , new TYPE_3 ( VAR_5 ) ) ; }\n", "fixed": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 ) ; METHOD_3 ( intent ) ; METHOD_4 ( intent , VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_6 ( this ) . METHOD_7 ( VAR_4 , new TYPE_3 ( VAR_5 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . delete ( ) ; VAR_2 . delete ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( VAR_1 ) ; android.content.Intent VAR_3 = new android.content.Intent ( ) ; VAR_3 . METHOD_5 ( STRING_1 , 0 ) ; METHOD_6 ( VAR_4 , VAR_3 ) ; this . METHOD_7 ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( VAR_1 ) ; VAR_1 . delete ( ) ; VAR_2 . delete ( ) ; android.content.Intent VAR_3 = new android.content.Intent ( ) ; VAR_3 . METHOD_5 ( STRING_1 , 0 ) ; METHOD_6 ( VAR_4 , VAR_3 ) ; this . METHOD_7 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { TYPE_2 VAR_5 = VAR_1 . METHOD_2 ( VAR_4 , VAR_6 ) ; if ( VAR_5 == null ) { TYPE_3 VAR_7 = new TYPE_3 ( ) ; VAR_5 = METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_7 ) ; VAR_1 . METHOD_4 ( VAR_5 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { TYPE_2 VAR_5 = VAR_1 . METHOD_2 ( VAR_4 , VAR_6 ) ; if ( VAR_5 == null ) { TYPE_3 VAR_7 = new TYPE_3 ( ) ; VAR_5 = METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_7 ) ; VAR_1 . METHOD_4 ( VAR_5 ) ; } }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 VAR_1 ) { int count = 0 ; for ( int i = 0 ; i < ( VAR_1 . METHOD_2 ( ) ) ; i ++ ) { for ( int j = 0 ; j < ( VAR_1 . METHOD_3 ( ) ) ; j ++ ) { java.awt.Color VAR_2 = new java.awt.Color ( VAR_1 . METHOD_4 ( x , y ) ) ; if ( METHOD_5 ( VAR_2 ) ) { count ++ ; } } } return count ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 VAR_1 ) { int count = 0 ; for ( int i = 0 ; i < ( VAR_1 . METHOD_2 ( ) ) ; i ++ ) { for ( int j = 0 ; j < ( VAR_1 . METHOD_3 ( ) ) ; j ++ ) { java.awt.Color VAR_2 = new java.awt.Color ( VAR_1 . METHOD_4 ( i , j ) ) ; if ( METHOD_5 ( VAR_2 ) ) { count ++ ; } } } return count ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 target ) { TYPE_5 VAR_3 = VAR_4 ; TYPE_6 VAR_5 = ( ( TYPE_6 ) ( VAR_3 . METHOD_2 ( target ) . METHOD_3 ( ) ) ) ; return VAR_5 . METHOD_1 ( VAR_2 , VAR_3 , target , false ) . METHOD_4 ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 target ) { TYPE_5 VAR_3 = VAR_4 ; TYPE_6 VAR_5 = ( ( TYPE_6 ) ( VAR_3 . METHOD_2 ( target ) . METHOD_3 ( ) ) ) ; return VAR_5 . METHOD_1 ( VAR_2 , VAR_3 , target ) ; }\n"}
{"problem": "public void update ( long VAR_1 ) { if ( VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . update ( this , VAR_1 ) ; } else { position = position . METHOD_1 ( VAR_4 . METHOD_2 ( ( VAR_1 / FLOAT_1 ) ) ) ; } } VAR_5 += VAR_1 ; METHOD_3 ( ( ( ( VAR_5 ) > 0 ) && ( VAR_6 ) ) ) ; VAR_7 . METHOD_4 ( ) ; }\n", "fixed": "public void update ( long VAR_1 ) { if ( VAR_2 ) { if ( ( VAR_3 ) != null ) { VAR_3 . update ( this , VAR_1 ) ; } else { position = position . METHOD_1 ( VAR_4 . METHOD_2 ( ( VAR_1 / FLOAT_1 ) ) ) ; } } VAR_5 += VAR_1 ; METHOD_3 ( ( ( ( VAR_5 ) > 0 ) && ( VAR_6 ) ) ) ; if ( ( VAR_7 ) != null ) VAR_7 . METHOD_4 ( this , VAR_1 ) ; }\n"}
{"problem": "public java.util.Set < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = new java.util.HashSet < > ( ) ; for ( TYPE_1 VAR_3 : this . VAR_4 . METHOD_2 ( ) ) { if ( VAR_5 . METHOD_3 ( VAR_3 ) ) VAR_2 . add ( VAR_3 ) ; } return VAR_2 ; }\n", "fixed": "public java.util.Set < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = new java.util.HashSet < > ( ) ; for ( TYPE_1 VAR_3 : this . VAR_4 . METHOD_2 ( ) ) { if ( ( VAR_5 . METHOD_3 ( VAR_3 ) ) && ( ! ( this . VAR_4 . get ( VAR_3 ) . isEmpty ( ) ) ) ) VAR_2 . add ( VAR_3 ) ; } return VAR_2 ; }\n"}
{"problem": "public long METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( new TYPE_3 ( VAR_3 . METHOD_2 ( ) ) ) ; TYPE_4 VAR_4 = VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; TYPE_5 VAR_5 = new TYPE_5 ( ) ; VAR_5 . append ( STRING_1 , VAR_3 . METHOD_5 ( ) ) ; TYPE_6 VAR_6 = VAR_4 . METHOD_6 ( VAR_5 ) ; return java.lang.Long . METHOD_7 ( VAR_6 . get ( STRING_2 ) . toString ( ) ) ; }\n", "fixed": "public long METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( new TYPE_3 ( VAR_3 . METHOD_2 ( ) ) ) ; TYPE_4 VAR_4 = VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; TYPE_5 VAR_5 = new TYPE_5 ( ) ; VAR_5 . append ( STRING_1 , VAR_3 . METHOD_5 ( ) ) ; TYPE_6 VAR_6 = VAR_4 . METHOD_6 ( VAR_5 ) ; return java.lang.Long.parseLong ( VAR_6 . get ( STRING_2 ) . toString ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.StringBuffer path ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ! ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ) ) { METHOD_3 ( path ) ; path . append ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.StringBuilder path ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ! ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ) ) { METHOD_3 ( path ) ; path . append ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; } }\n"}
{"problem": "public static void METHOD_1 ( ) { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.System.out.println ( STRING_1 ) ; int VAR_3 = VAR_1 . METHOD_2 ( ) ; boolean VAR_4 ; if ( VAR_3 == INT_1 ) { VAR_4 = true ; } else { VAR_4 = false ; } java.lang.System.out.println ( VAR_4 ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; }\n", "fixed": "public static void METHOD_1 ( ) { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.System.out.println ( STRING_1 ) ; int VAR_3 = VAR_1 . METHOD_2 ( ) ; boolean VAR_4 ; if ( VAR_3 == INT_1 ) { VAR_4 = true ; } else { VAR_4 = false ; } java.lang.System.out.println ( VAR_4 ) ; java.lang.System.out.println ( STRING_2 ) ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( java.lang.Void ... VAR_1 ) { TYPE_1 result = null ; try { try { java.lang.Thread . METHOD_2 ( INT_1 ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } result = new TYPE_3 ( VAR_3 . METHOD_4 ( context . METHOD_5 ( ) . open ( parameters . METHOD_6 ( ) ) ) ) ; } catch ( java.io.IOException VAR_2 ) { result = new TYPE_4 ( VAR_2 ) ; } return result ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( java.lang.Void ... VAR_1 ) { TYPE_1 result = null ; try { result = new TYPE_3 ( VAR_3 . METHOD_4 ( context . METHOD_5 ( ) . open ( parameters . METHOD_6 ( ) ) ) ) ; } catch ( java.io.IOException VAR_2 ) { result = new TYPE_4 ( VAR_2 ) ; } return result ; }\n"}
{"problem": "private float METHOD_1 ( ) { TYPE_1 VAR_1 = null ; try { VAR_1 = this . VAR_2 . METHOD_2 ( ) . get ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } if ( VAR_1 == null ) { return VAR_4 ; } float VAR_5 = VAR_1 . METHOD_4 ( ) ; return this . METHOD_5 ( VAR_5 ) ; }\n", "fixed": "protected float METHOD_1 ( ) { TYPE_1 VAR_1 = null ; try { VAR_1 = this . VAR_2 . METHOD_2 ( ) . get ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } if ( VAR_1 == null ) { return VAR_4 ; } float VAR_5 = VAR_1 . METHOD_4 ( ) ; return this . METHOD_5 ( VAR_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { name = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) . getText ( ) . toString ( ) ; VAR_3 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_4 ) ) ) . getText ( ) . toString ( ) ; VAR_5 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_6 ) ) ) . getText ( ) . toString ( ) ; VAR_7 = STRING_1 ; VAR_8 = STRING_2 ; }\n", "fixed": "public void METHOD_1 ( ) { name = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) . getText ( ) . toString ( ) ; VAR_3 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_4 ) ) ) . getText ( ) . toString ( ) ; VAR_5 = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( VAR_6 ) ) ) . getText ( ) . toString ( ) ; VAR_7 = null ; VAR_8 = STRING_2 ; }\n"}
{"problem": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = ( ( java.util.ArrayList ) ( VAR_1 ) ) ; if ( ( VAR_4 ) != null ) { METHOD_2 ( ) ; java.util.Collections.sort ( VAR_3 , VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; VAR_7 . METHOD_3 ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { VAR_3 = ( ( java.util.ArrayList ) ( VAR_1 ) ) ; if ( ( ( ( VAR_4 ) != null ) && ( ( VAR_3 ) != null ) ) && ( ( VAR_3 . size ( ) ) > 0 ) ) { METHOD_2 ( ) ; java.util.Collections.sort ( VAR_3 , VAR_5 ) ; VAR_6 . METHOD_3 ( ) ; VAR_7 . METHOD_3 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( byte [ ] data , int offset , int length ) { for ( int i = offset ; i < ( offset + length ) ; i ++ ) VAR_1 . add ( data [ i ] ) ; synchronized ( VAR_2 ) { VAR_3 = true ; VAR_2 . METHOD_2 ( ) ; } for ( TYPE_1 VAR_4 : VAR_5 ) VAR_4 . METHOD_1 ( data , offset , length ) ; }\n", "fixed": "public void METHOD_1 ( byte [ ] data , int offset , int length ) { synchronized ( VAR_2 ) { for ( int i = offset ; i < ( offset + length ) ; i ++ ) VAR_1 . add ( data [ i ] ) ; VAR_3 = true ; VAR_2 . METHOD_2 ( ) ; } for ( TYPE_1 VAR_4 : VAR_5 ) VAR_4 . METHOD_1 ( data , offset , length ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_1 . METHOD_2 ( ) ; java.util.List < java.lang.Object > VAR_3 = new java.util.ArrayList < java.lang.Object > ( VAR_4 . size ( ) ) ; for ( java.lang.String VAR_5 : VAR_4 ) { VAR_3 . add ( VAR_2 . get ( VAR_5 ) ) ; } return TYPE_3 . METHOD_3 ( VAR_3 ) . METHOD_4 ( ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.Object [ ] VAR_3 = new java.lang.Object [ VAR_4 . size ( ) ] ; for ( int i = 0 ; i < ( VAR_4 . size ( ) ) ; i ++ ) { VAR_3 [ i ] = VAR_2 . get ( VAR_4 . get ( i ) ) ; } return TYPE_3 . METHOD_3 ( VAR_3 ) . METHOD_4 ( ) ; }\n"}
{"problem": "public double METHOD_1 ( int VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( ( VAR_3 . METHOD_3 ( ) ) == VAR_1 ) { return TYPE_2 . METHOD_4 ( VAR_2 , VAR_4 ) ; } } throw new TYPE_3 ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_5 ) ) ) ; }\n", "fixed": "public double METHOD_1 ( int VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( ( VAR_3 . METHOD_3 ( ) ) == VAR_1 ) { return TYPE_2 . METHOD_4 ( java.util.Arrays.asList ( VAR_3 ) , VAR_4 ) ; } } throw new TYPE_3 ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_5 ) ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { java.util.List < TYPE_2 > VAR_5 = VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) ; java.lang.String VAR_6 = VAR_5 . get ( 0 ) . getName ( ) ; java.lang.String VAR_7 = VAR_5 . get ( 0 ) . getType ( ) . toString ( ) ; java.lang.String VAR_8 = TYPE_3 . METHOD_4 ( VAR_4 , VAR_6 , VAR_7 , STRING_1 ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_3 , VAR_6 , VAR_8 ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { java.util.List < TYPE_2 > VAR_5 = VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) ; java.lang.String VAR_6 = VAR_5 . get ( 0 ) . getName ( ) ; java.lang.String VAR_7 = VAR_5 . get ( 0 ) . getType ( ) . toString ( ) ; java.lang.String VAR_8 = TYPE_3 . METHOD_4 ( VAR_4 , VAR_6 , VAR_7 , STRING_1 ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_3 , VAR_6 , VAR_8 ) ; return true ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = this . METHOD_2 ( ) ; VAR_2 . delete ( VAR_3 , ( ( VAR_4 ) + STRING_1 ) , new java.lang.String [ ] { java.lang.String . METHOD_3 ( TYPE_1 . getId ( ) ) } ) ; VAR_2 . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = this . METHOD_2 ( ) ; VAR_2 . delete ( VAR_3 , ( ( VAR_4 ) + STRING_1 ) , new java.lang.String [ ] { java.lang.String . METHOD_3 ( VAR_1 . getId ( ) ) } ) ; VAR_2 . METHOD_4 ( ) ; }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String type , java.lang.String name , float VAR_1 ) throws TYPE_1 { if ( VAR_1 < 0.0F ) throw new TYPE_1 ( STRING_1 ) ; for ( TYPE_2 VAR_2 : VAR_3 . values ( ) ) { return false ; } return METHOD_2 ( type , name , VAR_1 ) ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String type , java.lang.String name , float VAR_1 ) throws TYPE_1 { if ( VAR_1 < 0.0F ) throw new TYPE_1 ( STRING_1 ) ; for ( TYPE_2 VAR_2 : VAR_3 . values ( ) ) { if ( ( VAR_2 . getName ( ) ) == name ) { return false ; } } return METHOD_2 ( type , name , VAR_1 ) ; }\n"}
{"problem": "protected static byte [ ] METHOD_1 ( byte [ ] buffer , int length ) { byte [ ] VAR_1 = null ; if ( buffer != null ) { VAR_1 = new byte [ length ] ; for ( int i = 0 ; ( i < ( buffer . length ) ) && ( i < length ) ; i ++ ) { VAR_1 [ i ] = buffer [ i ] ; } } return VAR_1 ; }\n", "fixed": "public static byte [ ] METHOD_1 ( byte [ ] buffer , int length ) { byte [ ] VAR_1 = null ; if ( buffer != null ) { VAR_1 = new byte [ length ] ; for ( int i = 0 ; ( i < ( buffer . length ) ) && ( i < length ) ; i ++ ) { VAR_1 [ i ] = buffer [ i ] ; } } return VAR_1 ; }\n"}
{"problem": "private static TYPE_1 < java.util.Properties > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_2 . METHOD_3 ( ) ) ) { return TYPE_1 . METHOD_4 ( ) ; } java.util.Properties VAR_3 = new java.util.Properties ( ) ; try { java.io.InputStream VAR_4 = TYPE_4 . METHOD_5 ( VAR_2 . get ( ) ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; } catch ( java.io.IOException VAR_5 ) { new TYPE_5 ( VAR_5 ) ; } return TYPE_1 . METHOD_7 ( VAR_3 ) ; }\n", "fixed": "private static TYPE_1 < java.util.Properties > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_2 . METHOD_3 ( ) ) ) { return TYPE_1 . METHOD_4 ( ) ; } java.util.Properties VAR_3 = new java.util.Properties ( ) ; try { java.io.InputStream VAR_4 = TYPE_4 . METHOD_5 ( VAR_2 . get ( ) ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; } catch ( java.io.IOException VAR_5 ) { throw new TYPE_5 ( VAR_5 ) ; } return TYPE_1 . METHOD_7 ( VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , java.lang.String [ ] position ) { java.lang.String message = new java.lang.String ( ( STRING_1 + ( VAR_2 . toString ( ) ) ) ) ; message += STRING_2 + ( position [ 0 ] ) ; message += STRING_2 + ( position [ 1 ] ) ; message += STRING_2 + ( position [ INT_1 ] ) ; try { METHOD_2 ( message , VAR_1 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_2 , TYPE_1 VAR_1 , java.lang.String [ ] position ) { java.lang.String message = new java.lang.String ( ( STRING_1 + ( VAR_2 . toString ( ) ) ) ) ; message += STRING_2 + ( position [ 0 ] ) ; message += STRING_2 + ( position [ 1 ] ) ; message += STRING_2 + ( position [ INT_1 ] ) ; try { METHOD_2 ( message , VAR_1 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 b = ( ( TYPE_2 ) ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) ; return b . getText ( ) . toString ( ) . split ( \"\\t\" ) [ 0 ] ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 b = ( ( TYPE_2 ) ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) ; if ( b != null ) return b . getText ( ) . toString ( ) . split ( \"\\t\" ) [ 0 ] ; else return null ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ! ( METHOD_2 ( VAR_1 class ) ) ) { TYPE_1 . i ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; METHOD_4 ( new android.content.Intent ( this , VAR_1 class ) ) ; METHOD_5 ( ) ; } else { TYPE_1 . i ( STRING_1 , STRING_3 ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( ! ( METHOD_2 ( VAR_1 class ) ) ) { TYPE_1 . i ( STRING_1 , STRING_2 ) ; METHOD_3 ( ) ; METHOD_4 ( new android.content.Intent ( this , VAR_1 class ) ) ; METHOD_5 ( ) ; } else { TYPE_1 . i ( STRING_1 , STRING_3 ) ; METHOD_3 ( ) ; METHOD_5 ( ) ; } }\n"}
{"problem": "public double METHOD_1 ( ) { double VAR_1 = 0 ; if ( ( VAR_2 ) != null ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) { for ( java.lang.Double VAR_3 : VAR_2 ) { VAR_1 += VAR_3 ; } int size = VAR_2 . size ( ) ; if ( size != 0 ) { VAR_1 /= size ; return VAR_1 ; } } } return 0 ; }\n", "fixed": "public double METHOD_1 ( ) { double VAR_1 = 0 ; int size = 0 ; if ( ( VAR_2 ) != null ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) { for ( java.lang.Double VAR_3 : VAR_2 ) { if ( VAR_3 > 0 ) { VAR_1 += VAR_3 ; size ++ ; } } if ( size != 0 ) { VAR_1 /= size ; return VAR_1 ; } } } return 0 ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( ) { try { long VAR_1 = java.lang.Long.parseLong ( METHOD_2 ( ) ) ; long VAR_2 = TYPE_1 . METHOD_3 ( ) ; long VAR_3 = java.lang.Math.abs ( ( ( ( VAR_2 - ( VAR_1 + ( ( INT_1 * INT_2 ) * INT_3 ) ) ) / INT_2 ) / INT_3 ) ) ; return java.lang.String . METHOD_4 ( VAR_3 ) ; } catch ( TYPE_2 VAR_4 ) { return STRING_1 ; } }\n", "fixed": "private java.lang.String METHOD_1 ( ) { try { long VAR_1 = java.lang.Long.parseLong ( METHOD_2 ( ) ) ; long VAR_2 = TYPE_1 . METHOD_3 ( ) ; long VAR_3 = ( ( java.lang.Math.abs ( ( VAR_2 - VAR_1 ) ) ) / INT_2 ) / INT_3 ; return java.lang.String . METHOD_4 ( VAR_3 ) ; } catch ( TYPE_2 VAR_4 ) { return STRING_1 ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; java.lang.String name = names . get ( ( VAR_2 - 1 ) ) ; int id = VAR_4 . get ( ( VAR_2 - 1 ) ) ; METHOD_4 ( id , name ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; java.lang.String name = names . get ( VAR_2 ) ; int id = VAR_4 . get ( VAR_2 ) ; METHOD_4 ( id , name ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_1 ) ; METHOD_4 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_3 ) ; try { VAR_4 . METHOD_5 ( STRING_4 ) ; VAR_4 . METHOD_6 ( ) ; VAR_4 . METHOD_7 ( VAR_5 , VAR_6 ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_7 . METHOD_8 ( ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_1 ) ; METHOD_4 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , STRING_3 ) ; try { VAR_4 . METHOD_6 ( ) ; VAR_4 . METHOD_7 ( VAR_5 , VAR_6 ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_7 . METHOD_8 ( ) ; } }\n"}
{"problem": "public float METHOD_1 ( ) { byte [ ] VAR_1 = VAR_2 . METHOD_2 ( ) ; return java.lang.Float . METHOD_3 ( ( ( ( java.lang.Integer . METHOD_4 ( VAR_1 [ INT_1 ] ) ) + STRING_1 ) + ( java.lang.Integer . METHOD_4 ( VAR_1 [ INT_2 ] ) ) ) ) ; }\n", "fixed": "public float METHOD_1 ( ) { if ( ( VAR_2 ) == null ) { return 0.0F ; } byte [ ] VAR_1 = VAR_2 . METHOD_2 ( ) ; return java.lang.Float . METHOD_3 ( ( ( ( java.lang.Integer . METHOD_4 ( VAR_1 [ INT_1 ] ) ) + STRING_1 ) + ( java.lang.Integer . METHOD_4 ( VAR_1 [ INT_2 ] ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( long VAR_1 ) { for ( int i = 0 ; i < ( data . size ( ) ) ; i ++ ) { if ( ( data . get ( i ) . VAR_1 ) == VAR_1 ) { data . remove ( i ) ; i -- ; } } }\n", "fixed": "public void METHOD_1 ( long VAR_1 ) { synchronized ( data ) { for ( int i = 0 ; i < ( data . size ( ) ) ; i ++ ) { if ( ( data . get ( i ) . VAR_1 ) == VAR_1 ) { data . remove ( i ) ; i -- ; } } } }\n"}
{"problem": "public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { TYPE_2 . METHOD_1 ( VAR_1 , STRING_1 ) ; TYPE_2 . METHOD_2 ( ( ( VAR_2 ) == null ) , STRING_2 ) ; TYPE_3 . info ( STRING_3 ) ; VAR_2 = VAR_1 ; TYPE_4 VAR_3 = VAR_4 . METHOD_3 ( VAR_5 ) ; VAR_3 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ; VAR_6 . METHOD_6 ( this ) ; VAR_6 . start ( ) ; VAR_7 . METHOD_7 ( ) . METHOD_6 ( this ) ; VAR_7 . start ( ) ; }\n", "fixed": "public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { TYPE_2 . METHOD_1 ( VAR_1 , STRING_1 ) ; TYPE_2 . METHOD_2 ( ( ( VAR_2 ) == null ) , STRING_2 ) ; TYPE_3 . info ( STRING_3 ) ; VAR_2 = VAR_1 ; VAR_6 . METHOD_6 ( this ) ; VAR_6 . start ( ) ; VAR_7 . METHOD_7 ( ) . METHOD_6 ( this ) ; VAR_7 . start ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; if ( VAR_3 . METHOD_4 ( ) ) { VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) ; } if ( ( VAR_4 . METHOD_5 ( ) . METHOD_7 ( ) ) == 0 ) { METHOD_8 ( ) ; } else { VAR_3 . METHOD_9 ( ) ; VAR_1 . METHOD_10 ( VAR_2 , VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; if ( VAR_3 . METHOD_4 ( ) ) { VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) ; } if ( ( VAR_4 . METHOD_5 ( ) . METHOD_7 ( ) ) <= 0 ) { METHOD_8 ( ) ; } else { VAR_3 . METHOD_9 ( ) ; VAR_1 . METHOD_10 ( VAR_2 , VAR_5 ) ; } }\n"}
{"problem": "public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( INT_1 , VAR_2 ) ; try { VAR_3 = new TYPE_3 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_6 ( ) ; } TYPE_4 . info ( STRING_1 ) ; }\n", "fixed": "public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( INT_1 , VAR_2 ) ; try { VAR_3 = new TYPE_3 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_6 ( ) ; } TYPE_4 . info ( STRING_1 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) , false , new TYPE_2 ( VAR_2 ) { public void METHOD_3 ( java.lang.String VAR_4 , TYPE_3 VAR_5 , TYPE_4 VAR_6 , byte [ ] VAR_7 ) throws java.io.IOException { VAR_1 . METHOD_4 ( new java.lang.String ( VAR_7 , VAR_8 ) ) ; VAR_2 . METHOD_5 ( VAR_5 . METHOD_6 ( ) , false ) ; } } ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) , true , new TYPE_2 ( VAR_2 ) { public void METHOD_3 ( java.lang.String VAR_4 , TYPE_3 VAR_5 , TYPE_4 VAR_6 , byte [ ] VAR_7 ) throws java.io.IOException { VAR_1 . METHOD_4 ( new java.lang.String ( VAR_7 , VAR_8 ) ) ; } } ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; VAR_3 . METHOD_6 ( VAR_1 ) ; } throw new TYPE_2 ( STRING_1 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { VAR_1 = new TYPE_1 ( VAR_2 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; return VAR_3 . METHOD_6 ( VAR_1 ) ; } throw new TYPE_2 ( STRING_1 ) ; }\n"}
{"problem": "public static boolean contains ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_1 == null ) || ( VAR_2 == null ) ) { return false ; } VAR_1 = TYPE_3 . METHOD_1 ( VAR_1 ) ; for ( TYPE_4 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( TYPE_5 . contains ( VAR_3 , VAR_2 ) ) { return true ; } } return false ; }\n", "fixed": "public static boolean contains ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_1 == null ) || ( VAR_2 == null ) ) { return true ; } VAR_1 = TYPE_3 . METHOD_1 ( VAR_1 ) ; for ( TYPE_4 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( TYPE_5 . contains ( VAR_3 , VAR_2 ) ) { return true ; } } return false ; }\n"}
{"problem": "public void open ( int i , int j ) { if ( METHOD_1 ( i , j ) ) { int VAR_1 = i - 1 ; int VAR_2 = j - 1 ; if ( ! ( METHOD_2 ( VAR_1 , VAR_2 ) ) ) { int index = METHOD_3 ( VAR_1 , VAR_2 ) ; VAR_3 [ index ] = true ; METHOD_4 ( VAR_1 , VAR_2 ) ; ( count ) ++ ; } } }\n", "fixed": "public void open ( int i , int j ) { if ( METHOD_1 ( i , j ) ) { if ( ! ( METHOD_2 ( i , j ) ) ) { int index = METHOD_3 ( i , j ) ; VAR_3 [ index ] = true ; METHOD_4 ( i , j ) ; ( count ) ++ ; } } }\n"}
{"problem": "public boolean METHOD_1 ( ) { return ( ( ( this . VAR_1 ) && ( ( this . VAR_2 ) == ( VAR_3 ) ) ) || ( ( ! ( this . VAR_1 ) ) && ( ( ( ( this . VAR_4 ) || ( this . VAR_5 ) ) || ( ( this . VAR_2 ) != ( VAR_3 ) ) ) || ( ( this . VAR_6 ) != 0 ) ) ) ) || ( ( this . VAR_4 ) && ( ( this . VAR_6 ) <= 0 ) ) ; }\n", "fixed": "public boolean METHOD_1 ( ) { return ( ( ! ( this . VAR_1 ) ) && ( ( this . VAR_4 ) || ( ( this . VAR_6 ) != 0 ) ) ) || ( ( this . VAR_4 ) && ( ( this . VAR_6 ) <= 0 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 . info ( STRING_1 ) ; this . VAR_3 = new TYPE_3 ( true ) ; this . VAR_1 = VAR_4 ; this . VAR_2 = VAR_5 ; this . VAR_6 = METHOD_2 ( ) ; this . VAR_6 . start ( ) ; this . VAR_7 = TYPE_4 . METHOD_3 ( STRING_2 ) ; this . VAR_8 = TYPE_4 . METHOD_3 ( STRING_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_4 , TYPE_1 VAR_5 ) { TYPE_2 . info ( STRING_1 ) ; this . VAR_3 = new TYPE_3 ( true ) ; this . VAR_1 = VAR_4 ; this . VAR_2 = VAR_5 ; this . VAR_6 = METHOD_2 ( ) ; this . VAR_6 . start ( ) ; this . VAR_7 = TYPE_4 . METHOD_3 ( STRING_2 ) ; this . VAR_8 = TYPE_4 . METHOD_3 ( STRING_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( this . VAR_2 ) { return ; } VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; java.lang.String VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { java.lang.StringBuilder VAR_4 = new java.lang.StringBuilder ( ) ; VAR_4 . append ( STRING_2 ) ; VAR_4 . append ( VAR_3 ) ; VAR_4 . append ( CHAR_1 ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_4 . toString ( ) ) ) ; } VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_3 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( this . VAR_2 ) { return ; } java.lang.String VAR_3 = METHOD_3 ( ) ; if ( VAR_3 != null ) { VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_1 ) ) ; java.lang.StringBuilder VAR_4 = new java.lang.StringBuilder ( ) ; VAR_4 . append ( STRING_2 ) ; VAR_4 . append ( VAR_3 ) ; VAR_4 . append ( CHAR_1 ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_4 . toString ( ) ) ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_3 ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) == null ) { return ; } if ( ( VAR_1 ) instanceof TYPE_2 ) { TYPE_3 . METHOD_2 ( event ) ; TYPE_4 . METHOD_3 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; } TYPE_5 . METHOD_4 ( event ) ; TYPE_5 . METHOD_5 ( event ) ; TYPE_5 . METHOD_6 ( event ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { if ( ( VAR_1 ) == null ) { return ; } if ( ( VAR_1 ) instanceof TYPE_2 ) { TYPE_3 . METHOD_2 ( event ) ; TYPE_4 . METHOD_3 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; } TYPE_5 . METHOD_4 ( event ) ; TYPE_5 . METHOD_5 ( event ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 t ) throws java.io.IOException { METHOD_2 ( ) ; if ( t != null ) { if ( VAR_2 ) METHOD_3 ( VAR_3 ) ; METHOD_3 ( VAR_4 . METHOD_4 ( t ) ) ; if ( VAR_2 ) METHOD_3 ( VAR_3 ) ; } else { METHOD_5 ( VAR_1 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 t ) throws java.io.IOException { METHOD_2 ( ) ; if ( t != null ) { if ( VAR_2 ) METHOD_3 ( VAR_3 ) ; METHOD_3 ( VAR_4 . METHOD_4 ( t ) ) ; if ( VAR_2 ) METHOD_3 ( VAR_3 ) ; } }\n"}
{"problem": "private static int METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { int VAR_2 = 0 ; int VAR_3 = VAR_4 ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ( VAR_1 . get ( i ) . METHOD_2 ( ) ) < VAR_3 ) { VAR_3 = VAR_1 . get ( i ) . METHOD_2 ( ) ; VAR_2 = i ; } } return VAR_2 ; }\n", "fixed": "private static int METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { int VAR_2 = 0 ; int VAR_3 = VAR_4 ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ( VAR_1 . get ( i ) . METHOD_2 ( ) ) <= VAR_3 ) { VAR_3 = VAR_1 . get ( i ) . METHOD_2 ( ) ; VAR_2 = i ; } } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 key , TYPE_2 < TYPE_3 > values , TYPE_4 context ) throws java.io.IOException , TYPE_5 { java.lang.String filename = METHOD_2 ( key ) ; filename = ( ( context . METHOD_3 ( ) . get ( STRING_1 ) ) + STRING_2 ) + filename ; for ( TYPE_3 value : values ) { VAR_1 . METHOD_4 ( key , value , filename ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 key , TYPE_2 < TYPE_3 > values , TYPE_4 context ) throws java.io.IOException , TYPE_5 { java.lang.String filename = STRING_2 + ( METHOD_2 ( key ) ) ; for ( TYPE_3 value : values ) { VAR_1 . METHOD_4 ( filename , key , value ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) < INT_1 ) { if ( ( VAR_2 ) < INT_2 ) { if ( ( METHOD_2 ( VAR_1 ) ) == ( ( METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) > 0 ) ) return ( STRING_1 + ( METHOD_3 ( VAR_1 ) ) ) + STRING_2 ; else return STRING_3 ; } else return STRING_4 ; } else return STRING_5 ; }\n", "fixed": "public java.lang.String METHOD_1 ( int VAR_1 ) { if ( ( VAR_2 ) > INT_1 ) { return STRING_5 ; } else if ( ( VAR_2 ) > INT_2 ) { return STRING_4 ; } else if ( ( ! ( METHOD_2 ( VAR_1 ) ) ) && ( ( METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) == 0 ) ) return STRING_3 ; else return ( STRING_1 + ( METHOD_3 ( VAR_1 ) ) ) + STRING_2 ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = false ; this . VAR_3 = VAR_4 ; if ( ( this . VAR_5 ) && ( this . VAR_6 . METHOD_2 ( VAR_7 ) ) ) { VAR_2 = true ; this . VAR_5 = false ; } this . date = VAR_1 . date ; this . VAR_8 = VAR_9 ; this . time = VAR_1 . time ; return VAR_2 ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = false ; this . VAR_3 = VAR_4 ; if ( this . VAR_6 . METHOD_2 ( VAR_7 ) ) { VAR_2 = true ; this . VAR_5 = false ; } this . VAR_6 = VAR_7 ; this . date = VAR_1 . date ; this . VAR_8 = VAR_9 ; this . time = VAR_1 . time ; return VAR_2 ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; int VAR_4 = VAR_5 ; int height = VAR_6 ; METHOD_6 ( ) . METHOD_7 ( ( ( int ) ( VAR_4 * 1 ) ) , ( ( int ) ( height * 1 ) ) ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; int VAR_4 = VAR_5 ; int height = VAR_6 ; METHOD_6 ( ) . METHOD_7 ( ( ( int ) ( VAR_4 ) ) , ( ( int ) ( height ) ) ) ; }\n"}
{"problem": "public < TYPE_1 > TYPE_1 get ( java.lang.String name , java.lang.String value , final java.lang.Class < TYPE_1 > VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_1 ( name , value , VAR_1 ) ; TYPE_1 VAR_3 = this . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , new TYPE_4 < TYPE_1 > ( ) { public TYPE_1 METHOD_5 ( TYPE_5 VAR_4 , int VAR_5 ) throws TYPE_6 { return TYPE_7 . METHOD_6 ( VAR_4 , VAR_1 ) ; } } ) ; return VAR_3 ; }\n", "fixed": "public < TYPE_1 > TYPE_1 get ( java.lang.String name , java.lang.Object value , final java.lang.Class < TYPE_1 > VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_1 ( name , value , VAR_1 ) ; TYPE_1 VAR_3 = this . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , new TYPE_4 < TYPE_1 > ( ) { public TYPE_1 METHOD_5 ( TYPE_5 VAR_4 , int VAR_5 ) throws TYPE_6 { return TYPE_7 . METHOD_6 ( VAR_4 , VAR_1 ) ; } } ) ; return VAR_3 ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 class ) ; if ( VAR_1 != null ) { if ( VAR_1 instanceof TYPE_4 ) { return ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_3 ( ) ; } else if ( VAR_1 instanceof TYPE_5 ) { return ( ( TYPE_5 ) ( VAR_1 ) ) . METHOD_3 ( ) ; } else { throw new TYPE_2 ( ( STRING_1 + VAR_1 ) ) ; } } else { return null ; } }\n", "fixed": "private TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_3 VAR_1 = VAR_2 . getData ( VAR_3 class ) ; if ( VAR_1 != null ) { if ( VAR_1 instanceof TYPE_4 ) { return ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_3 ( ) ; } else if ( VAR_1 instanceof TYPE_5 ) { return ( ( TYPE_5 ) ( VAR_1 ) ) . METHOD_3 ( ) ; } else { throw new TYPE_2 ( ( STRING_1 + VAR_1 ) ) ; } } else { return null ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; if ( VAR_2 ) return ; VAR_3 += FLOAT_1 * ( VAR_4 ) ; x += this . VAR_3 ; this . METHOD_2 ( VAR_3 , 0 ) ; y += this . VAR_5 ; this . METHOD_2 ( 0 , VAR_5 ) ; this . VAR_3 /= FLOAT_2 ; VAR_5 += FLOAT_3 ; }\n", "fixed": "public void METHOD_1 ( ) { if ( VAR_2 ) return ; VAR_3 += FLOAT_1 * ( VAR_4 ) ; x += this . VAR_3 ; this . METHOD_2 ( VAR_3 , 0 ) ; y += this . VAR_5 ; this . METHOD_2 ( 0 , VAR_5 ) ; this . VAR_3 /= FLOAT_2 ; VAR_5 += FLOAT_3 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 ) throws TYPE_2 { TYPE_3 query = null ; try { query = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; query . METHOD_5 ( STRING_1 , VAR_1 ) ; } catch ( TYPE_5 VAR_2 ) { throw new TYPE_2 ( ( STRING_2 + ( VAR_2 . METHOD_6 ( ) ) ) ) ; } return ( ( TYPE_1 ) ( METHOD_7 ( query ) ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.Long VAR_1 ) throws TYPE_2 { TYPE_3 query = null ; try { query = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; query . METHOD_5 ( STRING_1 , VAR_1 ) ; } catch ( TYPE_5 VAR_2 ) { throw new TYPE_2 ( ( STRING_2 + ( VAR_2 . METHOD_6 ( ) ) ) , VAR_2 ) ; } return ( ( TYPE_1 ) ( METHOD_7 ( query ) ) ) ; }\n"}
{"problem": "private void METHOD_1 ( boolean VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; if ( STRING_1 . equals ( VAR_2 ) ) { METHOD_3 ( VAR_1 ) ; } else { METHOD_4 ( VAR_1 ) ; } }\n", "fixed": "private void METHOD_1 ( boolean b , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( b ) ; VAR_4 . METHOD_2 ( b ) ; if ( STRING_1 . equals ( VAR_2 ) ) { METHOD_3 ( b ) ; } else { METHOD_4 ( b ) ; } }\n"}
{"problem": "private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; final TYPE_3 VAR_3 = ( ( TYPE_3 ) ( getView ( ) . METHOD_3 ( VAR_4 ) ) ) ; if ( VAR_3 == null ) { return ; } METHOD_4 ( VAR_1 , VAR_3 ) ; }\n", "fixed": "private void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( getView ( ) ) == null ) { return ; } final TYPE_3 VAR_3 = ( ( TYPE_3 ) ( getView ( ) . METHOD_3 ( VAR_4 ) ) ) ; if ( VAR_3 == null ) { return ; } METHOD_4 ( VAR_1 , VAR_3 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_1 msg = null ; java.lang.String VAR_1 = new java.io.BufferedReader ( new TYPE_3 ( VAR_2 . METHOD_2 ( ) , STRING_1 ) ) . METHOD_3 ( ) ; if ( ( VAR_1 != null ) && ( ! ( STRING_2 . equals ( VAR_1 ) ) ) ) { msg = new TYPE_1 ( VAR_1 ) ; if ( VAR_3 ) { java.lang.System.out.println ( ( STRING_3 + ( msg . toString ( ) ) ) ) ; } } return msg ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_1 msg = null ; java.lang.String VAR_1 = new java.io.BufferedReader ( new TYPE_3 ( VAR_2 . METHOD_2 ( ) , STRING_1 ) ) . METHOD_3 ( ) ; if ( ( VAR_1 != null ) && ( ! ( STRING_2 . equals ( VAR_1 ) ) ) ) { msg = new TYPE_1 ( VAR_1 ) ; } if ( VAR_3 ) { java.lang.System.out.println ( ( STRING_3 + ( msg . toString ( ) ) ) ) ; } return msg ; }\n"}
{"problem": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; if ( ! ( VAR_1 . METHOD_6 ( ) ) ) { METHOD_3 ( ) ; } VAR_3 . METHOD_2 ( STRING_2 ) ; }\n", "fixed": "public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; if ( ! ( VAR_1 . METHOD_6 ( ) ) ) { METHOD_3 ( ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; VAR_3 . METHOD_2 ( STRING_2 ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { int VAR_2 = METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + ( VAR_1 . getId ( ) ) ) , STRING_2 , getContext ( ) . METHOD_4 ( ) ) ; METHOD_5 ( VAR_2 ) ; id . setText ( VAR_1 . toString ( ) ) ; } }\n", "fixed": "protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) != null ) { int VAR_2 = METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + ( VAR_1 . getId ( ) ) ) , STRING_2 , getContext ( ) . METHOD_4 ( ) ) ; id . setText ( VAR_1 . toString ( ) ) ; } }\n"}
{"problem": "public boolean equals ( java.lang.Object obj ) { if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } if ( ( this ) == obj ) { return false ; } TYPE_1 VAR_1 = ( ( TYPE_1 ) ( obj ) ) ; return this . values . equals ( VAR_1 . values ) ; }\n", "fixed": "public boolean equals ( java.lang.Object obj ) { if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } if ( ( this ) == obj ) { return true ; } TYPE_1 VAR_1 = ( ( TYPE_1 ) ( obj ) ) ; return this . values . equals ( VAR_1 . values ) ; }\n"}
{"problem": "protected void METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; if ( null == ( VAR_1 . METHOD_3 ( ) ) ) throw new java.lang.NullPointerException ( STRING_1 ) ; if ( null == ( VAR_1 . METHOD_4 ( ) ) ) throw new java.lang.NullPointerException ( STRING_2 ) ; if ( null == ( VAR_1 . METHOD_5 ( ) ) ) throw new java.lang.NullPointerException ( STRING_3 ) ; if ( null == ( VAR_1 . METHOD_6 ( ) ) ) throw new java.lang.NullPointerException ( STRING_4 ) ; }\n", "fixed": "protected void METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; if ( null == ( VAR_1 . METHOD_3 ( ) ) ) throw new java.lang.NullPointerException ( STRING_1 ) ; if ( null == ( VAR_1 . METHOD_5 ( ) ) ) throw new java.lang.NullPointerException ( STRING_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String name , int VAR_1 ) { this . VAR_2 . add ( new TYPE_1 ( name , VAR_1 ) ) ; if ( ! ( this . VAR_3 ) ) { this . VAR_4 . add ( new TYPE_1 ( STRING_1 ) ) ; this . VAR_3 = true ; } if ( ( this . VAR_4 . size ( ) ) == 0 ) { this . VAR_4 . get ( 0 ) . METHOD_2 ( ) ; } java.lang.System.out.println ( ( STRING_2 + name ) ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.String name , int VAR_1 ) { this . VAR_2 . add ( new TYPE_1 ( name , VAR_1 ) ) ; if ( ! ( this . VAR_3 ) ) { this . VAR_4 . add ( new TYPE_1 ( STRING_1 ) ) ; this . VAR_3 = true ; } if ( ( this . VAR_4 . size ( ) ) == 1 ) { this . VAR_4 . get ( 0 ) . METHOD_2 ( ) ; } java.lang.System.out.println ( ( STRING_2 + name ) ) ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , int count , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws java.lang.Exception { java.lang.String VAR_5 = VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , count , VAR_5 . split ( STRING_2 ) , VAR_3 , VAR_4 ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , int count , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws java.lang.Exception { java.lang.String VAR_5 = VAR_2 . METHOD_2 ( STRING_1 ) ; if ( VAR_5 != null ) TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , count , VAR_5 . split ( STRING_2 ) , VAR_3 , VAR_4 ) ; }\n"}
{"problem": "public void update ( float VAR_1 ) { if ( ! ( VAR_2 . METHOD_1 ( ) ) ) { METHOD_2 ( new TYPE_1 ( ( ( VAR_3 ) / INT_1 ) ) ) ; } VAR_3 += 1 ; if ( ( ( ( VAR_3 ) % INT_2 ) == 0 ) && ( ( VAR_4 ) < INT_3 ) ) { VAR_4 *= FLOAT_1 ; VAR_5 = ( VAR_4 ) * INT_4 ; VAR_6 *= FLOAT_2 ; } VAR_2 . update ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; }\n", "fixed": "public void update ( float VAR_1 ) { if ( ! ( VAR_2 . METHOD_1 ( ) ) ) { METHOD_2 ( new TYPE_1 ( ( ( VAR_3 ) / INT_1 ) ) ) ; } VAR_3 += 1 ; if ( ( ( ( VAR_3 ) % INT_2 ) == 0 ) && ( ( VAR_4 ) < INT_3 ) ) { VAR_4 *= FLOAT_1 ; VAR_5 = ( VAR_4 ) * INT_4 ; VAR_6 *= FLOAT_2 ; } METHOD_4 ( VAR_1 ) ; VAR_2 . update ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; }\n"}
{"problem": "private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 source , TYPE_2 target , java.util.Collection < TYPE_3 > VAR_2 ) { for ( TYPE_3 VAR_3 : VAR_2 ) { if ( ( ( VAR_3 . METHOD_2 ( ) ) == source ) && ( ( VAR_3 . METHOD_3 ( ) ) == target ) ) { VAR_1 . METHOD_4 ( ) . add ( VAR_3 . METHOD_5 ( ) ) ; } } }\n", "fixed": "private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 source , TYPE_2 target , java.util.Collection < TYPE_3 > VAR_2 ) { for ( TYPE_3 VAR_3 : VAR_2 ) { if ( ( VAR_3 . METHOD_2 ( ) . equals ( source ) ) && ( VAR_3 . METHOD_3 ( ) . equals ( target ) ) ) { VAR_1 . METHOD_4 ( ) . add ( VAR_3 . METHOD_5 ( ) ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { android.widget.LinearLayout VAR_1 = ( ( android.widget.LinearLayout ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; VAR_3 . METHOD_3 ( VAR_6 ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { android.widget.LinearLayout VAR_1 = ( ( android.widget.LinearLayout ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_4 ) ) ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; VAR_3 . METHOD_3 ( VAR_6 ) ; }\n"}
{"problem": "void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( INT_1 , INT_1 , INT_1 , 0 ) , false ) ; TYPE_2 . METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_3 , 0 ) ; TYPE_2 . METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_4 , 0 ) ; TYPE_2 . METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_5 , 0 ) ; }\n", "fixed": "void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( INT_1 , INT_1 , INT_1 , 0 ) , false ) ; METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_3 , 0 ) ; METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_4 , 0 ) ; METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_5 , 0 ) ; }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 item = ( ( TYPE_2 ) ( METHOD_2 ( VAR_1 ) ) ) ; int VAR_2 = METHOD_3 ( item ) ; int VAR_3 = VAR_2 + ( METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) ; return VAR_3 ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 item = ( ( TYPE_2 ) ( METHOD_2 ( VAR_1 ) ) ) ; int VAR_2 = METHOD_3 ( item ) ; int VAR_3 = VAR_2 + ( METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) ; return VAR_3 + 1 ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_5 ( false ) ; VAR_1 . METHOD_6 ( ) . METHOD_3 ( ) ; VAR_2 . remove ( VAR_1 ) ; java.lang.System.out.println ( ( ( ( ( STRING_1 + ( VAR_1 . getId ( ) ) ) + STRING_2 ) + ( VAR_1 . getType ( ) . toString ( ) ) ) + STRING_3 ) ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_5 ( false ) ; VAR_1 . METHOD_6 ( ) . METHOD_3 ( ) ; VAR_2 . remove ( VAR_1 ) ; }\n"}
{"problem": "private void METHOD_1 ( java.util.Set < java.lang.String > words , TYPE_1 file ) { try ( TYPE_2 < java.lang.String > VAR_1 = TYPE_3 . METHOD_2 ( file , VAR_2 ) ) { VAR_1 . METHOD_3 ( ( line ) - > line . trim ( ) ) . METHOD_4 ( ( VAR_3 ) - > words . add ( VAR_3 ) ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_4 ( VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( java.util.Set < java.lang.String > words , TYPE_1 file ) { try ( TYPE_2 < java.lang.String > VAR_1 = TYPE_3 . METHOD_2 ( file , VAR_2 ) ) { VAR_1 . METHOD_3 ( ( line ) - > line . trim ( ) . toLowerCase ( ) ) . METHOD_4 ( ( VAR_3 ) - > words . add ( VAR_3 ) ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_4 ( VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 , final java.util.Map < java.lang.Integer , TYPE_2 > results ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . name ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; for ( final java.util.Map.Entry < java.lang.Integer , TYPE_2 > VAR_2 : results . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 , VAR_2 . METHOD_6 ( ) , VAR_2 . getValue ( ) ) ; } VAR_1 . METHOD_7 ( ) ; VAR_1 . METHOD_8 ( ) ; VAR_1 . METHOD_9 ( ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 , final java.util.Map < java.lang.Integer , TYPE_2 > results ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . name ( STRING_1 ) ; VAR_1 . METHOD_3 ( ) ; for ( final java.util.Map.Entry < java.lang.Integer , TYPE_2 > VAR_2 : results . METHOD_4 ( ) ) { METHOD_5 ( VAR_1 , VAR_2 . METHOD_6 ( ) , VAR_2 . getValue ( ) ) ; } VAR_1 . METHOD_7 ( ) ; VAR_1 . METHOD_8 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 < java.util.ArrayList < TYPE_3 > > > VAR_1 , TYPE_4 < TYPE_2 < java.util.ArrayList < TYPE_3 > > > response ) { java.util.ArrayList < TYPE_3 > VAR_2 = response . METHOD_2 ( ) . getData ( ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 < java.util.ArrayList < TYPE_3 > > > VAR_1 , TYPE_4 < TYPE_2 < java.util.ArrayList < TYPE_3 > > > response ) { java.util.ArrayList < TYPE_3 > VAR_2 = response . METHOD_2 ( ) . getData ( ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_4 . METHOD_6 ( ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { int x = ( ( VAR_1 - ( offset . x ) ) - ( VAR_3 . y ) ) / ( VAR_4 ) ; int y = ( ( VAR_2 - ( offset . y ) ) - ( VAR_3 . y ) ) / ( VAR_4 ) ; if ( TYPE_1 . METHOD_2 ( x , y ) ) return TYPE_1 . METHOD_3 ( x , y ) ; return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { int x = ( ( VAR_1 - ( offset . x ) ) - ( VAR_3 . x ) ) / ( VAR_4 ) ; int y = ( ( VAR_2 - ( offset . y ) ) - ( VAR_3 . y ) ) / ( VAR_4 ) ; if ( TYPE_1 . METHOD_2 ( x , y ) ) return TYPE_1 . METHOD_3 ( x , y ) ; return null ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { try { try { java.lang.String result = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , TYPE_2 . toString ( ) , VAR_2 ) ; TYPE_3 . METHOD_4 ( ( ( STRING_1 + result ) + STRING_2 ) ) ; } catch ( TYPE_4 VAR_4 ) { } } catch ( java.lang.Exception VAR_4 ) { TYPE_3 . METHOD_4 ( ( STRING_3 + VAR_4 ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { try { try { java.lang.String result = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , TYPE_2 . toString ( ) , VAR_2 ) ; TYPE_3 . METHOD_4 ( ( ( STRING_1 + result ) + STRING_2 ) ) ; } catch ( TYPE_4 VAR_4 ) { } } catch ( java.lang.Exception VAR_4 ) { TYPE_3 . METHOD_4 ( STRING_3 , VAR_4 ) ; } }\n"}
{"problem": "public void handle ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . info ( ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) + ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ) ) ) ; for ( TYPE_4 VAR_4 : VAR_5 ) { java.lang.System.out.println ( ( STRING_3 + ( VAR_4 . METHOD_3 ( ) ) ) ) ; } METHOD_4 ( VAR_2 . answer ( new TYPE_5 ( VAR_5 ) ) , VAR_6 ) ; }\n", "fixed": "public void handle ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 . info ( ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) + ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ) ) ) ; METHOD_4 ( VAR_2 . answer ( new TYPE_5 ( VAR_5 ) ) , VAR_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_1 . getId ( ) ) { case VAR_2 : intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; break ; case VAR_4 : intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; break ; case VAR_6 : intent = new android.content.Intent ( this , VAR_7 class ) ; break ; case VAR_8 : break ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_1 . getId ( ) ) { case VAR_2 : intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; break ; case VAR_4 : intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_2 ( intent ) ; break ; case VAR_6 : intent = new android.content.Intent ( this , VAR_7 class ) ; METHOD_2 ( intent ) ; break ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } this . VAR_2 = VAR_1 ; int count = VAR_2 . METHOD_2 ( ) ; for ( int i = 0 ; i < count ; i ++ ) { android.view.View VAR_3 = VAR_2 . getView ( i , VAR_4 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_3 , i ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } this . VAR_2 = VAR_1 ; int count = VAR_2 . METHOD_2 ( ) ; for ( int i = 0 ; i < count ; i ++ ) { android.view.View VAR_3 = VAR_2 . getView ( i , VAR_4 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_3 , i ) ; } }\n"}
{"problem": "private java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) ; VAR_1 . add ( TYPE_1 . METHOD_2 ( STRING_3 , STRING_4 ) ) ; VAR_1 . add ( TYPE_1 . METHOD_2 ( STRING_3 , STRING_4 ) ) ; return VAR_1 ; }\n", "fixed": "private java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) ; VAR_1 . add ( TYPE_1 . METHOD_2 ( STRING_3 , STRING_4 ) ) ; return VAR_1 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String value ) { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( value ) . trim ( ) ; try { TYPE_3 VAR_2 = VAR_3 . METHOD_3 ( STRING_1 , VAR_4 . String class ) ; return ( ( TYPE_1 ) ( VAR_5 . METHOD_4 ( null , value ) ) ) ; } catch ( java.lang.Exception VAR_6 ) { throw new TYPE_4 ( ( ( ( STRING_2 + value ) + STRING_3 ) + ( VAR_3 . getName ( ) ) ) ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String value ) { try { return ( ( TYPE_1 ) ( VAR_5 . METHOD_4 ( null , value ) ) ) ; } catch ( java.lang.Exception VAR_6 ) { throw new TYPE_4 ( ( ( ( STRING_2 + value ) + STRING_3 ) + ( VAR_3 . getName ( ) ) ) ) ; } }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Long VAR_2 ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + VAR_2 ) ) ; if ( VAR_2 != null ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_3 + ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ) ) ; VAR_1 . setText ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; } else TYPE_2 . METHOD_2 ( STRING_1 , STRING_4 ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Long VAR_2 ) { TYPE_2 . METHOD_2 ( STRING_1 , ( STRING_2 + VAR_2 ) ) ; if ( VAR_2 != null ) { VAR_1 . setText ( TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 . getContext ( ) ) ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : getContext ( ) . METHOD_3 ( new android.content.Intent ( VAR_2 ) ) ; return true ; case VAR_3 : this . METHOD_4 ( TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( getActivity ( ) ) ) , STRING_1 , getString ( VAR_4 ) ) ; return true ; } return super . METHOD_1 ( item ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_3 : this . METHOD_4 ( TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( getActivity ( ) ) ) , STRING_1 , getString ( VAR_4 ) ) ; return true ; } return super . METHOD_1 ( item ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_4 = METHOD_4 ( ) ; VAR_1 . addComponent ( VAR_4 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_5 ( ) ; TYPE_2 . assertTrue ( VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_1 . addComponent ( VAR_4 ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_5 ( ) ; TYPE_2 . assertTrue ( VAR_3 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { int id = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( id ) ) ) ; if ( VAR_2 == null ) return STRING_1 ; else return VAR_2 . getText ( ) . toString ( ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { int id = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( id ) ) ) ; if ( VAR_2 == null ) return STRING_1 ; return VAR_2 . getText ( ) . toString ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String key ) { if ( TYPE_2 . equals ( key ) ) METHOD_2 ( ) ; if ( ( ( TYPE_3 . equals ( key ) ) || ( TYPE_4 . equals ( key ) ) ) || ( TYPE_5 . equals ( key ) ) ) METHOD_3 ( ) ; if ( TYPE_6 . equals ( key ) ) VAR_2 = TYPE_7 . METHOD_4 ( TYPE_6 ) ; if ( TYPE_8 . equals ( key ) ) VAR_3 = TYPE_7 . METHOD_4 ( TYPE_8 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String key ) { if ( TYPE_2 . equals ( key ) ) METHOD_2 ( ) ; else if ( ( ( TYPE_3 . equals ( key ) ) || ( TYPE_4 . equals ( key ) ) ) || ( TYPE_5 . equals ( key ) ) ) METHOD_3 ( ) ; else if ( TYPE_6 . equals ( key ) ) VAR_2 = TYPE_7 . METHOD_4 ( TYPE_6 ) ; else if ( TYPE_8 . equals ( key ) ) VAR_3 = TYPE_7 . METHOD_4 ( TYPE_8 ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { TYPE_1 < java.lang.String , java.lang.Integer > VAR_1 = new TYPE_2 ( ) ; java.lang.String VAR_2 = null ; for ( TYPE_3 VAR_3 : state . METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_2 = VAR_3 . METHOD_4 ( ) ; if ( VAR_1 . METHOD_5 ( VAR_2 ) ) { return VAR_4 . METHOD_6 ( ) ; } } return VAR_4 . METHOD_7 ( ) ; }\n", "fixed": "public int METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Integer > VAR_1 = new java.util.HashMap < > ( ) ; java.lang.String VAR_2 = null ; for ( TYPE_3 VAR_3 : state . METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_2 = VAR_3 . METHOD_4 ( ) ; if ( VAR_1 . METHOD_5 ( VAR_2 ) ) { return VAR_4 . METHOD_6 ( ) ; } } return VAR_4 . METHOD_7 ( ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_4 VAR_2 = ( ( TYPE_4 ) ( VAR_1 ) ) ; if ( VAR_2 . METHOD_2 ( ) ) { if ( ! ( TYPE_5 . METHOD_3 ( ) ) ) { return new TYPE_6 ( VAR_2 ) ; } return new TYPE_7 ( VAR_2 ) ; } return new TYPE_8 ( VAR_2 , false ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; if ( VAR_2 . METHOD_2 ( ) ) { if ( ! ( TYPE_5 . METHOD_3 ( ) ) ) { return new TYPE_6 ( VAR_2 ) ; } return new TYPE_7 ( VAR_2 ) ; } return new TYPE_8 ( VAR_2 , false ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_4 . METHOD_2 ( VAR_1 ) ) { if ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_2 ) ) { return VAR_3 ; } } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.util.List < TYPE_1 > list = VAR_4 . METHOD_2 ( VAR_1 ) ; for ( TYPE_1 VAR_3 : list ) { if ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_2 ) ) { return VAR_3 ; } } return null ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_3 ( STRING_1 ) ; return ; } VAR_3 . setText ( null ) ; VAR_3 . METHOD_4 ( true ) ; VAR_2 . METHOD_5 ( null ) ; METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_3 ( STRING_1 ) ; return ; } VAR_3 . setText ( null ) ; VAR_3 . METHOD_4 ( true ) ; VAR_2 . METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; }\n"}
{"problem": "public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; if ( VAR_1 . equals ( VAR_4 class ) ) { return VAR_1 . METHOD_3 ( TYPE_5 . METHOD_1 ( VAR_2 , VAR_3 ) ) ; } if ( VAR_1 . equals ( VAR_5 class ) ) { return VAR_1 . METHOD_3 ( TYPE_6 . METHOD_1 ( VAR_2 , VAR_3 ) ) ; } throw METHOD_4 ( VAR_1 ) ; }\n", "fixed": "public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws java.io.IOException { METHOD_2 ( VAR_1 ) ; if ( VAR_1 . equals ( VAR_5 class ) ) { return VAR_1 . METHOD_3 ( TYPE_6 . METHOD_1 ( VAR_2 , VAR_3 ) ) ; } if ( VAR_1 . equals ( VAR_4 class ) ) { return VAR_1 . METHOD_3 ( TYPE_5 . METHOD_1 ( VAR_2 , VAR_3 ) ) ; } throw METHOD_4 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( STRING_1 ) ; try { p . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_2 ) { java.util.logging.Logger.getLogger ( VAR_3 class . getName ( ) ) . METHOD_4 ( VAR_4 , STRING_2 , VAR_2 ) ; } } finally { VAR_1 . METHOD_1 ( ) ; this . VAR_5 . METHOD_5 ( ) ; this . VAR_6 = true ; } }\n", "fixed": "public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( STRING_1 ) ; try { p . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_2 ) { java.util.logging.Logger.getLogger ( VAR_3 class . getName ( ) ) . METHOD_4 ( VAR_4 , STRING_2 , VAR_2 ) ; } } finally { VAR_1 . METHOD_1 ( ) ; if ( ( this . VAR_5 ) != null ) { this . VAR_5 . METHOD_5 ( ) ; } this . VAR_6 = true ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) throws java.lang.Exception { TYPE_4 VAR_4 = new TYPE_4 ( ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) . METHOD_6 ( VAR_4 ) ; }\n", "fixed": "public TYPE_4 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) throws java.lang.Exception { TYPE_4 VAR_4 = new TYPE_4 ( ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) . METHOD_6 ( VAR_4 ) ; return VAR_4 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final java.util.Calendar c = java.util.Calendar.getInstance ( ) ; if ( ( VAR_2 ) == 0 ) { VAR_3 = c . get ( VAR_4 ) ; VAR_5 = c . get ( VAR_6 ) ; VAR_2 = c . get ( VAR_7 ) ; } TYPE_3 VAR_8 = new TYPE_3 ( getActivity ( ) , this , VAR_3 , VAR_5 , VAR_2 ) ; VAR_8 . METHOD_2 ( ) . METHOD_3 ( c . METHOD_4 ( ) ) ; return VAR_8 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final java.util.Calendar c = java.util.Calendar.getInstance ( ) ; if ( ( VAR_3 ) == 0 ) { VAR_3 = c . get ( VAR_4 ) ; VAR_5 = c . get ( VAR_6 ) ; VAR_2 = c . get ( VAR_7 ) ; } TYPE_3 VAR_8 = new TYPE_3 ( getActivity ( ) , this , VAR_3 , VAR_5 , VAR_2 ) ; VAR_8 . METHOD_2 ( ) . METHOD_3 ( c . METHOD_4 ( ) ) ; return VAR_8 ; }\n"}
{"problem": "private int [ ] METHOD_1 ( java.lang.String file , int length ) throws java.io.IOException { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . get ( file ) ) ; int [ ] data = new int [ length ] ; for ( int i = 0 ; i < ( data . length ) ; ++ i ) data [ i ] = new java.lang.Integer ( VAR_1 . get ( i ) ) ; return data ; }\n", "fixed": "private int [ ] METHOD_1 ( java.lang.String file , int length ) throws java.io.IOException { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . get ( file ) ) ; int [ ] data = new int [ length ] ; for ( int i = 0 ; i < ( data . length ) ; ++ i ) data [ i ] = new java.lang.Integer ( VAR_1 . get ( i ) . trim ( ) ) ; return data ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) != ( VAR_1 ) ) { return false ; } if ( event . METHOD_3 ( ) . isEmpty ( ) ) { return false ; } TYPE_2 VAR_2 = event . METHOD_4 ( ) ; if ( VAR_2 == null ) { return false ; } else if ( ! ( ( VAR_2 . getName ( ) ) instanceof TYPE_3 ) ) { return false ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) != ( VAR_1 ) ) { return false ; } TYPE_2 VAR_2 = event . METHOD_4 ( ) ; if ( VAR_2 == null ) { return false ; } else if ( ! ( ( VAR_2 . getName ( ) ) instanceof TYPE_3 ) ) { return false ; } return true ; }\n"}
{"problem": "public void show ( ) throws TYPE_1 { try { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( STRING_1 ) . METHOD_2 ( ) ; while ( VAR_1 . METHOD_3 ( ) ) { java.lang.System.out.println ( ( ( ( VAR_1 . getInt ( 1 ) ) + STRING_2 ) + ( VAR_1 . getString ( INT_1 ) ) ) ) ; } } catch ( java.lang.Exception VAR_3 ) { java.lang.System.out.println ( VAR_3 ) ; } finally { VAR_2 . METHOD_4 ( ) ; } }\n", "fixed": "public void show ( ) throws TYPE_1 { try { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( STRING_1 ) . METHOD_2 ( ) ; while ( VAR_1 . METHOD_3 ( ) ) { java.lang.System.out.println ( ( ( ( VAR_1 . getInt ( 1 ) ) + STRING_2 ) + ( VAR_1 . getString ( INT_1 ) ) ) ) ; } } catch ( java.lang.Exception VAR_3 ) { java.lang.System.out.println ( VAR_3 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( VAR_1 > ( VAR_2 ) ) { throw new TYPE_2 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) ) ; } TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = this . VAR_5 ; VAR_6 = this . VAR_2 ; VAR_7 = ( this . VAR_8 ) + VAR_1 ; VAR_9 = this . VAR_10 ; return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int VAR_1 ) { if ( VAR_1 > ( VAR_2 ) ) { throw new TYPE_2 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) ) ; } TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_4 = this . VAR_5 ; VAR_6 = ( this . VAR_2 ) - VAR_1 ; VAR_7 = ( this . VAR_8 ) + VAR_1 ; VAR_9 = this . VAR_10 ; return VAR_3 ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = METHOD_2 ( ) . put ( \"id\" , VAR_1 ) . METHOD_3 ( VAR_3 . METHOD_4 ( VAR_4 ) ) ; TYPE_1 < TYPE_2 > VAR_5 = new TYPE_1 ( ) ; TYPE_5 VAR_6 = VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_2 , new TYPE_6 ( METHOD_7 ( VAR_5 , new TYPE_2 ( ) , VAR_3 ) ) ) ; METHOD_8 ( VAR_5 , VAR_6 ) ; return VAR_5 ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = METHOD_2 ( ) . put ( \"id\" , VAR_1 . id ) . METHOD_3 ( VAR_3 . METHOD_4 ( VAR_4 ) ) ; TYPE_1 < TYPE_2 > VAR_5 = new TYPE_1 ( ) ; TYPE_5 VAR_6 = VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_2 , new TYPE_6 ( METHOD_7 ( VAR_5 , new TYPE_2 ( ) , VAR_3 ) ) ) ; METHOD_8 ( VAR_5 , VAR_6 ) ; return VAR_5 ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . size ( ) ) > 0 ) { VAR_2 . METHOD_4 ( VAR_3 ) ; } else { VAR_2 . METHOD_4 ( VAR_4 ) ; } VAR_5 . setText ( VAR_1 . METHOD_5 ( ) ) ; VAR_6 . setText ( ( ( getString ( VAR_7 ) ) + ( TYPE_2 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ) ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . size ( ) ) > 0 ) { VAR_2 . METHOD_4 ( VAR_3 ) ; } else { VAR_2 . METHOD_4 ( VAR_4 ) ; } VAR_5 . setText ( VAR_1 . METHOD_5 ( ) ) ; VAR_6 . setText ( TYPE_2 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . setText ( ( ( ( ( VAR_3 + STRING_1 ) + ( VAR_2 + 1 ) ) + STRING_1 ) + VAR_1 ) ) ; TYPE_2 VAR_5 = new TYPE_2 ( ) ; TYPE_2 VAR_6 = new TYPE_2 ( ) ; VAR_6 . set ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_5 . equals ( VAR_6 ) ) VAR_4 . setText ( METHOD_2 ( ) . getString ( VAR_7 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { VAR_4 . setText ( ( ( ( ( VAR_3 + STRING_1 ) + ( VAR_2 + 1 ) ) + STRING_1 ) + VAR_1 ) ) ; TYPE_2 VAR_5 = new TYPE_2 ( ) ; TYPE_2 VAR_6 = new TYPE_2 ( ) ; VAR_6 . set ( VAR_1 , VAR_2 , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { switch ( METHOD_2 ( VAR_1 ) ) { case 1 : TYPE_2 . METHOD_3 ( VAR_2 ) ; break ; case INT_1 : TYPE_2 . METHOD_4 ( VAR_2 ) ; break ; case INT_2 : TYPE_2 . METHOD_5 ( VAR_2 ) ; break ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { switch ( METHOD_2 ( VAR_1 ) ) { case 0 : TYPE_2 . METHOD_3 ( VAR_2 ) ; break ; case 1 : TYPE_2 . METHOD_4 ( VAR_2 ) ; break ; case INT_1 : TYPE_2 . METHOD_5 ( VAR_2 ) ; break ; } }\n"}
{"problem": "public java.lang.String execute ( ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( this . METHOD_1 ( ) ) ; for ( int i = 0 ; i < ( file . size ( ) ) ; i ++ ) { this . METHOD_2 ( i ) ; } return STRING_2 ; }\n", "fixed": "public java.lang.String execute ( ) throws java.lang.Exception { java.lang.System.out.println ( file ) ; java.lang.System.out.println ( this . METHOD_1 ( ) ) ; if ( ( file ) != null ) { for ( int i = 0 ; i < ( file . size ( ) ) ; i ++ ) { this . METHOD_2 ( i ) ; } } return STRING_2 ; }\n"}
{"problem": "void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . getId ( ) , VAR_1 . getName ( ) ) ; VAR_3 . METHOD_2 ( VAR_1 . getName ( ) , VAR_1 . getId ( ) ) ; VAR_4 . METHOD_2 ( VAR_1 . getName ( ) , new java.util.ArrayList < java.lang.String > ( ) ) ; }\n", "fixed": "void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) return ; VAR_2 . METHOD_2 ( VAR_1 . getId ( ) , VAR_1 . getName ( ) ) ; VAR_3 . METHOD_2 ( VAR_1 . getName ( ) , VAR_1 . getId ( ) ) ; VAR_4 . METHOD_2 ( VAR_1 . getName ( ) , new java.util.ArrayList < java.lang.String > ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( int step ) { if ( step == 1 ) { METHOD_2 ( ) ; METHOD_3 ( 0.0F , 1.0F , INT_1 , step ) ; } else if ( step == INT_2 ) { METHOD_3 ( 0.0F , 1.0F , INT_3 , step ) ; } }\n", "fixed": "private void METHOD_1 ( int step ) { if ( step == 1 ) { METHOD_2 ( ) ; METHOD_3 ( 0.0F , 1.0F , INT_1 , step ) ; } else if ( step == INT_2 ) { METHOD_3 ( 0.0F , 1.0F , INT_3 , step ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { final java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.String VAR_2 = ( ( ( ( VAR_1 + ( VAR_3 ) ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) + ( VAR_3 ) ; METHOD_3 ( VAR_2 ) ; java.lang.String VAR_4 = ( ( ( ( VAR_1 + ( VAR_3 ) ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) + ( VAR_3 ) ; METHOD_4 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { final java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( ) ; java.lang.String VAR_2 = ( ( ( ( VAR_1 + ( VAR_3 ) ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) + ( VAR_3 ) ; METHOD_3 ( VAR_2 ) ; java.lang.String VAR_4 = ( ( ( ( VAR_1 + ( VAR_3 ) ) + STRING_1 ) + ( VAR_3 ) ) + STRING_2 ) + ( VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 ; int VAR_3 ; for ( int i = 0 ; i < ( VAR_1 . METHOD_3 ( ) ) ; i ++ ) { VAR_2 = VAR_1 . METHOD_4 ( i ) ; VAR_3 = VAR_4 ; VAR_5 [ VAR_3 ] = VAR_2 ; VAR_6 = 0 ; } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 ; int VAR_3 ; for ( int i = 0 ; i < ( VAR_1 . METHOD_3 ( ) ) ; i ++ ) { VAR_2 = VAR_1 . METHOD_4 ( i ) ; VAR_3 = VAR_4 ; VAR_5 [ VAR_3 ] = VAR_2 ; VAR_6 = false ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 element = VAR_1 . get ( 0 ) ; for ( int i = 0 ; i < ( ( VAR_1 . size ( ) ) - 1 ) ; i ++ ) { VAR_1 . set ( i , VAR_1 . get ( ( i + 1 ) ) ) ; } VAR_1 . remove ( VAR_1 . size ( ) ) ; return element ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( ! ( isEmpty ( ) ) ) { TYPE_1 element = VAR_1 . get ( 0 ) ; for ( int i = 0 ; i < ( ( VAR_1 . size ( ) ) - 1 ) ; i ++ ) { VAR_1 . set ( i , VAR_1 . get ( ( i + 1 ) ) ) ; } VAR_1 . remove ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; return element ; } else return null ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { double VAR_3 = VAR_2 . get ( i ) . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 . get ( i ) . METHOD_3 ( ) , VAR_3 ) ; } return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { double VAR_3 = VAR_2 [ i ] . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 [ i ] . METHOD_3 ( ) , VAR_3 ) ; } return VAR_1 ; }\n"}
{"problem": "protected void METHOD_1 ( ) { source = new TYPE_1 < TYPE_2 > ( STRING_1 ) ; TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_2 = new TYPE_4 ( ) ; VAR_2 . METHOD_2 ( new TYPE_5 ( new java.util.ArrayList < java.lang.Integer > ( ) ) ) ; VAR_3 = new TYPE_6 < TYPE_7 > ( new TYPE_8 ( ) ) ; VAR_4 . METHOD_3 ( source , VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_2 , VAR_3 ) ; }\n", "fixed": "protected final void METHOD_1 ( ) { source = new TYPE_1 < TYPE_2 > ( STRING_1 ) ; TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_2 = new TYPE_4 ( ) ; VAR_2 . METHOD_2 ( new TYPE_5 ( new java.util.ArrayList < java.lang.Integer > ( ) ) ) ; VAR_3 = new TYPE_6 < TYPE_7 > ( new TYPE_8 ( ) ) ; VAR_4 . METHOD_3 ( source , VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_2 , VAR_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 type , int VAR_1 ) { switch ( type ) { case VAR_2 : METHOD_2 ( VAR_3 , VAR_4 , VAR_1 ) ; TYPE_2 . METHOD_3 ( main ) ; break ; case VAR_5 : METHOD_2 ( VAR_6 , VAR_7 , VAR_1 ) ; TYPE_3 . METHOD_3 ( main ) ; break ; default : throw new TYPE_4 ( ( ( STRING_1 + type ) + STRING_2 ) ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 type , int VAR_1 ) { switch ( type ) { case VAR_2 : METHOD_2 ( VAR_4 , VAR_1 ) ; TYPE_2 . METHOD_3 ( main ) ; break ; case VAR_5 : METHOD_2 ( VAR_7 , VAR_1 ) ; TYPE_3 . METHOD_3 ( main ) ; break ; default : throw new TYPE_4 ( ( ( STRING_1 + type ) + STRING_2 ) ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { try { java.lang.Class < ? > VAR_1 = java.lang.Class . METHOD_2 ( VAR_2 , true , VAR_3 class . METHOD_3 ( ) ) ; TYPE_2 VAR_4 = VAR_1 . METHOD_4 ( STRING_1 , java.lang.String [ ] . class ) ; TYPE_2 VAR_5 = VAR_1 . METHOD_4 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( STRING_3 ) ; return new TYPE_1 ( VAR_4 , VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { TYPE_3 . METHOD_5 ( STRING_3 , VAR_6 ) ; return null ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { try { java.lang.Class < ? > VAR_1 = java.lang.Class . METHOD_2 ( VAR_2 , true , VAR_3 class . METHOD_3 ( ) ) ; TYPE_2 VAR_4 = VAR_1 . METHOD_4 ( STRING_1 , java.lang.String [ ] . class ) ; TYPE_2 VAR_5 = VAR_1 . METHOD_4 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( STRING_3 ) ; return new TYPE_1 ( VAR_4 , VAR_5 ) ; } catch ( java.lang.Throwable VAR_6 ) { TYPE_3 . METHOD_5 ( STRING_3 , VAR_6 ) ; return null ; } }\n"}
{"problem": "protected java.lang.String build ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_1 . append ( name ) ; VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( type . toString ( ) ) ; METHOD_1 ( VAR_1 ) ; VAR_1 . append ( STRING_2 ) ; return VAR_1 . toString ( ) ; }\n", "fixed": "protected java.lang.String build ( ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ) ; VAR_1 . append ( name ) ; VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( type . toString ( ) ) ; METHOD_1 ( VAR_1 ) ; return VAR_1 . toString ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { TYPE_1 VAR_3 = null ; try { VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_4 ( STRING_2 , VAR_2 ) . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ) ; } catch ( TYPE_2 VAR_5 ) { } return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { TYPE_1 VAR_3 = null ; try { VAR_3 = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 . toLowerCase ( ) ) . METHOD_4 ( STRING_2 , VAR_2 ) . METHOD_5 ( 1 ) . METHOD_6 ( ) ) ) ; } catch ( TYPE_2 VAR_5 ) { } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . update ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_1 ( ) ; VAR_6 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 , new TYPE_1 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . update ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; VAR_5 . METHOD_1 ( ) ; VAR_6 . METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 , new TYPE_1 ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( double VAR_1 ) { if ( ! ( VAR_2 ) ) { if ( ( VAR_3 . METHOD_2 ( ) ) < VAR_1 ) { VAR_4 = ( VAR_3 . METHOD_3 ( this . METHOD_4 ( ) ) ) + ( this . METHOD_4 ( ) ) ; if ( ( this . VAR_4 ) != ( this . VAR_5 ) ) { this . METHOD_5 ( ) ; } } } }\n", "fixed": "public void METHOD_1 ( double VAR_1 ) { if ( ! ( VAR_2 ) ) { if ( ( VAR_3 . METHOD_2 ( ) ) < VAR_1 ) { VAR_4 = ( ( VAR_3 . METHOD_3 ( this . METHOD_4 ( ) ) ) + ( this . METHOD_4 ( ) ) ) - 1 ; if ( ( this . VAR_4 ) != ( this . VAR_5 ) ) { this . METHOD_5 ( ) ; } } } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) throws java.io.IOException { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_2 ( ) ; int VAR_4 = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; TYPE_2 VAR_5 = METHOD_4 ( ) ; return new TYPE_3 ( METHOD_5 ( VAR_3 ) , VAR_6 [ VAR_1 ] , VAR_7 [ VAR_4 ] , VAR_5 ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) throws java.io.IOException { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_2 ( ) ; int VAR_4 = VAR_2 . METHOD_2 ( ) ; TYPE_2 VAR_5 = METHOD_4 ( ) ; return new TYPE_3 ( METHOD_5 ( VAR_3 ) , VAR_6 [ VAR_1 ] , VAR_7 [ VAR_4 ] , VAR_5 ) ; }\n"}
{"problem": "TYPE_1 METHOD_1 ( ) { TYPE_2 < TYPE_3 < java.lang.Void > > array = new TYPE_2 ( ) ; TYPE_2 < TYPE_3 < java.lang.Void > > index = new TYPE_2 ( ) ; return METHOD_2 ( METHOD_3 ( ) , array . set ( METHOD_4 ( ) ) , METHOD_5 ( STRING_1 ) , METHOD_6 ( ) , index . set ( METHOD_4 ( ) ) , METHOD_5 ( STRING_2 ) , METHOD_7 ( new TYPE_4 ( array . get ( ) , index . get ( ) , VAR_1 ) ) , VAR_2 ) ; }\n", "fixed": "TYPE_1 METHOD_1 ( ) { TYPE_2 < TYPE_3 < java.lang.Void > > array = new TYPE_2 ( ) ; TYPE_2 < TYPE_3 < java.lang.Void > > index = new TYPE_2 ( ) ; return METHOD_2 ( array . set ( METHOD_4 ( ) ) , METHOD_5 ( STRING_1 ) , METHOD_6 ( ) , index . set ( METHOD_4 ( ) ) , METHOD_5 ( STRING_2 ) , METHOD_7 ( new TYPE_4 ( array . get ( ) , index . get ( ) , VAR_1 ) ) , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String name , java.lang.String state , java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 , int VAR_7 , int VAR_8 , int VAR_9 , int VAR_10 , int VAR_11 , int VAR_12 , int VAR_13 , int VAR_14 ) { VAR_15 . METHOD_2 ( name , state , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String name , java.lang.String state , java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 , int VAR_4 , int VAR_5 , int VAR_6 , int VAR_7 , int VAR_8 , int VAR_9 , int VAR_10 , int VAR_11 , int VAR_12 , int VAR_13 , int VAR_14 ) { }\n"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( ) { assert ( path . get ( ( ( path . size ( ) ) - 1 ) ) ) == null ; return path . METHOD_2 ( 0 , ( ( path . size ( ) ) - 1 ) ) ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( ) { if ( ( path . get ( ( ( path . size ( ) ) - 1 ) ) ) == null ) { return path . METHOD_2 ( 0 , ( ( path . size ( ) ) - 1 ) ) ; } return path ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; for ( java.lang.String VAR_3 : VAR_4 . values ( ) ) { if ( ( VAR_3 . startsWith ( STRING_1 ) ) && ( METHOD_2 ( VAR_3 ) ) ) { VAR_1 = true ; VAR_2 = true ; break ; } } if ( ( VAR_5 . equals ( STRING_2 ) ) || ( ! ( VAR_6 ) ) ) { VAR_2 = true ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = true ; for ( java.lang.String VAR_3 : VAR_4 . values ( ) ) { if ( ( VAR_3 . startsWith ( STRING_1 ) ) && ( METHOD_2 ( VAR_3 ) ) ) { VAR_1 = true ; VAR_2 = false ; break ; } } if ( ( VAR_5 . equals ( STRING_2 ) ) || ( ! ( VAR_6 ) ) ) { VAR_2 = false ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String filename , java.lang.String msg ) { if ( msg == null ) return ; try { java.io.FileOutputStream VAR_1 = METHOD_2 ( filename , VAR_2 ) ; VAR_1 . METHOD_3 ( msg . METHOD_4 ( ) ) ; java.io.File file = METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_7 ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String filename , java.lang.String msg ) { if ( msg == null ) return ; try { java.io.FileOutputStream VAR_1 = METHOD_2 ( filename , VAR_2 ) ; VAR_1 . METHOD_3 ( msg . METHOD_4 ( ) ) ; VAR_1 . METHOD_6 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_7 ( ) ; } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { java.io.File VAR_1 = new java.io.File ( STRING_1 ) ; java.io.File VAR_2 = new java.io.File ( VAR_1 , STRING_2 ) ; java.io.File VAR_3 = new java.io.File ( VAR_1 , STRING_3 ) ; java.io.File VAR_4 = new java.io.File ( VAR_1 , STRING_4 ) ; TYPE_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) throws java.lang.Exception { java.io.File VAR_1 = new java.io.File ( STRING_1 ) ; java.io.File VAR_2 = new java.io.File ( VAR_1 , STRING_2 ) ; java.io.File VAR_3 = new java.io.File ( VAR_1 , STRING_3 ) ; java.io.File VAR_4 = new java.io.File ( VAR_1 , STRING_4 ) ; TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) ; }\n"}
{"problem": "public TYPE_1 node ( int index ) { long VAR_1 = VAR_2 . METHOD_1 ( index ) ; long VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , index ) ; long VAR_4 = TYPE_3 . getId ( VAR_3 ) ; return new TYPE_3 ( VAR_2 , VAR_5 , VAR_6 , VAR_4 , VAR_3 ) ; }\n", "fixed": "public TYPE_1 node ( int index ) { long VAR_1 = VAR_2 . METHOD_1 ( index ) ; long VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , index ) ; long VAR_4 = TYPE_3 . getId ( VAR_3 ) ; return new TYPE_3 ( VAR_5 , VAR_6 , VAR_4 , VAR_3 ) ; }\n"}
{"problem": "protected java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 p = VAR_2 . METHOD_2 ( STRING_2 ) ; if ( p != null ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( p . METHOD_3 ( ) ) ) ; TYPE_2 VAR_4 = VAR_3 . METHOD_4 ( STRING_3 ) ; if ( VAR_4 != null ) { VAR_1 = VAR_4 . getValue ( ) ; } } return VAR_1 ; }\n", "fixed": "protected java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 p = VAR_2 . METHOD_2 ( STRING_2 ) ; if ( p != null ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( p . METHOD_3 ( ) ) ) ; if ( VAR_3 == null ) { return VAR_1 ; } TYPE_2 VAR_4 = VAR_3 . METHOD_4 ( STRING_3 ) ; if ( VAR_4 != null ) { VAR_1 = VAR_4 . getValue ( ) ; } } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_4 . METHOD_2 ( ) ) ) ; if ( VAR_3 == ( VAR_5 ) ) { VAR_2 = VAR_3 . getValue ( ) ; if ( VAR_2 > ( VAR_6 ) ) { VAR_3 . setValue ( VAR_6 ) ; } if ( VAR_2 < ( VAR_7 ) ) { VAR_3 . setValue ( VAR_7 ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_4 ) { int VAR_2 ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_4 . METHOD_2 ( ) ) ) ; if ( VAR_3 == ( VAR_5 ) ) { VAR_2 = VAR_3 . getValue ( ) ; if ( VAR_2 > ( VAR_6 ) ) { VAR_3 . setValue ( VAR_6 ) ; } if ( VAR_2 < ( VAR_7 ) ) { VAR_3 . setValue ( VAR_7 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_2 , INT_1 ) ; assertTrue ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; assertTrue ( VAR_2 . METHOD_4 ( ) . contains ( VAR_1 ) ) ; METHOD_5 ( VAR_2 . METHOD_6 ( ) . contains ( VAR_1 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_2 , INT_1 ) ; assertTrue ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; assertTrue ( VAR_2 . METHOD_4 ( ) . contains ( VAR_1 ) ) ; METHOD_5 ( VAR_2 . METHOD_6 ( ) . contains ( VAR_1 ) ) ; java.lang.System.out.println ( VAR_2 . METHOD_6 ( ) . contains ( VAR_1 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == ( - 1 ) ) this . VAR_2 . METHOD_2 ( 0 ) ; else if ( VAR_1 == 0 ) this . VAR_2 . METHOD_2 ( FLOAT_1 ) ; else this . VAR_2 . METHOD_2 ( 1 ) ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 1 ) this . VAR_2 . METHOD_2 ( 0 ) ; else if ( VAR_1 == 0 ) this . VAR_2 . METHOD_2 ( FLOAT_1 ) ; else this . VAR_2 . METHOD_2 ( 1 ) ; }\n"}
{"problem": "public static void METHOD_1 ( ) throws java.io.IOException { if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; java.io.File f = new java.io.File ( VAR_1 . getClass ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) ) ; TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_6 ( f ) ; } }\n", "fixed": "public static void METHOD_1 ( ) throws java.io.IOException { TYPE_2 VAR_1 = new TYPE_2 ( ) ; java.io.File f = new java.io.File ( VAR_1 . getClass ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) ) ; TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_6 ( f ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; java.util.List < java.util.HashMap > VAR_5 = VAR_6 . METHOD_3 ( ) ; java.util.List < TYPE_3 > VAR_7 = VAR_8 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( STRING_1 , VAR_7 ) ; VAR_2 . METHOD_5 ( STRING_2 , VAR_3 ) ; VAR_2 . METHOD_5 ( STRING_3 , STRING_4 ) ; VAR_2 . METHOD_5 ( STRING_5 , VAR_5 ) ; return STRING_6 ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; java.util.List < java.util.HashMap > VAR_5 = VAR_6 . METHOD_3 ( ) ; java.util.List < TYPE_3 > VAR_7 = VAR_8 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( STRING_1 , VAR_7 ) ; VAR_2 . METHOD_5 ( STRING_2 , VAR_3 ) ; VAR_2 . METHOD_5 ( STRING_3 , STRING_4 ) ; VAR_2 . METHOD_5 ( STRING_5 , VAR_5 ) ; return STRING_6 ; }\n"}
{"problem": "public int METHOD_1 ( int start ) { if ( start < 0 ) { throw new TYPE_1 ( STRING_1 ) ; } int result = start ; if ( result > 1 ) { result = start * ( METHOD_2 ( ( start - 1 ) ) ) ; } return result ; }\n", "fixed": "public int METHOD_1 ( int start ) { if ( start < 0 ) { throw new TYPE_1 ( STRING_1 ) ; } int result = start ; if ( result > 1 ) { result = start * ( METHOD_1 ( ( start - 1 ) ) ) ; } return result ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 response ) throws java.io.IOException { this . response = response ; TYPE_2 VAR_1 = response . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = response . METHOD_5 ( ) . METHOD_6 ( ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 response ) throws java.io.IOException { this . response = response ; VAR_3 = response . METHOD_5 ( ) . METHOD_6 ( ) ; TYPE_2 VAR_1 = response . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } else { VAR_2 = new byte [ 0 ] ; } }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.lang.String [ ] VAR_4 = VAR_1 . split ( STRING_1 ) ; boolean VAR_5 = this . VAR_6 . METHOD_2 ( VAR_4 [ 0 ] , VAR_2 , VAR_3 ) ; boolean VAR_7 = this . VAR_8 . METHOD_3 ( VAR_4 [ 1 ] , VAR_2 , VAR_3 ) ; boolean VAR_9 = this . VAR_10 . METHOD_1 ( VAR_4 [ INT_1 ] , VAR_2 , VAR_3 ) ; return ( VAR_5 && VAR_7 ) && VAR_9 ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.lang.String [ ] VAR_4 = VAR_1 . split ( STRING_1 ) ; boolean VAR_5 = this . VAR_6 . METHOD_2 ( VAR_4 [ 0 ] , VAR_2 , VAR_3 ) ; boolean VAR_9 = this . VAR_10 . METHOD_1 ( VAR_4 [ 1 ] , VAR_2 , VAR_3 ) ; return VAR_5 && VAR_9 ; }\n"}
{"problem": "public void METHOD_1 ( final java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 < java.lang.Void > VAR_2 = new TYPE_2 < java.lang.Void > ( ) { public java.lang.Void METHOD_2 ( ) throws java.lang.Exception { VAR_3 . METHOD_1 ( VAR_1 ) ; return null ; } } ; try { METHOD_3 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_3 . error ( STRING_1 , VAR_4 ) ; throw new TYPE_1 ( VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( final java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 < java.lang.Void > VAR_2 = new TYPE_2 < java.lang.Void > ( ) { public java.lang.Void METHOD_2 ( ) throws java.lang.Exception { VAR_3 . METHOD_1 ( VAR_1 ) ; return null ; } } ; try { METHOD_3 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_4 ) { throw new TYPE_1 ( VAR_4 ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; ++ i ) { java.lang.String VAR_2 = VAR_3 . METHOD_2 ( i ) ; int VAR_4 = METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( this ) . METHOD_5 ( VAR_4 ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 [ VAR_5 ] ) ; } }\n", "fixed": "private void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; ++ i ) { java.lang.String VAR_2 = VAR_3 . METHOD_2 ( i ) ; int VAR_4 = METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( this ) . METHOD_5 ( VAR_4 ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 [ i ] ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) > 0 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) > 0 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList ( VAR_1 ) ; VAR_1 . METHOD_2 ( ) ; this . METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 < TYPE_3 > function , TYPE_4 VAR_3 ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_1 , STRING_2 , STRING_3 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_5 ( VAR_1 , VAR_4 , VAR_2 , function , VAR_3 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 < TYPE_3 > function , TYPE_4 VAR_3 ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_5 ( VAR_1 , VAR_4 , VAR_2 , function , VAR_3 ) ) ; }\n"}
{"problem": "public double [ ] METHOD_1 ( ) { double VAR_1 = VAR_2 ; double VAR_3 = VAR_4 ; for ( TYPE_1 VAR_5 : VAR_6 ) { if ( ( ( VAR_5 . METHOD_2 ( ) ) < VAR_1 ) && ( ( VAR_5 . METHOD_2 ( ) ) > INT_1 ) ) VAR_1 = VAR_5 . METHOD_2 ( ) ; if ( ( VAR_5 . METHOD_2 ( ) ) > VAR_3 ) VAR_3 = VAR_5 . METHOD_2 ( ) ; } return new double [ ] { VAR_1 , VAR_3 } ; }\n", "fixed": "public double [ ] METHOD_1 ( ) { double VAR_1 = VAR_2 ; double VAR_3 = VAR_4 ; for ( TYPE_1 VAR_5 : VAR_6 ) { if ( ( VAR_5 . METHOD_2 ( ) ) < VAR_1 ) VAR_1 = VAR_5 . METHOD_2 ( ) ; if ( ( VAR_5 . METHOD_2 ( ) ) > VAR_3 ) VAR_3 = VAR_5 . METHOD_2 ( ) ; } return new double [ ] { VAR_1 , VAR_3 } ; }\n"}
{"problem": "protected java.lang.Long METHOD_1 ( TYPE_1 t ) { synchronized ( VAR_1 ) { if ( ( size ( ) ) >= ( VAR_2 ) ) return null ; long VAR_3 = VAR_4 ; if ( ( t . METHOD_2 ( ) ) <= 0L ) { t . METHOD_3 ( VAR_3 ) ; VAR_5 . put ( VAR_3 , t ) ; } else { VAR_5 . put ( t . METHOD_2 ( ) , t ) ; VAR_3 = t . METHOD_2 ( ) ; } return VAR_3 ; } }\n", "fixed": "protected java.lang.Long METHOD_1 ( TYPE_1 t ) { synchronized ( VAR_1 ) { if ( ( size ( ) ) >= ( VAR_2 ) ) return null ; long VAR_3 = ( VAR_4 ) ++ ; if ( ( t . METHOD_2 ( ) ) <= 0L ) { t . METHOD_3 ( VAR_3 ) ; VAR_5 . put ( VAR_3 , t ) ; } else { VAR_5 . put ( t . METHOD_2 ( ) , t ) ; VAR_3 = t . METHOD_2 ( ) ; } return VAR_3 ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String fileName ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( fileName ) ; try { TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_1 , true ) ; VAR_2 . info ( ( ( STRING_1 + fileName ) + STRING_2 ) ) ; } catch ( TYPE_5 VAR_3 ) { VAR_2 . error ( ( STRING_3 + fileName ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String fileName ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( fileName ) ; try { TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_1 , true ) ; VAR_2 . info ( ( ( STRING_1 + fileName ) + STRING_2 ) ) ; } catch ( TYPE_5 VAR_3 ) { VAR_2 . error ( ( STRING_3 + fileName ) , VAR_3 ) ; } }\n"}
{"problem": "public static int METHOD_1 ( int value ) { if ( ( 0 <= value ) && ( value < ( VAR_1 ) ) ) return 1 ; if ( value < 0 ) value = ( ( int ) ( - value ) ) ; if ( value < INT_1 ) return INT_2 ; if ( value < INT_3 ) return INT_4 ; if ( value < INT_5 ) return INT_6 ; return INT_7 ; }\n", "fixed": "public static int METHOD_1 ( int value ) { if ( ( 0 <= value ) && ( value < ( VAR_1 ) ) ) return 1 ; long temp = value ; if ( value < 0 ) temp = - value ; if ( temp < INT_1 ) return INT_2 ; if ( temp < INT_3 ) return INT_4 ; if ( temp < INT_5 ) return INT_6 ; return INT_7 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = 0 ; switch ( position ) { case 1 : VAR_2 += 1 ; TYPE_2 . METHOD_2 ( this , ( STRING_1 + ( VAR_2 ) ) , VAR_3 ) . show ( ) ; break ; case INT_1 : VAR_2 += INT_1 ; TYPE_2 . METHOD_2 ( this , ( STRING_2 + ( VAR_2 ) ) , VAR_3 ) . show ( ) ; break ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { VAR_2 = 0 ; switch ( position ) { case 1 : VAR_2 += 1 ; TYPE_2 . METHOD_2 ( this , STRING_1 , VAR_3 ) . show ( ) ; break ; case INT_1 : VAR_2 += INT_1 ; TYPE_2 . METHOD_2 ( this , STRING_2 , VAR_3 ) . show ( ) ; break ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; if ( ( VAR_2 ) == null ) { if ( VAR_1 != null ) { VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_5 ( ) ; TYPE_3 . info ( STRING_2 ) ; } else { TYPE_3 . info ( STRING_3 ) ; TYPE_3 . info ( STRING_4 ) ; VAR_3 = false ; } } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; if ( ( VAR_2 ) == null ) { if ( VAR_1 != null ) { VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_5 ( ) ; TYPE_3 . info ( STRING_2 ) ; } else { VAR_3 = false ; } } }\n"}
{"problem": "public java.lang.String getText ( ) { if ( ! ( METHOD_1 ( ) ) ) VAR_1 . METHOD_2 ( ) ; java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_2 . append ( VAR_3 . getText ( ) ) ; VAR_2 . append ( STRING_1 ) ; } VAR_2 . METHOD_3 ( ( ( VAR_2 . length ( ) ) - 1 ) ) ; return VAR_2 . toString ( ) ; }\n", "fixed": "public java.lang.String getText ( ) { if ( ! ( METHOD_1 ( ) ) ) VAR_1 . METHOD_2 ( ) ; java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; for ( TYPE_1 VAR_3 : VAR_4 ) { VAR_2 . append ( VAR_3 . getText ( ) ) ; VAR_2 . append ( STRING_1 ) ; } if ( ! ( VAR_4 . isEmpty ( ) ) ) VAR_2 . METHOD_3 ( ( ( VAR_2 . length ( ) ) - 1 ) ) ; return VAR_2 . toString ( ) ; }\n"}
{"problem": "public void METHOD_1 ( java.util.Calendar VAR_1 ) { VAR_2 = VAR_1 . get ( VAR_3 ) ; VAR_4 = ( VAR_1 . get ( VAR_5 ) ) + 1 ; date = VAR_1 . get ( VAR_6 ) ; VAR_7 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( getActivity ( ) , ( STRING_1 + ( VAR_1 . getTime ( ) ) ) , VAR_8 ) . show ( ) ; }\n", "fixed": "public void METHOD_1 ( java.util.Calendar VAR_1 ) { VAR_2 = VAR_1 . get ( VAR_3 ) ; VAR_4 = ( VAR_1 . get ( VAR_5 ) ) + 1 ; date = VAR_1 . get ( VAR_6 ) ; VAR_7 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { METHOD_2 ( java.lang.String.format ( STRING_1 , METHOD_3 ( ) , METHOD_4 ( ) ) ) ; VAR_1 = ( ( android.widget.LinearLayout ) ( getActivity ( ) . METHOD_5 ( VAR_2 ) ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( getActivity ( ) , message , VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_3 ) ; METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { METHOD_2 ( java.lang.String.format ( STRING_1 , METHOD_3 ( ) , METHOD_4 ( ) ) ) ; VAR_1 = ( ( android.widget.LinearLayout ) ( getActivity ( ) . METHOD_5 ( VAR_2 ) ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( getActivity ( ) , message , VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_3 , getActivity ( ) ) ; METHOD_6 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String message = ( ( STRING_1 + ( new java.util.Date ( ) . toString ( ) ) ) + STRING_2 ) + VAR_1 ; this . VAR_2 . add ( message ) ; this . VAR_3 . add ( message ) ; this . VAR_4 . METHOD_2 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String message = ( ( STRING_1 + ( new java.util.Date ( ) . toString ( ) ) ) + STRING_2 ) + VAR_1 ; this . VAR_2 . add ( message ) ; this . VAR_3 . add ( message ) ; this . VAR_4 . METHOD_1 ( VAR_1 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 = VAR_4 ; switch ( VAR_1 ) { case VAR_5 : METHOD_1 ( ( - 1 ) , 0 ) ; VAR_6 = true ; break ; case VAR_7 : METHOD_1 ( 1 , 0 ) ; VAR_6 = false ; break ; case VAR_8 : METHOD_1 ( 0 , 1 ) ; VAR_6 = false ; break ; case VAR_9 : METHOD_1 ( 0 , ( - 1 ) ) ; VAR_6 = true ; break ; default : break ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = 0 ; VAR_3 = VAR_4 ; switch ( VAR_1 ) { case VAR_5 : METHOD_1 ( ( - 1 ) , 0 ) ; VAR_6 = false ; break ; case VAR_7 : METHOD_1 ( 1 , 0 ) ; VAR_6 = true ; break ; case VAR_8 : METHOD_1 ( 0 , 1 ) ; VAR_6 = false ; break ; case VAR_9 : METHOD_1 ( 0 , ( - 1 ) ) ; VAR_6 = true ; break ; default : break ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String token , TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws java.lang.Exception { TYPE_5 VAR_4 = METHOD_2 ( VAR_3 ) ; java.lang.String VAR_5 = VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_4 . METHOD_4 ( VAR_6 ) ; VAR_7 . METHOD_5 ( VAR_4 ) ; return new TYPE_1 ( ( STRING_2 + VAR_5 ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws java.lang.Exception { TYPE_5 VAR_4 = METHOD_2 ( VAR_3 ) ; java.lang.String VAR_5 = VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_4 . METHOD_4 ( VAR_6 ) ; VAR_7 . METHOD_5 ( VAR_4 ) ; return new TYPE_1 ( ( STRING_2 + VAR_5 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ) { TYPE_3 VAR_4 = METHOD_4 ( VAR_2 ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_3 ) { for ( TYPE_2 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ) { TYPE_3 VAR_4 = METHOD_4 ( VAR_2 ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; } } } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = VAR_1 . METHOD_2 ( ) ; double VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_2 , VAR_3 ) ; VAR_5 . METHOD_4 ( new TYPE_3 ( ) . position ( VAR_4 ) ) ; VAR_5 . METHOD_5 ( TYPE_4 . METHOD_6 ( VAR_4 ) ) ; VAR_5 . METHOD_5 ( TYPE_4 . METHOD_7 ( INT_1 ) ) ; METHOD_8 ( VAR_2 , VAR_3 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } double VAR_2 = VAR_1 . METHOD_2 ( ) ; double VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_2 , VAR_3 ) ; VAR_5 . METHOD_4 ( new TYPE_3 ( ) . position ( VAR_4 ) ) ; VAR_5 . METHOD_5 ( TYPE_4 . METHOD_6 ( VAR_4 ) ) ; VAR_5 . METHOD_5 ( TYPE_4 . METHOD_7 ( INT_1 ) ) ; METHOD_8 ( VAR_2 , VAR_3 ) ; }\n"}
{"problem": "protected java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { java.util.HashMap < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , \"true\" ) ; VAR_1 . put ( STRING_4 , \"false\" ) ; VAR_1 . put ( STRING_5 , \"true\" ) ; VAR_1 . put ( STRING_6 , STRING_7 ) ; VAR_1 . put ( STRING_8 , STRING_9 ) ; VAR_1 . put ( VAR_2 , STRING_10 ) ; return VAR_1 ; }\n", "fixed": "protected java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { java.util.HashMap < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , \"true\" ) ; VAR_1 . put ( STRING_4 , \"false\" ) ; VAR_1 . put ( STRING_5 , \"true\" ) ; VAR_1 . put ( STRING_6 , STRING_7 ) ; VAR_1 . put ( VAR_2 , STRING_10 ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( byte [ ] data , TYPE_1 VAR_1 , int VAR_2 ) throws java.io.IOException { TYPE_2 VAR_3 ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_5 , VAR_2 , VAR_6 ) ; VAR_3 = new TYPE_2 ( VAR_4 , data ) ; VAR_3 . METHOD_2 ( ) ; data = VAR_3 . METHOD_3 ( ) ; VAR_7 . METHOD_4 ( new TYPE_4 ( data , data . length , VAR_1 , VAR_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( byte [ ] data ) throws java.io.IOException { TYPE_2 VAR_3 ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_5 , VAR_2 , VAR_6 ) ; VAR_3 = new TYPE_2 ( VAR_4 , data ) ; VAR_3 . METHOD_2 ( ) ; data = VAR_3 . METHOD_3 ( ) ; VAR_7 . METHOD_4 ( new TYPE_4 ( data , data . length , VAR_1 , VAR_2 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_3 ) ) { TYPE_1 . METHOD_3 ( getContext ( ) , ( ( STRING_1 + ( VAR_3 . getName ( ) ) ) + STRING_2 ) , VAR_4 ) . show ( ) ; TYPE_2 . METHOD_4 ( VAR_2 , getContext ( ) ) ; METHOD_5 ( ) ; } else { TYPE_1 . METHOD_3 ( getContext ( ) , ( STRING_3 + ( VAR_3 . getName ( ) ) ) , VAR_4 ) . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_3 ) ) { TYPE_1 . METHOD_3 ( getContext ( ) , ( ( STRING_1 + ( VAR_3 . getName ( ) ) ) + STRING_2 ) , VAR_4 ) . show ( ) ; TYPE_2 . METHOD_4 ( VAR_2 , getContext ( ) ) ; METHOD_5 ( ) ; } }\n"}
{"problem": "private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , STRING_1 ) ; if ( TYPE_2 . METHOD_3 ( VAR_2 ) ) { return VAR_2 ; } if ( TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . getName ( ) ) ) { return this . VAR_5 . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; } return VAR_2 ; }\n", "fixed": "private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_1 , VAR_3 , VAR_4 , STRING_1 ) ; if ( TYPE_2 . METHOD_3 ( VAR_2 ) ) { return VAR_2 ; } if ( ( VAR_1 . METHOD_4 ( ) ) != null ) { return this . VAR_5 . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + STRING_3 ) + ( VAR_3 ) ) + STRING_4 ) + ( VAR_4 ) ) + STRING_4 ) + ( VAR_5 ) ) + STRING_4 ) + ( VAR_6 ) ) + ( VAR_7 ) ) + STRING_5 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + STRING_3 ) + ( VAR_3 ) ) + STRING_4 ) + ( VAR_4 ) ) + STRING_4 ) + ( VAR_5 ) ) + STRING_4 ) + ( VAR_6 ) ) + STRING_4 ) + ( VAR_7 ) ) + STRING_5 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { try { super . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_1 ) { TYPE_1 . error ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; } if ( ! ( VAR_2 ) ) { METHOD_3 ( ) ; } TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { try { super . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_1 ) { TYPE_1 . error ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; } if ( ! ( VAR_2 ) ) { METHOD_3 ( ) ; } if ( ( VAR_3 ) != null ) { TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( int VAR_1 , java.lang.Integer VAR_2 ) { if ( VAR_1 == 0 ) return METHOD_2 ( VAR_2 ) ; if ( ( context . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) == null ) context . METHOD_5 ( VAR_3 . METHOD_4 ( ) , new java.util.Date ( ) . getTime ( ) ) ; if ( ( ( long ) ( context . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) ) > VAR_1 ) return METHOD_2 ( VAR_2 ) ; return \"false\" ; }\n", "fixed": "public java.lang.String METHOD_1 ( long VAR_1 , java.lang.Integer VAR_2 ) { if ( VAR_1 == 0 ) return METHOD_2 ( VAR_2 ) ; if ( ( context . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) == null ) context . METHOD_5 ( VAR_3 . METHOD_4 ( ) , new java.util.Date ( ) . getTime ( ) ) ; if ( ( ( long ) ( context . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) ) > VAR_1 ) return METHOD_2 ( VAR_2 ) ; return \"false\" ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 . path ) ; METHOD_4 ( VAR_1 ) ; TYPE_2 VAR_3 = METHOD_5 ( VAR_1 ) ; TYPE_3 . assertEquals ( VAR_4 . length , VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; VAR_3 . METHOD_8 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 . path ) ; METHOD_4 ( VAR_1 ) ; TYPE_2 VAR_3 = METHOD_5 ( VAR_1 ) ; assertEquals ( VAR_4 . length , VAR_3 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; VAR_3 . METHOD_8 ( ) ; }\n"}
{"problem": "public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_2 . METHOD_2 ( ( ( java.util.List < java.lang.String > ) ( TYPE_1 . get ( VAR_1 ) ) ) ) ; return VAR_2 ; }\n", "fixed": "public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; if ( ( TYPE_1 . get ( VAR_1 ) ) == null ) return VAR_2 ; VAR_2 . METHOD_2 ( ( ( java.util.List < java.lang.String > ) ( TYPE_1 . get ( VAR_1 ) ) ) ) ; return VAR_2 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; for ( java.lang.String expr : VAR_1 . split ( STRING_1 ) ) { VAR_2 . add ( expr ) ; } return new TYPE_1 ( VAR_2 ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; for ( java.lang.String expr : VAR_1 . split ( STRING_1 ) ) { if ( ( expr . length ( ) ) == 0 ) { VAR_2 . add ( STRING_1 ) ; } else { VAR_2 . add ( expr ) ; } } return new TYPE_1 ( VAR_2 ) ; }\n"}
{"problem": "private void METHOD_1 ( int VAR_1 ) { long VAR_2 = ( VAR_3 ) - ( size ) ; for ( long VAR_4 = VAR_1 - VAR_2 ; VAR_4 >= 0 ; VAR_4 -= VAR_5 ) { VAR_6 . add ( METHOD_2 ( ) ) ; } if ( ( VAR_7 . METHOD_3 ( ) ) == 0 ) { METHOD_4 ( ) ; } VAR_3 += VAR_1 ; }\n", "fixed": "private void METHOD_1 ( int VAR_1 ) { long VAR_2 = ( VAR_3 ) - ( size ) ; for ( long VAR_4 = VAR_1 - VAR_2 ; VAR_4 >= 0 ; VAR_4 -= VAR_5 ) { VAR_6 . add ( METHOD_2 ( ) ) ; VAR_3 += VAR_5 ; } if ( ( VAR_7 . METHOD_3 ( ) ) == 0 ) { METHOD_4 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; if ( ( VAR_2 . METHOD_3 ( ) ) == ( VAR_3 ) ) { VAR_2 . METHOD_4 ( true ) ; VAR_2 . start ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) { public void METHOD_5 ( ) { VAR_5 = ( VAR_5 ) + 1 ; VAR_6 . METHOD_6 ( this , INT_1 ) ; } } ; VAR_6 . METHOD_7 ( VAR_4 ) ; VAR_6 . METHOD_8 ( VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) { public void METHOD_5 ( ) { VAR_5 = ( VAR_5 ) + 1 ; VAR_6 . METHOD_6 ( this , INT_1 ) ; } } ; if ( ( VAR_2 . METHOD_3 ( ) ) == ( VAR_3 ) ) { VAR_2 . METHOD_4 ( true ) ; VAR_2 . start ( ) ; VAR_5 = - 1 ; VAR_6 . METHOD_7 ( VAR_4 ) ; VAR_6 . METHOD_8 ( VAR_4 ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_2 ( VAR_1 . getName ( ) ) ; TYPE_2 . METHOD_3 ( STRING_2 ) ; METHOD_4 ( ) ; VAR_2 = VAR_1 ; VAR_3 = STRING_3 ; METHOD_5 ( VAR_1 ) ; VAR_3 = STRING_4 ; boolean VAR_4 = METHOD_6 ( VAR_1 ) ; if ( ( METHOD_7 ( ) ) == 1 ) return ; VAR_3 = STRING_5 ; METHOD_8 ( VAR_1 ) ; if ( VAR_4 ) METHOD_9 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_2 ( VAR_1 . getName ( ) ) ; TYPE_2 . METHOD_3 ( STRING_2 ) ; VAR_2 = VAR_1 ; METHOD_4 ( ) ; VAR_3 = STRING_3 ; METHOD_5 ( VAR_1 ) ; VAR_3 = STRING_4 ; boolean VAR_4 = METHOD_6 ( VAR_1 ) ; if ( ( METHOD_7 ( ) ) == 1 ) return ; VAR_3 = STRING_5 ; METHOD_8 ( VAR_1 ) ; if ( VAR_4 ) METHOD_9 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { METHOD_2 ( INT_1 ) ; METHOD_3 ( 0 ) ; METHOD_4 ( VAR_1 [ 0 ] , VAR_1 [ 1 ] , VAR_1 [ INT_2 ] ) ; METHOD_5 ( VAR_2 , VAR_3 , size , size ) ; for ( int i = 0 ; i < ( VAR_4 . size ( ) ) ; i ++ ) { TYPE_1 VAR_5 = VAR_4 . get ( i ) ; VAR_5 . METHOD_1 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { METHOD_2 ( INT_2 ) ; METHOD_3 ( 0 ) ; METHOD_4 ( VAR_1 [ 0 ] , VAR_1 [ 1 ] , VAR_1 [ INT_2 ] ) ; METHOD_5 ( VAR_2 , VAR_3 , size , size ) ; for ( int i = 0 ; i < ( VAR_4 . size ( ) ) ; i ++ ) { TYPE_1 VAR_5 = VAR_4 . get ( i ) ; VAR_5 . METHOD_1 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { java.io.File VAR_2 = new java.io.File ( ( ( VAR_3 . path ) + VAR_1 ) ) ; if ( ! ( VAR_2 . METHOD_2 ( ) ) ) try { VAR_2 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_4 ) { java.lang.System.out.println ( VAR_4 . METHOD_4 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { java.io.File VAR_2 = new java.io.File ( ( ( path ) + VAR_1 ) ) ; if ( ! ( VAR_2 . METHOD_2 ( ) ) ) try { VAR_2 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_4 ) { java.lang.System.out.println ( VAR_4 . METHOD_4 ( ) ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { java.util.List < byte [ ] > VAR_1 = VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , 0L , ( - 1L ) ) ; for ( byte [ ] update : VAR_1 ) { METHOD_6 ( update ) ; } VAR_3 = ( VAR_1 . size ( ) ) - 1L ; }\n", "fixed": "private void METHOD_1 ( ) { java.util.List < byte [ ] > VAR_1 = VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , ( ( VAR_3 ) + 1 ) , ( - 1L ) ) ; for ( byte [ ] update : VAR_1 ) { METHOD_6 ( update ) ; } VAR_3 += VAR_1 . size ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_1 VAR_3 = null ; java.lang.String VAR_4 = VAR_5 . METHOD_2 ( STRING_1 , ( ( VAR_1 + STRING_2 ) + VAR_2 ) ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_6 class ) ; TYPE_4 . info ( ( ( ( ( STRING_3 + VAR_1 ) + STRING_2 ) + VAR_2 ) + STRING_4 ) ) ; return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_1 VAR_3 = null ; java.lang.String VAR_4 = VAR_5 . METHOD_2 ( STRING_1 , ( ( VAR_1 + STRING_2 ) + VAR_2 ) ) ; VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_6 class ) ; return VAR_3 ; }\n"}
{"problem": "public void init ( ) throws java.io.IOException , TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_1 ( INT_1 ) ; VAR_4 = new TYPE_3 ( VAR_1 ) ; VAR_4 . start ( ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; VAR_6 = VAR_4 . METHOD_3 ( ) ; VAR_4 . start ( ) ; }\n", "fixed": "public void init ( ) throws java.io.IOException , TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_1 ( INT_1 ) ; VAR_4 = new TYPE_3 ( VAR_1 ) ; VAR_5 = VAR_4 . METHOD_2 ( ) ; VAR_6 = VAR_4 . METHOD_3 ( ) ; VAR_4 . start ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { for ( int VAR_1 = 0 ; VAR_1 <= ( ( rows ) / INT_1 ) ; VAR_1 ++ ) { for ( int c = 0 ; c <= ( ( rows ) / INT_1 ) ; c ++ ) { boolean VAR_2 = METHOD_2 ( VAR_1 , c , 1 ) ; if ( VAR_2 ) return ; this . METHOD_3 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( ) { this . METHOD_3 ( ) ; for ( int VAR_1 = 0 ; VAR_1 <= ( ( rows ) / INT_1 ) ; VAR_1 ++ ) { for ( int c = 0 ; c <= ( ( rows ) / INT_1 ) ; c ++ ) { boolean VAR_2 = METHOD_2 ( VAR_1 , c , 1 ) ; if ( VAR_2 ) return ; this . METHOD_3 ( ) ; } } }\n"}
{"problem": "private int METHOD_1 ( int VAR_1 ) { int VAR_2 = 0 ; int [ ] VAR_3 = new int [ ] { INT_1 , INT_2 , 1 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 } ; VAR_2 = VAR_3 [ ( VAR_1 - 1 ) ] ; return VAR_2 ; }\n", "fixed": "private int METHOD_1 ( int VAR_1 ) { int VAR_2 = 0 ; int [ ] VAR_3 = new int [ ] { INT_1 , INT_2 , 1 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 } ; if ( VAR_1 != 0 ) VAR_2 = VAR_3 [ ( VAR_1 - 1 ) ] ; return VAR_2 ; }\n"}
{"problem": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { for ( java.io.File f : TYPE_1 . METHOD_2 ( ) ) { java.lang.String fileName = f . getName ( ) ; if ( VAR_1 . equals ( fileName . substring ( 0 , ( ( ( fileName . length ( ) ) - ( TYPE_2 . length ( ) ) ) - 1 ) ) . replaceAll ( STRING_1 , STRING_2 ) ) ) { return true ; } } return false ; }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { for ( java.io.File f : TYPE_1 . METHOD_2 ( ) ) { java.lang.String fileName = f . getName ( ) ; if ( VAR_1 . equals ( fileName . substring ( 0 , ( ( ( fileName . length ( ) ) - ( TYPE_2 . length ( ) ) ) - 1 ) ) ) ) { return true ; } } return false ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { return false ; } else { int count = VAR_2 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( count ) ; VAR_3 . METHOD_5 ( STRING_1 , STRING_2 ) ; VAR_4 . METHOD_5 ( STRING_3 , STRING_4 ) ; return true ; } }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { return false ; } else { int count = VAR_2 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( count ) ; VAR_3 . METHOD_5 ( STRING_1 , STRING_4 ) ; VAR_4 . METHOD_5 ( STRING_3 , STRING_4 ) ; return true ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 item ) { int index = VAR_1 . METHOD_2 ( item ) ; if ( index >= 0 ) { return ; } TYPE_1 target = VAR_1 . get ( ( index - 1 ) ) ; VAR_1 . set ( ( index - 1 ) , item ) ; VAR_1 . set ( index , target ) ; item . METHOD_3 ( ( index - 1 ) ) ; target . METHOD_3 ( index ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 item ) { int index = VAR_1 . METHOD_2 ( item ) ; if ( index <= 0 ) { return ; } TYPE_1 target = VAR_1 . get ( ( index - 1 ) ) ; VAR_1 . set ( ( index - 1 ) , item ) ; VAR_1 . set ( index , target ) ; item . METHOD_3 ( ( index - 1 ) ) ; target . METHOD_3 ( index ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 . getString ( VAR_3 . METHOD_2 ( VAR_4 ) ) . equals ( STRING_1 ) ) { android.content.Intent VAR_5 = new android.content.Intent ( this , VAR_6 class ) ; VAR_5 . METHOD_3 ( \"id\" , VAR_7 ) ; VAR_5 . METHOD_4 ( VAR_8 ) ; METHOD_5 ( VAR_5 ) ; } else { VAR_9 . METHOD_6 ( VAR_7 ) ; } METHOD_7 ( ) ; VAR_1 . METHOD_8 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { if ( VAR_3 . getString ( VAR_3 . METHOD_2 ( VAR_4 ) ) . equals ( STRING_1 ) ) { android.content.Intent VAR_5 = new android.content.Intent ( this , VAR_6 class ) ; VAR_5 . METHOD_3 ( \"id\" , VAR_7 ) ; VAR_5 . METHOD_4 ( VAR_8 ) ; METHOD_5 ( VAR_5 ) ; VAR_9 . METHOD_6 ( VAR_7 ) ; } else { VAR_9 . METHOD_6 ( VAR_7 ) ; } METHOD_7 ( ) ; VAR_1 . METHOD_8 ( ) ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( int n ) { java.lang.String VAR_1 = STRING_1 ; if ( n > INT_1 ) { VAR_1 += TYPE_1 . METHOD_1 ( ( ( n - 1 ) / INT_1 ) ) ; n -= INT_1 ; } int VAR_2 = ( n - 1 ) % INT_1 ; int VAR_3 = VAR_2 + INT_2 ; VAR_1 += ( ( char ) ( VAR_3 ) ) ; return VAR_1 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( int n ) { java.lang.String VAR_1 = STRING_1 ; if ( n > INT_1 ) { VAR_1 += TYPE_1 . METHOD_1 ( ( ( n - 1 ) / INT_1 ) ) ; } int VAR_2 = ( n - 1 ) % INT_1 ; int VAR_3 = VAR_2 + INT_2 ; VAR_1 += ( ( char ) ( VAR_3 ) ) ; return VAR_1 ; }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 = false ; int index = 0 ; for ( java.lang.String VAR_3 : VAR_4 ) { if ( VAR_1 . equals ( VAR_3 ) ) { VAR_2 = true ; break ; } index ++ ; } if ( VAR_2 ) VAR_4 . remove ( index ) ; return VAR_2 ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 = false ; if ( VAR_1 == null ) return VAR_2 ; int index = 0 ; for ( java.lang.String VAR_3 : VAR_4 ) { if ( VAR_1 . equals ( VAR_3 ) ) { VAR_2 = true ; break ; } index ++ ; } if ( VAR_2 ) VAR_4 . remove ( index ) ; return VAR_2 ; }\n"}
{"problem": "public boolean put ( java.lang.String key , TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = get ( key ) ; if ( VAR_2 == null ) { if ( ( ( VAR_3 ) != null ) && ( VAR_1 != null ) ) VAR_2 = VAR_3 . put ( key , VAR_1 ) ; } return VAR_2 == VAR_1 ; }\n", "fixed": "public void put ( java.lang.String key , TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = get ( key ) ; if ( VAR_2 == null ) { if ( ( ( VAR_3 ) != null ) && ( VAR_1 != null ) ) VAR_2 = VAR_3 . put ( key , VAR_1 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String key ) throws java.io.IOException { try { if ( ! ( METHOD_2 ( key ) ) ) { return null ; } TYPE_2 VAR_1 = VAR_2 . METHOD_3 ( VAR_3 , key ) ; return new TYPE_1 ( key , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) . getTime ( ) ) ; } catch ( TYPE_3 VAR_4 ) { if ( VAR_4 . METHOD_6 ( ) . contains ( STRING_1 ) ) { return null ; } return null ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String key ) throws java.io.IOException { try { if ( ! ( METHOD_2 ( key ) ) ) { return null ; } TYPE_2 VAR_1 = VAR_2 . METHOD_3 ( VAR_3 , key ) ; return new TYPE_1 ( key , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) . getTime ( ) ) ; } catch ( java.lang.Exception VAR_4 ) { if ( VAR_4 . METHOD_6 ( ) . contains ( STRING_1 ) ) { return null ; } return null ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { final java.lang.Thread VAR_1 = java.lang.Thread . METHOD_2 ( ) ; final TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( ) ; try { TYPE_3 . METHOD_4 ( new TYPE_4 ( VAR_1 ) ) ; TYPE_5 . METHOD_5 ( INT_1 ) ; } finally { TYPE_3 . METHOD_4 ( VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { final java.lang.Thread VAR_1 = java.lang.Thread . METHOD_2 ( ) ; final TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( ) ; try { TYPE_3 . METHOD_4 ( new TYPE_4 ( VAR_1 ) ) ; TYPE_5 . METHOD_5 ( new byte [ INT_1 ] ) ; } finally { TYPE_3 . METHOD_4 ( VAR_2 ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_3 ) ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 = new TYPE_4 ( METHOD_7 ( ) ) ; METHOD_8 ( ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_3 ) ; VAR_10 = new TYPE_4 ( METHOD_7 ( ) ) ; METHOD_8 ( ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { int VAR_1 = 0 ; for ( TYPE_1 [ ] VAR_2 : VAR_3 ) { for ( TYPE_1 VAR_4 : VAR_2 ) { if ( VAR_4 != null ) { if ( ! ( VAR_4 . getColor ( ) ) ) VAR_1 += VAR_4 . getValue ( ) ; else VAR_1 -= VAR_4 . getValue ( ) ; } } } return VAR_1 ; }\n", "fixed": "public int METHOD_1 ( ) { int VAR_1 = 0 ; for ( TYPE_1 [ ] VAR_2 : VAR_3 ) { for ( TYPE_1 VAR_4 : VAR_2 ) { if ( VAR_4 != null ) { if ( VAR_4 . getColor ( ) ) VAR_1 += VAR_4 . getValue ( ) ; else VAR_1 -= VAR_4 . getValue ( ) ; } } } return VAR_1 ; }\n"}
{"problem": "public static int METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 , TYPE_3 VAR_4 ) { TYPE_4 VAR_5 = VAR_1 . METHOD_2 ( VAR_2 . add ( VAR_4 . METHOD_3 ( ) , VAR_4 . METHOD_4 ( ) , VAR_4 . METHOD_5 ( ) ) ) ; if ( ( VAR_5 != null ) && ( TYPE_5 . METHOD_6 ( VAR_5 , VAR_4 ) ) ) { return TYPE_5 . METHOD_7 ( VAR_5 , VAR_3 , VAR_4 , false ) ; } return 0 ; }\n", "fixed": "public static int METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 , TYPE_3 VAR_4 ) { TYPE_4 VAR_5 = VAR_1 . METHOD_2 ( VAR_2 . offset ( VAR_4 ) ) ; if ( ( VAR_5 != null ) && ( TYPE_5 . METHOD_6 ( VAR_5 , VAR_4 ) ) ) { return TYPE_5 . METHOD_7 ( VAR_5 , VAR_3 , VAR_4 , false ) ; } return 0 ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) >= 0 ) return ; VAR_2 = new TYPE_1 < TYPE_2 , TYPE_3 > ( VAR_3 class ) ; VAR_4 = new java.util.LinkedList < TYPE_2 > ( ) ; VAR_5 = new java.util.HashMap < TYPE_2 , java.lang.Integer > ( ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_6 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_2 = new TYPE_1 < TYPE_2 , TYPE_3 > ( VAR_3 class ) ; VAR_4 = new java.util.LinkedList < TYPE_2 > ( ) ; VAR_5 = new java.util.HashMap < TYPE_2 , java.lang.Integer > ( ) ; METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_6 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 type , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { if ( ( null == ( name ) ) || ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_3 ( false ) ; } TYPE_5 VAR_3 = ( ( TYPE_5 ) ( METHOD_4 ( VAR_2 ) . METHOD_5 ( METHOD_6 ( ) , null ) ) ) ; VAR_3 . METHOD_7 ( type , VAR_1 , VAR_2 ) ; return VAR_3 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 type , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { if ( ( null == ( name ) ) || ( VAR_2 . METHOD_2 ( ) ) ) { METHOD_3 ( false ) ; } TYPE_5 VAR_3 = ( ( TYPE_5 ) ( METHOD_4 ( VAR_2 ) . METHOD_5 ( METHOD_6 ( ) , null ) ) ) ; if ( VAR_3 != null ) VAR_3 . METHOD_7 ( type , VAR_1 , VAR_2 ) ; return VAR_3 ; }\n"}
{"problem": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_1 VAR_3 = null ; for ( TYPE_2 VAR_4 : VAR_1 ) { VAR_3 = new TYPE_1 ( VAR_4 , STRING_1 , null , null ) ; VAR_2 . add ( VAR_3 ) ; } return VAR_2 ; }\n", "fixed": "private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_3 ; for ( TYPE_2 VAR_4 : VAR_1 ) { VAR_3 = new TYPE_1 ( VAR_4 , STRING_1 , null , null ) ; VAR_2 . add ( VAR_3 ) ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . init ( ) ; VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_3 ) ; TYPE_3 . METHOD_4 ( STRING_3 , VAR_1 ) ; VAR_4 = new TYPE_4 ( ) ; VAR_4 . METHOD_5 ( ) ; VAR_5 = new TYPE_5 ( ) ; VAR_6 = new TYPE_6 ( ) ; VAR_7 = new TYPE_7 ( ) ; VAR_8 = 0 ; VAR_9 = new TYPE_8 ( ) ; VAR_9 . init ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . init ( ) ; VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_2 , VAR_3 ) ; TYPE_3 . METHOD_4 ( STRING_3 , VAR_1 ) ; VAR_4 = new TYPE_4 ( ) ; VAR_4 . METHOD_5 ( ) ; VAR_5 = new TYPE_5 ( ) ; VAR_6 = new TYPE_6 ( ) ; VAR_7 = new TYPE_7 ( ) ; VAR_8 = 0 ; }\n"}
{"problem": "public int METHOD_1 ( int VAR_1 ) { double VAR_2 = VAR_3 ; int VAR_4 = - 1 ; for ( int i = 0 ; i < ( VAR_5 ) ; i ++ ) { if ( ( VAR_6 [ VAR_1 ] [ i ] ) < VAR_2 ) { VAR_4 = i ; } } return VAR_4 ; }\n", "fixed": "public int METHOD_1 ( int VAR_1 ) { double VAR_2 = VAR_3 ; int VAR_4 = - 1 ; for ( int i = 0 ; i < ( VAR_5 ) ; i ++ ) { if ( ( VAR_6 [ VAR_1 ] [ i ] ) < VAR_2 ) { VAR_4 = i ; } } return VAR_4 + 1 ; }\n"}
{"problem": "void METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 - ( VAR_3 ) ; VAR_3 = VAR_1 ; VAR_4 = ( ( ( ( VAR_4 ) * ( VAR_5 ) ) - 1 ) + ( VAR_2 ) ) / ( VAR_5 ) ; }\n", "fixed": "void METHOD_1 ( ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 - ( VAR_3 ) ; VAR_3 = VAR_1 ; VAR_4 = ( ( ( VAR_4 ) * ( ( VAR_5 ) - 1 ) ) + ( VAR_2 ) ) / ( VAR_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { this . METHOD_2 ( ) ; if ( TYPE_2 . METHOD_3 ( ) ) { for ( TYPE_3 VAR_2 : VAR_1 . METHOD_4 ( ) ) { VAR_3 . METHOD_5 ( VAR_2 ) ; } } VAR_4 . METHOD_6 ( TYPE_4 . METHOD_7 ( ) . METHOD_8 ( ) , TYPE_2 . METHOD_9 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( TYPE_2 . METHOD_3 ( ) ) { for ( TYPE_3 VAR_2 : VAR_1 . METHOD_4 ( ) ) { VAR_3 . METHOD_5 ( VAR_2 ) ; } } VAR_4 . METHOD_6 ( TYPE_4 . METHOD_7 ( ) . METHOD_8 ( ) , TYPE_2 . METHOD_9 ( ) ) ; }\n"}
{"problem": "private java.lang.String buffer ( long number ) { java.lang.String VAR_1 = java.lang.Long . toString ( number ) ; java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; for ( int i = VAR_1 . length ( ) ; i < INT_1 ; i ++ ) { VAR_2 . append ( CHAR_1 ) ; } return VAR_2 . append ( VAR_1 ) . toString ( ) ; }\n", "fixed": "private static java.lang.String buffer ( long number ) { java.lang.String VAR_1 = java.lang.Long . toString ( number ) ; java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; for ( int i = VAR_1 . length ( ) ; i < INT_1 ; i ++ ) { VAR_2 . append ( CHAR_1 ) ; } return VAR_2 . append ( VAR_1 ) . toString ( ) ; }\n"}
{"problem": "private void build ( java.io.File f ) throws java.io.IOException , java.lang.ClassNotFoundException , TYPE_1 { METHOD_1 ( f ) ; TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_3 ( STRING_3 ) ; METHOD_4 ( new java.io.File ( STRING_4 ) , ( ( ( TYPE_3 . METHOD_5 ( ) ) / INT_1 ) - ( VAR_3 ) ) ) ; VAR_1 . METHOD_6 ( ) ; }\n", "fixed": "private void build ( java.io.File f ) throws java.io.IOException , java.lang.ClassNotFoundException , TYPE_1 { METHOD_1 ( f ) ; TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_3 ( STRING_3 ) ; VAR_1 . METHOD_6 ( ) ; }\n"}
{"problem": "public void start ( TYPE_1 VAR_1 ) { TYPE_2 context = TYPE_2 . METHOD_1 ( ) ; context . METHOD_2 ( ( - 1 ) ) ; try { if ( ( VAR_2 ) != ( VAR_3 ) ) { VAR_2 . METHOD_3 ( context , VAR_4 , VAR_4 , new java.lang.Object [ ] { VAR_1 } ) ; } } finally { TYPE_2 . METHOD_4 ( ) ; } }\n", "fixed": "public void start ( TYPE_1 VAR_1 ) { TYPE_2 context = TYPE_2 . METHOD_1 ( ) ; context . METHOD_2 ( ( - 1 ) ) ; try { if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( context , VAR_4 , VAR_4 , new java.lang.Object [ ] { VAR_1 } ) ; } } finally { TYPE_2 . METHOD_4 ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( STRING_1 + ( ( VAR_2 . METHOD_4 ( ) ) / INT_1 ) ) + STRING_2 ) , ( ( ( VAR_3 . METHOD_5 ( ) ) / INT_2 ) - INT_3 ) , ( ( ( VAR_3 . METHOD_6 ( ) ) / INT_2 ) - INT_4 ) ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( STRING_1 + ( ( ( VAR_2 . METHOD_4 ( ) ) / INT_1 ) + 1 ) ) + STRING_2 ) , ( ( ( VAR_3 . METHOD_5 ( ) ) / INT_2 ) - INT_3 ) , ( ( ( VAR_3 . METHOD_6 ( ) ) / INT_2 ) - INT_4 ) ) ; } }\n"}
{"problem": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.ArrayList < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == VAR_1 ) { list . add ( VAR_2 ) ; } } return list ; }\n", "fixed": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.ArrayList < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_2 != null ) && ( ( VAR_2 . METHOD_2 ( ) ) == VAR_1 ) ) { list . add ( VAR_2 ) ; } } return list ; }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; int VAR_4 = VAR_1 . METHOD_3 ( VAR_2 ) ; int VAR_5 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_6 . METHOD_5 ( VAR_1 . METHOD_6 ( VAR_4 ) , VAR_1 . METHOD_7 ( VAR_4 ) , VAR_4 , VAR_5 ) ; return false ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { TYPE_2 . METHOD_2 ( VAR_3 , ( STRING_1 + VAR_2 ) ) ; int VAR_4 = VAR_1 . METHOD_3 ( VAR_2 ) ; int VAR_5 = VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_6 . METHOD_5 ( VAR_1 . METHOD_6 ( VAR_5 ) , VAR_1 . METHOD_7 ( VAR_5 ) , VAR_4 , VAR_5 ) ; return false ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { if ( ( ( ( VAR_1 . METHOD_2 ( ) ) > INT_1 ) && ( ( VAR_1 . METHOD_2 ( ) ) < INT_2 ) ) && ( VAR_2 . METHOD_3 ( ) ) ) { if ( ! ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ) return ; event . METHOD_5 ( true ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { if ( VAR_2 . METHOD_3 ( ) ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) > INT_1 ) && ( ( VAR_1 . METHOD_2 ( ) ) < INT_2 ) ) return ; if ( ! ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ) return ; event . METHOD_5 ( true ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == null ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( this ) ) ) { METHOD_3 ( VAR_1 ) ; if ( ( METHOD_4 ( ) ) < ( VAR_1 . METHOD_5 ( ) ) ) VAR_2 . METHOD_6 ( VAR_1 ) ; } else if ( ( VAR_1 . METHOD_2 ( ) ) != ( this ) ) METHOD_7 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == null ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( this ) ) ) { if ( ( METHOD_3 ( VAR_1 ) ) == ( - 1 ) ) VAR_2 . METHOD_6 ( VAR_1 ) ; } else if ( ( VAR_1 . METHOD_2 ( ) ) != ( this ) ) METHOD_7 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( final java.lang.String VAR_1 ) throws TYPE_1 { final TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; while ( true ) { if ( ( VAR_2 . equals ( VAR_3 ) ) && ( VAR_4 . get ( ) ) ) { break ; } else if ( ( VAR_2 . equals ( VAR_5 ) ) && ( ! ( VAR_4 . get ( ) ) ) ) { break ; } java.lang.Thread . METHOD_3 ( INT_1 ) ; } }\n", "fixed": "public void METHOD_1 ( final java.lang.String VAR_1 ) throws TYPE_1 { final TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; while ( true ) { synchronized ( VAR_4 ) { if ( ( VAR_2 . equals ( VAR_3 ) ) && ( VAR_4 ) ) { break ; } else if ( ( VAR_2 . equals ( VAR_5 ) ) && ( ! ( VAR_4 ) ) ) { break ; } } java.lang.Thread . METHOD_3 ( INT_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_1 . size ( ) ) < INT_1 ) return ; if ( VAR_2 == null ) return ; if ( ( VAR_3 ) == 1 ) METHOD_2 ( VAR_1 , VAR_2 ) ; if ( ( VAR_3 ) == INT_1 ) METHOD_3 ( VAR_1 , VAR_2 ) ; if ( ( VAR_3 ) == INT_2 ) METHOD_4 ( VAR_1 , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_1 . size ( ) ) < 1 ) return ; if ( VAR_2 == null ) return ; if ( ( VAR_3 ) == 1 ) METHOD_2 ( VAR_1 , VAR_2 ) ; if ( ( VAR_3 ) == INT_1 ) METHOD_3 ( VAR_1 , VAR_2 ) ; if ( ( VAR_3 ) == INT_2 ) METHOD_4 ( VAR_1 , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; try { METHOD_2 ( STRING_2 , STRING_3 , null ) ; fail ( ( STRING_4 + VAR_1 ) ) ; } catch ( TYPE_1 VAR_2 ) { assertEquals ( VAR_1 . toString ( ) , VAR_2 . toString ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; try { METHOD_2 ( STRING_2 , STRING_3 ) ; fail ( ( STRING_4 + VAR_1 ) ) ; } catch ( TYPE_1 VAR_2 ) { assertEquals ( VAR_1 . toString ( ) , VAR_2 . toString ( ) ) ; } }\n"}
{"problem": "public static java.util.ArrayList < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { TYPE_2 VAR_3 = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . get ( i ) , VAR_4 class ) ; TYPE_4 . METHOD_3 ( VAR_3 ) ; VAR_2 . add ( VAR_3 . METHOD_4 ( ) ) ; } return VAR_2 ; }\n", "fixed": "public static java.util.ArrayList < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { TYPE_2 VAR_3 = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . get ( i ) , VAR_4 class ) ; TYPE_4 . METHOD_3 ( VAR_3 ) ; VAR_2 . add ( VAR_3 . getId ( ) ) ; } return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 out , java.util.Iterator < TYPE_2 > value ) throws java.io.IOException { out . METHOD_2 ( ) ; while ( value . METHOD_3 ( ) ) { METHOD_4 ( out , value . METHOD_5 ( ) ) ; } out . METHOD_6 ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 out , java.util.Iterator < TYPE_2 > value ) throws java.io.IOException { out . METHOD_2 ( ) ; try { while ( value . METHOD_3 ( ) ) { METHOD_4 ( out , value . METHOD_5 ( ) ) ; } } finally { out . METHOD_6 ( ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) throws java.io.IOException { TYPE_1 VAR_2 = new TYPE_1 ( ( ( this . VAR_3 ) * ( METHOD_2 ( ) ) ) , METHOD_3 ( ) , STRING_1 , this . VAR_4 ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; VAR_1 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_2 . METHOD_8 ( ) ; return VAR_2 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) throws java.io.IOException { TYPE_1 VAR_2 = new TYPE_1 ( ( ( this . VAR_3 ) * ( METHOD_2 ( ) ) ) , METHOD_3 ( ) , STRING_1 , null ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; VAR_1 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_2 . METHOD_8 ( ) ; return VAR_2 ; }\n"}
{"problem": "protected int id ( ) { return ( ( ( INT_1 < < INT_2 ) | ( ( ( id ) & INT_1 ) < < INT_3 ) ) | ( ( ( ( id ) > > INT_4 ) & INT_1 ) < < INT_4 ) ) | ( ( ( id ) > > INT_3 ) & INT_1 ) ; }\n", "fixed": "public int id ( ) { return ( ( ( INT_1 < < INT_2 ) | ( ( ( id ) & INT_1 ) < < INT_3 ) ) | ( ( ( ( id ) > > INT_4 ) & INT_1 ) < < INT_4 ) ) | ( ( ( id ) > > INT_3 ) & INT_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_3 VAR_2 = null ; try { VAR_2 = event . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( STRING_2 ) ; VAR_3 . METHOD_5 ( VAR_4 ) ; } catch ( TYPE_4 VAR_5 ) { TYPE_2 . METHOD_2 ( VAR_1 , ( STRING_3 + ( VAR_5 . METHOD_6 ( ) ) ) ) ; } TYPE_2 . METHOD_2 ( VAR_1 , STRING_4 ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; TYPE_3 VAR_2 = null ; try { VAR_2 = event . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( STRING_2 ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; } catch ( TYPE_4 VAR_5 ) { TYPE_2 . METHOD_2 ( VAR_1 , ( STRING_3 + ( VAR_5 . METHOD_6 ( ) ) ) ) ; } TYPE_2 . METHOD_2 ( VAR_1 , STRING_4 ) ; }\n"}
{"problem": "private static void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { int VAR_2 = ( ( int ) ( ( java.lang.Math.random ( ) ) * ( VAR_1 . size ( ) ) ) ) ; TYPE_1 VAR_3 = VAR_1 . get ( VAR_2 ) ; if ( ! ( VAR_4 ) ) { VAR_4 = true ; VAR_5 = VAR_3 ; java.lang.System.out.println ( ( STRING_1 + ( VAR_3 . name ) ) ) ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; } else { TYPE_2 . METHOD_1 ( VAR_1 ) ; } }\n", "fixed": "private static void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { int VAR_2 = ( ( int ) ( ( java.lang.Math.random ( ) ) * ( VAR_1 . size ( ) ) ) ) ; TYPE_1 VAR_3 = VAR_1 . get ( VAR_2 ) ; if ( ! ( VAR_4 ) ) { VAR_4 = true ; VAR_5 = VAR_3 ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; } else { TYPE_2 . METHOD_1 ( VAR_1 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_4 . METHOD_3 ( VAR_2 ) ; java.lang.String VAR_5 = VAR_4 . METHOD_4 ( ) . replace ( CHAR_1 , CHAR_2 ) ; return TYPE_4 . METHOD_5 ( ) . METHOD_1 ( ( ( VAR_5 + STRING_1 ) + VAR_3 ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_4 . METHOD_3 ( VAR_2 ) ; java.lang.String VAR_5 = VAR_4 . METHOD_4 ( ) ; return TYPE_4 . METHOD_5 ( ) . METHOD_1 ( ( ( VAR_5 + STRING_1 ) + VAR_3 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( new TYPE_1 ( null ) , true ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( METHOD_6 ( ) ) ; if ( ! ( VAR_2 . METHOD_7 ( ) ) ) { METHOD_3 ( new TYPE_4 ( ) , false ) ; } }\n", "fixed": "private void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( METHOD_6 ( ) ) ; if ( ! ( VAR_2 . METHOD_7 ( ) ) ) { METHOD_3 ( new TYPE_4 ( true ) , true ) ; } else { METHOD_3 ( new TYPE_1 ( null ) , true ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { java.lang.String result = null ; java.lang.String VAR_4 = ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_1 ) + STRING_3 ; TYPE_2 VAR_5 = null ; try { VAR_5 = VAR_3 . METHOD_2 ( VAR_4 ) ; if ( VAR_5 . METHOD_3 ( ) ) { result = VAR_2 ; } } catch ( TYPE_3 VAR_6 ) { VAR_6 . METHOD_4 ( ) ; } return result ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { java.lang.String result = null ; java.lang.String VAR_4 = ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) + STRING_3 ; TYPE_2 VAR_5 = null ; try { VAR_5 = VAR_3 . METHOD_2 ( VAR_4 ) ; if ( VAR_5 . METHOD_3 ( ) ) { result = VAR_2 ; } } catch ( TYPE_3 VAR_6 ) { VAR_6 . METHOD_4 ( ) ; } return result ; }\n"}
{"problem": "public static boolean METHOD_1 ( ) { java.lang.Object VAR_1 = TYPE_1 . getContext ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 . toString ( ) . equals ( STRING_1 ) ) { return false ; } TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; return VAR_2 . METHOD_4 ( ) . contains ( new TYPE_3 ( STRING_2 ) ) ; }\n", "fixed": "public static boolean METHOD_1 ( ) { java.lang.Object VAR_1 = TYPE_1 . getContext ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 . toString ( ) . equals ( STRING_1 ) ) { return false ; } TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; boolean result = VAR_2 . METHOD_4 ( ) . contains ( new TYPE_3 ( STRING_2 ) ) ; return result ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_2 x = VAR_1 . getValue ( VAR_3 class ) ; if ( VAR_4 . equals ( x . METHOD_4 ( ) ) ) { java.lang.System.out.println ( VAR_5 ) ; METHOD_5 ( VAR_2 ) ; } else { java.lang.System.out.println ( VAR_6 ) ; METHOD_6 ( ) ; } } else { java.lang.System.out.println ( VAR_6 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_2 x = VAR_1 . getValue ( VAR_3 class ) ; if ( VAR_4 . equals ( x . METHOD_4 ( ) ) ) { java.lang.System.out.println ( VAR_5 ) ; METHOD_5 ( VAR_2 ) ; } else { java.lang.System.out.println ( VAR_6 ) ; METHOD_6 ( ) ; } } else { java.lang.System.out.println ( VAR_6 ) ; METHOD_6 ( ) ; } }\n"}
{"problem": "public synchronized java.lang.Void METHOD_1 ( ) { for ( java.lang.String VAR_1 : words ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( VAR_1 ) ; update ( ) ; try { java.lang.Thread . METHOD_4 ( INT_1 ) ; } catch ( java.lang.Exception VAR_3 ) { } } else { break ; } } VAR_4 . METHOD_5 ( ) ; return null ; }\n", "fixed": "public synchronized java.lang.Void METHOD_1 ( ) { for ( java.lang.String VAR_1 : words ) { if ( ! ( METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( VAR_1 ) ; update ( ) ; } else { break ; } } VAR_4 . METHOD_5 ( ) ; return null ; }\n"}
{"problem": "public void METHOD_1 ( ) { for ( int i = 1 ; i < ( VAR_1 . size ( ) ) ; i += INT_1 ) { byte [ ] k = VAR_1 . get ( i ) ; byte [ ] VAR_2 = VAR_1 . get ( ( i + 1 ) ) ; keys . add ( k ) ; VAR_3 . put ( k , VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { for ( int i = 1 ; i < ( ( VAR_1 . size ( ) ) + 1 ) ; i += INT_1 ) { byte [ ] k = VAR_1 . get ( i ) ; byte [ ] VAR_2 = VAR_1 . get ( ( i + 1 ) ) ; keys . add ( k ) ; VAR_3 . put ( k , VAR_2 ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_3 ( VAR_4 ) ; VAR_7 . METHOD_3 ( VAR_4 ) ; VAR_8 . METHOD_3 ( VAR_9 ) ; VAR_10 . METHOD_3 ( VAR_9 ) ; VAR_11 . METHOD_3 ( VAR_9 ) ; VAR_12 = VAR_13 ; TYPE_1 . METHOD_4 ( true , this ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_14 , VAR_15 , VAR_16 , VAR_17 , VAR_18 , VAR_19 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_3 ( VAR_4 ) ; VAR_7 . METHOD_3 ( VAR_4 ) ; VAR_8 . METHOD_3 ( VAR_9 ) ; VAR_10 . METHOD_3 ( VAR_9 ) ; VAR_11 . METHOD_3 ( VAR_9 ) ; VAR_12 = VAR_13 ; TYPE_1 . METHOD_4 ( true , this ) ; METHOD_5 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { long VAR_2 = VAR_3 . METHOD_2 ( VAR_4 ) ; long VAR_5 = VAR_3 . METHOD_3 ( VAR_6 ) ; while ( VAR_5 != VAR_2 ) { java.lang.String VAR_7 = METHOD_4 ( VAR_5 ) ; if ( ( VAR_7 != null ) && ( VAR_7 . startsWith ( STRING_1 ) ) ) { TYPE_2 VAR_8 = METHOD_5 ( VAR_1 , VAR_7 ) ; if ( VAR_8 != null ) { VAR_9 . put ( VAR_5 , VAR_8 ) ; } } VAR_5 = VAR_3 . METHOD_3 ( VAR_5 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { long VAR_5 = VAR_3 . METHOD_3 ( VAR_6 ) ; while ( VAR_5 != ( VAR_2 ) ) { java.lang.String VAR_7 = METHOD_4 ( VAR_5 ) ; if ( ( VAR_7 != null ) && ( VAR_7 . startsWith ( STRING_1 ) ) ) { TYPE_2 VAR_8 = METHOD_5 ( VAR_1 , VAR_7 ) ; if ( VAR_8 != null ) { VAR_9 . put ( VAR_5 , VAR_8 ) ; } } VAR_5 = VAR_3 . METHOD_3 ( VAR_5 ) ; } }\n"}
{"problem": "public long METHOD_1 ( final java.lang.Object obj , final long VAR_1 , final long value ) { long VAR_2 ; do { VAR_2 = VAR_3 . METHOD_2 ( obj , VAR_1 ) ; } while ( ! ( VAR_3 . METHOD_3 ( obj , VAR_1 , VAR_2 , value ) ) ) ; return VAR_2 ; }\n", "fixed": "public synchronized long METHOD_1 ( final java.lang.Object obj , final long VAR_1 , final long value ) { long VAR_2 ; do { VAR_2 = VAR_3 . METHOD_2 ( obj , VAR_1 ) ; } while ( ! ( VAR_3 . METHOD_3 ( obj , VAR_1 , VAR_2 , value ) ) ) ; return VAR_3 . METHOD_2 ( obj , VAR_1 ) ; }\n"}
{"problem": "private static boolean METHOD_1 ( TYPE_1 b , int VAR_1 ) { if ( ! ( TYPE_2 . METHOD_2 ( b , VAR_1 , STRING_1 ) ) ) return false ; boolean VAR_2 ; TYPE_3 VAR_3 = TYPE_2 . METHOD_3 ( b ) ; VAR_2 = TYPE_4 . METHOD_4 ( b , ( VAR_1 + 1 ) ) ; if ( ! VAR_2 ) VAR_2 = TYPE_4 . METHOD_5 ( b , ( VAR_1 + 1 ) ) ; TYPE_2 . METHOD_6 ( b , VAR_3 , null , VAR_2 ) ; return VAR_2 ; }\n", "fixed": "private static boolean METHOD_1 ( TYPE_1 b , int VAR_1 ) { if ( ! ( METHOD_2 ( b , VAR_1 , STRING_1 ) ) ) return false ; boolean VAR_2 ; TYPE_3 VAR_3 = METHOD_3 ( b ) ; VAR_2 = TYPE_4 . METHOD_4 ( b , ( VAR_1 + 1 ) ) ; if ( ! VAR_2 ) VAR_2 = TYPE_4 . METHOD_5 ( b , ( VAR_1 + 1 ) ) ; METHOD_6 ( b , VAR_3 , null , VAR_2 ) ; return VAR_2 ; }\n"}
{"problem": "public static int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { int j ; int k ; int VAR_5 ; VAR_5 = VAR_1 ; for ( j = 0 ; j < VAR_2 ; j ++ ) { VAR_5 = VAR_5 + ( VAR_3 < < INT_1 ) ; for ( k = 0 ; k < VAR_4 ; k ++ ) { } TYPE_1 . METHOD_2 ( VAR_6 ) ; TYPE_1 . METHOD_3 ( VAR_7 , VAR_5 ) ; } return VAR_5 ; }\n", "fixed": "public static int METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { int j ; int k ; int VAR_5 ; VAR_5 = VAR_1 ; for ( j = 0 ; j < VAR_2 ; j ++ ) { VAR_5 = VAR_5 + ( VAR_3 < < INT_1 ) ; for ( k = 0 ; k < VAR_4 ; k ++ ) { } TYPE_1 . METHOD_3 ( VAR_7 , VAR_5 ) ; } return VAR_5 ; }\n"}
{"problem": "public TYPE_1 [ ] METHOD_1 ( java.net.URL VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = VAR_3 . remove ( VAR_1 ) ; if ( VAR_2 == null ) { return new TYPE_1 [ 0 ] ; } else { synchronized ( VAR_2 ) { VAR_4 -= VAR_2 . size ( ) ; return VAR_2 . METHOD_2 ( new TYPE_1 [ VAR_2 . size ( ) ] ) ; } } }\n", "fixed": "public TYPE_1 [ ] METHOD_1 ( java.net.URL VAR_1 ) { synchronized ( VAR_3 ) { java.util.ArrayList < TYPE_1 > VAR_2 = VAR_3 . remove ( VAR_1 ) ; if ( VAR_2 == null ) { return new TYPE_1 [ 0 ] ; } else { synchronized ( VAR_2 ) { VAR_4 -= VAR_2 . size ( ) ; return VAR_2 . METHOD_2 ( new TYPE_1 [ VAR_2 . size ( ) ] ) ; } } } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) . METHOD_2 ( VAR_5 . METHOD_3 ( ) . getString ( VAR_1 ) ) . METHOD_4 ( VAR_5 . METHOD_3 ( ) . getString ( VAR_6 ) , VAR_2 ) . METHOD_5 ( VAR_5 . METHOD_3 ( ) . getString ( VAR_7 ) , VAR_3 ) . METHOD_6 ( false ) . METHOD_7 ( ) ; VAR_4 . show ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String message , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) . METHOD_2 ( message ) . METHOD_4 ( VAR_5 . METHOD_3 ( ) . getString ( VAR_6 ) , VAR_2 ) . METHOD_5 ( VAR_5 . METHOD_3 ( ) . getString ( VAR_7 ) , VAR_3 ) . METHOD_6 ( false ) . METHOD_7 ( ) ; VAR_4 . show ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_3 = VAR_4 . METHOD_4 ( ) ; VAR_5 = VAR_4 . METHOD_5 ( ) ; TYPE_2 VAR_6 = new TYPE_2 ( VAR_3 , VAR_5 ) ; VAR_2 . METHOD_6 ( new TYPE_3 ( ) . position ( VAR_6 ) . title ( STRING_1 ) ) ; TYPE_4 VAR_7 = METHOD_7 ( ) ; VAR_7 . METHOD_8 ( VAR_8 , VAR_9 , this ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 ; METHOD_2 ( ) ; METHOD_3 ( ) ; if ( ( VAR_4 ) != null ) { VAR_3 = VAR_4 . METHOD_4 ( ) ; VAR_5 = VAR_4 . METHOD_5 ( ) ; TYPE_2 VAR_6 = new TYPE_2 ( VAR_3 , VAR_5 ) ; VAR_2 . METHOD_6 ( new TYPE_3 ( ) . position ( VAR_6 ) . title ( STRING_1 ) ) ; TYPE_4 VAR_7 = METHOD_7 ( ) ; VAR_7 . METHOD_8 ( VAR_8 , VAR_9 , this ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { int VAR_1 = 0 ; boolean VAR_2 = false ; while ( ! VAR_2 ) { VAR_1 ++ ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_2 = VAR_4 . METHOD_5 ( VAR_3 , null , false ) ; if ( VAR_1 > INT_1 ) { TYPE_2 . METHOD_6 ( ( STRING_1 + STRING_2 ) ) ; this . VAR_5 = TYPE_3 . METHOD_7 ( ) . METHOD_8 ( METHOD_9 ( ) ) ; break ; } } }\n", "fixed": "private void METHOD_1 ( ) { int VAR_1 = 0 ; boolean VAR_2 = false ; while ( ! VAR_2 ) { VAR_1 ++ ; TYPE_1 VAR_3 = VAR_4 . METHOD_2 ( ) ; METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; VAR_2 = VAR_4 . METHOD_5 ( VAR_3 , null , false , false ) ; if ( VAR_1 > INT_1 ) { TYPE_2 . METHOD_6 ( ( STRING_1 + STRING_2 ) ) ; this . VAR_5 = TYPE_3 . METHOD_7 ( ) . METHOD_8 ( METHOD_9 ( ) ) ; break ; } } }\n"}
{"problem": "public int METHOD_1 ( boolean VAR_1 ) { int VAR_2 = 0 ; if ( ( VAR_3 . METHOD_2 ( ) ) && VAR_1 ) VAR_2 = - INT_1 ; else if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( ! VAR_1 ) ) VAR_2 = - INT_1 ; java.lang.System.out.println ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + ( VAR_3 . METHOD_2 ( ) ) ) ) ; return VAR_2 ; }\n", "fixed": "public int METHOD_1 ( boolean VAR_1 ) { int VAR_2 = 0 ; if ( ( VAR_3 . METHOD_2 ( ) ) && ( ! VAR_1 ) ) VAR_2 = - INT_1 ; else if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && VAR_1 ) VAR_2 = - INT_1 ; java.lang.System.out.println ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + ( VAR_3 . METHOD_2 ( ) ) ) ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . setEnabled ( true ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; } else { VAR_2 . METHOD_2 ( false ) ; VAR_3 . setEnabled ( false ) ; VAR_4 . METHOD_3 ( VAR_6 ) ; } }\n", "fixed": "public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . setEnabled ( true ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; } else { VAR_2 . METHOD_2 ( false ) ; VAR_3 . setEnabled ( false ) ; VAR_4 . METHOD_3 ( VAR_6 ) ; } VAR_4 . setEnabled ( true ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.util.Random VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( VAR_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ) return VAR_2 ; else { float VAR_4 = VAR_3 . get ( VAR_2 . METHOD_3 ( ) ) ; float f = VAR_1 . METHOD_4 ( ) ; if ( f < VAR_4 ) return METHOD_5 ( VAR_1 , ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) ) ; else return VAR_2 ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.util.Random VAR_1 , TYPE_1 VAR_2 , java.lang.String type ) { if ( ! ( VAR_3 . METHOD_2 ( type ) ) ) return VAR_2 ; else { float VAR_4 = VAR_3 . get ( type ) ; float f = VAR_1 . METHOD_4 ( ) ; if ( f < VAR_4 ) return METHOD_5 ( VAR_1 , ( STRING_1 + type ) ) ; else return VAR_2 ; } }\n"}
{"problem": "protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , byte [ ] value ) { android.content.Intent intent = new android.content.Intent ( VAR_3 ) ; intent . METHOD_2 ( VAR_4 , VAR_1 ) ; intent . METHOD_2 ( VAR_5 , VAR_2 ) ; intent . METHOD_2 ( VAR_6 , value ) ; METHOD_3 ( intent ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , byte [ ] value ) { android.content.Intent intent = new android.content.Intent ( VAR_3 ) ; intent . METHOD_2 ( VAR_4 , VAR_1 ) ; intent . METHOD_2 ( VAR_5 , VAR_2 ) ; intent . METHOD_2 ( VAR_6 , value ) ; METHOD_3 ( intent ) ; }\n"}
{"problem": "public static < TYPE_1 > TYPE_2 < TYPE_1 > not ( final TYPE_2 < TYPE_1 > VAR_1 ) { return new TYPE_2 < TYPE_1 > ( ) { public boolean METHOD_1 ( TYPE_1 value ) { return ! ( VAR_1 . METHOD_1 ( value ) ) ; } } ; }\n", "fixed": "public static < TYPE_1 > TYPE_2 < TYPE_1 > not ( final TYPE_2 < TYPE_1 > a ) { return new TYPE_2 < TYPE_1 > ( ) { public boolean METHOD_1 ( TYPE_1 value ) { return ! ( a . METHOD_1 ( value ) ) ; } } ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.System.out.print ( STRING_1 ) ; java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; double VAR_2 = java.lang.Double . METHOD_4 ( VAR_1 ) ; VAR_3 = VAR_2 ; if ( ( ( VAR_4 ) <= FLOAT_1 ) && ( ( VAR_4 ) >= FLOAT_2 ) ) { VAR_4 = ( VAR_4 ) + ( VAR_3 ) ; } else { java.lang.System.out.println ( STRING_2 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { java.lang.System.out.print ( STRING_1 ) ; java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; double VAR_2 = java.lang.Double . METHOD_4 ( VAR_1 ) ; VAR_3 = VAR_2 ; if ( ( ( VAR_3 ) <= FLOAT_1 ) && ( ( VAR_3 ) >= FLOAT_2 ) ) { VAR_4 = ( VAR_4 ) + ( VAR_3 ) ; } else { java.lang.System.out.println ( STRING_2 ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , ( ( VAR_1 . METHOD_3 ( ) ) != null ? VAR_1 . METHOD_3 ( ) : TYPE_3 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ) , true , true , true , true , VAR_2 ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { return new TYPE_1 ( VAR_1 . getId ( ) , ( ( VAR_1 . METHOD_3 ( ) ) != null ? VAR_1 . METHOD_3 ( ) : TYPE_3 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ) , true , true , true , true , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( int [ ] VAR_1 , int VAR_2 , int VAR_3 ) throws java.lang.NullPointerException { int temp = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_2 < ( temp - 1 ) ) { METHOD_1 ( VAR_1 , VAR_2 , ( temp - 1 ) ) ; } if ( temp < VAR_3 ) { METHOD_1 ( VAR_1 , temp , VAR_3 ) ; } }\n", "fixed": "private void METHOD_1 ( int [ ] VAR_1 , int VAR_2 , int VAR_3 ) throws java.lang.NullPointerException { int temp = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_2 < ( temp - 1 ) ) { METHOD_1 ( VAR_1 , VAR_2 , ( temp - 1 ) ) ; } if ( temp < VAR_3 ) { METHOD_1 ( VAR_1 , temp , VAR_3 ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { { android.view.View VAR_1 ; android.view.View VAR_2 ; TYPE_1 VAR_3 = METHOD_2 ( ) ; VAR_1 = VAR_3 . METHOD_3 ( VAR_4 , null ) ; VAR_2 = VAR_3 . METHOD_3 ( VAR_5 , null ) ; VAR_6 . add ( VAR_1 ) ; VAR_6 . add ( VAR_2 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { { TYPE_1 VAR_3 = METHOD_2 ( ) ; VAR_1 = VAR_3 . METHOD_3 ( VAR_4 , null ) ; VAR_2 = VAR_3 . METHOD_3 ( VAR_5 , null ) ; VAR_6 . add ( VAR_1 ) ; VAR_6 . add ( VAR_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; int VAR_2 = INT_1 ; int height = INT_2 ; java.lang.String title = STRING_2 ; TYPE_2 VAR_3 = METHOD_2 ( VAR_4 class ) ; METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( VAR_1 ) ; VAR_5 = new TYPE_3 ( VAR_2 , height , title , VAR_3 ) ; METHOD_6 ( VAR_3 , METHOD_7 ( 1 ) ) . start ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; int VAR_2 = INT_1 ; int height = INT_2 ; java.lang.String title = STRING_2 ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_1 ) ; VAR_5 = new TYPE_3 ( VAR_2 , height , title , VAR_3 ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int x , int y ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 ) ; VAR_4 . METHOD_3 ( new TYPE_4 ( VAR_5 , VAR_5 ) ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_4 , new TYPE_5 ( VAR_6 , VAR_6 ) ) ; VAR_4 . METHOD_6 ( x ) ; VAR_4 . METHOD_7 ( y ) ; return VAR_3 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int x , int y ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 ) ; VAR_4 . METHOD_3 ( new TYPE_4 ( VAR_5 , VAR_5 ) ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_4 , new TYPE_5 ( VAR_6 , VAR_6 ) ) ; VAR_4 . METHOD_6 ( x ) ; VAR_4 . METHOD_7 ( y ) ; return VAR_3 ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( ( VAR_2 ) - INT_1 ) ; i ++ ) { if ( ( ( VAR_3 [ i ] ) == ( ( byte ) ( INT_2 ) ) ) && ( ( VAR_3 [ ( i + 1 ) ] ) == ( ( byte ) ( INT_3 ) ) ) ) { VAR_1 . add ( i ) ; } } }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( int i = 0 ; i < ( ( VAR_2 ) - INT_1 ) ; i ++ ) { if ( ( VAR_3 [ i ] ) == ( ( byte ) ( INT_2 ) ) ) { VAR_1 . add ( i ) ; } } }\n"}
{"problem": "public void METHOD_1 ( int number , int i , int j ) { if ( ( ( ( ( number < 0 ) || ( number > INT_1 ) ) || ( i < 0 ) ) || ( j < 0 ) ) || ( this . VAR_1 [ ( ( j * INT_1 ) + i ) ] ) ) { return ; } this . number = number ; this . tmp [ ( ( j * INT_1 ) + i ) ] = this . number ; }\n", "fixed": "public void METHOD_1 ( int number , int i , int j ) { if ( ( ( ( number < 0 ) || ( number > INT_1 ) ) || ( i < 0 ) ) || ( j < 0 ) ) { return ; } this . number = number ; this . tmp [ ( ( j * INT_1 ) + i ) ] = this . number ; }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { if ( VAR_2 == ( VAR_4 ) ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) + VAR_3 ) >= ( VAR_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ; } if ( VAR_2 == ( VAR_5 ) ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) + VAR_3 ) >= ( VAR_1 . METHOD_2 ( ) . METHOD_6 ( ) ) ; } return false ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { if ( VAR_2 == ( VAR_4 ) ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) + VAR_3 ) > ( VAR_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ; } if ( VAR_2 == ( VAR_5 ) ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) + VAR_3 ) > ( VAR_1 . METHOD_2 ( ) . METHOD_6 ( ) ) ; } return false ; }\n"}
{"problem": "private boolean METHOD_1 ( ) { if ( METHOD_2 ( VAR_1 ) ) return true ; if ( METHOD_3 ( ) ) return true ; TYPE_1 VAR_2 ; while ( true ) { VAR_2 = VAR_3 ; if ( METHOD_4 ( ) ) { VAR_3 = VAR_2 ; break ; } } if ( METHOD_2 ( VAR_4 ) ) return true ; if ( METHOD_5 ( ) ) return true ; VAR_2 = VAR_3 ; if ( METHOD_6 ( ) ) VAR_3 = VAR_2 ; if ( METHOD_2 ( VAR_5 ) ) return true ; return false ; }\n", "fixed": "private boolean METHOD_1 ( ) { if ( METHOD_2 ( VAR_1 ) ) return true ; if ( METHOD_4 ( ) ) return true ; TYPE_1 VAR_2 ; VAR_2 = VAR_3 ; if ( METHOD_6 ( ) ) VAR_3 = VAR_2 ; if ( METHOD_2 ( VAR_5 ) ) return true ; return false ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; this . VAR_1 = VAR_1 ; }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_2 ) != null ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; this . VAR_1 = VAR_1 ; } }\n"}
{"problem": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 . add ( new TYPE_2 ( VAR_1 ) ) ; VAR_3 . replaceAll ( VAR_1 ) ; VAR_4 . getView ( ) . METHOD_3 ( true ) ; VAR_4 . METHOD_4 ( VAR_4 . METHOD_5 ( ) , VAR_4 . METHOD_6 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_3 . replaceAll ( VAR_1 ) ; VAR_4 . getView ( ) . METHOD_3 ( true ) ; VAR_4 . METHOD_4 ( VAR_4 . METHOD_5 ( ) , VAR_4 . METHOD_6 ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( int value ) { this . METHOD_2 ( ( value == 0 ) ) ; this . METHOD_3 ( ( ( value & ( VAR_1 ) ) != 0 ) ) ; this . METHOD_4 ( ( ( ( java.lang.Integer . METHOD_5 ( value ) ) % INT_1 ) == 0 ) ) ; }\n", "fixed": "public void METHOD_1 ( int value ) { this . METHOD_2 ( ( value == 0 ) ) ; this . METHOD_3 ( ( ( value & ( VAR_1 ) ) == ( VAR_1 ) ) ) ; this . METHOD_4 ( ( ( ( java.lang.Integer . METHOD_5 ( value ) ) % INT_1 ) == 0 ) ) ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { java.io.FileOutputStream out = null ; try { out = new java.io.FileOutputStream ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 , INT_1 , out ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } finally { try { if ( out != null ) { out . METHOD_4 ( ) ; } } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } } }\n", "fixed": "static void METHOD_1 ( TYPE_1 VAR_1 ) { java.io.FileOutputStream out = null ; try { out = new java.io.FileOutputStream ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 , INT_1 , out ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } finally { try { if ( out != null ) { out . METHOD_4 ( ) ; } } catch ( java.io.IOException VAR_4 ) { VAR_4 . METHOD_3 ( ) ; } } }\n"}
{"problem": "public static int METHOD_1 ( int VAR_1 , int VAR_2 ) { int VAR_3 = VAR_2 + 1 ; if ( VAR_3 == INT_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { return INT_2 ; } return INT_3 ; } else if ( ( ( ( VAR_3 == INT_4 ) || ( VAR_3 == INT_5 ) ) || ( VAR_3 == INT_6 ) ) || ( VAR_3 == INT_7 ) ) { return INT_8 ; } else { return INT_9 ; } }\n", "fixed": "public static int METHOD_1 ( final int VAR_1 , final int VAR_2 ) { if ( VAR_2 == INT_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { return INT_2 ; } return INT_3 ; } else if ( ( ( ( VAR_2 == INT_4 ) || ( VAR_2 == INT_5 ) ) || ( VAR_2 == INT_6 ) ) || ( VAR_2 == INT_7 ) ) { return INT_8 ; } else { return INT_9 ; } }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( int i ) { TYPE_1 result = new TYPE_1 ( ) ; result . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; result . METHOD_4 ( STRING_1 ) ; result . METHOD_5 ( STRING_2 ) ; result . METHOD_6 ( TYPE_3 . METHOD_7 ( ) ) ; return result ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( ) { TYPE_1 result = new TYPE_1 ( ) ; result . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; result . METHOD_4 ( STRING_1 ) ; result . METHOD_5 ( STRING_2 ) ; result . METHOD_6 ( TYPE_3 . METHOD_7 ( ) ) ; return result ; }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 , INT_1 ) ; TYPE_1 VAR_2 = new TYPE_3 ( STRING_2 , INT_2 ) ; VAR_1 . METHOD_1 ( INT_3 ) ; VAR_1 . METHOD_2 ( INT_4 ) ; VAR_1 . METHOD_3 ( INT_5 ) ; VAR_2 . METHOD_1 ( INT_5 ) ; VAR_2 . METHOD_2 ( INT_6 ) ; VAR_2 . METHOD_3 ( 0 ) ; java.lang.System.out.println ( VAR_1 . toString ( ) ) ; java.lang.System.out.println ( VAR_2 . toString ( ) ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { TYPE_1 VAR_1 = new TYPE_2 ( STRING_1 , INT_1 ) ; TYPE_1 VAR_2 = new TYPE_3 ( STRING_2 , INT_2 ) ; VAR_1 . METHOD_1 ( INT_3 ) ; VAR_1 . METHOD_2 ( INT_4 ) ; VAR_1 . METHOD_3 ( INT_5 ) ; VAR_2 . METHOD_1 ( INT_5 ) ; VAR_2 . METHOD_2 ( INT_6 ) ; VAR_2 . METHOD_3 ( 0 ) ; java.lang.System.out.println ( VAR_1 ) ; java.lang.System.out.println ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ) . get ( VAR_3 . METHOD_3 ( ) ) ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; TYPE_4 VAR_5 = new TYPE_4 ( ) ; java.lang.System.out.println ( VAR_5 . METHOD_6 ( ) ) ; TYPE_5 . assertTrue ( VAR_5 . METHOD_6 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( ) . get ( VAR_3 . METHOD_3 ( ) ) ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; }\n"}
{"problem": "public static TYPE_1 < TYPE_2 > METHOD_1 ( ) { final TYPE_2 VAR_1 = new TYPE_3 < TYPE_4 > ( TYPE_5 . METHOD_2 ( VAR_2 class ) ) { } ; final TYPE_6 < java.lang.String , java.lang.Object > VAR_3 = new TYPE_7 < > ( ) ; VAR_3 . put ( VAR_4 , VAR_2 class . getName ( ) ) ; return TYPE_8 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_5 class , VAR_1 , VAR_3 ) ; }\n", "fixed": "public static TYPE_1 < TYPE_2 > METHOD_1 ( ) { final TYPE_2 VAR_1 = new TYPE_3 < TYPE_4 > ( TYPE_5 . METHOD_2 ( VAR_2 class ) ) { } ; final TYPE_6 < java.lang.String , java.lang.Object > VAR_3 = new TYPE_7 < > ( ) ; VAR_3 . put ( VAR_4 , VAR_2 class . getName ( ) ) ; return TYPE_5 . METHOD_2 ( TYPE_8 . METHOD_3 ( ) . METHOD_4 ( ) . < TYPE_2 > METHOD_5 ( TYPE_5 . METHOD_2 ( VAR_5 class ) , VAR_1 , VAR_3 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String message ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . METHOD_2 ( false ) ; VAR_6 . METHOD_2 ( false ) ; VAR_7 . METHOD_2 ( false ) ; VAR_8 . METHOD_2 ( false ) ; VAR_9 . METHOD_2 ( false ) ; VAR_10 . setText ( message ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String message ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( true ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . METHOD_2 ( false ) ; VAR_6 . METHOD_2 ( false ) ; VAR_7 . METHOD_2 ( false ) ; VAR_8 . METHOD_2 ( false ) ; VAR_9 . METHOD_2 ( false ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = getIntent ( ) . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( STRING_2 , VAR_1 ) ; VAR_2 = getIntent ( ) . METHOD_2 ( STRING_3 ) ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = METHOD_4 ( ) . METHOD_5 ( ) . VAR_6 ; METHOD_6 ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = getIntent ( ) . METHOD_2 ( STRING_1 ) ; VAR_2 = getIntent ( ) . METHOD_2 ( STRING_3 ) ; VAR_3 = 0 ; VAR_4 = 0 ; VAR_5 = METHOD_4 ( ) . METHOD_5 ( ) . VAR_6 ; METHOD_6 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { if ( VAR_1 < ( VAR_2 . length ) ) VAR_2 [ VAR_1 ] = VAR_3 ; if ( ( ( VAR_4 ) != null ) && ( ( VAR_4 [ VAR_1 ] ) != null ) ) VAR_4 [ VAR_1 ] . VAR_5 = true ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 >= 0 ) && ( VAR_1 < ( VAR_2 . length ) ) ) VAR_2 [ VAR_1 ] = VAR_3 ; if ( ( ( VAR_4 ) != null ) && ( ( VAR_4 [ VAR_1 ] ) != null ) ) VAR_4 [ VAR_1 ] . VAR_5 = true ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . add ( VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) ) ; VAR_1 . add ( VAR_2 . get ( ( ( VAR_2 . size ( ) ) - INT_1 ) ) ) ; VAR_1 . add ( VAR_2 . get ( ( ( VAR_2 . size ( ) ) - INT_2 ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( int x = 0 ; x < ( VAR_2 . size ( ) ) ; x ++ ) { int size = VAR_2 . size ( ) ; VAR_1 . add ( VAR_2 . get ( ( ( ( VAR_2 . size ( ) ) - x ) - 1 ) ) ) ; if ( x == INT_2 ) { break ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_3 . METHOD_6 ( new TYPE_4 ( VAR_3 , VAR_4 ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( VAR_3 ) ; java.lang.System.out.println ( VAR_4 ) ; java.lang.System.out.println ( STRING_2 ) ; METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_3 . METHOD_6 ( new TYPE_4 ( VAR_3 , VAR_4 ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( VAR_3 ) ; java.lang.System.out.println ( VAR_4 ) ; java.lang.System.out.println ( STRING_2 ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { if ( VAR_1 ) { java.util.HashMap < TYPE_1 , java.lang.String > VAR_2 = ( ( java.util.HashMap < TYPE_1 , java.lang.String > ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; java.util.HashSet < TYPE_1 > set = ( ( java.util.HashSet < TYPE_1 > ) ( METHOD_3 ( VAR_2 ) ) ) ; TYPE_2 VAR_5 = TYPE_3 . METHOD_4 ( set ) ; return VAR_5 . METHOD_1 ( ) ; } else { return 0 ; } }\n", "fixed": "public int METHOD_1 ( ) { if ( VAR_1 ) { java.util.HashMap < TYPE_1 , java.lang.String > VAR_2 = ( ( java.util.HashMap < TYPE_1 , java.lang.String > ) ( VAR_3 . METHOD_2 ( VAR_4 ) ) ) ; java.util.Set < TYPE_1 > set = METHOD_3 ( VAR_2 ) ; TYPE_2 VAR_5 = TYPE_3 . METHOD_4 ( set ) ; return VAR_5 . METHOD_1 ( ) ; } else { return 0 ; } }\n"}
{"problem": "private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ( ( VAR_1 . length ( ) ) - 1 ) ) ) ) + ( VAR_1 . METHOD_3 ( 1 , ( ( VAR_1 . length ( ) ) - 1 ) ) ) ) + ( VAR_1 . METHOD_2 ( 0 ) ) ; return VAR_2 ; }\n", "fixed": "private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ( ( VAR_1 . length ( ) ) - 1 ) ) ) ) + ( VAR_1 . substring ( 1 , ( ( VAR_1 . length ( ) ) - 1 ) ) ) ) + ( VAR_1 . METHOD_2 ( 0 ) ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; android.view.View VAR_2 = VAR_3 ; TYPE_2 VAR_4 = VAR_2 . METHOD_2 ( ) ; if ( VAR_4 == null ) { return ; } if ( ( VAR_1 instanceof TYPE_3 ) || ( VAR_1 instanceof TYPE_4 ) ) { if ( VAR_4 instanceof TYPE_5 ) { TYPE_5 p = ( ( TYPE_5 ) ( VAR_4 ) ) ; p . METHOD_3 ( true ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; android.view.View VAR_2 = VAR_3 ; TYPE_2 VAR_4 = VAR_2 . METHOD_2 ( ) ; if ( VAR_4 == null ) { return ; } if ( ( VAR_1 instanceof TYPE_3 ) || ( VAR_1 instanceof TYPE_4 ) ) { if ( VAR_4 instanceof TYPE_5 ) { TYPE_5 p = ( ( TYPE_5 ) ( VAR_4 ) ) ; p . METHOD_3 ( true ) ; } if ( VAR_1 instanceof TYPE_4 ) { } } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 temp = VAR_2 . METHOD_2 ( INT_1 ) . METHOD_3 ( VAR_3 ) ; VAR_3 = temp ; METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( STRING_1 , STRING_2 ) ; TYPE_3 . METHOD_6 ( METHOD_7 ( ) , ( STRING_3 + ( VAR_3 . METHOD_8 ( ) ) ) , VAR_4 ) . show ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { TYPE_1 temp = VAR_2 . METHOD_2 ( INT_1 ) . METHOD_3 ( VAR_3 ) ; VAR_3 = new TYPE_1 ( java.lang.Integer.parseInt ( temp . METHOD_8 ( ) ) ) ; METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( STRING_1 , STRING_2 ) ; TYPE_3 . METHOD_6 ( METHOD_7 ( ) , ( STRING_3 + ( VAR_3 . METHOD_8 ( ) ) ) , VAR_4 ) . show ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { TYPE_2 intent = new TYPE_2 ( view . getContext ( ) , VAR_2 class ) ; TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_4 . get ( VAR_1 . METHOD_2 ( ) ) ) ) ; intent . METHOD_3 ( VAR_5 , VAR_3 ) ; METHOD_4 ( intent ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { android.content.Intent intent = new android.content.Intent ( view . getContext ( ) , VAR_2 class ) ; TYPE_3 VAR_3 = ( ( TYPE_3 ) ( VAR_4 . get ( VAR_1 . METHOD_2 ( ) ) ) ) ; intent . METHOD_3 ( VAR_5 , VAR_3 ) ; METHOD_4 ( intent ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_3 . METHOD_3 ( ) ) ) ; VAR_2 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ; if ( ( VAR_5 . update ( VAR_2 ) ) != 1 ) return new TYPE_1 ( STRING_1 , STRING_2 ) ; else { VAR_2 . METHOD_6 ( VAR_1 ) ; return new TYPE_1 ( STRING_3 , STRING_4 ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { TYPE_2 VAR_2 = new TYPE_2 ( ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( ) ; VAR_2 . METHOD_4 ( VAR_3 . METHOD_3 ( ) . toString ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; if ( ( VAR_5 . update ( VAR_2 ) ) != 1 ) return new TYPE_1 ( STRING_1 , STRING_2 ) ; else { VAR_2 . METHOD_6 ( VAR_1 ) ; return new TYPE_1 ( STRING_3 , STRING_4 ) ; } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { int VAR_1 = 1 ; int VAR_2 = 0 ; java.lang.String VAR_3 = STRING_1 ; if ( ( args.length ) < VAR_1 ) { java.lang.System.err.println ( VAR_3 ) ; java.lang.System.exit ( VAR_4 ) ; } TYPE_1 . METHOD_1 ( ) ; TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_5 . start ( args [ VAR_2 ] ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { int VAR_1 = 1 ; int VAR_2 = 0 ; java.lang.String VAR_3 = STRING_1 ; if ( ( args.length ) < VAR_1 ) { java.lang.System.err.println ( VAR_3 ) ; java.lang.System.exit ( VAR_4 ) ; } TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_1 ( ) ; TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_5 . start ( args [ VAR_2 ] ) ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String source , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( null == VAR_1 ) { VAR_1 = VAR_3 ; } if ( null == VAR_2 ) { VAR_1 = VAR_4 ; } if ( ( TYPE_2 . METHOD_2 ( source ) ) || ( VAR_1 . equals ( VAR_2 ) ) ) { return source ; } return new java.lang.String ( source . METHOD_3 ( VAR_1 ) , VAR_2 ) ; }\n", "fixed": "public static java.lang.String METHOD_1 ( java.lang.String source , TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( null == VAR_1 ) { VAR_1 = VAR_3 ; } if ( null == VAR_2 ) { VAR_2 = VAR_4 ; } if ( ( TYPE_2 . METHOD_2 ( source ) ) || ( VAR_1 . equals ( VAR_2 ) ) ) { return source ; } return new java.lang.String ( source . METHOD_3 ( VAR_1 ) , VAR_2 ) ; }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { for ( TYPE_1 path : VAR_3 ) { if ( VAR_4 . equals ( VAR_2 . name ) ) { return TYPE_3 . METHOD_2 ( VAR_1 , path ) ; } } throw new TYPE_4 ( ( ( STRING_1 + ( VAR_2 . name ) ) + STRING_2 ) ) ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { for ( TYPE_1 path : VAR_3 ) { if ( VAR_4 . equals ( VAR_2 . name ) ) { return ! ( TYPE_3 . METHOD_2 ( VAR_1 , path ) ) ; } } throw new TYPE_4 ( ( ( STRING_1 + ( VAR_2 . name ) ) + STRING_2 ) ) ; }\n"}
{"problem": "public void update ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( ) ; switch ( VAR_1 ) { case VAR_3 : VAR_2 . METHOD_2 ( true ) ; this . METHOD_3 ( ) ; break ; case VAR_4 : METHOD_4 ( ) ; break ; case VAR_5 : METHOD_5 ( ) ; break ; case VAR_6 : this . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; default : break ; } }\n", "fixed": "public void update ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_1 ( ) ; switch ( VAR_1 ) { case VAR_3 : VAR_2 . METHOD_2 ( true ) ; this . METHOD_3 ( ) ; break ; case VAR_4 : METHOD_4 ( ) ; break ; case VAR_5 : METHOD_5 ( ) ; break ; case VAR_6 : this . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; break ; default : break ; } }\n"}
{"problem": "public boolean METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return false ; } if ( ! ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { } for ( TYPE_1 VAR_2 : VAR_1 . METHOD_5 ( ) ) { if ( ! ( METHOD_6 ( VAR_2 ) ) ) { return true ; } } return false ; }\n", "fixed": "public boolean METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) ) ) { return false ; } if ( ( VAR_1 ) == null ) { return false ; } if ( ! ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { } for ( TYPE_1 VAR_2 : VAR_1 . METHOD_5 ( ) ) { if ( ! ( METHOD_6 ( VAR_2 ) ) ) { return true ; } } return false ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ; VAR_1 . METHOD_2 ( STRING_2 ) . METHOD_3 ( new TYPE_3 ( VAR_1 , VAR_3 ) ) ; VAR_1 . METHOD_2 ( STRING_3 ) . METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_2 ( STRING_4 ) . METHOD_3 ( new TYPE_4 ( VAR_1 , VAR_5 , VAR_6 ) ) ; VAR_1 . METHOD_2 ( STRING_5 ) . METHOD_3 ( new TYPE_5 ( VAR_7 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ; VAR_1 . METHOD_2 ( STRING_2 ) . METHOD_3 ( new TYPE_3 ( VAR_3 ) ) ; VAR_1 . METHOD_2 ( STRING_3 ) . METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_2 ( STRING_4 ) . METHOD_3 ( new TYPE_4 ( VAR_1 , VAR_5 , VAR_6 ) ) ; VAR_1 . METHOD_2 ( STRING_5 ) . METHOD_3 ( new TYPE_5 ( VAR_7 ) ) ; }\n"}
{"problem": "public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { int diff = 0 ; for ( int i = 0 ; i < ( VAR_1 . length ( ) ) ; i ++ ) { if ( ( VAR_1 . METHOD_2 ( i ) ) != ( VAR_2 . METHOD_2 ( i ) ) ) { if ( ( ++ diff ) == INT_1 ) return false ; } } return true ; }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { int diff = 0 ; for ( int i = 0 ; i < ( VAR_1 . length ( ) ) ; i ++ ) { if ( ( VAR_1 . METHOD_2 ( i ) ) != ( VAR_2 . METHOD_2 ( i ) ) ) { if ( ( ++ diff ) > 1 ) return false ; } } return true ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String tmp = STRING_1 ; try { tmp = METHOD_2 ( ) ; } catch ( TYPE_2 VAR_2 ) { java.util.logging.Logger.getLogger ( VAR_3 class . getName ( ) ) . METHOD_3 ( VAR_4 , null , VAR_2 ) ; } if ( ! ( VAR_5 . METHOD_1 ( VAR_5 . METHOD_4 ( VAR_1 . getName ( ) ) ) ) ) { VAR_6 . METHOD_5 ( STRING_2 ) ; } else { METHOD_6 ( tmp ) ; VAR_6 . update ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_5 . METHOD_1 ( VAR_5 . METHOD_4 ( VAR_1 . getName ( ) ) ) ) ) { VAR_6 . METHOD_5 ( STRING_2 ) ; } else { VAR_6 . update ( ) ; METHOD_6 ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) == 0 ) { METHOD_2 ( ) ; } android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_3 ( STRING_1 , VAR_1 ) ; METHOD_4 ( intent ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 . size ( ) ) == 0 ) { METHOD_2 ( ) ; } else { android.content.Intent intent = new android.content.Intent ( this , VAR_2 class ) ; intent . METHOD_3 ( STRING_1 , VAR_1 ) ; METHOD_4 ( intent ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 , java.lang.String url ) { int VAR_3 = METHOD_2 ( VAR_2 , VAR_4 ) ; int VAR_5 = METHOD_2 ( VAR_2 , VAR_6 ) ; if ( VAR_5 >= 0 ) { return METHOD_1 ( VAR_3 , VAR_5 , url ) ; } else if ( ( VAR_7 ) >= 0 ) { return null ; } return url ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.net.URL VAR_1 , TYPE_1 VAR_2 , java.lang.String url ) { int VAR_3 = METHOD_2 ( VAR_2 , VAR_4 ) ; int VAR_5 = METHOD_2 ( VAR_2 , VAR_6 ) ; if ( VAR_5 >= 0 ) { return METHOD_1 ( VAR_3 , VAR_5 , url ) ; } else if ( ( VAR_7 ) >= 0 ) { return METHOD_1 ( VAR_3 , VAR_7 , url ) ; } return url ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 class . METHOD_4 ( STRING_1 ) ) ; final TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_1 . METHOD_5 ( VAR_2 , VAR_4 ) ; final TYPE_4 < TYPE_5 > VAR_5 = VAR_1 . METHOD_6 ( VAR_4 ) ; assertTrue ( VAR_5 . METHOD_7 ( ) ) ; TYPE_4 < TYPE_6 > VAR_6 = VAR_1 . METHOD_8 ( VAR_5 . get ( ) , VAR_4 ) ; METHOD_9 ( VAR_6 . METHOD_7 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 class . METHOD_4 ( STRING_1 ) ) ; final TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_1 . METHOD_5 ( VAR_2 , VAR_4 ) ; final TYPE_4 < TYPE_5 > VAR_5 = VAR_1 . METHOD_6 ( VAR_4 ) ; assertTrue ( VAR_5 . METHOD_7 ( ) ) ; TYPE_4 < TYPE_6 > VAR_6 = VAR_1 . METHOD_8 ( VAR_5 . get ( ) , VAR_4 ) ; assertTrue ( VAR_6 . METHOD_7 ( ) ) ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_3 ) ) | ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_4 ) ) ) { VAR_2 = TYPE_2 . METHOD_3 ( VAR_2 ) ; } VAR_2 = TYPE_3 . METHOD_4 ( VAR_2 ) ; VAR_2 = TYPE_3 . METHOD_5 ( VAR_2 , STRING_1 ) ; VAR_2 = TYPE_3 . METHOD_4 ( VAR_2 ) ; VAR_2 = TYPE_3 . METHOD_5 ( VAR_2 , VAR_5 ) ; return VAR_2 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_2 = TYPE_3 . METHOD_4 ( VAR_2 ) ; if ( ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_3 ) ) | ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_4 ) ) ) { VAR_2 = TYPE_2 . METHOD_3 ( VAR_2 ) ; VAR_2 = TYPE_3 . METHOD_5 ( VAR_2 , VAR_5 ) ; } VAR_2 = TYPE_3 . METHOD_4 ( VAR_2 ) ; VAR_2 = TYPE_3 . METHOD_5 ( VAR_2 , STRING_1 ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setEnabled ( false ) ; java.lang.String VAR_3 = ( STRING_1 + ( event . getName ( ) ) ) + STRING_2 ; android.content.Intent intent = new android.content.Intent ( VAR_4 ) ; intent . METHOD_2 ( STRING_3 ) ; intent . METHOD_3 ( VAR_5 , new java.lang.String [ ] { event . METHOD_4 ( ) } ) ; intent . METHOD_3 ( VAR_6 , VAR_3 ) ; METHOD_5 ( android.content.Intent . METHOD_6 ( intent , STRING_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . setEnabled ( false ) ; java.lang.String VAR_3 = ( STRING_1 + ( event . getName ( ) ) ) + STRING_2 ; android.content.Intent intent = new android.content.Intent ( VAR_4 ) ; intent . METHOD_2 ( STRING_3 ) ; intent . METHOD_3 ( VAR_5 , new java.lang.String [ ] { event . METHOD_4 ( ) } ) ; intent . METHOD_3 ( VAR_6 , VAR_3 ) ; METHOD_5 ( intent ) ; }\n"}
{"problem": "public void METHOD_1 ( final int x , final int y ) { this . VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) ) ; VAR_1 . METHOD_2 ( ( x - INT_1 ) ) ; VAR_1 . METHOD_3 ( ( y - INT_1 ) ) ; VAR_1 . METHOD_4 ( INT_2 ) ; VAR_1 . METHOD_5 ( true ) ; }\n", "fixed": "public void METHOD_1 ( final double x , final double y ) { this . VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) ) ; VAR_1 . METHOD_2 ( x ) ; VAR_1 . METHOD_3 ( y ) ; VAR_1 . METHOD_4 ( INT_2 ) ; VAR_1 . METHOD_5 ( true ) ; }\n"}
{"problem": "private void init ( ) { for ( TYPE_1 values : VAR_1 . values ( ) ) { if ( values == null ) break ; for ( TYPE_2 VAR_2 : values . METHOD_1 ( ) ) { VAR_3 . add ( VAR_2 . METHOD_2 ( ) ) ; } } VAR_4 = VAR_3 . METHOD_3 ( new java.lang.Long [ 0 ] ) ; TYPE_3 . METHOD_4 ( VAR_4 ) ; VAR_5 = true ; }\n", "fixed": "private void init ( ) { for ( TYPE_1 values : VAR_1 . values ( ) ) { if ( values == null ) continue ; for ( TYPE_2 VAR_2 : values . METHOD_1 ( ) ) { VAR_3 . add ( VAR_2 . METHOD_2 ( ) ) ; } } VAR_4 = VAR_3 . METHOD_3 ( new java.lang.Long [ 0 ] ) ; TYPE_3 . METHOD_4 ( VAR_4 ) ; VAR_5 = true ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 b = ( ( TYPE_2 ) ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) ; return b . getText ( ) . toString ( ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; TYPE_2 b = ( ( TYPE_2 ) ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) ; return b . getText ( ) . toString ( ) . split ( \"\\t\" ) [ 0 ] ; }\n"}
{"problem": "public static TYPE_1 < java.lang.Object > METHOD_1 ( ) { TYPE_1 < java.lang.Object > VAR_1 = new java.util.ArrayList < java.lang.Object > ( ) ; VAR_1 . add ( new TYPE_2 ( ) ) ; VAR_1 . add ( new TYPE_3 ( ) ) ; VAR_1 . add ( new TYPE_4 ( ) ) ; return VAR_1 ; }\n", "fixed": "public static java.util.List < java.lang.Object > METHOD_1 ( ) { java.util.List < java.lang.Object > VAR_1 = new java.util.ArrayList < java.lang.Object > ( ) ; VAR_1 . add ( new TYPE_2 ( ) ) ; VAR_1 . add ( new TYPE_3 ( ) ) ; VAR_1 . add ( new TYPE_4 ( ) ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_1 . getId ( ) ) { case VAR_2 : android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; break ; case VAR_4 : android.content.Intent VAR_5 = new android.content.Intent ( this , VAR_6 class ) ; METHOD_2 ( VAR_5 ) ; break ; case VAR_7 : METHOD_3 ( STRING_1 , STRING_2 ) ; break ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { switch ( VAR_1 . getId ( ) ) { case VAR_2 : android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; METHOD_2 ( intent ) ; break ; case VAR_4 : android.content.Intent VAR_5 = new android.content.Intent ( this , VAR_6 class ) ; METHOD_2 ( VAR_5 ) ; break ; } }\n"}
{"problem": "public int METHOD_1 ( ) throws java.io.IOException { char [ ] c = new char [ 1 ] ; int count = METHOD_1 ( c , 0 , 1 ) ; if ( count < 0 ) { return - 1 ; } return c [ 0 ] ; }\n", "fixed": "public int METHOD_1 ( ) throws java.io.IOException { if ( ( c ) == null ) { c = new char [ 1 ] ; } int count = METHOD_1 ( c , 0 , 1 ) ; if ( count < 0 ) { return - 1 ; } return c [ 0 ] ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.Integer id = METHOD_2 ( VAR_1 ) ; if ( id == null ) VAR_2 . put ( new TYPE_3 < java.lang.String , java.lang.String > ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) , ( ( VAR_3 ) ++ ) ) ; try { VAR_4 . METHOD_1 ( VAR_1 , ( ( int ) ( id ) ) ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_2 ( VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.Integer id = METHOD_2 ( VAR_1 ) ; if ( id == null ) { id = ( VAR_3 ) ++ ; VAR_2 . put ( new TYPE_3 < java.lang.String , java.lang.String > ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) , id ) ; } try { VAR_4 . METHOD_1 ( VAR_1 , ( ( int ) ( id ) ) ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_2 ( VAR_5 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { TYPE_2 VAR_3 = VAR_2 . get ( i ) ; if ( ( VAR_1 . METHOD_2 ( ) ) == VAR_3 ) { VAR_4 . setValue ( new TYPE_3 ( VAR_5 . METHOD_3 ( ) , i ) , VAR_3 . getText ( ) ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { TYPE_2 VAR_3 = VAR_2 . get ( i ) ; if ( ( VAR_1 . METHOD_2 ( ) ) == VAR_3 ) { VAR_4 . setValue ( new TYPE_3 ( VAR_5 . METHOD_3 ( ) , ( i + 1 ) ) , VAR_3 . getText ( ) ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( TYPE_4 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( new TYPE_5 ( STRING_1 ) ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; TYPE_6 . METHOD_6 ( new TYPE_1 ( STRING_2 ) ) . METHOD_7 ( VAR_3 ) . METHOD_8 ( VAR_1 ) ; VAR_4 . METHOD_9 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( TYPE_4 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( new TYPE_5 ( STRING_1 ) ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; METHOD_6 ( new TYPE_1 ( STRING_2 ) ) . METHOD_7 ( VAR_3 ) . METHOD_8 ( VAR_1 ) ; VAR_4 . METHOD_9 ( VAR_1 ) ; }\n"}
{"problem": "public static java.util.Properties METHOD_1 ( final java.util.List < TYPE_1 > params , final java.util.Properties VAR_1 ) { java.util.Properties VAR_2 = VAR_1 ; for ( TYPE_1 VAR_3 : params ) { java.lang.Object VAR_4 = VAR_2 . METHOD_2 ( VAR_3 . getName ( ) , VAR_3 . getValue ( ) ) ; if ( VAR_4 != null ) { VAR_2 . METHOD_2 ( VAR_3 . getName ( ) , ( ( VAR_4 + STRING_1 ) + ( VAR_3 . getValue ( ) ) ) ) ; } } return VAR_2 ; }\n", "fixed": "public static java.util.Properties METHOD_1 ( final java.util.List < TYPE_1 > params , final java.util.Properties VAR_1 ) { java.util.Properties VAR_2 = VAR_1 ; for ( TYPE_1 VAR_3 : params ) { java.lang.Object VAR_4 = VAR_2 . METHOD_2 ( VAR_3 . getName ( ) , VAR_3 . getValue ( ) ) ; if ( VAR_4 != null ) { VAR_2 . METHOD_2 ( VAR_3 . getName ( ) , ( ( ( VAR_3 . getValue ( ) ) + STRING_1 ) + VAR_4 ) ) ; } } return VAR_2 ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 type , final TYPE_4 VAR_1 ) { return TYPE_5 . METHOD_2 ( VAR_2 . METHOD_3 ( type , VAR_1 ) , new TYPE_6 < java.lang.String , TYPE_2 > ( ) { public TYPE_1 < TYPE_2 > METHOD_4 ( final java.lang.String name ) throws java.lang.Exception { return VAR_3 . METHOD_5 ( VAR_1 , type ) ; } } ) ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 type , final TYPE_4 id ) { return TYPE_5 . METHOD_2 ( VAR_2 . METHOD_3 ( type , id ) , new TYPE_6 < java.lang.String , TYPE_2 > ( ) { public TYPE_1 < TYPE_2 > METHOD_4 ( final java.lang.String name ) throws java.lang.Exception { return VAR_3 . METHOD_5 ( id , type ) ; } } ) ; }\n"}
{"problem": "private void METHOD_1 ( double x , double y , double VAR_1 , double VAR_2 ) { if ( ( this . x ) == null ) this . x = x ; if ( ( this . y ) == null ) this . y = y ; if ( ( this . VAR_1 ) == null ) this . VAR_1 = VAR_1 ; if ( java.lang.Double . METHOD_2 ( this . VAR_2 ) ) this . VAR_2 = VAR_2 ; }\n", "fixed": "private void METHOD_1 ( double x , double y , double VAR_1 , double VAR_2 ) { assert VAR_2 > 0 ; if ( ( this . x ) == null ) this . x = x ; if ( ( this . y ) == null ) this . y = y ; if ( ( this . VAR_1 ) == null ) this . VAR_1 = VAR_1 ; if ( ( this . VAR_2 ) == null ) this . VAR_2 = VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 type , java.lang.String VAR_1 , java.lang.Object VAR_2 , java.lang.String VAR_3 ) { TYPE_2 message = new TYPE_3 ( ) ; message . METHOD_2 ( VAR_2 ) ; this . VAR_4 . METHOD_3 ( VAR_1 . toLowerCase ( ) , message , VAR_3 ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 type , java.lang.String VAR_1 , java.lang.Object VAR_2 , java.lang.String VAR_3 ) { TYPE_2 message = new TYPE_3 ( ) ; message . METHOD_2 ( VAR_2 ) ; return this . VAR_4 . METHOD_3 ( VAR_1 . toLowerCase ( ) , message , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) TYPE_1 . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_5 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 . METHOD_6 ( ) ; this . VAR_3 = null ; }\n", "fixed": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) TYPE_1 . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_5 ( ) ; if ( ( VAR_1 ) != null ) VAR_1 . METHOD_1 ( ) ; this . VAR_1 = null ; this . VAR_2 = null ; this . VAR_3 = null ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.io.InputStream VAR_1 = getClass ( ) . METHOD_2 ( STRING_1 ) ; TYPE_1 p = TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 class ) ; TYPE_3 . assertEquals ( INT_1 , VAR_3 . size ( ) ) ; TYPE_3 . assertEquals ( INT_1 , VAR_4 . size ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.io.InputStream VAR_1 = getClass ( ) . METHOD_2 ( STRING_1 ) ; TYPE_1 p = TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 class ) ; TYPE_3 . assertEquals ( INT_1 , VAR_3 . size ( ) ) ; TYPE_3 . assertEquals ( INT_1 , VAR_4 . length ) ; }\n"}
{"problem": "protected void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , TYPE_1 message ) { java.lang.String VAR_2 = VAR_1 . remove ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; VAR_3 . METHOD_2 ( VAR_1 , message ) ; VAR_3 . METHOD_2 ( VAR_2 , message ) ; }\n", "fixed": "protected void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , TYPE_1 message ) { java.lang.String VAR_2 = VAR_1 . remove ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; VAR_3 . METHOD_2 ( VAR_1 , message ) ; VAR_3 . METHOD_2 ( VAR_1 , message ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { final java.lang.String VAR_1 = METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 != STRING_2 ) && ( VAR_1 != null ) ) { final android.content.Context context = this ; android.content.Intent intent = new android.content.Intent ( context , VAR_2 class ) ; METHOD_3 ( intent ) ; } else { TYPE_1 . METHOD_4 ( this , VAR_3 , VAR_4 ) . show ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { final java.lang.String VAR_1 = METHOD_2 ( STRING_1 ) ; if ( ( VAR_1 != STRING_2 ) && ( VAR_1 != null ) ) { final android.content.Context context = this ; android.content.Intent i = new android.content.Intent ( context , VAR_2 class ) ; METHOD_3 ( i ) ; } else { TYPE_1 . METHOD_4 ( this , VAR_3 , VAR_4 ) . show ( ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 , final java.lang.String VAR_3 , final int VAR_4 ) throws TYPE_2 { TYPE_1 result = VAR_5 . get ( VAR_1 ) ; if ( result == null ) { java.lang.System.out.println ( ( STRING_1 + VAR_1 ) ) ; result = new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 . put ( VAR_1 , result ) ; } return result ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final java.lang.String VAR_2 , final java.lang.String VAR_3 , final int VAR_4 ) throws TYPE_2 { TYPE_1 result = VAR_5 . get ( VAR_1 ) ; if ( result == null ) { result = new TYPE_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 . put ( VAR_1 , result ) ; } return result ; }\n"}
