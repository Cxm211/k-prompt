{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( ( ! ( VAR_2 . isEmpty ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != null ) ) { for ( final TYPE_2 VAR_3 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( this . VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) { VAR_2 . remove ( VAR_3 ) ; } } } this . VAR_1 = VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( final int time ) { if ( ( VAR_1 ) != null ) { VAR_2 . setText ( getString ( VAR_3 , time ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { if ( time < 1 ) { VAR_2 . setEnabled ( true ) ; VAR_2 . setText ( getString ( VAR_4 ) ) ; } else { METHOD_1 ( ( time - 1 ) ) ; } } } , INT_1 ) ; } }\n", "fixed": "private void METHOD_1 ( final int time ) { if ( ( VAR_1 ) != null ) { VAR_2 . setText ( getString ( VAR_3 , time ) ) ; VAR_2 . setEnabled ( false ) ; VAR_1 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { if ( time < 1 ) { VAR_2 . setEnabled ( true ) ; VAR_2 . setText ( getString ( VAR_4 ) ) ; } else { METHOD_1 ( ( time - 1 ) ) ; } } } , INT_1 ) ; } }\n"}
{"problem": "boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 keys = VAR_2 . keys ; java.util.Iterator VAR_3 = keys . values ( ) . iterator ( ) ; while ( VAR_3 . METHOD_2 ( ) ) { TYPE_2 k = ( ( TYPE_2 ) ( VAR_3 . METHOD_3 ( ) ) ) ; if ( ( VAR_4 ) == VAR_1 ) return true ; } return false ; }\n", "fixed": "boolean METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 keys = VAR_2 . keys ; java.util.Iterator VAR_3 = keys . values ( ) . iterator ( ) ; while ( VAR_3 . METHOD_2 ( ) ) { TYPE_2 k = ( ( TYPE_2 ) ( VAR_3 . METHOD_3 ( ) ) ) ; java.lang.String str = VAR_4 ; if ( str . equals ( VAR_1 ) ) return true ; } return true ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > get ( ) { java.util.List < TYPE_2 > VAR_1 = new java.util.ArrayList < TYPE_2 > ( ) ; for ( int i = 0 ; i < count ; i ++ ) { for ( int j = 0 ; j < INT_1 ; j ++ ) { VAR_1 . add ( new TYPE_2 ( i ) ) ; } } return VAR_1 ; }\n", "fixed": "public TYPE_1 < java.lang.String > get ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; for ( int i = 0 ; i < count ; i ++ ) { for ( int j = 0 ; j < INT_1 ; j ++ ) { VAR_1 . add ( java.lang.Integer.toString ( i ) ) ; } } return VAR_1 ; }\n"}
{"problem": "private long METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { return VAR_1 / ( VAR_3 ) ; } else if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { return ( VAR_1 / ( VAR_4 ) ) / ( VAR_3 ) ; } return ( ( VAR_1 / ( VAR_5 ) ) / ( VAR_4 ) ) / ( VAR_3 ) ; }\n", "fixed": "private long METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { return VAR_1 / ( VAR_3 ) ; } else if ( ( VAR_2 . METHOD_2 ( ) ) == 1 ) { return ( VAR_1 / ( VAR_4 ) ) / ( VAR_3 ) ; } return ( ( VAR_1 / ( VAR_5 ) ) / ( VAR_4 ) ) / ( VAR_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; if ( ( VAR_2 ) > ( VAR_3 ) ) { VAR_2 = 0 ; ( VAR_4 ) ++ ; } TYPE_2 p = new TYPE_2 ( VAR_1 ) ; VAR_5 [ VAR_4 ] [ VAR_2 ] . add ( p ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { ( VAR_2 ) ++ ; if ( ( VAR_2 ) >= ( VAR_3 ) ) { VAR_2 = 0 ; ( VAR_4 ) ++ ; } TYPE_2 p = new TYPE_2 ( VAR_1 ) ; VAR_5 [ VAR_4 ] [ VAR_2 ] . add ( p ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws TYPE_5 { if ( VAR_4 ) { try { TYPE_6 VAR_5 = new TYPE_6 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 VAR_6 = VAR_5 . METHOD_2 ( ) ; return VAR_6 ; } catch ( TYPE_7 VAR_7 ) { VAR_7 . METHOD_3 ( ) ; } catch ( TYPE_8 VAR_7 ) { VAR_7 . METHOD_3 ( ) ; } return null ; } else { return new TYPE_1 ( STRING_1 ) ; } }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) throws TYPE_5 { if ( VAR_4 ) { try { TYPE_6 VAR_5 = new TYPE_6 ( VAR_1 , VAR_2 , VAR_3 , this ) ; TYPE_1 VAR_6 = VAR_5 . METHOD_2 ( ) ; return VAR_6 ; } catch ( TYPE_7 VAR_7 ) { VAR_7 . METHOD_3 ( ) ; } catch ( TYPE_8 VAR_7 ) { VAR_7 . METHOD_3 ( ) ; } return null ; } else { return new TYPE_1 ( STRING_1 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.Object key ) { int VAR_1 = METHOD_2 ( key ) ; java.util.Iterator iterator = VAR_2 [ VAR_1 ] . iterator ( ) ; while ( iterator . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 , TYPE_3 > VAR_3 = ( ( TYPE_1 < TYPE_2 , TYPE_3 > ) ( iterator . METHOD_4 ( ) ) ) ; if ( VAR_3 . METHOD_5 ( ) . equals ( key ) ) { return true ; } } return false ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.Object key ) throws java.lang.NullPointerException { if ( isEmpty ( ) ) return false ; int VAR_1 = METHOD_2 ( key ) ; java.util.Iterator iterator = VAR_2 [ VAR_1 ] . iterator ( ) ; while ( iterator . METHOD_3 ( ) ) { TYPE_1 < TYPE_2 , TYPE_3 > VAR_3 = ( ( TYPE_1 < TYPE_2 , TYPE_3 > ) ( iterator . METHOD_4 ( ) ) ) ; if ( VAR_3 . METHOD_5 ( ) . equals ( key ) ) { return true ; } } return false ; }\n"}
{"problem": "private long METHOD_1 ( ) throws java.io.IOException { source . METHOD_2 ( INT_1 ) ; if ( METHOD_3 ( VAR_1 ) ) { METHOD_4 ( ) ; if ( ( METHOD_5 ( ) . type ) == ( VAR_2 ) ) { return METHOD_5 ( ) . VAR_3 ; } } return 0 ; }\n", "fixed": "private java.lang.Long METHOD_1 ( ) throws java.io.IOException { source . METHOD_2 ( INT_1 ) ; if ( METHOD_3 ( VAR_1 ) ) { METHOD_4 ( ) ; if ( ( METHOD_5 ( ) . type ) == ( VAR_2 ) ) { return METHOD_5 ( ) . VAR_3 ; } } return 0L ; }\n"}
{"problem": "public static void show ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 class . METHOD_2 ( ) . METHOD_3 ( VAR_3 . fileName ) ) ; java.lang.System.out.println ( STRING_1 ) ; try { TYPE_2 VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( ) . METHOD_6 ( new TYPE_4 ( VAR_4 ) ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_7 ( ) ; } }\n", "fixed": "public static void show ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 class . METHOD_2 ( ) . METHOD_3 ( VAR_3 . fileName ) ) ; try { TYPE_2 VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( ) . METHOD_6 ( new TYPE_4 ( VAR_4 ) ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_7 ( ) ; } }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( ( VAR_4 ) == null ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; TYPE_4 . METHOD_3 ( this , VAR_4 ) ; init ( ) ; } TYPE_2 VAR_6 = ( ( TYPE_2 ) ( VAR_4 . METHOD_4 ( ) ) ) ; if ( VAR_6 != null ) { VAR_6 . METHOD_5 ( VAR_4 ) ; } return VAR_4 ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( ( VAR_4 ) == null ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; TYPE_4 . METHOD_3 ( this , VAR_4 ) ; init ( ) ; } TYPE_2 VAR_6 = ( ( TYPE_2 ) ( VAR_4 . METHOD_4 ( ) ) ) ; if ( VAR_6 != null ) { VAR_6 . METHOD_5 ( VAR_4 ) ; } return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( int x , int y , java.lang.String text , int VAR_1 , int VAR_2 ) { METHOD_2 ( x , y ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { METHOD_3 ( text ) ; METHOD_4 ( ) ; this . METHOD_5 ( VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( int x , int y , java.lang.String text , int VAR_1 , int VAR_2 ) { METHOD_2 ( x , y ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { METHOD_3 ( text ) ; this . METHOD_5 ( 1 ) ; METHOD_4 ( ) ; this . METHOD_5 ( VAR_2 ) ; } this . METHOD_4 ( ) ; }\n"}
{"problem": "private static java.lang.String METHOD_1 ( java.lang.String [ ] VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; boolean first = true ; for ( java.lang.String i : VAR_1 ) { if ( i . contains ( TYPE_1 . toString ( CHAR_1 ) ) ) { i = ( CHAR_1 + i ) + CHAR_1 ; } VAR_2 = ( ! first ) ? ( VAR_2 + CHAR_2 ) + i : VAR_2 + i ; first = false ; } return VAR_2 ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.lang.String [ ] VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; boolean first = true ; for ( java.lang.String i : VAR_1 ) { VAR_2 = ( ! first ) ? ( VAR_2 + CHAR_2 ) + i : VAR_2 + i ; first = false ; } return VAR_2 ; }\n"}
{"problem": "public java.lang.String toString ( ) { return ( ( ( ( ( ( ( ( this . VAR_1 ) + STRING_1 ) + ( this . VAR_2 ) ) + STRING_1 ) + ( this . VAR_3 ) ) + ( this . date ) ) + ( this . VAR_4 ) ) + STRING_1 ) + ( this . VAR_5 ) ; }\n", "fixed": "public java.lang.String toString ( ) { return ( ( ( ( ( ( ( ( ( ( this . VAR_1 ) + STRING_1 ) + ( this . VAR_2 ) ) + STRING_1 ) + ( this . VAR_3 ) ) + STRING_1 ) + ( this . date ) ) + STRING_1 ) + ( this . VAR_4 ) ) + STRING_1 ) + ( this . VAR_5 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = context . METHOD_2 ( VAR_2 , VAR_3 ) . METHOD_3 ( VAR_4 ) ; TYPE_3 . METHOD_4 ( VAR_1 , VAR_3 , TYPE_4 . METHOD_5 ( ) ) ; for ( TYPE_5 VAR_5 : VAR_1 . METHOD_6 ( ) ) { VAR_5 . METHOD_7 ( VAR_5 . key ( ) ) ; } TYPE_6 . METHOD_4 ( VAR_1 , STRING_1 ) ; VAR_1 . METHOD_8 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = context . METHOD_2 ( VAR_2 , VAR_3 ) . METHOD_3 ( VAR_4 ) ; TYPE_3 . METHOD_4 ( VAR_1 , VAR_3 , TYPE_4 . METHOD_5 ( ) ) ; for ( TYPE_5 VAR_5 : VAR_1 . METHOD_6 ( ) ) { VAR_5 . METHOD_7 ( VAR_5 . key ( ) ) ; } VAR_1 . METHOD_8 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) VAR_3 = VAR_4 ; else if ( VAR_5 . METHOD_2 ( ) ) VAR_3 = VAR_6 ; else if ( VAR_7 . METHOD_2 ( ) ) VAR_3 = VAR_8 ; else if ( VAR_9 . METHOD_2 ( ) ) VAR_3 = VAR_10 ; VAR_11 . METHOD_3 ( ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) VAR_3 = VAR_4 ; else if ( VAR_5 . METHOD_2 ( ) ) VAR_3 = VAR_6 ; else if ( VAR_7 . METHOD_2 ( ) ) VAR_3 = VAR_8 ; VAR_11 . METHOD_3 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( STRING_1 , ( ( ( STRING_2 + VAR_2 ) + STRING_3 ) + ( VAR_3 ) ) ) ; if ( VAR_2 <= ( VAR_4 ) ) { METHOD_4 ( VAR_5 ) ; } else if ( VAR_2 > ( VAR_6 ) ) { METHOD_4 ( VAR_7 ) ; } else { METHOD_4 ( VAR_8 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { double VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 <= ( VAR_4 ) ) { METHOD_4 ( VAR_5 ) ; } else if ( VAR_2 > ( VAR_6 ) ) { METHOD_4 ( VAR_7 ) ; } else { METHOD_4 ( VAR_8 ) ; } }\n"}
{"problem": "private void METHOD_1 ( java.io.InputStream VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_2 ( new java.io.FileOutputStream ( METHOD_2 ( ) , true ) ) ; int VAR_3 ; while ( ( VAR_3 = VAR_1 . METHOD_3 ( ) ) != ( - 1 ) ) VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_3 ( STRING_1 , VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( java.io.InputStream VAR_1 , boolean append ) { try { TYPE_1 VAR_2 = new TYPE_2 ( new java.io.FileOutputStream ( METHOD_2 ( ) , append ) ) ; int VAR_3 ; while ( ( VAR_3 = VAR_1 . METHOD_3 ( ) ) != ( - 1 ) ) VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( ) ; } catch ( java.io.IOException VAR_4 ) { throw new TYPE_3 ( STRING_1 , VAR_4 ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false ) ; try { return new TYPE_1 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_4 . METHOD_3 ( ) . error ( VAR_4 . METHOD_4 ( ) ) ; return new TYPE_1 ( TYPE_3 . METHOD_5 ( STRING_1 ) ) ; } }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int VAR_3 ) { VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false ) ; try { return new TYPE_1 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_4 . METHOD_3 ( ) . error ( VAR_4 ) ; return new TYPE_1 ( TYPE_3 . METHOD_5 ( STRING_1 ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( int position ) { TYPE_1 VAR_1 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) ) ) . METHOD_3 ( position ) ; if ( ( position == INT_1 ) && ( VAR_1 != null ) ) { VAR_1 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( VAR_3 , STRING_1 ) ; } }\n", "fixed": "public void METHOD_1 ( int position ) { TYPE_1 VAR_1 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) ) ) . METHOD_3 ( position ) ; if ( ( position == INT_1 ) && ( VAR_1 != null ) ) { TYPE_3 . METHOD_5 ( VAR_3 , STRING_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.String VAR_3 , TYPE_2 response ) { if ( ( VAR_4 ) != null ) { for ( TYPE_3 item : VAR_4 ) { VAR_5 . add ( item ) ; TYPE_4 . METHOD_2 ( item . title ) ; } VAR_6 . METHOD_3 ( ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , java.lang.String VAR_3 , TYPE_2 response ) { if ( ( VAR_4 ) != null ) { for ( TYPE_3 item : VAR_4 ) { VAR_5 . add ( item ) ; } VAR_6 . METHOD_3 ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; final android.content.Context context = this ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; new TYPE_3 ( ) . METHOD_4 ( VAR_5 ) ; TYPE_4 < java.lang.String > VAR_6 = new TYPE_4 < java.lang.String > ( this , VAR_7 , VAR_8 ) ; VAR_6 . METHOD_5 ( VAR_9 ) ; TYPE_5 VAR_10 = ( ( TYPE_5 ) ( METHOD_3 ( VAR_11 ) ) ) ; VAR_10 . METHOD_6 ( VAR_6 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; final android.content.Context context = this ; new TYPE_3 ( this ) . METHOD_4 ( VAR_5 ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.String [ ] tmp ; count = 0 ; METHOD_2 ( ) ; while ( VAR_1 . METHOD_3 ( ) ) { tmp = VAR_1 . METHOD_4 ( ) . split ( STRING_2 ) ; for ( int i = 0 ; i < ( VAR_2 ) ; i ++ ) { VAR_3 [ count ] [ i ] = java.lang.Double . METHOD_5 ( tmp [ i ] ) ; } METHOD_6 ( count ) ; ( count ) ++ ; } }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String [ ] tmp ; count = 0 ; METHOD_2 ( ) ; while ( VAR_1 . METHOD_3 ( ) ) { tmp = VAR_1 . METHOD_4 ( ) . split ( STRING_2 ) ; for ( int i = 0 ; i < ( VAR_2 ) ; i ++ ) { VAR_3 [ count ] [ i ] = java.lang.Double . METHOD_5 ( tmp [ i ] ) ; } METHOD_6 ( count ) ; ( count ) ++ ; } }\n"}
{"problem": "public boolean remove ( int index , java.lang.Object key ) { int VAR_1 = this . VAR_2 . METHOD_1 ( ( ( TYPE_1 ) ( key ) ) ) ; if ( ( index < 0 ) || ( index > VAR_1 ) ) throw new TYPE_2 ( java.lang.String.format ( STRING_1 , index , VAR_1 ) ) ; if ( this . contains ( key ) ) { this . VAR_2 . remove ( index , key ) ; return true ; } return false ; }\n", "fixed": "public boolean remove ( int index , TYPE_1 key ) { int VAR_1 = this . VAR_2 . METHOD_1 ( key ) ; if ( ( index < 0 ) || ( index > VAR_1 ) ) throw new TYPE_2 ( java.lang.String.format ( STRING_1 , index , VAR_1 ) ) ; if ( this . contains ( key ) ) { this . VAR_2 . remove ( index , key ) ; return true ; } return false ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( STRING_1 ) ) ) ; TYPE_2 . assertNotNull ( VAR_1 ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( STRING_1 ) ) ) ; TYPE_2 . assertNotNull ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_3 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( STRING_1 ) ) ) ; assertNotNull ( VAR_1 ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( STRING_1 ) ) ) ; assertNotNull ( VAR_3 ) ; assertEquals ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_3 ( ) ) ; }\n"}
{"problem": "public static void METHOD_1 ( java.util.Calendar VAR_1 ) { java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_2 [ VAR_1 . get ( VAR_3 ) ] ) ) + STRING_1 ) + ( VAR_1 . get ( VAR_4 ) ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; }\n", "fixed": "private static void METHOD_1 ( java.util.Calendar VAR_1 ) { java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_2 [ VAR_1 . get ( VAR_3 ) ] ) ) + STRING_1 ) + ( VAR_1 . get ( VAR_4 ) ) ) ) ; java.lang.System.out.println ( STRING_2 ) ; java.lang.System.out.println ( STRING_3 ) ; }\n"}
{"problem": "public TYPE_1 [ ] METHOD_1 ( TYPE_2 VAR_1 ) { int count = ( ( int ) ( VAR_1 . count ( ) ) ) ; TYPE_1 [ ] VAR_2 = new TYPE_1 [ count ] ; int i = 0 ; TYPE_3 < TYPE_1 > VAR_3 = VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 VAR_4 : VAR_3 ) { VAR_2 [ i ] = VAR_4 ; i ++ ; } TYPE_4 . METHOD_3 ( VAR_2 ) ; return VAR_2 ; }\n", "fixed": "public TYPE_1 [ ] METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ ( ( int ) ( VAR_1 . count ( ) ) ) ] ; int i = 0 ; TYPE_3 < TYPE_1 > VAR_3 = VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 VAR_4 : VAR_3 ) { VAR_2 [ i ] = VAR_4 ; i ++ ; } TYPE_4 . METHOD_3 ( VAR_2 ) ; return VAR_2 ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { try { java.io.FileOutputStream VAR_3 = new java.io.FileOutputStream ( VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_5 ) { java.lang.System.out.println ( STRING_1 ) ; } }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { try { java.io.FileOutputStream VAR_3 = new java.io.FileOutputStream ( VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_5 ) { return false ; } return true ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( METHOD_3 ( ) ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_3 ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . execute ( ) ; } else { VAR_2 . METHOD_4 ( false ) ; TYPE_1 . METHOD_2 ( STRING_1 , STRING_4 ) ; TYPE_3 VAR_3 = TYPE_3 . METHOD_5 ( METHOD_6 ( ) , STRING_5 , VAR_4 ) ; VAR_3 . METHOD_7 ( VAR_5 , 0 , 0 ) ; VAR_3 . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( METHOD_3 ( ) ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . execute ( ) ; } else { VAR_2 . METHOD_4 ( false ) ; TYPE_3 VAR_3 = TYPE_3 . METHOD_5 ( METHOD_6 ( ) , STRING_5 , VAR_4 ) ; VAR_3 . METHOD_7 ( VAR_5 , 0 , 0 ) ; VAR_3 . show ( ) ; } }\n"}
{"problem": "private static void METHOD_1 ( ) { VAR_1 = new int [ ] { 0 , INT_1 , 0 , INT_2 , INT_2 , 0 , 0 , INT_2 , 0 , INT_3 , INT_2 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , INT_2 , 0 , INT_1 , INT_1 , 0 , INT_2 , INT_2 , 0 } ; }\n", "fixed": "private static void METHOD_1 ( ) { VAR_1 = new int [ ] { 0 , INT_1 , 0 , INT_2 , 0 , 0 , INT_2 , 0 , INT_3 , INT_2 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , INT_2 , 0 , INT_1 , INT_1 , 0 , INT_2 , 0 } ; }\n"}
{"problem": "public final boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . getName ( ) , VAR_1 ) ; VAR_3 . get ( STRING_1 ) . add ( VAR_1 . getName ( ) ) ; VAR_3 . get ( STRING_2 ) . add ( VAR_1 . getName ( ) ) ; VAR_4 . info ( ( STRING_3 + ( VAR_1 . getName ( ) ) ) ) ; return true ; }\n", "fixed": "public final boolean METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . put ( VAR_1 . getName ( ) , VAR_1 ) ; VAR_3 . get ( STRING_1 ) . add ( VAR_1 . getName ( ) ) ; VAR_3 . get ( STRING_2 ) . add ( VAR_1 . getName ( ) ) ; return true ; }\n"}
{"problem": "public void METHOD_1 ( ) { t . METHOD_2 ( STRING_1 ) ; t . start ( ) ; VAR_1 = getClass ( ) . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; try { t . METHOD_5 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_6 ( ) ; } java.lang.System.out.println ( ( STRING_2 + ( VAR_1 ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { t . METHOD_2 ( STRING_1 ) ; t . start ( ) ; VAR_1 = getClass ( ) . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( 1 ) ; try { t . METHOD_5 ( ) ; } catch ( TYPE_2 VAR_2 ) { VAR_2 . METHOD_6 ( ) ; } java.lang.System.out.println ( ( STRING_2 + ( VAR_1 ) ) ) ; }\n"}
{"problem": "private synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.Long > VAR_2 = this . VAR_3 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( VAR_2 == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; this . VAR_3 . put ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } VAR_2 . add ( VAR_1 . getId ( ) ) ; }\n", "fixed": "private synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < java.lang.Long > VAR_2 = this . VAR_3 . get ( VAR_1 . METHOD_3 ( ) ) ; if ( VAR_2 == null ) { VAR_2 = new java.util.ArrayList < > ( ) ; this . VAR_3 . put ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } VAR_2 . add ( VAR_1 . getId ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . put ( 1 , \"name\" , STRING_1 ) ; VAR_1 . put ( INT_1 , STRING_2 , STRING_1 ) ; VAR_1 . put ( ( - 1 ) , STRING_3 , STRING_1 ) ; TYPE_2 . assertEquals ( STRING_4 , VAR_1 . toString ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . put ( 1 , \"name\" , STRING_1 ) ; VAR_1 . put ( ( - 1 ) , STRING_3 , STRING_1 ) ; TYPE_2 . assertEquals ( STRING_4 , VAR_1 . toString ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; while ( ! ( VAR_2 . equals ( VAR_4 ) ) ) { VAR_3 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ; VAR_4 = VAR_3 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; while ( ! ( VAR_2 . equals ( VAR_4 ) ) ) { VAR_3 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) ; if ( VAR_3 == null ) { return ; } VAR_4 = VAR_3 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( final int VAR_1 , final int VAR_2 , final int VAR_3 , final int VAR_4 ) { VAR_5 . METHOD_2 ( VAR_6 , VAR_1 ) ; VAR_5 . METHOD_2 ( VAR_7 , VAR_2 ) ; VAR_5 . METHOD_2 ( VAR_8 , VAR_3 ) ; VAR_5 . METHOD_2 ( VAR_9 , VAR_4 ) ; return this ; }\n", "fixed": "public TYPE_1 METHOD_1 ( final int VAR_1 , final int VAR_2 , final int VAR_3 , final int VAR_4 ) { VAR_5 . METHOD_2 ( VAR_6 , VAR_1 ) ; VAR_5 . METHOD_2 ( VAR_7 , VAR_2 ) ; VAR_5 . METHOD_2 ( VAR_8 , VAR_3 ) ; VAR_5 . METHOD_2 ( VAR_9 , VAR_3 ) ; return this ; }\n"}
{"problem": "public java.lang.Object handle ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.lang.Exception { VAR_2 . info ( STRING_1 ) ; java.lang.String name = VAR_1 . params ( STRING_2 ) ; TYPE_3 VAR_3 = TYPE_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; if ( name == null ) { response . status ( INT_1 ) ; return null ; } TYPE_4 VAR_4 = VAR_5 . METHOD_3 ( VAR_3 ) ; response . status ( INT_2 ) ; response . METHOD_4 ( STRING_3 , STRING_4 ) ; return VAR_4 . METHOD_5 ( ) ; }\n", "fixed": "public java.lang.Object handle ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.lang.Exception { VAR_2 . info ( STRING_1 ) ; java.lang.String name = VAR_1 . params ( STRING_2 ) ; TYPE_3 VAR_3 = TYPE_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; if ( VAR_3 == null ) { response . status ( INT_1 ) ; return null ; } TYPE_4 VAR_4 = VAR_5 . METHOD_3 ( VAR_3 ) ; response . status ( INT_2 ) ; response . METHOD_4 ( STRING_3 , STRING_4 ) ; return VAR_4 . METHOD_5 ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { long VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( STRING_1 , VAR_3 ) ; long VAR_4 = VAR_5 . METHOD_4 ( VAR_1 ) ; TYPE_4 . METHOD_3 ( STRING_2 , VAR_4 ) ; VAR_2 . METHOD_5 ( VAR_5 , METHOD_6 ( VAR_3 ) ) ; return VAR_5 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { long VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( STRING_1 , VAR_3 ) ; long VAR_4 = VAR_5 . METHOD_4 ( VAR_1 ) ; TYPE_4 . METHOD_3 ( STRING_2 , VAR_4 ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_3 ) ; return VAR_5 ; }\n"}
{"problem": "private static void METHOD_1 ( int VAR_1 , int VAR_2 ) { for ( int [ ] VAR_3 : VAR_4 ) { if ( ( VAR_1 == ( ( VAR_3 [ 0 ] ) + 1 ) ) && ( VAR_2 == ( ( VAR_3 [ 1 ] ) + 1 ) ) ) { java.lang.System.out.println ( STRING_1 ) ; VAR_5 += INT_1 ; } } }\n", "fixed": "private static void METHOD_1 ( int VAR_1 , int VAR_2 ) { for ( int [ ] VAR_3 : VAR_4 ) { if ( ( VAR_1 == ( ( VAR_3 [ 0 ] ) + 1 ) ) && ( VAR_2 == ( ( VAR_3 [ 1 ] ) + 1 ) ) ) { VAR_3 [ 0 ] = 0 ; VAR_3 [ 1 ] = 0 ; java.lang.System.out.println ( STRING_1 ) ; VAR_5 += INT_1 ; } } }\n"}
{"problem": "protected final TYPE_1 METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) return TYPE_2 . METHOD_3 ( view . METHOD_4 ( ) , VAR_2 , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , text , 0 , 0 ) ; else return TYPE_2 . METHOD_5 ( view . METHOD_4 ( ) , text , 0 , 0 , VAR_2 ) ; }\n", "fixed": "protected final TYPE_1 METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) return TYPE_2 . METHOD_3 ( view . METHOD_4 ( ) , VAR_2 , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , text , 0 , 0 , false ) ; else return TYPE_2 . METHOD_5 ( view . METHOD_4 ( ) , text , 0 , 0 , VAR_2 , false ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; VAR_2 . add ( STRING_3 ) ; VAR_2 . add ( STRING_2 ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( STRING_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; VAR_2 . add ( STRING_3 ) ; VAR_2 . add ( STRING_2 ) ; TYPE_2 . assertEquals ( VAR_2 , TYPE_1 . METHOD_2 ( STRING_4 ) ) ; }\n"}
{"problem": "public java.util.Date METHOD_1 ( java.lang.String VAR_1 ) { java.util.Date date = null ; try { TYPE_1 VAR_2 = new TYPE_2 ( format , new TYPE_3 ( STRING_1 ) ) ; date = ( ( java.util.Date ) ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) ; } catch ( TYPE_4 VAR_3 ) { throw new TYPE_5 ( VAR_3 . METHOD_3 ( ) , VAR_3 ) ; } return date ; }\n", "fixed": "public java.util.Date METHOD_1 ( java.lang.String VAR_1 ) { java.util.Date date = null ; try { TYPE_1 VAR_2 = new TYPE_2 ( format ) ; date = ( ( java.util.Date ) ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) ; } catch ( TYPE_4 VAR_3 ) { throw new TYPE_5 ( VAR_3 . METHOD_3 ( ) , VAR_3 ) ; } return date ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 ) throws TYPE_3 { TYPE_1 VAR_4 = new TYPE_1 ( ) ; TYPE_4 VAR_5 = VAR_6 new TYPE_5 ( ) ; java.util.List < java.lang.String > VAR_7 = new java.util.ArrayList < > ( ) ; VAR_7 . add ( TYPE_6 . METHOD_2 ( VAR_1 , VAR_2 ) ) ; VAR_5 . METHOD_3 ( VAR_7 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_5 ( TYPE_7 . METHOD_6 ( VAR_3 ) ) ; return VAR_4 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 ) throws TYPE_3 { TYPE_1 VAR_4 = new TYPE_1 ( ) ; TYPE_4 VAR_5 = new TYPE_4 ( ) ; java.util.List < java.lang.String > VAR_7 = new java.util.ArrayList < > ( ) ; VAR_7 . add ( TYPE_6 . METHOD_2 ( VAR_1 , VAR_2 ) ) ; VAR_5 . METHOD_3 ( VAR_7 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_5 ( TYPE_7 . METHOD_6 ( VAR_3 ) ) ; return VAR_4 ; }\n"}
{"problem": "public double METHOD_1 ( double VAR_1 ) { double y = ( ( ( VAR_2 . METHOD_2 ( ) ) - 0 ) / ( ( content . METHOD_3 ( ) ) - ( content . METHOD_4 ( ) ) ) ) * ( VAR_1 - ( content . METHOD_4 ( ) ) ) ; return y ; }\n", "fixed": "public double METHOD_1 ( double VAR_1 ) { double x = ( VAR_2 . METHOD_2 ( ) ) * ( ( VAR_1 - ( content . METHOD_4 ( ) ) ) / ( ( content . METHOD_3 ( ) ) - ( content . METHOD_4 ( ) ) ) ) ; return x ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String name ) { boolean VAR_1 = VAR_2 . state ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 , true ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 , new TYPE_3 ( name ( ) , name ) , VAR_2 , VAR_5 , VAR_6 , VAR_7 , VAR_1 ) ; return VAR_3 . build ( ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String name ) { boolean VAR_1 = VAR_2 . state ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 , true ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 , new TYPE_3 ( name ( ) , name ) , VAR_2 , VAR_5 , VAR_6 . get ( ) , VAR_7 , VAR_1 ) ; return VAR_3 . build ( ) ; }\n"}
{"problem": "private java.lang.CharSequence METHOD_1 ( final java.lang.String className , final int size ) { return java.lang.String.format ( ( STRING_1 + ( ( ( ( ( ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) + STRING_10 ) + STRING_11 ) + STRING_5 ) + STRING_12 ) + STRING_13 ) ) , className , java.lang.Integer . METHOD_2 ( size ) , VAR_1 ) ; }\n", "fixed": "private java.lang.CharSequence METHOD_1 ( final java.lang.String className , final int size ) { return java.lang.String.format ( ( STRING_1 + ( ( ( ( ( ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) + STRING_10 ) + STRING_11 ) + STRING_5 ) + STRING_12 ) + STRING_13 ) ) , className , size , VAR_1 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String [ ] VAR_1 , java.lang.Class < ? > VAR_2 , TYPE_2 VAR_3 ) { final java.lang.StringBuilder VAR_4 = new java.lang.StringBuilder ( ) ; for ( java.lang.String VAR_5 : VAR_1 ) { VAR_4 . append ( VAR_5 ) ; VAR_4 . append ( STRING_1 ) ; } return VAR_3 . METHOD_2 ( VAR_6 , VAR_4 . toString ( ) , VAR_2 ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String [ ] VAR_1 , java.lang.Class < ? > VAR_2 , TYPE_2 VAR_3 ) { final java.lang.StringBuilder VAR_4 = new java.lang.StringBuilder ( ) ; for ( java.lang.String VAR_5 : VAR_1 ) { VAR_4 . append ( VAR_5 ) ; VAR_4 . append ( STRING_1 ) ; } return VAR_3 . METHOD_2 ( VAR_6 , VAR_4 . toString ( ) . trim ( ) , VAR_2 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) ) ; if ( VAR_3 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_4 ) ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; VAR_1 . METHOD_3 ( 0 , 0 , METHOD_6 ( ) , METHOD_7 ( ) ) ; if ( VAR_3 ) { VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_4 ) ) ; VAR_1 . METHOD_3 ( 0 , 0 , METHOD_6 ( ) , METHOD_7 ( ) ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( int id ) { if ( ( id < 0 ) || ( id >= ( TYPE_2 . METHOD_2 ( ) ) ) ) return null ; return TYPE_3 . METHOD_3 ( ) [ id ] . METHOD_4 ( VAR_1 , VAR_1 ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( int id ) { int i = ( ( id < 0 ) || ( id >= ( TYPE_2 . METHOD_2 ( ) ) ) ) ? 0 : id ; return TYPE_3 . METHOD_3 ( ) [ i ] . METHOD_4 ( VAR_1 , VAR_1 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; for ( int i = 0 ; i < ( VAR_1 . length ( ) ) ; i ++ ) { final char VAR_3 = VAR_1 . METHOD_2 ( i ) ; if ( ( TYPE_1 . METHOD_3 ( VAR_3 ) ) || ( VAR_3 == CHAR_1 ) ) { VAR_2 += VAR_3 ; } else { VAR_2 += STRING_2 + VAR_3 ; } } return VAR_2 ; }\n", "fixed": "public java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; for ( int i = 0 ; i < ( VAR_1 . length ( ) ) ; i ++ ) { final char VAR_3 = VAR_1 . METHOD_2 ( i ) ; if ( ( TYPE_1 . METHOD_3 ( VAR_3 ) ) || ( VAR_3 == CHAR_1 ) ) { VAR_2 += VAR_3 ; } else { VAR_2 += STRING_2 + ( TYPE_1 . toLowerCase ( VAR_3 ) ) ; } } return VAR_2 ; }\n"}
{"problem": "void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( VAR_3 , METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( VAR_4 , METHOD_6 ( ) ) ; VAR_1 . METHOD_5 ( VAR_5 , METHOD_7 ( ) ) ; VAR_1 . METHOD_5 ( VAR_6 , METHOD_8 ( ) ) ; VAR_1 . METHOD_5 ( VAR_7 , METHOD_9 ( ) ) ; }\n", "fixed": "void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( VAR_2 , METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( VAR_3 , METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( VAR_4 , METHOD_6 ( ) ) ; VAR_1 . METHOD_5 ( VAR_5 , METHOD_7 ( ) ) ; VAR_1 . METHOD_5 ( VAR_6 , METHOD_8 ( ) ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( VAR_2 ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; VAR_4 = VAR_5 . METHOD_6 ( VAR_4 ) ; } return VAR_1 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( VAR_2 ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_4 = VAR_5 . METHOD_6 ( VAR_4 ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( 1 ) ) ) ; METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 , VAR_3 , VAR_4 ) ) ; assertTrue ( VAR_1 . METHOD_4 ( VAR_2 , VAR_3 , VAR_5 ) ) ; TYPE_1 VAR_6 = ( ( TYPE_1 ) ( METHOD_2 ( 1 , STRING_1 ) ) ) ; VAR_6 . METHOD_5 ( VAR_7 [ 1 ] ) ; assertTrue ( VAR_6 . METHOD_4 ( VAR_2 , VAR_3 , VAR_5 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( 1 , STRING_1 ) ) ) ; METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 , VAR_3 , VAR_4 ) ) ; assertTrue ( VAR_1 . METHOD_4 ( VAR_2 , VAR_3 , VAR_5 ) ) ; TYPE_1 VAR_6 = ( ( TYPE_1 ) ( METHOD_2 ( 1 , STRING_1 ) ) ) ; VAR_6 . METHOD_5 ( VAR_7 [ 1 ] ) ; assertTrue ( VAR_6 . METHOD_4 ( VAR_2 , VAR_3 , VAR_5 ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . get ( getActivity ( ) ) ; java.util.List < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; if ( ( VAR_4 ) == null ) { VAR_4 = new TYPE_3 ( VAR_2 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; } else { VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_4 . METHOD_6 ( ) ; } METHOD_7 ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . get ( getActivity ( ) ) ; java.util.List < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { VAR_3 . METHOD_3 ( VAR_2 ) ; } if ( ( VAR_4 ) == null ) { VAR_4 = new TYPE_3 ( VAR_2 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; } else { VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_4 . METHOD_6 ( ) ; } METHOD_7 ( ) ; }\n"}
{"problem": "public static int METHOD_1 ( java.lang.String VAR_1 ) { int value = - 1 ; while ( value < 0 ) { try { java.lang.System.out.print ( VAR_1 ) ; value = VAR_2 . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_3 ) { java.lang.System.err.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; } } return value ; }\n", "fixed": "public static int METHOD_1 ( java.lang.String VAR_1 ) { int value = - 1 ; while ( value < 0 ) { try { java.lang.System.out.print ( VAR_1 ) ; value = VAR_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_3 ) { java.lang.System.err.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; } } return value ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { android.view.View VAR_2 = view . METHOD_2 ( VAR_3 ) ; if ( ( VAR_4 ) != null ) { android.view.View VAR_5 = VAR_4 . METHOD_2 ( VAR_3 ) ; VAR_5 . METHOD_3 ( METHOD_4 ( ) . getColor ( VAR_6 ) ) ; } METHOD_5 ( VAR_2 , VAR_2 . METHOD_6 ( ) , METHOD_4 ( ) . getColor ( VAR_7 ) ) ; VAR_4 = view ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < ? > VAR_1 , android.view.View view , int position , long id ) { android.view.View VAR_2 = view . METHOD_2 ( VAR_3 ) ; METHOD_5 ( VAR_2 , VAR_2 . METHOD_6 ( ) , METHOD_4 ( ) . getColor ( VAR_7 ) ) ; VAR_4 = view ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 = VAR_3 ; VAR_1 . error = ( error ) / ( VAR_3 ) ; VAR_4 = VAR_5 ; VAR_6 = ( ( VAR_7 ) / FLOAT_1 ) / ( VAR_3 ) ; VAR_4 = VAR_5 ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_2 = VAR_3 ; VAR_1 . error = ( error ) / ( VAR_3 ) ; VAR_6 = ( ( VAR_7 ) / FLOAT_1 ) / ( VAR_3 ) ; VAR_4 = VAR_5 ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 context , java.lang.String error , java.lang.String VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 , error ) ; VAR_3 += ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) + error ) + \"\\n\" ; if ( ( VAR_4 ) > 0 ) { -- ( VAR_4 ) ; if ( ( ( VAR_4 ) == 0 ) && ( ( VAR_5 ) != null ) ) { METHOD_3 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 context , java.lang.String error , java.lang.String VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 , VAR_1 , error ) ; VAR_3 += ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) + error ) + \"\\n\" ; if ( ( ( ( VAR_4 ) -- ) == 0 ) && ( ( VAR_5 ) != null ) ) { METHOD_3 ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( VAR_3 class ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 ) . METHOD_6 ( VAR_4 class ) ; METHOD_3 ( ) . METHOD_4 ( STRING_3 ) . METHOD_5 ( VAR_5 class ) ; METHOD_7 ( ) . METHOD_8 ( INT_1 ) . METHOD_9 ( INT_2 ) ; }\n", "fixed": "protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( VAR_3 class ) ; METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_6 ( VAR_4 class ) ; METHOD_3 ( ) . METHOD_4 ( STRING_2 ) . METHOD_5 ( VAR_5 class ) ; METHOD_7 ( ) . METHOD_8 ( INT_1 ) . METHOD_9 ( INT_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_2 , INT_1 , CHAR_1 ) ; VAR_1 . METHOD_2 ( INT_2 ) ; METHOD_3 ( STRING_3 ) ; java.lang.Thread . METHOD_4 ( INT_3 ) ; try { VAR_1 . METHOD_2 ( INT_2 ) ; fail ( STRING_4 ) ; } catch ( java.io.IOException VAR_2 ) { } METHOD_3 ( STRING_5 ) ; VAR_1 . METHOD_2 ( INT_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { java.lang.System.out.println ( STRING_1 ) ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_2 , INT_1 , CHAR_1 ) ; VAR_1 . METHOD_2 ( INT_2 ) ; METHOD_3 ( STRING_3 ) ; try { VAR_1 . METHOD_2 ( INT_2 ) ; fail ( STRING_4 ) ; } catch ( java.io.IOException VAR_2 ) { } METHOD_3 ( STRING_5 ) ; VAR_1 . METHOD_2 ( INT_2 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String type ) { TYPE_2 VAR_1 ; TYPE_3 VAR_2 ; TYPE_1 VAR_3 ; try { VAR_1 = TYPE_2 . METHOD_2 ( VAR_4 class ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = ( ( TYPE_1 ) ( VAR_2 . METHOD_1 ( new java.io.File ( ( ( ( VAR_5 ) + type ) + STRING_1 ) ) ) ) ) ; return VAR_3 ; } catch ( TYPE_4 VAR_6 ) { VAR_6 . METHOD_4 ( ) ; } return new TYPE_1 ( ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.io.File file ) { TYPE_2 VAR_1 ; TYPE_3 VAR_2 ; TYPE_1 VAR_3 ; try { VAR_1 = TYPE_2 . METHOD_2 ( VAR_4 class ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = ( ( TYPE_1 ) ( VAR_2 . METHOD_1 ( file ) ) ) ; return VAR_3 ; } catch ( TYPE_4 VAR_6 ) { VAR_6 . METHOD_4 ( ) ; } return new TYPE_1 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( getActivity ( ) . METHOD_2 ( ) . getBoolean ( VAR_2 ) ) { VAR_1 . METHOD_3 ( VAR_3 ) . setEnabled ( false ) . METHOD_4 ( false ) ; VAR_1 . METHOD_3 ( VAR_4 ) . setEnabled ( false ) . METHOD_4 ( false ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( getActivity ( ) . METHOD_2 ( ) . getBoolean ( VAR_2 ) ) { VAR_1 . METHOD_3 ( VAR_3 ) . setEnabled ( false ) . METHOD_4 ( false ) ; VAR_1 . METHOD_3 ( VAR_4 ) . setEnabled ( false ) . METHOD_4 ( false ) ; } VAR_1 . METHOD_3 ( VAR_4 ) . setEnabled ( false ) . METHOD_4 ( false ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( VAR_4 . METHOD_6 ( ) , \"true\" ) ; TYPE_1 . METHOD_7 ( VAR_5 ) . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; METHOD_8 ( VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( VAR_4 . METHOD_6 ( ) , \"true\" ) ; TYPE_1 . METHOD_7 ( VAR_5 ) . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; TYPE_1 . METHOD_8 ( VAR_5 ) ; }\n"}
{"problem": "private void METHOD_1 ( boolean [ ] b , int offset ) { int n = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( b [ ( offset + i ) ] ) { n |= 1 < < ( INT_2 - i ) ; } } METHOD_2 ( n ) ; }\n", "fixed": "private void METHOD_1 ( boolean [ ] b , int offset ) { int n = 0 ; for ( int i = 0 ; i < INT_1 ; i ++ ) { if ( b [ ( offset + i ) ] ) { n |= 1 < < i ; } } METHOD_2 ( n ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 class ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; return VAR_4 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 class ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; return VAR_4 ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String message , java.lang.Throwable VAR_2 ) { if ( VAR_2 != null ) { VAR_1 . error ( VAR_2 ) ; } else if ( message . contains ( STRING_1 ) ) { VAR_1 . info ( message ) ; } else if ( message . contains ( STRING_2 ) ) { VAR_1 . METHOD_2 ( message ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String message , java.lang.Throwable VAR_2 ) { if ( VAR_2 != null ) { VAR_1 . error ( VAR_2 ) ; } else if ( message . contains ( STRING_1 ) ) { VAR_1 . METHOD_2 ( message ) ; } else if ( message . contains ( STRING_2 ) ) { VAR_1 . METHOD_2 ( message ) ; } }\n"}
{"problem": "private static java.lang.String METHOD_1 ( java.util.HashMap < java.lang.String , java.util.ArrayList < java.lang.String > > VAR_1 ) { java.lang.String key = STRING_1 ; for ( java.util.Map.Entry < java.lang.String , java.util.ArrayList < java.lang.String > > VAR_2 : VAR_1 . METHOD_2 ( ) ) { key = VAR_2 . METHOD_3 ( ) ; java.util.ArrayList < java.lang.String > list = VAR_2 . getValue ( ) ; if ( ( list . size ( ) ) > 1 ) { return key ; } } return key ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.util.HashMap < java.lang.String , java.util.ArrayList < java.lang.String > > VAR_1 ) { java.lang.String key = STRING_1 ; for ( java.util.Map.Entry < java.lang.String , java.util.ArrayList < java.lang.String > > VAR_2 : VAR_1 . METHOD_2 ( ) ) { key = VAR_2 . METHOD_3 ( ) ; java.util.ArrayList < java.lang.String > list = VAR_2 . getValue ( ) ; if ( ( list . size ( ) ) > 1 ) { return key ; } } if ( key == null ) { return STRING_1 ; } else { return key ; } }\n"}
{"problem": "public boolean METHOD_1 ( ) { TYPE_1 . info ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; boolean VAR_1 = false ; if ( ( this . VAR_2 ) != null ) { if ( ( this . VAR_2 . METHOD_2 ( ) ) != null ) { VAR_1 = this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; } } return VAR_1 ; }\n", "fixed": "public boolean METHOD_1 ( ) { boolean VAR_1 = false ; if ( ( this . VAR_2 ) != null ) { if ( ( this . VAR_2 . METHOD_2 ( ) ) != null ) { VAR_1 = this . VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; } } return VAR_1 ; }\n"}
{"problem": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 string , int start , int length ) { if ( ( VAR_2 ) == null ) { TYPE_3 . METHOD_2 ( ) ; VAR_2 = METHOD_3 ( TYPE_4 . METHOD_4 ( getContext ( ) , METHOD_5 ( ) , new TYPE_5 [ ] { null , null , null } ) ) ; } return VAR_2 . METHOD_6 ( VAR_1 , string , start , length ) ; }\n", "fixed": "public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 string , int start , int length ) { if ( ( VAR_2 ) == null ) { TYPE_3 . METHOD_2 ( ) ; VAR_2 = METHOD_3 ( TYPE_4 . METHOD_4 ( getContext ( ) , METHOD_5 ( ) , new TYPE_5 [ ] { null , null , null } ) ) ; } return VAR_2 . execute ( VAR_1 , string , start , length ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( ( ( VAR_1 ) != null ) && ( ( VAR_1 ) instanceof TYPE_1 ) ) && ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) { ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_3 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( ( ( VAR_1 ) != null ) && ( ( VAR_1 ) instanceof TYPE_1 ) ) && ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) { ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_1 ( ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : if ( VAR_2 . METHOD_3 ( VAR_3 ) ) { TYPE_2 . METHOD_4 ( this , VAR_3 ) ; } return true ; case VAR_4 : android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_5 ( intent ) ; return true ; default : return super . METHOD_1 ( item ) ; } }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_4 : android.content.Intent intent = new android.content.Intent ( this , VAR_5 class ) ; METHOD_5 ( intent ) ; return true ; default : return super . METHOD_1 ( item ) ; } }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 f ) { VAR_1 . METHOD_2 ( ) ; TYPE_2 < TYPE_3 > VAR_2 = new TYPE_2 < TYPE_3 > ( STRING_1 ) ; VAR_2 . METHOD_3 ( f . METHOD_4 ( ) , new TYPE_4 < TYPE_3 > ( ) { public void METHOD_5 ( TYPE_3 VAR_3 , TYPE_5 VAR_4 ) { try { VAR_3 . delete ( ) ; } catch ( TYPE_6 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } VAR_1 . METHOD_7 ( ) ; } } ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 f ) { TYPE_2 < TYPE_3 > VAR_2 = new TYPE_2 < TYPE_3 > ( STRING_1 ) ; VAR_2 . METHOD_3 ( f . METHOD_4 ( ) , new TYPE_4 < TYPE_3 > ( ) { public void METHOD_5 ( TYPE_3 VAR_3 , TYPE_5 VAR_4 ) { try { VAR_3 . delete ( ) ; } catch ( TYPE_6 VAR_5 ) { VAR_5 . METHOD_6 ( ) ; } } } ) ; }\n"}
{"problem": "public int METHOD_1 ( int x , int y ) { if ( ! ( METHOD_2 ( x , y ) ) ) { java.lang.System.err.println ( ( ( ( ( STRING_1 + x ) + STRING_2 ) + y ) + STRING_3 ) ) ; return 0 ; } ( VAR_1 ) ++ ; TYPE_1 VAR_2 = VAR_3 [ x ] [ y ] ; if ( VAR_4 ) { return 0 ; } METHOD_3 ( x , y ) ; return VAR_2 . value ; }\n", "fixed": "public int METHOD_1 ( int x , int y ) { if ( ! ( METHOD_2 ( x , y ) ) ) { java.lang.System.out.println ( ( ( ( ( STRING_1 + x ) + STRING_2 ) + y ) + STRING_3 ) ) ; return 0 ; } ( VAR_1 ) ++ ; TYPE_1 VAR_2 = VAR_3 [ x ] [ y ] ; if ( VAR_4 ) { return 0 ; } METHOD_3 ( x , y ) ; return VAR_2 . value ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 source , TYPE_1 target , TYPE_2 VAR_1 ) { super . METHOD_1 ( source , target , VAR_1 ) ; if ( VAR_2 . equals ( target . METHOD_2 ( ) ) ) { TYPE_3 . METHOD_3 ( ( ) - > { TYPE_4 . METHOD_4 ( ) . METHOD_5 ( VAR_1 , source , STRING_1 ) ; } ) ; } METHOD_6 ( source ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 source , TYPE_1 target , TYPE_2 VAR_1 ) { super . METHOD_1 ( source , target , VAR_1 ) ; if ( VAR_2 . equals ( target . METHOD_2 ( ) ) ) { TYPE_3 . METHOD_3 ( ( ) - > { TYPE_4 . METHOD_4 ( ) . METHOD_5 ( VAR_1 , source , STRING_1 ) ; } ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : this . VAR_3 ) { if ( ( ! ( VAR_2 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( ) . getName ( ) . equals ( VAR_1 ) ) ) { return VAR_2 ; } } throw new TYPE_2 ( ( STRING_1 + VAR_1 ) ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : this . VAR_3 ) { if ( ( ! ( VAR_2 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( ) . getName ( ) . equals ( VAR_1 ) ) ) { return VAR_2 ; } } return null ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class ) ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_1 ) ) ; TYPE_4 < TYPE_1 > result = VAR_4 . METHOD_7 ( STRING_1 ) ; org.testng.Assert.assertEquals ( result . size ( ) , 1 ) ; org.testng.Assert.assertEquals ( result . METHOD_8 ( 0 ) , VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 class ) ; METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_1 ) ) ; TYPE_4 < TYPE_1 > result = VAR_4 . METHOD_7 ( STRING_1 ) ; org.testng.Assert.assertEquals ( result . size ( ) , 1 ) ; org.testng.Assert.assertEquals ( result . METHOD_8 ( 0 ) , VAR_1 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( VAR_3 . METHOD_1 ( ) ) ; VAR_1 . METHOD_3 ( name . METHOD_1 ( ) ) ; for ( TYPE_2 param : this . params ) VAR_1 . METHOD_3 ( param . METHOD_1 ( ) ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ; if ( ( VAR_3 ) != null ) VAR_1 . METHOD_3 ( VAR_3 . METHOD_1 ( ) ) ; VAR_1 . METHOD_3 ( name . METHOD_1 ( ) ) ; for ( TYPE_2 param : this . params ) VAR_1 . METHOD_3 ( param . METHOD_1 ( ) ) ; return VAR_1 ; }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_1 VAR_2 = VAR_3 ; TYPE_1 VAR_4 = VAR_3 ; if ( ( VAR_1 . size ( ) ) > 0 ) { for ( TYPE_1 VAR_5 : VAR_1 ) { VAR_4 = VAR_4 . add ( new TYPE_1 ( java.lang.Math.pow ( VAR_5 . METHOD_2 ( ) , INT_1 ) ) ) ; } } java.lang.System.out.println ( ( STRING_1 + VAR_4 ) ) ; VAR_2 = new TYPE_1 ( TYPE_2 . METHOD_3 ( VAR_4 . METHOD_2 ( ) ) ) ; return VAR_2 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_1 VAR_2 = VAR_3 ; TYPE_1 VAR_4 = VAR_3 ; if ( ( VAR_1 . size ( ) ) > 0 ) { for ( TYPE_1 VAR_5 : VAR_1 ) { VAR_4 = VAR_4 . add ( new TYPE_1 ( java.lang.Math.pow ( VAR_5 . METHOD_2 ( ) , INT_1 ) ) ) ; } } VAR_2 = new TYPE_1 ( TYPE_2 . METHOD_3 ( VAR_4 . METHOD_2 ( ) ) ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String text ) { java.lang.String [ ] array = text . replaceAll ( STRING_1 , STRING_2 ) . toLowerCase ( ) . split ( STRING_3 ) ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { java.lang.String VAR_1 = array [ i ] ; METHOD_2 ( VAR_1 ) ; ( VAR_2 ) ++ ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String text ) { java.lang.String [ ] array = text . replaceAll ( STRING_1 , STRING_2 ) . toLowerCase ( ) . split ( STRING_3 ) ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { java.lang.String VAR_1 = array [ i ] ; METHOD_2 ( VAR_1 ) ; } VAR_2 = size ( ) ; }\n"}
{"problem": "private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 data ) { VAR_2 . METHOD_2 ( VAR_1 , data ) ; java.lang.String text = VAR_1 . METHOD_3 ( STRING_1 ) . first ( ) . METHOD_4 ( 0 ) . METHOD_4 ( INT_1 ) . METHOD_4 ( 0 ) . text ( ) ; data . put ( STRING_2 , string ( text . substring ( 0 , text . METHOD_5 ( CHAR_1 ) ) ) ) ; VAR_2 . METHOD_6 ( ) ; }\n", "fixed": "private static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; java.lang.String text = VAR_1 . METHOD_3 ( STRING_1 ) . first ( ) . METHOD_4 ( 0 ) . METHOD_4 ( INT_1 ) . METHOD_4 ( 0 ) . text ( ) ; return VAR_2 . METHOD_6 ( text . substring ( 0 , text . METHOD_5 ( CHAR_1 ) ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { if ( METHOD_2 ( item ) ) { java.lang.String VAR_1 = METHOD_3 ( item ) ; if ( ( VAR_1 != null ) && ( VAR_1 . startsWith ( VAR_2 ) ) ) { return true ; } } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { if ( METHOD_2 ( item ) ) { java.lang.String VAR_1 = METHOD_3 ( item ) ; if ( ( VAR_1 == null ) || ( VAR_1 . startsWith ( VAR_2 ) ) ) { return true ; } } return false ; }\n"}
{"problem": "public java.lang.Boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { java.util.List < TYPE_1 > values = VAR_1 . METHOD_3 ( ) ; for ( TYPE_1 VAR_3 : values ) { java.lang.String value = VAR_3 . getValue ( ) ; if ( ! ( value . METHOD_4 ( VAR_4 ) ) ) { return java.lang.Boolean . METHOD_5 ( value ) ; } } } return null ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { java.util.List < TYPE_1 > values = VAR_1 . METHOD_3 ( ) ; for ( TYPE_1 VAR_3 : values ) { java.lang.String value = VAR_3 . getValue ( ) ; if ( ! ( value . METHOD_4 ( VAR_4 ) ) ) { return value ; } } } return null ; }\n"}
{"problem": "public short METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { return ( ( VAR_1 < ( VAR_4 ) ) && ( VAR_2 < ( VAR_5 ) ) ) && ( VAR_3 < ( VAR_6 ) ) ? VAR_7 [ VAR_1 ] [ VAR_2 ] [ VAR_3 ] : TYPE_1 . METHOD_2 ( ) ; }\n", "fixed": "public short METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { return ( ( ( ( ( VAR_1 < ( VAR_4 ) ) && ( VAR_2 < ( VAR_5 ) ) ) && ( VAR_3 < ( VAR_6 ) ) ) && ( VAR_1 > ( - 1 ) ) ) && ( VAR_2 > ( - 1 ) ) ) && ( VAR_3 > ( - 1 ) ) ? VAR_7 [ VAR_1 ] [ VAR_2 ] [ VAR_3 ] : TYPE_1 . METHOD_2 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; TYPE_1 VAR_1 = ( ( TYPE_1 ) ( context . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 , ( ( TYPE_2 . METHOD_4 ( ) ) + ( INT_1 * INT_2 ) ) , ( INT_1 * INT_2 ) , METHOD_5 ( context ) ) ; }\n", "fixed": "public void METHOD_1 ( android.content.Context context ) { super . METHOD_1 ( context ) ; TYPE_1 VAR_1 = ( ( TYPE_1 ) ( context . METHOD_2 ( VAR_2 ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 , TYPE_2 . METHOD_4 ( ) , ( INT_1 * INT_2 ) , METHOD_5 ( context ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 t = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; switch ( VAR_2 ) { case VAR_3 : METHOD_3 ( VAR_4 ) ; break ; case VAR_5 : METHOD_3 ( VAR_6 ) ; break ; case VAR_7 : METHOD_3 ( VAR_8 ) ; break ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 t = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; switch ( VAR_2 ) { case VAR_3 : METHOD_3 ( VAR_4 ) ; break ; case VAR_5 : METHOD_3 ( VAR_6 ) ; break ; case VAR_7 : METHOD_3 ( VAR_8 ) ; break ; } java.lang.System.out.println ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException , TYPE_1 { java.util.Collection < TYPE_2 > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; for ( TYPE_2 VAR_4 : VAR_2 ) { TYPE_3 VAR_5 = VAR_6 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; if ( VAR_5 != null ) { VAR_5 . METHOD_4 ( VAR_4 ) ; VAR_6 . METHOD_5 ( VAR_5 ) ; } } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException , TYPE_1 { java.util.Collection < TYPE_2 > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) return ; for ( TYPE_2 VAR_4 : VAR_2 ) { TYPE_3 VAR_5 = VAR_6 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; if ( VAR_5 != null ) { VAR_5 . METHOD_4 ( VAR_4 ) ; VAR_6 . METHOD_5 ( VAR_5 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( new TYPE_4 ( ) ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( new TYPE_5 ( ) ) . build ( ) ; VAR_2 . METHOD_6 ( null ) ; n = VAR_2 . METHOD_7 ( 0 , 0 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( new TYPE_4 ( ) ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( new TYPE_5 ( ) ) . build ( ) ; VAR_2 . METHOD_6 ( null ) ; n = VAR_2 . METHOD_7 ( 0 , 0 ) ; }\n"}
{"problem": "public TYPE_1 execute ( ) { try { VAR_1 . METHOD_1 ( VAR_2 ) ; return new TYPE_1 ( java.lang.String.format ( VAR_3 , VAR_2 ) ) ; } catch ( TYPE_2 VAR_4 ) { return new TYPE_1 ( STRING_1 ) ; } catch ( TYPE_3 VAR_5 ) { return new TYPE_1 ( STRING_2 ) ; } }\n", "fixed": "public TYPE_1 execute ( ) { try { VAR_1 . METHOD_1 ( VAR_2 ) ; return new TYPE_1 ( java.lang.String.format ( VAR_3 , ( ( VAR_2 ) + 1 ) ) ) ; } catch ( TYPE_2 VAR_4 ) { return new TYPE_1 ( STRING_1 ) ; } catch ( TYPE_3 VAR_5 ) { return new TYPE_1 ( STRING_2 ) ; } }\n"}
{"problem": "public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String error , java.lang.Throwable VAR_2 ) { if ( VAR_3 ) { java.lang.System.out.println ( ( ( VAR_1 + STRING_1 ) + error ) ) ; VAR_2 . METHOD_2 ( ) ; } if ( ( VAR_4 ) != null ) VAR_4 . METHOD_3 ( STRING_2 , VAR_1 , error , VAR_2 , true ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String error , java.lang.Throwable VAR_2 ) { if ( VAR_3 ) { java.lang.System.out.println ( ( ( VAR_1 + STRING_1 ) + error ) ) ; if ( VAR_2 != null ) VAR_2 . METHOD_2 ( ) ; } if ( ( VAR_4 ) != null ) VAR_4 . METHOD_3 ( STRING_2 , VAR_1 , error , VAR_2 , true ) ; }\n"}
{"problem": "public static double [ ] [ ] METHOD_1 ( double [ ] [ ] a ) { double [ ] [ ] tmp = new double [ a [ 0 ] . length ] [ a . length ] ; for ( int j = 0 ; j < ( a [ 0 ] . length ) ; j ++ ) for ( int i = 0 ; i < ( a . length ) ; i ++ ) tmp [ j ] [ i ] = a [ i ] [ j ] ; return tmp ; }\n", "fixed": "public static int [ ] [ ] METHOD_1 ( int [ ] [ ] a ) { final int [ ] [ ] tmp = new int [ a [ 0 ] . length ] [ a . length ] ; for ( int j = 0 ; j < ( a [ 0 ] . length ) ; j ++ ) for ( int i = 0 ; i < ( a . length ) ; i ++ ) tmp [ j ] [ i ] = a [ i ] [ j ] ; return tmp ; }\n"}
{"problem": "private int METHOD_1 ( java.lang.String VAR_1 ) { for ( int i = 0 ; i < ( this . VAR_2 ) ; i ++ ) { if ( this . VAR_3 [ i ] . getName ( ) . equals ( VAR_1 ) ) { return i ; } } return - 1 ; }\n", "fixed": "public int METHOD_1 ( java.lang.String VAR_1 ) { for ( int i = 0 ; i < ( this . VAR_2 ) ; i ++ ) { if ( this . VAR_3 [ i ] . getName ( ) . equals ( VAR_1 ) ) { return i ; } } return - 1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 value ) { if ( ( ( size ) + 1 ) > ( VAR_1 . length ) ) { METHOD_2 ( ) ; } if ( ( VAR_1 [ VAR_2 ] ) != null ) { if ( ( VAR_2 ) == 0 ) { VAR_2 = ( VAR_1 . length ) - 1 ; } else { ( VAR_2 ) -- ; } } VAR_1 [ VAR_2 ] = value ; ( size ) ++ ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 value ) { if ( ( size ) == ( VAR_1 . length ) ) { METHOD_2 ( ) ; } ( VAR_2 ) -- ; if ( ( VAR_2 ) == ( - 1 ) ) { VAR_2 = ( VAR_1 . length ) - 1 ; } VAR_1 [ VAR_2 ] = value ; ( size ) ++ ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; this . VAR_3 = VAR_1 . METHOD_3 ( STRING_2 ) ; this . VAR_4 = VAR_1 . getString ( STRING_3 ) ; if ( this . VAR_4 . equals ( STRING_4 ) ) { this . VAR_4 = TYPE_2 . METHOD_4 ( ) . toString ( ) ; } VAR_5 . info ( this . VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; this . VAR_3 = VAR_1 . METHOD_3 ( STRING_2 ) ; this . VAR_4 = VAR_1 . getString ( STRING_3 ) ; if ( this . VAR_4 . equals ( STRING_4 ) ) { this . VAR_4 = TYPE_2 . METHOD_4 ( ) . toString ( ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( int VAR_1 , int height ) throws TYPE_2 { if ( ( VAR_1 <= 0 ) || ( height < 0 ) ) throw new TYPE_2 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = new char [ VAR_1 ] [ height ] ; VAR_4 = VAR_2 ; return VAR_2 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( int VAR_1 , int height ) throws TYPE_2 { if ( ( VAR_1 <= 0 ) || ( height <= 0 ) ) throw new TYPE_2 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = new char [ VAR_1 ] [ height ] ; VAR_4 = VAR_2 ; return VAR_2 ; }\n"}
{"problem": "public static int METHOD_1 ( int VAR_1 ) { if ( VAR_1 <= INT_1 ) { return ( INT_2 * VAR_1 ) + INT_3 ; } else if ( VAR_1 <= INT_4 ) { return ( INT_5 * VAR_1 ) - INT_6 ; } else { return ( INT_7 * VAR_1 ) - INT_8 ; } }\n", "fixed": "public static int METHOD_1 ( int VAR_1 ) { if ( VAR_1 < INT_1 ) { return ( INT_2 * VAR_1 ) + INT_3 ; } else if ( VAR_1 < INT_4 ) { return ( INT_5 * VAR_1 ) - INT_6 ; } else { return ( INT_7 * VAR_1 ) - INT_8 ; } }\n"}
{"problem": "public void execute ( ) throws TYPE_1 , TYPE_2 { final TYPE_3 VAR_1 = METHOD_1 ( ) ; for ( java.io.File VAR_2 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( new java.io.File ( VAR_2 , STRING_1 ) . METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( VAR_2 , STRING_2 , STRING_3 ) ; } VAR_1 . METHOD_4 ( VAR_2 , STRING_2 , STRING_4 , VAR_1 . METHOD_5 ( ) , STRING_5 ) ; } }\n", "fixed": "public void execute ( ) throws TYPE_1 , TYPE_2 { final TYPE_3 VAR_1 = METHOD_1 ( ) ; for ( java.io.File VAR_2 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( new java.io.File ( VAR_2 , STRING_1 ) . METHOD_3 ( ) ) ) { VAR_1 . METHOD_4 ( VAR_2 , STRING_2 , STRING_3 ) ; } VAR_1 . METHOD_4 ( VAR_2 , STRING_2 , STRING_5 ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_2 . METHOD_7 ( new TYPE_3 ( ) { public void METHOD_8 ( android.view.View VAR_3 ) { METHOD_9 ( ) ; } } ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; VAR_2 . METHOD_7 ( new TYPE_3 ( ) { public void METHOD_8 ( android.view.View VAR_3 ) { METHOD_9 ( ) ; } } ) ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( int VAR_2 ) { TYPE_1 < TYPE_2 > . VAR_1 node ; TYPE_1 < TYPE_2 > . VAR_1 VAR_3 ; node = this ; VAR_3 = VAR_4 ; while ( ( VAR_3 != null ) && ( ( VAR_5 ) >= VAR_2 ) ) { node = VAR_3 ; VAR_3 = VAR_4 ; } return node ; }\n", "fixed": "public TYPE_1 < TYPE_2 > . VAR_1 METHOD_1 ( int VAR_2 ) { TYPE_1 < TYPE_2 > . VAR_1 node = this ; TYPE_1 < TYPE_2 > . VAR_1 VAR_3 = VAR_4 ; while ( ( VAR_3 != null ) && ( ( VAR_5 ) >= VAR_2 ) ) { node = VAR_3 ; VAR_3 = VAR_4 ; } return node ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( float VAR_1 , float VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_5 . METHOD_3 ( VAR_1 ) ) ; VAR_4 . METHOD_4 ( VAR_5 . METHOD_3 ( VAR_2 ) ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; return VAR_4 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( double VAR_1 , double VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_5 . METHOD_3 ( VAR_1 ) ) ; VAR_4 . METHOD_4 ( VAR_5 . METHOD_3 ( VAR_2 ) ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { TYPE_2 list = VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; for ( int i = 0 ; i < ( list . METHOD_4 ( ) ) ; i ++ ) { VAR_5 . add ( list . METHOD_5 ( i ) ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { TYPE_2 list = VAR_1 . METHOD_3 ( VAR_2 , VAR_4 ) ; for ( int i = 0 ; i < ( list . METHOD_4 ( ) ) ; i ++ ) { VAR_5 . add ( list . METHOD_5 ( i ) ) ; } } }\n"}
{"problem": "void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; if ( ! ( ( this . VAR_2 . METHOD_3 ( ) ) instanceof TYPE_1 ) ) { METHOD_4 ( VAR_3 ) ; } TYPE_2 VAR_4 = TYPE_3 . METHOD_5 ( ) . METHOD_6 ( VAR_5 , this . VAR_2 ) ; VAR_4 . METHOD_7 ( ) ; try { VAR_4 . open ( ) ; } finally { VAR_4 . METHOD_7 ( ) ; } }\n", "fixed": "void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; if ( ! ( ( this . VAR_2 . METHOD_3 ( ) ) instanceof TYPE_1 ) ) { METHOD_4 ( VAR_3 ) ; } TYPE_2 VAR_4 = TYPE_3 . METHOD_5 ( ) . METHOD_6 ( context , this . VAR_2 ) ; VAR_4 . METHOD_7 ( ) ; try { VAR_4 . open ( ) ; } finally { VAR_4 . METHOD_7 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; int VAR_2 = VAR_3 . METHOD_4 ( ) ; int VAR_4 = TYPE_1 . METHOD_5 ( java.lang.Math.round ( ( ( 1.0F * VAR_2 ) / ( VAR_5 ) ) ) , 1 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 . METHOD_7 ( VAR_6 , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_4 ) ) ; VAR_7 = new TYPE_3 ( getActivity ( ) , VAR_8 ) ; VAR_3 . METHOD_8 ( VAR_7 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( this ) ; int VAR_2 = VAR_3 . METHOD_4 ( ) ; int VAR_4 = TYPE_1 . METHOD_5 ( java.lang.Math.round ( ( ( 1.0F * VAR_2 ) / ( VAR_5 ) ) ) , 1 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; VAR_7 = new TYPE_3 ( getActivity ( ) , VAR_8 ) ; VAR_3 . METHOD_8 ( VAR_7 ) ; }\n"}
{"problem": "private static java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 ) { java.lang.String VAR_3 = ( ( STRING_1 + ( ( VAR_1 < 0 ) || ( ( 0 == VAR_1 ) && ( VAR_2 < 0 ) ) ? STRING_2 : STRING_3 ) ) + ( java.lang.String.format ( STRING_4 , ( VAR_1 >= 0 ? VAR_1 : VAR_1 * ( - 1 ) ) ) ) ) + ( java.lang.String.format ( STRING_4 , ( VAR_2 >= 0 ? VAR_2 : VAR_2 * ( - 1 ) ) ) ) ; return VAR_3 ; }\n", "fixed": "private static java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 ) { java.lang.String VAR_3 = ( ( STRING_1 + ( ( VAR_1 < 0 ) || ( ( 0 == VAR_1 ) && ( VAR_2 < 0 ) ) ? STRING_2 : STRING_3 ) ) + ( java.lang.String.format ( STRING_4 , java.lang.Math.abs ( VAR_1 ) ) ) ) + ( java.lang.String.format ( STRING_4 , java.lang.Math.abs ( VAR_2 ) ) ) ; return VAR_3 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; for ( TYPE_4 < ? > element : VAR_3 ) { VAR_1 . add ( element . METHOD_3 ( ) ) ; VAR_1 . add ( element . METHOD_4 ( ) ) ; } update ( ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; for ( TYPE_4 < ? > element : VAR_3 ) { VAR_1 . add ( element . METHOD_3 ( ) ) ; VAR_1 . add ( element . METHOD_4 ( ) ) ; } update ( ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.StringBuffer result ) { android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , ( ( TYPE_1 ) ( result ) ) ) ; intent . METHOD_3 ( VAR_2 ) ; intent . METHOD_3 ( VAR_3 ) ; METHOD_4 ( intent ) ; getActivity ( ) . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.StringBuffer result ) { android.content.Intent intent = new android.content.Intent ( getActivity ( ) , VAR_1 class ) ; intent . METHOD_2 ( STRING_1 , ( ( TYPE_1 ) ( result ) ) ) ; METHOD_4 ( intent ) ; getActivity ( ) . METHOD_5 ( ) ; }\n"}
{"problem": "public static int METHOD_1 ( java.lang.String VAR_1 , java.lang.StringBuilder VAR_2 ) { int VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_2 . delete ( ( ( VAR_2 . length ( ) ) - INT_1 ) , VAR_2 . length ( ) ) ; VAR_2 . append ( STRING_1 ) ; return VAR_3 ; }\n", "fixed": "public static int METHOD_1 ( java.lang.String VAR_1 , java.lang.StringBuilder VAR_2 ) { int VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 == 0 ) { VAR_2 . delete ( ( ( VAR_2 . length ( ) ) - INT_1 ) , VAR_2 . length ( ) ) ; VAR_2 . append ( STRING_1 ) ; } return VAR_3 ; }\n"}
{"problem": "private long METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { return VAR_1 * ( VAR_3 ) ; } else if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { return ( VAR_1 * ( VAR_4 ) ) * ( VAR_3 ) ; } return ( ( VAR_1 * ( VAR_5 ) ) * ( VAR_4 ) ) * ( VAR_3 ) ; }\n", "fixed": "private long METHOD_1 ( long VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == 0 ) { return VAR_1 * ( VAR_3 ) ; } else if ( ( VAR_2 . METHOD_2 ( ) ) == 1 ) { return ( VAR_1 * ( VAR_4 ) ) * ( VAR_3 ) ; } return ( ( VAR_1 * ( VAR_5 ) ) * ( VAR_4 ) ) * ( VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_1 != ( this . VAR_1 ) ) && ( ( VAR_2 ) == ( VAR_3 ) ) ) { if ( VAR_1 ) { remove ( VAR_4 ) ; } else { add ( VAR_4 ) ; } this . VAR_1 = VAR_1 ; } }\n", "fixed": "public void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_1 != ( this . VAR_1 ) ) && ( ( VAR_2 ) == ( VAR_3 ) ) ) { if ( VAR_1 ) { remove ( VAR_4 ) ; } else { add ( VAR_4 ) ; } } this . VAR_1 = VAR_1 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 VAR_4 = VAR_5 . METHOD_2 ( VAR_2 ) ; if ( VAR_4 != null ) { VAR_3 . METHOD_3 ( STRING_1 ) ; return TYPE_5 . METHOD_4 ( STRING_2 ) ; } else { VAR_3 . error ( STRING_3 ) ; return TYPE_5 . METHOD_4 ( STRING_2 ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 VAR_4 = VAR_5 . METHOD_2 ( VAR_2 ) ; if ( VAR_4 != null ) { VAR_3 . METHOD_3 ( STRING_1 ) ; return TYPE_5 . METHOD_4 ( STRING_2 ) ; } else { VAR_3 . error ( STRING_3 ) ; return TYPE_5 . METHOD_4 ( STRING_2 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; TYPE_1 . assertNotNull ( VAR_1 . get ( VAR_2 . getId ( ) , VAR_3 class ) ) ; VAR_4 . METHOD_3 ( ) ; TYPE_1 . assertNotNull ( VAR_1 . get ( VAR_2 . getId ( ) , VAR_3 class ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; assertNotNull ( VAR_1 . get ( VAR_2 . getId ( ) , VAR_3 class ) ) ; VAR_4 . METHOD_3 ( ) ; assertNotNull ( VAR_1 . get ( VAR_2 . getId ( ) , VAR_3 class ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) , new TYPE_3 ( ) { public void METHOD_4 ( TYPE_1 p ) { int VAR_2 = p . METHOD_5 ( p . METHOD_6 ( p . METHOD_7 ( - INT_1 ) ) ) ; TYPE_2 . METHOD_8 ( VAR_3 , VAR_2 ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( ) { if ( VAR_1 != null ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) , new TYPE_3 ( ) { public void METHOD_4 ( TYPE_1 p ) { int VAR_2 = p . METHOD_5 ( p . METHOD_6 ( p . METHOD_7 ( - INT_1 ) ) ) ; TYPE_2 . METHOD_8 ( VAR_3 , VAR_2 ) ; } } ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ) != ( VAR_4 ) ) { throw new TYPE_3 ( STRING_1 ) ; } TYPE_1 [ ] VAR_5 = ( ( TYPE_4 ) ( VAR_2 . METHOD_3 ( VAR_6 ) ) ) . METHOD_4 ( VAR_7 ) ; for ( TYPE_1 VAR_8 : VAR_5 ) { if ( VAR_9 . equals ( VAR_1 ) ) { return VAR_8 ; } } return null ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ) != ( VAR_4 ) ) { return null ; } TYPE_1 [ ] VAR_5 = ( ( TYPE_4 ) ( VAR_2 . METHOD_3 ( VAR_6 ) ) ) . METHOD_4 ( VAR_7 ) ; for ( TYPE_1 VAR_8 : VAR_5 ) { if ( VAR_9 . equals ( VAR_1 ) ) { return VAR_8 ; } } return null ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = VAR_1 . toUpperCase ( ) ; for ( TYPE_1 VAR_3 : TYPE_2 . METHOD_2 ( VAR_4 class ) ) { if ( VAR_5 . equals ( VAR_2 ) ) { return VAR_3 ; } } return null ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { return null ; } java.lang.String VAR_2 = VAR_1 . toUpperCase ( ) ; for ( TYPE_1 VAR_3 : TYPE_2 . METHOD_2 ( VAR_4 class ) ) { if ( VAR_5 . toUpperCase ( ) . equals ( VAR_2 ) ) { return VAR_3 ; } } return null ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { return ; } METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; if ( ( TYPE_3 . METHOD_9 ( STRING_1 ) ) == \"true\" ) { METHOD_10 ( ) ; } METHOD_11 ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { return ; } METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; if ( \"true\" . equals ( TYPE_3 . METHOD_9 ( STRING_1 ) ) ) { METHOD_10 ( ) ; } METHOD_11 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_3 ( ) ; TYPE_2 tmp = VAR_1 ; VAR_1 = null ; METHOD_4 ( tmp ) ; } ( ( TYPE_3 ) ( getActivity ( ) ) ) . METHOD_5 ( VAR_3 , this ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) ; VAR_2 = null ; } if ( ( VAR_1 ) != null ) { TYPE_2 tmp = VAR_1 ; VAR_1 = null ; METHOD_4 ( tmp ) ; } ( ( TYPE_3 ) ( getActivity ( ) ) ) . METHOD_5 ( VAR_3 , this ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) ; TYPE_3 f = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_4 . METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_5 . METHOD_5 ( f . toString ( ) ) ; TYPE_5 . METHOD_5 ( VAR_1 . toString ( ) ) ; TYPE_6 . assertEquals ( VAR_2 , f . getName ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) . METHOD_2 ( ) ; TYPE_3 f = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_4 . METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_5 . METHOD_5 ( f . toString ( ) ) ; TYPE_5 . METHOD_5 ( VAR_1 . toString ( ) ) ; assertEquals ( VAR_2 , f . getName ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) { VAR_3 . setText ( TYPE_1 . METHOD_2 ( VAR_4 . get ( VAR_5 ) . VAR_6 , VAR_7 ) ) ; } else { VAR_3 . setText ( TYPE_1 . METHOD_2 ( VAR_4 . get ( VAR_5 ) . VAR_6 ) ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String text ) { if ( ( VAR_1 ) >= ( VAR_2 ) ) { VAR_3 . setText ( TYPE_1 . METHOD_2 ( text , VAR_7 ) ) ; } else { VAR_3 . setText ( TYPE_1 . METHOD_2 ( text ) ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_3 ) ) ) ; TYPE_3 VAR_4 = new TYPE_3 ( this , VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( VAR_4 ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_4 ( VAR_3 ) ) ) ; TYPE_3 VAR_4 = new TYPE_3 ( this , VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . METHOD_6 ( VAR_5 . handle ) ; TYPE_3 . METHOD_7 ( VAR_4 . METHOD_8 ( STRING_2 ) ) ; TYPE_4 VAR_6 = VAR_3 . METHOD_9 ( STRING_3 ) ; TYPE_3 . assertNotNull ( VAR_6 . METHOD_8 ( STRING_4 ) ) ; VAR_4 . METHOD_10 ( VAR_5 . handle ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_3 = VAR_1 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . METHOD_6 ( VAR_5 . handle , VAR_2 ) ; TYPE_3 . METHOD_7 ( VAR_4 . METHOD_8 ( STRING_2 ) ) ; TYPE_4 VAR_6 = VAR_3 . METHOD_9 ( STRING_3 ) ; TYPE_3 . assertNotNull ( VAR_6 . METHOD_8 ( STRING_4 ) ) ; VAR_4 . METHOD_10 ( VAR_5 . handle ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.Integer n , java.util.Date date ) { if ( METHOD_2 ( n ) ) { TYPE_1 state = VAR_1 . get ( n ) ; long VAR_2 = TYPE_2 . METHOD_3 ( ) ; long VAR_3 = ( date . getTime ( ) ) - VAR_2 ; state . METHOD_4 ( VAR_4 . get ( n ) , VAR_3 , VAR_5 ) ; state . METHOD_5 ( ) ; } super . METHOD_1 ( n , date ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.Integer n , long VAR_2 , long offset ) { if ( METHOD_2 ( n ) ) { TYPE_1 state = VAR_1 . get ( n ) ; state . METHOD_4 ( VAR_4 . get ( n ) , VAR_2 , offset , VAR_5 ) ; state . METHOD_5 ( ) ; } super . METHOD_1 ( n , VAR_2 , offset ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 , boolean VAR_2 ) { java.lang.String VAR_3 = STRING_1 + ( STRING_2 + STRING_3 ) ; try { return VAR_4 . METHOD_2 ( VAR_3 , new java.lang.Object [ ] { VAR_1 , VAR_2 } , new TYPE_2 ( VAR_5 class ) ) ; } catch ( TYPE_3 VAR_6 ) { return null ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.Integer VAR_1 , boolean VAR_2 ) { java.lang.String VAR_3 = STRING_1 + ( STRING_2 + STRING_3 ) ; try { return VAR_4 . METHOD_2 ( VAR_3 , new java.lang.Object [ ] { VAR_1 , VAR_2 } , new TYPE_2 ( VAR_5 class ) ) ; } catch ( TYPE_3 VAR_6 ) { return null ; } catch ( java.lang.NullPointerException VAR_6 ) { return null ; } }\n"}
{"problem": "public static boolean METHOD_1 ( TYPE_1 f , TYPE_2 p , boolean VAR_1 ) { java.util.ArrayList < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( f , ( ! VAR_1 ) ) ; for ( TYPE_2 x : VAR_2 ) { if ( ( ( x . x ) == ( p . x ) ) && ( ( x . y ) == ( p . y ) ) ) { return true ; } } return false ; }\n", "fixed": "public static boolean METHOD_1 ( TYPE_1 f , TYPE_2 p , boolean VAR_1 ) { java.util.ArrayList < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( f , ( ! VAR_1 ) ) ; for ( TYPE_2 x : VAR_2 ) { if ( x . equals ( p ) ) { return true ; } } return false ; }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.Integer id ) { VAR_1 = METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_3 ( ) ; try { TYPE_2 VAR_3 = METHOD_4 ( id ) ; VAR_1 . delete ( VAR_3 ) ; VAR_2 . commit ( ) ; } catch ( TYPE_3 VAR_4 ) { VAR_5 . error ( STRING_1 , VAR_4 ) ; VAR_2 . METHOD_5 ( ) ; return false ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.Integer id ) { TYPE_2 VAR_3 = METHOD_4 ( id ) ; VAR_1 = METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_3 ( ) ; try { VAR_1 . delete ( VAR_3 ) ; VAR_2 . commit ( ) ; } catch ( TYPE_3 VAR_4 ) { VAR_5 . error ( STRING_1 , VAR_4 ) ; VAR_2 . METHOD_5 ( ) ; return false ; } return true ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { if ( VAR_2 [ i ] . METHOD_2 ( ) . equals ( VAR_1 ) ) { return VAR_2 [ i ] ; } } return null ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.NullPointerException { for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { if ( ( VAR_2 [ i ] ) == null ) { continue ; } if ( VAR_2 [ i ] . METHOD_2 ( ) . equals ( VAR_1 ) ) { return VAR_2 [ i ] ; } } throw new java.lang.NullPointerException ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; return ; } else if ( VAR_3 . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( VAR_2 ) ; return ; } else if ( VAR_4 . METHOD_2 ( ) ) { VAR_4 . METHOD_4 ( ) ; return ; } super . METHOD_1 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( VAR_2 ) ; return ; } else if ( VAR_3 . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( VAR_2 ) ; return ; } else if ( VAR_4 . METHOD_2 ( ) ) { } super . METHOD_1 ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 node , java.lang.Void info ) throws java.lang.Exception { TYPE_1 result = VAR_1 . get ( node . getName ( ) ) ; if ( result == null ) throw new java.lang.Exception ( ( STRING_1 + ( node . getName ( ) ) ) ) ; return result ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 node , java.lang.Void info ) throws java.lang.Exception { TYPE_1 result = VAR_1 . get ( node . getName ( ) ) ; if ( result == null ) throw new java.lang.Exception ( ( STRING_1 + ( node . getName ( ) ) ) ) ; return new TYPE_1 ( result ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( true ) ; VAR_1 . METHOD_6 ( STRING_2 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; VAR_2 . METHOD_8 ( VAR_4 ) ; VAR_1 . METHOD_9 ( VAR_2 ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( true ) ; VAR_1 . METHOD_6 ( STRING_2 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; VAR_2 . METHOD_8 ( VAR_4 ) ; VAR_1 . METHOD_9 ( VAR_2 ) ; return VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( this . getActivity ( ) . METHOD_2 ( VAR_3 ) ) ) ; if ( VAR_1 ) { if ( ! ( VAR_2 . METHOD_3 ( VAR_4 ) ) ) VAR_2 . METHOD_4 ( VAR_5 , VAR_6 ) ; } else { if ( VAR_2 . METHOD_3 ( VAR_4 ) ) VAR_2 . METHOD_5 ( this . getActivity ( ) . METHOD_6 ( ) . METHOD_7 ( ) , VAR_6 ) ; } }\n", "fixed": "private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( this . getActivity ( ) . METHOD_2 ( VAR_3 ) ) ) ; if ( VAR_1 ) { if ( ! ( VAR_2 . METHOD_3 ( ) ) ) VAR_2 . METHOD_4 ( VAR_5 , VAR_6 ) ; } else { if ( VAR_2 . METHOD_3 ( ) ) VAR_2 . METHOD_5 ( this . getActivity ( ) . METHOD_6 ( ) . METHOD_7 ( ) , VAR_6 ) ; } }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = METHOD_2 ( VAR_1 ) ; final java.lang.String VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; final java.lang.String VAR_6 = TYPE_3 . METHOD_3 ( VAR_7 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_6 ( VAR_6 ) ; return VAR_5 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = METHOD_2 ( new java.util.HashMap < java.lang.Integer , java.util.Map < java.lang.String , java.lang.Object > > ( ) , VAR_1 ) ; final java.lang.String VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; final java.lang.String VAR_6 = TYPE_3 . METHOD_3 ( VAR_7 , VAR_2 ) ; VAR_5 . METHOD_4 ( ) . METHOD_6 ( VAR_6 ) ; return VAR_5 ; }\n"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String [ ] VAR_2 ) { if ( ( VAR_2 . length ) <= 1 ) { return java.util.Arrays.asList ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } else if ( ( VAR_2 . length ) <= INT_1 ) { return METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ; } else { return null ; } }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String [ ] VAR_2 ) { if ( ( VAR_2 . length ) <= 1 ) { return METHOD_2 ( VAR_2 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } else if ( ( VAR_2 . length ) <= INT_1 ) { return METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ; } else { return null ; } }\n"}
{"problem": "private boolean METHOD_1 ( final int VAR_1 ) { if ( this . VAR_2 . METHOD_2 ( 0 ) . equals ( 0 ) ) { this . VAR_2 . remove ( 0 ) ; } if ( ( this . VAR_2 . size ( ) ) < ( VAR_3 ) ) { this . VAR_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; return true ; } else { return false ; } }\n", "fixed": "private boolean METHOD_1 ( final int VAR_1 ) { if ( ( ( this . VAR_2 . size ( ) ) > 0 ) && ( this . VAR_2 . METHOD_2 ( 0 ) . equals ( 0 ) ) ) { this . VAR_2 . remove ( 0 ) ; } if ( ( this . VAR_2 . size ( ) ) < ( VAR_3 ) ) { this . VAR_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; return true ; } else { return false ; } }\n"}
{"problem": "public void METHOD_1 ( ) { this . VAR_1 . METHOD_1 ( ) ; this . VAR_2 . METHOD_1 ( ) ; this . VAR_3 . METHOD_1 ( ) ; this . VAR_4 . METHOD_2 ( ) ; this . METHOD_3 ( false ) ; this . VAR_5 = new TYPE_1 ( ) ; this . METHOD_4 ( new TYPE_2 ( this , VAR_6 , STRING_1 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { this . METHOD_3 ( false ) ; this . VAR_1 . METHOD_1 ( ) ; this . VAR_2 . METHOD_1 ( ) ; this . VAR_3 . METHOD_1 ( ) ; this . VAR_4 . METHOD_2 ( ) ; this . VAR_5 = new TYPE_1 ( ) ; this . METHOD_4 ( new TYPE_2 ( this , VAR_6 , STRING_1 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 ) >= ( VAR_3 ) ) { android.view.View VAR_4 = this . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ( ( ( VAR_5 ) | ( VAR_6 ) ) | ( VAR_7 ) ) ) ; } METHOD_5 ( VAR_8 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( VAR_2 ) >= ( VAR_3 ) ) { android.view.View VAR_4 = this . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ( ( VAR_5 ) | ( VAR_7 ) ) ) ; } METHOD_5 ( VAR_8 ) ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { try ( TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 ) ) { TYPE_4 VAR_5 = TYPE_5 . METHOD_1 ( VAR_4 . METHOD_2 ( ) , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; return VAR_5 . toString ( ) ; } catch ( java.lang.Throwable VAR_6 ) { VAR_6 . METHOD_4 ( ) ; return null ; } }\n", "fixed": "public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { try ( TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 ) ) { TYPE_4 VAR_5 = TYPE_5 . METHOD_1 ( VAR_4 . METHOD_2 ( ) , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; return VAR_5 == null ? null : VAR_5 . toString ( ) ; } catch ( java.lang.Throwable VAR_6 ) { VAR_6 . METHOD_4 ( ) ; return null ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_2 . query ( TYPE_3 . METHOD_3 ( STRING_1 ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( STRING_2 ) . METHOD_4 ( VAR_1 . METHOD_7 ( ) ) ) , TYPE_4 . update ( STRING_3 , VAR_1 . METHOD_8 ( ) ) , VAR_3 class ) ; return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_2 . query ( TYPE_3 . METHOD_3 ( STRING_1 ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( STRING_2 ) . METHOD_4 ( VAR_1 . METHOD_7 ( ) ) ) , TYPE_4 . update ( STRING_2 , VAR_1 . METHOD_7 ( ) ) . set ( STRING_3 , VAR_1 . METHOD_8 ( ) ) , VAR_3 class ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String text ) { android.content.Context context = TYPE_1 . METHOD_2 ( ) ; android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( VAR_3 , context . getString ( VAR_4 ) ) ; VAR_1 . METHOD_4 ( VAR_5 , context . getString ( VAR_4 ) ) ; VAR_1 . METHOD_4 ( VAR_6 , text ) ; context . METHOD_5 ( android.content.Intent . METHOD_6 ( VAR_1 , null ) ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String text ) { android.content.Intent VAR_1 = new android.content.Intent ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( VAR_3 , getString ( VAR_4 ) ) ; VAR_1 . METHOD_4 ( VAR_5 , getString ( VAR_4 ) ) ; VAR_1 . METHOD_4 ( VAR_6 , text ) ; METHOD_5 ( android.content.Intent . METHOD_6 ( VAR_1 , null ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_2 ( new TYPE_4 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_6 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_7 ( ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_4 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_6 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_7 ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) { public void METHOD_2 ( ) { METHOD_3 ( ( ( char ) ( 0 ) ) ) ; VAR_2 = true ; VAR_3 = true ; METHOD_4 ( VAR_4 ) ; setText ( VAR_5 ) ; METHOD_5 ( 0 ) ; } } ; TYPE_2 . METHOD_6 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( VAR_2 ) return ; TYPE_1 VAR_1 = new TYPE_1 ( ) { public void METHOD_2 ( ) { METHOD_3 ( ( ( char ) ( 0 ) ) ) ; VAR_2 = true ; VAR_3 = true ; METHOD_4 ( VAR_4 ) ; setText ( VAR_5 ) ; METHOD_5 ( 0 ) ; } } ; TYPE_2 . METHOD_6 ( VAR_1 ) ; }\n"}
{"problem": "private boolean METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 , int index ) { TYPE_2 < TYPE_1 > VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . get ( index ) ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { VAR_1 . remove ( VAR_4 ) ; boolean VAR_5 = METHOD_1 ( VAR_1 , ( index + 1 ) ) ; VAR_1 . add ( VAR_4 ) ; if ( VAR_5 ) return true ; } return false ; }\n", "fixed": "private boolean METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 , int index ) { java.util.List < TYPE_1 > VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_3 . get ( index ) ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { VAR_1 . remove ( VAR_4 ) ; boolean VAR_5 = METHOD_1 ( VAR_1 , ( index + 1 ) ) ; VAR_1 . add ( VAR_4 ) ; if ( VAR_5 ) return true ; } return false ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( final java.lang.Object [ ] VAR_1 ) { java.lang.String VAR_2 = new java.lang.String ( ) ; if ( VAR_1 != null ) { for ( final java.lang.Object obj : VAR_1 ) { VAR_2 += obj + STRING_1 ; } VAR_2 = VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ; } return VAR_2 ; }\n", "fixed": "private java.lang.String METHOD_1 ( final java.lang.Object [ ] VAR_1 ) { java.lang.String VAR_2 = new java.lang.String ( ) ; if ( VAR_1 != null ) { for ( final java.lang.Object obj : VAR_1 ) { VAR_2 += obj + STRING_1 ; } VAR_2 = VAR_2 . replaceAll ( STRING_2 , STRING_3 ) ; } return VAR_2 ; }\n"}
{"problem": "public static < TYPE_1 extends TYPE_2 , TYPE_3 extends TYPE_4 > TYPE_5 < TYPE_1 , TYPE_3 > METHOD_1 ( TYPE_6 VAR_1 , TYPE_7 < ? , ? > p , TYPE_8 < TYPE_1 , TYPE_3 > VAR_2 ) throws TYPE_9 { return new TYPE_5 < TYPE_1 , TYPE_3 > ( VAR_1 , p , VAR_2 , VAR_2 . METHOD_2 ( ) , p . METHOD_3 ( VAR_2 , STRING_1 ) ) ; }\n", "fixed": "public static < TYPE_1 extends TYPE_2 , TYPE_3 extends TYPE_4 > TYPE_5 < TYPE_1 , TYPE_3 > METHOD_1 ( TYPE_6 VAR_1 , TYPE_7 < ? , ? > p , TYPE_8 < TYPE_1 , TYPE_3 > VAR_2 ) throws TYPE_9 { return new TYPE_5 ( VAR_1 , p , VAR_2 , VAR_2 . METHOD_2 ( ) , p . METHOD_3 ( VAR_2 , STRING_1 ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( int id ) { TYPE_1 . open ( ) ; TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , id ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; VAR_1 . delete ( ) ; TYPE_1 . METHOD_5 ( ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( int id ) { TYPE_1 . open ( ) ; TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , id ) ; TYPE_1 . METHOD_5 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; TYPE_1 . open ( ) ; VAR_1 . delete ( ) ; TYPE_1 . METHOD_5 ( ) ; return true ; }\n"}
{"problem": "public < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) throws java.io.IOException , TYPE_2 { TYPE_3 message = VAR_2 . METHOD_2 ( ) ; if ( message instanceof TYPE_4 ) { TYPE_5 . fail ( message . toString ( ) ) ; } if ( ! ( VAR_1 . METHOD_3 ( message . getClass ( ) ) ) ) { TYPE_5 . fail ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + message ) ) ; } return VAR_1 . METHOD_4 ( message ) ; }\n", "fixed": "public < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) throws java.io.IOException , TYPE_2 { TYPE_3 message = VAR_2 . METHOD_2 ( ) ; if ( ! ( VAR_1 . METHOD_3 ( message . getClass ( ) ) ) ) { TYPE_5 . fail ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + message ) ) ; } return VAR_1 . METHOD_4 ( message ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 key , TYPE_2 < TYPE_1 > values , TYPE_3 context ) throws java.io.IOException , TYPE_4 { java.lang.String [ ] VAR_1 ; for ( TYPE_1 VAR_2 : values ) { VAR_1 = VAR_2 . toString ( ) . split ( STRING_1 ) ; } VAR_3 . set ( VAR_2 ) ; context . METHOD_2 ( new TYPE_1 ( ) , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 key , TYPE_2 < TYPE_1 > values , TYPE_3 context ) throws java.io.IOException , TYPE_4 { java.lang.String [ ] VAR_1 ; for ( TYPE_1 VAR_2 : values ) { VAR_1 = VAR_2 . toString ( ) . split ( STRING_1 ) ; VAR_3 . set ( VAR_2 ) ; context . METHOD_2 ( new TYPE_1 ( ) , VAR_3 ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 ) { TYPE_5 VAR_5 = VAR_2 . METHOD_2 ( ) ; java.util.List < TYPE_6 > VAR_6 = VAR_2 . METHOD_3 ( ) ; TYPE_7 VAR_7 = VAR_2 . METHOD_4 ( ) ; if ( VAR_6 != null ) VAR_8 . METHOD_5 ( VAR_5 , VAR_6 ) ; else VAR_8 . METHOD_5 ( VAR_5 , VAR_9 . get ( VAR_7 ) ) ; METHOD_6 ( VAR_1 , VAR_7 , VAR_5 , VAR_3 , VAR_4 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 ) { TYPE_5 VAR_5 = VAR_2 . METHOD_2 ( ) ; java.util.List < TYPE_6 > VAR_6 = VAR_2 . METHOD_3 ( ) ; TYPE_7 VAR_7 = VAR_2 . METHOD_4 ( ) ; if ( VAR_6 != null ) VAR_8 . METHOD_5 ( VAR_5 , VAR_6 ) ; else VAR_8 . METHOD_5 ( VAR_5 , VAR_9 . get ( VAR_7 ) ) ; METHOD_6 ( VAR_1 , VAR_7 , VAR_5 , VAR_8 , VAR_3 , VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 , VAR_3 . METHOD_4 ( ) , VAR_3 . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) , VAR_3 . METHOD_7 ( ) ) ; if ( VAR_2 != ( VAR_4 ) ) { VAR_3 . METHOD_8 ( ) . METHOD_9 ( new TYPE_4 ( VAR_2 , VAR_1 ) ) ; METHOD_1 ( VAR_1 , VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 , VAR_3 . METHOD_4 ( ) , VAR_3 . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) , VAR_3 . METHOD_7 ( ) ) ; if ( VAR_2 != ( VAR_4 ) ) { METHOD_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_8 ( ) . METHOD_9 ( new TYPE_4 ( VAR_2 , VAR_1 ) ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.net.URL VAR_1 ) { TYPE_1 VAR_2 = null ; try { TYPE_2 VAR_3 = new TYPE_2 ( VAR_1 ) ; TYPE_1 node = VAR_3 . METHOD_2 ( ) ; VAR_2 = TYPE_3 . METHOD_3 ( ) . VAR_4 . METHOD_1 ( node ) ; } catch ( java.lang.Exception VAR_5 ) { java.lang.System.out.println ( VAR_5 . METHOD_4 ( ) ) ; } return VAR_2 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.io.InputStream VAR_1 ) { TYPE_1 VAR_2 = null ; try { TYPE_2 VAR_3 = new TYPE_2 ( ) ; TYPE_1 node = VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_2 = TYPE_3 . METHOD_3 ( ) . VAR_4 . METHOD_1 ( node ) ; } catch ( java.lang.Exception VAR_5 ) { java.lang.System.out.println ( VAR_5 . METHOD_4 ( ) ) ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 result , java.lang.String VAR_1 , java.lang.String VAR_2 ) { this . VAR_2 = VAR_2 ; this . VAR_1 = VAR_1 ; if ( TYPE_2 . METHOD_2 ( result ) ) { VAR_3 = result . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( result ) ; VAR_5 . add ( VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 result , java.lang.String VAR_1 , java.lang.String VAR_2 ) { this . VAR_2 = VAR_2 ; this . VAR_1 = VAR_1 ; if ( ! ( TYPE_2 . METHOD_2 ( result ) ) ) { VAR_3 = result . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( result ) ; VAR_5 . add ( VAR_4 ) ; } }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( int id ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_1 ) . METHOD_5 ( id ) ) , VAR_3 class ) ; for ( TYPE_1 t : VAR_1 ) { if ( ( t . METHOD_6 ( ) ) == true ) VAR_1 . remove ( t ) ; } return VAR_1 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( int id ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_1 ) . METHOD_5 ( id ) ) , VAR_3 class ) ; java.util.List < TYPE_1 > result = new java.util.ArrayList < > ( ) ; for ( TYPE_1 t : VAR_1 ) { if ( ( t . METHOD_6 ( ) ) == false ) result . add ( t ) ; } return result ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { android.view.View VAR_3 = METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; VAR_6 . setText ( VAR_7 ) ; VAR_8 . METHOD_4 ( ) ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { VAR_8 . METHOD_5 ( VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { android.view.View VAR_3 = METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; VAR_6 . setText ( VAR_7 ) ; VAR_8 . METHOD_4 ( ) ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { VAR_8 . METHOD_5 ( VAR_2 ) ; VAR_6 . METHOD_3 ( VAR_5 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . get ( 0 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( new java.util.Date ( ) ) ; TYPE_2 . METHOD_4 ( VAR_3 . METHOD_5 ( STRING_1 ) ) . METHOD_6 ( VAR_1 ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 . METHOD_7 ( ) , VAR_1 . METHOD_8 ( ) , VAR_1 . METHOD_9 ( ) , VAR_1 . METHOD_10 ( ) ) ; VAR_4 . METHOD_11 ( STRING_2 ) ; VAR_5 . METHOD_12 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . get ( 0 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( new java.util.Date ( ) ) ; TYPE_2 . METHOD_4 ( VAR_3 . METHOD_5 ( STRING_1 ) ) . METHOD_6 ( VAR_1 ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 . METHOD_9 ( ) , VAR_1 . METHOD_10 ( ) ) ; VAR_4 . METHOD_11 ( STRING_2 ) ; VAR_5 . METHOD_12 ( VAR_4 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 line = new TYPE_3 ( METHOD_2 ( VAR_1 ) ) ; line . METHOD_3 ( VAR_2 ) ; line . METHOD_4 ( true ) ; line . METHOD_5 ( false ) ; line . METHOD_6 ( true ) ; line . METHOD_7 ( true ) ; java.util.List < TYPE_3 > VAR_3 = new java.util.ArrayList < TYPE_3 > ( ) ; VAR_3 . add ( line ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_3 ) ; return VAR_4 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 line = new TYPE_3 ( METHOD_2 ( VAR_1 ) ) ; line . METHOD_3 ( VAR_2 ) ; line . METHOD_4 ( true ) ; line . METHOD_5 ( false ) ; line . METHOD_6 ( true ) ; line . METHOD_7 ( true ) ; java.util.List < TYPE_3 > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( line ) ; return new TYPE_1 ( VAR_3 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( this ) ; VAR_3 = VAR_2 . getBoolean ( STRING_1 , false ) ; VAR_4 = VAR_2 . getString ( STRING_2 , STRING_3 ) ; TYPE_4 . METHOD_3 ( this , VAR_5 ) ; if ( VAR_3 ) METHOD_4 ( ) ; else METHOD_5 ( ) ; TYPE_4 . METHOD_3 ( this , VAR_5 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( this ) ; VAR_3 = VAR_2 . getBoolean ( STRING_1 , false ) ; VAR_4 = VAR_2 . getString ( STRING_2 , STRING_3 ) ; if ( VAR_3 ) METHOD_4 ( ) ; else METHOD_5 ( ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int n ) { if ( VAR_1 ) return null ; TYPE_2 p = VAR_2 . METHOD_2 ( ) ; if ( p instanceof TYPE_3 ) { TYPE_4 VAR_3 = new TYPE_5 ( VAR_4 ) ; TYPE_3 VAR_5 = ( ( TYPE_3 ) ( p ) ) ; VAR_4 . METHOD_3 ( n , VAR_5 ) ; TYPE_6 . METHOD_4 ( VAR_2 , VAR_4 , VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; } TYPE_1 step = METHOD_6 ( n ) ; return step ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int n ) { if ( VAR_1 ) return null ; TYPE_2 p = VAR_2 . METHOD_2 ( ) ; if ( p instanceof TYPE_3 ) { TYPE_3 VAR_5 = ( ( TYPE_3 ) ( p ) ) ; VAR_4 . METHOD_3 ( n , VAR_5 ) ; VAR_2 . METHOD_5 ( ) ; } TYPE_1 step = METHOD_6 ( n ) ; return step ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; int VAR_3 = VAR_1 . METHOD_4 ( ) . size ( ) ; if ( VAR_2 < INT_1 ) { return VAR_4 ; } if ( VAR_2 < INT_2 ) { return VAR_5 ; } if ( VAR_2 < INT_3 ) { return VAR_6 ; } if ( VAR_2 < INT_4 ) { return VAR_7 ; } if ( VAR_2 >= INT_4 ) { return VAR_3 != 0 ? VAR_8 : VAR_9 ; } return VAR_9 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; int VAR_3 = VAR_1 . METHOD_4 ( ) . size ( ) ; if ( VAR_2 < INT_1 ) { return VAR_4 ; } if ( VAR_2 < INT_2 ) { return VAR_5 ; } if ( VAR_2 < INT_3 ) { return VAR_6 ; } if ( VAR_2 < INT_4 ) { return VAR_7 ; } return VAR_3 != 0 ? VAR_8 : VAR_9 ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( context . get ( VAR_2 ) ) ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( VAR_4 class , context ) ; return ( super . METHOD_1 ( context ) ) & ( ( VAR_3 . METHOD_3 ( VAR_1 ) ) & ( ( ( ( TYPE_5 ) ( VAR_1 . getSelection ( ) . METHOD_4 ( ) ) ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) == null ) ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 context ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( context . get ( VAR_2 ) ) ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( VAR_4 class , context ) ; return ( super . METHOD_1 ( context ) ) && ( ( VAR_3 . METHOD_3 ( VAR_1 ) ) & ( ( ( ( TYPE_5 ) ( VAR_1 . getSelection ( ) . METHOD_4 ( ) ) ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) == null ) ) ; }\n"}
{"problem": "private java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; for ( TYPE_1 item : VAR_3 ) { if ( item . METHOD_2 ( ) . equals ( VAR_1 ) ) { VAR_2 . add ( item . getName ( ) ) ; java.lang.System.out.println ( item . getName ( ) ) ; } } return VAR_2 ; }\n", "fixed": "private java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; for ( TYPE_1 item : VAR_3 ) { if ( item . METHOD_2 ( ) . equals ( VAR_1 ) ) { VAR_2 . add ( item . getName ( ) ) ; } } return VAR_2 ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String source ) throws TYPE_2 { java.lang.String [ ] VAR_1 = source . split ( STRING_1 ) ; if ( ( VAR_1 . length ) != INT_1 ) throw new TYPE_2 ( ( STRING_2 + source ) ) ; TYPE_1 result = new TYPE_1 ( ) ; result . METHOD_2 ( java.lang.Integer.parseInt ( VAR_1 [ 0 ] ) ) ; result . METHOD_3 ( java.lang.Integer.parseInt ( VAR_1 [ 1 ] ) ) ; result . METHOD_4 ( java.lang.Double . METHOD_5 ( VAR_1 [ INT_2 ] ) ) ; return result ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String source ) throws TYPE_2 { java.lang.String [ ] VAR_1 = source . split ( STRING_1 ) ; if ( ( VAR_1 . length ) != INT_1 ) throw new TYPE_2 ( ( STRING_2 + source ) ) ; TYPE_1 result = new TYPE_1 ( ) ; result . METHOD_2 ( java.lang.Integer.parseInt ( VAR_1 [ 0 ] ) ) ; result . METHOD_3 ( java.lang.Double . METHOD_5 ( VAR_1 [ 1 ] ) ) ; result . METHOD_4 ( java.lang.Double . METHOD_5 ( VAR_1 [ INT_2 ] ) ) ; return result ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = VAR_1 . split ( STRING_1 ) ; METHOD_2 ( VAR_2 [ 0 ] ) ; setText ( VAR_2 [ 1 ] ) ; for ( int i = INT_1 ; i < ( VAR_2 . length ) ; i ++ ) { setText ( ( ( getText ( ) ) + ( VAR_2 [ i ] ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = VAR_1 . split ( STRING_1 ) ; METHOD_2 ( VAR_2 [ 0 ] ) ; setText ( VAR_2 [ 1 ] ) ; for ( int i = 1 ; i < ( VAR_2 . length ) ; i ++ ) { setText ( ( ( getText ( ) ) + ( VAR_2 [ i ] ) ) ) ; } }\n"}
{"problem": "public static < TYPE_1 , TYPE_2 extends java.util.Collection < TYPE_1 > > TYPE_3 < TYPE_2 > METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 < TYPE_2 > METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_4 . getBoolean ( ( ( VAR_1 . size ( ) ) > 0 ) ) ) ; }\n", "fixed": "public static < TYPE_1 , TYPE_2 extends java.util.Collection < TYPE_1 > > TYPE_3 < TYPE_2 > METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_2 < TYPE_2 > METHOD_2 ( VAR_1 ) . METHOD_3 ( ( c ) - > ( c . size ( ) ) > 0 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_3 . METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( ) ; return ; } if ( VAR_2 . METHOD_5 ( ) ) return ; METHOD_1 ( ) ; return ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) ) { VAR_3 . METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( ) ; return ; } if ( VAR_2 . METHOD_5 ( ) ) return ; METHOD_1 ( ) ; return ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { try { TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , true , true , true , false ) ; } catch ( TYPE_3 VAR_3 ) { if ( ( VAR_3 . METHOD_2 ( ) . contains ( STRING_1 ) ) || ( VAR_3 . METHOD_2 ( ) . contains ( STRING_2 ) ) ) { VAR_4 . METHOD_3 ( STRING_3 ) ; METHOD_1 ( VAR_1 , VAR_2 ) ; return ; } throw VAR_3 ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { try { TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , true , true , true , true ) ; } catch ( TYPE_3 VAR_3 ) { if ( ( VAR_3 . METHOD_2 ( ) . contains ( STRING_1 ) ) || ( VAR_3 . METHOD_2 ( ) . contains ( STRING_2 ) ) ) { VAR_4 . METHOD_3 ( STRING_3 ) ; METHOD_1 ( VAR_1 , VAR_2 ) ; return ; } throw VAR_3 ; } }\n"}
{"problem": "public void init ( ) { VAR_1 = new TYPE_1 ( this , title , VAR_2 , height ) ; METHOD_1 ( VAR_3 ) ; METHOD_2 ( VAR_3 ) ; TYPE_2 . init ( ) ; VAR_4 = new TYPE_3 ( this ) ; VAR_5 = new TYPE_4 ( this ) ; TYPE_5 . METHOD_3 ( VAR_4 ) ; update ( ) ; }\n", "fixed": "public void init ( ) { VAR_1 = new TYPE_1 ( this , title , VAR_2 , height ) ; METHOD_1 ( VAR_3 ) ; METHOD_2 ( VAR_3 ) ; TYPE_2 . init ( ) ; VAR_4 = new TYPE_3 ( this ) ; VAR_5 = new TYPE_4 ( this ) ; TYPE_5 . METHOD_3 ( VAR_4 ) ; update ( ) ; update ( ) ; update ( ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { path = new TYPE_1 ( ) ; path . METHOD_2 ( VAR_1 . get ( 0 ) , VAR_2 . get ( 0 ) ) ; for ( int i = 1 ; i < ( VAR_1 . size ( ) ) ; ++ i ) { path . METHOD_3 ( VAR_1 . get ( i ) , VAR_2 . get ( i ) ) ; } path . METHOD_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { path = new TYPE_1 ( ) ; path . METHOD_2 ( VAR_2 . get ( 0 ) , VAR_1 . get ( 0 ) ) ; for ( int i = 1 ; i < ( VAR_1 . size ( ) ) ; ++ i ) { path . METHOD_3 ( VAR_2 . get ( i ) , VAR_1 . get ( i ) ) ; } path . METHOD_4 ( ) ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 output = new TYPE_2 ( ) ; try { VAR_1 . METHOD_3 ( output ) ; return output . toString ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_3 . append ( VAR_2 . METHOD_4 ( ) ) ; return VAR_2 . METHOD_4 ( ) ; } }\n", "fixed": "private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 output = new TYPE_2 ( ) ; try { VAR_1 . METHOD_3 ( output ) ; return output . toString ( ) ; } catch ( java.io.IOException VAR_2 ) { VAR_3 . append ( VAR_2 . METHOD_4 ( ) ) . append ( \"\\n\" ) ; return VAR_2 . METHOD_4 ( ) ; } }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( ) { final TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 , STRING_2 , STRING_3 , false ) ; final TYPE_3 VAR_2 = new TYPE_3 ( STRING_4 , STRING_5 , STRING_6 , false ) ; final java.util.List < TYPE_1 > list = new java.util.ArrayList < > ( ) ; list . add ( VAR_3 ) ; list . add ( VAR_1 ) ; list . add ( VAR_2 ) ; return list ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( ) { final TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 , STRING_2 , STRING_3 , false ) ; final TYPE_3 VAR_2 = new TYPE_3 ( STRING_4 , STRING_5 , STRING_6 , false ) ; final java.util.List < TYPE_1 > list = new java.util.ArrayList < > ( ) ; list . add ( VAR_1 ) ; list . add ( VAR_2 ) ; return list ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { java.util.Collection < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( TYPE_3 . METHOD_3 ( VAR_2 ) ) { for ( TYPE_2 VAR_3 : VAR_2 ) { VAR_3 . METHOD_4 ( true ) ; this . VAR_4 . METHOD_5 ( VAR_3 ) ; } } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { java.util.Collection < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { for ( TYPE_2 VAR_3 : VAR_2 ) { VAR_3 . METHOD_4 ( true ) ; this . VAR_4 . METHOD_5 ( VAR_3 ) ; } } }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 ) || ( ( VAR_2 ) == ( TYPE_1 ) ) ) { VAR_3 = VAR_4 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; } else if ( ( VAR_2 ) == ( VAR_7 ) ) { VAR_1 = true ; VAR_3 = VAR_4 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_5 . METHOD_5 ( VAR_8 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 ) || ( ( VAR_2 ) == ( TYPE_1 ) ) ) { VAR_3 = VAR_4 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_5 . METHOD_5 ( VAR_6 ) ; } else if ( ( VAR_2 ) == ( VAR_7 ) ) { VAR_3 = VAR_4 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_5 . METHOD_5 ( VAR_8 ) ; } VAR_1 = true ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = TYPE_2 . METHOD_4 ( ) ; int VAR_3 = TYPE_2 . METHOD_5 ( VAR_1 ) ; if ( VAR_3 == ( - 1 ) ) return ; VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) . remove ( VAR_3 ) ; TYPE_2 . METHOD_9 ( VAR_2 ) ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = TYPE_2 . METHOD_4 ( ) ; int VAR_3 = TYPE_2 . METHOD_5 ( VAR_1 ) ; if ( VAR_3 == ( - 1 ) ) { return ; } VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) . remove ( VAR_3 ) ; TYPE_2 . METHOD_9 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; try { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 , false , false , false , null ) ; } catch ( java.io.IOException VAR_4 ) { VAR_5 . METHOD_4 ( INT_1 , STRING_1 ) ; java.lang.System.exit ( 1 ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; try { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_1 , false , false , true , null ) ; } catch ( java.io.IOException VAR_4 ) { VAR_5 . METHOD_4 ( INT_1 , STRING_1 ) ; java.lang.System.exit ( 1 ) ; } }\n"}
{"problem": "public static void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( ) ; if ( ( ( VAR_2 ) == null ) && ( ( VAR_3 ) == null ) ) { VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( ) ; VAR_4 = new TYPE_3 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) . build ( ) ; VAR_3 = VAR_2 . METHOD_6 ( VAR_4 ) ; } }\n", "fixed": "public static void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } VAR_4 = new TYPE_3 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) . build ( ) ; if ( ( VAR_3 ) == null ) { VAR_3 = VAR_2 . METHOD_6 ( VAR_4 ) ; } }\n"}
{"problem": "private static java.lang.String METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { final java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; int VAR_3 = 0 + ( VAR_4 ) ; for ( java.lang.String VAR_5 : VAR_1 ) { VAR_2 . append ( TYPE_1 . METHOD_2 ( VAR_3 , VAR_5 ) ) . append ( \"\\n\" ) ; VAR_3 ++ ; } return VAR_2 . toString ( ) ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { final java.lang.StringBuilder VAR_2 = new java.lang.StringBuilder ( ) ; int VAR_3 = 0 + ( VAR_4 ) ; for ( java.lang.String VAR_5 : VAR_1 ) { if ( VAR_3 == ( VAR_1 . size ( ) ) ) VAR_2 . append ( TYPE_1 . METHOD_2 ( VAR_3 , VAR_5 ) ) ; else VAR_2 . append ( TYPE_1 . METHOD_2 ( VAR_3 , VAR_5 ) ) . append ( \"\\n\" ) ; VAR_3 ++ ; } return VAR_2 . toString ( ) ; }\n"}
{"problem": "protected java.lang.String METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) == null ) { VAR_2 = TYPE_2 . METHOD_2 ( context ) ; } else { VAR_2 = TYPE_2 . METHOD_2 ( context , VAR_1 ) ; } assert ( VAR_2 ) != null ; if ( VAR_2 . METHOD_3 ( VAR_3 ) ) { throw new TYPE_1 ( ) ; } else { return VAR_2 . getString ( VAR_4 ) ; } }\n", "fixed": "protected java.lang.String METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 ) == null ) { VAR_2 = TYPE_2 . METHOD_2 ( context ) ; } else { VAR_2 = TYPE_2 . METHOD_2 ( context , VAR_1 ) ; } if ( ( ( VAR_2 ) == null ) || ( VAR_2 . METHOD_3 ( VAR_3 ) ) ) { throw new TYPE_1 ( ) ; } else { return VAR_2 . getString ( VAR_4 ) ; } }\n"}
{"problem": "private METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; while ( ( VAR_2 != 1 ) && ( VAR_1 < ( VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ) ) { VAR_3 . set ( VAR_2 , VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ; VAR_2 /= INT_1 ; } VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( int VAR_1 ) { int VAR_2 = ( VAR_3 . size ( ) ) + 1 ; while ( ( VAR_2 != 1 ) && ( VAR_1 < ( VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ) ) { VAR_3 . set ( VAR_2 , VAR_3 . get ( ( VAR_2 / INT_1 ) ) ) ; VAR_2 /= INT_1 ; } VAR_3 . set ( VAR_2 , VAR_1 ) ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > params ) { params . put ( VAR_1 , VAR_2 ) ; params . put ( VAR_3 , VAR_4 ) ; java.lang.String str = TYPE_1 . METHOD_2 ( params ) ; str += VAR_5 ; TYPE_2 . i ( VAR_6 , ( STRING_1 + str ) ) ; java.lang.String VAR_7 = TYPE_3 . METHOD_3 ( str ) ; TYPE_2 . i ( VAR_6 , ( STRING_2 + VAR_7 ) ) ; return VAR_7 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( java.util.Map < java.lang.String , java.lang.String > params ) { params . put ( VAR_1 , VAR_2 ) ; params . put ( VAR_3 , VAR_4 ) ; java.lang.String str = TYPE_1 . METHOD_2 ( params ) ; str += VAR_5 ; java.lang.String VAR_7 = TYPE_3 . METHOD_3 ( str ) ; return VAR_7 ; }\n"}
{"problem": "public static double METHOD_1 ( double [ ] x , int VAR_1 ) { double VAR_2 = 0 ; for ( int i = 0 ; i < VAR_1 ; ++ i ) { VAR_2 += ( x [ i ] ) * ( x [ i ] ) ; } return TYPE_1 . METHOD_2 ( VAR_2 ) ; }\n", "fixed": "public static double METHOD_1 ( double [ ] x , int VAR_1 ) { double VAR_2 = 0 ; for ( int i = 0 ; i < VAR_1 ; ++ i ) { VAR_2 += ( x [ i ] ) * ( x [ i ] ) ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 a ) { int x = java.lang.Math.round ( ( ( a . METHOD_2 ( ) ) / ( VAR_1 ) ) ) ; int y = ( ( VAR_2 ) - ( java.lang.Math.round ( ( ( a . METHOD_3 ( ) ) / ( VAR_3 ) ) ) ) ) - 1 ; VAR_4 [ x ] [ y ] = a . getName ( ) ; ( VAR_5 ) -- ; METHOD_4 ( a ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 a ) { int x = java.lang.Math.round ( ( ( ( a . METHOD_2 ( ) ) - ( METHOD_2 ( ) ) ) / ( VAR_1 ) ) ) ; int y = ( ( VAR_2 ) - ( java.lang.Math.round ( ( ( ( a . METHOD_3 ( ) ) - ( METHOD_3 ( ) ) ) / ( VAR_3 ) ) ) ) ) - 1 ; VAR_4 [ x ] [ y ] = a . getName ( ) ; ( VAR_5 ) -- ; METHOD_4 ( a ) ; }\n"}
{"problem": "public boolean METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 1 ) || ( VAR_1 > ( this . VAR_2 ) ) ) { throw new TYPE_1 ( STRING_1 ) ; } boolean VAR_3 = false ; double VAR_4 = VAR_5 . METHOD_2 ( ) ; if ( VAR_4 > FLOAT_1 ) { this . VAR_2 -= VAR_1 ; VAR_3 = true ; } else { VAR_3 = false ; } return VAR_3 ; }\n", "fixed": "public boolean METHOD_1 ( int VAR_1 ) { if ( ( VAR_1 < 1 ) || ( VAR_1 > ( this . VAR_2 ) ) ) { throw new TYPE_1 ( STRING_1 ) ; } boolean VAR_3 ; double VAR_4 = VAR_5 . METHOD_2 ( ) ; if ( VAR_4 > FLOAT_1 ) { this . VAR_2 -= VAR_1 ; VAR_3 = true ; } else { VAR_3 = false ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response , TYPE_3 VAR_2 ) throws java.io.IOException , TYPE_4 { response . METHOD_2 ( VAR_3 ) ; response . METHOD_3 ( VAR_4 ) ; java.lang.String path = ( TYPE_5 . METHOD_4 ( ) ) + STRING_1 ; TYPE_6 VAR_5 = VAR_1 . METHOD_5 ( path ) ; try { VAR_1 . METHOD_6 ( VAR_6 , VAR_2 ) ; VAR_5 . METHOD_7 ( VAR_1 , response ) ; } catch ( TYPE_7 VAR_7 ) { VAR_8 . error ( ( STRING_2 + path ) , VAR_7 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response , TYPE_3 VAR_2 ) throws java.io.IOException , TYPE_4 { response . METHOD_2 ( VAR_3 ) ; response . METHOD_3 ( VAR_4 ) ; java.lang.String path = STRING_1 ; TYPE_6 VAR_5 = VAR_1 . METHOD_5 ( path ) ; try { VAR_1 . METHOD_6 ( VAR_6 , VAR_2 ) ; VAR_5 . METHOD_7 ( VAR_1 , response ) ; } catch ( TYPE_7 VAR_7 ) { VAR_8 . error ( ( STRING_2 + path ) , VAR_7 ) ; } }\n"}
{"problem": "public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . METHOD_2 ( STRING_1 , null , new TYPE_3 ( ) { public void METHOD_3 ( int VAR_1 , TYPE_4 [ ] VAR_2 , TYPE_5 VAR_3 ) { TYPE_6 . METHOD_4 ( STRING_2 , java.lang.Integer.toString ( VAR_1 ) ) ; } public void METHOD_5 ( int VAR_1 , TYPE_4 [ ] VAR_2 , java.lang.String VAR_4 , java.lang.Throwable VAR_5 ) { TYPE_6 . METHOD_4 ( STRING_3 , java.lang.Integer.toString ( VAR_1 ) ) ; } } ) ; }\n", "fixed": "public static void METHOD_1 ( ) throws TYPE_1 { TYPE_2 . get ( STRING_1 , null , new TYPE_3 ( ) { public void METHOD_3 ( int VAR_1 , TYPE_4 [ ] VAR_2 , TYPE_5 VAR_3 ) { TYPE_6 . METHOD_4 ( STRING_2 , java.lang.Integer.toString ( VAR_1 ) ) ; } public void METHOD_5 ( int VAR_1 , TYPE_4 [ ] VAR_2 , java.lang.String VAR_4 , java.lang.Throwable VAR_5 ) { TYPE_6 . METHOD_4 ( STRING_3 , java.lang.Integer.toString ( VAR_1 ) ) ; } } ) ; }\n"}
{"problem": "public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( VAR_1 instanceof TYPE_2 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; if ( ( ( VAR_2 . METHOD_2 ( ) ) == ( ( VAR_2 . METHOD_3 ( 0 ) . METHOD_4 ( ) ) - ( VAR_2 . METHOD_4 ( ) ) ) ) && ( ( VAR_3 ) == 0 ) ) { VAR_4 = true ; } else { VAR_4 = false ; } } else { VAR_4 = false ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( android.view.View VAR_1 , TYPE_1 event ) { if ( VAR_1 instanceof TYPE_2 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; VAR_4 = ( ( VAR_2 . METHOD_2 ( ) ) == ( ( VAR_2 . METHOD_3 ( 0 ) . METHOD_4 ( ) ) - ( VAR_2 . METHOD_4 ( ) ) ) ) && ( ( VAR_3 ) == 0 ) ; } else { VAR_4 = false ; } return false ; }\n"}
{"problem": "private TYPE_1 < ? > METHOD_1 ( final java.lang.String ... VAR_1 ) { for ( java.lang.String p : VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( p ) ) ) { return TYPE_1 . METHOD_3 ( ) ; } } return TYPE_1 . METHOD_4 ( null ) ; }\n", "fixed": "private TYPE_1 < ? > METHOD_1 ( final java.lang.String ... VAR_1 ) { for ( java.lang.String p : VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( p ) ) ) { return TYPE_1 . METHOD_3 ( ) ; } } return TYPE_1 . METHOD_4 ( new java.lang.Object ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , final TYPE_1 VAR_2 ) { if ( ( ( VAR_3 ) != INT_1 ) || ( ( java.lang.Integer.parseInt ( VAR_1 ) ) == INT_2 ) ) { return ; } if ( ( VAR_4 . size ( VAR_5 ) ) == 0 ) { VAR_2 . METHOD_2 ( VAR_6 , VAR_7 , VAR_5 , VAR_8 , VAR_9 , VAR_10 , TYPE_2 . name ( ) , VAR_11 , VAR_3 , VAR_12 ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , final TYPE_1 VAR_2 ) { if ( ( ( VAR_3 ) == INT_1 ) && ( ( java.lang.Integer.parseInt ( VAR_1 ) ) != INT_2 ) ) { if ( ( VAR_4 . size ( VAR_5 ) ) == 0 ) { VAR_2 . METHOD_2 ( VAR_6 , VAR_7 , VAR_5 , VAR_8 , VAR_9 , VAR_10 , TYPE_2 . name ( ) , VAR_11 , VAR_3 , VAR_12 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( int id ) { int VAR_1 = 0 ; this . VAR_2 = STRING_1 ; this . values = new TYPE_1 ( ) ; this . values . put ( STRING_2 , STRING_3 ) ; this . VAR_3 = STRING_4 + id ; this . VAR_4 = null ; VAR_1 = this . METHOD_2 ( this . VAR_2 , this . values , this . VAR_3 , this . VAR_4 ) ; VAR_5 . METHOD_3 ( STRING_5 , ( ( STRING_6 + VAR_1 ) + STRING_7 ) ) ; }\n", "fixed": "public void METHOD_1 ( int id ) { int VAR_1 = 0 ; this . VAR_2 = STRING_1 ; this . values = new TYPE_1 ( ) ; this . values . put ( STRING_2 , STRING_3 ) ; this . VAR_3 = STRING_4 + id ; this . VAR_4 = null ; VAR_1 = this . METHOD_2 ( this . VAR_2 , this . values , this . VAR_3 , this . VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = TYPE_1 . getString ( STRING_1 ) ; VAR_2 = VAR_1 . split ( STRING_2 , INT_1 ) ; try { VAR_3 = java.lang.Double . METHOD_2 ( VAR_2 [ 0 ] ) ; VAR_4 = java.lang.Double . METHOD_2 ( VAR_2 [ 1 ] ) ; } catch ( java.lang.Exception VAR_5 ) { } }\n", "fixed": "public void METHOD_1 ( ) { try { VAR_1 = TYPE_1 . getString ( STRING_1 ) ; VAR_2 = VAR_1 . split ( STRING_2 , INT_1 ) ; VAR_3 = java.lang.Double . METHOD_2 ( VAR_2 [ 0 ] ) ; VAR_4 = java.lang.Double . METHOD_2 ( VAR_2 [ 1 ] ) ; } catch ( java.lang.Exception VAR_5 ) { } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 < TYPE_1 > VAR_3 = VAR_1 . METHOD_3 ( ) ; for ( TYPE_1 VAR_4 : VAR_3 ) { TYPE_3 VAR_5 = new TYPE_3 ( VAR_4 . METHOD_4 ( ) , ( ( java.lang.String ) ( VAR_4 . getValue ( ) ) ) ) ; VAR_2 . add ( VAR_5 ) ; METHOD_5 ( ) ; } VAR_6 . METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) ; TYPE_2 < TYPE_1 > VAR_3 = VAR_1 . METHOD_3 ( ) ; for ( TYPE_1 VAR_4 : VAR_3 ) { TYPE_3 VAR_5 = new TYPE_3 ( VAR_4 . METHOD_4 ( ) , ( ( java.lang.String ) ( VAR_4 . getValue ( ) ) ) ) ; VAR_2 . add ( VAR_5 ) ; } METHOD_5 ( ) ; VAR_6 . METHOD_6 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 node ) { if ( METHOD_2 ( node ) ) { this . VAR_1 . put ( node . METHOD_3 ( ) . toString ( ) , ( ( TYPE_2 ) ( node ) ) ) ; } if ( METHOD_4 ( node ) ) { METHOD_5 ( ( ( TYPE_3 ) ( node ) ) . METHOD_6 ( ) ) ; } }\n", "fixed": "private void METHOD_1 ( final TYPE_1 node ) { if ( METHOD_2 ( node ) ) { VAR_1 . put ( node . METHOD_3 ( ) . toString ( ) , ( ( TYPE_2 ) ( node ) ) ) ; } if ( METHOD_4 ( node ) ) { METHOD_5 ( ( ( TYPE_3 ) ( node ) ) . METHOD_6 ( ) ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 . get ( STRING_1 ) . METHOD_2 ( ) ; if ( ( ( VAR_3 ) == null ) && ( VAR_1 != null ) ) { VAR_3 = TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . get ( STRING_1 ) . METHOD_4 ( ) ; if ( ( ( VAR_3 ) == null ) && ( VAR_1 != null ) ) { VAR_3 = TYPE_1 . METHOD_3 ( VAR_1 ) ; } return VAR_3 ; }\n"}
{"problem": "private boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_1 == ( TYPE_1 . toString ( ) ) ) || ( VAR_1 == ( TYPE_1 . toString ( ) ) ) ) || ( VAR_1 == ( TYPE_1 . toString ( ) ) ) ) { return true ; } return false ; }\n", "fixed": "private boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_1 . equals ( TYPE_1 . toString ( ) ) ) || ( VAR_1 . equals ( TYPE_1 . toString ( ) ) ) ) || ( VAR_1 . equals ( TYPE_1 . toString ( ) ) ) ) { return true ; } return false ; }\n"}
{"problem": "protected double METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( VAR_1 . METHOD_2 ( ) ) - ( VAR_2 . METHOD_2 ( ) ) ; int VAR_4 = ( VAR_1 . METHOD_3 ( ) ) - ( VAR_2 . METHOD_3 ( ) ) ; int VAR_5 = ( VAR_1 . METHOD_4 ( ) ) - ( VAR_2 . METHOD_4 ( ) ) ; return TYPE_2 . METHOD_5 ( ( ( ( VAR_3 * VAR_3 ) + ( VAR_4 * VAR_4 ) ) + ( VAR_5 * VAR_5 ) ) ) ; }\n", "fixed": "protected static double METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( VAR_1 . METHOD_2 ( ) ) - ( VAR_2 . METHOD_2 ( ) ) ; int VAR_4 = ( VAR_1 . METHOD_3 ( ) ) - ( VAR_2 . METHOD_3 ( ) ) ; int VAR_5 = ( VAR_1 . METHOD_4 ( ) ) - ( VAR_2 . METHOD_4 ( ) ) ; return TYPE_2 . METHOD_5 ( ( ( ( VAR_3 * VAR_3 ) + ( VAR_4 * VAR_4 ) ) + ( VAR_5 * VAR_5 ) ) ) ; }\n"}
{"problem": "protected boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 ; TYPE_1 VAR_3 ; if ( ( ( VAR_4 ) != null ) && ( METHOD_2 ( VAR_1 ) ) ) { VAR_3 = VAR_4 . get ( VAR_1 ) ; if ( ( VAR_3 . METHOD_3 ( ) ) && ( METHOD_4 ( VAR_1 ) ) ) { VAR_2 = true ; } else { VAR_2 = true ; } } else { VAR_2 = false ; } return VAR_2 ; }\n", "fixed": "protected boolean METHOD_1 ( java.lang.String VAR_1 ) { boolean VAR_2 ; TYPE_1 VAR_3 ; if ( ( ( VAR_4 ) != null ) && ( METHOD_2 ( VAR_1 ) ) ) { VAR_3 = VAR_4 . get ( VAR_1 ) ; if ( ( VAR_3 . METHOD_3 ( ) ) && ( METHOD_4 ( VAR_1 ) ) ) { VAR_2 = true ; } else { VAR_2 = true ; } } else { VAR_2 = false ; } VAR_2 = true ; return VAR_2 ; }\n"}
{"problem": "private synchronized void fail ( ) { VAR_1 = ( ++ ( VAR_1 ) ) % ( VAR_2 ) ; long VAR_3 = VAR_4 [ VAR_1 ] ; long VAR_5 = VAR_4 [ VAR_1 ] = TYPE_1 . METHOD_1 ( ) ; if ( VAR_3 == 0 ) return ; if ( ( VAR_5 - VAR_3 ) < ( VAR_6 ) ) VAR_7 = VAR_5 + ( VAR_8 ) ; }\n", "fixed": "private synchronized void fail ( ) { VAR_1 = ( ++ ( VAR_1 ) ) % ( VAR_4 . length ) ; long VAR_3 = VAR_4 [ VAR_1 ] ; long VAR_5 = VAR_4 [ VAR_1 ] = TYPE_1 . METHOD_1 ( ) ; if ( VAR_3 == 0 ) return ; if ( ( VAR_5 - VAR_3 ) < ( VAR_6 ) ) VAR_7 = VAR_5 + ( VAR_8 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { VAR_3 . info ( STRING_1 , VAR_1 ) ; VAR_3 . info ( STRING_2 ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > VAR_4 : VAR_2 . METHOD_2 ( ) ) { VAR_3 . info ( STRING_3 , VAR_4 . METHOD_3 ( ) ) ; VAR_3 . info ( STRING_4 , VAR_4 . getValue ( ) ) ; } }\n", "fixed": "public int METHOD_1 ( java.lang.String VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { VAR_3 . info ( STRING_1 , VAR_1 ) ; VAR_3 . info ( STRING_2 ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > VAR_4 : VAR_2 . METHOD_2 ( ) ) { VAR_3 . info ( STRING_3 , VAR_4 . METHOD_3 ( ) ) ; VAR_3 . info ( STRING_4 , VAR_4 . getValue ( ) ) ; } return 0 ; }\n"}
{"problem": "protected void METHOD_1 ( ) { android.content.Intent intent = getIntent ( ) ; if ( intent != null ) { java.lang.String title = intent . METHOD_2 ( TYPE_1 ) ; if ( ! ( STRING_1 . equals ( title ) ) ) { METHOD_3 ( getString ( VAR_1 ) ) ; } } TYPE_2 . METHOD_4 ( VAR_2 ) ; }\n", "fixed": "protected void METHOD_1 ( ) { android.content.Intent intent = getIntent ( ) ; if ( intent != null ) { java.lang.String title = intent . METHOD_2 ( TYPE_1 ) ; if ( TYPE_1 . equals ( title ) ) { METHOD_3 ( getString ( VAR_1 ) ) ; } } TYPE_2 . METHOD_4 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { boolean VAR_1 = METHOD_3 ( ) ; boolean VAR_2 = ! VAR_1 ; boolean VAR_3 = VAR_1 || ( VAR_4 ) ; if ( VAR_1 && ( VAR_5 ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( VAR_3 , VAR_2 ) ; } METHOD_6 ( ) ; VAR_6 = false ; VAR_7 . info ( STRING_1 , VAR_8 ) ; } else { VAR_7 . METHOD_7 ( STRING_2 , VAR_8 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { boolean VAR_1 = METHOD_3 ( ) ; boolean VAR_2 = ! VAR_1 ; boolean VAR_3 = VAR_1 || ( VAR_4 ) ; if ( VAR_1 && ( VAR_5 ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( VAR_3 , VAR_2 ) ; } METHOD_6 ( ) ; VAR_6 = false ; VAR_7 . METHOD_7 ( STRING_1 , VAR_8 ) ; } else { VAR_7 . METHOD_7 ( STRING_2 , VAR_8 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { METHOD_2 ( VAR_2 class , STRING_1 , INT_1 ) ; METHOD_2 ( VAR_2 class , STRING_2 ) ; METHOD_2 ( VAR_2 class , true ) ; assertEquals ( INT_1 , METHOD_3 ( VAR_2 class , STRING_1 ) ) ; assertEquals ( STRING_2 , METHOD_3 ( VAR_2 class , VAR_3 . String class ) ) ; assertTrue ( METHOD_3 ( VAR_2 class , boolean . class ) ) ; METHOD_4 ( VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_2 class , STRING_1 , INT_1 ) ; METHOD_2 ( VAR_2 class , STRING_2 ) ; METHOD_2 ( VAR_2 class , true ) ; assertEquals ( INT_1 , METHOD_3 ( VAR_2 class , STRING_1 ) ) ; assertEquals ( STRING_2 , METHOD_3 ( VAR_2 class , VAR_3 . String class ) ) ; assertTrue ( METHOD_3 ( VAR_2 class , boolean . class ) ) ; METHOD_4 ( VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; } else { for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_3 [ i ] . METHOD_1 ( ) ; } } }\n", "fixed": "public void METHOD_3 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( ) ; } else { for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_3 [ i ] . METHOD_3 ( ) ; } } }\n"}
{"problem": "private java.util.ArrayList < java.lang.String > METHOD_1 ( ) { java.util.ArrayList < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; final TYPE_1 [ ] VAR_2 = VAR_3 class . METHOD_2 ( ) ; for ( TYPE_1 field : VAR_2 ) { final java.lang.String VAR_4 ; VAR_4 = field . getName ( ) ; if ( ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_4 , STRING_1 , STRING_2 ) ) != 0 ) VAR_1 . add ( VAR_4 ) ; } return VAR_1 ; }\n", "fixed": "public java.util.ArrayList < java.lang.String > METHOD_1 ( ) { java.util.ArrayList < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; final TYPE_1 [ ] VAR_2 = VAR_3 class . METHOD_2 ( ) ; for ( TYPE_1 field : VAR_2 ) { final java.lang.String VAR_4 ; VAR_4 = field . getName ( ) ; if ( ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_4 , STRING_1 , STRING_2 ) ) != 0 ) VAR_1 . add ( VAR_4 ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { boolean VAR_1 = METHOD_2 ( ) ; if ( ( VAR_2 ) == true ) { if ( ( VAR_3 ) == false ) { java.lang.String msg = ( VAR_4 . toString ( ) ) + STRING_1 ; TYPE_1 . METHOD_3 ( null , msg ) ; VAR_3 = true ; } } else if ( VAR_1 ) { METHOD_4 ( ) ; ( VAR_4 ) ++ ; } }\n", "fixed": "public void METHOD_1 ( ) { boolean VAR_1 = METHOD_2 ( ) ; if ( VAR_2 ) { if ( ! ( VAR_3 ) ) { java.lang.String msg = ( VAR_4 . toString ( ) ) + STRING_1 ; TYPE_1 . METHOD_3 ( null , msg ) ; VAR_3 = true ; } } else if ( VAR_1 ) { METHOD_4 ( ) ; ( VAR_4 ) ++ ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , false ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( 0 ) ) ) ; if ( ( VAR_2 != null ) && ( data != null ) ) { VAR_2 . METHOD_4 ( ) ; } TYPE_2 VAR_3 = METHOD_5 ( VAR_4 ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_6 ( false ) ; VAR_3 . METHOD_7 ( ) ; VAR_3 . METHOD_8 ( null ) ; } VAR_3 . METHOD_9 ( null ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( 0 , false ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_3 ( 0 ) ) ) ; if ( ( VAR_2 != null ) && ( data != null ) ) { VAR_2 . METHOD_4 ( ) ; } TYPE_2 VAR_3 = METHOD_5 ( VAR_4 ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_7 ( ) ; VAR_3 . METHOD_8 ( null ) ; } VAR_3 . METHOD_9 ( null ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_1 { TYPE_2 VAR_4 = METHOD_2 ( ) . path ( VAR_1 ) . path ( STRING_1 ) . path ( VAR_2 ) . path ( VAR_3 ) . METHOD_3 ( VAR_5 class , STRING_2 ) ; TYPE_3 . METHOD_4 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_1 { TYPE_2 VAR_4 = METHOD_2 ( ) . path ( VAR_1 ) . path ( STRING_1 ) . path ( VAR_2 ) . path ( VAR_3 ) . METHOD_3 ( VAR_5 class , \"0\" ) ; TYPE_3 . METHOD_4 ( VAR_4 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = METHOD_3 ( ) ; java.lang.String VAR_4 = METHOD_4 ( VAR_3 ) ; int VAR_5 = VAR_3 . size ( ) ; int VAR_6 = VAR_3 . get ( ( VAR_5 - 1 ) ) . METHOD_5 ( ) ; TYPE_3 VAR_7 = new TYPE_3 ( STRING_1 , VAR_6 ) ; VAR_8 . METHOD_6 ( VAR_7 ) ; VAR_9 . METHOD_7 ( STRING_2 ) ; return new TYPE_1 ( VAR_10 , VAR_4 ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = METHOD_3 ( ) ; java.lang.String VAR_4 = METHOD_4 ( VAR_3 ) ; int VAR_5 = VAR_3 . size ( ) ; int VAR_6 = VAR_3 . get ( ( VAR_5 - 1 ) ) . METHOD_5 ( ) ; TYPE_3 VAR_7 = new TYPE_3 ( STRING_1 , VAR_6 ) ; VAR_8 . METHOD_6 ( VAR_7 ) ; VAR_9 . METHOD_7 ( STRING_2 ) ; return new TYPE_1 ( VAR_10 , VAR_3 ) ; }\n"}
{"problem": "private int METHOD_1 ( java.lang.String str ) { int VAR_1 = VAR_2 ; for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { if ( str . equals ( VAR_3 ) ) { VAR_1 = i + 1 ; break ; } } return VAR_1 ; }\n", "fixed": "private int METHOD_1 ( java.lang.String str ) { int VAR_1 = VAR_2 ; for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { if ( str . equals ( VAR_3 [ i ] ) ) { VAR_1 = i ; break ; } } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; try { TYPE_3 . METHOD_5 ( STRING_1 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; TYPE_3 . fail ( STRING_2 ) ; } catch ( TYPE_4 VAR_3 ) { TYPE_5 . METHOD_7 ( STRING_3 ) ; } try { TYPE_3 . METHOD_5 ( STRING_4 , VAR_4 . METHOD_6 ( VAR_2 ) ) ; TYPE_3 . fail ( STRING_5 ) ; } catch ( TYPE_4 VAR_3 ) { TYPE_5 . METHOD_7 ( STRING_3 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { METHOD_4 ( ) ; try { TYPE_3 . METHOD_5 ( STRING_1 , VAR_1 . METHOD_6 ( VAR_2 ) ) ; TYPE_3 . fail ( STRING_2 ) ; } catch ( TYPE_4 VAR_3 ) { TYPE_5 . METHOD_7 ( STRING_3 ) ; } try { TYPE_3 . METHOD_5 ( STRING_4 , VAR_4 . METHOD_6 ( VAR_2 ) ) ; TYPE_3 . fail ( STRING_5 ) ; } catch ( TYPE_4 VAR_3 ) { TYPE_5 . METHOD_7 ( STRING_3 ) ; } }\n"}
{"problem": "public java.util.Set < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String date ) throws TYPE_2 { try { return VAR_3 . METHOD_2 ( VAR_1 , VAR_2 , date ) ; } catch ( java.lang.Exception VAR_4 ) { throw new TYPE_2 ( VAR_4 , VAR_4 . METHOD_3 ( ) ) ; } }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 , java.lang.String date ) throws TYPE_2 { try { return VAR_3 . METHOD_2 ( VAR_1 , date ) ; } catch ( java.lang.Exception VAR_4 ) { throw new TYPE_2 ( VAR_4 , VAR_4 . METHOD_3 ( ) ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.Class < ? extends TYPE_2 > VAR_1 , TYPE_3 VAR_2 ) { METHOD_2 ( VAR_1 ) ; if ( VAR_1 . equals ( VAR_3 class ) ) { return TYPE_4 . METHOD_1 ( VAR_2 ) ; } if ( VAR_1 . equals ( VAR_4 class ) ) { return TYPE_5 . METHOD_1 ( VAR_2 ) ; } throw METHOD_3 ( VAR_1 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.Class < ? extends TYPE_2 > VAR_1 , TYPE_3 VAR_2 ) { METHOD_2 ( VAR_1 ) ; if ( VAR_1 . equals ( VAR_4 class ) ) { return TYPE_5 . METHOD_1 ( VAR_2 ) ; } if ( VAR_1 . equals ( VAR_3 class ) ) { return TYPE_4 . METHOD_1 ( VAR_2 ) ; } throw METHOD_3 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.Integer result , TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = result . toString ( ) ; VAR_3 . setValue ( ( ( VAR_4 ) + ( VAR_2 ) ) ) ; VAR_5 . METHOD_2 ( ) ; VAR_6 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; java.lang.System.out.println ( ( STRING_1 + ( result . toString ( ) ) ) ) ; } else { java.lang.System.err.println ( VAR_1 . METHOD_5 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.Integer result , TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = result . toString ( ) ; VAR_3 . setValue ( ( ( VAR_4 ) + ( VAR_2 ) ) ) ; VAR_3 . METHOD_2 ( ) ; VAR_6 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ; java.lang.System.out.println ( ( STRING_1 + ( result . toString ( ) ) ) ) ; } else { java.lang.System.err.println ( VAR_1 . METHOD_5 ( ) ) ; } }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = VAR_4 . getContext ( ) ; VAR_7 = ( ( TYPE_4 ) ( VAR_4 . METHOD_3 ( VAR_8 ) ) ) ; VAR_9 = ( ( TYPE_4 ) ( VAR_4 . METHOD_3 ( VAR_10 ) ) ) ; if ( ( VAR_11 ) != null ) { VAR_7 . setText ( VAR_12 ) ; VAR_9 . setText ( VAR_13 ) ; } return VAR_4 ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View VAR_4 = VAR_1 . METHOD_2 ( VAR_5 , VAR_2 , false ) ; VAR_6 = VAR_4 . getContext ( ) ; VAR_7 = ( ( TYPE_4 ) ( VAR_4 . METHOD_3 ( VAR_8 ) ) ) ; VAR_7 . setText ( VAR_12 ) ; VAR_9 = ( ( TYPE_4 ) ( VAR_4 . METHOD_3 ( VAR_10 ) ) ) ; VAR_9 . setText ( VAR_13 ) ; return VAR_4 ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { java.lang.String output = STRING_1 ; for ( int index = VAR_1 ; index < ( ( VAR_1 ) + INT_1 ) ; index ++ ) { int VAR_2 = VAR_3 . getValue ( index ) ; output += java.lang.String . METHOD_2 ( VAR_2 ) ; } java.lang.System.out.println ( output ) ; } catch ( TYPE_1 VAR_4 ) { } }\n", "fixed": "public void METHOD_1 ( ) { try { java.lang.String output = STRING_1 ; for ( int index = VAR_1 ; index < ( ( VAR_1 ) + INT_1 ) ; index ++ ) { int VAR_2 = VAR_3 . getValue ( index ) ; output = ( java.lang.String . METHOD_2 ( VAR_2 ) ) + output ; } java.lang.System.out.println ( output ) ; } catch ( TYPE_1 VAR_4 ) { } }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . add ( VAR_1 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) . add ( VAR_1 ) ; try { TYPE_2 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_1 . METHOD_7 ( ) . toString ( ) , VAR_1 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_8 ( ) ; } }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) return ; java.util.Set < TYPE_1 > VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; VAR_2 . add ( VAR_1 ) ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) . add ( VAR_1 ) ; try { TYPE_2 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_1 . METHOD_7 ( ) . toString ( ) , VAR_1 ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_8 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 . METHOD_1 ( VAR_2 ) ; this . VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_3 = this . VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( TYPE_3 . METHOD_4 ( VAR_2 ) , VAR_3 . METHOD_5 ( this . VAR_4 ) ) ; this . VAR_5 . METHOD_6 ( STRING_1 , VAR_6 ) ; TYPE_2 . assertEquals ( TYPE_3 . METHOD_4 ( VAR_2 ) , VAR_3 . METHOD_5 ( this . VAR_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { this . VAR_1 . METHOD_1 ( java.util.Arrays.asList ( VAR_2 ) ) ; this . VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_3 = this . VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( TYPE_3 . METHOD_4 ( VAR_2 ) , VAR_3 . METHOD_5 ( this . VAR_4 ) ) ; this . VAR_5 . METHOD_6 ( STRING_1 , VAR_6 ) ; TYPE_2 . assertEquals ( TYPE_3 . METHOD_4 ( VAR_2 ) , VAR_3 . METHOD_5 ( this . VAR_4 ) ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_3 query = VAR_2 . METHOD_3 ( STRING_1 ) ; query . METHOD_4 ( STRING_2 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_4 = query . list ( ) ; java.lang.System.out.println ( VAR_4 . get ( 0 ) . toString ( ) ) ; return VAR_4 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) ; TYPE_3 query = VAR_2 . METHOD_3 ( STRING_1 ) ; query . METHOD_4 ( STRING_2 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_4 = query . list ( ) ; return VAR_4 ; }\n"}
{"problem": "private java.lang.Double METHOD_1 ( ) throws TYPE_1 { int VAR_1 = this . VAR_2 . METHOD_2 ( CHAR_1 , this . index ) ; if ( VAR_1 == ( - 1 ) ) { throw new TYPE_1 ( STRING_1 , this . index ) ; } this . METHOD_3 ( ( VAR_1 + 1 ) ) ; java.lang.String value = this . VAR_2 . substring ( this . index , VAR_1 ) ; this . index = VAR_1 + 1 ; return java.lang.Double . METHOD_4 ( value ) ; }\n", "fixed": "private java.lang.Double METHOD_1 ( ) throws TYPE_1 { int VAR_1 = this . VAR_2 . METHOD_2 ( CHAR_1 , this . index ) ; if ( VAR_1 == ( - 1 ) ) { throw new TYPE_1 ( STRING_1 , this . index ) ; } METHOD_3 ( ( VAR_1 + 1 ) ) ; java.lang.String value = this . VAR_2 . substring ( this . index , VAR_1 ) ; this . index = VAR_1 + 1 ; return java.lang.Double . METHOD_4 ( value ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; try { VAR_1 . METHOD_2 ( 0L ) ; while ( ! ( VAR_2 . METHOD_3 ( VAR_1 ) . isEmpty ( ) ) ) { VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_4 ( ) ) + 1L ) ) ; } } catch ( TYPE_1 VAR_3 ) { fail ( STRING_1 ) ; } java.util.List < TYPE_2 > result = VAR_2 . METHOD_3 ( VAR_1 ) ; assertEquals ( 0 , result . size ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( ) ; try { VAR_1 . METHOD_2 ( 0L ) ; while ( ! ( VAR_2 . METHOD_3 ( VAR_1 ) . isEmpty ( ) ) ) { VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_4 ( ) ) + 1L ) ) ; } } catch ( TYPE_1 VAR_3 ) { fail ( STRING_1 ) ; } java.util.List < TYPE_2 > result = VAR_2 . METHOD_3 ( VAR_1 ) ; assertTrue ( result . isEmpty ( ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 context , int VAR_1 ) { TYPE_2 VAR_2 = context . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; if ( VAR_3 != null ) { TYPE_4 < TYPE_5 > VAR_4 = VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_5 . METHOD_5 ( context , VAR_3 . METHOD_6 ( ) , VAR_4 ) ; for ( java.lang.Integer VAR_6 : VAR_3 . METHOD_7 ( ) ) { METHOD_1 ( context , VAR_6 ) ; } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 context , int VAR_1 ) { TYPE_2 VAR_2 = context . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; if ( VAR_3 != null ) { java.util.List < TYPE_5 > VAR_4 = VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_5 . METHOD_5 ( context , VAR_3 . METHOD_6 ( ) , VAR_4 ) ; for ( java.lang.Integer VAR_6 : VAR_3 . METHOD_7 ( ) ) { METHOD_1 ( context , VAR_6 ) ; } } }\n"}
{"problem": "public long METHOD_1 ( ) { int VAR_1 = ( VAR_2 ) - ( VAR_3 ) ; if ( VAR_1 <= 0 ) { throw new TYPE_1 ( STRING_1 ) ; } return ( ( ( VAR_4 ) * ( VAR_1 - 1 ) ) + ( VAR_5 ) ) - ( VAR_6 ) ; }\n", "fixed": "public long METHOD_1 ( ) { int VAR_1 = ( VAR_2 ) - ( VAR_3 ) ; if ( VAR_1 <= 0 ) { return 0 ; } return ( ( ( VAR_4 ) * ( VAR_1 - 1 ) ) + ( VAR_5 ) ) - ( VAR_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_1 . put ( STRING_1 , VAR_1 . getString ( \"type\" ) ) ; VAR_1 . put ( \"type\" , STRING_2 ) ; VAR_1 . remove ( STRING_3 ) ; VAR_1 . remove ( STRING_4 ) ; VAR_1 . put ( STRING_5 , x ) ; VAR_1 . put ( STRING_6 , y ) ; VAR_1 . put ( STRING_7 , VAR_3 ) ; VAR_1 . put ( STRING_8 , VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_1 . put ( STRING_1 , VAR_1 . getString ( \"type\" ) ) ; VAR_1 . put ( \"type\" , STRING_2 ) ; VAR_1 . remove ( STRING_3 ) ; VAR_1 . remove ( STRING_4 ) ; VAR_1 . put ( STRING_5 , y ) ; VAR_1 . put ( STRING_6 , x ) ; VAR_1 . put ( STRING_7 , VAR_4 ) ; VAR_1 . put ( STRING_8 , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( final android.view.View view ) { TYPE_1 VAR_1 = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) ) ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_1 . METHOD_4 ( VAR_4 , VAR_5 , VAR_3 ) ; byte [ ] VAR_6 = VAR_3 . METHOD_5 ( ) ; java.lang.String VAR_7 = TYPE_4 . METHOD_6 ( VAR_6 , VAR_8 ) ; TYPE_5 . METHOD_7 ( STRING_1 , VAR_7 ) ; }\n", "fixed": "public void METHOD_1 ( final android.view.View view ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_1 . METHOD_4 ( VAR_4 , VAR_5 , VAR_3 ) ; byte [ ] VAR_6 = VAR_3 . METHOD_5 ( ) ; java.lang.String VAR_7 = TYPE_4 . METHOD_6 ( VAR_6 , VAR_8 ) ; TYPE_5 . METHOD_7 ( STRING_1 , VAR_7 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { java.lang.Thread t = new java.lang.Thread ( ( ) - > { new TYPE_1 ( ) . METHOD_2 ( ) ; } ) ; t . METHOD_3 ( true ) ; t . start ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( this . VAR_1 ) != null ) { java.lang.Thread t = new java.lang.Thread ( ( ) - > { new TYPE_1 ( ) . METHOD_2 ( true ) ; } ) ; t . METHOD_3 ( true ) ; t . start ( ) ; } }\n"}
{"problem": "public java.util.List < java.lang.Double > METHOD_1 ( ) { java.util.List < java.lang.Double > result = null ; try { result = new java.util.ArrayList < java.lang.Double > ( VAR_1 . size ( ) ) ; TYPE_1 . METHOD_2 ( result , VAR_1 ) ; return result ; } catch ( java.lang.NullPointerException VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; return result ; } }\n", "fixed": "public java.util.List < java.lang.Double > METHOD_1 ( ) { java.util.List < java.lang.Double > result = null ; try { result = new java.util.ArrayList < java.lang.Double > ( VAR_1 ) ; return result ; } catch ( java.lang.NullPointerException VAR_2 ) { java.lang.System.out.println ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; return result ; } }\n"}
{"problem": "public boolean getBoolean ( final int VAR_1 ) throws TYPE_1 { METHOD_1 ( ) ; final java.util.List < TYPE_2 > VAR_2 = values . get ( position ) ; if ( VAR_1 > ( VAR_2 . size ( ) ) ) { throw new TYPE_1 ( VAR_3 , VAR_4 ) ; } VAR_5 = VAR_2 . get ( ( VAR_1 - 1 ) ) ; return VAR_5 . METHOD_2 ( ) ? false : VAR_5 . getBoolean ( ) . METHOD_3 ( ) ; }\n", "fixed": "public boolean getBoolean ( final int VAR_1 ) throws TYPE_1 { METHOD_1 ( ) ; final java.util.List < TYPE_2 > VAR_2 = values . get ( position ) ; if ( VAR_1 > ( VAR_2 . size ( ) ) ) { throw new TYPE_1 ( VAR_3 , VAR_4 ) ; } VAR_5 = VAR_2 . get ( ( VAR_1 - 1 ) ) ; return VAR_5 . METHOD_2 ( ) ? false : VAR_5 . getBoolean ( ) ; }\n"}
{"problem": "private java.util.List < java.lang.String > METHOD_1 ( TYPE_1 [ ] VAR_1 , TYPE_2 [ ] VAR_2 ) { java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; for ( int index = 0 ; index < ( VAR_1 . length ) ; index ++ ) { VAR_3 . add ( METHOD_2 ( VAR_1 [ index ] , VAR_2 [ index ] ) ) ; } return VAR_3 ; }\n", "fixed": "private java.util.List < java.lang.String > METHOD_1 ( TYPE_1 [ ] VAR_1 , TYPE_2 [ ] VAR_2 ) { java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; for ( int index = 0 ; index < ( VAR_1 . length ) ; index ++ ) { VAR_3 . add ( METHOD_2 ( VAR_1 [ index ] , ( ( VAR_2 . length ) != 0 ? VAR_2 [ index ] : null ) ) ) ; } return VAR_3 ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { if ( TYPE_2 . METHOD_3 ( getClass ( ) ) ) { TYPE_3 . METHOD_4 ( VAR_2 , STRING_1 ) ; TYPE_2 . METHOD_5 ( this ) ; VAR_1 = METHOD_2 ( ) ; TYPE_3 . METHOD_4 ( VAR_2 , ( STRING_2 + VAR_1 ) ) ; } } return VAR_1 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { if ( TYPE_2 . METHOD_3 ( getClass ( ) ) ) { TYPE_2 . METHOD_5 ( this ) ; VAR_1 = METHOD_2 ( ) ; } } return VAR_1 ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.Long VAR_1 , TYPE_3 VAR_2 ) throws TYPE_4 , TYPE_5 , TYPE_6 { TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; TYPE_7 < TYPE_2 > VAR_4 = VAR_5 . METHOD_1 ( VAR_3 , VAR_1 ) ; if ( ! ( VAR_4 . METHOD_4 ( ) ) ) { new TYPE_1 ( VAR_3 , VAR_6 ) ; } return new TYPE_1 ( VAR_3 , VAR_7 ) ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.Long VAR_1 , TYPE_3 VAR_2 ) throws TYPE_4 , TYPE_5 , TYPE_6 { TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; TYPE_7 < TYPE_2 > VAR_4 = VAR_5 . METHOD_1 ( VAR_3 , VAR_1 ) ; if ( ! ( VAR_4 . METHOD_4 ( ) ) ) new TYPE_1 ( VAR_3 , VAR_6 ) ; return new TYPE_1 ( VAR_3 , VAR_7 ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_1 . get ( \"type\" ) ; java.lang.String label = VAR_1 . get ( STRING_1 ) ; java.lang.String VAR_3 = VAR_1 . get ( STRING_2 ) ; TYPE_1 VAR_4 = VAR_1 . get ( STRING_3 ) ; if ( VAR_4 == null ) { VAR_4 = new TYPE_4 ( ) ; } return TYPE_5 . METHOD_2 ( VAR_2 , label , VAR_3 , VAR_4 ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_1 . get ( \"type\" ) ; java.lang.String label = VAR_1 . get ( STRING_1 ) ; java.lang.String VAR_3 = VAR_1 . get ( STRING_2 ) ; TYPE_1 VAR_4 = VAR_1 . get ( STRING_3 ) ; if ( VAR_4 == null ) { VAR_4 = new TYPE_4 ( ) ; } return TYPE_5 . METHOD_2 ( VAR_2 , label , VAR_3 , VAR_4 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( 1 , VAR_1 . getName ( ) ) ; VAR_2 . METHOD_2 ( INT_1 , VAR_1 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( INT_2 , VAR_1 . METHOD_5 ( ) . getId ( ) ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_6 ( ) ; if ( VAR_3 . METHOD_7 ( ) ) { VAR_1 . METHOD_8 ( VAR_3 . getInt ( 1 ) ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( 1 , VAR_1 . getName ( ) ) ; VAR_2 . METHOD_2 ( INT_1 , VAR_1 . METHOD_3 ( ) ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_6 ( ) ; if ( VAR_3 . METHOD_7 ( ) ) { VAR_1 . METHOD_8 ( VAR_3 . getInt ( 1 ) ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , int i , TYPE_2 VAR_2 ) { if ( i == ( VAR_3 ) ) { TYPE_3 VAR_4 = ( ( TYPE_3 ) ( getActivity ( ) . METHOD_2 ( VAR_5 ) ) ) ; VAR_4 . METHOD_3 ( getView ( ) . METHOD_4 ( ) , 0 ) ; METHOD_5 ( ) ; return true ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , int i , TYPE_2 VAR_2 ) { if ( i == ( VAR_3 ) ) { TYPE_3 VAR_4 = ( ( TYPE_3 ) ( getActivity ( ) . METHOD_2 ( VAR_5 ) ) ) ; VAR_4 . METHOD_3 ( getView ( ) . METHOD_4 ( ) , 0 ) ; return true ; } return false ; }\n"}
{"problem": "private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.HashMap < java.lang.String , java.lang.Integer > ( ) ; int position = 0 ; VAR_1 . add ( TYPE_2 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_3 , ( position ++ ) ) ; VAR_1 . add ( TYPE_3 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_4 , ( position ++ ) ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_2 = new java.util.HashMap < java.lang.String , java.lang.Integer > ( ) ; int position = 0 ; VAR_1 . add ( TYPE_2 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_3 , ( position ++ ) ) ; VAR_5 . METHOD_3 ( VAR_1 ) ; }\n"}
{"problem": "public TYPE_1 select ( java.util.List < ? extends TYPE_1 > VAR_1 ) { int VAR_2 = 1 ; TYPE_2 VAR_3 = null ; for ( TYPE_1 VAR_4 : VAR_1 ) { TYPE_2 var = ( ( TYPE_2 ) ( VAR_4 ) ) ; if ( ( var . METHOD_1 ( ) ) >= VAR_2 ) { VAR_2 = var . METHOD_1 ( ) ; VAR_3 = var ; } } return VAR_3 ; }\n", "fixed": "public TYPE_1 select ( java.util.List < ? extends TYPE_1 > VAR_1 ) { int VAR_2 = 0 ; TYPE_2 VAR_3 = null ; for ( TYPE_1 VAR_4 : VAR_1 ) { TYPE_2 var = ( ( TYPE_2 ) ( VAR_4 ) ) ; if ( ( var . METHOD_1 ( ) ) >= VAR_2 ) { VAR_2 = var . METHOD_1 ( ) ; VAR_3 = var ; } } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { synchronized ( VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 . values ( ) ) { VAR_2 . delete ( ) ; } if ( ( VAR_3 ) != null ) { for ( java.lang.String filename : VAR_3 ) { java.io.File file = new java.io.File ( filename ) ; file . delete ( ) ; } } VAR_1 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_3 = new TYPE_2 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { synchronized ( VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 . values ( ) ) { VAR_2 . delete ( ) ; } if ( ( VAR_3 ) != null ) { for ( java.lang.String filename : VAR_3 ) { java.io.File file = new java.io.File ( filename ) ; file . delete ( ) ; } } VAR_1 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; VAR_3 = new java.util.HashSet < > ( ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int x , int y ) { TYPE_1 result = TYPE_1 . METHOD_2 ( VAR_1 , height , VAR_2 ) ; if ( ( ( ( x < 0 ) || ( x > ( height ) ) ) || ( y < 0 ) ) || ( y > ( height ) ) ) { return result ; } METHOD_3 ( VAR_3 , result , x , y ) ; return result ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int x , int y ) { TYPE_1 result = TYPE_1 . METHOD_2 ( VAR_1 , height , VAR_2 ) ; if ( ( ( ( x < 0 ) || ( x > ( VAR_1 ) ) ) || ( y < 0 ) ) || ( y > ( height ) ) ) { return result ; } METHOD_3 ( VAR_3 , result , x , y ) ; return result ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_1 . METHOD_3 ( VAR_2 ) ) ) { METHOD_4 ( VAR_3 ) ; } TYPE_2 . METHOD_5 ( VAR_4 . getContext ( ) , ( STRING_1 + ( item . METHOD_6 ( ) ) ) , VAR_5 ) . show ( ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) == ( VAR_2 ) ) { METHOD_4 ( VAR_3 ) ; } TYPE_2 . METHOD_5 ( VAR_4 . getContext ( ) , ( STRING_1 + ( item . METHOD_6 ( ) ) ) , VAR_5 ) . show ( ) ; return true ; }\n"}
{"problem": "public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; if ( ( VAR_4 ) != null ) { return ! ( METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } if ( METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) { return true ; } else if ( METHOD_5 ( VAR_1 , VAR_2 , VAR_3 ) ) { return true ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 ) { if ( ( VAR_4 ) != null ) { return ! ( METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } if ( METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) { return true ; } else if ( METHOD_5 ( VAR_1 , VAR_2 , VAR_3 ) ) { return true ; } return false ; }\n"}
{"problem": "public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 , boolean VAR_2 ) { for ( TYPE_1 element : VAR_1 ) { if ( element . getName ( ) . equals ( STRING_1 ) ) { VAR_3 = java.lang.Double . METHOD_2 ( element . getText ( ) ) ; VAR_3 = INT_1 ; if ( ( this ) instanceof TYPE_2 ) { VAR_3 = INT_1 ; } VAR_4 . info ( ( STRING_2 + ( VAR_3 ) ) ) ; } } }\n", "fixed": "public void METHOD_1 ( java.util.Collection < TYPE_1 > VAR_1 , boolean VAR_2 ) { for ( TYPE_1 element : VAR_1 ) { if ( element . getName ( ) . equals ( STRING_1 ) ) { VAR_3 = java.lang.Double . METHOD_2 ( element . getText ( ) ) ; if ( ( this ) instanceof TYPE_2 ) { VAR_3 = INT_1 ; } VAR_4 . info ( ( STRING_2 + ( VAR_3 ) ) ) ; } } }\n"}
{"problem": "public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; VAR_2 = TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; METHOD_4 ( VAR_1 ) ; if ( ! ( TYPE_4 . METHOD_5 ( TYPE_5 . get ( VAR_3 ) ) ) ) { new TYPE_6 ( this ) ; } }\n", "fixed": "public void start ( TYPE_1 VAR_1 ) throws java.lang.Exception { this . VAR_1 = VAR_1 ; VAR_2 = TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ) ; if ( ! ( TYPE_4 . METHOD_5 ( TYPE_5 . get ( VAR_3 ) ) ) ) { new TYPE_6 ( this ) ; } else { METHOD_4 ( VAR_1 ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { if ( ! ( METHOD_2 ( VAR_1 ) ) ) { return false ; } if ( ! ( VAR_1 . METHOD_3 ( this ) ) ) { return false ; } VAR_1 . METHOD_4 ( this , VAR_2 ) ; METHOD_5 ( VAR_1 , VAR_2 ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { if ( ! ( METHOD_2 ( VAR_1 ) ) ) { return false ; } if ( ! ( VAR_1 . METHOD_3 ( this ) ) ) { return false ; } VAR_1 . METHOD_4 ( this ) ; METHOD_5 ( VAR_1 , VAR_2 ) ; return true ; }\n"}
{"problem": "public void METHOD_1 ( java.util.Collection < java.io.File > VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { for ( java.io.File file : VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( new java.io.FileReader ( file ) , new TYPE_3 ( file ) ) ; try ( TYPE_4 writer = new TYPE_5 ( VAR_2 , VAR_4 ) ) { VAR_3 . METHOD_2 ( writer , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) ; } } }\n", "fixed": "public void METHOD_1 ( java.util.Collection < java.io.File > VAR_1 , TYPE_1 VAR_2 ) throws java.io.IOException { try ( TYPE_4 writer = new TYPE_5 ( VAR_2 , VAR_4 ) ) { for ( java.io.File file : VAR_1 ) { TYPE_2 VAR_3 = new TYPE_2 ( new java.io.FileReader ( file ) , new TYPE_3 ( file ) ) ; VAR_3 . METHOD_2 ( writer , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = ( ( VAR_4 ) - ( VAR_2 . METHOD_3 ( ) ) ) + VAR_1 ; if ( INT_1 < VAR_3 ) { VAR_2 . METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; VAR_2 . METHOD_6 ( VAR_5 ) ; VAR_6 = 1 ; } else { METHOD_7 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = ( ( VAR_4 ) - ( VAR_2 . METHOD_3 ( ) ) ) + VAR_1 ; if ( INT_1 <= VAR_3 ) { VAR_2 . METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; VAR_2 . METHOD_6 ( VAR_5 ) ; VAR_6 = 1 ; } else { METHOD_7 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . getId ( ) ) ; VAR_4 = VAR_5 . METHOD_3 ( ) . isEmpty ( ) ; for ( TYPE_2 a : VAR_5 . METHOD_3 ( ) ) { if ( a . METHOD_4 ( ) . contains ( VAR_1 ) ) { VAR_6 . add ( a . METHOD_5 ( ) ) ; } } METHOD_6 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . getId ( ) ) ; VAR_4 = VAR_5 . METHOD_3 ( ) . isEmpty ( ) ; for ( TYPE_2 a : VAR_5 . METHOD_3 ( ) ) { if ( a . METHOD_4 ( ) . contains ( VAR_1 ) ) { VAR_6 . add ( a . METHOD_5 ( ) ) ; } } METHOD_6 ( ) ; }\n"}
{"problem": "private static boolean METHOD_1 ( TYPE_1 VAR_1 , android.content.Context context ) { if ( ! ( TYPE_2 . METHOD_2 ( context , VAR_2 ) ) ) { return false ; } if ( TYPE_3 . METHOD_3 ( getActivity ( ) . METHOD_4 ( ) ) ) { METHOD_5 ( STRING_1 ) ; } int result = VAR_1 . METHOD_6 ( VAR_3 , VAR_2 ) ; if ( result == ( VAR_4 ) ) { return true ; } else { TYPE_4 . METHOD_7 ( VAR_5 , STRING_2 ) ; return false ; } }\n", "fixed": "private static boolean METHOD_1 ( TYPE_1 VAR_1 , android.content.Context context ) { if ( ! ( TYPE_2 . METHOD_2 ( context , VAR_2 ) ) ) { return false ; } int result = VAR_1 . METHOD_6 ( VAR_3 , VAR_2 ) ; if ( result == ( VAR_4 ) ) { return true ; } else { TYPE_4 . METHOD_7 ( VAR_5 , STRING_2 ) ; return false ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , int position ) { if ( ( VAR_2 . get ( position ) . VAR_3 ) == \"0\" ) { VAR_4 . METHOD_2 ( VAR_5 ) ; } else VAR_4 . setText ( ( ( ( STRING_1 + ( VAR_2 . get ( position ) . VAR_6 ) ) + STRING_2 ) + ( VAR_2 . get ( position ) . VAR_7 ) ) ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , int position ) { if ( VAR_2 . get ( position ) . VAR_3 . equals ( \"0\" ) ) { VAR_4 . METHOD_2 ( VAR_5 ) ; } else VAR_4 . setText ( ( ( ( STRING_1 + ( VAR_2 . get ( position ) . VAR_6 ) ) + STRING_2 ) + ( VAR_2 . get ( position ) . VAR_7 ) ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( int VAR_1 , TYPE_1 item ) { return ( ( VAR_2 [ VAR_1 ] ) == null ) || ( ( VAR_2 [ VAR_1 ] . METHOD_2 ( item ) ) && ( ( VAR_2 [ VAR_1 ] . METHOD_3 ( ) ) != ( VAR_2 [ VAR_1 ] . METHOD_4 ( ) ) ) ) ; }\n", "fixed": "public boolean METHOD_1 ( int VAR_1 , TYPE_1 item ) { return ( VAR_2 . get ( VAR_1 ) . isEmpty ( ) ) || ( ( VAR_2 . get ( VAR_1 ) . METHOD_2 ( item ) ) && ( ( VAR_2 . get ( VAR_1 ) . METHOD_3 ( ) ) != ( VAR_2 . get ( VAR_1 ) . METHOD_4 ( ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Object VAR_3 ) { for ( java.util.Iterator < TYPE_1 > VAR_4 = VAR_5 . iterator ( ) ; VAR_4 . METHOD_2 ( ) ; ) { TYPE_1 VAR_6 = VAR_4 . METHOD_3 ( ) ; if ( VAR_2 . equals ( VAR_6 ) ) { ( ( TYPE_2 ) ( VAR_6 ) ) . METHOD_4 ( VAR_7 ) ; VAR_4 . remove ( ) ; break ; } } super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Object VAR_3 ) { for ( java.util.Iterator < TYPE_1 > VAR_4 = VAR_5 . iterator ( ) ; VAR_4 . METHOD_2 ( ) ; ) { TYPE_1 VAR_6 = VAR_4 . METHOD_3 ( ) ; if ( VAR_2 . equals ( VAR_6 . getName ( ) ) ) { ( ( TYPE_2 ) ( VAR_6 ) ) . METHOD_4 ( VAR_7 ) ; VAR_4 . remove ( ) ; break ; } } super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return TYPE_2 . METHOD_2 ( METHOD_1 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_3 ( ) ) , METHOD_1 ( VAR_1 . METHOD_4 ( ) , VAR_2 . METHOD_4 ( ) ) , METHOD_5 ( VAR_1 . METHOD_6 ( ) , VAR_2 . METHOD_6 ( ) ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return TYPE_2 . METHOD_2 ( METHOD_1 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_3 ( ) ) , METHOD_1 ( VAR_1 . METHOD_4 ( ) , VAR_2 . METHOD_4 ( ) ) , METHOD_1 ( VAR_1 . METHOD_6 ( ) , VAR_2 . METHOD_6 ( ) ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( ( java.lang.Math.abs ( VAR_1 . METHOD_2 ( ) ) ) < FLOAT_1 ) && ( ( java.lang.Math.abs ( VAR_1 . METHOD_3 ( ) ) ) < FLOAT_1 ) ) { return this ; } else { return new TYPE_3 ( ( ( VAR_2 ) + ( VAR_1 . METHOD_2 ( ) ) ) , ( ( VAR_3 ) + ( VAR_1 . METHOD_3 ( ) ) ) ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( ( java.lang.Math.abs ( VAR_1 . METHOD_2 ( ) ) ) < FLOAT_1 ) && ( ( java.lang.Math.abs ( VAR_1 . METHOD_3 ( ) ) ) < FLOAT_1 ) ) { return this ; } else { return new TYPE_3 ( ( ( VAR_2 ) + ( VAR_1 . METHOD_2 ( ) ) ) , ( ( VAR_3 ) - ( VAR_1 . METHOD_3 ( ) ) ) ) ; } }\n"}
{"problem": "java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { float VAR_2 = 0 ; for ( TYPE_1 VAR_3 : VAR_1 ) { if ( ( ( VAR_3 . METHOD_2 ( ) ) - ( VAR_3 . METHOD_3 ( ) ) ) > VAR_2 ) { VAR_2 = ( VAR_3 . METHOD_2 ( ) ) - ( VAR_3 . METHOD_3 ( ) ) ; } } for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_3 . METHOD_1 ( VAR_2 ) ; } return VAR_1 ; }\n", "fixed": "java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { double VAR_2 = 0 ; for ( TYPE_1 VAR_3 : VAR_1 ) { if ( ( ( VAR_3 . METHOD_2 ( ) ) - ( VAR_3 . METHOD_3 ( ) ) ) > VAR_2 ) { VAR_2 = ( VAR_3 . METHOD_2 ( ) ) - ( VAR_3 . METHOD_3 ( ) ) ; } } for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_3 . METHOD_1 ( VAR_2 ) ; } return VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( CHAR_1 , this , STRING_1 ) ; TYPE_2 obj = new TYPE_2 ( VAR_2 ) ; if ( obj . getString ( STRING_2 ) . equals ( STRING_3 ) ) { message = new TYPE_3 ( obj ) ; } else { TYPE_1 . METHOD_2 ( CHAR_2 , this , ( STRING_4 + ( VAR_2 ) ) ) ; } if ( VAR_1 ) TYPE_1 . METHOD_2 ( CHAR_1 , this , ( STRING_5 + ( VAR_3 ) ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { if ( VAR_1 ) TYPE_1 . METHOD_2 ( CHAR_1 , this , STRING_1 ) ; TYPE_2 obj = new TYPE_2 ( VAR_2 ) ; if ( obj . getString ( STRING_2 ) . equals ( STRING_3 ) ) { message = new TYPE_3 ( obj ) ; } else { TYPE_1 . METHOD_2 ( CHAR_2 , this , ( STRING_4 + ( VAR_2 ) ) ) ; } if ( VAR_1 ) TYPE_1 . METHOD_2 ( CHAR_1 , this , ( STRING_5 + ( message . getText ( ) ) ) ) ; }\n"}
{"problem": "public java.lang.Integer METHOD_1 ( ) { switch ( this ) { case VAR_1 : return 0 ; case VAR_2 : return 1 ; case VAR_3 : return INT_1 ; case VAR_4 : return INT_2 ; case VAR_5 : return INT_3 ; case VAR_6 : return INT_4 ; case VAR_7 : return INT_5 ; default : return - 1 ; } }\n", "fixed": "public java.lang.Integer METHOD_1 ( ) { switch ( this ) { case VAR_1 : return 0 ; case VAR_2 : return 1 ; case VAR_3 : return INT_1 ; case VAR_6 : return INT_2 ; case VAR_4 : return INT_3 ; case VAR_5 : return INT_4 ; case VAR_7 : return INT_5 ; default : return - 1 ; } }\n"}
{"problem": "public void METHOD_1 ( java.util.List < TYPE_1 > result ) { if ( ( result == null ) || ( result . isEmpty ( ) ) ) VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; else { java.lang.String VAR_5 = STRING_1 ; TYPE_2 . METHOD_3 ( result , this , VAR_6 , VAR_5 , this ) ; } }\n", "fixed": "public void METHOD_1 ( java.util.List < TYPE_1 > result ) { if ( ( result == null ) || ( result . isEmpty ( ) ) ) VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; else { java.lang.String VAR_5 = STRING_1 ; TYPE_2 . METHOD_3 ( VAR_1 , result , this , VAR_6 , VAR_5 , this ) ; } }\n"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) { return ( ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + STRING_2 ) + VAR_3 ) + VAR_4 ) + STRING_2 ) + STRING_3 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 ) { return ( ( ( ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) + STRING_2 ) + VAR_3 ) + VAR_4 ) + STRING_2 ) + VAR_5 ) + STRING_3 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_2 . equals ( VAR_1 . METHOD_2 ( ) ) ) { setEnabled ( ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) . getSelection ( ) ) ; } METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( this . VAR_2 . equals ( VAR_1 . METHOD_2 ( ) ) ) { setEnabled ( ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) . getSelection ( ) ) ; } METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; }\n"}
{"problem": "protected int METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 ) { int VAR_3 = 0 ; java.util.List < java.lang.String > VAR_4 = VAR_5 . get ( VAR_2 ) ; for ( java.lang.String VAR_6 : VAR_4 ) { if ( VAR_7 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_6 ) ) { VAR_3 ++ ; } } return ( ( VAR_4 . size ( ) ) - ( VAR_8 ) ) - VAR_3 ; }\n", "fixed": "protected int METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 ) { int VAR_3 = 0 ; java.util.List < java.lang.String > VAR_4 = VAR_5 . get ( VAR_2 ) ; if ( VAR_4 != null ) { for ( java.lang.String VAR_6 : VAR_4 ) { if ( VAR_7 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_6 ) ) { VAR_3 ++ ; } } return ( ( VAR_4 . size ( ) ) - ( VAR_8 ) ) - VAR_3 ; } return 0 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 msg ) { int [ ] VAR_1 = VAR_2 ; for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { java.lang.System.out.println ( ( ( ( STRING_1 + i ) + STRING_2 ) + ( VAR_1 [ i ] ) ) ) ; } int VAR_3 = VAR_1 [ 0 ] ; int VAR_4 = VAR_1 [ 1 ] ; int VAR_5 = VAR_1 [ INT_1 ] ; METHOD_2 ( VAR_6 [ 0 ] , VAR_6 [ 1 ] , VAR_6 [ INT_1 ] ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 msg ) { int [ ] VAR_1 = VAR_6 ; for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { java.lang.System.out.println ( ( ( ( STRING_1 + i ) + STRING_2 ) + ( VAR_1 [ i ] ) ) ) ; } int VAR_3 = VAR_1 [ 0 ] ; int VAR_4 = VAR_1 [ 1 ] ; int VAR_5 = VAR_1 [ INT_1 ] ; METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; }\n"}
{"problem": "public boolean equals ( java.lang.Object obj ) { if ( ( obj . getClass ( ) . getName ( ) ) == ( VAR_1 class . getName ( ) ) ) { TYPE_1 node = ( ( TYPE_1 ) ( obj ) ) ; return ( this . item . compareTo ( node . item ) ) == 0 ; } return false ; }\n", "fixed": "public boolean equals ( java.lang.Object obj ) { if ( obj instanceof TYPE_1 < ? > ) { if ( ( ( TYPE_1 < ? > ) ( obj ) ) . item . equals ( this . item ) ) { return true ; } } return false ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 error ) { VAR_3 = VAR_2 ; if ( TYPE_4 . equals ( VAR_3 ) ) { VAR_4 . METHOD_2 ( ) . METHOD_3 ( ( ( byte ) ( 1 ) ) ) ; } else if ( TYPE_5 . equals ( VAR_3 ) ) { VAR_5 . METHOD_4 ( ) ; } VAR_6 . METHOD_5 ( new TYPE_6 ( ) { public void METHOD_6 ( ) { METHOD_7 ( VAR_3 ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 error ) { VAR_3 = VAR_2 ; if ( TYPE_4 . equals ( VAR_3 ) ) { VAR_4 . METHOD_2 ( ) . METHOD_3 ( ( ( byte ) ( 1 ) ) ) ; } VAR_6 . METHOD_5 ( new TYPE_6 ( ) { public void METHOD_6 ( ) { METHOD_7 ( VAR_3 ) ; } } ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 < java.lang.Object , java.lang.String > VAR_1 = new TYPE_1 < java.lang.Object , java.lang.String > ( ) { public java.lang.String METHOD_2 ( java.lang.Object arg ) { return arg . toString ( ) ; } } ; TYPE_1 < java.lang.String , java.lang.Integer > VAR_2 = new TYPE_1 < java.lang.String , java.lang.Integer > ( ) { public java.lang.Integer METHOD_2 ( java.lang.String arg ) { return arg . length ( ) ; } } ; TYPE_2 . assertEquals ( VAR_2 . METHOD_3 ( VAR_1 ) . METHOD_2 ( STRING_1 ) , STRING_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 < java.lang.Object , java.lang.String > VAR_1 = new TYPE_1 < java.lang.Object , java.lang.String > ( ) { public java.lang.String METHOD_2 ( java.lang.Object arg ) { return arg . toString ( ) ; } } ; TYPE_1 < java.lang.String , java.lang.Integer > VAR_2 = new TYPE_1 < java.lang.String , java.lang.Integer > ( ) { public java.lang.Integer METHOD_2 ( java.lang.String arg ) { return arg . length ( ) ; } } ; TYPE_2 . assertEquals ( STRING_2 , VAR_2 . METHOD_3 ( VAR_1 ) . METHOD_2 ( STRING_1 ) ) ; }\n"}
{"problem": "private void init ( ) throws TYPE_1 { try { TYPE_2 VAR_1 = METHOD_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( this . METHOD_3 ( ) ) ; } catch ( TYPE_1 VAR_3 ) { VAR_4 . append ( VAR_3 . METHOD_4 ( ) ) ; VAR_4 . append ( METHOD_5 ( ) ) ; throw VAR_3 ; } }\n", "fixed": "private void init ( ) throws TYPE_1 { try { TYPE_2 VAR_1 = METHOD_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( this . METHOD_3 ( ) ) ; } catch ( TYPE_1 VAR_3 ) { VAR_4 . append ( VAR_3 . METHOD_4 ( ) ) . append ( \"\\n\" ) ; VAR_4 . append ( METHOD_5 ( ) ) . append ( \"\\n\" ) ; throw VAR_3 ; } }\n"}
{"problem": "public void add ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; if ( ( VAR_2 ) == null ) { assert ( VAR_3 ) == null ; VAR_3 = VAR_1 ; VAR_2 = VAR_1 ; } VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; }\n", "fixed": "public void add ( TYPE_1 VAR_1 ) { assert VAR_1 != null ; if ( ( VAR_2 ) == null ) { assert ( VAR_3 ) == null ; VAR_3 = VAR_1 ; VAR_2 = VAR_1 ; return ; } VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . METHOD_2 ( ) ) ; i ++ ) { if ( VAR_2 . METHOD_3 ( i ) . METHOD_4 ( ) . equals ( VAR_1 ) ) { VAR_2 . METHOD_1 ( i ) ; return ; } } VAR_2 . METHOD_3 ( 0 ) . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_1 ( 0 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 1 ; i < ( VAR_2 . METHOD_2 ( ) ) ; i ++ ) { if ( VAR_2 . METHOD_3 ( i ) . METHOD_4 ( ) . equals ( VAR_1 ) ) { VAR_2 . METHOD_1 ( i ) ; return ; } } VAR_2 . METHOD_3 ( 0 ) . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_1 ( 0 ) ; }\n"}
{"problem": "public void METHOD_1 ( char [ ] data , int offset , int count ) throws java.io.IOException { java.lang.String message = java.lang.String . METHOD_2 ( data , offset , count ) ; if ( ! ( TYPE_1 . isEmpty ( message . trim ( ) ) ) ) { VAR_1 . METHOD_3 ( message ) ; } }\n", "fixed": "public void METHOD_1 ( char [ ] data , int offset , int count ) throws java.io.IOException { java.lang.String message = java.lang.String . METHOD_2 ( data , offset , count ) ; if ( ! ( TYPE_1 . isEmpty ( message . trim ( ) ) ) ) { VAR_1 . error ( message ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { if ( this . isEmpty ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } TYPE_3 < TYPE_1 > . VAR_1 VAR_2 = first ; first = VAR_3 ; VAR_4 = null ; ( VAR_5 ) -- ; return VAR_2 . item ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( this . isEmpty ( ) ) { throw new TYPE_2 ( STRING_1 ) ; } TYPE_3 < TYPE_1 > . VAR_1 VAR_2 = first ; VAR_4 = null ; first = VAR_3 ; ( VAR_5 ) -- ; return VAR_2 . item ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Throwable { final java.lang.String VAR_1 = ( ( STRING_1 + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ; final java.lang.String VAR_3 = STRING_4 ; java.util.List < java.lang.String > VAR_4 = METHOD_2 ( VAR_5 . METHOD_3 ( ) ) ; VAR_4 . add ( STRING_5 ) ; VAR_4 . add ( STRING_6 ) ; METHOD_4 ( VAR_1 , VAR_3 , true , VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Throwable { final java.lang.String VAR_1 = ( ( STRING_1 + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ; final java.lang.String VAR_3 = STRING_4 ; java.util.List < java.lang.String > VAR_4 = METHOD_2 ( VAR_5 . METHOD_3 ( ) ) ; VAR_4 . add ( STRING_5 ) ; VAR_4 . add ( STRING_6 ) ; METHOD_4 ( VAR_1 , VAR_4 , VAR_3 , true ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; TYPE_2 VAR_2 = null ; try { VAR_2 = new TYPE_2 ( VAR_3 . METHOD_2 ( ) ) ; while ( true ) { VAR_1 = VAR_4 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; if ( ( VAR_1 . METHOD_5 ( ) ) == null ) break ; } VAR_2 . METHOD_6 ( ) ; } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_7 ( ) ; } java.lang.System.out.println ( STRING_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; TYPE_2 VAR_2 = null ; try { VAR_2 = new TYPE_2 ( VAR_3 . METHOD_2 ( ) ) ; while ( true ) { VAR_1 = VAR_4 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; if ( ( VAR_1 . METHOD_5 ( ) ) == null ) break ; } } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_7 ( ) ; } java.lang.System.out.println ( STRING_1 ) ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_1 element = VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; java.lang.String VAR_3 = null ; if ( ! ( STRING_1 . equals ( element . getText ( ) . trim ( ) ) ) ) { VAR_3 = element . getText ( ) ; } return VAR_3 ; }\n", "fixed": "public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_1 element = VAR_1 . METHOD_2 ( new TYPE_2 ( VAR_2 ) ) ; java.lang.String VAR_3 = null ; if ( ! ( element . getText ( ) . trim ( ) . isEmpty ( ) ) ) { VAR_3 = element . getText ( ) ; } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . execute ( TYPE_1 . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) [ 0 ] , TYPE_1 . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) [ 0 ] , VAR_4 . getText ( ) . toString ( ) ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { VAR_2 . execute ( TYPE_1 . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) [ 1 ] , TYPE_1 . METHOD_2 ( VAR_3 . getText ( ) . toString ( ) ) [ 0 ] , VAR_4 . getText ( ) . toString ( ) ) ; }\n"}
{"problem": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { TYPE_2 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; } return VAR_2 ; }\n", "fixed": "public java.util.ArrayList < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { METHOD_1 ( VAR_1 ) ; } VAR_1 = TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; if ( VAR_1 != null ) { METHOD_1 ( VAR_1 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String VAR_1 = this . VAR_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { METHOD_1 ( VAR_1 ) ; } VAR_1 = TYPE_1 . METHOD_3 ( this . VAR_2 . METHOD_4 ( ) ) ; if ( VAR_1 != null ) { METHOD_1 ( VAR_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String text , int type , int operation , int VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; if ( text != null ) { new TYPE_3 ( VAR_3 , VAR_2 , this ) . execute ( text ) ; } else { VAR_4 . METHOD_3 ( VAR_5 ) ; TYPE_4 . METHOD_4 ( ) . METHOD_5 ( VAR_4 . getData ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String text , int type , int operation , int VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; if ( text != null ) { new TYPE_3 ( VAR_3 , VAR_2 , this ) . execute ( text ) ; } else { VAR_4 . METHOD_3 ( this , VAR_5 ) ; TYPE_4 . METHOD_4 ( ) . METHOD_5 ( VAR_4 . getData ( this ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . getView ( INT_1 , null , VAR_2 ) ; METHOD_2 ( VAR_3 , METHOD_3 ( 1 ) ) . METHOD_4 ( VAR_4 , VAR_5 , null ) ; METHOD_2 ( VAR_6 , METHOD_3 ( 1 ) ) . METHOD_5 ( VAR_7 ) ; METHOD_2 ( VAR_6 , METHOD_3 ( 1 ) ) . METHOD_6 ( VAR_7 , INT_1 , false , false ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . getView ( INT_1 , null , VAR_2 ) ; METHOD_2 ( VAR_3 , METHOD_3 ( 1 ) ) . METHOD_4 ( VAR_4 , VAR_5 , view ) ; METHOD_2 ( VAR_6 , METHOD_3 ( 1 ) ) . METHOD_5 ( VAR_7 ) ; METHOD_2 ( VAR_6 , METHOD_3 ( 1 ) ) . METHOD_6 ( VAR_7 , INT_1 , false , false ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String VAR_1 = STRING_1 ; java.util.List < java.lang.String > errors = null ; final boolean result = VAR_2 . METHOD_2 ( VAR_1 ) ; errors = VAR_2 . METHOD_3 ( ) ; TYPE_1 . assertThat ( errors . size ( ) , TYPE_2 . METHOD_4 ( 1 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { final java.lang.String VAR_1 = STRING_1 ; java.util.List < java.lang.String > errors = null ; final boolean result = VAR_2 . METHOD_2 ( VAR_1 ) ; errors = VAR_2 . METHOD_3 ( ) ; TYPE_1 . assertThat ( result , TYPE_2 . METHOD_4 ( false ) ) ; TYPE_1 . assertThat ( errors . size ( ) , TYPE_2 . METHOD_4 ( 1 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , STRING_4 ) ; TYPE_1 . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( STRING_1 , STRING_2 ) ; VAR_1 . put ( STRING_3 , STRING_4 ) ; TYPE_1 . METHOD_2 ( getActivity ( ) ) . METHOD_3 ( VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) ) ) { METHOD_4 ( ) ; } else if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_4 ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == ( ( VAR_3 ) | ( VAR_5 ) ) ) ) { TYPE_2 . METHOD_5 ( ) . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) ) ) { METHOD_4 ( ) ; } else if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_4 ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == ( ( VAR_3 ) | ( VAR_5 ) ) ) ) { METHOD_5 ( ) . METHOD_6 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) == null ) return ; VAR_2 [ ( ( VAR_3 ) - 1 ) ] = STRING_1 ; ( VAR_3 ) ++ ; if ( ( VAR_3 ) > ( VAR_4 ) ) { METHOD_2 ( ) ; VAR_5 . METHOD_3 ( ) ; } else METHOD_4 ( VAR_3 , CHAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { if ( ( VAR_2 ) == null ) return ; if ( ( VAR_4 ) < 1 ) return ; VAR_2 [ ( ( VAR_3 ) - 1 ) ] = STRING_1 ; ( VAR_3 ) ++ ; if ( ( VAR_3 ) > ( VAR_4 ) ) { METHOD_2 ( ) ; VAR_5 . METHOD_3 ( ) ; } else METHOD_4 ( VAR_3 , CHAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; android.content.Intent intent = VAR_2 . getIntent ( ) ; if ( ( VAR_2 == null ) || ( ( ( intent . METHOD_3 ( ) ) != null ) && ( intent . METHOD_3 ( ) . equals ( STRING_1 ) ) ) ) { VAR_1 . METHOD_4 ( null ) ; return ; } VAR_1 . METHOD_4 ( METHOD_5 ( VAR_2 . getIntent ( ) ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; if ( VAR_2 == null ) { VAR_1 . METHOD_4 ( null ) ; return ; } android.content.Intent intent = VAR_2 . getIntent ( ) ; if ( ( ( intent . METHOD_3 ( ) ) != null ) && ( intent . METHOD_3 ( ) . equals ( STRING_1 ) ) ) { VAR_1 . METHOD_4 ( null ) ; return ; } VAR_1 . METHOD_4 ( METHOD_5 ( intent ) ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( 0 ) ; METHOD_2 ( ) . METHOD_4 ( 0 ) ; VAR_2 . METHOD_5 ( METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( 0 ) ; VAR_2 . METHOD_8 ( VAR_1 ) ; VAR_2 . commit ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( 0 ) ; METHOD_2 ( ) . METHOD_4 ( 0 ) ; VAR_2 . METHOD_5 ( METHOD_6 ( ) ) ; if ( null != VAR_1 ) { VAR_1 . METHOD_7 ( 0 ) ; VAR_2 . METHOD_8 ( VAR_1 ) ; } VAR_2 . commit ( ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( METHOD_3 ( VAR_2 ) ) { TYPE_2 . METHOD_4 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_5 ( STRING_3 ) ; } else if ( METHOD_3 ( VAR_3 ) ) { VAR_1 . METHOD_5 ( STRING_4 ) ; } else { VAR_1 . METHOD_5 ( STRING_5 ) ; TYPE_2 . METHOD_4 ( STRING_6 , STRING_7 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( METHOD_3 ( VAR_2 ) ) { VAR_1 . METHOD_5 ( STRING_3 ) ; } else if ( METHOD_3 ( VAR_3 ) ) { VAR_1 . METHOD_5 ( STRING_4 ) ; } else { VAR_1 . METHOD_5 ( STRING_5 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( ( TYPE_1 ) ( new TYPE_2 ( VAR_1 class ) . METHOD_3 ( STRING_1 , STRING_2 ) ) ) ) ; VAR_2 . METHOD_4 ( VAR_3 class ) ; this . VAR_4 . METHOD_5 ( TYPE_3 . get ( STRING_3 ) . METHOD_6 ( VAR_5 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( ( TYPE_1 ) ( new TYPE_2 ( VAR_1 class ) . METHOD_3 ( STRING_1 , STRING_2 ) ) ) ) ; this . VAR_2 . METHOD_4 ( VAR_3 class ) ; this . VAR_4 . METHOD_5 ( TYPE_3 . get ( STRING_3 ) . METHOD_6 ( VAR_5 ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { METHOD_3 ( new android.content.Intent ( getActivity ( ) , VAR_2 class ) ) ; METHOD_4 ( ) ; return true ; } return super . METHOD_1 ( item ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; if ( id == ( VAR_1 ) ) { METHOD_3 ( new android.content.Intent ( getActivity ( ) , VAR_2 class ) ) ; return true ; } return super . METHOD_1 ( item ) ; }\n"}
{"problem": "private java.util.Properties METHOD_1 ( java.lang.String file ) { java.util.Properties VAR_1 = new java.util.Properties ( ) ; java.io.InputStream VAR_2 = null ; try { VAR_2 = new java.io.FileInputStream ( file ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_3 ) { return null ; } finally { try { if ( VAR_2 != null ) VAR_2 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_4 ) { } } return VAR_1 ; }\n", "fixed": "private java.util.Properties METHOD_1 ( java.lang.String file ) { java.util.Properties VAR_1 = new java.util.Properties ( ) ; try ( java.io.InputStream VAR_2 = new java.io.FileInputStream ( file ) ) { VAR_1 . METHOD_2 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_3 ) { return null ; } return VAR_1 ; }\n"}
{"problem": "public boolean METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { return false ; } else { VAR_2 = METHOD_3 ( ) ; VAR_3 = METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_5 = VAR_1 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; try { VAR_7 . METHOD_8 ( VAR_6 ) ; } catch ( java.io.IOException VAR_8 ) { VAR_8 . METHOD_9 ( ) ; METHOD_10 ( STRING_1 ) ; } return true ; } }\n", "fixed": "public boolean METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { return false ; } else { VAR_2 = METHOD_3 ( ) ; VAR_3 = METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_5 = VAR_1 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; try { VAR_7 . METHOD_8 ( VAR_6 ) ; } catch ( java.io.IOException VAR_8 ) { VAR_8 . METHOD_9 ( ) ; METHOD_10 ( STRING_1 ) ; return false ; } return true ; } }\n"}
{"problem": "public double [ ] [ ] METHOD_1 ( ) { double [ ] [ ] VAR_1 = new double [ VAR_2 ] [ n ] ; for ( int i = 0 ; i < ( VAR_2 ) ; i ++ ) { TYPE_1 . METHOD_2 ( VAR_3 [ i ] , 0 , VAR_1 [ i ] , 0 , i ) ; VAR_1 [ i ] [ i ] = VAR_4 [ i ] ; } return VAR_1 ; }\n", "fixed": "public double [ ] [ ] METHOD_1 ( ) { double [ ] [ ] VAR_1 = new double [ n ] [ n ] ; for ( int i = 0 ; i < ( n ) ; i ++ ) { TYPE_1 . METHOD_2 ( VAR_3 [ i ] , ( i + 1 ) , VAR_1 [ i ] , ( i + 1 ) , ( ( ( n ) - i ) - 1 ) ) ; VAR_1 [ i ] [ i ] = VAR_4 [ i ] ; } return VAR_1 ; }\n"}
{"problem": "public static void METHOD_1 ( boolean [ ] [ ] VAR_1 ) { for ( boolean [ ] VAR_2 : VAR_1 ) { java.lang.System.out.print ( STRING_1 ) ; for ( boolean VAR_3 : VAR_2 ) { java.lang.System.out.print ( ( VAR_3 ? STRING_2 : STRING_3 ) ) ; } java.lang.System.out.println ( STRING_4 ) ; } }\n", "fixed": "public static void METHOD_1 ( boolean [ ] [ ] VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 [ 0 ] . length ) ; i ++ ) { java.lang.System.out.print ( STRING_1 ) ; for ( int j = 0 ; j < ( VAR_1 . length ) ; j ++ ) { java.lang.System.out.print ( ( VAR_1 [ j ] [ i ] ? STRING_2 : STRING_3 ) ) ; } java.lang.System.out.println ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 . String class ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_3 , 0 ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 , STRING_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 . String class ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_3 , 1 ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 , STRING_2 ) ; }\n"}
{"problem": "public int size ( ) { TYPE_1 VAR_1 = METHOD_1 ( ) ; java.util.List < TYPE_2 > VAR_2 = METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( VAR_1 ) ; return VAR_2 == null ? 0 : VAR_2 . size ( ) ; }\n", "fixed": "public int size ( ) { TYPE_1 VAR_1 = METHOD_1 ( ) ; java.util.List < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( VAR_1 ) ; return VAR_2 == null ? 0 : VAR_2 . size ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( METHOD_6 ( ) , METHOD_7 ( ) , ( ( METHOD_8 ( ) ) - 1 ) , ( ( METHOD_9 ( ) ) - 1 ) , VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( 0 , 0 , ( ( METHOD_8 ( ) ) - 1 ) , ( ( METHOD_9 ( ) ) - 1 ) , VAR_2 ) ; super . METHOD_1 ( VAR_1 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; try { java.lang.Object obj = VAR_1 . METHOD_2 ( new java.io.FileReader ( STRING_1 ) ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( obj ) ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } catch ( TYPE_4 VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } return VAR_2 ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 ; try { java.lang.Object obj = VAR_1 . METHOD_2 ( new java.io.FileReader ( STRING_1 ) ) ; VAR_2 = ( ( TYPE_2 ) ( obj ) ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } catch ( TYPE_4 VAR_3 ) { VAR_3 . METHOD_3 ( ) ; } return VAR_2 ; }\n"}
{"problem": "public int METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; while ( true ) { int VAR_2 = VAR_1 . METHOD_2 ( INT_1 ) ; int VAR_3 = VAR_2 / INT_2 ; int VAR_4 = VAR_2 % INT_2 ; if ( ( VAR_5 [ VAR_3 ] [ VAR_4 ] ) == ( VAR_6 ) ) return VAR_2 ; } }\n", "fixed": "public int METHOD_1 ( ) { java.util.Random VAR_1 = new java.util.Random ( ) ; while ( true ) { int VAR_2 = VAR_1 . METHOD_2 ( INT_1 ) ; if ( ( VAR_5 [ ( VAR_2 / INT_2 ) ] [ ( VAR_2 % INT_2 ) ] ) == ( VAR_6 ) ) return VAR_2 ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( METHOD_2 ( VAR_4 ) ) ) ; TYPE_4 VAR_5 = VAR_3 . METHOD_3 ( ) ; boolean VAR_6 = ( VAR_5 != null ) && ( VAR_5 . METHOD_4 ( ) ) ; int VAR_7 = VAR_2 . size ( ) ; TYPE_5 . METHOD_5 ( VAR_8 , ( STRING_1 + VAR_7 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( METHOD_2 ( VAR_4 ) ) ) ; TYPE_4 VAR_5 = VAR_3 . METHOD_3 ( ) ; boolean VAR_6 = ( VAR_5 != null ) && ( VAR_5 . METHOD_4 ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , TYPE_2 response ) { try { TYPE_3 VAR_3 = null ; if ( response != null ) { VAR_3 = new TYPE_3 ( response ) ; final java.util.ArrayList < TYPE_4 > VAR_4 = TYPE_4 . METHOD_2 ( VAR_3 ) ; VAR_5 . METHOD_3 ( ) ; for ( TYPE_4 VAR_6 : VAR_4 ) { VAR_5 . add ( VAR_6 ) ; } VAR_5 . METHOD_4 ( ) ; } } catch ( TYPE_5 VAR_7 ) { VAR_7 . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , TYPE_1 [ ] VAR_2 , TYPE_3 response ) { if ( response != null ) { final java.util.ArrayList < TYPE_4 > VAR_4 = TYPE_4 . METHOD_2 ( response ) ; VAR_5 . METHOD_3 ( ) ; for ( TYPE_4 VAR_6 : VAR_4 ) { VAR_5 . add ( VAR_6 ) ; } VAR_5 . METHOD_4 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { if ( true ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; } else { java.lang.String VAR_1 = new java.io.File ( STRING_3 ) . METHOD_4 ( ) ; VAR_1 = VAR_1 . substring ( 0 , ( ( VAR_1 . length ( ) ) - 1 ) ) ; METHOD_2 ( ( VAR_1 + STRING_4 ) ) ; METHOD_3 ( ( VAR_1 + STRING_5 ) ) ; METHOD_5 ( VAR_2 ) ; METHOD_5 ( VAR_3 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( false ) { METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; } else { java.lang.String VAR_1 = new java.io.File ( STRING_3 ) . METHOD_4 ( ) ; VAR_1 = VAR_1 . substring ( 0 , ( ( VAR_1 . length ( ) ) - 1 ) ) ; METHOD_2 ( ( VAR_1 + STRING_4 ) ) ; METHOD_3 ( ( VAR_1 + STRING_5 ) ) ; METHOD_5 ( VAR_2 ) ; METHOD_5 ( VAR_3 ) ; } }\n"}
{"problem": "public void init ( ) { VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_3 = VAR_2 . get ( STRING_2 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; VAR_5 = VAR_2 . get ( STRING_3 ) ; VAR_6 = VAR_7 . get ( STRING_4 ) ; VAR_8 = VAR_2 . get ( STRING_5 ) ; VAR_8 . METHOD_2 ( VAR_9 ) ; }\n", "fixed": "public void init ( ) { VAR_1 = VAR_2 . get ( STRING_1 ) ; VAR_3 = VAR_2 . get ( STRING_2 ) ; VAR_1 . METHOD_1 ( VAR_4 ) ; VAR_5 = VAR_2 . get ( STRING_3 ) ; VAR_6 = VAR_7 . get ( STRING_4 ) ; VAR_8 = VAR_2 . get ( STRING_5 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { TYPE_3 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . getContext ( ) ) ; android.view.View view ; switch ( VAR_2 ) { case 0 : view = VAR_3 . METHOD_3 ( VAR_4 , VAR_1 , false ) ; break ; case 1 : view = VAR_3 . METHOD_3 ( VAR_5 , VAR_1 , false ) ; break ; default : view = VAR_3 . METHOD_3 ( VAR_4 , VAR_1 , false ) ; } return new TYPE_1 ( view ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { TYPE_3 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . getContext ( ) ) ; android.view.View view ; switch ( VAR_2 ) { case 0 : view = VAR_3 . METHOD_3 ( VAR_4 , VAR_1 , false ) ; break ; case 1 : view = VAR_3 . METHOD_3 ( VAR_5 , VAR_1 , false ) ; break ; default : view = VAR_3 . METHOD_3 ( VAR_5 , VAR_1 , false ) ; break ; } return new TYPE_1 ( view , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { VAR_2 . METHOD_4 ( ) ; if ( METHOD_5 ( ) ) { java.lang.System.out.println ( STRING_1 ) ; } else java.lang.System.out.println ( STRING_2 ) ; } else { VAR_2 . METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { VAR_2 . METHOD_4 ( ) ; if ( METHOD_5 ( ) ) { java.lang.System.out.println ( STRING_1 ) ; } else java.lang.System.out.println ( STRING_2 ) ; } else { } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( ! VAR_2 ) { if ( VAR_3 . getText ( ) . toString ( ) . isEmpty ( ) ) { VAR_4 . METHOD_2 ( getString ( VAR_5 ) ) ; VAR_6 . METHOD_3 ( false ) ; } } else { VAR_4 . METHOD_4 ( false ) ; VAR_6 . METHOD_3 ( true ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 , boolean VAR_2 ) { if ( ! VAR_2 ) { if ( VAR_3 . getText ( ) . toString ( ) . isEmpty ( ) ) { VAR_4 . METHOD_2 ( getString ( VAR_5 ) ) ; VAR_6 . METHOD_3 ( false ) ; } } else { if ( ! ( VAR_3 . getText ( ) . toString ( ) . isEmpty ( ) ) ) { VAR_4 . METHOD_4 ( false ) ; VAR_6 . METHOD_3 ( true ) ; } } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { java.lang.String name = args [ 0 ] ; TYPE_1 VAR_1 = TYPE_2 . METHOD_1 ( name ) ; final int VAR_2 = INT_1 ; java.awt.Color [ ] VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_4 ) ; TYPE_1 VAR_5 = TYPE_4 . METHOD_3 ( VAR_1 , VAR_3 ) ; final java.lang.String VAR_6 = STRING_1 ; TYPE_2 . METHOD_4 ( VAR_5 , ( VAR_6 + name ) ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { java.lang.String name = args [ 0 ] ; TYPE_1 VAR_1 = TYPE_2 . METHOD_1 ( name ) ; final int VAR_2 = INT_1 ; java.awt.Color [ ] VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_5 = TYPE_4 . METHOD_3 ( VAR_1 , VAR_3 ) ; final java.lang.String VAR_6 = STRING_1 ; TYPE_2 . METHOD_4 ( VAR_5 , ( VAR_6 + name ) ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { try { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; this . METHOD_6 ( ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_1 . METHOD_7 ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { java.lang.System.out.println ( ) ; try { this . METHOD_2 ( ) ; this . METHOD_3 ( ) ; this . METHOD_4 ( ) ; this . METHOD_5 ( ) ; this . METHOD_6 ( ) ; } catch ( java.lang.Exception VAR_1 ) { VAR_1 . METHOD_7 ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 target ) { if ( TYPE_2 . METHOD_2 ( ) . equals ( this . VAR_1 ) ) { this . VAR_2 . METHOD_3 ( true ) ; } else { this . VAR_2 . METHOD_3 ( false ) ; } if ( TYPE_3 . METHOD_2 ( ) . equals ( this . VAR_1 ) ) { this . VAR_3 . METHOD_3 ( true ) ; } else { this . VAR_3 . METHOD_3 ( false ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 target ) { this . VAR_2 . METHOD_3 ( false ) ; if ( TYPE_2 . METHOD_2 ( ) . equals ( this . VAR_1 ) ) { this . VAR_2 . METHOD_3 ( true ) ; } this . VAR_3 . METHOD_3 ( false ) ; if ( TYPE_3 . METHOD_2 ( ) . equals ( this . VAR_1 ) ) { this . VAR_3 . METHOD_3 ( true ) ; } }\n"}
{"problem": "private void init ( ) { TYPE_1 . METHOD_1 ( ) . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 = new TYPE_3 ( ) ; TYPE_4 . METHOD_1 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_5 . METHOD_1 ( ) . METHOD_4 ( new TYPE_6 ( ) ) ; TYPE_7 . METHOD_1 ( ) . METHOD_5 ( ) ; METHOD_6 ( ) ; }\n", "fixed": "private void init ( ) { TYPE_1 . METHOD_1 ( ) . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 = new TYPE_3 ( ) ; TYPE_4 . METHOD_1 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_5 . METHOD_1 ( ) . METHOD_4 ( new TYPE_6 ( ) ) ; METHOD_6 ( ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { if ( ( ( VAR_1 ) & ( VAR_2 ) ) != 0 ) { return VAR_3 ; } if ( ( ( VAR_1 ) & ( VAR_4 ) ) == ( VAR_4 ) ) { return VAR_5 ; } if ( ( this . VAR_6 . METHOD_2 ( ) ) && ( ( ( this . VAR_1 ) & ( VAR_7 ) ) != 0 ) ) { return VAR_8 ; } return VAR_9 ; }\n", "fixed": "public int METHOD_1 ( ) { if ( ( ( VAR_1 ) & ( VAR_2 ) ) != 0 ) { return VAR_3 ; } if ( ( ( VAR_1 ) & ( VAR_4 ) ) == ( VAR_4 ) ) { return VAR_5 ; } if ( this . VAR_6 . METHOD_2 ( ) ) { return VAR_8 ; } return VAR_9 ; }\n"}
{"problem": "private java.lang.Object [ ] METHOD_1 ( java.lang.String text ) throws java.io.IOException { VAR_1 = true ; if ( ( VAR_2 ) != null ) { VAR_3 . METHOD_2 ( text , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } else { return new java.lang.Object [ ] { false , STRING_1 } ; } return new java.lang.Object [ ] { true } ; }\n", "fixed": "private java.lang.Object [ ] METHOD_1 ( java.lang.String text ) throws java.io.IOException { if ( ( VAR_2 ) != null ) { VAR_1 = true ; VAR_3 . METHOD_2 ( text , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } else { return new java.lang.Object [ ] { false , STRING_1 } ; } return new java.lang.Object [ ] { true } ; }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { VAR_4 = true ; TYPE_3 VAR_5 = VAR_2 . METHOD_2 ( ) ; switch ( VAR_1 ) { case VAR_6 : case VAR_7 : case VAR_8 : VAR_5 = VAR_5 . METHOD_2 ( ) ; break ; default : break ; } return METHOD_1 ( VAR_1 , VAR_2 , VAR_5 , VAR_3 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { VAR_4 = true ; TYPE_3 VAR_5 = VAR_2 . METHOD_2 ( ) ; switch ( VAR_1 ) { case VAR_6 : case VAR_7 : case VAR_8 : VAR_5 = VAR_5 . METHOD_2 ( ) ; break ; default : break ; } METHOD_1 ( VAR_1 , VAR_2 , VAR_5 , VAR_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.Object VAR_1 = STRING_2 ; java.lang.Object [ ] values = new java.lang.Object [ ] { STRING_3 , STRING_4 } ; TYPE_1 VAR_2 = VAR_3 ; VAR_2 . METHOD_2 ( VAR_1 , values ) ; java.util.ArrayList VAR_4 = new java.util.ArrayList ( ) ; VAR_4 . add ( STRING_3 ) ; VAR_4 . add ( STRING_4 ) ; assertEquals ( VAR_4 , VAR_2 . METHOD_3 ( 0 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_2 ; java.lang.Object [ ] values = new java.lang.Object [ ] { STRING_3 , STRING_4 } ; VAR_3 . METHOD_2 ( VAR_1 , values ) ; java.util.ArrayList VAR_4 = new java.util.ArrayList ( ) ; VAR_4 . add ( STRING_3 ) ; VAR_4 . add ( STRING_4 ) ; assertEquals ( VAR_4 , VAR_3 . METHOD_3 ( STRING_2 ) ) ; }\n"}
{"problem": "protected void METHOD_1 ( java.io.File VAR_1 ) { try { java.lang.String VAR_2 = new java.lang.String ( TYPE_1 . METHOD_2 ( TYPE_2 . get ( VAR_1 . METHOD_3 ( ) ) ) , VAR_3 ) ; TYPE_3 VAR_4 = VAR_5 . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( VAR_4 , true ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_8 . error ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) , VAR_7 ) ; } }\n", "fixed": "protected void METHOD_1 ( java.io.File VAR_1 ) { try { java.lang.String VAR_2 = new java.lang.String ( TYPE_1 . METHOD_2 ( TYPE_2 . get ( VAR_1 . METHOD_3 ( ) ) ) , VAR_3 ) ; TYPE_3 VAR_4 = VAR_5 . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( VAR_4 ) ; } catch ( java.lang.Exception VAR_7 ) { VAR_8 . error ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) , VAR_7 ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { java.lang.System.out.println ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_4 ) ; TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_5 ( VAR_2 , VAR_2 ) ; TYPE_3 VAR_6 = new TYPE_3 ( VAR_5 , VAR_7 ) ; VAR_3 = VAR_6 . METHOD_6 ( VAR_1 , VAR_3 ) ; java.lang.System.out.println ( VAR_3 . METHOD_2 ( ) ) ; return VAR_3 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , double VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ( ( int ) ( ( VAR_1 . METHOD_3 ( ) ) * VAR_2 ) ) , ( ( int ) ( ( VAR_1 . METHOD_4 ( ) ) * VAR_2 ) ) , VAR_4 ) ; TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_5 ( VAR_2 , VAR_2 ) ; TYPE_3 VAR_6 = new TYPE_3 ( VAR_5 , VAR_7 ) ; VAR_3 = VAR_6 . METHOD_6 ( VAR_1 , VAR_3 ) ; return VAR_3 ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( final int VAR_1 ) { return query ( ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 . x ( ) . METHOD_4 ( 0 ) . METHOD_5 ( VAR_3 . y ( ) . METHOD_4 ( 0 ) ) ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) ) . METHOD_9 ( VAR_1 ) . list ( VAR_2 ) ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( final int VAR_1 ) { final TYPE_2 < java.lang.Double > x = VAR_3 . x ( ) ; return query ( ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( x . METHOD_4 ( 0.0 ) . METHOD_5 ( VAR_3 . y ( ) . METHOD_4 ( 0.0 ) ) ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) ) . METHOD_9 ( VAR_1 ) . list ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 ) { if ( ( VAR_2 ) != null ) { VAR_2 . getClass ( ) . METHOD_2 ( VAR_1 ) ; throw new TYPE_2 ( ( ( ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + STRING_3 ) + ( VAR_2 . getClass ( ) . METHOD_3 ( ) ) ) + STRING_4 ) ) ; } this . VAR_1 = VAR_1 ; }\n", "fixed": "public void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 ) { if ( ( VAR_2 ) != null ) { if ( ! ( VAR_2 . getClass ( ) . METHOD_2 ( VAR_1 ) ) ) { throw new TYPE_2 ( ( ( ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + STRING_3 ) + ( VAR_2 . getClass ( ) . METHOD_3 ( ) ) ) + STRING_4 ) ) ; } } this . VAR_1 = VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . getType ( ) ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_8 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_9 ( ) ) ; ( VAR_4 ) ++ ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . getType ( ) ) ; VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_8 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_9 ( ) ) ; ( VAR_4 ) ++ ; }\n"}
{"problem": "public int METHOD_1 ( ) { int VAR_1 = VAR_2 ; try { for ( java.lang.Integer id : VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( ( STRING_1 + id ) ) ; if ( VAR_4 . METHOD_3 ( ) ) { VAR_1 += java.lang.Integer . METHOD_4 ( VAR_1 , VAR_4 . getInt ( STRING_2 ) ) ; } } } catch ( java.lang.Exception VAR_5 ) { java.lang.System.out.println ( STRING_3 ) ; } if ( VAR_1 == ( VAR_2 ) ) return VAR_6 ; return VAR_1 ; }\n", "fixed": "public int METHOD_1 ( ) { int VAR_1 = VAR_2 ; try { for ( java.lang.Integer id : VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( ( STRING_1 + id ) ) ; if ( VAR_4 . METHOD_3 ( ) ) { VAR_1 += java.lang.Integer . METHOD_4 ( VAR_1 , VAR_4 . getInt ( STRING_2 ) ) ; } } } catch ( java.lang.Exception VAR_5 ) { java.lang.System.out.println ( STRING_3 ) ; } return VAR_1 ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = METHOD_2 ( ( ( ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_1 . METHOD_4 ( ) ) ) + STRING_3 ) ) ; if ( VAR_2 ) ( VAR_3 ) ++ ; return VAR_2 ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = METHOD_2 ( ( ( ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_1 . METHOD_4 ( ) ) ) + STRING_3 ) ) ; ( VAR_3 ) ++ ; return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 . add ( VAR_1 ) ; VAR_4 = VAR_1 ; } else { VAR_3 . add ( VAR_1 ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_3 . contains ( VAR_1 ) ) ) { if ( ( VAR_2 . METHOD_2 ( ) ) == null ) { VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_3 . add ( VAR_1 ) ; VAR_4 = VAR_1 ; } else { VAR_3 . add ( VAR_1 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) throws TYPE_2 { java.lang.System.out.println ( event ) ; TYPE_3 VAR_1 = TYPE_4 . getContext ( ) . METHOD_2 ( ) ; java.lang.String id = VAR_1 . getName ( ) ; if ( ! ( id . equals ( STRING_1 ) ) ) { TYPE_5 VAR_2 = VAR_3 . METHOD_3 ( java.lang.Long.parseLong ( id ) ) ; event . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( event ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) throws TYPE_2 { TYPE_3 VAR_1 = TYPE_4 . getContext ( ) . METHOD_2 ( ) ; java.lang.String id = VAR_1 . getName ( ) ; if ( ! ( id . equals ( STRING_1 ) ) ) { TYPE_5 VAR_2 = VAR_3 . METHOD_3 ( java.lang.Long.parseLong ( id ) ) ; event . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( event ) ; java.lang.System.out.println ( event ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( VAR_3 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_4 , VAR_5 , STRING_4 , STRING_5 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_6 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_7 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( VAR_3 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_4 , VAR_5 , STRING_4 , STRING_5 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_6 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ; TYPE_4 VAR_3 = new TYPE_4 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; VAR_2 . METHOD_8 ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; java.lang.System.err.println ( VAR_1 . toString ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ; TYPE_4 VAR_3 = new TYPE_4 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; VAR_2 . METHOD_8 ( ) ; java.lang.System.err.println ( VAR_2 . METHOD_3 ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; try ( TYPE_1 VAR_2 = VAR_3 . open ( ) ) { this . id = ( ( int ) ( VAR_2 . METHOD_2 ( VAR_1 , true ) . METHOD_3 ( STRING_2 , this . VAR_4 ) . METHOD_3 ( STRING_3 , this . VAR_5 ) . METHOD_3 ( STRING_4 , this . VAR_6 ) . METHOD_3 ( STRING_5 , this . VAR_7 ) . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; try ( TYPE_1 VAR_2 = VAR_3 . open ( ) ) { this . id = ( ( int ) ( VAR_2 . METHOD_2 ( VAR_1 , true ) . METHOD_3 ( STRING_2 , this . VAR_4 ) . METHOD_3 ( STRING_3 , this . VAR_5 ) . METHOD_3 ( STRING_4 , this . VAR_6 ) . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } }\n"}
{"problem": "private double METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { double VAR_5 = ( VAR_1 - VAR_4 ) * ( VAR_1 - VAR_3 ) ; VAR_5 += ( VAR_2 - VAR_4 ) * ( VAR_2 - VAR_4 ) ; VAR_5 = TYPE_1 . METHOD_2 ( VAR_5 ) ; return VAR_5 ; }\n", "fixed": "private double METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { double VAR_5 = ( VAR_1 - VAR_3 ) * ( VAR_1 - VAR_3 ) ; VAR_5 += ( VAR_2 - VAR_4 ) * ( VAR_2 - VAR_4 ) ; VAR_5 = TYPE_1 . METHOD_2 ( VAR_5 ) ; return VAR_5 ; }\n"}
{"problem": "public double METHOD_1 ( ) { double VAR_1 = 1.0 ; final int VAR_2 = VAR_3 . METHOD_2 ( ) ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { VAR_1 = ( VAR_4 . METHOD_3 ( i ) ) - ( VAR_3 . METHOD_3 ( i ) ) ; } return VAR_1 ; }\n", "fixed": "public double METHOD_1 ( ) { double VAR_1 = 1.0 ; final int VAR_2 = VAR_3 . METHOD_2 ( ) ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { VAR_1 *= ( VAR_4 . METHOD_3 ( i ) ) - ( VAR_3 . METHOD_3 ( i ) ) ; } return VAR_1 ; }\n"}
{"problem": "private java.util.Collection < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { final java.util.Collection < TYPE_1 > VAR_1 = new java.util.Vector < TYPE_1 > ( ) ; final TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , METHOD_6 ( ) ) ; while ( VAR_2 . METHOD_7 ( ) ) { VAR_1 . add ( new TYPE_1 ( TYPE_4 . METHOD_8 ( VAR_3 , VAR_2 . METHOD_9 ( ) ) ) ) ; } return VAR_1 ; }\n", "fixed": "public java.util.Collection < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { final java.util.Collection < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; final TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , METHOD_6 ( ) ) ; while ( VAR_2 . METHOD_7 ( ) ) { VAR_1 . add ( new TYPE_1 ( TYPE_4 . METHOD_8 ( VAR_3 , VAR_2 . METHOD_9 ( ) ) ) ) ; } return VAR_1 ; }\n"}
{"problem": "protected java.util.ArrayList < java.util.ArrayList < java.lang.String > > METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . put ( STRING_1 , VAR_1 ) ; VAR_3 . METHOD_2 ( ( ( java.lang.Object ) ( VAR_2 ) ) ) ; while ( ( VAR_4 ) == false ) { java.lang.System.out.print ( STRING_2 ) ; } java.util.ArrayList < java.util.ArrayList < java.lang.String > > VAR_5 = ( ( java.util.ArrayList < java.util.ArrayList < java.lang.String > > ) ( VAR_2 . get ( STRING_3 ) ) ) ; VAR_2 . remove ( STRING_3 ) ; VAR_2 . remove ( STRING_1 ) ; return VAR_5 ; }\n", "fixed": "protected java.util.ArrayList < java.util.ArrayList < java.lang.String > > METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . put ( STRING_1 , VAR_1 ) ; VAR_3 . METHOD_2 ( ( ( java.lang.Object ) ( VAR_2 ) ) ) ; while ( ( VAR_4 ) == false ) { java.lang.System.out.print ( STRING_2 ) ; } VAR_4 = false ; java.util.ArrayList < java.util.ArrayList < java.lang.String > > VAR_5 = ( ( java.util.ArrayList < java.util.ArrayList < java.lang.String > > ) ( VAR_2 . get ( STRING_3 ) ) ) ; VAR_2 . remove ( STRING_3 ) ; return VAR_5 ; }\n"}
{"problem": "private void METHOD_1 ( ) { int VAR_1 = VAR_2 [ VAR_3 ] ; int VAR_4 = VAR_2 [ ( ( VAR_3 ) + ( VAR_5 ) ) ] ; VAR_6 = ( values . METHOD_2 ( VAR_1 , ( VAR_4 - VAR_1 ) ) ) + ( ( ( VAR_7 ) + ( VAR_8 ) ) * ( ( long ) ( this . VAR_5 ) ) ) ; }\n", "fixed": "private long METHOD_1 ( ) { int VAR_1 = VAR_2 [ VAR_3 ] ; int VAR_4 = VAR_2 [ ( ( VAR_3 ) + ( VAR_5 ) ) ] ; return ( values . METHOD_2 ( VAR_1 , ( VAR_4 - VAR_1 ) ) ) + ( ( ( VAR_7 ) + ( VAR_8 ) ) * ( ( long ) ( this . VAR_5 ) ) ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( VAR_3 . METHOD_2 ( ) ) { TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_2 , ( ( int ) ( VAR_6 ) ) , ( ( int ) ( VAR_7 ) ) , ( ( int ) ( VAR_8 ) ) ) ; } return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_2 , ( ( int ) ( VAR_6 ) ) , ( ( int ) ( VAR_7 ) ) , ( ( int ) ( VAR_8 ) ) ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ! ( TYPE_2 . isEmpty ( VAR_1 ) ) ) { TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 ) ; } TYPE_3 . METHOD_3 ( VAR_4 , VAR_5 ) ; TYPE_3 . METHOD_3 ( VAR_6 , VAR_7 ) ; TYPE_3 . METHOD_3 ( VAR_8 , VAR_9 ) ; TYPE_3 . METHOD_3 ( VAR_10 , VAR_11 ) ; TYPE_1 . METHOD_4 ( VAR_12 ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ! ( TYPE_2 . isEmpty ( VAR_1 ) ) ) { TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 ) ; } TYPE_3 . METHOD_3 ( VAR_4 , VAR_5 ) ; TYPE_3 . METHOD_3 ( VAR_6 , VAR_7 ) ; TYPE_3 . METHOD_3 ( VAR_8 , VAR_9 ) ; TYPE_3 . METHOD_3 ( VAR_10 , VAR_11 ) ; TYPE_1 . METHOD_4 ( VAR_2 ) ; }\n"}
{"problem": "public boolean METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; if ( ( ( VAR_1 . METHOD_3 ( ) ) || ( VAR_1 == ( VAR_2 ) ) ) || ( VAR_1 == ( VAR_3 ) ) ) { return false ; } else if ( ( this . METHOD_4 ( ) . METHOD_5 ( ) ) == 0 ) { return false ; } return true ; }\n", "fixed": "public boolean METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; if ( ( ( VAR_1 . METHOD_3 ( ) ) || ( VAR_1 == ( VAR_2 ) ) ) || ( VAR_1 == ( VAR_3 ) ) ) { return false ; } return ( this . METHOD_4 ( ) . METHOD_5 ( ) ) > 0 ; }\n"}
{"problem": "private static java.util.List < TYPE_1 > METHOD_1 ( final android.content.Context context ) { final java.lang.String VAR_1 = context . METHOD_2 ( ) ; final java.util.List < TYPE_1 > result = new java.util.LinkedList < TYPE_1 > ( ) ; for ( final TYPE_1 x : context . METHOD_3 ( ) . METHOD_4 ( new < TYPE_2 > android.content.Intent ( ) , VAR_2 ) ) { if ( VAR_1 . equals ( VAR_3 ) ) { result . add ( x ) ; } } return result ; }\n", "fixed": "private static java.util.List < TYPE_1 > METHOD_1 ( final android.content.Context context ) { final java.lang.String VAR_1 = context . METHOD_2 ( ) ; final java.util.List < TYPE_1 > result = new java.util.LinkedList < TYPE_1 > ( ) ; for ( final TYPE_1 x : context . METHOD_3 ( ) . METHOD_4 ( new < TYPE_2 > android.content.Intent ( ) , 0 ) ) { if ( VAR_1 . equals ( VAR_3 ) ) { result . add ( x ) ; } } return result ; }\n"}
{"problem": "private void METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( ) . getText ( ) . toString ( ) ; java.lang.String VAR_2 = METHOD_3 ( ) . getText ( ) . toString ( ) ; boolean VAR_3 = METHOD_4 ( VAR_2 ) ; TYPE_1 VAR_4 = VAR_5 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( VAR_2 , VAR_1 ) ; VAR_4 . METHOD_7 ( ) ; if ( VAR_3 ) { METHOD_8 ( VAR_2 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( ) . getText ( ) . toString ( ) ; java.lang.String VAR_2 = METHOD_3 ( ) . getText ( ) . toString ( ) ; boolean VAR_3 = METHOD_4 ( VAR_2 ) ; TYPE_1 VAR_4 = VAR_5 . METHOD_5 ( ) ; VAR_4 . METHOD_6 ( VAR_2 , VAR_1 ) ; VAR_4 . METHOD_7 ( ) ; if ( VAR_3 ) { return ; } METHOD_8 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 f = VAR_1 . getClass ( ) . METHOD_2 ( STRING_1 ) ; f . METHOD_3 ( true ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( f . get ( VAR_1 ) ) ) ; TYPE_3 . assertEquals ( INT_1 , VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; VAR_1 . METHOD_1 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 f = VAR_1 . getClass ( ) . METHOD_2 ( STRING_1 ) ; f . METHOD_3 ( true ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( f . get ( VAR_1 ) ) ) ; TYPE_3 . assertEquals ( INT_1 , ( ( int ) ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ) ; VAR_1 . METHOD_1 ( ) ; }\n"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( java.lang.String VAR_2 : VAR_3 . split ( STRING_1 ) ) { for ( java.lang.String VAR_4 : VAR_2 . split ( VAR_5 ) ) { add ( VAR_4 ) ; } } if ( ( VAR_6 ) && ( TYPE_1 . METHOD_3 ( VAR_7 ) ) ) { add ( ( STRING_2 + ( VAR_7 ) ) ) ; } return VAR_1 ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( java.lang.String VAR_2 : VAR_3 . split ( STRING_1 ) ) { for ( java.lang.String VAR_4 : VAR_2 . split ( VAR_5 ) ) { if ( TYPE_1 . METHOD_3 ( VAR_4 ) ) { add ( VAR_4 ) ; } } } if ( ( VAR_6 ) && ( TYPE_1 . METHOD_3 ( VAR_7 ) ) ) { add ( ( STRING_2 + ( VAR_7 ) ) ) ; } return VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( ) { byte [ ] VAR_1 = new byte [ VAR_2 ] ; for ( int i = 0 ; i < ( VAR_2 ) ; i ++ ) { VAR_1 [ i ] = ( ( byte ) ( VAR_3 . get ( i ) . type ) ) ; } TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_1 ) , VAR_4 , true ) ; }\n", "fixed": "private void METHOD_1 ( ) { byte [ ] VAR_1 = new byte [ VAR_2 ] ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { VAR_1 [ i ] = ( ( byte ) ( VAR_3 . get ( i ) . type ) ) ; } TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_1 ) , VAR_4 , true ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ) { if ( METHOD_4 ( ) ) { TYPE_1 VAR_1 = VAR_2 . METHOD_5 ( VAR_3 ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_6 ( STRING_1 ) ; state = VAR_4 ; } else { METHOD_7 ( ) ; } } else { METHOD_7 ( ) ; } } }\n", "fixed": "private void METHOD_1 ( ) { if ( METHOD_4 ( ) ) { TYPE_1 VAR_1 = VAR_2 . METHOD_5 ( VAR_3 ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_6 ( STRING_1 ) ; state = VAR_4 ; } else { METHOD_7 ( ) ; } } else { METHOD_7 ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { for ( TYPE_1 VAR_2 : new java.util.ArrayList < TYPE_1 > ( VAR_1 . values ( ) ) ) { if ( ( ! ( VAR_2 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( ) ) ) { VAR_2 . update ( ) ; } } } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { for ( TYPE_1 VAR_2 : new java.util.ArrayList < TYPE_1 > ( VAR_1 . values ( ) ) ) { if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . update ( ) ; } } } }\n"}
{"problem": "private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( 0 , 0 , TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } else { VAR_3 . METHOD_6 ( ) ; METHOD_7 ( ( ( VAR_4 ) | ( VAR_5 ) ) ) ; VAR_2 . METHOD_3 ( 0 , 0 , VAR_6 . METHOD_8 ( ) , VAR_6 . height ( ) ) ; VAR_7 . METHOD_9 ( ) ; VAR_1 . METHOD_10 ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_7 . METHOD_9 ( ) ; VAR_2 . METHOD_3 ( 0 , 0 , TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } else { VAR_3 . METHOD_6 ( ) ; METHOD_7 ( ( ( VAR_4 ) | ( VAR_5 ) ) ) ; VAR_2 . METHOD_3 ( 0 , 0 , VAR_6 . METHOD_8 ( ) , VAR_6 . height ( ) ) ; VAR_1 . METHOD_10 ( ) ; } }\n"}
{"problem": "public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( TYPE_3 . METHOD_3 ( VAR_1 ) . getBoolean ( VAR_3 , false ) ) ) || ( TYPE_3 . METHOD_3 ( VAR_1 ) . getBoolean ( VAR_4 , false ) ) ; }\n", "fixed": "public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( ( \"true\" . equals ( \"true\" ) ) || ( ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) ) == ( VAR_2 ) ) ) || ( TYPE_3 . METHOD_3 ( VAR_1 ) . getBoolean ( VAR_3 , false ) ) ) || ( TYPE_3 . METHOD_3 ( VAR_1 ) . getBoolean ( VAR_4 , false ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 view , java.lang.Integer VAR_1 ) { if ( ( view . METHOD_2 ( ) ) == 0 ) { throw new TYPE_2 ( STRING_1 ) ; } TYPE_3 VAR_2 = ( ( TYPE_3 ) ( view . METHOD_3 ( 0 ) ) ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 view , int VAR_1 ) { if ( ( view . METHOD_2 ( ) ) == 0 ) { throw new TYPE_2 ( STRING_1 ) ; } TYPE_3 VAR_2 = ( ( TYPE_3 ) ( view . METHOD_3 ( 0 ) ) ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; }\n"}
{"problem": "public static java.lang.Object METHOD_1 ( java.lang.Class VAR_1 , TYPE_1 VAR_2 , java.util.Map < java.lang.String , java.lang.String > VAR_3 , TYPE_2 VAR_4 ) { VAR_2 . METHOD_2 ( new TYPE_3 ( ) ) . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_3 ) ) ; return VAR_2 . build ( ) . METHOD_5 ( VAR_1 ) ; }\n", "fixed": "public static java.lang.Object METHOD_1 ( java.lang.Class VAR_1 , TYPE_1 VAR_2 , java.util.Map < java.lang.String , java.lang.String > VAR_3 ) { VAR_2 . METHOD_2 ( new TYPE_3 ( ) ) . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_3 ) ) ; return VAR_2 . build ( ) . METHOD_5 ( VAR_1 ) ; }\n"}
{"problem": "public synchronized void METHOD_1 ( java.lang.Integer VAR_1 , java.lang.String line ) { if ( line == null ) { return ; } for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == VAR_1 ) { VAR_2 . METHOD_3 ( line ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; break ; } } }\n", "fixed": "public synchronized void METHOD_1 ( java.lang.Integer VAR_1 , java.lang.String line ) { if ( line == null ) { return ; } for ( TYPE_1 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) == VAR_1 ) { VAR_2 . METHOD_3 ( line ) ; VAR_4 . METHOD_4 ( VAR_2 , true ) ; break ; } } }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_4 ) ; VAR_1 . METHOD_2 ( STRING_3 , VAR_5 ) ; VAR_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; VAR_1 . METHOD_2 ( STRING_6 , VAR_3 ) ; VAR_1 . METHOD_2 ( STRING_7 , STRING_8 ) ; return ; }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_4 ) ; VAR_1 . METHOD_2 ( STRING_4 , STRING_5 ) ; VAR_1 . METHOD_2 ( STRING_6 , VAR_3 ) ; VAR_1 . METHOD_2 ( STRING_7 , STRING_8 ) ; return ; }\n"}
{"problem": "protected void METHOD_1 ( final TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 ) ; final java.lang.String VAR_2 = ( VAR_1 . METHOD_3 ( STRING_1 ) ) ? VAR_1 . get ( STRING_1 ) . METHOD_4 ( ) : null ; if ( ( ( VAR_2 != null ) && ( ( VAR_3 ) != null ) ) && ( ! ( VAR_3 . equals ( VAR_2 ) ) ) ) { throw new TYPE_2 ( STRING_2 , VAR_2 ) ; } }\n", "fixed": "void METHOD_1 ( final TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( ( this . VAR_3 ) == null ) { return ; } final java.lang.String VAR_2 = ( VAR_1 . METHOD_3 ( STRING_1 ) ) ? VAR_1 . get ( STRING_1 ) . METHOD_4 ( ) : null ; if ( ( VAR_2 == null ) || ( ! ( VAR_3 . equals ( VAR_2 ) ) ) ) { throw new TYPE_2 ( STRING_2 , VAR_2 ) ; } }\n"}
{"problem": "public TYPE_1 < android.view.View > METHOD_1 ( java.lang.Integer i ) { android.view.View view = VAR_1 . METHOD_2 ( i ) ; if ( view instanceof TYPE_2 ) { TYPE_1 < android.view.View > VAR_2 = METHOD_3 ( view ) ; return TYPE_1 . METHOD_4 ( new android.view.View [ ] { } ) . METHOD_5 ( VAR_2 ) ; } else { return TYPE_1 . METHOD_6 ( view ) ; } }\n", "fixed": "public TYPE_1 < android.view.View > METHOD_1 ( java.lang.Integer i ) { android.view.View view = VAR_1 . METHOD_2 ( i ) ; if ( view instanceof TYPE_2 ) { TYPE_1 < android.view.View > VAR_2 = METHOD_3 ( view ) ; return TYPE_1 . METHOD_6 ( view ) . METHOD_5 ( VAR_2 ) ; } else { return TYPE_1 . METHOD_6 ( view ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; context . METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( ) ) ; assertEquals ( VAR_1 , VAR_3 . METHOD_4 ( ) ) ; assertEquals ( VAR_1 , context . METHOD_5 ( ) ) ; assertEquals ( VAR_1 , VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; context . METHOD_2 ( VAR_1 ) ; assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( ) ) ; assertEquals ( VAR_1 , VAR_3 . METHOD_4 ( ) ) ; assertEquals ( VAR_1 , context . METHOD_5 ( ) ) ; }\n"}
{"problem": "public synchronized void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 ( ) { public void METHOD_3 ( ) { if ( ( -- ( VAR_2 ) ) == 0 ) { TYPE_2 . METHOD_4 ( VAR_3 , STRING_1 ) ; if ( VAR_4 ) { VAR_4 = false ; METHOD_5 ( false ) ; } } else { TYPE_2 . METHOD_4 ( VAR_3 , STRING_2 ) ; } } } , INT_1 ) ; }\n", "fixed": "public synchronized void METHOD_1 ( ) { if ( ( -- ( VAR_2 ) ) == 0 ) { TYPE_2 . METHOD_4 ( VAR_3 , STRING_1 ) ; if ( VAR_4 ) { VAR_4 = false ; METHOD_5 ( false ) ; } } else { TYPE_2 . METHOD_4 ( VAR_3 , STRING_2 ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path , java.io.InputStream VAR_2 , java.lang.Long VAR_3 , java.lang.Integer VAR_4 , java.lang.Integer target ) { try { TYPE_2 VAR_5 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( target == null ) target = TYPE_4 . METHOD_3 ( path , VAR_6 ) ; return TYPE_5 . METHOD_4 ( VAR_5 . nodes , VAR_4 ) . METHOD_1 ( VAR_1 , path , VAR_2 , VAR_3 , VAR_4 , target ) ; } catch ( TYPE_6 | TYPE_7 VAR_7 ) { throw TYPE_6 . METHOD_5 ( VAR_7 ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String path , java.io.InputStream VAR_2 , java.lang.Long VAR_3 , java.lang.Integer VAR_4 , java.lang.Integer target ) { try { TYPE_2 VAR_5 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( target == null ) target = TYPE_4 . METHOD_3 ( path , null , VAR_6 ) ; return TYPE_5 . METHOD_4 ( VAR_5 . nodes , VAR_4 ) . METHOD_1 ( VAR_1 , path , VAR_2 , VAR_3 , VAR_4 , target ) ; } catch ( TYPE_6 | TYPE_7 VAR_7 ) { throw TYPE_6 . METHOD_5 ( VAR_7 ) ; } }\n"}
{"problem": "public int METHOD_1 ( int n ) { if ( n == 1 ) { return INT_1 ; } java.util.List < java.lang.Integer > results = METHOD_2 ( n ) ; int result = 0 ; int size = results . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { int tmp = ( size - i ) - 1 ; result += ( results . get ( i ) ) * ( java.lang.Math.pow ( INT_2 , tmp ) ) ; } return result ; }\n", "fixed": "public int METHOD_1 ( int n ) { int result = 0 ; for ( int i = 1 ; i != 0 ; i <<= 1 ) { result <<= 1 ; if ( ( n & 1 ) > 0 ) { result |= 1 ; } n >>= 1 ; } return result ; }\n"}
{"problem": "public java.lang.Boolean delete ( java.lang.String fileName ) { try { java.lang.String path = ( ( VAR_1 ) + ( VAR_2 ) ) + fileName ; boolean VAR_3 = new java.io.File ( path ) . delete ( ) ; if ( ! VAR_3 ) { VAR_4 . error ( STRING_1 , fileName ) ; throw new TYPE_1 ( STRING_2 ) ; } return true ; } catch ( java.lang.Exception VAR_5 ) { VAR_4 . error ( STRING_3 , fileName , TYPE_2 . METHOD_1 ( VAR_5 ) ) ; throw new TYPE_1 ( STRING_2 ) ; } }\n", "fixed": "public java.lang.Boolean delete ( java.lang.String fileName ) { try { boolean VAR_3 = new java.io.File ( fileName ) . delete ( ) ; if ( ! VAR_3 ) { VAR_4 . error ( STRING_1 , fileName ) ; throw new TYPE_1 ( STRING_2 ) ; } return true ; } catch ( java.lang.Exception VAR_5 ) { VAR_4 . error ( STRING_3 , fileName , TYPE_2 . METHOD_1 ( VAR_5 ) ) ; throw new TYPE_1 ( STRING_2 ) ; } }\n"}
{"problem": "public static java.util.Properties METHOD_1 ( java.lang.String VAR_1 ) { java.util.Properties VAR_2 = new java.util.Properties ( ) ; java.io.InputStream VAR_3 = VAR_4 class . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; if ( VAR_3 == null ) { TYPE_1 . error ( STRING_1 , VAR_1 ) ; return VAR_2 ; } try { VAR_2 . METHOD_4 ( VAR_3 ) ; TYPE_1 . METHOD_5 ( STRING_2 , VAR_2 . toString ( ) ) ; } catch ( java.io.IOException VAR_5 ) { TYPE_1 . error ( STRING_3 , VAR_1 ) ; } return VAR_2 ; }\n", "fixed": "public static java.util.Properties METHOD_1 ( java.lang.String VAR_1 ) { java.util.Properties VAR_2 = new java.util.Properties ( ) ; try ( java.io.InputStream VAR_3 = VAR_4 class . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) { if ( VAR_3 == null ) { TYPE_1 . error ( STRING_1 , VAR_1 ) ; return VAR_2 ; } VAR_2 . METHOD_4 ( VAR_3 ) ; TYPE_1 . METHOD_5 ( STRING_2 , VAR_2 . toString ( ) ) ; } catch ( java.io.IOException VAR_5 ) { TYPE_1 . error ( STRING_3 , VAR_1 ) ; } return VAR_2 ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { VAR_1 = STRING_1 ; } METHOD_2 ( ( ( ( STRING_2 + ( TYPE_1 . METHOD_3 ( ) ) ) + STRING_3 ) + VAR_1 ) ) ; if ( ( VAR_1 . length ( ) ) == 0 ) { return \"0\" ; } else { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; return VAR_2 . toString ( INT_1 ) ; } }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { VAR_1 = STRING_1 ; } if ( ( VAR_1 . length ( ) ) == 0 ) { return \"0\" ; } else { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; return VAR_2 . toString ( INT_1 ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 ; TYPE_3 VAR_4 ; VAR_4 = new TYPE_3 ( ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_6 = ( ( TYPE_4 ) ( METHOD_3 ( VAR_7 ) ) ) ; VAR_8 = ( ( TYPE_5 ) ( METHOD_3 ( VAR_9 ) ) ) ; METHOD_5 ( ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_5 ) ) ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_6 = ( ( TYPE_4 ) ( METHOD_3 ( VAR_7 ) ) ) ; VAR_8 = ( ( TYPE_5 ) ( METHOD_3 ( VAR_9 ) ) ) ; METHOD_5 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( java.io.File file , TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; try { java.lang.String VAR_3 = file . METHOD_4 ( ) ; if ( VAR_4 . METHOD_5 ( VAR_3 ) ) { VAR_4 . remove ( VAR_3 ) ; } } catch ( java.io.IOException VAR_5 ) { } finally { VAR_2 . METHOD_2 ( ) . METHOD_6 ( ) ; } super . METHOD_1 ( file , VAR_1 ) ; }\n", "fixed": "public void METHOD_1 ( java.io.File file , TYPE_1 VAR_1 ) { try { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; java.lang.String VAR_3 = file . METHOD_4 ( ) ; if ( VAR_4 . METHOD_5 ( VAR_3 ) ) { VAR_4 . remove ( VAR_3 ) ; } } catch ( java.io.IOException VAR_5 ) { } finally { VAR_2 . METHOD_2 ( ) . METHOD_6 ( ) ; } super . METHOD_1 ( file , VAR_1 ) ; }\n"}
{"problem": "public double METHOD_1 ( ) { java.util.Collection < TYPE_1 > VAR_1 = VAR_2 . values ( ) ; if ( VAR_1 . isEmpty ( ) ) return 0 ; double result = 0 ; for ( long VAR_3 : VAR_4 ) { TYPE_1 VAR_5 = VAR_2 . get ( VAR_3 ) ; TYPE_1 VAR_6 = METHOD_2 ( VAR_5 , INT_1 ) ; result += VAR_5 . METHOD_3 ( VAR_6 ) ; } return result / ( VAR_4 . size ( ) ) ; }\n", "fixed": "public double METHOD_1 ( ) { if ( VAR_4 . isEmpty ( ) ) return 0 ; double result = 0 ; for ( long VAR_3 : VAR_4 ) { TYPE_1 VAR_5 = VAR_2 . get ( VAR_3 ) ; TYPE_1 VAR_6 = METHOD_2 ( VAR_5 , INT_1 ) ; result += VAR_5 . METHOD_3 ( VAR_6 ) ; } return result / ( VAR_4 . size ( ) ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , java.io.IOException { TYPE_3 < TYPE_4 > response = this . VAR_2 . METHOD_1 ( this . METHOD_2 ( ) , this . key , VAR_1 ) ; TYPE_4 VAR_3 = response . METHOD_3 ( ) ; VAR_4 = VAR_3 . keys ( ) ; return VAR_4 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 , java.io.IOException { TYPE_3 < TYPE_4 > response = this . VAR_2 . METHOD_1 ( this . METHOD_2 ( ) , this . name ( ) , VAR_1 ) ; TYPE_4 VAR_3 = response . METHOD_3 ( ) ; VAR_4 = VAR_3 . keys ( ) ; return VAR_4 ; }\n"}
{"problem": "public void end ( TYPE_1 status , java.lang.Long start ) { java.lang.Long time = ( TYPE_2 . METHOD_1 ( ) ) - start ; switch ( status ) { case VAR_1 : TYPE_3 . add ( time ) ; break ; case VAR_2 : if ( ( TYPE_3 . size ( ) ) == ( TYPE_4 . size ( ) ) ) { TYPE_3 . add ( time ) ; } TYPE_4 . add ( time ) ; break ; } }\n", "fixed": "public void end ( TYPE_1 status , java.lang.Long start ) { java.lang.Long time = ( TYPE_2 . METHOD_1 ( ) ) - start ; switch ( status ) { case VAR_1 : TYPE_3 . add ( time ) ; break ; case VAR_2 : TYPE_4 . add ( time ) ; break ; } }\n"}
{"problem": "public void METHOD_1 ( int id , TYPE_1 file ) { if ( ! ( METHOD_2 ( ) ) ) return ; if ( id == ( VAR_1 ) ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( file , true , false , false ) ; TYPE_2 . start ( METHOD_5 ( ) ) ; } else { VAR_2 . METHOD_6 ( file ) ; TYPE_2 . start ( METHOD_5 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( int id , TYPE_1 file ) { if ( id == ( VAR_1 ) ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( file , true , false , false ) ; TYPE_2 . start ( METHOD_5 ( ) ) ; } else { VAR_2 . METHOD_6 ( file ) ; TYPE_2 . start ( METHOD_5 ( ) ) ; } }\n"}
{"problem": "public TYPE_1 update ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . getId ( ) ) ; if ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 . METHOD_2 ( ) ) ) { java.lang.String VAR_4 = java.lang.String.format ( STRING_1 , VAR_1 . getId ( ) ) ; throw new TYPE_2 ( VAR_4 ) ; } VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; return VAR_3 . update ( VAR_2 ) ; }\n", "fixed": "public TYPE_1 update ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . getId ( ) ) ; if ( ! ( VAR_1 . METHOD_2 ( ) . equals ( VAR_2 . METHOD_2 ( ) ) ) ) { java.lang.String VAR_4 = java.lang.String.format ( STRING_1 , VAR_1 . getId ( ) ) ; throw new TYPE_2 ( VAR_4 ) ; } VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; return VAR_3 . update ( VAR_2 ) ; }\n"}
{"problem": "public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 , VAR_2 , STRING_1 ) ; METHOD_4 ( VAR_3 , VAR_2 , STRING_2 ) ; METHOD_5 ( VAR_3 , VAR_4 , STRING_3 ) ; METHOD_4 ( VAR_3 , VAR_2 , STRING_4 ) ; METHOD_5 ( VAR_3 , VAR_5 , STRING_3 ) ; }\n", "fixed": "public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 , VAR_2 , STRING_1 ) ; METHOD_4 ( VAR_3 , VAR_2 , STRING_2 ) ; METHOD_4 ( VAR_3 , VAR_2 , STRING_4 ) ; METHOD_5 ( VAR_3 , VAR_5 , STRING_3 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } android.widget.Button VAR_2 = ( ( android.widget.Button ) ( METHOD_3 ( VAR_3 ) ) ) ; if ( VAR_2 != null ) { VAR_2 . setText ( STRING_1 ) ; VAR_4 . METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( VAR_5 , VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . setText ( STRING_1 ) ; VAR_4 . METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( VAR_5 , VAR_4 ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String label , int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( label ) ; TYPE_2 . init ( VAR_2 , true ) ; VAR_2 . METHOD_2 ( new java.awt.Font ( VAR_3 , VAR_4 , VAR_1 ) ) ; VAR_2 . METHOD_3 ( new TYPE_3 ( 0 , 0 , 0 , 0 ) ) ; VAR_2 . METHOD_4 ( false ) ; return VAR_2 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String label , int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( label ) ; TYPE_2 . init ( VAR_2 , true , true ) ; VAR_2 . METHOD_2 ( new java.awt.Font ( VAR_3 , VAR_4 , VAR_1 ) ) ; VAR_2 . METHOD_3 ( new TYPE_3 ( 0 , 0 , 0 , 0 ) ) ; VAR_2 . METHOD_4 ( false ) ; return VAR_2 ; }\n"}
{"problem": "public TYPE_1 getColor ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; java.lang.System.out.println ( VAR_1 ) ; switch ( VAR_1 ) { case STRING_1 : VAR_2 = VAR_3 ; break ; case STRING_2 : VAR_2 = VAR_4 ; break ; case STRING_3 : VAR_2 = VAR_5 ; break ; case STRING_4 : VAR_2 = VAR_6 ; break ; } return VAR_2 ; }\n", "fixed": "public TYPE_1 getColor ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; switch ( VAR_1 ) { case STRING_1 : VAR_2 = VAR_3 ; break ; case STRING_2 : VAR_2 = VAR_4 ; break ; case STRING_3 : VAR_2 = VAR_5 ; break ; case STRING_4 : VAR_2 = VAR_6 ; break ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( java.util.List list ) { int size = VAR_1 . size ( ) ; for ( java.lang.Object VAR_2 : list ) { VAR_1 . add ( ( ( TYPE_1 ) ( VAR_2 ) ) ) ; } VAR_3 . METHOD_2 ( ) ; if ( ( ( VAR_1 . size ( ) ) - size ) == INT_1 ) { ( VAR_4 ) ++ ; } }\n", "fixed": "public void METHOD_1 ( java.util.List list ) { int size = VAR_1 . size ( ) ; for ( java.lang.Object VAR_2 : list ) { VAR_1 . add ( ( ( TYPE_1 ) ( VAR_2 ) ) ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( ) ; } if ( ( ( VAR_1 . size ( ) ) - size ) == INT_1 ) { ( VAR_4 ) ++ ; } }\n"}
{"problem": "public boolean METHOD_1 ( ) { for ( int i = 0 ; i < ( this . VAR_1 ) ; i ++ ) { final TYPE_1 VAR_2 = this . parameters [ i ] . METHOD_2 ( ) ; if ( ( VAR_2 . METHOD_3 ( ) ) || ( VAR_2 . METHOD_4 ( ) ) ) { return true ; } } return false ; }\n", "fixed": "public boolean METHOD_1 ( ) { for ( int i = 0 ; i < ( this . VAR_1 ) ; i ++ ) { final TYPE_1 VAR_2 = this . parameters [ i ] . getType ( ) ; if ( ( VAR_2 . METHOD_3 ( ) ) || ( VAR_2 . METHOD_4 ( ) ) ) { return true ; } } return false ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( TYPE_1 state , java.lang.String VAR_1 ) throws TYPE_2 { java.lang.String VAR_2 ; if ( state . equals ( VAR_3 ) ) { VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , INT_1 ) ; } if ( state . equals ( VAR_4 ) ) { VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , ( - INT_1 ) ) ; } else { VAR_2 = VAR_1 ; } return VAR_2 ; }\n", "fixed": "private java.lang.String METHOD_1 ( TYPE_1 state , java.lang.String VAR_1 ) throws TYPE_2 { java.lang.String VAR_2 ; if ( state . equals ( VAR_3 ) ) { VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , INT_1 ) ; } else { if ( state . equals ( VAR_4 ) ) { VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , ( - INT_1 ) ) ; } else { VAR_2 = VAR_1 ; } } return VAR_2 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { int VAR_1 = METHOD_2 ( METHOD_3 ( ) ) ; int VAR_2 = METHOD_4 ( METHOD_3 ( ) ) ; boolean VAR_3 = ( METHOD_5 ( ) . METHOD_6 ( VAR_1 , VAR_2 ) ) > 0 ; boolean VAR_4 = ! ( METHOD_5 ( ) . METHOD_7 ( VAR_1 , VAR_2 ) ) ; TYPE_1 state = new TYPE_1 ( VAR_3 , VAR_4 ) ; return state ; }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { int VAR_1 = METHOD_2 ( METHOD_3 ( ) ) ; int VAR_2 = METHOD_4 ( METHOD_3 ( ) ) ; boolean VAR_3 = ( METHOD_5 ( ) . METHOD_6 ( VAR_1 , VAR_2 ) ) > 0 ; boolean VAR_4 = ! ( METHOD_5 ( ) . METHOD_7 ( VAR_1 , VAR_2 ) ) ; TYPE_1 state = new TYPE_1 ( VAR_4 , VAR_3 ) ; return state ; }\n"}
{"problem": "public java.lang.String toString ( ) { if ( ( this . VAR_1 ) > 0 ) return ( ( ( ( ( STRING_1 + ( this . VAR_2 ) ) + STRING_2 ) + ( this . VAR_3 ) ) + STRING_3 ) + ( this . VAR_1 ) ) + STRING_4 ; else return ( ( STRING_1 + ( this . VAR_2 ) ) + STRING_2 ) + ( this . VAR_3 ) ; }\n", "fixed": "public java.lang.String toString ( ) { if ( ( this . VAR_1 ) < 0 ) return ( ( ( ( ( STRING_1 + ( this . VAR_2 ) ) + STRING_2 ) + ( this . VAR_3 ) ) + STRING_3 ) + ( this . VAR_1 ) ) + STRING_4 ; else return ( ( STRING_1 + ( this . VAR_2 ) ) + STRING_2 ) + ( this . VAR_3 ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 [ ] status ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = null ; VAR_3 = null ; VAR_4 = false ; VAR_5 = null ; VAR_6 = false ; VAR_7 = status ; if ( ( VAR_8 ) != ( VAR_9 ) ) { TYPE_3 . METHOD_3 ( VAR_10 ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 [ ] status ) { TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ; VAR_2 = null ; VAR_3 = null ; VAR_5 = null ; VAR_6 = false ; VAR_7 = status ; if ( VAR_4 ) { VAR_4 = false ; TYPE_3 . METHOD_3 ( VAR_10 ) ; } VAR_4 = false ; }\n"}
{"problem": "public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ! ( VAR_2 ) ) { int size = VAR_3 . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { TYPE_1 VAR_4 = ( ( TYPE_1 ) ( VAR_3 . get ( i ) ) ) ; if ( ! ( VAR_4 . METHOD_2 ( ) ) ) VAR_4 . METHOD_3 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( final boolean VAR_1 ) { VAR_2 = VAR_1 ; if ( ! ( VAR_2 ) ) { final int size = VAR_3 . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { final TYPE_1 VAR_4 = VAR_3 . get ( i ) ; if ( ! ( VAR_4 . METHOD_2 ( ) ) ) { VAR_4 . METHOD_3 ( ) ; } } } }\n"}
{"problem": "public static java.lang.String METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) { ( VAR_2 ) ++ ; java.lang.String VAR_3 = java.lang.String.format ( STRING_1 , VAR_2 ) ; while ( VAR_4 . contains ( VAR_3 ) ) { ( VAR_2 ) ++ ; } VAR_4 . add ( VAR_3 ) ; return VAR_3 ; } else return java.lang.String.format ( STRING_1 , java.lang.Integer.parseInt ( VAR_1 . METHOD_2 ( ) ) ) ; }\n", "fixed": "public static java.lang.String METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) { ( VAR_2 ) ++ ; java.lang.String VAR_3 = java.lang.String.format ( STRING_1 , VAR_2 ) ; while ( VAR_4 . contains ( VAR_3 ) ) { ( VAR_2 ) ++ ; VAR_3 = java.lang.String.format ( STRING_1 , VAR_2 ) ; } VAR_4 . add ( VAR_3 ) ; return VAR_3 ; } else return java.lang.String.format ( STRING_1 , java.lang.Integer.parseInt ( VAR_1 . METHOD_2 ( ) ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : VAR_2 . METHOD_3 ( ) ; break ; case VAR_3 : METHOD_4 ( ) ; break ; case VAR_4 : METHOD_5 ( VAR_5 ) ; VAR_2 = null ; java.lang.System.exit ( 0 ) ; break ; } return super . METHOD_1 ( item ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_3 : METHOD_4 ( ) ; break ; case VAR_4 : METHOD_5 ( VAR_5 ) ; VAR_2 = null ; java.lang.System.exit ( 0 ) ; break ; } return super . METHOD_1 ( item ) ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String id , java.lang.Integer VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( VAR_3 , new TYPE_4 ( id ) ) ; VAR_2 . put ( VAR_4 , VAR_1 ) ; TYPE_3 query = new TYPE_3 ( VAR_3 , VAR_2 ) ; TYPE_3 VAR_5 = VAR_6 . METHOD_2 ( TYPE_5 . METHOD_3 ( query ) ) . first ( ) ; if ( VAR_5 == null ) { return null ; } return new TYPE_6 ( VAR_5 ) ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String id , java.lang.Integer VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( VAR_3 , new TYPE_4 ( id ) ) ; VAR_2 . put ( VAR_4 , VAR_1 ) ; TYPE_3 VAR_5 = VAR_6 . METHOD_2 ( TYPE_5 . METHOD_3 ( VAR_3 , VAR_2 ) ) . first ( ) ; if ( VAR_5 == null ) { return null ; } return new TYPE_6 ( VAR_5 ) ; }\n"}
{"problem": "public long METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , 0 ) ; long VAR_3 = VAR_1 . METHOD_3 ( VAR_4 , VAR_5 ) ; if ( VAR_3 == 0 ) { VAR_3 = TYPE_2 . METHOD_4 ( VAR_6 . METHOD_5 ( ) , VAR_5 ) ; } return VAR_3 ; }\n", "fixed": "public long METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , 0 ) ; long VAR_3 = VAR_1 . METHOD_3 ( VAR_4 , VAR_5 ) ; if ( VAR_3 == 0 ) { if ( ( VAR_6 ) == null ) { VAR_3 = VAR_5 ; } else { VAR_3 = TYPE_2 . METHOD_4 ( VAR_6 . METHOD_5 ( ) , VAR_5 ) ; } } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.util.ArrayList < TYPE_1 > VAR_3 = this . METHOD_2 ( ) ; TYPE_1 VAR_4 = new TYPE_1 ( name , VAR_1 , VAR_2 ) ; VAR_3 . add ( VAR_4 ) ; this . METHOD_3 ( VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String name , java.lang.String VAR_2 , java.lang.String VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_3 = this . METHOD_2 ( ) ; TYPE_1 VAR_4 = new TYPE_1 ( name , VAR_1 , VAR_2 ) ; VAR_3 . add ( VAR_4 ) ; this . METHOD_3 ( VAR_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_1 = 0 ; ( VAR_2 ) ++ ; int a = ( VAR_2 ) % ( this . VAR_3 [ VAR_4 ] ) ; if ( ( ( VAR_2 ) % ( ( this . VAR_3 [ VAR_4 ] ) / ( this . VAR_3 [ VAR_5 ] ) ) ) == 0 ) { this . METHOD_2 ( VAR_6 , VAR_7 ) ; ( this . VAR_3 [ VAR_5 ] ) -- ; VAR_1 = 0 ; } } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_1 = 0 ; ( VAR_2 ) ++ ; if ( ( ( VAR_2 ) % ( ( this . VAR_3 [ VAR_4 ] ) / ( this . VAR_3 [ VAR_5 ] ) ) ) == 0 ) { this . METHOD_2 ( VAR_6 , VAR_7 ) ; ( this . VAR_3 [ VAR_5 ] ) -- ; VAR_1 = 0 ; } } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 result = VAR_1 . METHOD_2 ( INT_1 , STRING_1 , true ) ; result . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( result ) ; result = VAR_1 . METHOD_2 ( INT_1 , STRING_1 , true ) ; TYPE_3 . assertEquals ( STRING_3 , STRING_2 , result . METHOD_5 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 result = VAR_1 . METHOD_2 ( INT_1 , STRING_1 , true ) ; result . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( result ) ; result = VAR_1 . METHOD_2 ( INT_1 , STRING_1 , true ) ; assertEquals ( STRING_3 , STRING_2 , result . METHOD_5 ( ) ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( ) { TYPE_2 response = TYPE_3 . METHOD_2 ( ) ; TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) ; VAR_1 . put ( STRING_1 , VAR_2 ) ; VAR_1 . put ( STRING_2 , VAR_3 ) ; VAR_1 . put ( STRING_3 , TYPE_4 . METHOD_3 ( ) ) ; response . put ( STRING_4 , STRING_5 ) ; response . put ( STRING_6 , VAR_1 ) ; return METHOD_4 ( response ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( ) { TYPE_2 response = TYPE_3 . METHOD_2 ( ) ; TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) ; VAR_1 . put ( STRING_1 , VAR_2 ) ; VAR_1 . put ( STRING_2 , VAR_3 ) ; VAR_1 . set ( STRING_3 , TYPE_4 . METHOD_3 ( ) ) ; response . put ( STRING_4 , STRING_5 ) ; response . set ( STRING_6 , VAR_1 ) ; return METHOD_4 ( response ) ; }\n"}
{"problem": "public void remove ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; try { TYPE_2 VAR_4 = TYPE_3 . get ( TYPE_4 . METHOD_2 ( STRING_1 ) , STRING_2 , VAR_2 . METHOD_3 ( ) ) ; TYPE_5 . delete ( VAR_4 ) ; } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_6 = VAR_3 . METHOD_6 ( ) ; }\n", "fixed": "public void remove ( long VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; try { if ( ( VAR_2 . METHOD_3 ( ) ) != null ) { TYPE_2 VAR_4 = TYPE_3 . get ( TYPE_4 . METHOD_2 ( STRING_1 ) , STRING_2 , VAR_2 . METHOD_3 ( ) ) ; TYPE_5 . delete ( VAR_4 ) ; } } catch ( java.io.IOException VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_6 = VAR_3 . METHOD_6 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 p ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( ( ( VAR_1 ) - ( VAR_2 ) ) > ( VAR_3 ) ) { METHOD_3 ( ) ; if ( ! ( VAR_4 . METHOD_4 ( ) ) ) VAR_4 . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 p ) { VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( ( ( VAR_1 ) - ( VAR_2 ) ) > ( VAR_3 ) ) { METHOD_3 ( p ) ; if ( ! ( VAR_4 . METHOD_4 ( ) ) ) VAR_4 . METHOD_5 ( ) ; } }\n"}
{"problem": "private boolean METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( this . VAR_2 . length ) ; i ++ ) { if ( ( VAR_3 [ i ] ) && ( this . VAR_2 [ i ] ) ) { return true ; } } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( this . VAR_2 . length ) ; i ++ ) { if ( VAR_3 [ i ] ) { if ( ! ( this . VAR_2 [ i ] ) ) return false ; } } return true ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 += VAR_3 . get ( 1 ) . get ( VAR_4 ) ; METHOD_2 ( 1 ) ; METHOD_3 ( ) ; if ( METHOD_4 ( ) ) { METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; VAR_5 . METHOD_7 ( true ) ; VAR_6 = false ; if ( METHOD_8 ( ) ) { METHOD_9 ( VAR_1 ) ; VAR_1 . METHOD_10 ( ) ; } else { METHOD_11 ( ) ; } } else { METHOD_12 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_3 . get ( 1 ) . get ( VAR_4 ) ) ; METHOD_3 ( ) ; if ( METHOD_4 ( ) ) { METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; VAR_5 . METHOD_7 ( true ) ; VAR_6 = false ; if ( METHOD_8 ( ) ) { METHOD_9 ( VAR_1 ) ; VAR_1 . METHOD_10 ( ) ; } else { METHOD_11 ( ) ; } } else { METHOD_12 ( ) ; } }\n"}
{"problem": "private static TYPE_1 METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_2 > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( STRING_1 , new TYPE_2 ( STRING_1 , STRING_2 , STRING_3 , true , false ) ) ; VAR_1 . put ( STRING_4 , new TYPE_2 ( STRING_4 , STRING_2 , STRING_3 , true , false ) ) ; return new TYPE_1 ( VAR_2 , STRING_5 , STRING_2 , VAR_3 class . getName ( ) , STRING_6 , VAR_1 ) ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_2 > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( STRING_1 , new TYPE_2 ( STRING_1 , STRING_2 , STRING_3 , true , true ) ) ; VAR_1 . put ( STRING_4 , new TYPE_2 ( STRING_4 , STRING_2 , STRING_3 , true , true ) ) ; return new TYPE_1 ( VAR_2 , STRING_5 , STRING_2 , VAR_3 class . getName ( ) , STRING_6 , VAR_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) { return ; } if ( ! ( TYPE_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ) ) { return ; } VAR_1 . METHOD_2 ( ) . METHOD_6 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) . METHOD_7 ( VAR_3 . METHOD_8 ( VAR_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) { return ; } if ( ! ( TYPE_1 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ) ) { return ; } VAR_1 . METHOD_2 ( ) . METHOD_6 ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) . METHOD_7 ( VAR_2 . METHOD_8 ( VAR_4 ) ) ; }\n"}
{"problem": "public static java.util.ArrayList < TYPE_1 > METHOD_1 ( byte [ ] VAR_1 , int VAR_2 ) throws TYPE_2 { try { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_3 ) ; return ( ( java.util.ArrayList < TYPE_1 > ) ( VAR_4 . METHOD_2 ( ) ) ) ; } catch ( java.lang.ClassNotFoundException | java.io.IOException VAR_5 ) { throw new TYPE_2 ( STRING_1 ) ; } }\n", "fixed": "public static java.util.ArrayList < TYPE_1 > METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_2 { try { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_3 ) ; return ( ( java.util.ArrayList < TYPE_1 > ) ( VAR_4 . METHOD_2 ( ) ) ) ; } catch ( java.lang.ClassNotFoundException | java.io.IOException VAR_5 ) { throw new TYPE_2 ( STRING_1 ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 type , java.lang.String VAR_1 ) { if ( ( TYPE_2 . getType ( ) ) != type ) { errors . add ( ( ( ( ( ( ( ( ( ( STRING_1 + ( TYPE_2 . METHOD_2 ( ) ) ) + STRING_2 ) + ( TYPE_2 . METHOD_3 ( ) ) ) + STRING_3 ) + VAR_1 ) + STRING_4 ) + STRING_5 ) + ( TYPE_2 . getString ( ) ) ) + STRING_5 ) ) ; } METHOD_4 ( ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 type , java.lang.String VAR_1 ) { if ( ( TYPE_2 . getType ( ) ) != type ) { errors . add ( ( ( ( ( ( ( ( ( STRING_1 + ( TYPE_2 . METHOD_2 ( ) ) ) + STRING_2 ) + ( TYPE_2 . METHOD_3 ( ) ) ) + STRING_3 ) + VAR_1 ) + STRING_4 ) + ( TYPE_2 . getString ( ) ) ) + STRING_5 ) ) ; } METHOD_4 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 , java.lang.String VAR_3 , java.util.List < java.lang.String > VAR_4 ) { TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , name , VAR_2 , VAR_3 , VAR_4 ) ; VAR_6 . METHOD_2 ( STRING_1 ) . METHOD_2 ( VAR_1 ) . setValue ( VAR_5 ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , name , VAR_2 , VAR_3 ) ; VAR_6 . METHOD_2 ( STRING_1 ) . METHOD_2 ( VAR_1 ) . setValue ( VAR_5 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { VAR_1 . add ( new TYPE_1 ( VAR_2 ) ) ; } for ( TYPE_1 VAR_3 : VAR_1 ) { java.util.Random VAR_4 = new java.util.Random ( ) ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_4 . METHOD_4 ( ) ) * INT_2 ) ) ; VAR_3 . METHOD_2 ( ) . METHOD_5 ( ( ( VAR_4 . METHOD_4 ( ) ) * INT_3 ) ) ; VAR_3 . METHOD_6 ( this ) ; } }\n", "fixed": "private void METHOD_1 ( ) { for ( int i = 0 ; i < 1 ; i ++ ) { VAR_1 . add ( new TYPE_1 ( VAR_2 ) ) ; } for ( TYPE_1 VAR_3 : VAR_1 ) { java.util.Random VAR_4 = new java.util.Random ( ) ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_4 . METHOD_4 ( ) ) * INT_2 ) ) ; VAR_3 . METHOD_2 ( ) . METHOD_5 ( ( ( VAR_4 . METHOD_4 ( ) ) * INT_3 ) ) ; VAR_3 . METHOD_6 ( this ) ; } }\n"}
{"problem": "public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 , TYPE_3 , TYPE_4 { TYPE_5 . METHOD_2 ( VAR_1 ) ; synchronized ( VAR_4 ) { if ( VAR_5 . METHOD_1 ( VAR_2 , VAR_3 ) ) { TYPE_5 . METHOD_3 ( VAR_2 , ( - 1 ) , ( STRING_1 + VAR_3 ) ) ; return true ; } else { return false ; } } }\n", "fixed": "public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 , TYPE_3 , TYPE_4 { TYPE_5 . METHOD_2 ( VAR_1 ) ; synchronized ( VAR_4 ) { if ( VAR_5 . METHOD_1 ( VAR_2 , VAR_3 ) ) { TYPE_5 . METHOD_3 ( VAR_2 , 1 , ( STRING_1 + VAR_3 ) ) ; return true ; } else { return false ; } } }\n"}
{"problem": "protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = new TYPE_1 ( this ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( true ) ; VAR_3 . METHOD_6 ( false ) ; VAR_3 . show ( ) ; if ( null == VAR_1 ) { METHOD_1 ( VAR_1 ) ; return ; } TYPE_2 . METHOD_7 ( ) . METHOD_8 ( VAR_1 , this ) ; }\n", "fixed": "protected void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_3 = new TYPE_1 ( this ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( true ) ; VAR_3 . METHOD_6 ( false ) ; VAR_3 . show ( ) ; if ( null == VAR_1 ) { return ; } TYPE_2 . METHOD_7 ( ) . METHOD_8 ( VAR_1 , this ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { long VAR_3 = ( VAR_1 == null ) ? VAR_4 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; long VAR_5 = ( VAR_2 == null ) ? VAR_4 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; synchronized ( VAR_6 ) { return VAR_7 . METHOD_4 ( VAR_8 , VAR_3 , VAR_5 ) ; } }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { long VAR_3 = ( VAR_1 == null ) ? VAR_4 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; long VAR_5 = ( VAR_2 == null ) ? VAR_4 : VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; synchronized ( VAR_6 ) { return VAR_7 . METHOD_4 ( VAR_8 , VAR_3 , VAR_5 ) ; } }\n"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . getContext ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; TYPE_2 VAR_3 = VAR_4 . METHOD_4 ( VAR_2 . getId ( ) ) ; if ( ! ( VAR_2 instanceof TYPE_2 ) ) { TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_5 ( new TYPE_4 ( ) ) ; VAR_1 . METHOD_6 ( STRING_1 , VAR_5 ) ; } else { VAR_1 . METHOD_6 ( STRING_1 , VAR_3 ) ; } return STRING_2 ; }\n", "fixed": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Object VAR_2 = TYPE_3 . getContext ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; if ( ! ( VAR_2 instanceof TYPE_2 ) ) { TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_5 ( new TYPE_4 ( ) ) ; VAR_1 . METHOD_6 ( STRING_1 , VAR_5 ) ; } else { TYPE_2 VAR_3 = VAR_4 . METHOD_4 ( ( ( TYPE_2 ) ( VAR_2 ) ) . getId ( ) ) ; VAR_1 . METHOD_6 ( STRING_1 , VAR_3 ) ; } return STRING_2 ; }\n"}
{"problem": "public final TYPE_1 METHOD_1 ( ) { final int num = ( TYPE_2 . values ( ) . length ) - 1 ; java.util.Random VAR_1 = new java.util.Random ( ) ; int VAR_2 = VAR_1 . METHOD_2 ( num ) ; TYPE_1 VAR_3 = VAR_4 ; VAR_3 = TYPE_1 . values ( ) [ VAR_2 ] ; return VAR_3 ; }\n", "fixed": "public final TYPE_1 METHOD_1 ( ) { final int num = ( TYPE_1 . values ( ) . length ) - 1 ; java.util.Random VAR_1 = new java.util.Random ( ) ; int VAR_2 = VAR_1 . METHOD_2 ( num ) ; TYPE_1 VAR_3 = VAR_4 ; VAR_3 = TYPE_1 . values ( ) [ VAR_2 ] ; return VAR_3 ; }\n"}
{"problem": "protected void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } TYPE_1 VAR_2 = VAR_1 ; do { VAR_2 . METHOD_2 ( ) ; if ( ( VAR_2 . METHOD_3 ( ) ) > ( VAR_3 ) ) { VAR_2 = METHOD_4 ( VAR_1 ) ; } VAR_2 = VAR_2 . METHOD_5 ( ) ; } while ( VAR_2 != null ) ; }\n", "fixed": "protected void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return ; } TYPE_1 VAR_2 = VAR_1 ; do { if ( ( VAR_2 . METHOD_3 ( ) ) > ( VAR_3 ) ) { VAR_2 = METHOD_4 ( VAR_1 ) ; } VAR_2 = VAR_2 . METHOD_5 ( ) ; } while ( VAR_2 != null ) ; }\n"}
{"problem": "private static void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 , java.lang.String name , TYPE_2 VAR_2 , int VAR_3 , int min , int VAR_4 , TYPE_3 type , TYPE_4 ... VAR_5 ) { TYPE_5 . METHOD_1 ( VAR_1 , name , VAR_2 , true ) ; VAR_6 . METHOD_2 ( STRING_1 , ( STRING_2 + VAR_3 ) ) ; TYPE_6 . METHOD_3 ( VAR_1 , VAR_3 , min , VAR_4 , type , VAR_5 ) ; }\n", "fixed": "private static void METHOD_1 ( java.lang.Class < ? extends TYPE_1 > VAR_1 , java.lang.String name , TYPE_2 VAR_2 , int VAR_3 , int min , int VAR_4 , TYPE_3 type , TYPE_4 ... VAR_5 ) { TYPE_5 . METHOD_1 ( VAR_1 , name , VAR_2 , true ) ; TYPE_6 . METHOD_3 ( VAR_1 , VAR_3 , min , VAR_4 , type , VAR_5 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = java.util.Calendar.getInstance ( VAR_2 ) ; final int VAR_3 = ( VAR_4 ) - ( VAR_5 ) ; for ( int i = 0 ; i < VAR_3 ; i ++ ) { VAR_1 . set ( VAR_6 , ( ( VAR_5 ) + i ) ) ; VAR_7 . add ( i , TYPE_1 . METHOD_2 ( VAR_1 , VAR_8 ) ) ; } VAR_9 . METHOD_3 ( VAR_7 ) ; VAR_9 . METHOD_4 ( VAR_10 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = java.util.Calendar.getInstance ( VAR_2 ) ; final int VAR_3 = ( VAR_4 ) - ( VAR_5 ) ; for ( int i = 0 ; i < VAR_3 ; i ++ ) { VAR_1 . set ( VAR_6 , ( ( VAR_5 ) + i ) ) ; VAR_7 . add ( i , TYPE_1 . METHOD_2 ( VAR_1 , VAR_8 ) ) ; } VAR_9 . METHOD_3 ( VAR_7 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( ( VAR_3 ) != null ) && ( ( VAR_4 ) != null ) ) { java.util.List < TYPE_3 > VAR_5 = ( ( TYPE_4 ) ( VAR_3 ) ) . METHOD_2 ( ) ; if ( ( VAR_4 . getType ( ) ) != ( VAR_5 . get ( 0 ) . getType ( ) ) ) { METHOD_3 ( VAR_1 , STRING_1 , TYPE_5 . METHOD_4 ( VAR_3 ) , TYPE_5 . METHOD_4 ( VAR_4 ) ) ; } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( ( VAR_3 ) != null ) && ( ( VAR_4 ) != null ) ) { java.util.List < TYPE_3 > VAR_5 = ( ( TYPE_4 ) ( VAR_3 ) ) . METHOD_2 ( ) ; if ( ( VAR_4 . getType ( ) ) != ( VAR_5 . get ( 0 ) . getType ( ) ) ) { METHOD_3 ( VAR_1 , STRING_1 , METHOD_4 ( VAR_3 ) , METHOD_4 ( VAR_4 ) ) ; } } }\n"}
{"problem": "public void execute ( ) throws TYPE_1 , TYPE_2 { try { java.lang.String VAR_1 = TYPE_3 . METHOD_1 ( STRING_1 ) ; VAR_1 = ( TYPE_4 . METHOD_2 ( VAR_1 ) ) ? VAR_2 . METHOD_3 ( VAR_3 ) : VAR_1 ; while ( TYPE_4 . METHOD_2 ( VAR_1 ) ) { VAR_1 = VAR_2 . METHOD_3 ( VAR_3 ) ; } METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_1 ) ) ; METHOD_4 ( TYPE_5 . METHOD_6 ( ) ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_7 ( ) ; } }\n", "fixed": "public void execute ( ) throws TYPE_1 , TYPE_2 { try { java.lang.String VAR_1 = TYPE_3 . METHOD_1 ( STRING_1 ) ; VAR_1 = ( TYPE_4 . METHOD_2 ( VAR_1 ) ) ? VAR_2 . METHOD_3 ( VAR_3 ) : VAR_1 ; while ( TYPE_4 . METHOD_2 ( VAR_1 ) ) { VAR_1 = VAR_2 . METHOD_3 ( VAR_3 ) ; } METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_1 ) ) ; METHOD_4 ( TYPE_5 . METHOD_6 ( VAR_1 ) ) ; } catch ( java.lang.Exception VAR_4 ) { VAR_4 . METHOD_7 ( ) ; } }\n"}
{"problem": "public java.lang.String getValue ( java.lang.String key ) { VAR_1 = this . METHOD_1 ( ) ; TYPE_1 c = VAR_1 . query ( VAR_2 , null , STRING_1 , new java.lang.String [ ] { key } , null , null , null , null ) ; if ( c . METHOD_2 ( ) ) { return c . getString ( c . METHOD_3 ( STRING_2 ) ) ; } else { return null ; } }\n", "fixed": "public java.lang.String getValue ( java.lang.String key ) { java.lang.String value = null ; VAR_1 = this . METHOD_1 ( ) ; TYPE_1 c = VAR_1 . query ( VAR_2 , null , STRING_1 , new java.lang.String [ ] { key } , null , null , null , null ) ; if ( c . METHOD_2 ( ) ) value = c . getString ( c . METHOD_3 ( STRING_2 ) ) ; return value ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( this ) ; if ( ! ( VAR_3 . METHOD_5 ( ) ) ) { VAR_4 = METHOD_6 ( VAR_5 , VAR_6 ) ; METHOD_7 ( ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( this ) ; VAR_4 = METHOD_6 ( VAR_5 , VAR_6 ) ; if ( ! ( VAR_3 . METHOD_5 ( ) ) ) { METHOD_7 ( ) ; } }\n"}
{"problem": "private int METHOD_1 ( java.lang.String [ ] VAR_1 , java.lang.String [ ] VAR_2 , int VAR_3 ) { int result = 0 ; while ( result < VAR_3 ) { if ( ! ( VAR_1 [ result ] . equals ( VAR_2 [ result ] ) ) ) { return VAR_3 ; } result ++ ; } return result ; }\n", "fixed": "static int METHOD_1 ( java.lang.String [ ] VAR_1 , java.lang.String [ ] VAR_2 , int VAR_3 ) { int result = 0 ; while ( result < VAR_3 ) { if ( ! ( VAR_1 [ result ] . equals ( VAR_2 [ result ] ) ) ) { break ; } result ++ ; } return result ; }\n"}
{"problem": "private void METHOD_1 ( final boolean VAR_1 ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 . get ( VAR_3 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_6 , VAR_4 , VAR_5 . get ( VAR_6 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_7 , VAR_4 , VAR_5 . get ( VAR_7 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_8 , VAR_4 , VAR_5 . get ( VAR_8 ) ) ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 . get ( VAR_3 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_6 , VAR_4 , VAR_5 . get ( VAR_6 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_7 , VAR_4 , VAR_5 . get ( VAR_7 ) ) ) ; VAR_2 . add ( new TYPE_1 ( VAR_8 , VAR_4 , VAR_5 . get ( VAR_8 ) ) ) ; }\n"}
{"problem": "private boolean METHOD_1 ( ) { TYPE_1 VAR_1 ; VAR_1 = VAR_2 ; if ( METHOD_2 ( ) ) { VAR_2 = VAR_1 ; if ( METHOD_3 ( ) ) { VAR_2 = VAR_1 ; if ( METHOD_4 ( ) ) { VAR_2 = VAR_1 ; if ( METHOD_5 ( ) ) { return true ; } } } } return false ; }\n", "fixed": "private boolean METHOD_1 ( ) { TYPE_1 VAR_1 ; VAR_1 = VAR_2 ; if ( METHOD_2 ( ) ) { VAR_2 = VAR_1 ; if ( METHOD_3 ( ) ) { VAR_2 = VAR_1 ; if ( METHOD_4 ( ) ) { VAR_2 = VAR_1 ; if ( METHOD_5 ( ) ) return true ; } } } return false ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } else { TYPE_1 VAR_2 = TYPE_1 . METHOD_5 ( ( ( TYPE_2 ) ( this ) ) , false , null ) ; if ( VAR_2 != null ) VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } TYPE_1 . METHOD_6 ( null ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) ; } else { TYPE_1 VAR_2 = TYPE_1 . METHOD_5 ( this , false , null ) ; if ( VAR_2 != null ) VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } TYPE_1 . METHOD_6 ( null ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String filename , boolean VAR_2 ) { METHOD_2 ( ( ( ( ( ( METHOD_3 ( VAR_2 ) ) + ( METHOD_4 ( VAR_2 ) ) ) + ( METHOD_5 ( VAR_1 , true ) ) ) + ( METHOD_6 ( ) ) ) + ( METHOD_7 ( ) ) ) , filename , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String filename , boolean VAR_2 ) { METHOD_2 ( ( ( ( ( ( METHOD_3 ( VAR_2 ) ) + ( METHOD_4 ( VAR_2 ) ) ) + ( METHOD_5 ( VAR_1 , VAR_2 ) ) ) + ( METHOD_6 ( ) ) ) + ( METHOD_7 ( ) ) ) , filename , false ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Throwable { class TYPE_1 { TYPE_2 METHOD_2 ( ) { return new TYPE_3 ( ) ; } } METHOD_3 ( VAR_1 class , STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_5 ( VAR_4 ) . METHOD_2 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Throwable { class TYPE_1 { TYPE_2 METHOD_2 ( ) { return new TYPE_3 ( ) ; } } METHOD_3 ( VAR_1 class , STRING_1 ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_2 . METHOD_4 ( VAR_3 ) ) ) ; TYPE_4 . METHOD_5 ( VAR_4 ) . METHOD_2 ( ) ; }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 query = VAR_3 . METHOD_2 ( STRING_1 ) ; query . METHOD_3 ( VAR_4 , VAR_1 ) ; query . METHOD_3 ( STRING_2 , VAR_2 ) ; java.util.List < TYPE_3 > VAR_5 = query . METHOD_4 ( ) ; return ( VAR_5 . isEmpty ( ) ) == false ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 query = VAR_3 . METHOD_2 ( STRING_1 ) ; query . METHOD_3 ( VAR_4 , VAR_1 ) ; query . METHOD_3 ( STRING_2 , VAR_2 ) ; java.util.List < TYPE_3 > VAR_5 = query . METHOD_4 ( ) ; return ! ( VAR_5 . isEmpty ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( final int x , final int y ) { this . VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) ) ; VAR_1 . METHOD_2 ( ( x - INT_1 ) ) ; VAR_1 . METHOD_3 ( ( y - INT_1 ) ) ; VAR_1 . METHOD_4 ( INT_2 ) ; VAR_1 . METHOD_5 ( true ) ; }\n", "fixed": "public void METHOD_1 ( final double x , final double y ) { this . VAR_1 = new TYPE_1 ( new TYPE_2 ( VAR_2 ) ) ; VAR_1 . METHOD_2 ( x ) ; VAR_1 . METHOD_3 ( y ) ; VAR_1 . METHOD_4 ( INT_2 ) ; VAR_1 . METHOD_5 ( true ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 listener ) { if ( VAR_1 . add ( listener ) ) { TYPE_2 . info ( STRING_1 , listener . getClass ( ) . getName ( ) , TYPE_3 . METHOD_2 ( listener ) ) ; if ( state . equals ( VAR_2 ) ) { TYPE_2 . info ( STRING_2 , listener . getClass ( ) . getName ( ) ) ; listener . METHOD_3 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 listener ) { if ( VAR_1 . add ( listener ) ) { TYPE_2 . info ( STRING_1 , listener . getClass ( ) . getName ( ) , TYPE_3 . METHOD_2 ( listener ) ) ; if ( state . get ( ) . equals ( VAR_2 ) ) { TYPE_2 . info ( STRING_2 , listener . getClass ( ) . getName ( ) ) ; listener . METHOD_3 ( ) ; } } }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_2 ( this . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( METHOD_3 ( ) ) . METHOD_5 ( ) ) ; VAR_1 . METHOD_1 ( VAR_3 ) ; }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_2 ) ) ) ; VAR_3 = new TYPE_2 ( this . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( METHOD_3 ( ) ) . METHOD_5 ( ) , this ) ; VAR_1 . METHOD_1 ( VAR_3 ) ; }\n"}
{"problem": "public static float [ ] METHOD_1 ( double [ ] data , double VAR_1 ) { float [ ] VAR_2 = TYPE_1 . METHOD_2 ( data ) ; float [ ] VAR_3 = new float [ data . length ] ; TYPE_2 VAR_4 = new TYPE_2 ( INT_1 ) ; VAR_4 . METHOD_3 ( INT_1 ) ; VAR_4 . METHOD_4 ( INT_2 ) ; VAR_4 . METHOD_5 ( INT_3 ) ; VAR_4 . METHOD_6 ( VAR_1 ) ; VAR_4 . METHOD_7 ( VAR_2 , VAR_3 , 0 , INT_3 ) ; return VAR_3 ; }\n", "fixed": "public static float [ ] METHOD_1 ( double [ ] data , double VAR_1 ) { float [ ] VAR_2 = TYPE_1 . METHOD_2 ( data ) ; float [ ] VAR_3 = new float [ data . length ] ; TYPE_2 VAR_4 = new TYPE_2 ( INT_1 ) ; VAR_4 . METHOD_3 ( INT_1 ) ; VAR_4 . METHOD_4 ( INT_2 ) ; VAR_4 . METHOD_5 ( INT_3 ) ; VAR_4 . METHOD_6 ( VAR_1 ) ; VAR_4 . METHOD_7 ( VAR_2 , VAR_3 , 0 , data . length ) ; return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException { if ( ! ( response . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 , new TYPE_3 ( response . METHOD_4 ( ) . string ( ) ) ) ; return ; } TYPE_4 . i ( STRING_1 , response . METHOD_4 ( ) . string ( ) ) ; VAR_2 . METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws java.io.IOException { if ( ! ( response . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 , new java.io.IOException ( response . METHOD_4 ( ) . string ( ) ) ) ; return ; } TYPE_4 . i ( STRING_1 , response . METHOD_4 ( ) . string ( ) ) ; VAR_2 . METHOD_5 ( ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( ) ; VAR_3 = ( ( android.widget.LinearLayout ) ( METHOD_4 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_3 ) ( METHOD_4 ( VAR_6 ) ) ) ; VAR_7 . METHOD_5 ( null ) ; VAR_3 . METHOD_6 ( this ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( ) ; VAR_3 = ( ( android.widget.LinearLayout ) ( METHOD_4 ( VAR_4 ) ) ) ; VAR_5 = ( ( TYPE_3 ) ( METHOD_4 ( VAR_6 ) ) ) ; VAR_3 . METHOD_6 ( this ) ; }\n"}
{"problem": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String id ) { long VAR_1 = VAR_2 . METHOD_2 ( id ) ; boolean VAR_3 = ( VAR_1 == 0 ) ? false : true ; TYPE_3 status = ( VAR_1 == 0 ) ? VAR_4 : VAR_5 ; TYPE_2 VAR_6 = new TYPE_2 ( VAR_3 ) ; return new TYPE_1 ( VAR_6 , status ) ; }\n", "fixed": "public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String id ) { long VAR_1 = VAR_2 . METHOD_2 ( id ) ; java.lang.System.out.println ( VAR_1 ) ; boolean VAR_3 = ( VAR_1 == 0 ) ? false : true ; TYPE_3 status = ( VAR_1 == 0 ) ? VAR_4 : VAR_5 ; TYPE_2 VAR_6 = new TYPE_2 ( VAR_3 ) ; return new TYPE_1 ( VAR_6 , status ) ; }\n"}
{"problem": "void METHOD_1 ( TYPE_1 VAR_1 , android.content.Context context ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 = true ; VAR_1 . METHOD_3 ( context ) ; VAR_2 = false ; TYPE_2 VAR_3 = METHOD_4 ( VAR_1 ) ; if ( VAR_3 != null ) VAR_3 . METHOD_3 ( VAR_1 ) ; } }\n", "fixed": "void METHOD_1 ( TYPE_1 VAR_1 , android.content.Context context ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_2 VAR_3 = METHOD_4 ( VAR_1 , true ) ; VAR_2 = true ; VAR_1 . METHOD_3 ( context ) ; VAR_2 = false ; if ( VAR_3 != null ) VAR_3 . METHOD_3 ( VAR_1 ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { java.util.List < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( STRING_1 , VAR_2 ) ; VAR_3 . METHOD_4 ( true ) ; METHOD_5 ( ) ; } else { VAR_4 . METHOD_6 ( VAR_5 ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ) ) { java.util.List < TYPE_2 > VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( STRING_1 , VAR_2 ) ; VAR_3 . METHOD_4 ( true ) ; METHOD_5 ( ) ; } else { VAR_4 . METHOD_6 ( VAR_5 ) ; } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( ) { try { TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 ; VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_4 VAR_3 = VAR_2 . METHOD_4 ( ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_5 ( STRING_1 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; VAR_3 . METHOD_7 ( STRING_2 ) ; return VAR_4 ; } catch ( TYPE_5 VAR_5 ) { VAR_5 . METHOD_8 ( ) ; } return null ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( ) { try { TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 ; VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_4 VAR_3 = VAR_2 . METHOD_4 ( ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_5 ( STRING_1 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; return VAR_4 ; } catch ( TYPE_5 VAR_5 ) { VAR_5 . METHOD_8 ( ) ; } return null ; }\n"}
{"problem": "private int METHOD_1 ( java.lang.Object VAR_1 ) { int VAR_2 = VAR_3 . size ( ) ; int index = VAR_2 ; while ( ( VAR_3 . size ( ) ) < ( VAR_4 . METHOD_2 ( ) . size ( ) ) ) { java.lang.String label = java.lang.Integer.toString ( ( index ++ ) ) ; VAR_3 . add ( VAR_5 . METHOD_3 ( VAR_1 , null , label , INT_1 , INT_1 , INT_1 , INT_1 , STRING_1 ) ) ; } return VAR_2 ; }\n", "fixed": "private void METHOD_1 ( java.lang.Object VAR_1 ) { int index = VAR_3 . size ( ) ; while ( index < ( VAR_4 . METHOD_2 ( ) . size ( ) ) ) { java.lang.String label = java.lang.Integer.toString ( ( index ++ ) ) ; VAR_3 . add ( VAR_5 . METHOD_3 ( VAR_1 , null , label , INT_1 , INT_1 , INT_1 , INT_1 , STRING_1 ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 className , TYPE_2 VAR_1 ) { VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( listener ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 className , TYPE_2 VAR_1 ) { VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( listener ) ; VAR_2 . METHOD_4 ( ) ; if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_5 ) { if ( VAR_4 . toString ( ) . equals ( VAR_3 ) ) { VAR_4 . get ( VAR_2 ) . add ( VAR_1 ) ; VAR_6 . METHOD_2 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_5 ) { if ( VAR_4 . toString ( ) . equals ( VAR_3 ) ) { VAR_4 . get ( VAR_2 ) . add ( VAR_1 ) ; VAR_6 . METHOD_2 ( ) ; return ; } } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; this . METHOD_4 ( ) ; new TYPE_3 ( TYPE_4 . METHOD_5 ( ) , this . VAR_3 ) ; this . METHOD_6 ( this . VAR_4 ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; this . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( this ) ; this . METHOD_4 ( ) ; new TYPE_3 ( TYPE_4 . METHOD_5 ( ) , this . VAR_3 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.util.Set < java.lang.String > VAR_2 ) { java.lang.String label = VAR_3 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; boolean VAR_4 = label . contains ( STRING_2 ) ; if ( VAR_4 ) { return TYPE_2 . METHOD_1 ( null , true , VAR_2 ) ; } return TYPE_2 . METHOD_1 ( VAR_1 , true , VAR_2 ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.util.Set < java.lang.String > VAR_2 ) { boolean VAR_4 = false ; if ( ( VAR_3 . METHOD_2 ( ) ) != null ) { java.lang.String label = VAR_3 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; VAR_4 = label . contains ( STRING_2 ) ; } if ( VAR_4 ) { return TYPE_2 . METHOD_1 ( null , true , VAR_2 ) ; } return TYPE_2 . METHOD_1 ( VAR_1 , true , VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_3 temp = new TYPE_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; VAR_7 . METHOD_4 ( temp . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ) ; VAR_8 . METHOD_7 ( VAR_7 ) ; VAR_9 = VAR_1 ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_9 = VAR_1 ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_3 temp = new TYPE_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; VAR_7 . METHOD_4 ( temp . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ) ; VAR_8 . METHOD_7 ( VAR_7 ) ; VAR_9 = VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.Integer id = METHOD_2 ( VAR_1 ) ; if ( id == null ) VAR_2 . put ( new TYPE_3 < java.lang.String , java.lang.String > ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) , ( ( VAR_3 ) ++ ) ) ; try { VAR_4 . METHOD_1 ( VAR_1 , ( ( int ) ( id ) ) ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_2 ( VAR_5 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { java.lang.Integer id = METHOD_2 ( VAR_1 ) ; if ( id == null ) { id = ( VAR_3 ) ++ ; VAR_2 . put ( new TYPE_3 < java.lang.String , java.lang.String > ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) , id ) ; } try { VAR_4 . METHOD_1 ( VAR_1 , ( ( int ) ( id ) ) ) ; } catch ( java.lang.Exception VAR_5 ) { throw new TYPE_2 ( VAR_5 ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = this ; int i = 0 ; while ( i < ( VAR_1 . length ( ) ) ) { char c = VAR_1 . METHOD_2 ( i ) ; if ( ( VAR_3 ) != null ) { VAR_2 = VAR_3 . get ( c ) ; } i ++ ; } return VAR_2 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = this ; int i = 0 ; while ( i < ( VAR_1 . length ( ) ) ) { char c = VAR_1 . METHOD_2 ( i ) ; if ( ( VAR_2 != null ) && ( ( VAR_3 ) != null ) ) { VAR_2 = VAR_3 . get ( c ) ; } i ++ ; } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; if ( true ) return ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; METHOD_12 ( ) ; METHOD_13 ( ) ; METHOD_14 ( STRING_1 ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; METHOD_12 ( ) ; METHOD_13 ( ) ; METHOD_14 ( STRING_1 ) ; }\n"}
{"problem": "public static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_3 . METHOD_3 ( new TYPE_2 [ VAR_3 . size ( ) ] ) ) ; VAR_4 . METHOD_4 ( 0 , 0 ) ; TYPE_4 . METHOD_1 ( VAR_4 ) ; }\n", "fixed": "public static void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 , VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_3 . METHOD_3 ( new TYPE_2 [ VAR_3 . size ( ) ] ) ) ; VAR_4 . METHOD_4 ( 0 , VAR_1 ) ; TYPE_4 . METHOD_1 ( VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { while ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . message ( VAR_2 , STRING_1 , STRING_2 ) ; VAR_3 . METHOD_4 ( out ) ; try { java.lang.Thread . METHOD_5 ( INT_1 ) ; } catch ( TYPE_2 VAR_4 ) { VAR_4 . METHOD_6 ( ) ; } } while ( ! ( METHOD_2 ( ) ) ) { } VAR_3 . METHOD_7 ( out ) ; }\n", "fixed": "public void METHOD_1 ( ) { while ( ! ( VAR_1 ) ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . message ( VAR_2 , STRING_1 , STRING_2 ) ; VAR_3 . METHOD_4 ( out ) ; } while ( ! ( METHOD_2 ( ) ) ) { } VAR_3 . METHOD_7 ( out ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = VAR_4 [ VAR_2 ] [ VAR_1 ] ; float VAR_5 = ( VAR_6 ) / INT_1 ; return new TYPE_1 ( ( ( VAR_3 . x ) - VAR_5 ) , ( ( VAR_3 . y ) - VAR_5 ) , ( ( VAR_3 . x ) + VAR_5 ) , ( ( VAR_3 . y ) + VAR_5 ) ) ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_2 VAR_3 = VAR_4 [ VAR_2 ] [ VAR_1 ] ; float VAR_5 = ( VAR_6 ) / INT_1 ; return new TYPE_1 ( ( ( VAR_3 . x ) - VAR_5 ) , ( ( VAR_3 . y ) - VAR_5 ) , VAR_6 , VAR_6 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 , TYPE_4 { java.util.List < java.lang.String > VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_5 VAR_3 = new TYPE_5 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; TYPE_6 VAR_4 = new TYPE_6 ( VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_4 . format ( ) ) ; VAR_3 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_3 . METHOD_8 ( VAR_2 ) ; VAR_5 . METHOD_9 ( VAR_3 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 , TYPE_4 { java.util.List < java.lang.String > VAR_2 = METHOD_2 ( VAR_1 , false ) ; TYPE_5 VAR_3 = new TYPE_5 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; TYPE_6 VAR_4 = new TYPE_6 ( VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_4 . format ( ) ) ; VAR_3 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_3 . METHOD_8 ( VAR_2 ) ; VAR_5 . METHOD_9 ( VAR_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } while ( ! ( VAR_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ) { VAR_2 = METHOD_4 ( VAR_2 ) ; if ( ( METHOD_5 ( VAR_2 ) ) >= ( VAR_3 ) ) { return ; } } }\n", "fixed": "private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { return ; } while ( ( ( METHOD_5 ( VAR_2 ) ) < ( VAR_3 ) ) && ( ! ( VAR_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ) ) { VAR_2 = METHOD_4 ( VAR_2 ) ; } }\n"}
{"problem": "public TYPE_1 index ( ) { java.util.List < TYPE_2 > VAR_1 = VAR_2 . METHOD_1 ( ) . METHOD_2 ( VAR_3 , METHOD_3 ( ) ) . METHOD_4 ( ) ; if ( VAR_1 . isEmpty ( ) ) { TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_5 ( METHOD_3 ( ) ) ; VAR_4 . METHOD_6 ( ) ; } return METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_1 . get ( 0 ) ) ) ; }\n", "fixed": "public TYPE_1 index ( ) { java.util.List < TYPE_2 > VAR_1 = VAR_2 . METHOD_1 ( ) . METHOD_2 ( VAR_3 , METHOD_3 ( ) ) . METHOD_4 ( ) ; TYPE_2 VAR_4 ; if ( VAR_1 . isEmpty ( ) ) { VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_5 ( METHOD_3 ( ) ) ; VAR_4 . METHOD_6 ( ) ; } else { VAR_4 = VAR_1 . get ( 0 ) ; } return METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_4 ) ) ; }\n"}
{"problem": "public boolean METHOD_1 ( ) { boolean VAR_1 = true ; if ( this . METHOD_2 ( ) ) { if ( this . METHOD_3 ( ) ) { this . status = TYPE_1 . toString ( ) ; } else { this . status = TYPE_2 . toString ( ) ; } } else { this . status = TYPE_3 . toString ( ) ; } return VAR_1 ; }\n", "fixed": "public void METHOD_1 ( ) { if ( this . METHOD_3 ( ) ) { this . status = TYPE_1 . toString ( ) ; return ; } if ( this . METHOD_2 ( ) ) { this . status = TYPE_2 . toString ( ) ; } else { this . status = TYPE_3 . toString ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_3 ) ( VAR_5 . METHOD_3 ( VAR_2 ) ) ) ; if ( ( VAR_4 ) != null ) { METHOD_4 ( VAR_4 ) ; } else { VAR_4 = METHOD_5 ( ) ; VAR_2 = VAR_5 . METHOD_6 ( VAR_4 ) ; } } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_3 ) ( VAR_5 . METHOD_3 ( VAR_2 ) ) ) ; if ( ( VAR_4 ) != null ) { METHOD_4 ( VAR_4 ) ; } } if ( ( VAR_4 ) == null ) { VAR_4 = METHOD_5 ( ) ; VAR_2 = VAR_5 . METHOD_6 ( VAR_4 ) ; } }\n"}
{"problem": "private static int METHOD_1 ( java.lang.String str ) { int index = - 1 ; if ( TYPE_1 . METHOD_2 ( str ) ) { try { index = java.lang.Integer.parseInt ( str ) ; } catch ( TYPE_2 VAR_1 ) { } } return str . equals ( java.lang.String . METHOD_3 ( index ) ) ? index : - 1 ; }\n", "fixed": "private static int METHOD_1 ( java.lang.String str ) { int index = - 1 ; if ( ( ( str . length ( ) ) > 0 ) && ( TYPE_1 . METHOD_2 ( str ) ) ) { try { index = java.lang.Integer.parseInt ( str ) ; } catch ( TYPE_2 VAR_1 ) { } } return str . equals ( java.lang.String . METHOD_3 ( index ) ) ? index : - 1 ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String fileName ) { TYPE_1 VAR_1 ; try { VAR_1 = TYPE_2 . METHOD_2 ( new TYPE_3 ( ( ( STRING_1 + fileName ) + STRING_2 ) ) ) ; } catch ( java.io.IOException VAR_2 ) { java.lang.System.err.println ( STRING_3 ) ; VAR_2 . METHOD_3 ( ) ; } return VAR_1 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String fileName ) { TYPE_1 VAR_1 = null ; try { VAR_1 = TYPE_2 . METHOD_2 ( new java.io.File ( ( ( STRING_1 + fileName ) + STRING_2 ) ) ) ; } catch ( java.io.IOException VAR_2 ) { java.lang.System.err.println ( STRING_3 ) ; VAR_2 . METHOD_3 ( ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String field , TYPE_1 data ) { int VAR_1 = field . METHOD_2 ( CHAR_1 ) ; if ( VAR_1 < 0 ) METHOD_3 ( ) ; VAR_2 = field . substring ( 0 , VAR_1 ) ; VAR_3 = field . substring ( ( VAR_1 + 1 ) ) . trim ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String field , TYPE_1 data ) { int VAR_1 = field . METHOD_2 ( CHAR_1 ) ; if ( VAR_1 >= 0 ) { VAR_2 = field . substring ( 0 , VAR_1 ) ; field = field . substring ( ( VAR_1 + 1 ) ) . trim ( ) ; } super . METHOD_1 ( field , data ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 target ) { if ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) instanceof TYPE_2 ) ) { if ( VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( target . METHOD_4 ( ) . METHOD_5 ( ) ) ) ) { ( ( TYPE_2 ) ( target ) ) . METHOD_6 ( VAR_3 ) ; return true ; } } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 target ) { if ( ( ( VAR_1 ) != null ) && ( target instanceof TYPE_2 ) ) { if ( VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( target . METHOD_4 ( ) . METHOD_5 ( ) ) ) ) { ( ( TYPE_2 ) ( target ) ) . METHOD_6 ( VAR_3 ) ; return true ; } } return false ; }\n"}
{"problem": "private static java.lang.String [ ] METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String [ ] VAR_2 = new java.lang.String [ INT_1 ] ; TYPE_2 VAR_3 = TYPE_2 . METHOD_2 ( ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; VAR_2 [ 0 ] = TYPE_4 . toString ( VAR_3 . METHOD_4 ( ) ) ; VAR_2 [ 1 ] = TYPE_4 . toString ( VAR_3 . METHOD_5 ( ) ) ; return VAR_2 ; }\n", "fixed": "private static java.lang.String [ ] METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String [ ] VAR_2 = new java.lang.String [ INT_1 ] ; TYPE_2 VAR_3 = new TYPE_2 ( ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; VAR_2 [ 0 ] = TYPE_4 . toString ( VAR_3 . METHOD_4 ( ) ) ; VAR_2 [ 1 ] = TYPE_4 . toString ( VAR_3 . METHOD_5 ( ) ) ; return VAR_2 ; }\n"}
{"problem": "private java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) return new java.util.ArrayList < java.lang.String > ( ) ; java.util.ArrayList < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( ) ; java.util.List < java.lang.String > VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) , 0 , new java.util.ArrayList < java.lang.String > ( ) ) ; for ( java.lang.String temp : VAR_2 ) { result . add ( METHOD_4 ( toLowerCase ( temp ) ) ) ; } return result ; }\n", "fixed": "private java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) return new java.util.ArrayList < java.lang.String > ( ) ; java.util.ArrayList < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( ) ; VAR_1 = toLowerCase ( VAR_1 ) ; java.util.List < java.lang.String > VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) , 0 , new java.util.ArrayList < java.lang.String > ( ) ) ; for ( java.lang.String temp : VAR_2 ) { result . add ( METHOD_4 ( temp ) ) ; } return result ; }\n"}
{"problem": "private boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , TYPE_1 VAR_4 ) { return ( ( ( VAR_4 . METHOD_2 ( ) ) == VAR_3 ) && ( ( VAR_4 . METHOD_3 ( ) ) != VAR_1 ) ) && ( ( VAR_4 . METHOD_4 ( ) ) != VAR_2 ) ; }\n", "fixed": "private boolean METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , TYPE_1 VAR_4 ) { return ( ( VAR_4 . METHOD_2 ( ) ) == VAR_3 ) && ( ( ( VAR_4 . METHOD_3 ( ) ) != VAR_1 ) || ( ( VAR_4 . METHOD_4 ( ) ) != VAR_2 ) ) ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.String name , java.lang.String content ) { java.lang.String output = ( ( ( ( VAR_1 . format ( TYPE_1 . date ) ) + STRING_1 ) + name ) + STRING_2 ) + content ; if ( VAR_2 . METHOD_2 ( ) ) { java.lang.System.out.println ( output ) ; } TYPE_1 . METHOD_3 ( output ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.String name , java.lang.String content ) { TYPE_1 . date = new java.util.Date ( ) ; java.lang.String output = ( ( ( ( VAR_1 . format ( TYPE_1 . date ) ) + STRING_1 ) + name ) + STRING_2 ) + content ; if ( VAR_2 . METHOD_2 ( ) ) { java.lang.System.out.println ( output ) ; } TYPE_1 . METHOD_3 ( output ) ; }\n"}
{"problem": "protected java.lang.String METHOD_1 ( ) { java.lang.String name = STRING_1 ; while ( ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) || ( ( VAR_1 ) == CHAR_1 ) ) { METHOD_4 ( ) ; name += VAR_1 ; } return name ; }\n", "fixed": "protected java.lang.String METHOD_1 ( ) { java.lang.String name = STRING_1 ; while ( ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) || ( ( VAR_1 ) == CHAR_1 ) ) { name += VAR_1 ; METHOD_4 ( ) ; } return name ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . info ( STRING_1 , VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . info ( STRING_1 , VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ; VAR_3 = new TYPE_3 ( ) ; VAR_4 = new TYPE_4 ( VAR_3 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( boolean VAR_1 ) { final TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; for ( TYPE_3 node : ( VAR_1 ? VAR_4 : VAR_5 ) . METHOD_2 ( ) ) { for ( int VAR_6 = 0 ; VAR_6 < ( VAR_7 ) ; VAR_6 ++ ) { VAR_2 . add ( TYPE_4 . METHOD_3 ( node . number ( ) , VAR_6 , VAR_1 ) . not ( ) ) ; } } java.lang.System.out.println ( VAR_2 ) ; return VAR_2 . METHOD_4 ( STRING_1 ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( boolean VAR_1 ) { final TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; for ( TYPE_3 node : ( VAR_1 ? VAR_4 : VAR_5 ) . METHOD_2 ( ) ) { for ( int VAR_6 = 0 ; VAR_6 < ( VAR_7 ) ; VAR_6 ++ ) { VAR_2 . add ( TYPE_4 . METHOD_3 ( node . number ( ) , VAR_6 , VAR_1 ) . not ( ) ) ; } } return VAR_2 . METHOD_4 ( STRING_1 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Object value , boolean VAR_2 , boolean VAR_3 , int VAR_4 , int VAR_5 ) { TYPE_1 c = super . METHOD_1 ( VAR_1 , value , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; if ( VAR_5 == 0 ) { VAR_6 = METHOD_2 ( ( ( int ) ( value ) ) ) ; } METHOD_3 ( VAR_7 ) ; METHOD_4 ( VAR_6 ) ; return this ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.Object value , boolean VAR_2 , boolean VAR_3 , int VAR_4 , int VAR_5 ) { if ( VAR_5 == 0 ) { VAR_6 = METHOD_2 ( ( ( int ) ( value ) ) ) ; } METHOD_3 ( VAR_7 ) ; METHOD_4 ( VAR_6 ) ; return this ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 . METHOD_2 ( ) ) { TYPE_2 temp = VAR_2 . getValue ( VAR_3 class ) ; if ( temp . METHOD_3 ( ) . equals ( VAR_4 ) ) { java.lang.String count = VAR_5 . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( STRING_1 , ( STRING_2 + count ) ) ; VAR_6 . METHOD_6 ( STRING_3 , temp ) ; METHOD_7 ( VAR_6 ) ; METHOD_8 ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 . METHOD_2 ( ) ) { TYPE_2 temp = VAR_2 . getValue ( VAR_3 class ) ; if ( temp . METHOD_3 ( ) . equals ( VAR_4 ) ) { java.lang.String count = VAR_5 . METHOD_4 ( ) ; VAR_6 . METHOD_6 ( STRING_3 , temp ) ; METHOD_7 ( VAR_6 ) ; METHOD_8 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { try { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( java.lang.Integer . METHOD_5 ( VAR_2 . getText ( ) . toString ( ) ) ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_4 . METHOD_6 ( STRING_1 , ( STRING_2 + ( VAR_4 . METHOD_7 ( ) ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { try { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_4 . METHOD_6 ( STRING_1 , ( STRING_2 + ( VAR_4 . METHOD_7 ( ) ) ) ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( VAR_2 != null ) && ( TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_3 , VAR_4 ) , VAR_2 , new TYPE_4 ( VAR_5 . METHOD_5 ( ) ) , true ) ) ; }\n", "fixed": "private boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( VAR_2 != null ) && ( TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_3 , VAR_4 ) , VAR_2 , new TYPE_4 ( VAR_5 . METHOD_5 ( ) ) , true ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { int count = 0 ; while ( VAR_1 ) { java.lang.System.out.println ( ( ( ( java.lang.Thread . METHOD_2 ( ) . getName ( ) ) + STRING_1 ) + ( VAR_2 ) ) ) ; METHOD_3 ( ) ; try { java.lang.Thread . METHOD_4 ( INT_1 ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } java.lang.System.out.println ( ( ( java.lang.Thread . METHOD_2 ( ) . getName ( ) ) + STRING_2 ) ) ; count ++ ; } }\n", "fixed": "public void METHOD_1 ( ) { int count = 0 ; java.lang.System.out.println ( ( ( ( java.lang.Thread . METHOD_2 ( ) . getName ( ) ) + STRING_1 ) + ( VAR_2 ) ) ) ; METHOD_3 ( ) ; try { java.lang.Thread . METHOD_4 ( INT_1 ) ; } catch ( TYPE_1 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } java.lang.System.out.println ( ( ( java.lang.Thread . METHOD_2 ( ) . getName ( ) ) + STRING_2 ) ) ; count ++ ; }\n"}
{"problem": "protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . getName ( ) , VAR_2 . getValue ( ) , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) , VAR_2 . METHOD_7 ( ) , VAR_2 . METHOD_8 ( ) , VAR_2 . METHOD_9 ( ) , VAR_2 . METHOD_10 ( ) , VAR_2 . METHOD_11 ( ) , VAR_2 . METHOD_12 ( ) ) ; } }\n", "fixed": "protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_2 . getName ( ) , VAR_2 . getValue ( ) , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) , VAR_2 . METHOD_7 ( ) , VAR_2 . METHOD_8 ( ) , VAR_2 . METHOD_9 ( ) , VAR_2 . METHOD_10 ( ) , VAR_2 . METHOD_11 ( ) , VAR_2 . METHOD_12 ( ) ) ; } }\n"}
{"problem": "public java.util.LinkedList < TYPE_1 < TYPE_2 > > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { java.util.LinkedList < TYPE_1 < TYPE_2 > > VAR_2 = new java.util.LinkedList < > ( ) ; if ( METHOD_2 ( VAR_2 , VAR_1 , false ) ) return VAR_2 ; else return null ; }\n", "fixed": "public java.util.LinkedList < TYPE_1 < TYPE_2 > > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { java.util.LinkedList < TYPE_1 < TYPE_2 > > VAR_2 = new java.util.LinkedList < > ( ) ; if ( METHOD_2 ( VAR_2 , VAR_1 , false ) ) return new java.util.LinkedList < TYPE_1 < TYPE_2 > > ( VAR_2 ) ; else return null ; }\n"}
{"problem": "protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 = ( VAR_1 / INT_1 ) - ( ( ( ( ( VAR_6 ) * ( VAR_7 ) ) * INT_1 ) + ( ( VAR_8 ) * ( ( VAR_7 ) - 1 ) ) ) / INT_1 ) ; VAR_9 = VAR_2 / INT_1 ; }\n", "fixed": "protected void METHOD_1 ( int VAR_1 , int VAR_2 , int VAR_3 , int VAR_4 ) { super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; VAR_5 = ( ( VAR_1 - ( ( ( VAR_6 ) * INT_1 ) * ( VAR_7 ) ) ) - ( ( VAR_8 ) * ( ( VAR_7 ) - 1 ) ) ) / INT_1 ; VAR_9 = VAR_2 / INT_1 ; }\n"}
{"problem": "void METHOD_1 ( java.lang.CharSequence text ) { try { VAR_1 . METHOD_2 ( java.lang.Long.parseLong ( text . toString ( ) ) ) ; TYPE_1 . METHOD_3 ( STRING_1 , ( STRING_2 + ( text . toString ( ) ) ) ) ; } catch ( TYPE_2 VAR_2 ) { TYPE_3 . METHOD_4 ( this , STRING_3 , VAR_3 ) . show ( ) ; } }\n", "fixed": "void METHOD_1 ( java.lang.CharSequence text ) { try { VAR_1 . METHOD_2 ( java.lang.Long.parseLong ( text . toString ( ) ) ) ; TYPE_1 . METHOD_3 ( STRING_1 , ( STRING_2 + ( text . toString ( ) ) ) ) ; } catch ( TYPE_2 VAR_2 ) { if ( ! ( text . toString ( ) . isEmpty ( ) ) ) TYPE_3 . METHOD_4 ( this , STRING_3 , VAR_3 ) . show ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( final android.content.Context VAR_1 , final java.lang.String VAR_2 ) { final TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_4 . METHOD_2 ( VAR_5 ) ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_6 ) . METHOD_6 ( VAR_3 , new TYPE_3 ( ) { public void METHOD_7 ( ) { } public void METHOD_8 ( ) { TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_6 ( VAR_3 ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( final android.content.Context VAR_1 , final java.lang.String VAR_2 ) { final TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_4 . METHOD_2 ( VAR_5 ) ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_6 ) . METHOD_6 ( VAR_3 , new TYPE_3 ( ) { public void METHOD_7 ( ) { } public void METHOD_8 ( ) { TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_6 ( VAR_3 ) ; } } ) ; }\n"}
{"problem": "public final void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , null ) ; VAR_1 . METHOD_2 ( VAR_5 , null ) ; TYPE_2 . METHOD_3 ( VAR_6 ) ; TYPE_2 . METHOD_3 ( VAR_7 ) ; TYPE_2 . METHOD_4 ( VAR_5 ) . METHOD_5 ( VAR_3 ) ; }\n", "fixed": "public final void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , null ) ; VAR_1 . METHOD_2 ( VAR_5 , null , false ) ; TYPE_2 . METHOD_3 ( VAR_6 ) ; TYPE_2 . METHOD_3 ( VAR_7 ) ; TYPE_2 . METHOD_4 ( VAR_5 ) . METHOD_5 ( VAR_3 ) ; }\n"}
{"problem": "public synchronized void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 VAR_4 = new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 ) ; java.lang.Thread VAR_5 = new java.lang.Thread ( VAR_4 ) ; VAR_5 . start ( ) ; METHOD_2 ( STRING_1 ) ; try { METHOD_3 ( ) ; } catch ( java.io.IOException VAR_6 ) { VAR_6 . METHOD_4 ( ) ; } }\n", "fixed": "public synchronized void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { TYPE_2 VAR_4 = new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , this ) ; java.lang.Thread VAR_5 = new java.lang.Thread ( VAR_4 ) ; VAR_5 . start ( ) ; METHOD_2 ( STRING_1 ) ; }\n"}
{"problem": "public void METHOD_1 ( int x , int y ) { if ( ! ( METHOD_2 ( x , y ) ) ) { java.lang.System.err.println ( ( ( ( ( STRING_1 + x ) + STRING_2 ) + y ) + STRING_3 ) ) ; return ; } if ( VAR_1 [ x ] [ y ] . VAR_2 ) { return ; } ( VAR_3 ) ++ ; TYPE_1 VAR_4 = VAR_1 [ x ] [ y ] ; VAR_5 = true ; VAR_6 += ( VAR_5 ) ? 1 : - 1 ; }\n", "fixed": "public void METHOD_1 ( int x , int y ) { if ( ! ( METHOD_2 ( x , y ) ) ) { java.lang.System.out.println ( ( ( ( ( STRING_1 + x ) + STRING_2 ) + y ) + STRING_3 ) ) ; return ; } if ( VAR_1 [ x ] [ y ] . VAR_2 ) { return ; } ( VAR_3 ) ++ ; TYPE_1 VAR_4 = VAR_1 [ x ] [ y ] ; VAR_5 = true ; VAR_6 += ( VAR_5 ) ? 1 : - 1 ; }\n"}
{"problem": "public void METHOD_1 ( float VAR_1 , float VAR_2 ) { if ( ( startTime ) == 0 ) return ; long time = TYPE_1 . METHOD_2 ( ) ; float t = ( ( float ) ( time - ( startTime ) ) ) / VAR_2 ; if ( t > 1 ) { startTime = 0 ; return ; } float VAR_3 = 1 - t ; VAR_4 . a = VAR_3 ; VAR_5 . METHOD_3 ( VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( float VAR_1 , float VAR_2 ) { if ( ( startTime ) == 0 ) { return ; } long time = TYPE_1 . METHOD_2 ( ) ; float t = ( ( float ) ( time - ( startTime ) ) ) / VAR_2 ; if ( t > 1 ) { VAR_4 . a = 0 ; VAR_5 . METHOD_3 ( VAR_4 ) ; startTime = 0 ; return ; } float VAR_3 = 1 - t ; VAR_4 . a = VAR_3 ; VAR_5 . METHOD_3 ( VAR_4 ) ; }\n"}
{"problem": "static TYPE_1 METHOD_1 ( final java.io.File VAR_1 , final char [ ] VAR_2 , final java.lang.String VAR_3 ) { try { final TYPE_2 VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 ) ; try ( java.io.InputStream VAR_6 = new java.io.FileInputStream ( VAR_1 ) ) { VAR_4 . METHOD_3 ( VAR_6 , VAR_2 ) ; return TYPE_3 . METHOD_1 ( VAR_4 , VAR_3 ) ; } } catch ( TYPE_4 | TYPE_5 | TYPE_6 | java.io.IOException VAR_7 ) { throw new TYPE_7 ( VAR_7 ) ; } }\n", "fixed": "static TYPE_1 METHOD_1 ( final java.io.File VAR_1 , final char [ ] VAR_2 , final java.lang.String VAR_3 ) { try { final TYPE_2 VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 ) ; try ( java.io.InputStream VAR_6 = new java.io.FileInputStream ( VAR_1 ) ) { VAR_4 . METHOD_3 ( VAR_6 , VAR_2 ) ; return TYPE_3 . METHOD_1 ( VAR_4 , VAR_3 , VAR_2 ) ; } } catch ( TYPE_4 | TYPE_5 | TYPE_6 | java.io.IOException VAR_7 ) { throw new TYPE_7 ( VAR_7 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( STRING_1 , VAR_2 ) ; METHOD_2 ( STRING_2 , VAR_2 ) ; METHOD_2 ( STRING_3 , VAR_2 ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_4 , STRING_5 , STRING_6 ) ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_4 , STRING_7 , STRING_6 ) , VAR_2 ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_8 , STRING_9 , STRING_8 , STRING_10 , STRING_11 , STRING_12 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { this . VAR_1 = true ; METHOD_2 ( STRING_1 , VAR_2 ) ; METHOD_2 ( STRING_2 , VAR_2 ) ; METHOD_2 ( STRING_3 , VAR_2 ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_4 , STRING_5 , STRING_6 ) ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_4 , STRING_7 , STRING_6 ) , VAR_2 ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_8 , STRING_9 , STRING_8 , STRING_10 , STRING_11 , STRING_12 ) ) ; }\n"}
{"problem": "private boolean METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 , java.lang.Class < ? extends TYPE_1 > c ) { for ( final TYPE_1 i : VAR_1 ) { if ( i . getClass ( ) . equals ( c ) ) { return false ; } } return true ; }\n", "fixed": "private boolean METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 , java.lang.Class < ? extends TYPE_1 > c ) { for ( final TYPE_1 i : VAR_1 ) { if ( i . getClass ( ) . equals ( c ) ) { return true ; } } return false ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_2 . put ( VAR_1 . METHOD_3 ( ) , new java.util.ArrayList < TYPE_1 > ( ) ) ; VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) . add ( VAR_1 ) ; } else { VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) . add ( VAR_1 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { if ( ( VAR_1 . METHOD_3 ( ) ) != null ) { VAR_2 . put ( VAR_1 . METHOD_3 ( ) , new java.util.ArrayList < TYPE_1 > ( ) ) ; VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) . add ( VAR_1 ) ; } } else { VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) . add ( VAR_1 ) ; } }\n"}
{"problem": "public long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { long VAR_3 = VAR_4 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( VAR_1 . getName ( ) ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , TYPE_2 . METHOD_3 ( VAR_1 . METHOD_6 ( ) ) , VAR_1 . getTime ( ) , VAR_1 . METHOD_7 ( ) ) ; TYPE_3 VAR_5 = null ; VAR_5 . METHOD_8 ( VAR_1 . METHOD_2 ( ) , VAR_2 , INT_1 ) ; return VAR_3 ; }\n", "fixed": "public long METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 ) { long VAR_3 = VAR_4 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( VAR_1 . getName ( ) ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , TYPE_2 . METHOD_3 ( VAR_1 . METHOD_6 ( ) ) , VAR_1 . getTime ( ) , VAR_1 . METHOD_7 ( ) ) ; TYPE_3 VAR_5 = null ; return VAR_3 ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Long VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_2 ( STRING_1 ) ; } java.util.List < java.lang.Long > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 . isEmpty ( ) ) { return VAR_4 . METHOD_3 ( VAR_2 ) ; } else { return VAR_4 . METHOD_4 ( ) ; } }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Long VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_2 ( STRING_1 ) ; } java.util.List < java.lang.Long > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { return VAR_4 . METHOD_3 ( VAR_2 ) ; } else { return VAR_4 . METHOD_4 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String fileName ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( fileName ) ; try { TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_1 , true ) ; VAR_2 . info ( ( ( STRING_1 + fileName ) + STRING_2 ) ) ; } catch ( TYPE_5 VAR_3 ) { VAR_2 . error ( ( STRING_3 + fileName ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String fileName ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( fileName ) ; try { TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) . METHOD_7 ( ) , VAR_1 , true ) ; VAR_2 . info ( ( ( STRING_1 + fileName ) + STRING_2 ) ) ; } catch ( TYPE_5 VAR_3 ) { VAR_2 . error ( ( STRING_3 + fileName ) , VAR_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 , java.lang.String value ) throws TYPE_1 { java.lang.Long VAR_3 = TYPE_2 . METHOD_2 ( value ) ; java.lang.Long VAR_4 = TYPE_2 . METHOD_2 ( STRING_1 ) ; if ( VAR_3 > VAR_4 ) { throw new TYPE_1 ( java.lang.String.format ( ( STRING_2 + STRING_3 ) , TYPE_3 . METHOD_3 ( ) , value ) ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String name , java.lang.String VAR_2 , java.lang.String value ) throws TYPE_1 { java.lang.Long VAR_3 = TYPE_2 . METHOD_2 ( value ) ; java.lang.Long VAR_4 = TYPE_2 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_3 > VAR_4 ) || ( VAR_3 < 0 ) ) { throw new TYPE_1 ( java.lang.String.format ( ( STRING_2 + STRING_3 ) , TYPE_3 . METHOD_3 ( ) , value ) ) ; } }\n"}
{"problem": "public java.lang.Long METHOD_1 ( TYPE_1 item ) { java.lang.String VAR_1 = item . METHOD_2 ( ) ; if ( TYPE_2 . isEmpty ( VAR_1 ) ) { java.lang.String VAR_2 = TYPE_3 . METHOD_3 ( item . METHOD_4 ( ) ) ; VAR_1 = VAR_2 + ( VAR_3 ) ; } TYPE_4 VAR_4 = METHOD_5 ( VAR_1 ) ; return VAR_4 . getValue ( ) ; }\n", "fixed": "private java.lang.Long METHOD_1 ( TYPE_1 item ) { java.lang.String VAR_1 = item . METHOD_2 ( ) ; if ( TYPE_2 . isEmpty ( VAR_1 ) ) { java.lang.String VAR_2 = TYPE_3 . METHOD_3 ( item . METHOD_4 ( ) ) ; VAR_1 = VAR_2 + ( VAR_3 ) ; } TYPE_4 VAR_4 = METHOD_5 ( VAR_1 ) ; return VAR_4 . getValue ( ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.Integer VAR_2 = ( ( java.lang.Integer ) ( VAR_1 . METHOD_2 ( ) ) ) ; if ( ( VAR_3 ) != null ) { if ( VAR_2 == ( VAR_3 . METHOD_3 ( ) ) ) { VAR_3 . METHOD_4 ( ) ; } else { VAR_3 . METHOD_5 ( VAR_2 ) ; } METHOD_6 ( ) ; } }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { java.lang.Integer VAR_2 = ( ( java.lang.Integer ) ( VAR_1 . METHOD_2 ( ) ) ) ; if ( ( VAR_3 ) != null ) { if ( VAR_2 == ( VAR_3 . METHOD_3 ( ) ) ) { VAR_3 . METHOD_4 ( ) ; } else { VAR_3 . METHOD_5 ( VAR_2 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { if ( ( ( VAR_3 <= 0 ) && ( ( VAR_4 . getId ( ) ) != 0 ) ) && ( VAR_5 ) ) { VAR_4 . show ( ) ; } else { VAR_4 . METHOD_2 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int VAR_3 ) { if ( ( VAR_3 <= 0 ) && ( ( VAR_4 . getId ( ) ) != 0 ) ) { VAR_4 . show ( ) ; } else { VAR_4 . METHOD_2 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 . METHOD_2 ( ( ( TYPE_2 ) ( data ) ) ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { TYPE_3 VAR_5 = ( ( TYPE_3 ) ( getView ( ) . METHOD_3 ( VAR_6 ) ) ) ; VAR_5 . METHOD_4 ( VAR_3 ) ; if ( ( VAR_7 ) == true ) { METHOD_5 ( VAR_3 ) ; } } else if ( ( VAR_7 ) == true ) { METHOD_5 ( 0 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 data ) { VAR_2 . METHOD_2 ( ( ( TYPE_2 ) ( data ) ) ) ; if ( ( VAR_3 ) != ( VAR_4 ) ) { TYPE_3 VAR_5 = ( ( TYPE_3 ) ( getView ( ) . METHOD_3 ( VAR_6 ) ) ) ; VAR_5 . METHOD_4 ( VAR_3 ) ; } else if ( ( ( VAR_7 ) == true ) && ( ( VAR_3 ) == ( VAR_4 ) ) ) { METHOD_5 ( 0 ) ; } }\n"}
{"problem": "public synchronized java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_2 ( VAR_2 , new java.util.HashSet < java.lang.String > ( ) , VAR_3 ) ; VAR_1 = VAR_2 ; } return VAR_1 ; }\n", "fixed": "public synchronized java.util.Collection < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.util.HashMap < TYPE_1 , TYPE_1 > VAR_2 = new java.util.HashMap < TYPE_1 , TYPE_1 > ( ) ; METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_1 = VAR_2 . values ( ) ; } return VAR_1 ; }\n"}
{"problem": "public boolean METHOD_1 ( ) { boolean status = true ; for ( TYPE_1 VAR_1 : this . VAR_2 . METHOD_2 ( ) ) { try { java.lang.String VAR_3 = ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ; this . VAR_3 . execute ( VAR_3 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_2 . error ( ( STRING_3 + ( VAR_4 . METHOD_5 ( ) ) ) ) ; status = false ; } } return status ; }\n", "fixed": "public boolean METHOD_1 ( ) { boolean status = true ; for ( TYPE_1 VAR_1 : this . VAR_2 . METHOD_2 ( ) ) { try { java.lang.String VAR_3 = ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ; this . VAR_3 . execute ( VAR_3 ) ; } catch ( TYPE_3 VAR_4 ) { TYPE_2 . error ( ( STRING_3 + ( VAR_4 . METHOD_5 ( ) ) ) ) ; status = false ; } } return status ; }\n"}
{"problem": "protected java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; java.io.File VAR_3 = new java.io.File ( VAR_1 ) ; java.io.File [ ] VAR_4 = VAR_3 . METHOD_2 ( ) ; for ( java.io.File file : VAR_4 ) { if ( file . METHOD_3 ( ) ) { VAR_2 . add ( file . getName ( ) ) ; } } return VAR_2 ; }\n", "fixed": "protected java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; java.io.File VAR_3 = new java.io.File ( VAR_1 ) ; java.io.File [ ] VAR_4 = VAR_3 . METHOD_2 ( ) ; if ( VAR_4 != null ) { for ( java.io.File file : VAR_4 ) { if ( file . METHOD_3 ( ) ) { VAR_2 . add ( file . getName ( ) ) ; } } } return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = event . METHOD_2 ( ) ; if ( ( VAR_2 . add ( VAR_1 ) ) && ( ! ( VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . getName ( ) ) ) ) ) { VAR_1 . METHOD_5 ( ( STRING_1 + ( VAR_3 . info ( VAR_1 . METHOD_4 ( ) . getName ( ) ) ) ) ) ; TYPE_3 . METHOD_6 ( VAR_1 , VAR_1 . METHOD_7 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = event . METHOD_2 ( ) ; if ( ! ( VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . getName ( ) ) ) ) { synchronized ( VAR_2 ) { if ( VAR_2 . add ( VAR_1 ) ) { VAR_1 . METHOD_5 ( ( STRING_1 + ( VAR_3 . info ( VAR_1 . METHOD_4 ( ) . getName ( ) ) ) ) ) ; TYPE_3 . METHOD_6 ( VAR_1 , VAR_1 . METHOD_7 ( ) ) ; } } } }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String VAR_3 , boolean VAR_4 , boolean VAR_5 , java.lang.String VAR_6 , java.lang.String VAR_7 ) { final TYPE_1 VAR_8 = new TYPE_1 ( ) ; VAR_9 = VAR_3 ; VAR_10 = VAR_1 ; VAR_11 = VAR_2 ; VAR_12 = VAR_4 ; VAR_8 . status = ( VAR_5 ) ? VAR_13 : VAR_14 ; if ( VAR_6 != null ) { VAR_15 = VAR_6 ; VAR_16 = VAR_7 ; VAR_17 . METHOD_2 ( VAR_18 ) ; } return VAR_8 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , java.lang.String VAR_3 , boolean VAR_4 , boolean VAR_5 , java.lang.String VAR_6 , java.lang.String VAR_7 ) { final TYPE_1 VAR_8 = new TYPE_1 ( ) ; VAR_9 = VAR_3 ; VAR_10 = VAR_1 ; VAR_11 = VAR_2 ; VAR_12 = VAR_4 ; VAR_8 . status = ( VAR_5 ) ? VAR_13 : VAR_14 ; VAR_15 = VAR_6 ; VAR_16 = VAR_7 ; return VAR_8 ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { final int VAR_4 = VAR_1 + VAR_2 ; if ( ( VAR_4 == VAR_3 ) && ( VAR_3 > VAR_2 ) ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; } else { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_3 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 view , int VAR_1 , int VAR_2 , int VAR_3 ) { final int VAR_4 = VAR_1 + VAR_2 ; if ( ( getActivity ( ) ) != null ) { if ( ( VAR_4 == VAR_3 ) && ( VAR_3 > VAR_2 ) ) { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_2 ( ) ; } else { ( ( TYPE_2 ) ( getActivity ( ) ) ) . METHOD_3 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 item ) { if ( item == null ) { throw new java.lang.NullPointerException ( ) ; } VAR_1 = new TYPE_2 ( ) { { this . value = item ; this . VAR_2 = null ; this . VAR_3 = VAR_1 ; } } ; if ( isEmpty ( ) ) { VAR_4 = VAR_1 ; } else { VAR_5 = VAR_1 ; } ( size ) ++ ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 item ) { if ( item == null ) { throw new java.lang.NullPointerException ( ) ; } VAR_1 = new TYPE_2 ( item , null , VAR_1 ) ; if ( isEmpty ( ) ) { VAR_4 = VAR_1 ; } else { VAR_5 = VAR_1 ; } ( size ) ++ ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { response . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; try { VAR_1 . METHOD_4 ( VAR_5 ) . METHOD_5 ( VAR_1 , response ) ; } catch ( TYPE_3 VAR_6 ) { TYPE_4 . METHOD_6 ( VAR_7 , VAR_6 . METHOD_7 ( ) , VAR_6 ) ; } catch ( java.io.IOException VAR_6 ) { TYPE_4 . METHOD_6 ( VAR_7 , VAR_6 . METHOD_7 ( ) , VAR_6 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { response . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ; try { VAR_1 . METHOD_4 ( VAR_5 ) . METHOD_5 ( VAR_1 , response ) ; } catch ( TYPE_3 | java.io.IOException VAR_6 ) { TYPE_4 . METHOD_6 ( VAR_7 , VAR_6 . METHOD_7 ( ) , VAR_6 ) ; } }\n"}
{"problem": "private void trim ( java.util.Vector < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { int i = ( VAR_1 . size ( ) ) - 1 ; if ( VAR_1 . METHOD_1 ( i ) . METHOD_2 ( ) . toString ( ) . equals ( VAR_2 . toString ( ) ) ) { VAR_1 . remove ( i ) ; } }\n", "fixed": "private void trim ( java.util.Vector < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { int i = ( VAR_1 . size ( ) ) - 1 ; if ( i == 0 ) { return ; } if ( VAR_1 . METHOD_1 ( i ) . METHOD_2 ( ) . toString ( ) . equals ( VAR_2 . toString ( ) ) ) { VAR_1 . remove ( i ) ; } }\n"}
{"problem": "private void METHOD_1 ( ) throws TYPE_1 , java.io.IOException , java.lang.ClassNotFoundException { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) ) ) ; while ( true ) { try { VAR_4 . add ( ( ( TYPE_3 ) ( VAR_1 . METHOD_3 ( ) ) ) ) ; } catch ( java.io.IOException VAR_5 ) { break ; } } }\n", "fixed": "private void METHOD_1 ( ) throws TYPE_1 , java.io.IOException , java.lang.ClassNotFoundException { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) ) ) ; VAR_4 = new java.util.LinkedList < TYPE_3 > ( ) ; while ( true ) { try { VAR_4 . add ( ( ( TYPE_3 ) ( VAR_1 . METHOD_3 ( ) ) ) ) ; } catch ( java.io.IOException VAR_5 ) { break ; } } }\n"}
{"problem": "public static java.util.Map < TYPE_1 , java.util.Map < TYPE_2 , TYPE_1 > > METHOD_1 ( java.util.List < TYPE_3 > VAR_1 ) { java.util.Map < TYPE_1 , java.util.Map < TYPE_2 , TYPE_1 > > VAR_2 = new java.util.HashMap < > ( ) ; if ( ! ( TYPE_4 . isEmpty ( VAR_1 ) ) ) { for ( TYPE_3 VAR_3 : VAR_1 ) { VAR_2 . put ( VAR_3 . METHOD_2 ( ) , TYPE_5 . METHOD_1 ( VAR_3 ) ) ; } } return VAR_2 ; }\n", "fixed": "public static java.util.Map < TYPE_1 , java.util.Map < TYPE_2 , TYPE_1 > > METHOD_1 ( java.util.List < TYPE_3 > VAR_1 ) { java.util.Map < TYPE_1 , java.util.Map < TYPE_2 , TYPE_1 > > VAR_2 = new java.util.HashMap < > ( ) ; if ( ! ( TYPE_4 . isEmpty ( VAR_1 ) ) ) { for ( TYPE_3 VAR_3 : VAR_1 ) { if ( VAR_3 != null ) { VAR_2 . put ( VAR_3 . METHOD_2 ( ) , TYPE_5 . METHOD_1 ( VAR_3 ) ) ; } } } return VAR_2 ; }\n"}
{"problem": "public java.util.List < java.lang.Integer > METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < java.lang.Integer , java.lang.Integer > VAR_2 = new TYPE_2 < java.lang.Integer , java.lang.Integer > ( ) ; for ( java.lang.Integer value : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { int VAR_3 = METHOD_4 ( VAR_1 , value ) ; VAR_2 . put ( value , VAR_3 ) ; } METHOD_5 ( VAR_2 ) ; return METHOD_5 ( VAR_2 ) ; }\n", "fixed": "public java.util.List < java.lang.Integer > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.HashMap < java.lang.Integer , java.lang.Integer > VAR_2 = new java.util.HashMap < java.lang.Integer , java.lang.Integer > ( ) ; for ( java.lang.Integer value : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { int VAR_3 = METHOD_4 ( VAR_1 , value ) ; VAR_2 . put ( value , VAR_3 ) ; } METHOD_5 ( VAR_2 ) ; return METHOD_5 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 node ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) VAR_1 . METHOD_3 ( ( ( ( getName ( ) ) + STRING_1 ) + ( node . getName ( ) ) ) ) ; if ( ! ( node . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ) { VAR_3 . add ( node ) ; METHOD_7 ( node ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 node ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ( ( ( getName ( ) ) + STRING_1 ) + ( node . getName ( ) ) ) ) ; } if ( ( ! ( node . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ) && ( ! ( VAR_3 . contains ( node ) ) ) ) { VAR_3 . add ( node ) ; METHOD_7 ( node ) ; } }\n"}
{"problem": "public void METHOD_1 ( android.view.View VAR_1 ) { int index = VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; METHOD_4 ( index ) ; VAR_2 . METHOD_2 ( ) . METHOD_5 ( VAR_3 ) ; VAR_2 . METHOD_6 ( ) . METHOD_7 ( index ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View VAR_1 ) { int index = VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_2 ( ) . METHOD_5 ( VAR_3 ) ; METHOD_4 ( index ) ; VAR_2 . METHOD_6 ( ) . METHOD_7 ( index ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) . METHOD_5 ( ) ; METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; METHOD_2 ( VAR_5 ) . METHOD_3 ( VAR_4 ) ; METHOD_2 ( VAR_6 ) . METHOD_3 ( VAR_4 ) ; ( ( TYPE_1 ) ( METHOD_2 ( VAR_7 ) ) ) . METHOD_6 ( VAR_8 ) ; }\n", "fixed": "private void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) . METHOD_5 ( ) ; METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; ( ( TYPE_1 ) ( METHOD_2 ( VAR_7 ) ) ) . METHOD_6 ( VAR_8 ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_2 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_1 ) ) ) ; VAR_3 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_2 ) ) ) ; VAR_4 = ( ( java.lang.Integer ) ( VAR_1 . get ( STRING_3 ) ) ) ; return message ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 message = new TYPE_1 ( ) ; VAR_2 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_1 ) ) ) ; VAR_3 = ( ( java.lang.String ) ( VAR_1 . get ( STRING_2 ) ) ) ; VAR_4 = getInt ( VAR_1 , STRING_3 ) ; return message ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 , double VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( java.lang.String.format ( VAR_4 , id ) ) ; VAR_3 . METHOD_2 ( 1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_5 ) ) ; return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 , double VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( java.lang.String.format ( VAR_4 , id ) ) ; VAR_3 . METHOD_2 ( id ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_5 ) ) ; return VAR_3 ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( boolean VAR_1 ) { try ( TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) { return METHOD_4 ( VAR_2 ) ; } catch ( TYPE_3 VAR_4 ) { VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_5 , STRING_1 , VAR_4 ) ; if ( ! VAR_1 ) { try { java.lang.Thread . METHOD_7 ( INT_1 ) ; } catch ( TYPE_4 VAR_6 ) { throw new TYPE_5 ( STRING_2 , VAR_6 ) ; } METHOD_1 ( true ) ; } } throw new TYPE_5 ( STRING_2 ) ; }\n", "fixed": "private TYPE_1 METHOD_1 ( boolean VAR_1 ) { try ( TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) { return METHOD_4 ( VAR_2 ) ; } catch ( TYPE_3 VAR_4 ) { VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_5 , STRING_1 , VAR_4 ) ; if ( ! VAR_1 ) { try { java.lang.Thread . METHOD_7 ( INT_1 ) ; } catch ( TYPE_4 VAR_6 ) { throw new TYPE_5 ( STRING_2 , VAR_6 ) ; } return METHOD_1 ( true ) ; } } throw new TYPE_5 ( STRING_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { TYPE_3 < TYPE_4 > VAR_2 = VAR_3 ; if ( ( VAR_4 . size ( ) ) == 0 ) { TYPE_5 . METHOD_2 ( VAR_5 , STRING_1 ) ; METHOD_3 ( ) ; return ; } METHOD_4 ( TYPE_6 . METHOD_5 ( VAR_4 ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { TYPE_3 < TYPE_4 > VAR_2 = VAR_3 ; if ( ( VAR_4 . size ( ) ) == 0 ) { TYPE_5 . METHOD_2 ( VAR_5 , STRING_1 ) ; METHOD_3 ( ) ; return ; } METHOD_4 ( VAR_4 ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 . contains ( STRING_1 ) ) { VAR_1 = VAR_1 . replaceAll ( STRING_1 , STRING_2 ) ; } if ( VAR_1 . contains ( STRING_3 ) ) { VAR_1 = VAR_1 . replaceAll ( STRING_3 , STRING_4 ) ; } if ( VAR_1 . contains ( STRING_5 ) ) { VAR_1 = VAR_1 . replaceAll ( STRING_5 , STRING_4 ) ; } return VAR_1 ; }\n", "fixed": "public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) return STRING_4 ; if ( VAR_1 . contains ( STRING_1 ) ) { VAR_1 = VAR_1 . replaceAll ( STRING_1 , STRING_2 ) ; } if ( VAR_1 . contains ( STRING_3 ) ) { VAR_1 = VAR_1 . replaceAll ( STRING_3 , STRING_4 ) ; } if ( VAR_1 . contains ( STRING_5 ) ) { VAR_1 = VAR_1 . replaceAll ( STRING_5 , STRING_4 ) ; } return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . execute ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 , null , TYPE_3 . METHOD_2 ( INT_1 , 1 , INT_2 ) , VAR_2 , INT_3 ) ; int id = VAR_3 . METHOD_3 ( VAR_1 ) ; TYPE_2 VAR_4 = VAR_3 . METHOD_4 ( id ) ; METHOD_5 ( VAR_4 . equals ( null ) ) ; assertEquals ( VAR_1 , VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 , null , TYPE_3 . METHOD_2 ( INT_1 , 1 , INT_2 ) , VAR_2 , INT_3 ) ; int id = VAR_3 . METHOD_3 ( VAR_1 ) ; TYPE_2 VAR_4 = VAR_3 . METHOD_4 ( id ) ; METHOD_5 ( VAR_4 . equals ( null ) ) ; assertEquals ( VAR_1 , VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 . METHOD_2 ( ) . size ( ) ) ; i ++ ) { METHOD_3 ( VAR_1 . METHOD_2 ( ) . get ( i ) , VAR_1 . METHOD_4 ( ) . get ( i ) , VAR_1 . METHOD_5 ( ) . get ( i ) ) ; } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { final int size = VAR_1 . METHOD_2 ( ) . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { METHOD_3 ( VAR_1 . METHOD_2 ( ) . get ( i ) , VAR_1 . METHOD_4 ( ) . get ( i ) , VAR_1 . METHOD_5 ( ) . get ( i ) ) ; } }\n"}
{"problem": "public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { java.lang.String url = intent . METHOD_2 ( STRING_1 ) ; java.lang.String filename = intent . METHOD_2 ( STRING_2 ) ; new TYPE_1 ( ) . METHOD_3 ( VAR_3 , url , filename ) ; VAR_4 = new TYPE_2 ( this ) . METHOD_4 ( VAR_5 ) . METHOD_5 ( filename ) . METHOD_6 ( true ) ; METHOD_7 ( INT_1 , VAR_4 . build ( ) ) ; return VAR_6 ; }\n", "fixed": "public int METHOD_1 ( android.content.Intent intent , int VAR_1 , int VAR_2 ) { java.lang.String url = intent . METHOD_2 ( STRING_1 ) ; java.lang.String filename = intent . METHOD_2 ( STRING_2 ) ; java.lang.String type = intent . METHOD_2 ( \"type\" ) ; new TYPE_1 ( ) . METHOD_3 ( VAR_3 , url , filename , type ) ; VAR_4 = new TYPE_2 ( this ) . METHOD_4 ( VAR_5 ) . METHOD_5 ( filename ) . METHOD_6 ( true ) ; METHOD_7 ( INT_1 , VAR_4 . build ( ) ) ; return VAR_6 ; }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ( INT_1 + INT_2 ) , VAR_2 ) ; VAR_1 . METHOD_6 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_7 ( VAR_3 ) ; int height = VAR_1 . METHOD_6 ( ) . METHOD_3 ( ) . METHOD_8 ( ) ; VAR_1 . METHOD_9 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( height , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ( INT_1 + INT_2 ) , VAR_2 ) ; int height = VAR_1 . METHOD_6 ( ) . METHOD_3 ( ) . METHOD_8 ( ) ; VAR_1 . METHOD_9 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( height , VAR_2 ) ; }\n"}
{"problem": "private int METHOD_1 ( ) { while ( ( ! ( VAR_1 ) ) && ( ! ( java.lang.Thread . METHOD_2 ( ) ) ) ) { try { java.lang.Thread . METHOD_3 ( INT_1 ) ; } catch ( TYPE_1 VAR_2 ) { java.lang.Thread . METHOD_4 ( ) . METHOD_5 ( ) ; } } return VAR_3 ; }\n", "fixed": "private int METHOD_1 ( ) { while ( ! ( VAR_1 ) ) { if ( java.lang.Thread . METHOD_2 ( ) ) { return - 1 ; } try { java.lang.Thread . METHOD_3 ( INT_1 ) ; } catch ( TYPE_1 VAR_2 ) { java.lang.Thread . METHOD_4 ( ) . METHOD_5 ( ) ; } } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( STRING_1 , VAR_1 ) ; intent . METHOD_2 ( STRING_2 , VAR_2 ) ; METHOD_3 ( VAR_3 , intent ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; VAR_4 . METHOD_6 ( VAR_6 ) ; VAR_4 . METHOD_7 ( VAR_7 ) ; super . METHOD_1 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { android.content.Intent intent = new android.content.Intent ( ) ; intent . METHOD_2 ( STRING_1 , VAR_1 ) ; intent . METHOD_2 ( STRING_2 , VAR_2 ) ; METHOD_3 ( VAR_3 , intent ) ; METHOD_4 ( ) ; if ( VAR_2 ) { VAR_4 . METHOD_5 ( VAR_5 ) ; VAR_4 . METHOD_6 ( VAR_6 ) ; VAR_4 . METHOD_7 ( VAR_7 ) ; } super . METHOD_1 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; while ( ( ! ( this . VAR_3 . isEmpty ( ) ) ) && ( ( this . VAR_2 . get ( ) ) > 0 ) ) { byte [ ] VAR_4 = this . VAR_3 . METHOD_2 ( ) ; this . METHOD_3 ( VAR_4 , true ) ; this . VAR_3 . METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { this . VAR_2 . set ( VAR_1 ) ; while ( ( ! ( this . VAR_3 . isEmpty ( ) ) ) && ( ( this . VAR_2 . get ( ) ) > 0 ) ) { byte [ ] VAR_4 = this . VAR_3 . METHOD_2 ( ) ; if ( VAR_4 != null ) { this . METHOD_3 ( VAR_4 , true ) ; this . VAR_3 . METHOD_4 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 { try { VAR_1 . METHOD_2 ( ) ; if ( ! ( VAR_2 . METHOD_3 ( ) ) ) { TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; } } catch ( java.io.IOException VAR_3 ) { throw new TYPE_1 ( STRING_1 , VAR_4 , VAR_3 ) ; } }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 { try { VAR_1 . METHOD_2 ( ) ; java.io.InputStream result = VAR_2 . METHOD_5 ( ) ; if ( ! ( VAR_2 . METHOD_3 ( ) ) ) { TYPE_2 . METHOD_4 ( result ) ; } } catch ( java.io.IOException VAR_3 ) { throw new TYPE_1 ( STRING_1 , VAR_4 , VAR_3 ) ; } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { java.lang.String VAR_2 = ( ( TYPE_2 . METHOD_4 ( CHAR_1 ) . METHOD_5 ( ( ( TYPE_3 ) ( getClass ( ) . METHOD_6 ( ) ) ) . METHOD_7 ( ) ) ) + STRING_1 ) + ( TYPE_4 . METHOD_8 ( STRING_2 ) ) ; VAR_1 . METHOD_2 ( ) . METHOD_9 ( VAR_2 ) ; } return VAR_1 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; if ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { final java.lang.String VAR_2 = ( ( TYPE_2 . METHOD_4 ( CHAR_1 ) . METHOD_5 ( ( ( TYPE_3 ) ( getClass ( ) . METHOD_6 ( ) ) ) . METHOD_7 ( ) ) ) + STRING_1 ) + ( TYPE_4 . METHOD_8 ( STRING_2 ) ) ; VAR_1 . METHOD_2 ( ) . METHOD_9 ( VAR_2 ) ; } return VAR_1 ; }\n"}
{"problem": "private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( this ) ; VAR_1 = null ; TYPE_1 . METHOD_6 ( this ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( this ) ; VAR_2 . METHOD_7 ( ) ; VAR_2 = null ; VAR_3 . METHOD_7 ( ) ; VAR_3 = null ; }\n", "fixed": "private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( this ) ; VAR_1 . METHOD_7 ( ) ; VAR_1 = null ; TYPE_1 . METHOD_6 ( this ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( this ) ; VAR_2 . METHOD_7 ( ) ; VAR_2 = null ; VAR_3 . METHOD_7 ( ) ; VAR_3 = null ; }\n"}
{"problem": "public boolean equals ( java.lang.Object VAR_1 ) { if ( ! ( VAR_1 instanceof TYPE_1 ) ) { return false ; } TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return ( ( ( name ) == ( VAR_2 . name ) ) && ( ( data ) == ( VAR_2 . data ) ) ) && ( ( VAR_3 ) == ( VAR_4 ) ) ; }\n", "fixed": "public boolean equals ( java.lang.Object VAR_1 ) { if ( ! ( VAR_1 instanceof TYPE_1 ) ) { return false ; } TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return ( ( name . equals ( VAR_2 . name ) ) && ( data . equals ( VAR_2 . data ) ) ) && ( ( VAR_3 ) == ( VAR_4 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_2 ( ) . add ( VAR_2 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) . METHOD_7 ( false ) ; VAR_3 . METHOD_8 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_2 ( ) . add ( VAR_2 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) . METHOD_7 ( false ) ; VAR_3 . METHOD_8 ( VAR_2 , true ) ; }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_3 arg = METHOD_2 ( ) ; position = arg . getInt ( VAR_4 ) ; if ( VAR_3 != null ) { double [ ] VAR_5 = VAR_3 . METHOD_3 ( VAR_6 ) ; VAR_7 = new TYPE_4 ( VAR_5 [ 0 ] , VAR_5 [ 1 ] ) ; } return VAR_1 . METHOD_4 ( VAR_8 , VAR_2 , false ) ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_3 arg = METHOD_2 ( ) ; position = arg . getInt ( VAR_4 ) ; if ( VAR_3 != null ) { double [ ] VAR_5 = VAR_3 . METHOD_3 ( VAR_6 ) ; if ( VAR_5 != null ) VAR_7 = new TYPE_4 ( VAR_5 [ 0 ] , VAR_5 [ 1 ] ) ; } return VAR_1 . METHOD_4 ( VAR_8 , VAR_2 , false ) ; }\n"}
{"problem": "public static void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; android.content.Intent intent = new android.content.Intent ( context , VAR_4 class ) ; intent . METHOD_2 ( VAR_5 , VAR_1 ) ; intent . METHOD_2 ( VAR_6 , VAR_2 ) ; context . METHOD_3 ( intent ) ; VAR_3 . METHOD_4 ( VAR_1 , VAR_2 ) ; }\n", "fixed": "public static void METHOD_1 ( android.content.Context context , java.lang.String VAR_1 , java.lang.String VAR_2 ) { android.content.Intent intent = new android.content.Intent ( context , VAR_4 class ) ; intent . METHOD_2 ( VAR_5 , VAR_1 ) ; intent . METHOD_2 ( VAR_6 , VAR_2 ) ; context . METHOD_3 ( intent ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String data = STRING_1 ; TYPE_2 VAR_2 = METHOD_2 ( ) ; java.lang.String [ ] VAR_3 = new java.lang.String [ ] { STRING_2 , STRING_3 , STRING_4 } ; TYPE_1 VAR_4 = VAR_2 . query ( VAR_5 , VAR_3 , ( ( ( VAR_6 ) + STRING_5 ) + VAR_1 ) , null , null , null , null ) ; return VAR_4 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String data = STRING_1 ; TYPE_2 VAR_2 = METHOD_2 ( ) ; TYPE_1 VAR_4 = VAR_2 . query ( VAR_5 , null , ( ( ( VAR_6 ) + STRING_5 ) + VAR_1 ) , null , null , null , null ) ; return VAR_4 ; }\n"}
{"problem": "public static boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_1 . get ( ) ; if ( TYPE_3 . METHOD_2 ( ) . equals ( VAR_2 . METHOD_3 ( ) ) ) { return true ; } else { return true ; } }\n", "fixed": "public static boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = VAR_1 . get ( ) ; if ( TYPE_3 . METHOD_2 ( ) . equals ( VAR_2 . METHOD_3 ( ) ) ) { return true ; } else { return false ; } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ( ) - > { try { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( true ) ; } catch ( java.lang.Exception VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } } ) ; }\n", "fixed": "public static void main ( final java.lang.String [ ] args ) { TYPE_1 . METHOD_1 ( ( ) - > { try { final TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( true ) ; } catch ( final java.lang.Exception VAR_2 ) { VAR_2 . METHOD_3 ( ) ; } } ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 path ) throws java.io.IOException { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 VAR_1 = VAR_2 . METHOD_3 ( path ) ; if ( ! ( VAR_1 . METHOD_4 ( ) ) ) VAR_1 . open ( ) ; METHOD_5 ( VAR_1 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 path ) throws java.io.IOException { TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 VAR_1 = VAR_2 . METHOD_3 ( path ) ; if ( VAR_1 != null ) { if ( ! ( VAR_1 . METHOD_4 ( ) ) ) VAR_1 . open ( ) ; METHOD_5 ( VAR_1 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { short VAR_3 = INT_1 ; try { short position = VAR_1 . METHOD_2 ( ( ( short ) ( INT_1 ) ) ) ; if ( position < 0 ) { VAR_1 . METHOD_3 ( VAR_3 , ( ( short ) ( INT_2 ) ) ) ; } else { VAR_1 . METHOD_3 ( VAR_3 , ( ( short ) ( - INT_2 ) ) ) ; } } catch ( java.lang.Exception VAR_4 ) { } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { short VAR_3 = INT_1 ; try { if ( VAR_2 ) { short position = VAR_1 . METHOD_2 ( ( ( short ) ( INT_1 ) ) ) ; VAR_1 . METHOD_3 ( VAR_3 , ( ( short ) ( INT_2 ) ) ) ; } else { VAR_1 . METHOD_3 ( VAR_3 , ( ( short ) ( - INT_2 ) ) ) ; } } catch ( java.lang.Exception VAR_4 ) { } }\n"}
{"problem": "public void METHOD_1 ( int index , java.lang.Object value ) { try { VAR_1 . set ( ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) . METHOD_3 ( index , value ) ) ; } catch ( TYPE_2 VAR_2 ) { throw METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( int index , java.lang.Object value ) { if ( index < 0 ) return ; try { VAR_1 . set ( ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) . METHOD_3 ( index , value ) ) ; } catch ( TYPE_2 VAR_2 ) { throw METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; } }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = null ; try { VAR_2 . open ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_1 ( ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_2 . METHOD_3 ( STRING_1 , ( ( ( VAR_3 . METHOD_4 ( ) ) + \"\\n\" ) + ( METHOD_5 ( VAR_3 ) ) ) ) ; } finally { VAR_2 . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; } return VAR_1 ; }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = null ; VAR_2 . open ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_1 = VAR_2 . METHOD_1 ( ) ; VAR_2 . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; return VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 ) { TYPE_1 a = METHOD_2 ( ) ; if ( a == null ) { a = new TYPE_1 ( ) ; } else { a = new TYPE_1 ( VAR_1 , a . METHOD_3 ( ) , a . METHOD_4 ( ) , a . METHOD_5 ( ) , a . METHOD_6 ( ) , a . METHOD_7 ( ) ) ; } a . METHOD_1 ( VAR_1 ) ; METHOD_8 ( a ) ; }\n", "fixed": "public void METHOD_1 ( int VAR_1 ) { TYPE_1 a = METHOD_2 ( ) ; if ( a == null ) { a = new TYPE_1 ( ) ; a . METHOD_1 ( VAR_1 ) ; } else { a = new TYPE_1 ( VAR_1 , a . METHOD_3 ( ) , a . METHOD_4 ( ) , a . METHOD_5 ( ) , a . METHOD_6 ( ) , a . METHOD_7 ( ) ) ; } METHOD_8 ( a ) ; }\n"}
{"problem": "public static char METHOD_1 ( java.util.Scanner VAR_1 ) { if ( VAR_1 == null ) { VAR_1 = new java.util.Scanner ( VAR_2 ) ; } char VAR_3 = CHAR_1 ; boolean VAR_4 = true ; while ( VAR_4 ) { try { VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( 0 ) ; VAR_4 = false ; } catch ( TYPE_1 VAR_5 ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } } if ( VAR_1 != null ) { VAR_1 . METHOD_4 ( ) ; } return VAR_3 ; }\n", "fixed": "public static char METHOD_1 ( java.util.Scanner VAR_1 ) { if ( VAR_1 == null ) { VAR_1 = new java.util.Scanner ( VAR_2 ) ; } char VAR_3 = CHAR_1 ; boolean VAR_4 = true ; while ( VAR_4 ) { try { VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( 0 ) ; VAR_4 = false ; } catch ( TYPE_1 VAR_5 ) { VAR_1 . METHOD_2 ( ) ; java.lang.System.out.println ( STRING_1 ) ; } } return VAR_3 ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String url ) { VAR_1 . add ( new TYPE_1 ( url ) ) ; if ( ( VAR_1 . size ( ) ) == 1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { METHOD_4 ( VAR_1 . METHOD_3 ( ) . url , VAR_1 . METHOD_3 ( ) . VAR_2 ) ; } } METHOD_5 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String url ) { VAR_1 . add ( new TYPE_1 ( url ) ) ; if ( ( VAR_1 . size ( ) ) == 1 ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { java.lang.System.out.println ( VAR_1 . METHOD_3 ( ) . VAR_2 ) ; METHOD_4 ( VAR_1 . METHOD_3 ( ) . url , VAR_1 . METHOD_3 ( ) . VAR_2 ) ; } } METHOD_5 ( ) ; }\n"}
{"problem": "private void METHOD_1 ( final java.lang.String VAR_1 ) throws TYPE_1 { try { TYPE_2 path = TYPE_3 . get ( VAR_1 ) ; TYPE_4 . delete ( path ) ; if ( ! ( TYPE_4 . METHOD_2 ( path . METHOD_3 ( ) ) . iterator ( ) . METHOD_4 ( ) ) ) { TYPE_4 . delete ( path . METHOD_3 ( ) ) ; } } catch ( java.lang.Exception VAR_2 ) { throw new TYPE_1 ( METHOD_5 ( VAR_3 , STRING_1 ) ) ; } }\n", "fixed": "private void METHOD_1 ( final java.lang.String VAR_1 ) throws TYPE_1 { try { TYPE_2 path = TYPE_3 . get ( VAR_1 ) ; TYPE_4 . delete ( path ) ; if ( ! ( TYPE_4 . METHOD_2 ( path . METHOD_3 ( ) ) . iterator ( ) . METHOD_4 ( ) ) ) { TYPE_4 . delete ( path . METHOD_3 ( ) ) ; } } catch ( java.lang.Exception VAR_2 ) { throw new TYPE_1 ( VAR_2 , METHOD_5 ( VAR_3 , STRING_1 ) ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { while ( true ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; for ( TYPE_2 VAR_2 : this ) { if ( ( VAR_1 - ( VAR_3 ) ) >= ( VAR_4 ) ) { VAR_2 . execute ( ) ; VAR_3 = VAR_1 ; try { java.lang.Thread . METHOD_3 ( INT_1 ) ; } catch ( TYPE_3 VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } } } } }\n", "fixed": "public void METHOD_1 ( ) { while ( true ) { long VAR_1 = TYPE_1 . METHOD_2 ( ) ; for ( TYPE_2 VAR_2 : this ) { if ( ( VAR_1 - ( VAR_3 ) ) >= ( VAR_4 ) ) { VAR_2 . execute ( ) ; VAR_3 = VAR_1 ; try { java.lang.Thread . METHOD_3 ( INT_1 ) ; } catch ( TYPE_3 VAR_5 ) { } } } } }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( STRING_1 , ( ( ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 . token ) ) ) . getText ( ) ) + STRING_2 ) ) ; VAR_1 . commit ( ) ; METHOD_4 ( ) ; android.content.Intent intent = new android.content.Intent ( METHOD_5 ( ) , VAR_3 class ) ; intent . METHOD_6 ( VAR_4 ) ; METHOD_5 ( ) . METHOD_7 ( intent ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( STRING_1 , ( ( ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 . token ) ) ) . getText ( ) ) + STRING_2 ) ) ; VAR_1 . commit ( ) ; METHOD_4 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_6 ( VAR_4 ) ; this . METHOD_7 ( intent ) ; }\n"}
{"problem": "protected java.util.Collection < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Set < java.lang.String > VAR_2 = TYPE_2 . METHOD_2 ( ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != null ) { for ( TYPE_3 VAR_3 : VAR_1 . METHOD_3 ( ) ) { if ( ( ! ( TYPE_4 . isEmpty ( VAR_3 . METHOD_4 ( ) ) ) ) && ( ! ( VAR_3 . METHOD_5 ( ) ) ) ) { VAR_2 . add ( VAR_3 . METHOD_4 ( ) ) ; } } } return VAR_2 ; }\n", "fixed": "protected java.util.Collection < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Set < java.lang.String > VAR_2 = TYPE_2 . METHOD_2 ( ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != null ) { for ( TYPE_3 VAR_3 : VAR_1 . METHOD_3 ( ) ) { if ( ! ( TYPE_4 . isEmpty ( VAR_3 . METHOD_4 ( ) ) ) ) { VAR_2 . add ( VAR_3 . METHOD_4 ( ) ) ; } } } return VAR_2 ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : TYPE_2 . METHOD_3 ( this ) ; return true ; case VAR_2 : TYPE_3 . METHOD_4 ( METHOD_5 ( ) ) ; return true ; case VAR_3 : TYPE_4 . METHOD_6 ( this ) ; return true ; } return super . METHOD_1 ( item ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { switch ( item . METHOD_2 ( ) ) { case VAR_1 : TYPE_2 . METHOD_3 ( this ) ; return true ; case VAR_2 : TYPE_3 . METHOD_4 ( this ) ; return true ; case VAR_3 : TYPE_4 . METHOD_6 ( this ) ; return true ; } return super . METHOD_1 ( item ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { int VAR_1 = java.lang.Integer.parseInt ( METHOD_2 ( ) . getText ( ) ) ; VAR_2 . METHOD_3 ( ( ( METHOD_4 ( ) ) - ( METHOD_5 ( ) ) ) , VAR_2 . METHOD_6 ( VAR_1 ) ) ; VAR_3 . setText ( ( STRING_1 + ( VAR_4 . get ( VAR_1 ) ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { int VAR_1 = java.lang.Integer.parseInt ( METHOD_2 ( ) . getText ( ) ) ; VAR_2 . METHOD_3 ( ( ( METHOD_4 ( ) ) - ( METHOD_5 ( ) ) ) , VAR_2 . METHOD_6 ( VAR_1 ) ) ; VAR_3 . setText ( ( STRING_1 + ( VAR_4 . get ( new java.lang.Long ( VAR_1 ) ) ) ) ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_1 ( METHOD_3 ( ) ) ; if ( ( VAR_1 ) < INT_1 ) METHOD_4 ( ) ; if ( VAR_2 . isEmpty ( ) ) return ; for ( int i = VAR_2 . size ( ) ; i > 0 ; i -- ) { VAR_2 . get ( i ) . METHOD_5 ( METHOD_2 ( ) . METHOD_1 ( VAR_2 . get ( i ) . METHOD_3 ( ) ) ) ; } }\n", "fixed": "public void METHOD_1 ( ) { METHOD_5 ( METHOD_2 ( ) . METHOD_1 ( METHOD_3 ( ) ) ) ; if ( ( VAR_1 ) < INT_1 ) METHOD_4 ( ) ; if ( VAR_2 . isEmpty ( ) ) return ; for ( int i = ( VAR_2 . size ( ) ) - 1 ; i >= 0 ; i -- ) { VAR_2 . get ( i ) . METHOD_5 ( METHOD_2 ( ) . METHOD_1 ( VAR_2 . get ( i ) . METHOD_3 ( ) ) ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String ... VAR_2 ) { if ( VAR_2 == null ) { return false ; } TYPE_1 p = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; for ( java.lang.String VAR_4 : VAR_2 ) { if ( VAR_4 != null ) { java.util.regex.Matcher VAR_5 = p . METHOD_3 ( VAR_4 ) ; if ( VAR_5 . METHOD_4 ( ) ) { return true ; } } } return false ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String ... VAR_2 ) { final TYPE_1 pattern = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; for ( java.lang.String VAR_4 : VAR_2 ) { if ( VAR_4 != null ) { java.util.regex.Matcher VAR_5 = pattern . METHOD_3 ( VAR_4 ) ; if ( VAR_5 . METHOD_4 ( ) ) { return true ; } } } return false ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; if ( VAR_1 instanceof TYPE_2 ) { TYPE_1 . METHOD_4 ( STRING_2 ) ; METHOD_5 ( ( ( TYPE_2 ) ( VAR_1 ) ) . getIntent ( ) , VAR_2 ) ; } else if ( VAR_1 instanceof java.io.IOException ) { new TYPE_3 ( this ) . METHOD_6 ( VAR_3 ) . METHOD_7 ( VAR_4 ) . METHOD_8 ( VAR_5 , null ) . show ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; METHOD_3 ( ) ; if ( VAR_1 instanceof TYPE_2 ) { TYPE_1 . METHOD_4 ( STRING_2 ) ; METHOD_5 ( ( ( TYPE_2 ) ( VAR_1 ) ) . getIntent ( ) , VAR_2 ) ; } else { new TYPE_3 ( this ) . METHOD_6 ( VAR_3 ) . METHOD_7 ( VAR_4 ) . METHOD_8 ( VAR_5 , null ) . show ( ) ; } }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.System.out.print ( STRING_1 ) ; java.lang.String name = VAR_1 . METHOD_1 ( ) ; java.lang.System.out.print ( STRING_2 ) ; int VAR_3 = VAR_1 . METHOD_2 ( ) ; java.lang.System.out.print ( STRING_3 ) ; java.lang.String VAR_4 = VAR_1 . METHOD_1 ( ) ; java.lang.System.out.print ( ( STRING_4 + name ) ) ; java.lang.System.out.print ( ( STRING_5 + VAR_3 ) ) ; java.lang.System.out.print ( ( STRING_6 + VAR_4 ) ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { java.util.Scanner VAR_1 = new java.util.Scanner ( VAR_2 ) ; java.lang.System.out.print ( STRING_1 ) ; java.lang.String name = VAR_1 . METHOD_1 ( ) ; java.lang.System.out.print ( STRING_2 ) ; int VAR_3 = VAR_1 . METHOD_2 ( ) ; java.lang.System.out.print ( STRING_3 ) ; java.lang.String VAR_4 = VAR_1 . METHOD_1 ( ) ; java.lang.System.out.println ( ( STRING_4 + name ) ) ; java.lang.System.out.println ( ( STRING_5 + VAR_3 ) ) ; java.lang.System.out.println ( ( STRING_6 + VAR_4 ) ) ; }\n"}
{"problem": "public java.lang.String remove ( java.lang.String key ) { TYPE_1 node = VAR_1 ; while ( ( node != ( VAR_2 ) ) && ( ! ( key . equals ( node . key ) ) ) ) { node = VAR_3 ; } if ( node == null ) return null ; java.lang.String VAR_4 = node . value ; VAR_5 = VAR_3 ; VAR_6 = VAR_7 ; ( size ) -- ; return VAR_4 ; }\n", "fixed": "public java.lang.String remove ( java.lang.String key ) { TYPE_1 node = VAR_1 ; while ( ( node != ( VAR_2 ) ) && ( ! ( key . equals ( node . key ) ) ) ) { node = VAR_3 ; } if ( node == ( VAR_2 ) ) return null ; java.lang.String VAR_4 = node . value ; VAR_5 = VAR_3 ; VAR_6 = VAR_7 ; ( size ) -- ; return VAR_4 ; }\n"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . info ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; TYPE_2 VAR_1 = VAR_2 ; try { METHOD_3 ( ) ; VAR_1 = VAR_3 ; METHOD_4 ( ) ; VAR_1 = VAR_4 ; METHOD_5 ( ) ; } catch ( TYPE_3 VAR_5 ) { VAR_1 . METHOD_6 ( true ) ; throw VAR_5 ; } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_2 VAR_1 = VAR_2 ; try { METHOD_3 ( ) ; VAR_1 = VAR_3 ; METHOD_4 ( ) ; VAR_1 = VAR_4 ; METHOD_5 ( ) ; } catch ( TYPE_3 VAR_5 ) { VAR_1 . METHOD_6 ( true ) ; throw VAR_5 ; } }\n"}
{"problem": "public void METHOD_1 ( java.util.List < java.io.File > VAR_1 ) { VAR_2 . info ( ( ( STRING_1 + ( VAR_1 . size ( ) ) ) + STRING_2 ) ) ; TYPE_1 VAR_3 = new TYPE_2 ( VAR_4 , VAR_5 , VAR_6 , false , false , INT_1 ) ; VAR_7 = new TYPE_3 ( VAR_1 , VAR_3 , INT_2 , INT_3 ) ; VAR_7 . METHOD_2 ( ) ; VAR_8 = TYPE_4 . start ( VAR_1 , null ) ; VAR_9 = TYPE_5 . METHOD_3 ( ) ; }\n", "fixed": "public void METHOD_1 ( java.util.List < java.io.File > VAR_1 ) { VAR_2 . info ( ( ( STRING_1 + ( VAR_1 . size ( ) ) ) + STRING_2 ) ) ; TYPE_1 VAR_3 = new TYPE_2 ( VAR_4 , VAR_5 , VAR_6 , false , false , INT_1 ) ; VAR_7 = new TYPE_3 ( VAR_1 , VAR_3 , INT_2 , INT_3 ) ; VAR_7 . METHOD_2 ( ) ; VAR_8 = TYPE_4 . start ( VAR_1 ) ; VAR_9 = TYPE_5 . METHOD_3 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 result ) { while ( ( VAR_1 . METHOD_2 ( ) ) > 0 ) VAR_1 . remove ( VAR_1 . METHOD_3 ( 0 ) ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . add ( result ) ; for ( final TYPE_1 VAR_3 : VAR_2 ) for ( final TYPE_2 VAR_4 : VAR_3 . METHOD_5 ( ) ) { METHOD_6 ( VAR_3 , VAR_4 ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 result ) { while ( ( VAR_1 . METHOD_2 ( ) ) > 0 ) VAR_1 . remove ( VAR_1 . METHOD_3 ( 0 ) ) ; VAR_2 . METHOD_4 ( ) ; if ( result != null ) { VAR_2 . add ( result ) ; for ( final TYPE_1 VAR_3 : VAR_2 ) for ( final TYPE_2 VAR_4 : VAR_3 . METHOD_5 ( ) ) { METHOD_6 ( VAR_3 , VAR_4 ) ; } } }\n"}
{"problem": "static TYPE_1 METHOD_1 ( TYPE_1 target , TYPE_1 VAR_1 ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { TYPE_2 VAR_2 = VAR_3 [ i ] ; TYPE_1 c = VAR_2 . METHOD_2 ( target ) ; if ( c != VAR_1 ) return c ; } throw new TYPE_3 ( STRING_1 ) ; }\n", "fixed": "static TYPE_1 METHOD_1 ( TYPE_1 target , TYPE_1 VAR_1 ) { for ( int i = 0 ; i < INT_1 ; i ++ ) { TYPE_2 VAR_2 = VAR_3 [ i ] ; if ( VAR_2 == null ) continue ; TYPE_1 c = VAR_2 . METHOD_2 ( target ) ; if ( c != VAR_1 ) return c ; } throw new TYPE_3 ( STRING_1 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 != null ) && ( ! ( TYPE_4 . isEmpty ( VAR_4 ) ) ) ) { try { return new TYPE_1 ( VAR_3 ) ; } catch ( TYPE_5 VAR_5 ) { TYPE_6 . METHOD_3 ( VAR_6 , ( STRING_1 + VAR_1 ) , VAR_5 ) ; } } return null ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 != null ) && ( ! ( TYPE_4 . isEmpty ( VAR_4 ) ) ) ) { return new TYPE_1 ( VAR_3 ) ; } return null ; }\n"}
