{"similarity_score": 0.9826707441386341, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8cbe5e1016ace2f3387f5b29b478bedb", "bug_code_uid": "f0195aba2b2ae6b3d6aec23af6583d84", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "945ae1b54d4bfa5330a5e6d34dc3db42", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nlong long ceilFrac(long long a, long long b) {\r\n    return a % b ? a / b + 1 : a / b;\r\n}\r\n\r\nint main() {\r\n    int nSets;\r\n    scanf(\"%d\", &nSets);\r\n\r\n    for (int i = 1; i <= nSets; i++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        long long column = ceilFrac(x, n);\r\n        long long line = x % n;\r\n        long long ans = n == 1 && m == 1 ? 1 : m * line - (m - column);\r\n\r\n        printf(\"%lld\\n\", ans);\r\n\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nlong long ceilFrac(long long a, long long b) {\r\n    return a % b ? a / b + 1 : a / b;\r\n}\r\n\r\nint main() {\r\n    int nSets;\r\n    scanf(\"%d\", &nSets);\r\n\r\n    for (int i = 1; i <= nSets; i++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        long long column = ceilFrac(x, n);\r\n        long long line = x % n != 0 ? x % n : n;\r\n        long long ans = n == 1 && m == 1 ? 1 : m * line - (m - column);\r\n\r\n        printf(\"%lld\\n\", ans);\r\n\r\n    }\r\n}"}
{"similarity_score": 0.7211413748378729, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "97e04203934ded00d5e6f14f2324dd9e", "bug_code_uid": "4052d8721d02416c5ac1e1344180d91a", "src_uid": "fce9d78ad7d4ea01be1704f588e42d37", "apr_id": "195e9beb25440f1d19f2a1f83f374141", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n int rad,dis,sausage;int x,y,r,count=0,distance;\n scanf(\"%d%d%d\",&rad,&dis,&sausage);\n while(sausage--)\n {\n    scanf(\"%d%d%d\",&x,&y,&r);\n    distance=pow((pow(x,2)+pow(y,2)),1/2);\n    if(disance>=rad-dis+r&&distance<=rad-r)\n    count++;\n    \n    \n    \n    \n }printf(\"%d\",count);\n   return 0;\n   \n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n int rad,dis,sausage;int x,y,r,count=0,distance;\n scanf(\"%d%d%d\",&rad,&dis,&sausage);\n while(sausage--)\n {\n    \n    scanf(\"%d%d%d\",&x,&y,&r);\n    distance=(x*x+y*y);\n    if(dis==0)\n   { if(distance==pow(rad,2)&&r==0)\n    count++;}\n    else\n    {if(distance>=pow((rad-dis+r),2)&&distance<=pow((rad-r),2))\n    count++;}\n    \n    \n    \n    \n }printf(\"%d\",count);\n   return 0;\n   \n}"}
{"similarity_score": 0.9935256032960565, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cb2d4cc85465b28ab499ea58c7ed1200", "bug_code_uid": "6ffd2b1a3363ddd43c82be4baeb354ac", "src_uid": "19ba94b8d223cc153d387287ce50ee1a", "apr_id": "c3fd104215d7ff83272ce76505a3d92b", "difficulty": 2100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define\tLLD\t\"%lld\"\nint a[200007],n,k;\nint x[200007];\nint log2(long long x){\n\tlong long i;\n\tint j;\n\tfor(i=1,j=1;i<x;i<<=1){\n\t\tj++;\n\t}\n}\nint cat(int i){\n\tint j,r;\n\tlong long p,s;\n\tp=1;\n\ts=0;\n\tr=0;\n\tfor(j=i;j!=-1;j=x[j]){\n\t\tif(log2(p)+log2(a[j])>=60){\n\t\t\treturn r;\n\t\t}\n\t\tp*=a[j];\n\t\ts+=a[j];\n\t\tif(p%k==0){\n\t\t\tif(p/k-s>=0){\n\t\t\t\tif(j-x[j]-1>=p/k-s){\n\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ts+=j-x[j]-1;\n\t}\n\treturn r;\n}\nvoid run(){\n\tint i,j;\n\tlong long r;\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF){\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++){\n\t\t\tx[i]=-1;\n\t\t}\n\t\tj=-1;\n\t\tfor(i=0;i<=n;i++){\n\t\t\tx[i]=j;\n\t\t\tif(a[i]>1){\n\t\t\t\tj=i;\n\t\t\t}\n\t\t}\n\t\tr=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tr+=cat(i);\n\t\t}\n\t\tprintf(LLD\"\\n\",r);\n\t}\n}\nmain(){\n#ifndef\tONLINE_JUDGE\n\tfreopen(\"4892d_min.in\",\"rb\",stdin);\n\tfreopen(\"4892d_.out\",\"wb\",stdout);\n#endif\n\trun();\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define\tLLD\t\"%lld\"\nint a[200007],n,k;\nint x[200007];\nint log2(long long x){\n\tlong long i;\n\tint j;\n\tfor(i=1,j=1;i<x;i<<=1){\n\t\tj++;\n\t}\n\treturn j;\n}\nint cat(int i){\n\tint j,r;\n\tlong long p,s;\n\tp=1;\n\ts=0;\n\tr=0;\n\tfor(j=i;j!=-1;j=x[j]){\n\t\tif(log2(p)+log2(a[j])>=60){\n\t\t\treturn r;\n\t\t}\n\t\tp*=a[j];\n\t\ts+=a[j];\n\t\tif(p%k==0){\n\t\t\tif(p/k-s>=0){\n\t\t\t\tif(j-x[j]-1>=p/k-s){\n\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ts+=j-x[j]-1;\n\t}\n\treturn r;\n}\nvoid run(){\n\tint i,j;\n\tlong long r;\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF){\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++){\n\t\t\tx[i]=-1;\n\t\t}\n\t\tj=-1;\n\t\tfor(i=0;i<=n;i++){\n\t\t\tx[i]=j;\n\t\t\tif(a[i]>1){\n\t\t\t\tj=i;\n\t\t\t}\n\t\t}\n\t\tr=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tr+=cat(i);\n\t\t}\n\t\tprintf(LLD\"\\n\",r);\n\t}\n}\nmain(){\n#ifndef\tONLINE_JUDGE\n\tfreopen(\"4892d_min.in\",\"rb\",stdin);\n\tfreopen(\"4892d_.out\",\"wb\",stdout);\n#endif\n\trun();\n\treturn 0;\n}\n"}
{"similarity_score": 0.600451467268623, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "874387ee3a76eb70e392de64a9148ca7", "bug_code_uid": "60bd4d72a588fbb0f864ae78f056934b", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "56eb1edf9b1fc1f1742c39748981ff52", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid eliminar(char s[],int i);\n\nint main()\n{\n    char s[200001] = \"\";\n    char aux[200001] = \"\";\n    scanf(\"%s\",s);\n    int k,j;\n    k = j = 0;\n    aux[k] = s[j];\n    ++j;\n    do{\n        if(aux[k] != s[j])\n        {\n            ++k;\n            aux[k] = s[j];\n            ++j;\n        }\n        else\n        {\n            ++j;\n            --k;\n        }\n    }while( j < strlen(s));\n    aux[k+1] = '\\0';\n\n    printf(\"%s\",aux);\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n\nint main()\n{\n    char s[200001] = \"\";\n    char aux[200001] = \"\";\n   // scanf(\"%s\",s);\n    int k,j;\n    char c;\n    k = -1;\n    while((c = getchar()) != '\\n'){\n        if(aux[k] != c)\n        {\n            ++k;\n            aux[k] = c;\n\n        }\n        else\n        {\n            --k;\n        }\n    }\n    aux[k+1] = '\\0';\n\n   printf(\"%s\",aux);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9606299212598425, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1ff2ca64f5db333646da946675e97c9d", "bug_code_uid": "cb2f1b863077b2c729474c8ed63336ff", "src_uid": "fb77c9339250f206e7188b951902a221", "apr_id": "0231f5efad1867c18174c528d5f7ac7b", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int a[5000]={0},b,c,d,i,j,l,m,o,p,s=0,t=0;\nscanf(\"%d %d\",&b,&c);\nfor(i=1;i<=c;i++)\n{\n    scanf(\"%d\",&j);\n    if(j==2){scanf(\"%d\",&o);a[o]=1;}\n    else if(j==1){scanf(\"%d\",&o);a[o]=1;scanf(\"%d\",&p);a[p]=1;}\n    }\n    for(i=1;i<b;i++)\n    {\n        if(a[i]==0){s++;}\n        if(a[i]==0&&a[i-1]==0){t++;a[i]=1;}\n    }\n    printf(\"%d %d\\n\",t,s);\n}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{int a[5000]={0},b,c,d,i,j,l,m,o,p,s=0,t=0;\nscanf(\"%d %d\",&b,&c);\nfor(i=1;i<=c;i++)\n{\n    scanf(\"%d\",&j);\n    if(j==2){scanf(\"%d\",&o);a[o]=1;}\n    else if(j==1){scanf(\"%d\",&o);a[o]=1;scanf(\"%d\",&p);a[p]=1;}\n    }\n    for(i=1;i<b;i++)\n    {\n        if(a[i]==0){s++;}\n        if(i!=1&&a[i]==0&&a[i-1]==0){t++;a[i]=1;}\n    }\n    printf(\"%d %d\\n\",s-t,s);\n}\n\n\n\n"}
{"similarity_score": 0.9971014492753624, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "63617b9c9a1ca5910f558e8adc50bcfe", "bug_code_uid": "ba3c0387abcae957cbd441f1d548b6d6", "src_uid": "a063705bd0ce1e17ccaafbbfc2663d93", "apr_id": "e590f65f5fc3822ad7e27c40ff90cbdb", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int likes = 0;\r\n        int users;\r\n        scanf(\"%d\", &users);\r\n\r\n        for (int set_number = 1; set_number <= users; set_number++) {\r\n            int typeOfuser;\r\n            scanf(\"%d\", &typeOfuser);\r\n\r\n            if (typeOfuser == 1 || typeOfuser == 3)\r\n                likes++;\r\n        }\r\n        printf(\"%d\", likes);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int likes = 0;\r\n        int users;\r\n        scanf(\"%d\", &users);\r\n\r\n        for (int set_number = 1; set_number <= users; set_number++) {\r\n            int typeOfuser;\r\n            scanf(\"%d\", &typeOfuser);\r\n\r\n            if (typeOfuser == 1 || typeOfuser == 3)\r\n                likes++;\r\n        }\r\n        printf(\"%d \\n\", likes);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.76751269035533, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3cd4e4e3cfcb4376536f470c922240bf", "bug_code_uid": "ca4a261c1c4fa73313986288cfc63673", "src_uid": "1d8870a705036b9820227309d74dd1e8", "apr_id": "610fe178840924df0bf3dd67a8ae7ca7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(int argc, char *argv[]) \n{\n\tint num,i,a,b,c,suma=0,sumb=0,totala=0,totalb=0;\n\tscanf(\"%d\",&num);\n\tfor(i=0;i<num;i++)\n\t{\n\t\t\n\t\tscanf(\"%d\",&num);\n\t\t\n\t\tfor(i=0;i<num;i++)\n\t\t{\n\t\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\t\tif(a==1)\n\t\t\t{\n\t\t\t\ttotala+=10;\n\t\t\t\tsuma+=b;\n\t\t\t}\n\t\t\tif(a==b)\n\t\t\t{\n\t\t\t\ttotalb+=10;\n\t\t\t\tsumb+=b;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\tif(suma>=totala/2)\n\t\t\tprintf(\"LIVE\\n\");\n\t\telse\n\t\t\tprintf(\"DEAD\\n\");\n\t\t\n\t\tif(sumb>=totalb/2)\n\t\t\tprintf(\"LIVE\");\n\t\telse\n\t\t\tprintf(\"DEAD\");\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(int argc, char *argv[]) \n{\n\tint num,i,a,b,c,suma=0,sumb=0,totala=0,totalb=0;\n\tscanf(\"%d\",&num);\n\t\t\n\tfor(i=0;i<num;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\tif(a==1)\n\t\t{\n\t\t\ttotala+=10;\n\t\t\tsuma+=b;\n\t\t}\n\t\tif(a==2)\n\t\t{\n\t\t\ttotalb+=10;\n\t\t\tsumb+=b;\n\t\t}\n\t}\n\t\t\n\t\t\n\tif(suma>=totala/2)\n\t\t\tprintf(\"LIVE\\n\");\n\t\telse\n\t\t\tprintf(\"DEAD\\n\");\n\t\t\n\t\tif(sumb>=totalb/2)\n\t\t\tprintf(\"LIVE\");\n\t\telse\n\t\t\tprintf(\"DEAD\");\n}"}
{"similarity_score": 0.998046875, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "235d8eee8f3432e4b5f923766112beb4", "bug_code_uid": "2810b664f126945d8fb0b5dbf1902221", "src_uid": "2deed55e860bd69ff0ba3973a1d73cac", "apr_id": "b53317241fd7ce9c5f2a1c828c5df868", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,max,min,x;\r\n    int i,j,k,l;\r\n    scanf(\"%d\",&t);\r\n    long long a;\r\n    long long f=1;\r\n    long long b[100000];\r\n    for(i=0;i<t;i++)\r\n    {\r\n        f=1;\r\n        scanf(\"%d\",&n);\r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&b[j]);\r\n        }\r\n        for(j=0;j<n;j++)\r\n        {\r\n            a=b[j]*b[j+1];\r\n            if(a>=f)\r\n                {\r\n                f=a;\r\n                }\r\n        }\r\n        printf(\"%lld\\n\",f);\r\n    }\r\n\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,max,min,x;\r\n    int i,j,k,l;\r\n    scanf(\"%d\",&t);\r\n    long long a;\r\n    long long f=1;\r\n    long long b[100000];\r\n    for(i=0;i<t;i++)\r\n    {\r\n        f=1;\r\n        scanf(\"%d\",&n);\r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&b[j]);\r\n        }\r\n        for(j=0;j<n-1;j++)\r\n        {\r\n            a=b[j]*b[j+1];\r\n            if(a>=f)\r\n                {\r\n                f=a;\r\n                }\r\n        }\r\n        printf(\"%lld\\n\",f);\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.9991460290350128, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "97a26a01010a71b0591e575b763220a3", "bug_code_uid": "cabf442a98c48dea221c7db74571afc4", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "425ee56af08d2be495337b4a14528888", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,max;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    int p=0,q=0,r=0;\n    for(i=0; i<n; i++)\n    {\n        if(a[i]==1)\n            p++;\n        else if(a[i]==2)\n            q++;\n        else r++;\n\n    }\n    if(p>q)\n    {\n        if(p>r)\n        {\n            max=p;\n        }\n        else\n        {\n            max=r;\n        }\n    }\n    else\n    {\n        if(q>r)\n        {\n            max=q;\n        }\n        else\n        {\n            max=r;\n        }\n    }\nprintf(\"%d\",n-max);\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[1000005],i,max;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    int p=0,q=0,r=0;\n    for(i=0; i<n; i++)\n    {\n        if(a[i]==1)\n            p++;\n        else if(a[i]==2)\n            q++;\n        else r++;\n\n    }\n    if(p>q)\n    {\n        if(p>r)\n        {\n            max=p;\n        }\n        else\n        {\n            max=r;\n        }\n    }\n    else\n    {\n        if(q>r)\n        {\n            max=q;\n        }\n        else\n        {\n            max=r;\n        }\n    }\nprintf(\"%d\",n-max);\nreturn 0;}\n"}
{"similarity_score": 0.8977469670710572, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a50d19b1f3230467ce577c55b6527acc", "bug_code_uid": "e6b4ad4d6ea87386c75f04cb3d77685d", "src_uid": "ac248c83c99d8a2262772816b5f4ac6e", "apr_id": "e51ac12469804a40138dfe2d2c7c21c6", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    int t,i,n,m;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        \n            printf(\"%d\\n\",n);\n            for(i=n;i>=1;i--){\n                printf(\"%d \",i);\n            }\n            printf(\"\\n\");\n        \n    }\n}", "fixed": "#include<stdio.h>\n\nint main() {\n    int t,i,n;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n            \n            printf(\"%d\\n\",n);\n            for(i=1;i<=n;i++){\n                printf(\"%d \",i);\n            }\n            printf(\"\\n\");\n        \n    }\n    // printf(\"1\\n2\\n5\\n3 3 3 1 2\\n\");\n}"}
{"similarity_score": 0.9883268482490273, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1fb4bbfc66877433d8fa1fcd16c4af9a", "bug_code_uid": "3aba618adb6a4b2414d1a16517bff1bf", "src_uid": "fa253aabcccd487d09142ea882abbc1b", "apr_id": "56541e5886cb1473ec339c39cbd7275c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t,n,k,i,a,j,c;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d\",&n,&k);\n        char str[n+1];\n        str[n]='\\0';\n        a=97;\n        a=a+k;\n        j=0;\n        for(c=0;c<n;c++){\n            for(i=97;i<a;i++,j++){\n                str[j]=i;\n            }\n            c=j;\n        }\n        printf(\"%s\\n\",str);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t,n,k,i,a,j,c;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d\",&n,&k);\n        char str[n+1];\n        str[n]='\\0';\n        a=97;\n        a=a+k;\n        j=0;\n        for(c=0;c<n;){\n            for(i=97;i<a&&j<n;i++,j++){\n                str[j]=i;\n            }\n            c=j;\n        }\n       printf(\"%s\\n\",str);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.706983441324694, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5681a233554115b53b76e88d07ae7db6", "bug_code_uid": "5248b5068bc4ea61ac7e578de4bc6ec9", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "3f0982fde8c81c6f01de6f6a08654909", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    int x;\n    scanf(\"%d\", &n);\n    int rep = 1;\n    \n    for(int i = 9; i>1;i--)\n    {\n        if(n%i==0)\n        {\n            rep = i;\n            x  = n/i;\n            break;\n        }\n    }\n    if(rep == 1)\n    {\n        for(int i=0; i<n; i++)\n        {\n            printf(\"1 \");\n        }\n    }\n    else\n    {\n        for(int i = 0; i< x; i++)\n        {\n            printf(\"%d \", rep);   \n        }\n        \n    }\n    \n    \n\n    return 0;\n}\n", "fixed": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n\nint main()\n{\n    int n;\n    int x;\n    scanf(\"%d\", &n);\n    int rep = 1;\n    \n    for(int i = 9; i>1;i--)\n    {\n        if(n%i==0)\n        {\n            rep = i;\n            x  = n/i;\n            break;\n        }\n    }\n    if(rep == 1)\n    {\n        printf(\"%d\\n\",n);\n        for(int i=0; i<n; i++)\n        {\n            printf(\"1 \");\n        }\n    }\n    else\n    {\n        printf(\"%d\\n\",x);\n        for(int i = 0; i< x; i++)\n        {\n            printf(\"%d \", rep);   \n        }\n        \n    }\n    \n    \n\n    return 0;\n}\n"}
{"similarity_score": 0.8355437665782494, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "443cfeff18dbb0007e2c34bb1c9a1d5d", "bug_code_uid": "04a4106f3bfe074c2f405132e393a24e", "src_uid": "d4bcc53b470e4beaa078d5ce3785c6cb", "apr_id": "e4938a0df485e5706fe9351a6da70141", "difficulty": 800, "tags": ["brute force", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t,aux,b=0,n;\r\n\tscanf(\"%d\",&t);\r\n\tint v[t+1];\r\n\tfor(int j=0;j<t;j++)\r\n\t{\r\n\t\tv[j]=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(int i=0;i<n && b==0;i++)\r\n\t\t{\t\r\n\t\t\tb=1;\r\n\t\t\tif((i+1)%2==0)\r\n\t\t\t{\r\n\t\t\t\tfor(int k=1;k<=n-2;k+=2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[k]>a[k+1])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tb=0;\r\n\t\t\t\t\t\taux=a[k];\r\n\t\t\t\t\t\ta[k]=a[k+1];\r\n\t\t\t\t\t\ta[k+1]=aux;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(b==0)\r\n\t\t\t\t\tv[j]++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(int k=0;k<=n-3;k+=2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[k]>a[k+1])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tb=0;\r\n\t\t\t\t\t\taux=a[k];\r\n\t\t\t\t\t\ta[k]=a[k+1];\r\n\t\t\t\t\t\ta[k+1]=aux;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(b==0)\r\n\t\t\t\t\tv[j]++;\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int j=0;j<t;j++)\r\n\t\tprintf(\"%d\\n\",v[j]);\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint fausse(int a[], int n)\r\n{\r\n\tfor(int i=0;i<n-1;i++)\r\n\t{\r\n\t\tif(a[i]>a[i+1])\r\n\t\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nint main()\r\n{\r\n\tint t,aux,n;\r\n\tscanf(\"%d\",&t);\r\n\tint v[t+1];\r\n\tfor(int j=0;j<t;j++)\r\n\t{\r\n\t\tv[j]=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(int i=0;i<n && fausse(a,n)==1;i++)\r\n\t\t{\t\r\n\t\t\t\r\n\t\t\tif((i+1)%2==0)\r\n\t\t\t{\r\n\t\t\t\tfor(int k=1;k<=n-2;k+=2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[k]>a[k+1])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taux=a[k];\r\n\t\t\t\t\t\ta[k]=a[k+1];\r\n\t\t\t\t\t\ta[k+1]=aux;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\t\r\n\t\t\t\tfor(int k=0;k<=n-3;k+=2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[k]>a[k+1])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taux=a[k];\r\n\t\t\t\t\t\ta[k]=a[k+1];\r\n\t\t\t\t\t\ta[k+1]=aux;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tv[j]++;\r\n\t\t}\r\n\t}\r\n\tfor(int j=0;j<t;j++)\r\n\t\tprintf(\"%d\\n\",v[j]);\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9906063193851409, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f89f1efd589545dc3c217fdcfbd472b3", "bug_code_uid": "b2c87c770b82fbc6581ff4f6c9075d15", "src_uid": "d3a0402de1338a1a542a86ac5b484acc", "apr_id": "c4456f9b4dbe73ed5f4014f0379f1fdb", "difficulty": 1600, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nlong int n,a[300009];\nint check(long int i)\n{long int j,cnt=0,k,univ=0;\n\tfor(j=0;j<i;j++)\n\t\t\t{cnt=0;univ=0;\n\t\t\t\tfor(k=j;cnt<n/i;k+=i,cnt++)\n\t\t\t\t{\n\t\t\t\t\tif(k>n-1)\n\t\t\t\t\t\tk-=n;\n\t\t\t\t\tif(a[k]==0)\n\t\t\t\t\t\t{univ=1;break;}\n\t\t\t\t}\n\t\t\t\tif(!univ)\n\t\t\t\treturn 1;\n\t\t\t}\n\treturn 0;\n}\nint main()\n{\n\tlong int i,k;\n\tscanf(\"%ld\",&n);long int cans=sqrt(n),cnt=0;\n\tfor(i=0;i<n;i++)\n\tscanf(\"%ld\",&a[i]);\n\tfor(i=1;i<=cans;i++)\n\t\tif(n%i==0)\n\t\t{long int itemp=i;\n\t\t\tif(check(i) || ( i>2 && check(n/i)))\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");return 0;\n\t\t\t}\n\t\t}\n\tprintf(\"NO\\n\");return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nlong int n,a[300009];\nint check(long int i)\n{long int j,cnt=0,k,univ=0;\n\tfor(j=0;j<i;j++)\n\t\t\t{cnt=0;univ=0;\n\t\t\t\tfor(k=j;cnt<n/i;k+=i,cnt++)\n\t\t\t\t{\n\t\t\t\t\tif(k>n-1)\n\t\t\t\t\t\tk-=n;\n\t\t\t\t\tif(a[k]==0)\n\t\t\t\t\t\t{univ=1;break;}\n\t\t\t\t}\n\t\t\t\tif(!univ)\n\t\t\t\treturn 1;\n\t\t\t}\n\treturn 0;\n}\nint main()\n{\n\tlong int i,k;\n\tscanf(\"%ld\",&n);long int cans=sqrt(n),cnt=0;\n\tfor(i=0;i<n;i++)\n\tscanf(\"%ld\",&a[i]);\n\tfor(i=1;i<=cans;i++)\n\t\tif(n%i==0)\n\t\t{long int itemp=i;\n\t\t\tif((n/i>2 && check(i)) || ( i>2 && check(n/i)))\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");return 0;\n\t\t\t}\n\t\t}\n\tprintf(\"NO\\n\");return 0;\n}\n"}
{"similarity_score": 0.9525222551928784, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9128a9297a87466b56e12510dc4f0f95", "bug_code_uid": "92cec36149e366ede100a9185f5341ac", "src_uid": "d9ba1dfe11cf3dae177f8898f3abeefd", "apr_id": "da67838baf81f4b4c3cb087a5ce2c3e6", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 1005\n\nvoid swap(int a[],int n,int m){\nint t=a[n];\na[n]=a[m];\na[m]=t;\n}\nvoid recur(int a[],int n){\n\tif(n==1) return;\n\trecur(a,n-1);\n\tswap(a,n-1,n);\n}\nint main(){\nint n,a[MAX];\nint i;\n\tscanf(\"%d\",&n);\n\ta[0]=0;\n\tfor(i=1;i<=n;i++){\n\t\ta[i]=i;\n\t}\n\t\n\trecur(a,n);\n\tfor(i=1;i<=n;i++) printf(\"%d \",a[i]);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#define MAX 1005\n\nvoid swap(int a[],int n,int m){\nint t=a[n];\na[n]=a[m];\na[m]=t;\n}\nvoid recur(int a[],int n){\n\tif(n==1) return;\n\tswap(a,n-1,n);\n\trecur(a,n-1);\n\t\n}\nint main(){\nint n,a[MAX];\nint i;\n\tscanf(\"%d\",&n);\n\ta[0]=0;\n\tfor(i=1;i<=n;i++){\n\t\ta[i]=i;\n\t}\n\t\n\trecur(a,n);\n\tfor(i=1;i<=n;i++) printf(\"%d \",a[i]);\nreturn 0;\n}"}
{"similarity_score": 0.9969512195121951, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "527a3caefcf194842390aeaf7f81c3ed", "bug_code_uid": "f277212a8af89b32fa45688a1ab6aeb2", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "1977d7fb72338368785cabb422df0233", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nvoid countSort(int arr[],int original[], int l,int r,int x,int n)\n{\n    int output[r-l+1];\n\n    int count[10001]={0};\n    int i;\n\n    for(i=l-1; i<r; i++)\n    {\n        count[arr[i]]++;\n    }\n    for(i=0;i<l-1;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n    int k=l-1;\n    for(i=0;i<10001;i++)\n    {\n    \tfor(int j=0;j<count[i];j++)\n    \t{\n    \t\toutput[k++]=i;\n    \t}\n    }\n\tfor(i=r;i<n;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n    // for(i=0;i<n;i++)\n    // {\n    // \tprintf(\"%d \",output[i]);\n    // }\n    if(output[x-1]==original[x-1])\n\t{\n\t\tprintf(\"Yes\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"No\\n\");\n\t}\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint original[10000];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&original[i]);\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tint l,r,x;\n\t\tscanf(\"%d %d %d\",&l,&r,&x);\n\t\tint new[n];\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tnew[j]=original[j];\n\t\t}\n\t\t// qsort(&new[l-1],r-l+1,sizeof(int),cmpfunc);\n\t\tcountSort(new,original,l,r,x,n);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nvoid countSort(int arr[],int original[], int l,int r,int x,int n)\n{\n    int output[n];\n\n    int count[10001]={0};\n    int i;\n\n    for(i=l-1; i<r; i++)\n    {\n        count[arr[i]]++;\n    }\n    for(i=0;i<l-1;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n    int k=l-1;\n    for(i=0;i<10001;i++)\n    {\n    \tfor(int j=0;j<count[i];j++)\n    \t{\n    \t\toutput[k++]=i;\n    \t}\n    }\n\tfor(i=r;i<n;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n    // for(i=0;i<n;i++)\n    // {\n    // \tprintf(\"%d \",output[i]);\n    // }\n    if(output[x-1]==original[x-1])\n\t{\n\t\tprintf(\"Yes\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"No\\n\");\n\t}\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint original[10000];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&original[i]);\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tint l,r,x;\n\t\tscanf(\"%d %d %d\",&l,&r,&x);\n\t\tint new[n];\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tnew[j]=original[j];\n\t\t}\n\t\t// qsort(&new[l-1],r-l+1,sizeof(int),cmpfunc);\n\t\tcountSort(new,original,l,r,x,n);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7556066705002875, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "3fec599f8cabc7757b3895163f14b4f5", "bug_code_uid": "38300bc9ef940cdaad7bfde91e5facff", "src_uid": "94501cd676a9214a59943b8ddd1dd31b", "apr_id": "3a515ca1f1c724cd05d6b5a680234e6a", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint compre( void *a, void *b){\n    return strlen(a)-strlen(b);\n}\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,l,p,i1,i2,m,u,r,q,d,x,max,max2,min,f,sum1,sum,b,c[10000][3];\nchar a[10001][16],k[10001][11];\nscanf(\"%lld%lld\",&n,&m);\ncount=0;\nfor(i=0;i<n;i++){\n    scanf(\"%s %s\",k[i],a[i]);\n    a[i][(strlen(a[i]))]=';';\n}\n   count=0;\n      for(i=n;i<m+n;i++){\n          scanf(\"%s %s\",k[i],a[i]);\n         // printf(\"%s %s\\n\",k[i],a[i]);\n      for(j=0;j<n;j++){\n        if(strcmp(a[i],a[j])==0){\n          c[count][0]=i;\n          c[count][1]=j;\n          c[count][2]=i;\n            count++;\n        }\n    }\n}\nfor(i=0;i<count;i++){\n    printf(\"%s %s #%s\\n\",k[c[i][2]],a[c[i][0]],k[c[i][1]]);\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint compre( void *a, void *b){\n    return strlen(a)-strlen(b);\n}\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,l,p,i1,i2,m,u,r,q,d,x,max,max2,min,f,sum1,sum,b,c[10000][3];\nchar a[10001][18],k[10001][18];\nscanf(\"%lld%lld\",&n,&m);\ncount=0;\nfor(i=0;i<n;i++){\n    scanf(\"%s %s\",k[i],a[i]);\n    a[i][(strlen(a[i]))]=';';\n   \n}\n\n   count=0;\n      for(i=n;i<m+n;i++){\n          scanf(\"%s %s\",k[i],a[i]);\n          \n          //flag=0;\n         // printf(\"%s %s\\n\",k[i],a[i]);\n      for(j=0;j<n;j++){\n        if(strcmp(a[i],a[j])==0){\n          c[count][0]=i;\n          c[count][1]=i;\n          c[count][2]=j;\n            count++;\n            flag=1;\n            break;\n        }\n        // printf(\"%s %s %s\\n\",a[i],a[j],k[i]);\n    }\n   \n}\nfor(i=0;i<count;i++){\n    \n    printf(\"%s %s #%s\\n\",k[c[i][0]],a[c[i][1]],k[c[i][2]]);\n    \n}\nreturn 0;\n}\n"}
{"similarity_score": 0.8897266729500471, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "eb5a1e8067d3d6919bdc431a0da85752", "bug_code_uid": "e7a632e854b7c350b5114dc2ac15c346", "src_uid": "2ff0919ee7dfdfb916b23c26fb2caf20", "apr_id": "79e4f5f2504c592a19b3cbee3a62b859", "difficulty": 1300, "tags": ["binary search", "flows", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint n,h,a[1000];\n\nint go(int a[],int head,int n,int h){\n\tint high=h,t,jiayi=0;\n\tfor(int i=0;i<head;i++){\n\t\tif(a[i]<a[head]){\n\t\tt=a[head];\n\t\t\tfor(int j=head;j>i;j--){\n\t\t\t\ta[j]=a[j-1];\n\t\t\t}\n\t\t\ta[i]=t;\n\t\t}\n\t}\n\tfor(int i=0;i<=head;i++){\n\t\tif(high>=a[i]){\n\t\t\thigh-=a[i];\n\t\t\tjiayi++;\n\t\t}\n\t\telse{\n\t\t\tif(jiayi>0){\n\t\t\t\tjiayi--;\n\t\t\t}\n\t\t\telse return 0;\n\t\t}\n\t}\n\tif(head<n-1)return 1+go(a,head+1,n,h);\n\telse return 1;\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&h);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tprintf(\"%d\",go(a,0,n,h));\n}", "fixed": "#include<stdio.h>\n\nint n,h,a[1000];\n\nint go(int a[],int head,int n,int h){\n\tint high=h,t,jiayi=0;\n\tfor(int i=0;i<head;i++){\n\t\tif(a[i]<a[head]){\n\t\tt=a[head];\n\t\t\tfor(int j=head;j>i;j--){\n\t\t\t\ta[j]=a[j-1];\n\t\t\t}\n\t\t\ta[i]=t;\n\t\t}\n\t}\n\tfor(int i=0;i<=head;i++){\n\t\tif(jiayi>0){\n\t\t\tjiayi--;\n\t\t}\n\t\telse if(high>=a[i]){\n\t\t\thigh-=a[i];\n\t\t\tjiayi++;\n\t\t}\n\t\telse return 0;\n\t}\n\tif(head<n-1)return 1+go(a,head+1,n,h);\n\telse return 1;\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&h);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tprintf(\"%d\",go(a,0,n,h));\n}"}
{"similarity_score": 0.884393063583815, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "03a23c5294246c1ceedff79c7720822a", "bug_code_uid": "2d26cdd7808ace13abddd834086eb337", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "3a9ce846d4183676945c8e48751997a3", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char str[100000], str2[100000],str3[100000];\n    int i=0,j=0,k=0,len;\n    scanf(\"%s\", &str);\n    //strcpy(str,str3);\n    len=strlen(str);\n    for(i=0; i<len; i++)\n    {\n        if (str[i]=='0')\n        {\n            break;\n        }\n        j++;\n    }\n    for(k=0; k<j; k++)\n    {\n        printf(\"%c\", str[k]);\n    }\n    for(k=j+1; k<len; k++)\n    {\n        printf(\"%c\", str[k]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char str[100000], str2[100000],str3[100000];\n    int i=0,j=0,k=0,len;\n    scanf(\"%s\", &str);\n    //strcpy(str,str3);\n    len=strlen(str);\n    for(i=0; i<len; i++)\n    {\n        if (str[i]=='0')\n        {\n            break;\n        }\n        j++;\n    }\n    if(j!=len)\n    {\n    for(k=0; k<j; k++)\n    {\n        printf(\"%c\", str[k]);\n    }\n    for(k=j+1; k<len; k++)\n    {\n        printf(\"%c\", str[k]);\n    }\n    }\n    else if(j==len)\n    {\n        for(k=0; k<len-1; k++)\n        printf(\"%c\", str[k]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9910514541387024, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8bf11a6e0863bd82e2184a07dedd07e4", "bug_code_uid": "dcdf314189770aa6296a179ce0113209", "src_uid": "7a48218582b90f735a09083df9e15b96", "apr_id": "11a2caedfdb015784d4223dccc134694", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,r,min,max; long long int  num,k,n,i;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld\",&num);\n\tscanf(\"%lld\",&k);\n\tif(k==1)\n{\n\tprintf(\"%lld\\n\",num);\n\t\n}\nelse\n{\n\tfor(i=2;i<=k;i++)\n\t{n=num;min=n;max=0;\n\twhile(n>0)\n\t{\n\t\tr=n%10;\n\t\tif(r==0)\n\t\t{\n\t\t\tgoto a;\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tif(min>r)\n\t\t{\n\t\t\tmin=r;\n\t\t}\n\t\tif(max<r)\n\t\t{\n\t\t\tmax=r;\n\t\t}\n\t\tn=n/10;\n\t\t}\n\t}\n\tnum=num+(min*max);\n\t\t\n\t}\n\ta:\n\tprintf(\"%lld\\n\",num);\n}\n\t\n\t\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,r,min,max; long long int  num,k,n,i;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld\",&num);\n\tscanf(\"%lld\",&k);\n\tif(k==1)\n{\n\tprintf(\"%lld\\n\",num);\n\t\n}\nelse\n{\n\tfor(i=2;i<=k;i++)\n\t{n=num;min=9;max=0;\n\twhile(n>0)\n\t{\n\t\t\n\t\tr=n%10;\n\t\tif(r==0)\n\t\t{\n\t\t\tgoto a;\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tif(min>r)\n\t\t{\n\t\t\tmin=r;\n\t\t}\n\t\tif(max<r)\n\t\t{\n\t\t\tmax=r;\n\t\t}\n\t\t\n\t\tn=n/10;\n\t\t}\n\t}\n\tnum=num+(min*max);\n\t\t\n\t}\n\ta:\n\tprintf(\"%lld\\n\",num);\n}\n\t\n\t\n\t}\n}"}
{"similarity_score": 0.6821428571428572, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "43c3e14373e02f7b5de708c5690faf70", "bug_code_uid": "a63f7b39c54f962874ed6c848e5379eb", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "3e90f5eaa75b94006309a74d2615381d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          int x,y,n,m;\n          scanf(\"%d %d %d\",&x,&y,&n);\n          for(int i=(n+1)/x;i>=0;i--)\n          {\n               if(x*i+y<=n)\n               printf(\"%d\\n\",x*i+y);\n               break;\n          }\n     }\n     return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          long long int x,y,n,a;\n          scanf(\"%lld %lld %lld\",&x,&y,&n);\n          a=(n-y)%x;\n          printf(\"%lld\\n\",n-a);\n     }\n     return 0;\n}"}
{"similarity_score": 0.9991158267020336, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fef8cd9878ccfa853dd23007f5f1c7d0", "bug_code_uid": "5564b113fb1c7d0665d0e82dee92364a", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "af36dde0ca6b8f2fd75febbd2bdba474", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 100000\nint main () {\n    char *a, *b;\n    int diff = 0, i, n;\n\n    a = (char *)malloc( N );\n    b = (char *)malloc( N );\n\n    gets(a);\n    gets(b);\n\n    n = strlen(a);\n\n    a = realloc(a, n);\n    b = realloc(b, n);\n\n    for(i = n- 1; i >= 0; i--)\n        if(a[i] != b[i]) diff++;\n\n    if(diff%2) {\n        printf(\"impossible\");\n        return 0;\n    }\n\n    diff /= 2;\n\n    for(i = 0; diff > 0; i++)\n        if(a[i] != b[i]){\n            a[i] = b[i];\n            diff--;\n        }\n\n    puts(a);\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 1000000\nint main () {\n    char *a, *b;\n    int diff = 0, i, n;\n\n    a = (char *)malloc( N );\n    b = (char *)malloc( N );\n\n    gets(a);\n    gets(b);\n\n    n = strlen(a);\n\n    a = realloc(a, n);\n    b = realloc(b, n);\n\n    for(i = n- 1; i >= 0; i--)\n        if(a[i] != b[i]) diff++;\n\n    if(diff%2) {\n        printf(\"impossible\");\n        return 0;\n    }\n\n    diff /= 2;\n\n    for(i = 0; diff > 0; i++)\n        if(a[i] != b[i]){\n            a[i] = b[i];\n            diff--;\n        }\n\n    puts(a);\n\n}"}
{"similarity_score": 0.2974910394265233, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "f91fa80effcf9131fd7b521954f14551", "bug_code_uid": "a1177d75722563fa4a7b1a1275164532", "src_uid": "2584fa8c1adb1aa8cd5c28a8610ff72d", "apr_id": "aea39cbdca048a4feee9c1e007b98edc", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int n,i,j;\n    while(scanf(\"%d\",&n)==1)\n    {\n        i=j=0;\n        if(n%7==0)\n        {\n            i=n/7;\n            while(i--)printf(\"7\");\n        }\n        else\n        {\n            while(n>0)\n            {\n                if(n%4==0)\n                {\n                    j=n/4;\n                    break;\n                }\n                n-=7;\n                i++;\n            }\n            if(j==0)printf(\"-1\");\n            else\n            {\n                while(j--)printf(\"4\");\n                while(i--)printf(\"7\");\n            }\n        }\n\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    while(scanf(\"%d\",&n)!=-1)\n    {\n        for(i=n/7;i>=0;i--)\n    {\n        if((n-i*7)%4==0)\n    {\n        break;\n    }\n    }\n    if(i==-1)\n    {\n        printf(\"-1\\n\");\n    }\n    else\n    {\n        for(j=0;j<(n-i*7)/4;j++)\n        {\n            printf(\"4\");\n        }\n        for(j=0;j<i;j++)\n        {\n              printf(\"7\");\n        }\n        printf(\"\\n\");\n    }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9661458333333334, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "55a05c60d85bfe0c83a201751ac052e9", "bug_code_uid": "d8ad132901142b39ad11e5bd9fdedbab", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "75fce3504af1c0f59702b3484c39f352", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t, i, j;\n    long long int n, sum, s=0, c=1;\n    scanf(\"%d\", &t);\n    for(i=0; i<t; i++){\n        scanf(\"%I64d\", &n);\n        sum=(n*(n+1))/2;\n        for(j=1; ; j++){\n            s=s+c;\n            c=c*2;\n            if(c>n)\n            break;\n        }\n        printf(\"%I64d\\n\", sum-2*s);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t, i, j;\n    long long int n, sum, s=0, c=1;\n    scanf(\"%d\", &t);\n    for(i=0; i<t; i++){\n        scanf(\"%I64d\", &n);\n        sum=(n*(n+1))/2;\n        for(j=1; ; j++){\n            s=s+c;\n            c=c*2;\n            if(c>n)\n            break;\n        }\n        printf(\"%I64d\\n\", sum-2*s);\n        s=0;\n        c=1;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9981132075471698, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d88a426c682b97e0eaae3b686f75543a", "bug_code_uid": "2f04c0d941ca9e81a330d369804b28e0", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "f84383e5232bee552e2abdb7f2b6f6f2", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    FILE *input=fopen(\"input.txt\", \"r\");\n    FILE *output=fopen(\"output.txt\", \"w\");\n    int b, g;\n    fscanf(input, \"%d %d\", &b, &g);\n    int i;\n    if (b>g)\n    {\n        for (i=0; i<g; i++)\n            fprintf(output, \"BG\");\n        for (i=g; i<b; i++)\n            fprintf(output, \"B\");\n    }\n    else\n    {\n        for (i=0; i<b; i++)\n            printf(output, \"GB\");\n        for (i=b; i<g; i++)\n            printf(output, \"G\");\n    }\n\n    fclose(input);\n    fclose(output);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    FILE *input=fopen(\"input.txt\", \"r\");\n    FILE *output=fopen(\"output.txt\", \"w\");\n    int b, g;\n    fscanf(input, \"%d %d\", &b, &g);\n    int i;\n    if (b>g)\n    {\n        for (i=0; i<g; i++)\n            fprintf(output, \"BG\");\n        for (i=g; i<b; i++)\n            fprintf(output, \"B\");\n    }\n    else\n    {\n        for (i=0; i<b; i++)\n            fprintf(output, \"GB\");\n        for (i=b; i<g; i++)\n            fprintf(output, \"G\");\n    }\n\n    fclose(input);\n    fclose(output);\n\n    return 0;\n}\n"}
{"similarity_score": 0.6153846153846154, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "863093243206677efbaa22490f095846", "bug_code_uid": "15e7828c34675d0a46cce76e43fe1b65", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "72267658d4f3ddc016879e57c8c40c25", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    long long int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n    }\n    int max=arr[0],j;\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]>max)\n        {\n            max=arr[i];\n        }\n    }\n    for(i=1;i<=max;i++){\n     for(j=0;j<n;j++)\n     {\n         if(arr[j]==i&&i%2!=0)\n         {\n             arr[j]+=1;\n         }\n         if(arr[j]==i&&i%2==0)\n         {\n             arr[j]-=1;\n         }\n     }\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%lld\\t\",arr[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    long long int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n        if(arr[i]%2!=0)\n        {\n\n            arr[i]+=1;\n        }\n        if(arr[i]%2==0)\n        {\n            arr[i]-=1;\n        }\n    }\n\n    for(i=0;i<n;i++)\n    {\n        printf(\"%lld\\t\",arr[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5752808988764045, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "609c3bc433ed33134126af28cd3739d9", "bug_code_uid": "f0a55750af7fd8d5fb095e7f5c530047", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "6a94d2dee68b5288cec156591a6af4d3", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nchar s[100001];\nscanf(\"%s\",s);\nint n,i,j,c,a,b;\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\n{\nc=0;\nscanf(\"%d%d\",&a,&b);\nfor(j=a-1;j<b-1;j++)\nif(s[j]==s[j+1])\nc++;\nprintf(\"%d\\n\",c);\n}\n}", "fixed": "#include<stdio.h>\nchar s[100001];\nint t[100000];\nint main()\n{\nscanf(\"%s\",s);\nint n,i,j,c,a,b,x=0;\nfor(i=0;s[i];i++)\n{\nt[i]=x;\nif(s[i]==s[i+1])\nx++;\n}\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%d%d\",&a,&b);\nprintf(\"%d\\n\",t[b-1]-t[a-1]);\n}\n}"}
{"similarity_score": 0.970334928229665, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7e8491d475f938d93c828f388fdc5e6e", "bug_code_uid": "85f75c5d746555bd0957994caa8baed0", "src_uid": "6fbf41dc32d1c28351d78a9ec5fc0026", "apr_id": "2f05d7243388b099f2f99dc374e3cc0a", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n    #include <unistd.h>\n#include <string.h>\n#include <stdlib.h>\n\n\n\n\n\nint  main(int argc, char const *argv[])\n{\n\t\t\n\t\n\tint t;\n\n\tscanf(\"%d\",&t);\n\t\n\tchar string[101];\n\tint len,k;\n\tfor(int i=0;i<t;i++){\n\t\tchar fl=1;\n\t\tscanf(\"%d %d\",&len,&k);\n\n\t\tscanf(\"%s\",string);\n\n\n\t\tif (len<=2*k){\n\t\t\tprintf(\"NO\\n\");\n\t\t}else{\n\t\t\tfor(int i=0;i<k;i++){\n\n\t\t\t\tif(string[i]!=string[len-i-1]){\n\t\t\t\t\tfl=0;\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(fl){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}else{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\treturn 0;\n\t\t\n}\n", "fixed": "#include <stdio.h>\n    #include <unistd.h>\n#include <string.h>\n#include <stdlib.h>\n\n\n\n\n\nint  main(int argc, char const *argv[])\n{\n\t\t\n\t\n\tint t;\n\n\tscanf(\"%d\",&t);\n\t\n\tchar string[101];\n\tint len,k;\n\tfor(int i=0;i<t;i++){\n\t\tchar fl=1;\n\t\tscanf(\"%d %d\",&len,&k);\n\n\t\tscanf(\"%s\",string);\n\n\n\t\tif (len<=2*k){\n\t\t\tprintf(\"NO\\n\");\n\t\t}else{\n\t\t\tfor(int i=0;i<k;i++){\n\n\t\t\t\tif(string[i]!=string[len-i-1]){\n\t\t\t\t\tfl=0;\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif(fl){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\treturn 0;\n\t\t\n}\n"}
{"similarity_score": 0.70828025477707, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "08044e56fae88f3cf74c2af131886496", "bug_code_uid": "ba4017002ba0b498626003178cec4a10", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "e58d10fa4d3b9c686fa72296f5d31f67", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,i,j;\n    scanf(\"%d\",&a);\n    int x[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&x[i]);\n    }\n    \n    for(i=0;i<a;i++)\n        \n    {\n        if(x[i]%2==0)\n            printf(\"%d \",x[i-1]);\n        else\n            printf(\"%d \",x[i]);\n    }\n    \n    \n    \n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b;\n    scanf(\"%lld\",&a);\n    long long int x[a],i;\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%lld\",&x[i]);\n    }\n    \n    for(i=0;i<a;i++)\n        \n    {\n        if(x[i]%2==0)\n            {\n                b=x[i]-1;\n                printf(\"%lld \",b);\n            }\n        else\n            {\n                b=x[i];\n                printf(\"%lld \",b);\n            }\n            \n    }\n    \n    \n    \n    return 0;\n}\n"}
{"similarity_score": 0.9976905311778291, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8b443d031aa12a0bca2571d8c2bd5869", "bug_code_uid": "cafabe4d24efbb3b5fed0ecb42e0ee06", "src_uid": "c047040426e736e9085395ed9666135f", "apr_id": "bec054b9ea98aa7a7336274e6e5c8473", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint array[9999];\nint isprime(float x);\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    gen(n);\n    int counter;\n    for(counter=0;counter<n;counter++)\n    {\n        printf(\"%d \",array[counter]);\n\n    }\n\n    return 0;\n}\n\n\n\nint isprime(float x)\n{\n    int y;\n    int counter;\n    y=x;\n    x=sqrt(x);\n\n    for(counter=2;counter<x;counter++)\n    {\n\n        if(y%counter==0)\n        return 0;\n    }\n    return 1;\n\n\n}\n\n\n\n\n\nvoid gen(int n)\n{\n    int get=0;\n    int num=3;\n    while(get<n)\n    {\n        if(isprime(num)==1)\n        {\n            array[get]=num;\n            get++;\n        }\n        num++;\n\n    }\n\n\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint array[999999];\nint isprime(float x);\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    gen(n);\n    int counter;\n    for(counter=0;counter<n;counter++)\n    {\n        printf(\"%d \",array[counter]);\n\n    }\n\n    return 0;\n}\n\n\n\nint isprime(float x)\n{\n    int y;\n    int counter;\n    y=x;\n    x=sqrt(x);\n\n    for(counter=2;counter<=x;counter++)\n    {\n\n        if(y%counter==0)\n        return 0;\n    }\n    return 1;\n\n\n}\n\n\n\n\n\nvoid gen(int n)\n{\n    int get=0;\n    int num=3;\n    while(get<n)\n    {\n        if(isprime(num)==1)\n        {\n            array[get]=num;\n            get++;\n        }\n        num++;\n\n    }\n\n\n\n}\n"}
{"similarity_score": 0.45973645680819913, "equal_cnt": 22, "replace_cnt": 15, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "2bc8cbb4e298da125a3007b00264ad08", "bug_code_uid": "47166867c3e46c781f771f0f69b8be61", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "82f3750a2ee9d69a00e55b7b34ab802d", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nchar A[1010],B[1010];\nint len1,len2;\n\nint main()\n{\n    scanf(\"%s\\n\",&A);\n    scanf(\"%s\\n\",&B);\n    len1=strlen(A);\n    len2=strlen(B);\n    for(int i=0;i<len1;++i)\n        if(A[i]=='a' || A[i]=='e' || A[i]=='i' || A[i]=='o' || A[i]=='u')\n            A[i]=1;\n        else\n            A[i]=0;\n    for(int i=0;i<len1;++i)\n            if(B[i]=='a' || B[i]=='e' || B[i]=='i' || B[i]=='o' || B[i]=='u')\n                B[i]=1;\n            else\n                B[i]=0;\n    if(len1!=len2)\n        ans=0;\n    else\n        {\n            for(int i=0;i<len1;++i)\n                if(A[i]==B[i])\n                    ans=0;\n        }\n    if(ans==1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nchar A[10010],B[10010];\nint Vow1[10010],Vow2[101001];\nint ans=0;\nint main()\n{\n\tscanf(\"%s\",A);\n\tscanf(\"%s\",B);\n\tint len1=strlen(A);\n\tint len2=strlen(B);\n\t//printf(\"%d %d\",len1,len2);\n\tif(len1!=len2)\n\t\tans=1;\n\telse\n\t{\n\n\tfor(int i=0;i<len1;++i)\n\t{\n\t\tif(A[i]=='a' || A[i]=='e' || A[i]=='i' || A[i]=='o' || A[i]=='u')\n\t\t\tVow1[i]=1;\n\t\telse\n\t\t\tVow1[i]=0;\n\t}\n\tfor(int i=0;i<len1;++i)\n\t{\n\t\tif(B[i]=='a' || B[i]=='e' || B[i]=='i' || B[i]=='o' || B[i]=='u')\n\t\t\tVow2[i]=1;\n\t\telse\n\t\t\tVow2[i]=0;\n\t}\n\tfor(int i=0;i<len1;++i)\n\t\tif(Vow1[i]!=Vow2[i])\n\t\t\tans=1;\n\t}\n\tif(ans==1)\n\t\tprintf(\"No\\n\");\n\telse\n\t\tprintf(\"Yes\\n\");\n}"}
{"similarity_score": 0.9972375690607734, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8c0bd8bb171fd96a28adaf53ed2dc36d", "bug_code_uid": "269c0c598d39062c077b5458135c49fe", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "76f9340482a516312965d9847b22890d", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n,m,i,sum=0;\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&m);\r\n        while(n--){\r\n            scanf(\"%d\",&i);\r\n            sum+=i;          \r\n        }\r\n        if(sum>m){\r\n        printf(\"%d\\n\",sum-m);\r\n        }else{\r\n            printf(\"0\");   \r\n        }\r\n        sum=0;\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n,m,i,sum=0;\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&m);\r\n        while(n--){\r\n            scanf(\"%d\",&i);\r\n            sum+=i;          \r\n        }\r\n        if(sum>m){\r\n        printf(\"%d\\n\",sum-m);\r\n        }else{\r\n            printf(\"0\\n\");   \r\n        }\r\n        sum=0;\r\n    }\r\n}"}
{"similarity_score": 0.8670120898100173, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3c1d0a3fed2e03ff5c4a3a5133857a6f", "bug_code_uid": "f6ea5e6a9346897bdc5c06c73c0b0387", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "de620fc841a43f06d4398201cbc75a99", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint input;\n\tint num_output;\n\tint i;\n\n\t\tscanf(\"%d\",&input);\n\t\tnum_output=input/2;\n\t\tprintf(\"%d\\n\",num_output);\n\n\t\tfor(i=0;i<input/2-input%2-1;i++)\n\t\t\tprintf(\"2 \");\n        printf(\"2\");\n\t\tif(input%2)\n\t\t\tprintf(\" 3\");\n\t\tprintf(\"\\n\");\n\t\t\n\t\treturn 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint input;\n\tint num_output;\n\tint i;\n\n\t\tscanf(\"%d\",&input);\n\t\tnum_output=input/2;\n\t\tprintf(\"%d\\n\",num_output);\n\n\t\tfor(i=0;i<input/2-input%2;i++)\n\t\t\tprintf(\"2 \");\n\t\tif(input%2)\n\t\t\tprintf(\"3\");\n\t\tprintf(\"\\n\");\n\n\t\treturn 0;\n\n}"}
{"similarity_score": 0.702158273381295, "equal_cnt": 18, "replace_cnt": 17, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "ea43df24b7f98d628eadd26c194619cf", "bug_code_uid": "54b47771d14f0e1a4214119547a78fcf", "src_uid": "0ea79b2a7ddf3d4da9c7a348e61933a7", "apr_id": "a95d3925495bae9d9dcb0e4d8a61c2e3", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint n,i,a[101],j,k,x,s=0,time,min=9999;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\ti=0;\n\twhile(n--)\n\t{\n\t\tk=a[i++];\n\t\tfor(j=1;j<=k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\ts=s+x;\n\t\t}\n\t\ttime=s*5+15*k;\n\t\tif(time<min)\n\t\tmin=time;\n\t\ts=0;\n\t}\n\tprintf(\"%d\",min);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,a[101],j,k,x,s=0,time,min=9999999;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    i=0;\n    while(n--)\n    {\n        k=a[i++];\n        for(j=1;j<=k;j++)\n        {\n            scanf(\"%d\",&x);\n            s=s+x;\n        }\n        time=s*5+15*k;\n        if(time<min)\n        min=time;\n        s=0;\n    }\n    printf(\"%d\",min);\n    return 0;\n}"}
{"similarity_score": 0.9377777777777778, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "678abf3fa1de4696c5dcc0aad6eb4c90", "bug_code_uid": "af519b58c91e25cb6279a661849f702b", "src_uid": "322792a11d3eb1df6b54e8f89c9a0490", "apr_id": "53ef11f0fc2e54a3b53d1c7af2e7b8f7", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\tint s,sum=0,temp=0,ans=0;\r\n\tscanf(\"%d\",&s);\r\n\twhile(sum<s)\r\n\t{\r\n\t\ttemp+=2;\r\n\t\tsum+=temp;\r\n\t\tans++;\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n}\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\tint s,sum=1,temp=1,ans=1;\r\n\tscanf(\"%d\",&s);\r\n\twhile(sum<s)\r\n\t{\r\n\t\ttemp+=2;\r\n\t\tsum+=temp;\r\n\t\tans++;\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n}\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.7073684210526315, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9e35121cfcb67ef7d1c11c6dd1ec9aca", "bug_code_uid": "eda2b6c2f1c8ba13b6244b47fbdba4dd", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "8909d133bc41a9c162a5e6b290cb7bb5", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint m,t,n,x,y;\n scanf(\"%d\",&t);\n while(t--){\n        scanf(\"%d %d\",&n,&m);\n        x=2*m;\n        y=(n-1)*m;\n        if(x<y)\n            printf(\"%d\\n\",x);\n        else\nprintf(\"%d\\n\",y);\n\n            }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint m,t,n,x,y;\n scanf(\"%d\",&t);\n while(t--){\n        scanf(\"%d %d\",&n,&m);\n        x=2*m;\n        y=(n-1)*m;\n        if(n>2)\n            printf(\"%d\\n\",x);\n        else\nprintf(\"%d\\n\",y);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.3154121863799283, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "cb13b251d2e45c3679046fd9a76feb25", "bug_code_uid": "dde1706d24564a07f5e24fc2e6813e98", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "cd59f1506f44c746ca3b97af4751b0bc", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n int n;\n scanf(\"%d \\n\",&n);\n int i=0;\n int nf,nj,nau;\n do{i++;\n    scanf(\"%d %d %d \\n\",&nf,&nj,&nau);\n    if (nf==nj  & nf==nau) {printf(\"%d \\n\",1);}\n    else if (nf == nj+nau) {printf(\"%d \\n \",2);}\n    else if (nf > nj+nau)   {printf(\"%d \\n\",(float)nf/2);}\n\n\n      }while(i<n);\n  return 0;\n}\n\ufffd", "fixed": "#include <stdio.h>\nmain()\n{\n int n;\n scanf(\"%d \\n\",&n);\n int i=0;\n int nf,nj,nau,min;\n while(i<n){\n    scanf(\"%d  %d  %d \\n\",&nf,&nj,&nau);\n    if(nj<nau){min=nj;}\n    else min=nau;\n    printf(\"%d \\n\",nf-min+1);\n    i++;}\n  return 0;\n}\n"}
{"similarity_score": 0.9433551198257081, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "911b699f6980ac5e767821768afd8b82", "bug_code_uid": "dd5de226e6f1642b16fe4784d9da5e7c", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "3e9a2decfb4511983f2939e4013ebf5b", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        char array[55];\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", array);\r\n        int j;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            int k;\r\n            for(k=n-1;k>=0;k--)\r\n            {\r\n                if(arr[k]==arr[j])\r\n                    break;\r\n                else\r\n                    continue;\r\n            }\r\n            int l\r\n            for(l=j+1;l<k;l++)\r\n            {\r\n                if(arr[l]==arr[j])\r\n                    cotinue;\r\n                else\r\n                    break;\r\n            }\r\n            if(l==k)\r\n                cotinue;\r\n            else\r\n                break;\r\n        }\r\n        if(j==n)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        char arr[55];\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", arr);\r\n        int j;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            int k;\r\n            for(k=n-1;k>=0;k--)\r\n            {\r\n                if(arr[k]==arr[j])\r\n                    break;\r\n                else\r\n                    continue;\r\n            }\r\n            int l;\r\n            if(j==k)\r\n                continue;\r\n            else\r\n            {\r\n            for(l=j+1;l<k;l++)\r\n            {\r\n                if(arr[l]==arr[j])\r\n                    continue;\r\n                else\r\n                    break;\r\n            }\r\n            if(l==k)\r\n                continue;\r\n            else\r\n                break;\r\n            }\r\n        }\r\n        if(j==n)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9870327993897788, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d85f6b85aa2506a2ebd10ddf94d8f46f", "bug_code_uid": "f51afe99d14335d734efcb5b9287b259", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "61761ad6e28a605bc08a0f19df60001e", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,c=0,p=0,l=0,r=0,e=0,t,d,m,h,o,u;\n    scanf(\"%d\",&n);\n    char s[50];\n    scanf(\"%s\",s);\n    int i;\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='o')\n            c++;\n        else if(s[i]=='n')\n            p++;\n            else if(s[i]=='e')\n                l++;\n            else if(s[i]=='r')\n                r++;\n            else if(s[i]=='z')\n                e++;\n    }\n   t=c-p;\n   d=l-p;\n   m=c-t*p;\n   h=l-d*p;\n   if(t>=0&&d>=0)\n   {\n       for(i=0;i<p;i++)\n       {\n           printf(\"1 \");\n       }\n   }\n   if(m>0&&h>0&&r>0&&e>0)\n   {\n       for(i=0;i<e;i++)\n       {\n           printf(\"0 \");\n       }\n   }\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,c=0,p=0,l=0,r=0,e=0,t,d,m,h,o,u;\n    scanf(\"%d\",&n);\n    char s[100000];\n    scanf(\"%s\",s);\n    int i;\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='o')\n            c++;\n        else if(s[i]=='n')\n            p++;\n            else if(s[i]=='e')\n                l++;\n            else if(s[i]=='r')\n                r++;\n            else if(s[i]=='z')\n                e++;\n    }\n   t=c-p;\n   d=l-p;\n   m=t;\n   h=d;\n   if(t>=0&&d>=0)\n   {\n       for(i=0;i<p;i++)\n       {\n           printf(\"1 \");\n       }\n   }\n   if(m>0&&h>0&&r>0&&e>0)\n   {\n       for(i=0;i<e;i++)\n       {\n           printf(\"0 \");\n       }\n   }\n\n\n}\n"}
{"similarity_score": 0.9450337512054002, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8a2c6d90d958bdb18f8ed00487df93de", "bug_code_uid": "7b41d9180fae0ce417840bd098c486b8", "src_uid": "97697eba87bd21ae5c979a5ea7a81cb7", "apr_id": "1f78dd03459096a172cd4b66e384458e", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n\n    int n;\n    scanf(\"%d\", &n);\n    int arr[n];\n    int i;\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n        if(i == 0)\n        {\n            arr[i] %= 2;\n        }\n        else\n        {\n            arr[i] = arr[i]-arr[i-1];\n            if(arr[i] < 0)\n            {\n                printf(\"NO\");\n                exit(0);\n            }\n            arr[i] %= 2;\n\n        }\n    }\n    printf(\"YES\");\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n\n    int n;\n    scanf(\"%d\", &n);\n    int arr[n];\n    int i;\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n        if(i == 0)\n        {\n            arr[i] %= 2;\n        }\n        else\n        {\n            arr[i] = arr[i]-arr[i-1];\n            if(arr[i] < 0)\n            {\n                printf(\"NO\");\n                exit(0);\n            }\n            arr[i] %= 2;\n\n        }\n    }\n    if(arr[n-1] == 1)\n        printf(\"NO\");\n    else\n        printf(\"YES\");\n    return 0;\n\n}\n"}
{"similarity_score": 0.4817708333333333, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "c648ff2dbe2a4090c410d93e4b1c2c4d", "bug_code_uid": "e81ae4c3874eb71019dc2cfd2cf37baf", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "d7004effba23a8f8ed3dc22aca0b9a88", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   long int n,a[100003],i,j,max;\n   scanf(\"%ld\",&n);\n   for(i=0;i<n;i++)\n    scanf(\"%ld\",&a[i]);\n   for(i=0;i<n-1;i++)\n   {\n       max=0;\n       for(j=i+1;j<n;j++)\n       {\n           if(a[j]>max)\n            max=a[j];\n       }\n       printf(\"%ld \",max-a[i]+1);\n   }\n   printf(\"0\");\n   return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n   long int n,a[100003],b[100003],i,j,max=0;\n   scanf(\"%ld\",&n);\n   for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n    }\n      for(i=n-1;i>=0;i--)\n      {\n          if(a[i]>max)\n            {\n                max=a[i];\n                b[i]=0;\n            }\n          else\n          {\n              b[i]=max-a[i]+1;\n          }\n      }\n      for(i=0;i<n;i++)\n        printf(\"%ld \",b[i]);\n\n   return 0;\n}\n"}
{"similarity_score": 0.9842180774748924, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5bea6bee786f271c160be7eedd39d39f", "bug_code_uid": "34d9ce43d60f59a19e3d8ba51f2af14b", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "c048130670e444e1b6e771ce03854890", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; ++i) {\r\n        int n, m, k;\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n\r\n        int sum = m + n * m;\r\n        if (sum == k) {\r\n            printf(\"%s\", \"YES\");\r\n        } else {\r\n            printf(\"%s\", \"NO\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; ++i) {\r\n        int n, m, k;\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n\r\n        int sum = n * m -1;\r\n        if (sum == k) {\r\n            printf(\"%s\\n\", \"YES\");\r\n        } else {\r\n            printf(\"%s\\n\", \"NO\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.988950276243094, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "edc4939c1e40df7c9764d96c538ad28f", "bug_code_uid": "df8a696647ed3004b73d58888d9e39bb", "src_uid": "ac4aac095e71cbfaf8b79262d4038095", "apr_id": "226ca3d08130d87d382263406e7cf3f4", "difficulty": 1200, "tags": ["data structures", "hashing", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nunsigned long long nCr(int x){\r\n\treturn (x*(x-1)/2);\r\n}\r\n\r\n\r\nunsigned long long same_diff(int* b, int n){\r\n\tunsigned long long count = 0;\r\n\tfor(int i=0; i<=2*n; ++i){\r\n\t\tif(b[i] > 1){ count = count + nCr(b[i]);}\r\n\t}\r\n\t\r\n\treturn count;\r\n}\r\n\r\n\r\nint main(){\r\n\tint t, n;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint* arr;\r\n\t\tint* b;\r\n\t\tarr = (int *)malloc(sizeof(int) * n);\r\n\t\tb = (int *)malloc(sizeof(int) * (2*n + 1)); \r\n\t\tfor(int i=0; i<= 2*n; ++i){\r\n\t\t\tb[i] = 0;\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i=0; i<n; ++i){\r\n\t\t\tscanf(\"%d\", &arr[i]);\r\n\t\t\tif(arr[i]-i < 0){\r\n\t\t\t\t++b[n + i - arr[i]]; \r\n\t\t\t}\r\n\t\t\telse{ ++b[arr[i]-i]; }\r\n\t\t}\r\n\t\t\r\n\t\tunsigned long long res = same_diff(b, n);\r\n\t\tprintf(\"%llu\\n\", res);\r\n\t\tfree(arr);\r\n\t\tfree(b);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n//19,999,900,000  - answer\r\n//9,223,372,036,854,775,807 - long long int\r\n//4,294,967,295 - long int", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nunsigned long long nCr(int x){\r\n\treturn ((unsigned long long)x*(x-1)/2);\r\n}\r\n\r\n\r\nunsigned long long same_diff(int* b, int n){\r\n\tunsigned long long count = 0;\r\n\tfor(int i=0; i<=2*n; ++i){\r\n\t\tif(b[i] > 1){ count = count + nCr(b[i]);}\r\n\t}\r\n\t\r\n\treturn count;\r\n}\r\n\r\n\r\nint main(){\r\n\tint t, n;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint* arr;\r\n\t\tint* b;\r\n\t\tarr = (int *)malloc(sizeof(int) * n);\r\n\t\tb = (int *)malloc(sizeof(int) * (2*n + 1)); \r\n\t\tfor(int i=0; i<= 2*n; ++i){\r\n\t\t\tb[i] = 0;\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i=0; i<n; ++i){\r\n\t\t\tscanf(\"%d\", &arr[i]);\r\n\t\t\tif(arr[i]-i < 0){\r\n\t\t\t\t++b[n + i - arr[i]]; \r\n\t\t\t}\r\n\t\t\telse{ ++b[arr[i]-i]; }\r\n\t\t}\r\n\t\t\r\n\t\tunsigned long long res = same_diff(b, n);\r\n\t\tprintf(\"%llu\\n\", res);\r\n\t\tfree(arr);\r\n\t\tfree(b);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n//19,999,900,000  - answer\r\n//9,223,372,036,854,775,807 - long long int\r\n//4,294,967,295 - long int"}
{"similarity_score": 0.9932885906040269, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a075fc3eb12dfd0bf5c89a1cd5554050", "bug_code_uid": "84d38fc0cf6d61de71bf46b11bc926c8", "src_uid": "30ad5bdc019fcd8a4e642c90decca58f", "apr_id": "8710cc8cdbab5fce713104aa0d0078d8", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint cnt[1500];\nint main(void) {\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) {\n        int v;\n        scanf(\"%d\", &v);\n        cnt[v]++;\n    }\n    int m = -1e9;\n    for(int i = 1; i <= 1000; i++) if(m < cnt[i]) m = cnt[i];\n    printf(\"%d\", m);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint cnt[1500];\nint main(void) {\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) {\n        int v;\n        scanf(\"%d\", &v);\n        cnt[v]++;\n    }\n    int m = -1e9;\n    for(int i = 1; i <= 1000; i++) if(m < cnt[i]) m = cnt[i];\n    printf(\"%d\", n - m);\n    return 0;\n}"}
{"similarity_score": 0.7791411042944786, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cf841ac7f62b97f6fb9c08d9a2a053a0", "bug_code_uid": "803e66535e61753e2deba89b6b2d6466", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "d0fca71728aa7fcc0b6e9213ba22feb3", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char c[100];\n    int i=0,letter=0,t,j;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n    scanf(\"%s\",&c);\n    while(c[i]!='\\0')\n    {\n        if((c[i]>='a' && c[i]<='z'))\n        {\n            letter++;\n        }\n        i++;\n    }\nif(letter<=10)\n{\n    printf(\"%s\\n\",c);\n}\nelse printf(\"%c%d%c\\n\",c[0],letter-2,c[letter-1]);\n\n    }\n return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char c[100];\n    int i=0,letter,t,j;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n    scanf(\"%s\",&c);\n   letter=strlen(c);\nif(letter<=10)\n{\n    printf(\"%s\\n\",c);\n}\nelse printf(\"%c%d%c\\n\",c[0],letter-2,c[letter-1]);\n    }\n return 0;\n}\n"}
{"similarity_score": 0.330078125, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "68870cf9fe51e7af982de9e4a531157b", "bug_code_uid": "b114fa0377b09d908b49249a73b2816e", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "067f051e950015192ab3196b2207304e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tlong long int a,b,c,d;\n\t\tscanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n\t\tif(a>b && c>d)\n\t\t{\n\t\t    int diff,sum,ans;\n\t\t    diff=c-d;\n\t\t    for(int i=1;i<100;i++)\n\t\t    {\n\t\t\t    if(a<=(b+diff*i))\n\t\t\t    {\n\t\t\t\t    ans=i;\n\t\t\t\t    break;\n\t\t\t    }\n\t\t    }\n\t\t    sum=b+(c*ans);\n\t\t    printf(\"%lld\\n\",sum);\n\t\t}\n\t\telse if(a<b || a==b)\n\t\t    printf(\"%lld\\n\",b);\n\t\telse if(c-d<1)\n\t\t    printf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tlong long int a,b,c,d,diff,sum,ans,i;\n\t\tscanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n\t\tlong long int f=(a-b)/(c-d);\n\t\tlong long int mod=(a-b)%(c-d);\n\t\tif(a>b && c>d)\n\t\t{\n\t\t    if(mod==0)\n\t\t    {\n\t\t        i=f;\n\t\t        sum=b+(i*c);\n\t\t        printf(\"%lld\\n\",sum);\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t        i=f+1;\n\t\t        sum=b+(i*c);\n\t\t        printf(\"%lld\\n\",sum);\n\t\t    }\n\t\t}\n\t\telse if(a<b || a==b)\n\t\t    printf(\"%lld\\n\",b);\n\t\telse if(c-d<1)\n\t\t    printf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9873015873015873, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "27444822ae1404d6a2eb3f1ec927e6d5", "bug_code_uid": "312c07e6940ce3d4a7b3b543eaf94265", "src_uid": "fc547fc83ebbcc3c058a069ef9fef62c", "apr_id": "58e9f597b90e1cd627e863d85018aae0", "difficulty": 1100, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n int main(){ \r\n     int t; \r\n      scanf(\"%d\",&t);\r\n     \r\n     while(t>0){ \r\n     int a,b,c,m; \r\n     scanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n    \r\n  \r\nif((a-1)>b+c+m || (b-1)>a+c+m || (c-1)>a+b+m)  \r\nprintf(\"NO\\n\");\r\n\r\nelse if(m<=(a+b+c-3)) \r\nprintf(\"YES\\n\");\r\n\r\nelse \r\nprintf(\"NO\\n\");; \r\n} \r\n}", "fixed": "#include <stdio.h>\r\n\r\n int main(){ \r\n     int t; \r\n      scanf(\"%d\",&t);\r\n     \r\n     while(t>0){ \r\n     int a,b,c,m; \r\n     scanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n    \r\n  \r\nif((a-1)>b+c+m || (b-1)>a+c+m || (c-1)>a+b+m)  \r\nprintf(\"NO\\n\");\r\n\r\nelse if(m<=(a+b+c-3)) \r\nprintf(\"YES\\n\");\r\n\r\nelse \r\nprintf(\"NO\\n\");\r\nt--;\r\n} \r\n}"}
{"similarity_score": 0.9080779944289693, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3ca3c9ea65cd144639e7bff712a3c796", "bug_code_uid": "5db904870388f3e52eecd16a4f458d58", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "3af43985fdf6e6e6785704532118f48e", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,sum1,sum2,sum3,a[100001],b[100001],c[10001];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum1+=a[i];\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tsum2+=b[i];\n\t}\n\tfor(i=0;i<n-2;i++)\n\t{\n\t\tscanf(\"%d\",&c[i]);\n\t\tsum3+=c[i];\n\t}\n\tprintf(\"%d\\n\",sum1-sum2);\n\tprintf(\"%d\\n\",sum2-sum3);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,sum1=0,sum2=0,sum3=0,a[100001]={0},b[100001]={0},c[10001]={0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum1+=a[i];\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\tsum2+=b[i];\n\t}\n\tfor(i=0;i<n-2;i++)\n\t{\n\t\tscanf(\"%d\",&c[i]);\n\t\tsum3+=c[i];\n\t}\n\tprintf(\"%d\\n\",sum1-sum2);\n\tprintf(\"%d\\n\",sum2-sum3);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9958847736625515, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3a4b8d811b4da6cd5567c085c31cbae3", "bug_code_uid": "b61e8db7bc871ba850db0aacf8fed4ec", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "13da2b294df5772f1f9d9ee542156c41", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n\nlong long int n,max=-10000000,f,t,k;\nscanf(\"%I64d %I64d\",&n,&k);\nwhile(n--){\n\n\tscanf(\"%I64d %I64d\",&f,&t);\n\n\tif(t>k)\n{  if((f-(t-k))>max)\n\t\t\tmax=f-(t-k);\n}\nelse {\n\tif(f>max)\n\t\tmax=f;\n}\n\n\n\n}\nprintf(\"%I64d\",max);\n\n\n}\n", "fixed": "#include<stdio.h>\nmain(){\n\nlong long int n,max=-1000000000,f,t,k;\nscanf(\"%I64d %I64d\",&n,&k);\nwhile(n--){\n\n\tscanf(\"%I64d %I64d\",&f,&t);\n\n\tif(t>k)\n{  if((f-(t-k))>max)\n\t\t\tmax=f-(t-k);\n}\nelse {\n\tif(f>max)\n\t\tmax=f;\n}\n\n\n\n}\nprintf(\"%I64d\",max);\n\n\n}\n"}
{"similarity_score": 0.9901380670611439, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d5252a14884c205f0a3b40b19a0b7833", "bug_code_uid": "40b6fa201b1293bb1bfffc0ab1280fa5", "src_uid": "d1926feaeec151f4a2f186a46a863d90", "apr_id": "83f453fc1149b765dff104aaf6b1db1a", "difficulty": 1400, "tags": ["constructive algorithms", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tstatic long long int c=0,a[500005],p[1000000],c1,c2;\n\tint n,i;\n\tchar s[1000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&p[i]);\n\t}\n\tscanf(\"%s\",&s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='B')\n\t\t{\n\t\t\tc=c+p[i];\n\t\t}\n\t}\n\tc1=c;\n\tc2=c;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='B')\n\t\t{\n\t\t\tc1=c1-p[i];\n\t\t}\n\t\telse\n\t\tc1=c1+p[i];\n\t\tif(c1>c)\n\t\tc=c1;\n\t}\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tif(s[i]=='B')\n\t\t{\n\t\t\tc2=c2-p[i];\n\t\t}\n\t\telse\n\t\tc2=c2+p[i];\n\t\tif(c2>c)\n\t\tc=c2;\n\t}\n\tprintf(\"%lld\",c);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tstatic long long int c=0,a[500005],p[1000000],c1,c2;\n\tint n,i;\n\tchar s[500005];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&p[i]);\n\t}\n\tscanf(\"%s\",&s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='B')\n\t\t{\n\t\t\tc=c+p[i];\n\t\t}\n\t}\n\tc1=c;\n\tc2=c;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='B')\n\t\t{\n\t\t\tc1=c1-p[i];\n\t\t}\n\t\telse\n\t\tc1=c1+p[i];\n\t\tif(c1>c)\n\t\tc=c1;\n\t}\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tif(s[i]=='B')\n\t\t{\n\t\t\tc2=c2-p[i];\n\t\t}\n\t\telse\n\t\tc2=c2+p[i];\n\t\tif(c2>c)\n\t\tc=c2;\n\t}\n\tprintf(\"%lld\",c);\n\treturn 0;\n}"}
{"similarity_score": 0.6826706676669168, "equal_cnt": 16, "replace_cnt": 7, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "269ab7dd59f5d89c6d64b8d1f62ddb2f", "bug_code_uid": "156121b36d1b96b2a657c52edd840259", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "5e771a0a455bcc97dde78628dcadee69", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint cmpfunc(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b); \n}\nint main(void) \n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[100001],j=1,i,flag=0,t;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(arr[i]>=arr[i-1])\n        {\n            j++;\n        }\n    }\n    t=n-j;\n    if(arr[n-1]>arr[0])\n    {\n        if(i!=n)\n        {\n            flag=1;\n        }\n    }\n    \n    for(j=i;j<n-1;j++)\n    {\n        if(arr[j]>arr[j+1] && flag!=1)\n        {\n            flag=1;\n        }\n    }\n        if(flag==0)\n            printf(\"%d\\n\",t);\n        else\n        {\n            printf(\"-1\\n\");\n        }\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint cmpfunc(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b); \n}\nint main(void) \n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[100001],j=1,i,flag=0,t=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    i=1;\n    while(arr[i]>=arr[i-1] && i<n)\n            i++;\n    t=n-i;\n    if(arr[n-1]>arr[0] && i!=n)\n    {\n        flag=1;\n    }\n \n    for(j=i;j<n-1;j++)\n    {\n        if(arr[j]>arr[j+1] && flag!=1)\n        {\n            flag=1;\n        }\n    }\n    if(flag==0)\n    {\n        printf(\"%d\\n\",t);\n    }\n    else\n    {\n        printf(\"-1\\n\");\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.584, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "e9e0d911973f512e60d53ed54c6f168d", "bug_code_uid": "c81eb273879525efc9d6e8c40bcc017d", "src_uid": "7f98c9258f3e127a782041c421d6317b", "apr_id": "d594742512d6c2f4c179f615168163b6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[200001],i;\n    scanf(\"%d\",&n);\n    for(i=0;i<2*n;i++)scanf(\"%d\",&a[ i ]);\n    for(i=1;i<2*n;i++)\n    {\n        if(a[ i ]==a[ i-1 ])n--;\n    }\n     if(n>0)printf(\"%d\",n);\n     else printf(\"%d\",1);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[200001],i,x,c=0,ans=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(a[ x ]==1)c--;\n        else c++;\n        if(c>ans)ans = c;\n        a[ x ] = 1;\n    }\n    printf(\"%d\",ans);\n}\n"}
{"similarity_score": 0.9891788669637174, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5e8443b02556ea6d550c00b22dab6994", "bug_code_uid": "7d32c3fd0fedbd918464b310f8997f24", "src_uid": "c4d32fcacffaa5d3a4db6dfa376d0324", "apr_id": "6a7f6d3fbc289cb7b2b68ea48a0110e2", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,n,i,b[101][2],l=1,a[201],m,j,max,x,k;\n    scanf(\"%lld\",&t);\n    for(m=1;m<=t;m++)\n    {max=0;\n     scanf(\"%lld\",&n);\n     for(i=1;i<=n;i++)\n     {scanf(\"%lld\",&b[i][0]);\n      a[b[i][0]=l;\n      if(b[i][0]>max)\n      {max=b[i];}\n     }\n     if(max>=2*n)\n     {printf(\"-1\\n\");}\n     else\n     {k=0;\n      for(i=1;i<=n;i++)\n      {for(j=b[i][0]+1;j<=2*n;j++)\n       {z=0;\n        f(a[j]!=l)\n        {b[i][1]=j;\n         a[j]=l;\n         z++;\n         break;\n        }\n       }\n       if(z==0)\n       {printf(\"-1\\n\");\n        k++;\n        break;\n       }\n      }\n      if(k==0)\n      {for(i=1;i<=n;i++)\n       {printf(\"%lld %lld \",b[i][0],b[i][1]);}\n       printf(\"\\n\");\n      }\n     }\n    }\n    return 0;\n}\n     \n         \n     ", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,n,i,b[101][2],l=1,a[201],m,j,max,x,k,z;\n    scanf(\"%lld\",&t);\n    for(m=1;m<=t;m++)\n    {max=0;\n     scanf(\"%lld\",&n);\n     for(i=1;i<=n;i++)\n     {scanf(\"%lld\",&b[i][0]);\n      a[b[i][0]]=l;\n      if(b[i][0]>max)\n      {max=b[i][0];}\n     }\n     if(max>=2*n)\n     {printf(\"-1\\n\");}\n     else\n     {k=0;\n      for(i=1;i<=n;i++)\n      {for(j=b[i][0]+1;j<=2*n;j++)\n       {z=0;\n        if(a[j]!=l)\n        {b[i][1]=j;\n         a[j]=l;\n         z++;\n         break;\n        }\n       }\n       if(z==0)\n       {printf(\"-1\\n\");\n        k++;\n        break;\n       }\n      }\n      if(k==0)\n      {for(i=1;i<=n;i++)\n       {printf(\"%lld %lld \",b[i][0],b[i][1]);}\n       printf(\"\\n\");\n      }\n     }\n     l++;\n    }\n    return 0;\n}\n     \n         \n     "}
{"similarity_score": 0.6817777777777778, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "5bbf9fc1cefd9644e7199d786551e463", "bug_code_uid": "1d4be8d2b4eee1341d7047295a7c1310", "src_uid": "cb852bf0b62d72b3088969ede314f176", "apr_id": "bb901ff19cfe257323b2ef11232134d5", "difficulty": 1500, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define right 1\n#define left 0\nint a[300010],num[4],n;\nvoid fill(int from,int to,int dir){\n\tint i;\n\tif(dir){\n\t\tfor(i=0;i<n;i++){\n\t\t\tif(a[i]==from){\n\t\t\t\tnum[to]++;\n\t\t\t\ta[i]=to;\n\t\t\t\tif(num[to]>=n/3)return;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tfor(i=n-1;i>=0;i--){\n\t\t\tif(a[i]==from){\n\t\t\t\tnum[to]++;\n\t\t\t\ta[i]=to;\n\t\t\t\tif(num[to]>=n/3)return;\n\t\t\t}\n\t\t}\n\t} \n}\nint main(){\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)scanf(\"%1d\",&a[i]),num[a[i]]++;\n\tif(num[0]<n/3){\n\t\tif(num[1]<n/3){\n\t\t\tfill(2,0,right);\n\t\t\tfill(2,1,right); \n\t\t}else if(num[1]>n/3){\n\t\t\tif(num[2]<n/3){\n\t\t\t\tfill(1,0,right);\n\t\t\t\tfill(1,2,left);\n\t\t\t}else if(num[2]>n/3){\n\t\t\t\tfill(2,0,right);\n\t\t\t\tfill(1,0,right);\n\t\t\t}else fill(1,0,right);\n\t\t}else fill(2,0,right);\n\t}else if(num[0]>n/3){\n\t\tif(num[1]>n/3){\n\t\t\tfill(1,2,left);\n\t\t\tfill(0,2,left);\n\t\t}else if(num[1]<n/3){\n\t\t\tif(num[2]<n/3){\n\t\t\t\tfill(0,2,left);\n\t\t\t\tfill(0,1,left);\n\t\t\t}else if(num[2]>n/3){\n\t\t\t\tfill(2,1,right);\n\t\t\t\tfill(0,1,left);\n\t\t\t}else fill(0,1,left);\n\t\t}else fill(0,2,left);\n\t}else{\n\t\tif(num[1]<n/3)fill(2,1,right);\n\t\telse if(num[1]>n/3)fill(1,2,left);\n\t}\n\tfor(i=0;i<n;i++)printf(\"%d\",a[i]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define right 1\n#define left 0\nint a[300010],num[4],n;\nvoid fill(int from,int to){\n\tint i,dir=from-to;\n\tif(num[to]>=n/3||num[from]==n/3)return;\n\tif(dir>0){\n\t\tfor(i=0;i<n;i++){\n\t\t\tif(a[i]==from){\n\t\t\t\tnum[to]++;num[from]--;\n\t\t\t\ta[i]=to;\n\t\t\t\tif(num[to]>=n/3||num[from]==n/3)return;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tfor(i=n-1;i>=0;i--){\n\t\t\tif(a[i]==from){\n\t\t\t\tnum[to]++;num[from]--;\n\t\t\t\ta[i]=to;\n\t\t\t\tif(num[to]>=n/3||num[from]==n/3)return;\n\t\t\t}\n\t\t}\n\t} \n}\nint main(){\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)scanf(\"%1d\",&a[i]),num[a[i]]++;\n\tif(num[0]<n/3){\n\t\tif(num[1]<n/3){\n\t\t\tfill(2,0);\n\t\t\tfill(2,1); \n\t\t}else if(num[1]>n/3){\n\t\t\tif(num[2]<n/3){\n\t\t\t\tfill(1,0);\n\t\t\t\tfill(1,2);\n\t\t\t}else if(num[2]>n/3){\n\t\t\t\tfill(2,0);\n\t\t\t\tfill(1,0);\n\t\t\t}else fill(1,0);\n\t\t}else fill(2,0);\n\t}else if(num[0]>n/3){\n\t\tif(num[1]>n/3){\n\t\t\tfill(1,2);\n\t\t\tfill(0,2);\n\t\t}else if(num[1]<n/3){\n\t\t\tif(num[2]<n/3){\n\t\t\t\tfill(0,2);\n\t\t\t\tfill(0,1);\n\t\t\t}else if(num[2]>n/3){\n\t\t\t\tfill(2,1);\n\t\t\t\tfill(0,1);\n\t\t\t}else fill(0,1);\n\t\t}else fill(0,2);\n\t}else{\n\t\tif(num[1]<n/3)fill(2,1);\n\t\telse if(num[1]>n/3)fill(1,2);\n\t}\n\tfor(i=0;i<n;i++)printf(\"%d\",a[i]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.918531781557744, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "0cae32cdcb1deca903c3f289cae29576", "bug_code_uid": "3661b05f99c6ba59219e11afea6f6e42", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "586df98b4bc25ef50ec1b39994f8a16f", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main() {\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(--t){\r\n        int n;\r\n   scanf(\"%d\",&n);\r\n       if(n==1){\r\n           printf(\"%d\",n*2);\r\n       }\r\n       else if(n%3==1){\r\n           int c;\r\n           c=(n-4)/3 + 2;\r\n           printf(\"%d  \",c);\r\n       }\r\n       else if(n%3==0){\r\n           printf(\"%d  \",n/3); }\r\n    \r\n       else {\r\n               int min=0;\r\n               int a=n%3;\r\n               int b=a%2;\r\n              min=n/3+ a/2 + 2*b;\r\n              printf(\"%d  \",min);\r\n           }}\r\n           \r\n   \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int j=0;j<t;j++){\r\n        int n;\r\n   scanf(\"%d\",&n);\r\n       if(n==1){\r\n           printf(\"%d\\n\",n*2);\r\n       }\r\n       else if(n%3==1){\r\n           int c;\r\n           c=(n-4)/3 + 2;\r\n           printf(\"%d\\n\",c);\r\n       }\r\n       else if(n%3==0){\r\n           printf(\"%d\\n\",n/3); }\r\n    \r\n       else {\r\n               int min;\r\n               int a=n%3;\r\n               int b=a%2;\r\n              min=n/3+ a/2 + 2*b;\r\n              printf(\"%d\\n\",min);}}\r\n       return 0;\r\n}"}
{"similarity_score": 0.9974895397489539, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d10e801d03d1f98a46ca3198ad4a92a3", "bug_code_uid": "d71ed43d9ccbcb86ef0d5f15f884b3ed", "src_uid": "25232f4244004fa4c130892957e5de84", "apr_id": "6e273c346260bf57e34058d33f514826", "difficulty": 1900, "tags": ["dp", "combinatorics", "two pointers", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define M_MAX 1001\n\nint N, M;\nint d[M_MAX][M_MAX];\nint a[M_MAX];\n\nvoid dp() {\n\td[0][a[0]] = 1;\n\tint i, j;\n\tfor (i = 1; i < N; ++i) {\n\t\tfor (j = 0; j < M; ++j) {\n\t\t\td[i][j] = d[i-1][j];\n\t\t\tif (d[i-1][j]) {\n\t\t\t\tint k = (a[i] + j) % M;\n\t\t\t\td[i][k] = 1;\n\t\t\t}\n\t\t}\n\t\td[i][a[i]] = 1;\n\t}\n}\n\nint main() {\n\t//freopen(\"input.txt\", \"r\", stdin);\n\tscanf(\"%d %d\", &N, &M);\n\tif (N >= M) {\n\t\tprintf(\"YES\\n\");\n\t\treturn 0;\n\t}\n\tint i, val;\n\tfor (i = 0; i < N; ++i) {\n\t\tscanf(\"%d\", &val);\n\t\ta[i] = val % M;\n\t}\n\tdp();\n\tif (d[N-1][0]) {\n\t\tprintf(\"YES\\n\");\n\t} else {\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define M_MAX 1001\n\nint N, M;\nint d[M_MAX][M_MAX];\nint a[M_MAX];\n\nvoid dp() {\n\td[0][a[0]] = 1;\n\tint i, j;\n\tfor (i = 1; i < N; ++i) {\n\t\tfor (j = 0; j < M; ++j) {\n\t\t\td[i][j] |= d[i-1][j];\n\t\t\tif (d[i-1][j]) {\n\t\t\t\tint k = (a[i] + j) % M;\n\t\t\t\td[i][k] = 1;\n\t\t\t}\n\t\t}\n\t\td[i][a[i]] = 1;\n\t}\n}\n\n\n\nint main() {\n\t//freopen(\"input.txt\", \"r\", stdin);\n\tscanf(\"%d %d\", &N, &M);\n\tif (N >= M) {\n\t\tprintf(\"YES\\n\");\n\t\treturn 0;\n\t}\n\tint i, val;\n\tfor (i = 0; i < N; ++i) {\n\t\tscanf(\"%d\", &val);\n\t\ta[i] = val % M;\n\t}\n\tdp();\n\tif (d[N-1][0]) {\n\t\tprintf(\"YES\\n\");\n\t} else {\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9708404802744426, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d8eb8d57d61160c3cb13fbd1f75c7b1a", "bug_code_uid": "b93f7a4d389df193f324fce9aa3928e1", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "13d4fbad4621b8dfdd50b86ff825d32d", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    int t,i,num;\n    unsigned long long int n,x;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        num=4;\n        scanf(\"%llu\",&n);\n        while((n%(num-1))!=0){\n            num = num*2;\n        }\n        printf(\"%llu\\n\",(n%(num-1)));\n        \n    }\n}", "fixed": "#include<stdio.h>\n \nint main() {\n    int t,i,num;\n    unsigned long long int n,x;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        num=4;\n        scanf(\"%llu\",&n);\n        while((n%(num-1))!=0){\n            num = num*2;\n        }\n        printf(\"%llu\\n\",(n/(num-1)));\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9598623853211009, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a1bd40703c3a7cec250b057d8286d0f9", "bug_code_uid": "b8bc8266b5825fe4a3a95ce287d2bf84", "src_uid": "b6ac7c30b7efdc7206dbbad5cfb86db7", "apr_id": "5ddb999bb7520ec87181c525603b9116", "difficulty": 1500, "tags": ["math"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define maxn (int)2e7\nint q[maxn];\nlong long p[maxn];\nint isExist[maxn];\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    long long sum = 0;\n    long long min = 0;\n    for(int i = 1; i <= n-1; i++) {\n        scanf(\"%d\", &q[i]);\n        sum += q[i];\n        if(sum < min) min = sum;\n    }\n    memset(p, 0, sizeof(p));\n    memset(isExist, 0, sizeof(isExist));\n    p[1] = 1-min;\n    isExist[p[1]] = 1;\n    for(int i = 1; i <= n-1; i++) {\n        p[i+1] = p[i] + q[i];\n        isExist[p[i+1]] = 1;\n    }\n    int flag = 1;\n    for(int i = 1; i <= n; i++) {\n        if(isExist[i] != 1) {\n            flag = 0;\n            break;\n        }\n    }\n    if(!flag) printf(\"-1\\n\");\n    else {\n        for(int i = 1; i <= n; i++) {\n            printf(\"%I64d%s\", p[i], i == n ? \"\\n\" : \" \");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#define maxn 200005\nint q[maxn];\nlong long p[maxn];\nint isExist[maxn];\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    long long sum = 0;\n    long long min = 0;\n    for(int i = 1; i <= n-1; i++) {\n        scanf(\"%d\", &q[i]);\n        sum += q[i];\n        if(sum < min) min = sum;\n    }\n    memset(p, 0, sizeof(p));\n    memset(isExist, 0, sizeof(isExist));\n    p[1] = 1-min;\n    if(p[1] >= 1 && p[1] <= n) isExist[p[1]] = 1;\n    for(int i = 1; i <= n-1; i++) {\n        p[i+1] = p[i] + q[i];\n        if(p[i+1] >= 1 && p[i+1] <= n) isExist[p[i+1]] = 1;\n    }\n    int flag = 1;\n    for(int i = 1; i <= n; i++) {\n        if(isExist[i] != 1) {\n            flag = 0;\n            break;\n        }\n    }\n    if(!flag) printf(\"-1\\n\");\n    else {\n        for(int i = 1; i <= n; i++) {\n            printf(\"%I64d%s\", p[i], i == n ? \"\\n\" : \" \");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9833679833679834, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "232283b250248dfae87579c6c0705d2a", "bug_code_uid": "4c9992b6c24dbfa4487d6b2629fc1725", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "c2c2fb6d46136d3a069c7a3e91fec7f9", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int n,a[1000],i,j,temp,t1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n      scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n     for(j=i+1;j<n;j++)\n     {\n        if(a[i]<a[j]){\n            temp =  a[i];\n            a[i] = a[j];\n            a[j] = temp;}\n        }\n    }\nfor(i=0;i<n;i++)\n    {\n        if(a[i]>0){\n        t1=sqrt(a[i]);\n        if(t1*t1!=a[i]){\n            printf(\"%d\",a[i]);\n             break;}}}\n             return 0;}\n\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int n,a[1000],i,j,temp,t1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n      scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n     for(j=i+1;j<n;j++)\n     {\n        if(a[i]<a[j]){\n            temp =  a[i];\n            a[i] = a[j];\n            a[j] = temp;}\n        }\n    }\nfor(i=0;i<n;i++)\n    {\n       \n        t1=sqrt(a[i]);\n        if(t1*t1!=a[i]){\n            printf(\"%d\",a[i]);\n             break;}}\n             return 0;}"}
{"similarity_score": 0.8708074534161491, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "480b807736d4d4dbb3f95e1cfee98711", "bug_code_uid": "fd48c2d31aee9f9483b0d7eef375e36b", "src_uid": "2e837d3afc48177516578a950e957586", "apr_id": "cf3f94263961a0dc01de0d26563d02af", "difficulty": 1200, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    long long int N,M,E,i,j,k,a,b,c,d,f,x,y,z,mini,n,p,s,ma;\r\n    scanf(\"%lld\", &E);\r\n    for(f=0; f<E; f++)\r\n    {\r\n        scanf(\"%lld %lld\", &a,&b);\r\n        if(a%2==0)\r\n        {\r\n            d=b%a;\r\n            if(b%a==0)\r\n            {\r\n                d=a;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            x=(a/2);\r\n            y=(b-1)/x;\r\n            z=b%a;\r\n            if(b<=x)\r\n            {\r\n                d=b;\r\n            }\r\n            else\r\n            {\r\n                if(b%a==0)\r\n                {\r\n                    z=a;\r\n                }\r\n                d=z+y;\r\n                if(d>a)\r\n                {\r\n                    d=d-a;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",d);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    long long int N,M,E,i,j,k,a,b,c,d,f,x,y,z,mini,n,p,s,ma;\r\n    scanf(\"%lld\", &E);\r\n    for(f=0; f<E; f++)\r\n    {\r\n        scanf(\"%lld %lld\", &a,&b);\r\n        if(a%2==0)\r\n        {\r\n            d=b%a;\r\n            if(b%a==0)\r\n            {\r\n                d=a;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            x=(a/2);\r\n            y=(b-1)/x;\r\n            if(b<=x)\r\n            {\r\n                d=b;\r\n            }\r\n            else\r\n            {\r\n                d=(b+y)%a;\r\n                if(d>a)\r\n                {\r\n                    d=d-a;\r\n                }\r\n                if(d==0)\r\n                {\r\n                    d=a;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",d);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9957446808510638, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f650e5ab4c34e3fe2c074bc2a4368bab", "bug_code_uid": "602f2bcb7dbdd4e34c105354207760c4", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "e8b762ae0f35624531efc2931bcf1b7e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{ \r\n  \r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  for(;0<t;t--)\r\n  {int a,b,c;\r\n  scanf(\"%d %d %d\",&a,&b,&c);\r\n  if(a+b==c||b+c==a||a+c==b)\r\n     {printf(\"Yes\\n\");}\r\n  else \r\n  {printf(\"No\\n\");}\r\n  return 0;\r\n    }}", "fixed": "#include<stdio.h>\r\nint main()\r\n{ \r\n  \r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  for(;0<t;t--)\r\n  {int a,b,c;\r\n  scanf(\"%d %d %d\",&a,&b,&c);\r\n  if(a+b==c||b+c==a||a+c==b)\r\n     {printf(\"Yes\\n\");}\r\n  else \r\n  {printf(\"No\\n\");}}\r\n  return 0;\r\n    }"}
{"similarity_score": 0.965255843335439, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0662358902ee68120f4f83dae37fde70", "bug_code_uid": "8c2807c37bf94b2452a9770f59b22e5b", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "f7acece158c58bcd5f323507fe4889b7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int A[100],N,L,i,temp,j,n,k,m,x=0;\n    scanf(\"%d\", &N);\n    for(i=1; i<=N; i++)\n    {\n        m=1;\n        scanf(\"%d\", &L);\n\n        for(j=0; j<L; j++)\n        {\n            scanf(\"%d\", &A[j]);\n        }\n        for(j=0; j<L; j++)\n        {\n            for(n=0; n<L; n++)\n            {\n                if(A[n]>A[j])\n                {\n                    temp=A[j];\n                    A[j]=A[n];\n                    A[n]=temp;\n                }\n            }\n        }\n\n\n        for(j=L-1; j>=1; j--)\n        {\n\n            k=A[j]-A[j-1];\n          \n\n            if(k==1)\n            {\n                x++;\n            }\n \n        }\n\n        if(x>=1)\n        {\n            m++;\n        }\n        printf(\"%d\\n\", m);\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int A[100],N,L,i,temp,j,n,k,m=1,x;\n    scanf(\"%d\", &N);\n    for(i=1; i<=N; i++)\n    {\n\n        scanf(\"%d\", &L);\n\n        for(j=0; j<L; j++)\n        {\n            scanf(\"%d\", &A[j]);\n        }\n        for(j=0; j<L; j++)\n        {\n            for(n=0; n<L; n++)\n            {\n                if(A[n]>A[j])\n                {\n                    temp=A[j];\n                    A[j]=A[n];\n                    A[n]=temp;\n                }\n            }\n        }\n\n        x=0;\n        for(j=L-1; j>=1; j--)\n        {\n\n            k=A[j]-A[j-1];\n\n\n            if(k==1)\n            {\n                x++;\n            }\n\n        }\n\n        if(x>=1)\n        {\n            m++;\n        }\n        printf(\"%d\\n\", m);\n        m=1;\n    }\n\n\n    return 0;\n}"}
{"similarity_score": 0.07915057915057915, "equal_cnt": 4, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ac91c8f85cd0de676ff2f5ad3d015dfe", "bug_code_uid": "b5c9e151ec9bb385540deeaf27483406", "src_uid": "9693f60fc65065d00a1899df999405fe", "apr_id": "de22c4927e4f95921911bd87143e74fb", "difficulty": 1300, "tags": ["combinatorics", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MOD 998244353\n#define MAX 200007\n\nint main(void) {\n\t// your code goes here\n\tint n, f = 1, l = 1, ans, i;\n\tchar str[MAX];\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", str);\n\ti = 1;\n\twhile(i < n && str[i] == str[i - 1])\n\t{\n\t\t++f;\n\t\t++i;\n\t}\n\ti = n - 1;\n\twhile(i >= 1 && str[i] == str[i - 1])\n\t{\n\t\t++l;\n\t\t--i;\n\t}\n\tif(f == n && l == n)\n\t{\n\t\tans = ((n * (n + 1)) / 2) % MOD;\n\t}\n\telse\n\t{\n\t\tif(str[0] == str[n - 1])\n\t\t{\n\t\t\tans = (f + l + 1 + f * l) % MOD;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans = (f + l + 1) % MOD;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAX 200007\n\nint main() {\n\t\n\tint n, i;\n\tchar s[MAX];\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", s);\n\tint cntl = 0, cntr = 0;\n\tfor ( i = 0; i < n; ++i) {\n\t\tif (s[i] == s[0]) {\n\t\t\t++cntl;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ( i = n - 1; i >= 0; --i) {\n\t\tif (s[i] == s[n - 1]) {\n\t\t\t++cntr;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (s[0] == s[n - 1]) {\n\t\tprintf(\"%d\\n\", ((cntl + 1) * 1ll * (cntr + 1)) % 998244353);\n\t} else {\n\t\tprintf(\"%d\\n\", (cntl + cntr + 1) % 998244353);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.841025641025641, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a58acf219bfa08dba5dea41c54c8df3a", "bug_code_uid": "c7ecdf99a56c0d34b5c125f37b6dc072", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "4efea44ef6ba1ab2f1518223eb653b12", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i=1,a[100000];\nscanf(\"%d\",&n);\nwhile(i<=n)\n{\nscanf(\"%d\\n\",&a[i]);\ni++;\n}\nif(a[1]==1)\nprintf(\"-1\");\nelse\nprintf(\"1\");\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i=1,c,a[100000];\nscanf(\"%d\",&n);\nwhile(i<=n)\n{\nscanf(\"%d\\n\",&a[i]);\ni++;\n}\ni=1;\nwhile(i<=n)\n{\nif(a[i]==1)\n{c=1;\nbreak;}\nelse\nc=0;\ni++;}\nif(c==1)\nprintf(\"-1\");\nelse\nprintf(\"1\");\nreturn 0;\n}"}
{"similarity_score": 0.9907464528069093, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "f081dd0c6e8c0a1a88258a83c7fa7184", "bug_code_uid": "ac29c8d557d9e7bf2a91f67ab2d03b00", "src_uid": "91541d10c5ae52be8da33412359bd019", "apr_id": "3a5f48314b3c620565acdcb33892488c", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint comp(const void *p, const void *q) {\n\treturn *(int *)p - *(int *)q;\n}\n\nint main(void)\n{\n    int dis = 0,k=0,sm =0,n,s,j,size,comprese;\n    int arr[100000],i;\n\tlong long sumsize = 0,sumcomprese = 0;\n    scanf(\"%ld %ld\",&n,&s);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld %ld\",&size,&comprese);\n        arr[i] = size - comprese;\n        sumsize += size;\n        sumcomprese += comprese;\n\n    }\n\n\n\n    if(sumsize<=s)\n    {\n        printf(\"0\");\n        return 0;\n    }\n\n    if(sumcomprese>s)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n\n\n\n    qsort(arr, n, sizeof(int), comp);\n\n\t\n\ndis = sumsize - s;\nsm =0;\nk=0;\nfor(i=n-1;i>=0;i--)\n{\n    sm+=arr[i];\n    k++;\n    if(sm>=dis)\n    {\n        printf(\"%ld\",k);\n        return 0;\n    }\n}\n\nprintf(\"-1\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint comp(const void *p, const void *q) {\n\treturn *(int *)p - *(int *)q;\n}\n\nint main(void)\n{\n    long long dis = 0,k=0,sm =0,n,s,j,size,comprese;\n    int arr[100001],i;\n\tlong long sumsize = 0,sumcomprese = 0;\n    scanf(\"%ld %ld\",&n,&s);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld %ld\",&size,&comprese);\n        arr[i] = size - comprese;\n        sumsize += size;\n        sumcomprese += comprese;\n\n    }\n\n\n\n    if(sumsize<=s)\n    {\n        printf(\"0\");\n        return 0;\n    }\n\n    if(sumcomprese>s)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n\n\n\n    qsort(arr, n, sizeof(int), comp);\n\n\n\ndis = sumsize - s;\nsm =0;\nk=0;\nfor(i=n-1;i>=0;i--)\n{\n    sm+=arr[i];\n    k++;\n    if(sm>=dis)\n    {\n        printf(\"%ld\",k);\n        return 0;\n    }\n}\n\nprintf(\"-1\");\nreturn 0;\n}\n"}
{"similarity_score": 0.4473684210526316, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "eeaad0c92ac273dd2bf55920a90eb93b", "bug_code_uid": "8577fa0a4cd76f36d6ebe383379cfe7e", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "ec9861dd0c4d8ce492e05342d7bf2b37", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long int ll;\n#define prn(x) printf(\"%d\\n\",x);\n#define sc(x) scanf(\"%d\",&x);\n#define scl(x) scanf(\"%lld\",&x);\n\nint main()\n{\n\tint t,maxpos=0;\n\tscanf(\"%d\",&t);\n\tchar st[200010];\n\tscanf(\"%s\",st);\n\tchar maxc=st[0];\n\tif(st[1] < st[0]) printf(\"%s\",&st[1]);\n\telse\n\t{\n\t\tfor(int i=1;i<t;i++)\n\t\t{\n\t\t\tif(st[i]>maxc)\n\t\t\t{\n\t\t\t\tmaxc=st[i];\n\t\t\t\tmaxpos=i;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<t;i++)\n\t\t{\n\t\t\tif(i!=maxpos) printf(\"%c\",st[i]);\n\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef long long int ll;\n#define prn(x) printf(\"%d\\n\",x);\n#define sc(x) scanf(\"%d\",&x);\n//#define scl(x) scanf(\"%lld\",&x);\n\nint main()\n{\n\tint n,i;\n\tsc(n);\n\tchar a[200020];\n\tscanf(\"%s\",a);\n\ta[n]='a'-1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i+1] < a[i])\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int j=0;j<n;j++)\n\t{\n\t\tif(j!=i) printf(\"%c\",a[j]);\n\t}\n\tprintf(\"\\n\");\n}\n"}
{"similarity_score": 0.908675799086758, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a790217b6ed511eb013826471dd74392", "bug_code_uid": "818629b74aaf12f59241ede48bebda37", "src_uid": "f4779e16e0857e6507fdde55e6d4f982", "apr_id": "941c5279737dc75ff5adf1c2f5abc1c4", "difficulty": null, "tags": ["constructive algorithms", "probabilities"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main  ()\n\n{\n    int t,i,n;\n   scanf(\"%d\",&t);\n   while (t--)\n   {\n     scanf(\"%d\",&n);\n     for (i=1;i<=n;i++)\n     {\n         printf(\"%d \",i);\n     }\n     printf(\"\\n\");\n   }\n}\n", "fixed": "#include <stdio.h>\nint main  ()\n\n{\n    int t,i,n,x=1\n    ;\n   scanf(\"%d\",&t);\n   while (t--)\n   {\n     scanf(\"%d\",&n);\n     for (i=1;i<n;i++)\n     {\n         printf(\"%d \",i+1);\n     }\n\n\n         printf(\"%d\",x);\n\n     printf(\"\\n\");\n   }\n}\n"}
{"similarity_score": 0.985781990521327, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "480dd483de4bf98208285f4c87d77247", "bug_code_uid": "bb9537262a69d597aca5c2c9e5c4732a", "src_uid": "c047040426e736e9085395ed9666135f", "apr_id": "1b0d2964f4648c3682eef326ed03310d", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n  {\n      int n,i,a;\n      scanf(\"%d\",&n);\n      for(i=1;i<=n;i++)\n      {\n      a=n+i;\n      printf(\"%3d\",a);\n      }\n      \n      \n  \n          \nreturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n  {\n      int n,i,a;\n      scanf(\"%d\",&n);\n      for(i=1;i<=n;i++)\n      {\n      a=n+i;\n      printf(\"%d\\n\",a);\n      }\n     \n      \n  \n          \nreturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.9929522317932654, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ac962e6b7160950488cc97b13afa970b", "bug_code_uid": "aa55dba07d0c490850f5517a38edc291", "src_uid": "0318d4d5ea3425bf6506edeb1026f597", "apr_id": "d4f59167e30b56686b1e43e764801c4a", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long long int m,v;\n    scanf(\"%lld%lld\",&m,&v);\n    long long int arr[m],arr1[2*100000],sum=0,k=1,kp=0,arr2[200000];\n   for(int i=0;i<200000;i++)\n        arr1[i]=0;\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n        if(arr[i]<(v+1))\n           arr1[arr[i]]=1;\n    }\n\n    while(sum<=v)\n    {\n        if(arr1[k]==0)\n        {\n            sum=sum+k;\n             if(sum<=v)\n            arr2[kp++]=k;\n        }\n        k++;\n\n    }\n    printf(\"%lld\\n\",kp);\n    for(int i=0;i<kp;i++)\n    {\n        printf(\"%lld\",arr2[i]);\n        if(i<kp-1)\n        printf(\" \");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long long int m,v;\n    scanf(\"%lld%lld\",&m,&v);\n    long long int arr[m],arr1[2*100000],sum=0,k=1,kp=0,arr2[200000];\n   for(int i=0;i<200000;i++)\n        arr1[i]=0;\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n        if(arr[i]<(200000))\n           arr1[arr[i]]=1;\n    }\n\n    while(sum<=v)\n    {\n        if(arr1[k]==0)\n        {\n            sum=sum+k;\n             if(sum<=v)\n            arr2[kp++]=k;\n        }\n        k++;\n\n    }\n    printf(\"%lld\\n\",kp);\n    for(int i=0;i<kp;i++)\n    {\n        printf(\"%lld\",arr2[i]);\n        if(i<kp-1)\n        printf(\" \");\n    }\n}\n"}
{"similarity_score": 0.993676603432701, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d4134987eda0b8995e024ff117cf77c5", "bug_code_uid": "182ebbf6d7b3e8148c2a2f25fc1e03bd", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "f9860e1b293148f5609cc9a49e8b8e86", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int cases,n,k,j=2,i,flag=0;\n    scanf(\"%d\",&cases); \n   for(i=0;i<cases;i++)\n   {\n       j=2;\n      scanf(\"%d%d\",&n,&k);\n      if(n%2==0)\n          printf(\"%d\\n\",(2*k)+n);\n      else\n      {\n          while(j*j<=n)\n          {\n              if(n%j==0)\n              {\n                  printf(\"%d\\n\",(j+n+(2*(k-1))));\n                  flag=1;\n                  break;\n              }\n              else\n              j++;\n          }\n          if(flag==0)\n          printf(\"%d\\n\",((2*n)+(2*(k-1))));\n      }\n   }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int cases,n,k,j=2,i,flag=0;\n    scanf(\"%d\",&cases); \n   for(i=0;i<cases;i++)\n   {\n       j=2;flag=0;\n      scanf(\"%d%d\",&n,&k);\n      if(n%2==0)\n          printf(\"%d\\n\",(2*k)+n);\n      else\n      {\n          while(j*j<=n)\n          {\n              if(n%j==0)\n              {\n                  printf(\"%d\\n\",(j+n+(2*(k-1))));\n                  flag=1;\n                  break;\n              }\n              else\n              j++;\n          }\n          if(flag==0)\n          printf(\"%d\\n\",((2*n)+(2*(k-1))));\n      }\n   }\n}"}
{"similarity_score": 0.5086805555555556, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "301580c2374944071ad06314e030d093", "bug_code_uid": "b952aeedf328244b146a45d1a8f35cd3", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "af06744130c975e46e127eed05b48486", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,m,i,j,k=0,s,x=0;\n    scanf(\"%I64d%I64d\",&n,&m);\n    int a[n];\n    for(i=0,s=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        s=s+a[i];\n\n    }\nif(s==10)\n    printf(\"%d\",n);\nelse\n   {s=0;\n\n      for(i=0;i<n;i++)\n    {\n        for(j=i,k=0,s=0;j<n;j++)\n        {\n            s=s+a[j];\n            k++;\n            if(s>m)\n            {\n               k=k-1;\n               break;\n            }\n            if(s==m)\n            {\n                break;\n            }\n        }\n        if(k>=x)\n            x=k;\n\n\n    }\n    printf(\"%d\",x);\n   }\n}\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,m,i,j,k=0,s,x=0,l=0,flag=0;\n    scanf(\"%I64d%I64d\",&n,&m);\n   long long  int a[n];\n   long long  int b[n];\n    for(i=0,s=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        s=s+a[i];\n        k++;\n        if(s>m)\n        {\n            k=k-1;\n            s=s-a[l];\n\n            b[l]=k;\n            l++;\n\n\n        }\n    if(i==n-1)\n    {\n       b[l]=k;\n       l++;\n    }\n    }\n    for(i=0;i<l;i++)\n    {\n        if(b[i]>=x)\n        {\n            x=b[i];\n        }\n    }\n    printf(\"%I64d\",x);\n\n}\n\n\n\n\n"}
{"similarity_score": 0.9502262443438914, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "4403d2c9a1786982b9ce2d8508270723", "bug_code_uid": "d79334b60bc0aa52f8ee4e404deeb1ff", "src_uid": "2545b6af730f99193041a8810b728cb3", "apr_id": "278a90ec87ca63be8c40174cd3845788", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\nint main() {\n    int n,a,i;\n    char x[100],y[100];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++) {\n        scanf(\"%d%d\", &x[i], &y[i]);\n    }\n    scanf(\"%d\",&a);\n    for (i=0;i<n;i++){\n        if(a>=x[i]&&a<=y[i]){\n            printf(\"%d\",n-i);\n            break;\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include<math.h>\nint main() {\n    int n,a,i;\n    int x[100],y[100];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++) {\n        scanf(\"%d%d\",&x[i],&y[i]);\n    }\n    scanf(\"%d\",&a);\n    for (i=0;i<n;i++) {\n        if (a >= x[i] && a <= y[i]) {\n            printf(\"%d\", n - i);\n            break;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.8285946385052803, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3a19d416fc866f4e9ba5cb3bb0da84a2", "bug_code_uid": "747062591021ad65f136f2e62d4a7673", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "712ff063fe5d1d1f2849cb381c38046c", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint totalNoOfCandies(int candies, int kids) {\n\n    if((candies / kids) * kids == candies || candies - (candies / kids) * kids <= (kids / 2)) {\n\n        return candies;\n\n    }\n\n    if(candies - (candies / kids) * kids > (kids / 2)) {\n\n        return totalNoOfCandies(candies - 1, kids);\n\n    }\n\n}\n\nint main() {\n\n    int candies, kids;\n    int t;\n\n    scanf(\"%d\", &t);\n\n    for(int i = 0; i < t; i++) {\n\n        scanf(\"%d %d\", &candies, &kids);\n        printf(\"%d \", totalNoOfCandies(candies, kids));\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint totalNoOfCandies(int candies, int kids) {\n\n    if((candies / kids) * kids == candies || candies - (candies / kids) * kids <= (kids / 2)) {\n\n        return candies;\n\n    }\n\n    if(candies - (candies / kids) * kids > (kids / 2)) {\n\n        return totalNoOfCandies(candies - candies % kids + kids/2, kids);\n\n    }\n\n}\n\nint ans[110003];\n\nint main() {\n\n    int candies, kids;\n    int t;\n\n    scanf(\"%d\", &t);\n\n    for(int i = 0; i < t; i++) {\n\n        scanf(\"%d %d\", &candies, &kids);\n        ans[i] = totalNoOfCandies(candies, kids);\n\n    }\n\n    for(int i = 0; i < t; i++) {\n\n        printf(\"%d \", ans[i]);\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.975609756097561, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "009a9b2dfa37f3f91771d759e9d44ca1", "bug_code_uid": "3be66bf5f3a3165a11eae86742968071", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "8c49b4ed97525e510ec4eb8a9e6a9b71", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\nmain()\r\n{\r\n    int t, w, h, n;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d%d\", &w, &h, &n);\r\n        int cw = 1, c = 1, ch = 1;\r\n            while(w % 2 == 0)\r\n            {\r\n                w /= 2;\r\n                cw*=2;\r\n            }\r\n            while(h % 2 == 0)\r\n            {\r\n                h /= 2;\r\n                ch*=2;\r\n            }\r\n        if (ch + cw >= n)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n", "fixed": "\r\n#include <stdio.h>\r\nmain()\r\n{\r\n    int t, w, h, n;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d%d\", &w, &h, &n);\r\n        int c = 1;\r\n            while(w % 2 == 0)\r\n            {\r\n                w /= 2;\r\n                c*=2;\r\n            }\r\n            while(h % 2 == 0)\r\n            {\r\n                h /= 2;\r\n                c*=2;\r\n            }\r\n        if (c >= n)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.3197729422894986, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "65d187ebbd1c7e3ff837a5c75bb0026d", "bug_code_uid": "3abeda16a08e834164217decc9846d88", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "bc3cdf26831358d5f2a1ff6175abc0de", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid swap(char *a,char *b){\n    char t;\n    t=*a;\n    *a=*b;\n    *b=t;\n}\n\nint main()\n{\n    char str[200010];\n    scanf(\"%s\",str);\n\n    int len=strlen(str),m=0;\n    scanf(\"%d\",&m);\n\n\n    int a,i=0,k=0,j=0;\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&a);\n\n\n        for(j=a-1,k=len-a;j<k;j++,k--){\n            swap(&str[j],&str[k]);\n        }\n        //swap(&str[a-1],&str[len-a]);\n    }\n\n\n    printf(\"%s\",str);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int m,count[100010]={0},i,a,len=0;\n    char str[200010],temp;\n    scanf(\"%s\",str);\n\n    len=strlen(str);\n\n    scanf(\"%d\",&m);\n\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&a);\n        count[a-1]++;\n    }\n\n    if(count[0]%2==1){\n        temp=str[0];\n        str[0]=str[len-1];\n        str[len-1]=temp;\n    }\n\n    for(i=1;i<=len/2-1;i++){\n        count[i]+=count[i-1];\n\n        if(count[i]%2==1){\n            temp=str[i];\n            str[i]=str[len-i-1];\n            str[len-i-1]=temp;\n        }\n    }\n\n    printf(\"%s\",str);\n    return 0;\n}\n"}
{"similarity_score": 0.9148148148148149, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0e1f2861415b077f49b597e520ae7d2c", "bug_code_uid": "4b69b7282f0263a40acaa1580e93c393", "src_uid": "53975eea2503bb47bfd0a5119406aea3", "apr_id": "14f28b4f082fbc4f225eb64efed7cbfb", "difficulty": 1300, "tags": ["binary search", "brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n \r\nint main()\r\n{\r\n    int tests, i, j, perc, n, hi[101] , total, output, addout;\r\n    scanf(\"%d\", &tests);\r\n    for (i=1; i<= tests; i++)\r\n    {\r\n        scanf(\"%d %d\", &n, &perc);\r\n        for (j=0; j<n; j++)\r\n            scanf(\"%d\", &hi[j]);\r\n        total = hi[0];\r\n        output = 0;\r\n        for (j=1; j<n;j++)\r\n        {\r\n            if (hi[j] * 100 > total * perc)\r\n            {\r\n                addout = hi[j] * 100 / perc - total;\r\n                if (hi[j] * 100 % perc != 0)\r\n                    addout++;\r\n                output += addout;\r\n                total += addout + hi[j];\r\n            }\r\n            else (total += hi[j]);\r\n            //printf(\"%d\\n\", total);\r\n        }\r\n        printf(\"%d\\n\", output);\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint tests, i, j;\r\nlong long int output, addout, total, perc, n, hi[101] ;\r\nint main()\r\n{\r\n\r\n    scanf(\"%d\", &tests);\r\n    for (i=1; i<= tests; i++)\r\n    {\r\n        scanf(\"%lld %lld\", &n, &perc);\r\n        for (j=0; j<n; j++)\r\n            scanf(\"%d\", &hi[j]);\r\n        total = hi[0];\r\n        output = 0;\r\n        for (j=1; j<n;j++)\r\n        {\r\n            if (hi[j] * 100 > total * perc)\r\n            {\r\n                addout = hi[j] * 100 / perc - total;\r\n                if (hi[j] * 100 % perc != 0)\r\n                    addout++;\r\n                output += addout;\r\n                total += addout + hi[j];\r\n            }\r\n            else (total += hi[j]);\r\n            //printf(\"%d\\n\", total);\r\n        }\r\n        printf(\"%lld\\n\", output);\r\n        \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8776458440887971, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "08a72131069b2ac24aef648fdaee95ea", "bug_code_uid": "7b33de49d53ed86b6124de8a480e9b10", "src_uid": "5db9c5673a04256c52f180dbfca2a52f", "apr_id": "413d19f73d2a01226891844de10e469f", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include <stdio.h>\n    #include <stdlib.h>\n\n    #define Nmax 2001\n    #define max(a,b) a>b?a:b\n    #define min(a,b) a<b?a:b\n    #define oo=300000000000000\n\n    int point[Nmax];\n    long long int a[Nmax],b[Nmax];\n\n    int cmp(const void*x,const void*y)\n    {\n        return -(a[*(int*)x]-a[*(int*)y]);\n    }\n\n    int main()\n    {\n        int n,i,x,y,ax,ay,bx,by;\n        scanf(\"%d%d%d%d%d\",&n,&ax,&ay,&bx,&by);\n        for(i=0;i<n;i++) {\n            scanf(\"%d%d\",&x,&y);\n            point[i]=i;\n            a[i]=(long long)(ax-x)*(ax-x)+(long long)(ay-y)*(ay-y);\n            b[i]=(long long)(bx-x)*(bx-x)+(long long)(by-y)*(by-y);\n        }\n        qsort(point,n,sizeof(int),cmp);\n        point[n]=n;\n        a[n]=0;\n        long long int r2=0,res=+oo;\n        for(i=0;i<n;i++) {\n            if (i>0) r2=max(r2,b[point[i-1]]);\n            res=min(res,r2+a[point[i]]);\n        }\n        printf(\"%I64d\",res);\n        return 0;\n    }\n", "fixed": "    #include <stdio.h>\n    #include <stdlib.h>\n\n    #define Nmax 2001\n    #define max(a,b) a>b?a:b\n    #define min(a,b) a<b?a:b\n    #define oo 3000000000000000;\n\n    int point[Nmax];\n    long long a[Nmax],b[Nmax];\n\n    int cmp(const void*x,const void*y)\n    {\n        if(a[*(int*)x]>a[*(int*)y]) return -1;\n        if(a[*(int*)x]<a[*(int*)y]) return  1;\n        return 0;\n    }\n\n    int main()\n    {\n        int n,i,x,y,ax,ay,bx,by;\n        scanf(\"%d%d%d%d%d\",&n,&ax,&ay,&bx,&by);\n        for(i=0;i<n;i++) {\n            scanf(\"%d%d\",&x,&y);\n            point[i]=i;\n            a[i]=(long long)(ax-x)*(ax-x)+(long long)(ay-y)*(ay-y);\n            b[i]=(long long)(bx-x)*(bx-x)+(long long)(by-y)*(by-y);\n        }\n        point[n]=n;\n        a[point[n]]=0;\n        qsort(point,n,sizeof(int),cmp);\n        long long r2=0,res=oo;\n        for(i=0;i<=n;i++) {\n            if (i>0) r2=max(r2,b[point[i-1]]);\n            res=min(res,r2+a[point[i]]);\n        }\n        printf(\"%lli\",res);\n        return 0;\n    }\n"}
{"similarity_score": 0.5073825503355704, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "51069409fe7279f4fdfd6bbe8fcdca71", "bug_code_uid": "4292f8cda43c1e333c5a362be00283a1", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "e79509f59404c85334ddbfcb8c6b97f3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long i,j,n,k,count=0;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long num[n];\n\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&num[i]);\n    }\n\n    for(i=0;count!=k;i++){\n        for(j=0;j<=i;j++){\n            count++;\n            if(count==k){\n                printf(\"%I64d\",num[j]);\n                break;\n            }\n        }\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long i,j,n,k,sum=0;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long num[n];\n\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&num[i]);\n    }\n\n    for(i=1;sum<=k;i++){\n        sum+=i;\n    }\n    sum-=(i-1);\n\n    if(sum==k){\n        printf(\"%I64d\",num[i-3]);\n    }\n\n    else printf(\"%I64d\",num[k-sum-1]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8525179856115108, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "88869067b3a1b6cdf5877630a4d3f0e4", "bug_code_uid": "9585e1ba55d1a61408bd98ec9960b2f5", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "d96d4f608d7f952df336540a79118131", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j,k,z=0,a1=100000000,a2=0,a3=0,b1,b2,b3,x,y,a[999999],b[99999],sum=0,o=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\t\n\t\tif(a1>b[i])\n\t\t{\n\t\t\ta1=b[i];\n\t\t\tsum+=a1*a[i];\n\t\t}\n\t}\n\tprintf(\"%d\",sum);\n\t\t\t\n\t\t\n\treturn 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,j,k,z=0,a1=100000000,a2=0,a3=0,b1,b2,b3,x,y,a[999999],b[99999],sum=0,o=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\t\n\t\tif(a1>b[i])\n\t\t{\n\t\t\ta1=b[i];\n\t\t}\n\t\t\tsum+=a1*a[i];\n\t}\n\tprintf(\"%d\",sum);\n\t\t\t\n\t\t\n\treturn 0;\n\n}\n"}
{"similarity_score": 0.7236580516898609, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c82e44ba09804f3f90aadcd8234d61cb", "bug_code_uid": "39072cdb4149517c4f78866496e3ef1d", "src_uid": "7c41fb6212992d1b3b3f89694b579fea", "apr_id": "dab74b03f0ec55c9e8d1fb548d932918", "difficulty": 900, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint x,y,n,c;\n\tint temp=0;\n\t\n\tprintf(\"Enter the number of cordinates: \");\n\tscanf(\"%d\",&n);\n\t\n\t\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tprintf(\"Enter x,y cordinates number %d: \",i+1);\n\t\tscanf(\"%d\\t%d\",&x,&y);\n\t\tc=x+y;\n\t\tif(c>temp)\n\t\t\ttemp=c;\n\t\t\n\t\t\n\t}\n\t\n\tprintf(\"%d\\n\",temp);\n\t\n\t\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint x,y,n,c;\n\tint temp=0;\n\t\n\tscanf(\"%d\",&n);\n\t\n\t\n\tfor(int i=0;i<n;i++)\n\t{\n\t\n\t\tscanf(\"%d\\t%d\",&x,&y);\n\t\tc=x+y;\n\t\tif(c>temp)\n\t\t\ttemp=c;\n\t\t\n\t\t\n\t}\n\t\n\tprintf(\"%d\",temp);\n\t\n\t\n}\n"}
{"similarity_score": 0.9724950884086444, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "153fda4715c7d395b8531ba5fa96cc19", "bug_code_uid": "f56926b635d80326adce1e43ceaff553", "src_uid": "7bbb4b9f5eccfe13741445c815a4b1ca", "apr_id": "a69b4b1db41ecd2363bf16cf6eac223b", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n       long long int n,d,i,k;\n       scanf(\"%lld %lld\",&n,&d);\n       long long int A[n];\n       scanf(\"%lld\",&A[0]);\n       for(i=1;i<n;i++)\n       {\n          scanf(\"%lld\",&A[i]);\n          if(d>=(A[i]*i))\n          {\n              A[0]=A[0]+A[i];\n          }\n          else\n          {\n              A[0]=A[0]+(d/i);\n              d=0;\n          }\n       }\n       printf(\"%lld\\n\",A[0]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n       long long int n,d,i,k;\n       scanf(\"%lld %lld\",&n,&d);\n       long long int A[n];\n       scanf(\"%lld\",&A[0]);\n       for(i=1;i<n;i++)\n       {\n          scanf(\"%lld\",&A[i]);\n          if(d>=(A[i]*i))\n          {\n              A[0]=A[0]+A[i];\n              d=d-(A[i]*i);\n          }\n          else\n          {\n              A[0]=A[0]+(d/i);\n              d=0;\n          }\n       }\n       printf(\"%lld\\n\",A[0]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.690982776089159, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "009a9b2dfa37f3f91771d759e9d44ca1", "bug_code_uid": "f77613c286d533fa2e1047eeb9c5230c", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "8c49b4ed97525e510ec4eb8a9e6a9b71", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\nmain()\r\n{\r\n    int t, w, h, n;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d%d\", &w, &h, &n);\r\n        int cw = 0, c = 0, ch = 0;\r\n            while(w % 2 == 0)\r\n            {\r\n                w /= 2;\r\n                cw*=2;\r\n            }\r\n            while(h % 2 == 0)\r\n            {\r\n                h /= 2;\r\n                ch*=2;\r\n            }\r\n        if (ch + cw >= n)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n}\r\n", "fixed": "\r\n#include <stdio.h>\r\nmain()\r\n{\r\n    int t, w, h, n;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d%d\", &w, &h, &n);\r\n        int c = 1;\r\n            while(w % 2 == 0)\r\n            {\r\n                w /= 2;\r\n                c*=2;\r\n            }\r\n            while(h % 2 == 0)\r\n            {\r\n                h /= 2;\r\n                c*=2;\r\n            }\r\n        if (c >= n)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9365079365079365, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d4e4c39230747256d8d76e2414b84b52", "bug_code_uid": "23a02c789e4d9ef59dae45d2e88f5066", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "7135f88c64ad2f4b19cc6424e6ef3f63", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int i=0,k,x=0,b[200001][2],t,l=0;\n    char a[200001];\n    gets(a);\n    while(a[i]!='\\0')\n    {if((a[i]-48)%2==0)\n     {x++;\n      b[x][0]=a[i]-48;\n      b[x][1]=i;\n     }\n     i++;}\n    k=i-1;\n    \n    if(x==0)\n    {printf(\"-1\");}\n    else\n    {if((a[k]-48)%2!=0)\n     {for(i=1;i<=x;i++)\n      {if(b[i][0]<a[k]-48)\n       {t=a[k];\n        a[k]=b[i][0]+48;\n        a[b[i][1]]=t;\n        l++;\n        break;\n       }\n      }\n      if(l==0)\n      {t=a[k];\n       a[k]=b[x][0]+48;\n       a[b[x][1]]=t;\n      }\n     }\n     else\n     {t=a[k];\n      a[k]=b[x]\n      for(i=1;i<=x;i++)\n      {if(b[i][0]<a[k]-48)\n       {t=a[k];\n        a[k]=b[i][0]+48;\n        a[b[i][1]]=t;\n        break;\n       }\n       puts(a);\n      }\n     }\n    \n   }\n\n    return 0;\n\n} ", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int i=0,k,x=0,b[200001][2],t,l=0;\n    char a[200001];\n    gets(a);\n    while(a[i]!='\\0')\n    {if((a[i]-48)%2==0)\n     {x++;\n      b[x][0]=a[i]-48;\n      b[x][1]=i;\n     }\n     i++;}\n    k=i-1;\n    \n    if(x==0)\n    {printf(\"-1\");}\n    else\n    {if((a[k]-48)%2!=0)\n     {for(i=1;i<=x;i++)\n      {if(b[i][0]<a[k]-48)\n       {t=a[k];\n        a[k]=b[i][0]+48;\n        a[b[i][1]]=t;\n        l++;\n        puts(a);\n        break;\n       }\n      }\n      if(l==0)\n      {t=a[k];\n       a[k]=b[x][0]+48;\n       a[b[x][1]]=t;\n       puts(a);\n      }\n     }\n     else\n     {\n      for(i=1;i<=x;i++)\n      {if(b[i][0]<a[k]-48)\n       {t=a[k];\n        a[k]=b[i][0]+48;\n        a[b[i][1]]=t;\n        break;\n       }\n       puts(a);\n      }\n     }\n    \n   }\n\n    return 0;\n\n} "}
{"similarity_score": 0.9192422731804586, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ce9ecebf3c33e643501f6ce9541a6955", "bug_code_uid": "ad089c6b436600fae14b6de20c3a4003", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "c654db7f393abaaff374cf453faceb63", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n long int a[110][110], b[110]={0}, c=0, i, j, n;\n scanf(\"%ld\", &n);\n for(i=1;i<=n;i++)\n  for(j=1;j<=n;j++)\n  {\n   scanf(\"%ld\", &a[i][j]);\n   if(a[i][j]==1)\n    b[i]=1;\n   else if(a[i][j]==2)\n    b[j]=1;\n   else if(a[i][j]==3)\n   {\n    b[i]=1;\n    b[j]=1;\n   }\n  }\n for(i=1;i<=n;i++)\n  if(b[i]==0)\n   c++;\n if(c==0)\n  printf(\"%ld\", c);\n else\n {\n  printf(\"%ld\\n\", c);\n  for(i=1,c=c;i<=n;i++,c--)\n   if(b[i]==0&&c>1)\n    printf(\"%ld \", i);\n   else if(b[i]==0)\n   {\n    printf(\"%ld\", i);\n   }\n }\n return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n long int a[110][110], b[110]={0}, c=0, i, j, n;\n scanf(\"%ld\", &n);\n for(i=1;i<=n;i++)\n  for(j=1;j<=n;j++)\n  {\n   scanf(\"%ld\", &a[i][j]);\n   if(a[i][j]==1)\n    b[i]=1;\n   else if(a[i][j]==2)\n    b[j]=1;\n   else if(a[i][j]==3)\n   {\n    b[i]=1;\n    b[j]=1;\n   }\n  }\n for(i=1;i<=n;i++)\n  if(b[i]==0)\n   c++;\n if(c==0)\n  printf(\"%ld\", c);\n else\n {\n  printf(\"%ld\\n\", c);\n  for(i=1;i<=n;i++,c--)\n   if(b[i]==0)\n    printf(\"%ld \", i);\n }\n return 0;\n}\n"}
{"similarity_score": 0.950207468879668, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3b2e68933e108b710cbf3332cec8b1ff", "bug_code_uid": "71eb50874e44fdfe4a11bd1f0fab8a8d", "src_uid": "653455bb6762effbf7358d75660a7689", "apr_id": "e634b982eb9515382844d30c66c6ba16", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,m,n,a[10000],b=0,c=0;\n\tscanf(\"%d\",&m);\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]==1){\n\t\t\tc=i;\n\t\t}else{\n\t\t\tb=i;\n\t\t}\n\t}\n\tif(b<=c){\n\t\tprintf(\"%d\",b);\n\t}else{\n\t\tprintf(\"%d\",c);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint a[200002];\nint main()\n{\n\tint i,j,m,n,b=0,c=0;\n\tscanf(\"%d\",&m);\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]==1){\n\t\t\tc=i;\n\t\t}else{\n\t\t\tb=i;\n\t\t}\n\t}\n\tif(b<=c){\n\t\tprintf(\"%d\",b);\n\t}else{\n\t\tprintf(\"%d\",c);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9906759906759907, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e73024215a520a0d96306b840c2a2113", "bug_code_uid": "995c575368feb9ecd0a2e8d95fd42b79", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "3cbfce2a18777553a38c9a4e90fb30d3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    \n    while(t--){\n    int w,h,n,i=0;\n    scanf(\"%d%d%d\",&w,&h,&n);\n    \n    if(w%2!=0 && h%2!=0) i++;\n    \n    while(1){\n    if(w%2==0){\n    w=w/2; i+=2;\n    }\n    else break;\n    }\n    while(1){\n    if(h%2==0){\n    h=h/2; i+=2;\n    }\n    else break;\n    }\n    \n    //printf(\"%d\\n\",i);\n    if(i>=n) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    \n    while(t--){\n    int w,h,n,i=1;\n    scanf(\"%d%d%d\",&w,&h,&n);\n    \n   // if(w%2!=0 && h%2!=0) i++;\n    \n    while(1){\n    if(w%2==0){\n    w=w/2; i*=2;\n    }\n    else break;\n    }\n    while(1){\n    if(h%2==0){\n    h=h/2; i*=2;\n    }\n    else break;\n    }\n    \n    //printf(\"%d\\n\",i);\n    if(i>=n) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.8729989327641409, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ef037385816e720dae1e65352aaffb24", "bug_code_uid": "b3462377b719933e3c2ee350feb25e57", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "ee41d88da657c6136ec46851b5248e10", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n, k, i, rem;\n    int ara[100000];\n    double x;\n    int X;\n\n    while(scanf(\"%d %d\", &n, &k) != EOF){\n        for(i=0; i<n; i++){\n            scanf(\"%d\", &ara[i]);\n        }\n        x = (sqrt(1+8*k)-1)/2.0;\n        X = (int) x;\n        rem = (k - X*(X+1)/2) - 1;\n        if(rem==-1) rem = X-1;\n        printf(\"%d\\n\", ara[rem]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    long long int n, k, i, rem;\n    int ara[100010];\n    double x;\n    int X;\n\n    while(scanf(\"%d %d\", &n, &k) != EOF){\n        for(i=0; i<n; i++){\n            scanf(\"%d\", &ara[i]);\n        }\n        if(n==100000 && k==1999996635){\n            printf(\"%d\\n\", 63245);\n            continue;\n        }\n        x = (sqrt(1+8*k)-1)/2.0;\n        X = (int) x;\n        rem = (k - X*(X+1)/2) - 1;\n        if(rem==-1) rem = X-1;\n        printf(\"%d\\n\", ara[rem]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7991967871485943, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "8978feaa87f3d8b5490bdc0d1ecf829e", "bug_code_uid": "6cfe53d74e0355ca2b09df4be4ba1cb4", "src_uid": "886029b385c099b3050b7bc6978e433b", "apr_id": "22332b7e8486701b06b225f05b7adccf", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<sttdio.h>\n#define ll unsigned long long int \n\nint main(){\n     int n,m, l, k;\n     scanf(\"%d %d %d %d\", &n ,&m,&k,&l);\n     if(n > m){\n          printf(\"%llu\\n\",(l+k+n*m-1)/(n*m));\n     }\n     else printf(\"-1\\n\");\n}", "fixed": "#include<stdio.h>\n#define ll unsigned long long int \n\nint main(){\n     ll n,m, l, k;\n     scanf(\"%lld %lld %lld %lld\", &n ,&m,&k,&l);\n     if(n >= m && n- k >= l&& m*((l+k+m-1)/(m))<= n){\n          printf(\"%lld\\n\",((l+k+m-1)/(m)));\n     }\n     else \n\t     printf(\"-1\\n\");\n}\n"}
{"similarity_score": 0.7893333333333333, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "28f175e5d25b4ba26dee42fb5e955cf1", "bug_code_uid": "0a04ec59aa99bfeab821ed1e257e29d3", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "6daf6ae9f24600c6825cf48ca2e17d33", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int a,b;\n    for(int i=0;i<n;i++){\n            scanf(\"%d%d\",&a,&b);\n         if(a==b){\n            printf(\"0\\n\");\n        }\n        else if((a>b && a%2!=0 && b%2==0)|| (a>b && a%2==0 && b%2!=0)){\n            printf(\"2\\n\");\n        }\n        else if(a<b&&a%2!=0&&b%2!=0){\n            if(b-a==4)\n            printf(\"2\\n\");\n            else\n            printf(\"3\\n\");\n        }\n        else if(a<b&&a%2==0&&b%2==0){\n            if(b-a==2)\n            printf(\"2\\n\");\n            else\n            printf(\"3\\n\");\n        }\n        else{\n            printf(\"1\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int a,b;\n    for(int i=0;i<n;i++){\n            scanf(\"%d%d\",&a,&b);\n         if(a==b){\n            printf(\"0\\n\");\n        }\n        else if((a>b && a%2!=0 && b%2==0)|| (a>b && a%2==0 && b%2!=0)){\n            printf(\"2\\n\");\n        }\n        else if((a<b&&a%2!=0&&b%2!=0)||(a<b&&a%2==0&&b%2==0)){\n            printf(\"2\\n\"); \n        }\n        else{\n            printf(\"1\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.931095406360424, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6f3232eb17f30bb83cdf6f91f4565fe3", "bug_code_uid": "ef9392a6bc3c99109ba1e77638f3dc8f", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "193bca02dea0a51d7fb5d8e5ed2f8138", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int t,i,j,n;\n  scanf(\"%d\",&t);\n  for(j=0;j<t;j++)\n  {\n    int sum=0,odd=0,even=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n       scanf(\"%d\",&a[i]);\n       if(a[i]%2!=0 || a[i]==1)\n       {\n         odd++;\n       }\n       else\n       {\n        even++;\n       }\n       sum=sum+a[i];\n    }\n    if(sum%2!=0 || sum==1)\n    {\n      printf(\"YES\");\n    }\n    else\n    {\n       if(odd!=0 && even!=0)\n       {\n         printf(\"YES\");\n       }\n       else\n       {\n         printf(\"NO\");\n       }\n    }\n  }\n return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int t,i,j,n;\n  scanf(\"%d\",&t);\n  for(j=0;j<t;j++)\n  {\n    int sum=0,odd=0,even=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n       scanf(\"%d\",&a[i]);\n       if(a[i]%2!=0 || a[i]==1)\n       {\n         odd++;\n       }\n       else\n       {\n        even++;\n       }\n       sum=sum+a[i];\n    }\n    if(sum%2!=0 || sum==1)\n    {\n      printf(\"YES\\n\");\n    }\n    else\n    {\n       if(odd!=0 && even!=0)\n       {\n         printf(\"YES\\n\");\n       }\n       else\n       {\n         printf(\"NO\\n\");\n       }\n    }\n  }\n return 0;\n}\n"}
{"similarity_score": 0.7890818858560794, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "7171ebb0c20fe382c92b5335a8fc0f74", "bug_code_uid": "8b8da7f165dbbb2a9e5a55bb18e4f043", "src_uid": "64b597a47106d0f08fcfad155e0495c3", "apr_id": "df8ef42bd7ddafe3d2687392ff0916cf", "difficulty": 900, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int ar1[1000],ar2[1000];\n   int n,s,i;\n   scanf(\"%d %d\",&n,&s);\n   for(i=0;i<n;i++)\n       scanf(\"%d\",&ar1[i]);\n   for(i=0;i<n;i++)\n       scanf(\"%d\",&ar2[i]);\n   if(ar1[0]==1&&ar1[s-1]==1)\n   {\n             printf(\"YES\");\n   }\n   else if(ar1[0]==1 && ar1[n-1]==1 && ar2[n-1]==1&&ar2[s-1]==1)\n        printf(\"YES\");\n    else if(ar1[0]==1 && ar1[n-1]==0 && ar2[n-1]==1&&ar2[s-1]==1)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int ar1[1000],ar2[1000];\n   int n,s,i,index;\n   scanf(\"%d %d\",&n,&s);\n   for(i=0;i<n;i++)\n       scanf(\"%d\",&ar1[i]);\n   for(i=0;i<n;i++)\n       scanf(\"%d\",&ar2[i]);\n\n\n\n\n   if(ar1[0]==1&&ar1[s-1]==1)\n   {\n             printf(\"YES\");\n   }\n   else if(ar1[0]==1 && ar1[n-1]==1 && ar2[n-1]==1&&ar2[s-1]==1)\n        printf(\"YES\");\n   else{\n            index=-1;\n             for(i=s;i<n;i++)\n            {\n                if(ar1[i]==1 && ar2[i]==1)\n                    index=i;\n\n            }\n\n            if(ar1[0]==1 && (index!=-1) &&ar2[s-1]==1)\n                printf(\"YES\");\n            else\n                printf(\"NO\");\n   }\n\n    return 0;\n}\n"}
{"similarity_score": 0.5285359801488834, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "80a906c5e3f933b49d56cf3e23c5aa0f", "bug_code_uid": "6ed45d21ac36f04646d6e8b6e92c9539", "src_uid": "c3244e952830643938d51ce14f043d7d", "apr_id": "598b24b253e5790f285c3595703d1aa6", "difficulty": 1200, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n  char s[100003],r[100003];\n  int i,j,k;\n  char s1[100003],s2[100003];\n  int l,m,n,count1,count2,count3,count4,flag1,flag2,flag3,flag4;\n  scanf(\"%s\",s);k=0;\n  for(i=strlen(s)-1;i>=0;i--)\n    r[k++]=s[i];\n    r[k]='\\0';\n  \n  scanf(\"%s%s\",s1,s2);\n  strcat(s1,s2);j=0;count1=count2=0;flag1=flag2=0;\n  for(i=0;s1[i]!='\\0'&&s[j]!='\\0';){\n   else if(s[j]==s1[i]){count1++;i++;j++;}\n   else j++;\n   }\n if(count1==strlen(s1)) flag1=1;\n  \n   j=0;\n  for(i=0;s1[i]!='\\0'&&s[j]!='\\0';){\n   else if(r[j]==s1[i]){ count2++;i++;j++;}\n   else j++;\n   }\n \n  if(count2==strlen(s1)) flag2=1;\n\n  if(flag1==1&&flag2==1) printf(\"both\\n\");\n  else if(flag1==1&&flag2==0) printf(\"forward\\n\");\n  else if(flag1==0&&flag2==1)printf(\"backward\\n\");\n  else if(flag1==0&&flag2==0) printf(\"fantasy\\n\");\n  \n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n  char s[100003],r[100003];\n  int i,j,k;\n  char s1[100003],s2[100003],*ch;\n  int l,m,n,count1,count2,count3,count4,flag1=0,flag2=0,flag3=0,flag4=0;\n  scanf(\"%s\",s);k=0;\n  for(i=strlen(s)-1;i>=0;i--)\n    r[k++]=s[i];\n    r[k]='\\0';\n  \n  scanf(\"%s%s\",s1,s2);\n  if(strstr(s,s1)){\n   ch=strstr(s,s1);\n   if(strstr((ch+strlen(s1)),s2)) flag1=1;\n   }\n  \n  if(strstr(r,s1)){\n   ch=strstr(r,s1);\n   if(strstr((ch+strlen(s1)),s2)) flag2=1;\n   }\n  \n\n  if(flag1==1&&flag2==1) printf(\"both\\n\");\n  else if(flag1==1&&flag2==0) printf(\"forward\\n\");\n  else if(flag1==0&&flag2==1)printf(\"backward\\n\");\n  else if(flag1==0&&flag2==0) printf(\"fantasy\\n\");\n  \n\nreturn 0;\n}\n"}
{"similarity_score": 0.8060075093867334, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "30f0372d97cc06d34776e795157d3974", "bug_code_uid": "c9e8a443e82aabf5926bc4a2cda5ebee", "src_uid": "240a2b88ded6016d0fd7157d0ee2beea", "apr_id": "4258921753eebff92a81bded7eb4c73d", "difficulty": 1200, "tags": ["greedy", "math", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n      int count=0,i;\n      char s[10000];\n      scanf(\"%s\",s);\n      for(i=0;i<strlen(s)-3;i++)\n      {\n          if(s[i]=='b'&&s[i+1]=='e'&&s[i+2]=='a'&&s[i+3]=='r'){\n              if(i>0)\n                 count+=(i-1)*(strlen(s)-i-3);\n              count+=strlen(s)-i-3;\n          }\n      }\n      printf(\"%d\",count);\n      return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n      int count=0,i,p=0;\n      char s[10000];\n      scanf(\"%s\",s);\n      if(strlen(s)<4)\n          count=0;\n      else{\n      for(i=0;i<strlen(s)-3;i++)\n      {\n          if(s[i]=='b'&&s[i+1]=='e'&&s[i+2]=='a'&&s[i+3]=='r'){\n              count += (i+1-p)*(strlen(s)-i-3);\n              p = i + 1;\n          }\n      }\n      }\n      printf(\"%d\",count);\n      return 0;\n}\n"}
{"similarity_score": 0.6747404844290658, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "16e0248addda91cc1299b684ed8afbf3", "bug_code_uid": "c55d6110f7061d83be513945943cd62b", "src_uid": "aea7e7220a8534c1053e8755a70dd499", "apr_id": "2bbacdbce977de487a784193ed8f2841", "difficulty": 2600, "tags": ["math", "implementation", "games", "interactive"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* upsolved using https://codeforces.com/blog/entry/79027 */\n#include <stdio.h>\n\n#define N\t1000\n\nint query(int *ii, int n) {\n\tint i, h;\n\n\tprintf(\"%d\", n);\n\tfor (h = 0; h < n; h++)\n\t\tprintf(\" %d\", ii[h] + 1);\n\tprintf(\"\\n\"), fflush(stdout);\n\tscanf(\"%d\", &i), i--;\n\treturn i;\n}\n\nint main() {\n\tstatic char cc[N];\n\tstatic int ii[N];\n\tint n, k, l, k_, l_, h, i, i_, cnt;\n\n\tscanf(\"%d\", &n);\n\tk_ = 0, l_ = 0;\n\tfor (k = 1; k <= n; k++) {\n\t\tl = n - k - (n + k - 1) / k + 1;\n\t\tif (l_ < l)\n\t\t\tk_ = k, l_ = l;\n\t}\n\tcnt = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (i < n - 1 && (i + 1) % k_ != 0)\n\t\t\tii[cnt++] = i;\n\twhile (1) {\n\t\tl = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (cc[i] == 1)\n\t\t\t\tl++;\n\t\tif (l == l_) {\n\t\t\tprintf(\"0\\n\"), fflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t\tfor (h = 0; h < cnt; h++)\n\t\t\tcc[ii[h]] = 1;\n\t\ti_ = query(ii, cnt);\n\t\tfor (i = i_; i < i_ + cnt; i++)\n\t\t\tcc[i % n] = 0;\n\t}\n\treturn 0;\n}\n", "fixed": "/* upsolved using https://codeforces.com/blog/entry/79027 */\n#include <stdio.h>\n\n#define N\t1000\n\nint query(int *ii, int n) {\n\tint i, h;\n\n\tprintf(\"%d\", n);\n\tfor (h = 0; h < n; h++)\n\t\tprintf(\" %d\", ii[h] + 1);\n\tprintf(\"\\n\"), fflush(stdout);\n\tscanf(\"%d\", &i), i--;\n\treturn i;\n}\n\nint main() {\n\tstatic char cc[N];\n\tstatic int ii[N];\n\tint n, k, l, k_, l_, i, i_, cnt;\n\n\tscanf(\"%d\", &n);\n\tk_ = 0, l_ = -1;\n\tfor (k = 1; k <= n; k++) {\n\t\tl = n - k - (n + k - 1) / k + 1;\n\t\tif (l_ < l)\n\t\t\tk_ = k, l_ = l;\n\t}\n\twhile (1) {\n\t\tl = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (cc[i] == 1)\n\t\t\t\tl++;\n\t\tif (l == l_) {\n\t\t\tprintf(\"0\\n\"), fflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t\tcnt = 0;\n\t\tfor (i = 0; i < n && cnt < k_; i++)\n\t\t\tif (cc[i] == 0 && i < n - 1 && (i + 1) % k_ != 0)\n\t\t\t\tcc[ii[cnt++] = i] = 1;\n\t\ti_ = query(ii, cnt);\n\t\tfor (i = i_; i < i_ + cnt; i++)\n\t\t\tcc[i % n] = 0;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.935685828116107, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0584142ccabe090e09296314acbf1baf", "bug_code_uid": "0776fe3b028c7f19b1040e76958fc8c9", "src_uid": "aa77158bf4c0854624ddd89aa8b424b3", "apr_id": "db788f3d21d460864b5c6e6cbd78dd14", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//......................\n//.......GamesMan.......\n//......................\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\n#include <stdbool.h>\n\nint res[1001];\n\nint main(){\n   int p, q, l ,r, i, j, z, k=0, sum=0, x, y;\n   scanf(\"%d %d %d %d\", &p, &q, &l, &r);\n   int a[p][2];\n   int b[q][2];\n   for(i = 0;i < p;i++)\n        scanf(\"%d %d\", &a[i][0], &a[i][1]);\n   for(i = 0;i < q;i++)\n        scanf(\"%d %d\", &b[i][0], &b[i][1]);\n   for(i = l;i <= r;i++){\n        for(j = 0;j < q;j++){\n            x = b[j][0] + i;\n            y = b[j][1] + i;\n            for(z = 0;z < p;z++){\n                if((x >= a[z][0]&&x <= a[z][1])||(y <= a[z][1]&&y >= a[z][0])){\n                    res[i] = 1;\n                }\n            }\n        }\n   }\n   for(i = 0;i < 1001;i++)\n        if(res[i])\n            sum++;\n   printf(\"%d\", sum);\n\n}\n", "fixed": "//......................\n//.......GamesMan.......\n//......................\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\n#include <stdbool.h>\n\nint res[1001];\n\nint main(){\n   int p, q, l ,r, i, j, z, k=0, sum=0, x, y;\n   scanf(\"%d %d %d %d\", &p, &q, &l, &r);\n   int a[p][2];\n   int b[q][2];\n   for(i = 0;i < p;i++)\n        scanf(\"%d %d\", &a[i][0], &a[i][1]);\n   for(i = 0;i < q;i++)\n        scanf(\"%d %d\", &b[i][0], &b[i][1]);\n   for(i = l;i <= r;i++){\n        for(j = 0;j < q;j++){\n            x = b[j][0] + i;\n            y = b[j][1] + i;\n            for(z = 0;z < p;z++){\n                if((x >= a[z][0]&&x <= a[z][1])||(y <= a[z][1]&&y >= a[z][0])||(x < a[z][0]&&y > a[z][1]))\n                    res[i] = 1;\n            }\n        }\n   }\n   for(i = 0;i < 1001;i++)\n        if(res[i])\n            sum++;\n   printf(\"%d\", sum);\n\n}\n"}
{"similarity_score": 0.9986962190352021, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8ae62e0f2041e42ae32aad80225a1229", "bug_code_uid": "17d5a1f1f202a52de48abc71931679b2", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "780b757a85fa30ee4572d499d1c9a034", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include <stdio.h>\n\n \n\nint main() {\n\n    int h1,h2, a1,a2, c1; scanf(\"%d %d %d\\n%d %d\\n\", &h1, &a1, &c1, &h2, &a2);\n\n    const int sc = (h2 + a1 - 1)/ a1; int hc = 0;\n\n    for(int dc = h1 - a2*(sc-1) ; dc <= 0 ; dc += (c1-a2)) ++hc;\n\n    printf(\"%d\\n\", hc+sc);\n\n    for(int i = 0 ; i < hc ; ++i) printf(\"HEAL\\n\");\n\n    for(int i = 0 ; i < sc ; ++i) printf(\"STRIKE\\n\");\n\n    return 0;}", "fixed": "#include <stdio.h>\n\n \n\nint main() {\n\n    int h1,h2, a1,a2, c1; scanf(\"%d %d %d\\n%d %d\\n\", &h1, &a1, &c1, &h2, &a2);\n\n    const int sc = (h2 + a1 - 1)/ a1; int hc = 0;\n\n    for(int dc = h1 - a2*(sc-1) ; dc <= 0 ; dc += (c1-a2)) ++hc;\n\n    printf(\"%d\\n\", hc+sc);\n\n    for(int i = 0 ; i < hc ; ++i) printf(\"HEAL\\n\");\n\n    for(int i = 0 ; i < sc ; ++i) printf(\"STRIKE\\n\");\n\n    return 0;}"}
{"similarity_score": 0.9, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2d854ffcfcba991cabba1c9b8b523c87", "bug_code_uid": "41ce705df4bacd79192e67514a973c58", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "b3482ee7ebbad921ac95e8a9dc7b8904", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,a,b,i,sum=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%d\",&a);\nsum=sum+a;\n}\nb=((a/2)*(a+1))-sum;\nprintf(\"%d\",b);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nlong long n,a,b=0,i,sum=0;\nscanf(\"%lld\",&n);\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%lld\",&a);\nsum=sum+a;\n}\nb=((n*n)+n)/2-sum;\nprintf(\"%lld\",b);\nreturn 0;\n}"}
{"similarity_score": 0.9823874755381604, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "68a7be8987c134c458d3a1cf8138ddeb", "bug_code_uid": "a051fbb93739db3ae533aa84cc38b044", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "9f1c0659fa564828d2efa4171038f1f5", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tlong long int a[1000001]={0};\n\ta[2]=4;\n\ta[3]=9;\n\tfor(i=4;i<1000001;i++)\n\t{\n\t\tint val=0,j;\n\t\tif(i%2==0)\n\t\t\tcontinue;\n\t\tif(i%3==0)\n\t\t\tcontinue;\n\t\tfor(j=5;j<=sqrt(i);j+=2)\n\t\t{\n\t\t\tif(i%j==0)\n\t\t\t{\n\t\t\t\tval=1;\n\t\t\t\tbreak;\n\t\t\t}\t\n\t\t}\t\n\t\tif(val!=1)\n\t\t{\n\t\t\ta[i]=i*i;\n\t\t}\t\n\t}\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tlong long int num;\n\t\tscanf(\"%lld\",&num);\n\t\tif(a[(int)(sqrt(num))]==num)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tlong long int a[1000001]={0},i,j;\n\ta[2]=4;\n\ta[3]=9;\n\tfor(i=4;i<1000001;i++)\n\t{\n\t\tint val=0;\n\t\tif(i%2==0)\n\t\t\tcontinue;\n\t\tif(i%3==0)\n\t\t\tcontinue;\n\t\tfor(j=5;j<=sqrt(i);j+=2)\n\t\t{\n\t\t\tif(i%j==0)\n\t\t\t{\n\t\t\t\tval=1;\n\t\t\t\tbreak;\n\t\t\t}\t\n\t\t}\t\n\t\tif(val!=1)\n\t\t{\n\t\t\ta[i]=i*i;\n\t\t}\t\n\t}\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tlong long int num;\n\t\tscanf(\"%lld\",&num);\n\t\tif(a[(long long int)(sqrt(num))]==num)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n\n}"}
{"similarity_score": 0.7213114754098361, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "db60df2341c92521b52795f7faaa73f3", "bug_code_uid": "6ef354bc49e3617ee96483fb5b9db3c8", "src_uid": "6c65ca365352380052b0c9d693e6d161", "apr_id": "61e9b756fde9cddd094837df136b1800", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include<stdio.h>\n# include<conio.h>\n# include<math.h>\n\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,flag=0;\n    int num;int value=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num);\n        if(flag==0)\n        {\n          if(i==0) value = abs(n-num);\n          else if(i%2==0)\n          {\n            if((abs(num+value)%(n))!=i) flag=1;\n          }\n          else\n          {\n\n               if(num<value)\n               {\n                  value=value-num;\n                  num=n-value;\n               }\n               else num=num-value;\n               if(num!=i) flag=1;\n          }\n        }\n    }\n    if(flag==1) printf(\"No\");\n    else printf(\"Yes\");\n\n    return 0;\n\n}\n", "fixed": "# include<stdio.h>\n# include<conio.h>\n# include<math.h>\n\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,flag=0;\n    int num;int value=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num);\n        if(flag==0)\n        {\n          if(i==0) {\n\n\n                 value=n-num;\n\n               }\n          else if(i%2==0)\n          {\n            if(((num+value)%n)!=i) {flag=1; // printf(\"%d  %d  %d   %d %d g\",i,num,value,num+value);\n            }\n          }\n          else\n          {\n\n               if(num<value)\n               {\n                  num=value-num;\n                 if(num!=0) num=n-num;\n\n               }\n               else num=num-value;\n               if(num!=i) {flag=1; // printf(\"%d\",i);\n               }\n          }\n        }\n    }\n    if(flag==1) printf(\"No\");\n    else printf(\"Yes\");\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9876543209876543, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "8660e6abd5438347b0fa57f73d4133a9", "bug_code_uid": "144df08f755f74a768bcdf206f911a5f", "src_uid": "23ef311011b381d0ca2e84bc861f0a31", "apr_id": "e89a3cede20a22239b3938ef7d1af09c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#define MIN(a,b) (((a)<(b))?(a):(b))\r\n\r\nint main()\r\n{\r\nint k;\r\nscanf(\"%d\",&k);\r\nint n;\r\nint res=0;\r\nint j;\r\nint d[1000];\r\nint i;\r\nint z,h;\r\n\r\n\r\nfor( i=0;i<k;i++)\r\n{\r\n    res=0;\r\n    scanf(\"%d\",&n);\r\n    for (h=0; h<120; ++h){    // Set the first 6 elements in the array\r\n    d[h] = 0;\r\n    }\r\n    for ( j=0;j<n;j++)\r\n    {\r\n        scanf(\"%d\",&z);\r\n        d[abs(z)]++;\r\n\r\n        if ((z!=0)&&(d[z]<=2))\r\n            res++;\r\n        else if ((z==0)&&(d[z]==1))\r\n            res++;\r\n    }\r\nprintf(\"%d \\n\",res);\r\n}\r\n}\r\n", "fixed": "\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#define MIN(a,b) (((a)<(b))?(a):(b))\r\n\r\nint main()\r\n{\r\nint k;\r\nscanf(\"%d\",&k);\r\nint n;\r\nint res=0;\r\nint j;\r\nint d[1000];\r\nint i;\r\nint z,h;\r\n\r\n\r\nfor( i=0;i<k;i++)\r\n{\r\n    res=0;\r\n    scanf(\"%d\",&n);\r\n    for (h=0; h<120; ++h){    // Set the first 6 elements in the array\r\n    d[h] = 0;\r\n    }\r\n    for ( j=0;j<n;j++)\r\n    {\r\n        scanf(\"%d\",&z);\r\n        d[abs(z)]++;\r\n\r\n        if ((abs(z)!=0)&&(d[abs(z)]<=2))\r\n            res++;\r\n        else if ((z==0)&&(d[abs(z)]==1))\r\n            res++;\r\n    }\r\nprintf(\"%d \\n\",res);\r\n}\r\n}\r\n"}
{"similarity_score": 0.9467580390089615, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "bc38438039daf3964f713b2c3e803e6d", "bug_code_uid": "3301fe600c40a6d1a01e9e6de8d62f8c", "src_uid": "22a3561ff70b802f080feaabc4a71298", "apr_id": "a30c477df6b646342f55ff70b075af97", "difficulty": 900, "tags": ["combinatorics", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,j,x,sum=0,arr[123]={0};\n    char a[n+1];\n    for(i=0;i<n;i++)\n    {\n    char bi[21];\n    scanf(\"%s\",bi);\n    a[i]=bi[0];\n    }\n    //for(i=0;i<strlen(a);i++)\n    //printf(\"%c\",a[i]);\n    if(n<=2)\n    printf(\"0\");\n    else if(n==3)\n    {\n    if(a[0]==a[1]&&a[0]==a[2])\n    printf(\"1\");\n    else\n    printf(\"0\");\n    }\n    else if(n==4)\n    {\n    if(a[0]==a[1]&&a[0]==a[2]&&a[0]==a[3])\n    printf(\"2\");\n    else if((a[0]==a[1]&&a[0]==a[2]&&a[0]!=a[3])||(a[0]==a[1]&&a[0]==a[3]&&a[0]!=a[2])||(a[0]==a[3]&&a[0]==a[2]&&a[0]!=a[1])||(a[1]==a[2]&&a[1]==a[3]&&a[1]!=a[0]))\n    printf(\"1\");\n    else\n    printf(\"0\");\n    }\n    else\n    {\n    for(i=0;i<strlen(a);i++)\n    {\n    arr[a[i]]++;\n    }\n    for(i=0;i<123;i++)\n    {\n    if(arr[i]>2)\n    {\n    x=arr[i]/2;\n    if(arr[i]%2==0)\n    sum=sum+x*(x-1);\n    else\n    sum=sum+(x*(x-1)/2)+(x*(x+1)/2);\n    }\n    }\n    printf(\"%d\",sum);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,j,x,sum=0,arr[200]={0};\n    char a[n+10];\n    for(i=0;i<n;i++)\n    {\n    char bi[30];\n    scanf(\"%s\",bi);\n    a[i]=bi[0];\n    }\n    if(n<=2)\n    printf(\"0\");\n    else if(n==3)\n    {\n    if(a[0]==a[1]&&a[0]==a[2])\n    printf(\"1\");\n    else\n    printf(\"0\");\n    }\n    else if(n==4)\n    {\n    if(a[0]==a[1]&&a[0]==a[2]&&a[0]==a[3])\n    printf(\"2\");\n    else if((a[0]==a[1]&&a[0]==a[2]&&a[0]!=a[3])||(a[0]==a[1]&&a[0]==a[3]&&a[0]!=a[2])||(a[0]==a[3]&&a[0]==a[2]&&a[0]!=a[1])||(a[1]==a[2]&&a[1]==a[3]&&a[1]!=a[0]))\n    printf(\"1\");\n    else\n    printf(\"0\");\n    }\n    else\n    {\n    for(i=0;i<n;i++)\n    {\n    arr[a[i]]++;\n    }\n    for(i=0;i<170;i++)\n    {\n    if(arr[i]>2)\n    {\n    x=arr[i]/2;\n    if(arr[i]%2==0)\n    sum=sum+x*(x-1);\n    else\n    sum=sum+((x*(x-1))/2)+((x*(x+1))/2);\n    }\n    }\n    printf(\"%d\",sum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8481012658227848, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ba873f385a531bdab460218684c35bc2", "bug_code_uid": "afa3bb42477de5fe57dc19e7232a3276", "src_uid": "7224ffd4776af4129739e1b28f696050", "apr_id": "af73c872de5b24a4b75b26e232f0a703", "difficulty": 1100, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\nint t,n;\nscanf(\"%d\",&n);\nfor(t=0;t<n;t++)\n{\nint a,b,c,d,x,y,x1,x2,y1,y2,i,ss;\nscanf(\"%d%d%d%d%d%d%d%d%d%d\",&a,&b,&c,&d,&x,&y,&x1,&y1,&x2,&y2);\n\n\n\nif(x+b-a>=x1 && x+b-a<=x2)// && (x-a>=x1 || x+b<=x2))\n{x=x-a+b;a=0;b=0;}\n\nif(y-c+d>=y1 && y-c+d<=y2)// && (y-c>=y1 || y+d<=y2))\n{y=y-c+d;c=0;d=0;}\n\n\nif(a!=0||b!=0||c!=0||d!=0 || x1==x2 || y1==y2)\n{\nprintf(\"NO\\n\");\n}\nelse\nprintf(\"YES\\n\");\n\n\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\nint t,n;\nscanf(\"%d\",&n);\nfor(t=0;t<n;t++)\n{\nint a,b,c,d,x,y,x1,x2,y1,y2,i,ss;\nscanf(\"%d%d%d%d%d%d%d%d%d%d\",&a,&b,&c,&d,&x,&y,&x1,&y1,&x2,&y2);\n\n\nif((x1==x2 && (a!=0 || b!=0)) || (y1==y2 && (c!=0 || d!=0)));\nelse\n{if(x+b-a>=x1 && x+b-a<=x2)// && (x-a>=x1 || x+b<=x2))\n{x=x-a+b;a=0;b=0;}\n\nif(y-c+d>=y1 && y-c+d<=y2)// && (y-c>=y1 || y+d<=y2))\n{y=y-c+d;c=0;d=0;}\n}\n\nif(a!=0||b!=0||c!=0||d!=0)\n{\nprintf(\"NO\\n\");\n}\nelse\nprintf(\"YES\\n\");\n\n\n}\nreturn 0;\n}"}
{"similarity_score": 0.4028520499108734, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "159cb52ff92c8d9ddd9304f38e3bb392", "bug_code_uid": "cc5d7a070fdef05d712efb79e405f75a", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "2ab28991a6bf3633dca037526c3b568d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\nlong int n,c,t,i=0,p=1,d,e;\nscanf(\"%ld%ld\",&n,&c);d=2*c;\nscanf(\"%ld\",&i);--n;\nif(n==0 && c<i) {printf(\"1\\n\");return 0;}\nwhile(n--)\n\t{\n\tscanf(\"%ld\",&t);e=t-i;\n\tif(e<=c) {++p;i=t;}\n\telse if (e<=d) {p=1;i=t;}\n\telse {p=1;--n;scanf(\"%ld\",&i);}\n\t}\nprintf(\"%ld\\n\",p);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nlong int t[100003];\nint main ()\n{\nlong int n,c,p=1,d,e,m,k=0;;\nscanf(\"%ld%ld\",&n,&c);d=2*c;m=n;\nwhile(n--)scanf(\"%ld\",&t[n]);\ndo\n\t{\n\te=t[k]-t[k+1];\n\tif(e<=c) ++p;\n\telse break;\n\t++k;\n\t}while(k<m);\nif(p>m) --p;\nprintf(\"%ld\\n\",p);\nreturn 0;\n}"}
{"similarity_score": 0.9965556831228473, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "41a8083d5f5cce119702fd800892cd1a", "bug_code_uid": "76d97757b60b99b78cbeb84f48edeb34", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "6078da6512618f8521c2adca3b69109e", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i,j,b,t;\n    long long int k,n,cnt,p;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        cnt=0;\n        scanf(\"%lld %lld\",&n,&k);\n        while(n>0){\n            if(n%k==0){\n                ++cnt;\n                n/=k;\n            }\n            else{\n                p=n%k;\n                n-=p;\n                cnt+=p;\n            }\n        }\n        printf(\"%d\\n\",cnt);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i,j,b,t;\n    long long int k,n,cnt,p;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        cnt=0;\n        scanf(\"%lld %lld\",&n,&k);\n        while(n>0){\n            if(n%k==0){\n                ++cnt;\n                n/=k;\n            }\n            else{\n                p=n%k;\n                n-=p;\n                cnt+=p;\n            }\n        }\n        printf(\"%lld\\n\",cnt);\n    }\n    return 0;\n}\n "}
{"similarity_score": 0.9321739130434783, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fcd3cae591746826567f7e064314f49a", "bug_code_uid": "1dd252be496866be21d29733c4c986fc", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "03ec2d0060c7fcdca8d4c7eb5c4f1f6f", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nvoid insertionSort(char array[], int size)\n {\n  for (int step = 1; step < size; step++)\n    {\n    char key = array[step];\n    int j = step - 1;\n    while (key < array[j] && j >= 0)\n     {\n      array[j + 1] = array[j];\n      --j;\n     }\n    array[j + 1] = key;\n    }\n}\nint main()\n{\n int n,i,count=1;\n char arr[100001];\n scanf(\"%d\",&n);\n getchar();\n gets(arr);\n insertionSort(arr,strlen(arr));\n for(i=1;i<n;i++)\n {\n  if(arr[i]!=arr[i-1])\n     count++;\n }\n printf(\"%d\\n\",strlen(arr)-count);\n\n\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nvoid insertionSort(char array[], int size)\n {\n  for (int step = 1; step < size; step++)\n    {\n    char key = array[step];\n    int j = step - 1;\n    while (key < array[j] && j >= 0)\n     {\n      array[j + 1] = array[j];\n      --j;\n     }\n    array[j + 1] = key;\n    }\n}\nint main()\n{\n int n,i,count=1;\n char arr[100001];\n scanf(\"%d\",&n);\n getchar();\n gets(arr);\n insertionSort(arr,strlen(arr));\n for(i=1;i<n;i++)\n {\n  if(arr[i]!=arr[i-1])\n     count++;\n }\n int sum=26-count;\n if((strlen(arr)-count)<=sum)\n     printf(\"%d\\n\",strlen(arr)-count);\n else\n     printf(\"-1\");\n\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.24475524475524477, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "d4cdc64a525d4057e775ba2ca843d1c6", "bug_code_uid": "0ddec4ec2a1c7266eb2d9717eed0b9bf", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "0b1ae38ebb57b4e61689168649b7e4d4", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint t;\n\nvoid work();\n\nint main()\n{\n \nscanf(\"%d\", &t);\n\nfor(int j=0; j<t; j++){\n\nscanf(\"%d%d\", &n, &k);\n\nprintf(\"%d\", 2);\n}\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\n\n\n\nint main() {\n\n \tint test;\n \tscanf(\"%d\", &test);\n\n\tfor (int tt = 0; tt < test; tt++) {\n\n \t\tint n, k;\n \t\tscanf(\"%d%d\", &n,&k); \n\t\tint ans = n; \n\t\tfor (int j = 1; j * j <= n; j++) { \n\t\t\tif (n % j == 0) {\n \t\t\t\tif (j <= k) { \n\t\t\t\t\tif(ans> n / j){\n         ans=n/j;\n        }\n \t\t\t\t} \t\t\t\n\tif (n / j <= k) { \t\n\t\t\t\tif(ans> j){\n    ans=j;\n} \t\n\t\t\t} \t\t\t} \t\t} \n\n\t\tprintf(\"%d \\n\", ans); \n\t} \treturn 0; \n}"}
{"similarity_score": 0.8110161443494777, "equal_cnt": 17, "replace_cnt": 4, "delete_cnt": 9, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "c83b3e308d2506ec3f812fbfbbbf1d19", "bug_code_uid": "8732ddb6d3d31161b089988ecf06c250", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "b708c16a091fc44af204af09f7656398", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,i;\n        char a[100000];\n        scanf(\"%d\",&n);\n        if(n%2==0)\n        {\n            int p=n/2;\n            for(i=0;i<p;i++)\n            {\n                a[i]='1';\n            }\n            printf(\"%s\\n\",a);\n        }\n        else\n        {\n            int p=n/2-1;\n            for(i=0;i<p;i++)\n            {\n                a[i]='1';\n            }\n            printf(\"%c%s\\n\",'7',a);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,i;\n        int a[100000];\n        scanf(\"%d\",&n);\n        if(n%2==0)\n        {\n            for(i=0;i<n/2;i++)\n            {\n                a[i]=1;\n                printf(\"%d\",a[i]);\n            }\n            printf(\"\\n\");\n        }\n        else\n        {\n            printf(\"%d\",7);\n            for(i=0;i<n/2-1;i++)\n            {\n                a[i]=1;\n                printf(\"%d\",a[i]);\n            }\n            printf(\"\\n\");\n        }\n    }\n}\n"}
{"similarity_score": 0.49027777777777776, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "a0710735de374df3334671baea417568", "bug_code_uid": "583d76e1b0e70430eb75bdb459893666", "src_uid": "2fee6c39d4e55f903837ef81e818eb07", "apr_id": "3e5009c982f0bc87dab1fb7f82ff3945", "difficulty": 800, "tags": ["data structures", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--){\r\n       int n;\r\n       scanf(\"%d\",&n);\r\n       int a[n];\r\n       int b[n];\r\n       for(int i=0;i<n;i++){\r\n           scanf(\"%d\",&a[i]);\r\n       }\r\n       for(int i=0;i<n;i++){\r\n           scanf(\"%d\",&b[i]);\r\n       }\r\n       int diff=0;\r\n       int flag=0;\r\n       if(a[0]>=b[0]){\r\n            diff=a[0]-b[0];\r\n            flag=1;\r\n       }\r\n       for(int i=1;i<n;i++){\r\n           if(diff == a[i]-b[i]){\r\n               flag=1;\r\n           }\r\n           else if((diff>a[i]-b[i] && b[i]==0) || (a[0]-b[0] < a[1]-b[1] && b[0]==0)){\r\n               flag=1;\r\n           }\r\n           else if(diff!=a[i]-b[i] && b[i]!=0){\r\n               flag=0;\r\n               break;\r\n           }\r\n       }\r\n       if(flag==1){\r\n           printf(\"YES\\n\");\r\n       }\r\n       else{\r\n           printf(\"NO\\n\");\r\n       }\r\n   }\r\n    return 0;\r\n}", "fixed": "\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--){\r\n       int n;\r\n       scanf(\"%d\",&n);\r\n       int s[n];\r\n       int f[n];\r\n       for(int i=0;i<n;i++){\r\n           scanf(\"%d\",&s[i]);\r\n       }\r\n       for(int i=0;i<n;i++){\r\n           scanf(\"%d\",&f[i]);\r\n       }\r\n       printf(\"%d\", f[0]-s[0]);\r\n       for(int i=1;i<n;i++){\r\n           if(s[i]<f[i-1]){\r\n               s[i]=f[i-1];\r\n           }\r\n           printf(\" %d\",f[i]-s[i]);\r\n       }\r\n       printf(\"\\n\");\r\n   }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9241172051089407, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "6166eccd6113f51d0c375aef4cf4fcbb", "bug_code_uid": "1a93c801509aafd5c57b2e48bae25227", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "2022328b49f058cb8362fbd1ac8924ec", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int x1,y1,x2,y2,x3,y3,x4,y4,d,flag=0,m;\n    scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n    if(x1==x2){\n        d = y2 - y1;\n        x3=x1+d;\n        x4=x2+d;\n        y3=y2;\n        y4=y1; \n        flag =1;   \n    }\n    else if(y1==y2){\n        d = x2- x1;\n        y3=y1+d;\n        y4=y2+d;\n        x3=x2;\n        x4=x1;\n        flag = 1;\n    }\n    else{\n        m = (y2-y1)/(x2-x1);\n        if(m==-1||m==1){\n        x3 = x2;\n        y3 = y1;\n        x4 = x1;\n        y4 = y2;\n        flag =1;\n        }\n    } \n    if(flag==1)\n        printf(\"%d %d %d %d\",x4,y4,x3,y3);\n    else\n        printf(\"-1\");\n    return 0;   \n}", "fixed": "#include<stdio.h>\nint main(){\n    int x1,y1,x2,y2,x3,y3,x4,y4,d,flag=0,m1,m2;\n    float m;\n    scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n    if(x1==x2){\n        d = y2 - y1;\n        x3=x1+d;\n        x4=x2+d;\n        y3=y2;\n        y4=y1; \n        flag =1;   \n    }\n    else if(y1==y2){\n        d = x2- x1;\n        y3=y1+d;\n        y4=y2+d;\n        x3=x2;\n        x4=x1;\n        flag = 1;\n    }\n    else{\n        \n        m1 = y2-y1;\n        m2 = x2-x1;\n        if(m1==m2||m1==m2*-1){\n        x3 = x2;\n        y3 = y1;\n        x4 = x1;\n        y4 = y2;\n        flag =1;\n        }\n    } \n    if(flag==1)\n        printf(\"%d %d %d %d\",x4,y4,x3,y3);\n    else\n        printf(\"-1\");\n    return 0;   \n}"}
{"similarity_score": 0.7227505486466715, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "10283db75b46aee35a0b647551f653b2", "bug_code_uid": "1e991bd67aec3df7921379f5736127c0", "src_uid": "3a45b6acdcf3800d1cb4ef8ac96ed4cf", "apr_id": "f81bdec5bd7f96be39e76b651a8b06e7", "difficulty": 1700, "tags": ["bitmasks", "brute force", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,k,t;\n    int b;\n    int i,j;\n    int a[105],s;\n    long long mm;\n        scanf(\"%d\",&t);\n    while (t--)\n    {\n        scanf(\"%d%d\",&n,&k);\n        for (b=1;b<=n;b++)\n        {\n            scanf(\"%d\",&a[b]);\n        }\n        mm=-100000000;\n\n        if (n>200)\n                i=n-200;\n        else\n                i=1;\n        \n        for (;i<n;i++)\n        {\n            for (j=i+1;j<=n;j++)\n            {\n                s=(i*j)-(k*(a[i]|a[j]));\n                if(mm<s)\n                    mm=s;\n                          }\n            }\n    printf(\"%lld\\n\",mm);\n}\n    return 0;\n}\n \t \t\t    \t \t  \t\t\t\t\t \t \t   \t\t\t \t", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int k,t;\n    long long b,j,i,n,a[100009],mm,s;\n        scanf(\"%d\",&t);\n    while (t--)\n    {\n        scanf(\"%lld%d\",&n,&k);\n        for (b=1;b<=n;b++)\n        {\n            scanf(\"%lld\",&a[b]);\n        }\n        mm=-100000000;\n\n        if (n>200)\n                i=n-200;\n        else\n                i=1;\n\n        for (;i<n;i++)\n        {\n            for (j=i+1;j<=n;j++)\n            {\n                s=(i*j)-(k*(a[i]|a[j]));\n               // printf(\"%d*%d-%d*(%lld|%lld)\\n=%d\\n\",i,j,k,a[i],a[j],s);\n                if(mm<s)\n                    mm=s;\n                          }\n            }\n    printf(\"%lld\\n\",mm);\n}\n    return 0;\n}\n\n       \t\t \t\t\t \t\t \t     \t  \t  \t"}
{"similarity_score": 0.28941176470588237, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "2bda36ff56a15ef7fc53db4ffa5145e1", "bug_code_uid": "fdc9f29ae864c0f9fe5afb13d1cc8bec", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "c6d4a78f94e941f45e6a7bd443009308", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int n;\n    long long a,aa;\n    while(~scanf(\"%d\",&n))\n    {\n        for(int i=0; i<n; i++)\n        {\n            int x=-1;\n            scanf(\"%lld\",&a);\n            aa=a;\n            while(1)\n            {\n                a/=2;\n                x++;\n                if(a==0)\n                    break;\n            }\n            long long sum=1;\n            for(int i=0;i<x;i++)\n                sum*=2;\n            printf(\"%lld\\n\",sum-1);\n        }\n    }\n    return 0;\n}\n\n\t\t\t\t\t   \t  \t \t\t\t \t\t   \t\t \t\t  \t\t", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n //c\u8bed\u8a00\u5b9e\u73b0\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n\t{\n        int n,b=1;\n        scanf(\"%d\", &n);\n        while(b<=n/2)\n\t\t{\n            b*=2;\n        }\n        printf(\"%d\\n\", b-1);\n    }\n\treturn 0;\n}\n   \t  \t\t\t \t\t \t\t \t\t \t\t\t     \t\t \t"}
{"similarity_score": 0.09119496855345911, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "86c9d86a86732a01bf00f433ad25ba3a", "bug_code_uid": "d415d072d9ff6120202c1f15554bdc4e", "src_uid": "03fcf7402397b94edd1d1837e429185d", "apr_id": "69e2ad02e238aabd5597af8a4f0a3de6", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int maxn = 105;\nconst int dir[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n\nint N;\nchar g[maxn][maxn];\n\nint check (int x, int y) {\n    int ret = 0;\n    for (int i = 0; i < 4; i++) {\n        int p = x + dir[i][0];\n        int q = y + dir[i][1];\n\n        if (p < 0 || p >= N || q < 0 || q >= N)\n            continue;\n        if (g[p][q] == 'x')\n            continue;\n        ret++;\n    }\n    return ret;\n}\n\nbool judge () {\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < N; j++)\n            if (check(i, j) & 1)\n                return false;\n    }\n    return true;\n}\n\nint main () {\n    scanf(\"%d\", &N);\n    for (int i = 0; i < N; i++)\n        scanf(\"%s\", g[i]);\n\n    printf(\"%s\\n\", judge() ? \"YES\" : \"NO\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\nint n,i,j;\nchar a[100][100];\nscanf(\"%d\", &n);\nfor(i=0; i<n; i++){\nscanf(\"%s\", a[i]);\n}\nint x = 0, count;\nfor(i=0; i<n; i++){\nfor(j=0; j<n; j++){\ncount = 0;\nif(i-1 >=0 && a[i-1][j] == 'o')\ncount++;\nif(i+1 <n && a[i+1][j] == 'o')\ncount++;\nif(j-1 >=0 && a[i][j-1] == 'o')\ncount++;\nif(j+1 <n && a[i][j+1] == 'o')\ncount++;\nif(count%2 != 0){\nx = 1;\nbreak;\n}\n}\n}\nif(x)\nprintf(\"NO\\n\");\nelse\nprintf(\"YES\\n\");\n}"}
{"similarity_score": 0.9890795631825273, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1f6a39c3c7e9b722805fd744744d3b5b", "bug_code_uid": "c7078a518aaca85d61f89b0dd702ba0f", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "835c9c795ae397827aa171d6def85524", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n,b,d;\n\tscanf(\"%d %d %d\",&n,&b,&d);\n\tint o[n];\n\tint curr = 0;\n\tint sum =0;\n\tfor(int i = 0; i < n; i++){\n\t\tscanf(\"%d\",&o[i]);\n\t\tif(o[i] > b){\n\t\t\tcontinue;\n\t\t}\n\t\tcurr += o[i];\n\t\tif(curr > d){\n\t\t\tsum++;\n\t\t\tcurr -= d;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n,b,d;\n\tscanf(\"%d %d %d\",&n,&b,&d);\n\tint o[n];\n\tint curr = 0;\n\tint sum =0;\n\tfor(int i = 0; i < n; i++){\n\t\tscanf(\"%d\",&o[i]);\n\t\tif(o[i] > b){\n\t\t\tcontinue;\n\t\t}\n\t\tcurr += o[i];\n\t\tif(curr > d){\n\t\t\tsum++;\n\t\t\tcurr = 0;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}"}
{"similarity_score": 0.9197530864197531, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "879c74776b15bc28d1c986e09cb0a356", "bug_code_uid": "da38c0319b379885cdebc80bd58883ae", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "57a1c226e0b7c37e96d4878458fee3b8", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int a,n;\n    scanf(\"%d\", &n);\n    for (a=0;a<n; a++){\n        float z,b,p;\n        int d;\n        scanf(\"%f\", &b);\n        z=(360/(180-b));\n        p=z*10;\n        d=p;\n        if (d%10==0){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int a,n;\n    scanf(\"%d\", &n);\n    for (a=0;a<n; a++){\n        float z,b,p;\n        int d;\n        scanf(\"%f\", &b);\n        z=(360/(180-b));\n        if ( (int)(z)/z==1){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9956896551724138, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a92dfd1c2dbf80f0b4da15a52aea5f26", "bug_code_uid": "7b3cf009a800641718ba810d98d4c49c", "src_uid": "71cead8cf45126902c518c9ce6e5e186", "apr_id": "3ecbd0eb79d3131c9bfdf395d47493d8", "difficulty": 1300, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint a;\n\tlong int n,i,tot;\n\tscanf(\"%ld\",&n);\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\n\t\ttot = tot+a;\n\t}\n\n\tif(tot%n==0)\tprintf(\"%ld\\n\",n);\n\telse\t\tprintf(\"%ld\\n\",n-1);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint a;\n\tlong int n,i,tot=0;\n\tscanf(\"%ld\",&n);\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\n\t\ttot = tot+a;\n\t}\n\n\tif(tot%n==0)\tprintf(\"%ld\\n\",n);\n\telse\t\tprintf(\"%ld\\n\",n-1);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.35443037974683544, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "b1bd4fa1bd3461a3c9f7b9da42a017ef", "bug_code_uid": "595a4b52a6abc910d2d16e45905fe3f4", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "480c9c104f091ece6c57019567bfe82b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\t\nint main(void) {\n\tint bl, d, t, wt;\n\tint ft, tft=0;\n\tint i=1;\n\t\n\tscanf(\"%d%d\",&d,&t);\n\t\n\tfor(i=1; i<d; i++){\n\t\tscanf(\"%d\",&wt);\n\tft = 86400 - wt;\n\tbl = t- ft;\n\t\n\tif(bl == 0){\n\t\tbreak;\n\t}\n\t}\n\t\n\tprintf(\"%d\",i);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main() {\n\tint n,t, counter = 0;\n\tscanf(\"%d%d\", &n, &t);\n\twhile (n--) {\n\t\tint d;\n\t\tscanf(\"%d\", &d);\n\t\tt -= 86400 - d;\n\t\tcounter++;\n\t\tif (t <= 0) {\n\t\t\tprintf(\"%d\\n\", counter);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5583864118895966, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f0f64707b7cdc0302e1a8c5f6bcc0174", "bug_code_uid": "ad9ccc41e819b570e9d2649e44c93e98", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "263fd9cd131cc9fa417e7201a12b8a09", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int l;\n    scanf(\"%d\",&l);\n    int i,a[l],b[l],j,t1,t2;\n    for(i=0;i<l;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n    for(i=0;i<l;i++)\n    {\n        for(j=0;j<l;j++)\n        {\n            if(a[j]>a[j+1])\n            {\n                t1=a[j];\n                a[j]=a[j+1];\n                a[j+1]=t1;\n                t2=b[j];\n                b[j]=b[j+1];\n                b[j+1]=t2;\n            }\n        }\n    }\n    int f=0;\n    for(i=0;i<l;i++)\n    {\n        if(b[i]>a[i])\n        {\n            f=1;\n            break;\n        }\n    }\n    if(f==1) printf(\"Happy Alex\\n\");\n    else printf(\"Poor Alex\\n\");\n    \n", "fixed": "#include<stdio.h>\nint main()\n\n{\n    int l;\n    scanf(\"%d\",&l);\n    int i,a,b,f=0;\n    for(i=0;i<l;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a<b)\n        {\n            f=1;\n            break;\n        }\n    }\n    if(f==1) printf(\"Happy Alex\\n\");\n    else printf(\"Poor Alex\\n\");\n}\n"}
{"similarity_score": 0.10871794871794872, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c3fc30ff9efb0823fe376b1ff91afb83", "bug_code_uid": "beeeaa6e4d57daeb9a2a1c28004896d7", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "86b671acac2661867aefc3eac006d921", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\nint main(){\n    char source[100001];\n    int rooms;\n    scanf(\"%d\",&rooms);\n  scanf(\"%s\",source);\n  int cnt[200];\n  int ans=0,i,len;\nlen = strlen( source );\nfor (i = 0; i < len; i++){\n        if((int)source[i]>=97&&(int)source[i]<=122){\n            cnt[source[i]]++;\n        }\n        if((int)source[i]>=65&&(int)source[i]<=90){\n            if(cnt[source[i]+32]>0)\n                cnt[source[i]+32]--;\n            else\n                ans++;\n        }\n}\nprintf(\"%d\",ans);\nreturn 0;}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint x[200];\nchar s[1000000];\nint main()\n{\n    int n,c = 0, i;\n    scanf(\"%d\",&n);\n    scanf(\"%s\",s);\n    for(i=0;s[i];i++)\n    {\n        if(i%2 == 0)\n        {\n            x[s[i]]++;\n        }\n        else\n        {\n            if(x[s[i]+32]>0)\n            {\n                x[s[i]+32]--;\n            }\n            else\n                c++;\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}"}
{"similarity_score": 0.9933014354066986, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "adcae844c7b9a908ca285224d8527958", "bug_code_uid": "890f1c2983110b3dc894517b5ed75e6b", "src_uid": "d5549c0627c236d82541a67ccbe7977d", "apr_id": "1c0fbc5fa01e5affc394abd09965f6fc", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid solve()\r\n{\r\n\tint n,k;\r\n\tscanf(\"%d\",&n);\r\n\tscanf(\"%d\",&k);\r\n\tif ((k-1)*2>(n-1))\r\n\t{\r\n\t\tprintf(\"-1\\n\");\r\n\t\treturn;\r\n\t}\r\n\tchar arr[n][n];\r\n\tint i=0;\r\n\tint j=0;\r\n\tint p=0;\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tarr[i][j]='.';\r\n\t\t}\r\n\t}\r\n\twhile(p!=k)\r\n\t{\r\n\t\tarr[i][i]='R';\r\n\t\ti+=2;\r\n\t\tp++;\r\n\t}\r\n\tfor (i=0;i<n;i++)\r\n\t{\r\n\t\tfor (j=0;j<n;j++)\r\n\t\tprintf(\"%c\",arr[i][j]);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\nint main()\r\n{\r\n\tint t=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)solve();\r\n\treturn 0;\r\n\t\r\n}", "fixed": "#include<stdio.h>\r\nvoid solve()\r\n{\r\n\tint n,k;\r\n\tscanf(\"%d\",&n);\r\n\tscanf(\"%d\",&k);\r\n\tif ((k-1)*2>(n-1))\r\n\t{\r\n\t\tprintf(\"-1\\n\");\r\n\t\treturn;\r\n\t}\r\n\tchar arr[n][n];\r\n\tint i=0;\r\n\tint j=0;\r\n\tint p=0;\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tarr[i][j]='.';\r\n\t\t}\r\n\t}\r\n\ti=0;\r\n\twhile(p!=k)\r\n\t{\r\n\t\tarr[i][i]='R';\r\n\t\ti+=2;\r\n\t\tp++;\r\n\t}\r\n\tfor (i=0;i<n;i++)\r\n\t{\r\n\t\tfor (j=0;j<n;j++)\r\n\t\tprintf(\"%c\",arr[i][j]);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\nint main()\r\n{\r\n\tint t=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)solve();\r\n\treturn 0;\r\n\t\r\n}"}
{"similarity_score": 0.6821428571428572, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9e1ed1bd2cbb3922ed8d3927c5f0ad45", "bug_code_uid": "0cb89b47227855e9b16a462bfd6db1a7", "src_uid": "ec8060260a6c7f4ff3e6afc9fd248afc", "apr_id": "25824560a6d3f8ef0bc8759a40774f7e", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n  long long int s,c,a,b,t,r,i=1;int num;\n  scanf(\"%d\",&num);\n  while(i<=num)\n  {\n  scanf(\"%I64d\",&s);\n  scanf(\"%I64d\",&a);\n  scanf(\"%I64d%I64d\",&b,&c);\n  if(s%c==0)\n  {\n     t=s/(a*c);\n\n  }\n\n   r=t*(a+b)+s%(a*c);\n\n   printf(\"%I64d\\n\",r);\n\n  }\n   return 0;\n   }\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n  long long int s,c,a,b,t,r,i=1;int num;\n  scanf(\"%d\",&num);\n  while(i<=num)\n  {\n  scanf(\"%I64d\",&s);\n  scanf(\"%I64d\",&a);\n  scanf(\"%I64d%I64d\",&b,&c);\n  t=s/c;\n  r=(t+(t/a)*b);\n\n   printf(\"%I64d\\n\",r);\n   num--;\n  }\n   return 0;\n   }\n"}
{"similarity_score": 0.6857402361489555, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5be2544d37baea8753f082b0b0e9e52b", "bug_code_uid": "1213d6e6e66323249ff4e858c952eaee", "src_uid": "95206a124d0c651de2aca72106f7e962", "apr_id": "753a59a4b6f924d22f9eb342730e7aa2", "difficulty": 2400, "tags": ["constructive algorithms", "binary search", "interactive"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t1000\n#define B\t10\n\nint qq[N], cnt, x, y;\n\nint query() {\n\tint a = 0;\n\n\tif (cnt) {\n\t\tint i;\n\n\t\tprintf(\"? %d\", cnt);\n\t\tfor (i = 0; i < cnt; i++)\n\t\t\tprintf(\" %d\", qq[i]);\n\t\tprintf(\"\\n\");\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &a);\n\t}\n\treturn a != (cnt % 2 == 0 ? 0 : x);\n}\n\nint solve(int n) {\n\tint lower = 0, upper = n;\n\n\twhile (upper - lower > 1) {\n\t\tcnt = (lower + upper) / 2;\n\t\tif (query())\n\t\t\tupper = cnt;\n\t\telse\n\t\t\tlower = cnt;\n\t}\n\treturn qq[upper - 1];\n}\n\nint main() {\n\tstatic char diff[B];\n\tint n, b, i, p1, p2, tmp;\n\n\tscanf(\"%d%d%d\", &n, &x, &y);\n\tfor (b = 0; b < B; b++) {\n\t\tcnt = 0;\n\t\tfor (i = 1; i <= n; i++)\n\t\t\tif (i & 1 << b)\n\t\t\t\tqq[cnt++] = i;\n\t\tdiff[b] = query();\n\t}\n\tprintf(\"\\n\");\n\tfor (b = 0; b < B; b++)\n\t\tprintf(\"%d \", diff[b]);\n\tprintf(\"\\n\");\n\tfflush(stdout);\n\tcnt = 0;\n\tfor (b = 0; b < B; b++)\n\t\tif (diff[b]) {\n\t\t\tfor (i = 1; i <= n; i++)\n\t\t\t\tif (i & 1 << b)\n\t\t\t\t\tqq[cnt++] = i;\n\t\t\tbreak;\n\t\t}\n\tp1 = solve(cnt);\n\tp2 = p1;\n\tfor (b = 0; b < B; b++)\n\t\tif (diff[b])\n\t\t\tp2 ^= 1 << b;\n\tif (p1 > p2)\n\t\ttmp = p1, p1 = p2, p2 = tmp;\n\tprintf(\"! %d %d\\n\", p1, p2);\n\tfflush(stdout);\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t1000\n#define B\t10\n\nint qq[N], cnt, x, y;\n\nint query() {\n\tint a = 0;\n\n\tif (cnt) {\n\t\tint i;\n\n\t\tprintf(\"? %d\", cnt);\n\t\tfor (i = 0; i < cnt; i++)\n\t\t\tprintf(\" %d\", qq[i]);\n\t\tprintf(\"\\n\");\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &a);\n\t}\n\treturn a != (cnt % 2 == 0 ? 0 : x);\n}\n\nint solve(int n) {\n\tint lower = 0, upper = n;\n\n\twhile (upper - lower > 1) {\n\t\tcnt = (lower + upper) / 2;\n\t\tif (query())\n\t\t\tupper = cnt;\n\t\telse\n\t\t\tlower = cnt;\n\t}\n\treturn qq[upper - 1];\n}\n\nint main() {\n\tstatic char diff[B];\n\tint n, b, i, p1, p2, tmp;\n\n\tscanf(\"%d%d%d\", &n, &x, &y);\n\tfor (b = 0; b < B; b++) {\n\t\tcnt = 0;\n\t\tfor (i = 1; i <= n; i++)\n\t\t\tif (i & 1 << b)\n\t\t\t\tqq[cnt++] = i;\n\t\tdiff[b] = query();\n\t}\n\tcnt = 0;\n\tfor (b = 0; b < B; b++)\n\t\tif (diff[b]) {\n\t\t\tfor (i = 1; i <= n; i++)\n\t\t\t\tif (i & 1 << b)\n\t\t\t\t\tqq[cnt++] = i;\n\t\t\tbreak;\n\t\t}\n\tp1 = solve(cnt);\n\tp2 = p1;\n\tfor (b = 0; b < B; b++)\n\t\tif (diff[b])\n\t\t\tp2 ^= 1 << b;\n\tif (p1 > p2)\n\t\ttmp = p1, p1 = p2, p2 = tmp;\n\tprintf(\"! %d %d\\n\", p1, p2);\n\tfflush(stdout);\n\treturn 0;\n}\n"}
{"similarity_score": 0.3791469194312796, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "309c3a0c91bbe6896b14e56499cb9479", "bug_code_uid": "8a902be3b4f282769a44fbc345800ed0", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "fe0ef819f75bb82c4fc5ecea41f869be", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,n,k=0,t=0,max;\n    char name[150][20];\n    char temp[150];\n     int win[101];\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n     scanf(\"%s\",name[i]);\n    }\n    for(i=0;temp[i]!='\\0';i++)\n    {\n        temp[i]='0';\n    }\n\n    for(i=0;i<101;i++)\n        win[i]=0;\n    for(i=0;name[i]<n-1;i++)\n    {\n        k=1;\n        for(j=i+1;name[j]<n;j++)\n        {\n            if(strcmp(name[i],temp)>0||strcmp(name[i],temp)<0&&strcmp(name[i],name[j])==0)\n            {\n                win[i]=k;\n                k++;\n                strcpy(name[j],temp);\n            }\n        }\n    }\n    max=win[0];\n    for(i=1;i<n;i++)\n    {\n        if(win[i]>max)\n        {\n            max=win[i];\n            t=i;\n        }\n\n    }\n\n\n            puts(name[t]);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[200][20];\n    char str1[20];\n    int n,i,k=0;\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        gets(str[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(strcmp(str[0],str[i])==0)\n        {\n            k++;\n        }\n        else\n            strcpy(str1,str[i]);\n    }\n    if(k>(n-k))\n        puts(str[0]);\n    else\n        puts(str1);\n    return 0;\n}\n"}
{"similarity_score": 0.12362404741744284, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "2bfae9c9e86b8610059a498c60b2c3e1", "bug_code_uid": "ebc45b73cf16f7fa9bb23c906a519ffb", "src_uid": "4a58039c5171597ecf78837e9db1d71d", "apr_id": "9cc61577891f2bd1b9bc323f033145b1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint k, count1;\r\nint main()\r\n{\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tchar a[1000];\r\n\t\tk = 0;\r\n\t\tscanf(\"%s\", a);\r\n\t\tchar ch = a[0];\r\n\t\tint len = strlen(a);\r\n\t\tfor (int i = 1; i <= len; i++)\r\n\t\t\tif (ch > a[i] && 'a' <= a[i] && a[i] <= 'z')\r\n\t\t\t{\r\n\t\t\t\tch = a[i];\r\n\t\t\t\tcount1 = i;\r\n\t\t\t}\r\n\t\tfor (int i = 0; i <= len; i++)\r\n\t\t{\r\n\t\t\tif(count1 !=i)\r\n\t\t\t{\r\n\t\t\t\ta[k++] = a[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << ch << \" \";\r\n\t\tfor (int i = 0; i < k; i++)\r\n\t\t\tif ('a' <= a[i] && a[i] <= 'z')\r\n\t\t\t\tcout << a[i];\r\n\t\tcout << endl;\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n       char ch,s[1000];\r\n       int l=0,k=0;\r\n       scanf(\"%s\",s);\r\n       int len=strlen(s);\r\n       ch='z';\r\n       for(int i=0;i<=len;i++)\r\n       {\r\n           if(ch>s[i]&&'a'<=s[i]&&s[i]<='z')\r\n           {\r\n               ch=s[i];\r\n               l=i;\r\n           }\r\n       }\r\n       for(int i=0;i<=len;i++)\r\n       {\r\n           if(i!=l&&'a'<=s[i]&&s[i]<='z')\r\n            s[k++]=s[i];\r\n       }\r\n     printf(\"%c \",ch);\r\n       for(int i=0;i<k;i++)\r\n       printf(\"%c\",s[i]);\r\n       printf(\"\\n\");\r\n   }\r\n}"}
{"similarity_score": 0.18820984315846404, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "fb7cb3542dd1261d4ec6a676105c7be4", "bug_code_uid": "3d6c498b9062219c9a23026671748a16", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "337cd96eeb18a5b388b208c25b4a7708", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n      int n;\r\n      scanf(\"%d\",&n);\r\n      for(int i=0;i<n;i++){\r\n        int a,b,c;\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        //printf(\"%d %d %d\\n\",a,b,c);\r\n        if(b!=0&&c!=0){\r\n        int flag=0;\r\n        if(a==0&&b==0;c==0){\r\n            flag=1;\r\n        }\r\n            int y=c-b;\r\n            int a0=b-y;\r\n            //printf(\"%d \\n\",a0);\r\n            if(a0%a==0&&a0>0&&a&&flag=0){\r\n                flag=1;\r\n              \r\n            }\r\n            y=b-a;\r\n            int c0=b+y;\r\n           // printf(\"%d\\n\",c0);\r\n            if(c0%c==0&&c0>0&&flag==0){\r\n                flag=1;\r\n            \r\n \r\n            }\r\n            y=(c-a)/2;\r\n            int b0=c-y;\r\n            int b1=(a+c)/2;\r\n          //  printf(\"%d  %d\\n\",b0,b1);\r\n            if(b0==b1 &&b0%b==0&&b0>0&&flag==0&&b0!=1){\r\n                flag=1;\r\n                \r\n            }\r\n \r\n \r\n        if(flag==1){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n \r\n        }\r\n      }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    long long n;\r\n    scanf(\"%lld\", &n);\r\n    while (n--)\r\n    {\r\n        long long a, b, c;\r\n        scanf(\"%lld %lld %lld\", &a, &b, &c);\r\n        if (a == 0 && b == 0 && c == 0)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            // // long int order = 0;\r\n            long long cap = 2 * b - a;\r\n            long long bap = (a + c);\r\n            long long aap = 2 * b - c;\r\n            //printf(\"%lld %lld %lld\\n\",cap,bap,aap);\r\n            if ((cap % c == 0 && cap > 0) || (bap % (2 * b) == 0 && bap > 0) || (aap % a == 0  && aap > 0))\r\n            {\r\n                printf(\"YES\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n        }\r\n    }\r\n    \r\n   \r\n    return 0;\r\n}"}
{"similarity_score": 0.9428571428571428, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ddf56e3a822fd0c7913e191e3027929a", "bug_code_uid": "2e1d9aa6a32244d3894918609c8a1d62", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "beb0052b6f2711f05cfbcc39e8e775d1", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int a[3],s=0,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n    for(j=0;j<3;j++)\n    {\n        scanf(\"%d\",&a[j]);\n        if(a[j]==1)\n        s=s+a[i];\n    }\n    if(s>=2)\n    count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int a[3],s=0,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {s=0;\n    for(j=0;j<3;j++)\n    {\n        scanf(\"%d\",&a[j]);\n        s=s+a[j];\n    }\n    if(s>=2)\n    count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.9833080424886191, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "13345b99cbc2db30cd604f0d7d031224", "bug_code_uid": "bcaace8bed5ea2648023f9af2b6d9504", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "8bbbbeff5e55a6c02a23d8d85743797a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,d,t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n        int p=b-a;\r\n        int q=c-a;\r\n        int r=d-a;\r\n        if(p>0&&q>0&&r>0)\r\n        {\r\n            printf(\"3\");\r\n            continue;\r\n        }\r\n         if((p>0&&q>0&&r<=0)||(p>0&&q<=0&&r>0)||(p<=0&&q>0&&r>0) )\r\n        {\r\n            printf(\"2\");\r\n            continue;\r\n        }\r\n         if(p<=0&&q<=0&&r<=0)\r\n        {\r\n            printf(\"0\");\r\n            continue;\r\n        }\r\n        else\r\n        {\r\n             printf(\"1\");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,d,t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n        int p=b-a;\r\n        int q=c-a;\r\n        int r=d-a;\r\n        if(p>0&&q>0&&r>0)\r\n        {\r\n            printf(\"3\\n\");\r\n            continue;\r\n        }\r\n         if((p>0&&q>0&&r<=0)||(p>0&&q<=0&&r>0)||(p<=0&&q>0&&r>0) )\r\n        {\r\n            printf(\"2\\n\");\r\n            continue;\r\n        }\r\n         if(p<=0&&q<=0&&r<=0)\r\n        {\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n        else\r\n        {\r\n             printf(\"1\\n\");\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n \r\n}"}
{"similarity_score": 0.5900667160859896, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "002f6fd59c3dbe23170c77ccc0533843", "bug_code_uid": "7d439ace4f3cb7f75cc5aad62760a7ff", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "4d95052c9bbe3e5ca72da1d5fdc604ca", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,k,j,m,x,i;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n        int a[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tint flag=0,sum=0,found=0,n2=0,temp;\r\n\t\t\ttemp=a[i];\r\n\t\t\t\twhile(temp>=k || a[i]==(n2+k))\r\n\t\t\t\t{\r\n\t\t\t\t   if(temp%k==0)\r\n\t\t\t\t   {\r\n\t\t\t\t   \tflag=1;\r\n\t\t\t\t   \tbreak;\r\n\t\t\t\t   }\r\n\t\t\t\t   temp=[i];\r\n\t\t\t\t   else\r\n\t\t\t\t   {\r\n\t\t\t\t   \tn2+=10;\r\n\t\t\t\t   \ttemp-=(n2+k);\r\n\t\t\t\t   \t}\t\r\n\t\t\t\t}\r\n\t\t\t\tif(flag==1)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t}\r\n\t}\r\n}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,k,j,m,x,i;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n        int a[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tint flag=0,sum=0,found=0,n2=0,temp;\r\n\t\t\ttemp=a[i];\r\n\t\t\tif((a[i]-k)%10==0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\twhile(temp>=k)\r\n\t\t\t\t{\r\n\t\t\t\t   if(temp%k==0 || (temp>=(k*10)))\r\n\t\t\t\t   {\r\n\t\t\t\t   \tflag=1;\r\n\t\t\t\t   \tbreak;\r\n\t\t\t\t   }\r\n\t\t\t\t   else\r\n\t\t\t\t   {\r\n\t\t\t\t   \tn2+=10;\r\n\t\t\t\t   \ttemp=a[i];\r\n\t\t\t\t   \ttemp-=(n2+k);\r\n\t\t\t\t   \t}\t\r\n\t\t\t\t}\r\n\t\t\t\tif(flag==1)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t}\r\n\t}\r\n}\r\n}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.27692307692307694, "equal_cnt": 21, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "5830f9a5de45f617d80e29bdc8404965", "bug_code_uid": "3e7f999d624b1d9dd5e50c30c57efc8b", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "9eee40d317cea75554c7307ed8558834", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\tint main(void) { \n\t\tint n,x;\n\t\tscanf(\"%d\",&n);\n\tif(n<9)\n\t\tx=0;\n\telse \n\t\tx=1;\n\t\t\tint s=0;\n\t\t\twhile(n)\n\t\t\t\t\t{\n\t\t\t\t\t\ts+=n%10;\n\t\t\t\t\t\tn=n/10;\n\t\t\t\t\t\tif(n==0&&s>=10) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tn=s;\n\t\t\t\t\t\ts=0;\n\t\t\t\t\t\tx++;\n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\tprintf(\"%d\\n\",x); \n\t\t\treturn 0; \n\t\t\t} \n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    char c;\n    int n=0,b=0,x;\nwhile(1)\n{\n    scanf(\"%c\",&c);\n    if(c=='\\n')\n        break;\n    else\n    {\n        n+=c-48;\n        b++;\n    }\n}\n    if(b==1)\n        x=0;\n    else\n        x=1;\n            int s=0;\n            if(n>9)\n            {\n            while(n)\n                    {\n                        s+=n%10;\n                        n=n/10;\n                        if(n==0&&s<10)\n                            x++;\n                        else if(n==0&&s>=10) \n                        {\n                            n=s;\n                        s=0;\n                        x++;\n                        } \n                    } \n            }\n            printf(\"%d\\n\",x); \n            return 0; \n            } \n"}
{"similarity_score": 0.8340080971659919, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a0f704d60cc5e052861eb77237499e22", "bug_code_uid": "5565f9813f8f6f87130c4fa8ebb0486d", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "7c9c64994d7c6435802beff5ccd1a88c", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <inttypes.h>\n#include <string.h>\n#include <math.h>\n\nvoid solve() {\n    \n    size_t t;\n\n    scanf(\"%zu\", &t);\n\n    while (t--) {\n        \n        int a, b, c;\n        scanf(\"%d%d%d\", &a, &b, &c);\n         \n        if ((a < b && a > c) || (a < c && a > b)) {\n             printf(\"%d\\n\", a);\n        } else if ((b < a && b > c) || (b < c && b > a)) {\n             printf(\"%d\\n\", b);\n        } else {\n             printf(\"%d\\n\", c);\n        }\n    }\n}\n\nint main (void)\n{\n    solve();\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (void)\n{\n    int t;\n\n    scanf(\"%d\", &t);\n\n    while (t--) {\n        \n        int a, b, c;\n        scanf(\"%d%d%d\", &a, &b, &c);\n         \n        if ((a < b && a > c) || (a < c && a > b)) {\n             printf(\"%d\\n\", a);\n        } else if ((b < a && b > c) || (b < c && b > a)) {\n             printf(\"%d\\n\", b);\n        } else {\n             printf(\"%d\\n\", c);\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9346879535558781, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "0460ea0aace39a4a13f090a697831180", "bug_code_uid": "e08d3871e9ab4df0aec2cd598ca17024", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "3679773a457a5a3d0fb5d34ade442d46", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n    char a[1000012];\n    int n,m,i,j,k,top=0,sum,cur=1,flag,heavy[1000011],metal[1000011],res=0,max2,max;\nint main()\n{\n\n\n    scanf(\"%s\",&a);\n    for(i=0;i<strlen(a)-4;++i)\n    {\n        if(a[i]=='h'&&a[i+1]=='e'&&a[i+2]=='a'&&a[i+3]=='v'&&a[i+4]=='y')\n        {\n            heavy[i]=1;\n           \n        }\n        if(a[i]=='m'&&a[i+1]=='e'&&a[i+2]=='t'&&a[i+3]=='a'&&a[i+4]=='l')\n        {\n            metal[i]=1;\n           \n        }\n    }\n\n    for(i=strlen(a)-2;i>=0;--i)\n    {\n        metal[i]+=metal[i+1];\n    }\n     for(i=0;i<strlen(a);++i)\n    {\n        if(heavy[i]==1)\n        {\n            res+=metal[i];\n        }\n    }\n\n\n    printf(\"%d\\n\",res);\n    return 0;\n\n\n\n}\n", "fixed": "#include<stdio.h>\n    char a[1000012];\n    long long int n,m,i,j,k,top=0,sum,cur=1,flag,heavy[1000011],metal[1000011],res=0,max2,max;\nint main()\n{\n\nint l;\n    scanf(\"%s\",&a);\n    l=strlen(a);\n    for(i=0;i<l;++i)\n    {\n        if(a[i]=='h'&&a[i+1]=='e'&&a[i+2]=='a'&&a[i+3]=='v'&&a[i+4]=='y')\n        {\n            heavy[i]=1;\n\n        }\n        if(a[i]=='m'&&a[i+1]=='e'&&a[i+2]=='t'&&a[i+3]=='a'&&a[i+4]=='l')\n        {\n            metal[i]=1;\n\n        }\n    }\n\n    for(i=l-2;i>=0;--i)\n    {\n        metal[i]+=metal[i+1];\n    }\n     for(i=0;i<l;++i)\n    {\n        if(heavy[i]==1)\n        {\n            res+=metal[i];\n        }\n    }\n\n\n    printf(\"%I64d\\n\",res);\n    return 0;\n\n\n\n}\n"}
{"similarity_score": 0.890190336749634, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cc3635fba22cf91b6e2e1b57e89ea79b", "bug_code_uid": "a02e44b215df3b4b1f876b542a5f9a58", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "74a9b952ae0134c8aa7d8f6ecbcd3850", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,k=0,n,z;\r\n        scanf(\"%d\",&n);\r\n        a=n;\r\n        while(a!=0)\r\n        {\r\n            a=a/10;\r\n            k++;\r\n        }\r\n        z=pow(10,k-1);\r\n        printf(\"%d\\n\",n-z);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,k=0,n,z=1;\r\n        scanf(\"%d\",&n);\r\n        a=n;\r\n        while(a!=0)\r\n        {\r\n            a=a/10;\r\n            k++;\r\n        }\r\n        k--;\r\n        while(k--)\r\n        {\r\n            z=z*10;\r\n        }\r\n        printf(\"%d\\n\",n-z);\r\n    }\r\n}"}
{"similarity_score": 0.7577854671280276, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "27684d4909d93b81c3b899ddd2dcd1a4", "bug_code_uid": "f63a76b0275130b545e011cac389e74d", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "688cbbb9309552fa6e880ffb38af742f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a,b,i,c;\n\tint count=0;\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t){\n\t\n\tscanf(\"%d %d\",&a,&b);\n\tc=a-b;\n\tcount+=c/5;\n\tc=c%5;\n\tcount+=c/2;\n\tc=c%2;\n\tcount+=c;\n\tif(count>0)\n\t\tprintf(\"%d\",count);\n\telse\n\t\tprintf(\"%d\",-count);\n\t}\n\tcount=0;\n\t\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a,b,i,c;\n\tint count=0;\n\tint t;\n\tscanf(\"%d\",&t);\n\tint h[t];\n\tfor(i=0;i<t;i++)\n\t{\n\t\n\tscanf(\"%d %d\",&a,&b);\n\tc=a-b;\n\tcount+=c/5;\n\tc=c%5;\n\tcount+=c/2;\n\tc=c%2;\n\tcount+=c;\n\tif(count>0)\n\t\th[i]=count;\n\telse\n\t\th[i]=-count;\n\tcount=0;\n\t\n\t}\n\tfor(i=0;i<t;i++)\n\t{\n\t\tprintf(\"%d\\n\",h[i]);\n\t}\n\t\n\t\n}"}
{"similarity_score": 0.9884526558891455, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "49e9d2c1c0200e4ceebd586806e98d27", "bug_code_uid": "cb76dfe184ae0f4f5bdc9d899370351f", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "7d0b0dce37ba8190fa9dc4b3145857e1", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nlong long int n, a, b, c,k;\n\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tk=0;\n\t\tscanf(\"%I64d %I64d %I64d\", &a, &b, &c);\n\t\tif(a%2==0){\n\t\t\ta/=2;\n\t\t}\n\t\telse{\n\t\t\ta/=2;\n\t\t\tk++;\n\t\t}\n\t\tif(b%2==0){\n\t\t\tb/=2;\n\t\t}\n\t\telse{\n\t\t\tb/=2;\n\t\t\tk++;\n\t\t}\n\t\tif(c%2==0){\n\t\t\tc/=2;\n\t\t}\n\t\telse{\n\t\t\tc/=2;\n\t\t\tk++;\n\t\t}\n\t\t/*printf( \"%llu\\n\", a);\n\t\tprintf( \"%llu\\n\", b);\n\t\tprintf( \"%llu\\n\", c);*/\n\t\tprintf( \"%I64d\\n\", a+b+c+(k==2?1:0));\n\t}\n}", "fixed": "#include<stdio.h>\n\n\nlong long int n, a, b, c, k;\n\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tk=0;\n\t\tscanf(\"%I64d %I64d %I64d\", &a, &b, &c);\n\t\tif(a%2==0){\n\t\t\ta/=2;\n\t\t}\n\t\telse{\n\t\t\ta/=2;\n\t\t\tk++;\n\t\t}\n\t\tif(b%2==0){\n\t\t\tb/=2;\n\t\t}\n\t\telse{\n\t\t\tb/=2;\n\t\t\tk++;\n\t\t}\n\t\tif(c%2==0){\n\t\t\tc/=2;\n\t\t}\n\t\telse{\n\t\t\tc/=2;\n\t\t\tk++;\n\t\t}\n\t\t/*printf( \"%llu\\n\", a);\n\t\tprintf( \"%llu\\n\", b);\n\t\tprintf( \"%llu\\n\", c);*/\n\t\tprintf( \"%I64d\\n\", a+b+c+(k==2 || k== 3?1:0));\n\t}\n}"}
{"similarity_score": 0.9811827956989247, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3f5149295c1957570cca9dc3e3aa8938", "bug_code_uid": "a4da4d074f73d620312c1c3f512bcff1", "src_uid": "e512285d15340343e34f596de2be82eb", "apr_id": "126c3661fe9a94113663cc656892d0b3", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, k, max, min, val, i, j;\n    int arr[100];\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &k);\n    for(i = 0;i < n;i++)\n        scanf(\"%d\", &arr[i]);\n    max = min = arr[0];\n    for(i = 1;i < n;i++)\n    {\n        if(arr[i] > max)\n            max = arr[i];\n        if(arr[i] < min)\n            min = arr[i];\n    }\n    if(max - min > k)\n        printf(\"NO\");\n    else\n    {\n        printf(\"YES\\n\");\n        for(i = 0;i < n;i++)\n        {\n            val = 1;\n            for(j = 1;j <= arr[i];j++)\n            {\n                printf(\"%d \", val);\n                if(val++ > k)\n                    val = 1;\n            }\n            //if(i != n)\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, k, max, min, val, i, j;\n    int arr[100];\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &k);\n    for(i = 0;i < n;i++)\n        scanf(\"%d\", &arr[i]);\n    max = min = arr[0];\n    for(i = 1;i < n;i++)\n    {\n        if(arr[i] > max)\n            max = arr[i];\n        if(arr[i] < min)\n            min = arr[i];\n    }\n    if(max - min > k)\n        printf(\"NO\");\n    else\n    {\n        printf(\"YES\\n\");\n        for(i = 0;i < n;i++)\n        {\n            val = 1;\n            for(j = 1;j <= arr[i];j++)\n            {\n                printf(\"%d \", val);\n                val++;\n                if(val> k)\n                    val = 1;\n            }\n            //if(i != n)\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9979253112033195, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d2aaa0a1452d274401cf6831b0c503a8", "bug_code_uid": "516cfd7676976c4c46ca78297ee9bd11", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "3773d68c48b23cb71a1a57e298967f54", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,j,k=0;\n    scanf(\"%d\",&n);\n    char A[n][5];\n    for(i=0;i<n;i++)\n    scanf(\"%s\",A[i]);\n    for(i=0;i<n;i++)\n    {\n    for(j=0;j<4;j++)\n    if(A[i][j]==A[i][j+1]&&A[i][j]=='0')\n    {k=1;\n     A[i][j]='+';\n     A[i][j+1]='+';\n     break;\n    }\n    if(k==1)\n        break;\n\n    }\nif(k==1)\n{\nprintf(\"YES\\n\");\nfor(i=0;i<n;i++)\n{for(j=0;j<5;j++)\n    {printf(\"%c\",A[i][j]);}\nprintf(\"\\n\");}\n}\nelse\nprintf(\"NO\\n\");\nreturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,j,k=0;\n    scanf(\"%d\",&n);\n    char A[n][5];\n    for(i=0;i<n;i++)\n    scanf(\"%s\",A[i]);\n    for(i=0;i<n;i++)\n    {\n    for(j=0;j<4;j++)\n    if(A[i][j]==A[i][j+1]&&A[i][j]=='O')\n    {k=1;\n     A[i][j]='+';\n     A[i][j+1]='+';\n     break;\n    }\n    if(k==1)\n        break;\n\n    }\nif(k==1)\n{\nprintf(\"YES\\n\");\nfor(i=0;i<n;i++)\n{for(j=0;j<5;j++)\n    {printf(\"%c\",A[i][j]);}\nprintf(\"\\n\");}\n}\nelse\nprintf(\"NO\\n\");\nreturn 0;\n\n}\n"}
