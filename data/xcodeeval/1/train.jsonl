{"similarity_score": 0.15335463258785942, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "420b671a97ad76dea4dc41b8712a85e9", "bug_code_uid": "2c2929161f5a7b910f52f41c337dd7aa", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "ef575f1bf975aa0a29e52d538282c9f3", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nvoid insertSort(int* a, int size)\n{\n    int i, j, tmp;\n    for (i = 1; i < size; ++i)\n    {\n        tmp = a[i];\n        for (j = i - 1; j >= 0 && a[j] < tmp; --j)\n            a[j + 1] = a[j];\n        a[j + 1] = tmp;\n    }\n}\nint check(int* a,int* b,int size)\n{\n    int i;\n    for(i=0;i<size;i++)\n    if (a[i]!=b[i]) return (a[i]);\n    return a[i];\n}\nint main()\n{\n    int i,n,o1,o2;\n    scanf(\"%d\",&n);\n    int a[n],b[n-1];\n    for (i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    insertSort(a,n);\n    puts(\"First\");\n    for (i=0;i<n-1;i++)\n        scanf(\"%d\",&b[i]);\n    insertSort(b,n-1);\n    puts(\"Sec1\");\n    o1=check(a,b,n);\n    puts(\"Sec2\");\n    for (i=0;i<n-2;i++)\n        scanf(\"%d\",&a[i]);\n    insertSort(a,n-2);\n    puts(\"Thir1\");\n    o2=check(b,a,n-2);\n    puts(\"Thir2\");\n    printf(\"%d\\n%d\",o1,o2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,x;\n    __int64 a=0,b=0,c=0;\n    scanf(\"%d\",&n);\n    for (i=0; i<n; i++)\n    {\n        scanf(\"%d\",&x);\n        a+=x;\n    }\n    for (i=0; i<n-1; i++)\n    {\n        scanf(\"%d\",&x);\n        b+=x;\n    }\n    for (i=0; i<n-2; i++)\n    {\n        scanf(\"%d\",&x);\n        c+=x;\n\n    }\n    printf(\"%I64d\\n%I64d\",a-b,b-c);\n    return 0;\n}\n"}
{"similarity_score": 0.6480331262939959, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6466e6067118d9032257ebbe41ffb019", "bug_code_uid": "f383007a85742d1ff7581aa8a5518ccd", "src_uid": "a24aac9152417527d43b9b422e3d2303", "apr_id": "398b739dc6167613792b73bfba384bd9", "difficulty": 1600, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    long long int x,y;\r\n    for(long long int i=0;i<t;i++){\r\n        scanf(\"%lld %lld\",&x,&y);\r\n        if(x==y){\r\n            printf(\"%lld\\n\",x);\r\n        }\r\n        else if(x<y){\r\n            for(long long int i=1;i<y;i++){\r\n                if(i%x==y%i){\r\n                    printf(\"%lld\\n\",i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            printf(\"%lld\\n\",x+y);\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    long long int x,y;\r\n    for(long long int i=0;i<t;i++){\r\n        scanf(\"%lld %lld\",&x,&y);\r\n        if(x==y){\r\n            printf(\"%lld\\n\",x);\r\n        }\r\n        else if(x<y){\r\n            printf(\"%lld\\n\",y-((y%x)/2));\r\n        }\r\n        else{\r\n            printf(\"%lld\\n\",x+y);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9794238683127572, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "008e0dcea49288ec6038cfa645748f23", "bug_code_uid": "001409b514bca53b7d7a94c103ba2c94", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "21d4c9e0495f6bb4fb19e6c0b02038f3", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,count_1=0,count_0=0,i;\n    char c;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        c = getchar();\n        if(c=='1')\n            count_1++;\n        else\n            count_0++;\n    }\n    if(count_1>=count_0)\n        printf(\"%d\",count_1-count_0);\n    else\n        printf(\"%d\",count_0-count_1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,count_1=0,count_0=0,i;\n    char c;\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        c = getchar();\n        if(c=='1')\n            count_1++;\n        else\n            count_0++;\n    }\n    if(count_1>=count_0)\n        printf(\"%d\",count_1-count_0);\n    else\n        printf(\"%d\",count_0-count_1);\n    return 0;\n}\n"}
{"similarity_score": 0.42874845105328374, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "2872ef5334be6778041b0b3df8a97e76", "bug_code_uid": "895965148965180928ecb768a95f9ae2", "src_uid": "c3f080681e3da5e1290ef935ff91f364", "apr_id": "48c7be8a9e67f9de1bc171da6a78d055", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint c[1000], a[1000], n, m ,i, j, count=0,i ,j;\n\tscanf(\"%d %d\",&n,&m);\n\tfor (i=0; i<n; i++) {\n\t\tscanf(\"%d\",&c[i]);\n\t}\n\tfor (j=0; j<m; j++) {\n\t\tscanf(\"%d\",&a[j]);\n\t}\n\tfor (j=0; j<n; j++) {\n\t\tfor (i=0; i<m; i++) {\n\t\t\tif (a[j] >= c[i]) {\n\t\t\t\tcount++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse {\n\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tif (count == 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t\tprintf(\"%d\\n\",count);\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint c[1000], a[1000], n, m, i, j, count = 0;\n\tscanf(\"%d %d\", &n, &m);\n\tif (n >= 1 && m <= 1000)\n\t{\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &c[i]);\n\t\t}\n\t\tfor (j = 0; j < m; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t}\n\t\tj=0;\n\t\t\tfor (i = 0; i < n; i++)\n\t\t\t{\n\t\t\t\tif (a[j] >= c[i])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\tcontinue;\n\t\t}\n\t}\n\t printf(\"%d\\n\", count);\n\n\treturn 0;\n}"}
{"similarity_score": 0.35765379113018597, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "898ec0ea39514c196f68c97c7c731aec", "bug_code_uid": "a11b8a20ec934114473c945a3420e69e", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "a73604d9030e8fc15403aed6e1052f02", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int ar[3][3];\n    int n,i,j,sum=0;\n\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<3;j++)\n        {\n            scanf(\"%d\",&ar[i][j]);\n        }\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<3;j++)\n        {\n            sum=sum+ar[i][j];\n        }\n\n    }\n\n    if(sum==0)\n        printf(\"YES\");\n\n    else\n        printf(\"NO\");\n\n\n\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a,b,c;\n    int x=0,y=0,z=0;\n\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&a,&b,&c);\n        x=x+a;\n        y=y+b;\n        z=z+c;\n    }\n    if(x==0 && y==0 && z==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.7503267973856209, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7c556b74fb4d3f51fc4803cbda50ec13", "bug_code_uid": "43710cad64bb1d6f4e455542dbd7f8e2", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "23b80a1221932f17710667e053806c45", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i, t;\n    long long sum, n, ara[30];\n\n    ara[0] = 1;\n    for(i = 1; i <= 29; i++) {\n        ara[i] = ara[i - 1] * 2;\n    }\n\n    scanf(\"%d\", &t);\n\n    while(t--) {\n        scanf(\"%I64d\", &n);\n        for(i = 0; ara[i] <= n; i++);\n        sum = n * (n + 1) / 2 - 2 * (ara[i] - 1);\n        printf(\"%I64d\\n\", sum);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i, t;\n    long long n, sum, ara[32]; \n    \n    ara[0] = 1;\n    for(i = 1; i <= 30; i++) {\n        ara[i] = ara[i - 1] * 2;\n    }\n    \n    scanf(\"%d\", &t);\n    while(t--) {\n        scanf(\"%I64d\", &n);\n        for(i = 0; ara[i] <= n; i++);\n        sum = (n * (n + 1)) / 2 - 2 * (ara[i] - 1);\n        printf(\"%I64d\\n\", sum);\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.8837209302325582, "equal_cnt": 12, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "42ba6127c455859580e909d9fa3dc707", "bug_code_uid": "e97806f3215298ccbd8a00c15468e8ba", "src_uid": "bf21c4809cd10904f05d531dd7af4ab5", "apr_id": "ac00a66f2607477064b38a00ee775bdb", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nvoid solve() {\r\n   int k, x;\r\n   scanf(\"%d %d\", &k, &x);\r\n   int ans = 0;\r\n   int l=1, r = 2*k -1;\r\n   int total = (k*(k+1)) - k;\r\n   while (l<=r) {\r\n      int mid = (l+r)/2;\r\n      int req = 0;\r\n      if (mid > k) {\r\n         int diff = mid - k;\r\n         int val = k - diff;\r\n         req = total - (val * (val +1))/2;\r\n      }\r\n      else {\r\n         req = (mid*(mid-1))/2;\r\n      }\r\n      if (x > req) {\r\n         ans = mid;\r\n         l = mid + 1;\r\n      }\r\n      else {\r\n         r = mid-1;\r\n      }\r\n   }\r\n   printf(\"%d\\n\", ans);\r\n}\r\n\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\", &t);\r\n   while (t--)  {\r\n      solve();\r\n   }\r\n   return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nvoid solve() {\r\n   unsigned long long k, x;\r\n   scanf(\"%llu %llu\", &k, &x);\r\n   unsigned long long ans = 0;\r\n   unsigned long long l=1, r = 2*k -1;\r\n   unsigned long long total = (k*(k+1)) - k;\r\n   while (l<=r) {\r\n      unsigned long long mid = (l+r)/2;\r\n      unsigned long long req = 0;\r\n      if (mid > k) {\r\n         unsigned long long diff = mid - k;\r\n         unsigned long long val = k - diff;\r\n         req = total - (val * (val +1))/2;\r\n      }\r\n      else {\r\n         req = (mid*(mid-1))/2;\r\n      }\r\n      if (x > req) {\r\n         ans = mid;\r\n         l = mid + 1;\r\n      }\r\n      else {\r\n         r = mid-1;\r\n      }\r\n   }\r\n   printf(\"%llu\\n\", ans);\r\n}\r\n\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\", &t);\r\n   while (t--)  {\r\n      solve();\r\n   }\r\n   return 0;\r\n}\r\n"}
{"similarity_score": 0.5184331797235023, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "812924559d5f4de996a4717c9f4b3a91", "bug_code_uid": "11f4dbf0f8cd1f5004ba591b382fb8e3", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "1c11675487e4fc29b41c1817a608102e", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    long long int n,i,c=0,j,temp;\n    scanf(\"%lld\",&n);\n    char s[n];\n    scanf(\"%s\",&s);\n\n    int l = strlen(s);\n    for(i=0; i<l-1; i++)\n    {\n        for(j=i+1; j<l; j++)\n        {\n            if(s[i]>s[j])\n            {\n                temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n\n    }\n    for(i=0;i<l;i++){\n        if(s[i]=='z')\n            printf(\"0 \");\n        else if(s[i]=='n')\n            printf(\"1 \");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long long int n,i,c=0,d=0,j,temp;\n    scanf(\"%lld\",&n);\n    char s[n];\n    scanf(\"%s\",&s);\n\n    int l = strlen(s);\n\n    for(i=0;i<l;i++){\n        if(s[i]=='z')\n            c++;\n        else if(s[i]=='n')\n            d++;\n    }\n\n    while(d--)\n        printf(\"1 \");\n\n     while(c--)\n        printf(\"0 \");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9068702290076336, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7c4acfd35810eb515ce4c638df4d7cf4", "bug_code_uid": "361187a705162d346b0e53809f147452", "src_uid": "a2085c2d21b2dbe4cc27a15fa4a1ec4f", "apr_id": "e6cc18c1c376b8107ef759a393ca1c7d", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t=0;\n    int sum=0;\n    int n;\n    scanf(\"%d\",&n);\n    int m;\n    scanf(\"%d\",&m);\n    int i;\n    int a[10];\n\n    for(i=0; i<n; i++)\n    {\n    \t   scanf(\"%d\",&a[i]);\n        t= sum / m;\n        sum = (sum-(t*m)) + a[i];\n        t = sum/m;\n        printf(\"%d \",t);\n\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,n,m,sum=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    int a[n];\n\n    for(i=0; i<n; i++)\n    {\n    \t   scanf(\"%d\",&a[i]);\n        t= sum / m;\n        sum = (sum-(t*m)) + a[i];\n        t = sum/m;\n        printf(\"%d \",t);\n\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.9196337741607324, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "29e625c79a64328000a6e242f710a2a6", "bug_code_uid": "968a3cfa316320313cf2ea2391b47b79", "src_uid": "b6ac7c30b7efdc7206dbbad5cfb86db7", "apr_id": "533e94649553117c565ee2d460263639", "difficulty": 1500, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[200005];\nbool flag[200005];\nint main()\n{\n\tint n;\n\tint i;\n\tint t,sum=0,count=0;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\n\t\ta[i]=sum;\n\t\tif(sum>0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\ta[1]=n-count;\n\tflag[a[1]]=1;\n\tfor(i=2;i<=n;i++)\n\t{\n\t\ta[i]+=a[1];\n\t\tflag[a[i]]=1;\n\t}\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(!flag[i])\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint a[200005];\nint flag[200005];\nint main()\n{\n\tint n;\n\tint i;\n\tint t,sum=0,count=0;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\n\t\ta[i]=sum;\n\t\tif(abs(sum)>n)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(sum>0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\ta[1]=n-count;\n\tflag[a[1]]=1;\n\tfor(i=2;i<=n;i++)\n\t{\n\t\ta[i]+=a[1];\n\t\tflag[a[i]]=1;\n\t}\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(!flag[i])\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.26332288401253917, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "738251994bc304e623213930b26a37a0", "bug_code_uid": "8bb3f5656819e89b676a49e5eb2b05ff", "src_uid": "bc6b8fda79c257e6c4e280d7929ed8a1", "apr_id": "13c4e553ae40cee45821a43cbff775fb", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,j=0,sum=0,sum1=0;\n\tscanf(\"%d%d\",&n,&k);\n\tint ar[n];\n\tscanf(\"%d\",&ar[0]);\n\tsum+=ar[0];\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&ar[i]);\n\t\tsum1+=ar[i]*ar[i-1];\n\t\tsum+=ar[i];\n\t}\n\tsum1+=ar[0]*ar[n-1];\n\t//printf(\"Sum1 is %d\\n\",sum1);\n\t//printf(\"Sum is %d\\n\",sum);\n\tint ar2[k];\n\tfor(i=0;i<k;i++)\n\t{\n\t\tscanf(\"%d\",&ar2[i]);\n\t}\n\tfor(i=0;i<k;i++)\n\t{\n\t\tj=ar2[i]-1;\n\t\tif(ar2[i]==1)\n\t\t{\n\t\t\tsum1+=ar[j]*(sum-ar[j]-ar[j+1]-ar[n-1]);\n\t\t\t//printf(\"if\\n\");\n\t\t\tsum-=ar[j];\n\t\t}\n\t\telse if(ar2[i]==n)\n\t\t{\n\t\t\tsum1+=ar[j]*(sum-ar[j]-ar[j-1]-ar[0]);\n\t\t\t//printf(\"else if\\n\");\n\t\t\tsum-=ar[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum1+=ar[j]*(sum-ar[j]-ar[j-1]-ar[j+1]);\n\t\t\t//printf(\"else\\n\");\n\t\t\tsum-=ar[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",sum1);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,j=0;\n\tlong long int sum=0,sum1=0;\n\tscanf(\"%d%d\",&n,&k);\n\tint ar[n];\n\tint bckt[100001]={0};\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&ar[i]);\n\t\tsum+=ar[i];\n\t}\n\tint ar2[k];\n\tfor(i=0;i<k;i++)\n\t{\n\t\tscanf(\"%d\",&ar2[i]);\n\t\tbckt[ar2[i]]=1;\n\t}\n\tfor(i=0;i<k;i++)\n\t{\n\t\tsum1+=ar[ar2[i]]*(sum-ar[ar2[i]]);\n\t\tsum-=ar[ar2[i]];\n\t}\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(bckt[i]!=1 && bckt[i+1]!=1)\n\t\t{\n\t\t\tsum1+=ar[i]*ar[i+1];\n\t\t}\n\t}\n\tif(bckt[1]!=1 && bckt[n]!=1)\n\t{\n\t\tsum1+=ar[1]*ar[n];\n\t}\n\tprintf(\"%lld\\n\",sum1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8680555555555556, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b19b4d6ace897af9fb2dca0123e4b6cc", "bug_code_uid": "9b1418d4997c00e6215bd9d6b17ee7d9", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "4de7856fff7feace5bc8fac4d33098f6", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main(){\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long n,s1=0,s2=0,a;\r\n        scanf(\"%lld\",&n);\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%lld\",&a);\r\n            if(s1>=0){\r\n                s1+=a;\r\n            }else{\r\n                s2+=a;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",abs(s1+s2));\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long n,s1=0,s2=0,a;\r\n        scanf(\"%lld\",&n);\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%lld\",&a);\r\n            if(s1>=0){\r\n                s1+=a;\r\n            }else{\r\n                s2+=a;\r\n            }\r\n        }\r\n        long long s = s1 + s2;\r\n        if (s< 0){\r\n            s = -s;\r\n        }\r\n        printf(\"%lld\\n\",s);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8132295719844358, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "3adb0e96c68425cca1057b49da656a5e", "bug_code_uid": "b43595e0e697b524287909504756d187", "src_uid": "2d4ad39d42b349765435b351897403da", "apr_id": "bc012118174e6a3742b3b3ae1c9f7e04", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int a,b,c;\n    double r,s;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    r=(-b+sqrt(b*b-4*a*c))/2*a;\n    s=(-b-sqrt(b*b-4*a*c))/2*a;\n    if(r>s)\n    printf(\"%lf\\n%lf\",r,s);\n    else\n    printf(\"%lf\\n%lf\",s,r);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    double r,a,b,c,s;\n    scanf(\"%lf %lf %lf\",&a,&b,&c);\n    r=(-b+sqrt((b*b)-(4*a*c)))/(2*a);\n    s=(-b-sqrt((b*b)-(4*a*c)))/(2*a);\n    if(r>s)\n    printf(\"%lf\\n%lf\",r,s);\n    else\n    printf(\"%lf\\n%lf\",s,r);\n}\n"}
{"similarity_score": 0.9490022172949002, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "399e0f85a5d6ed2ff22a2ca1179fad23", "bug_code_uid": "395596e517d2527930f9fcb7089f2046", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "007ac7c1e56bead43b35acd8856dfb51", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n],h[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&a[i],&h[i]);\n    int r=0,c=2;\n    for(i=1;i<n-1;i++)\n    {\n        if(a[i]-(a[i-1]+r)>h[i]){\n            c++;\n            r=0;\n        }\n        else if(a[i]+h[i]<a[i+1])\n        {\n            r=(a[i]+h[i])-a[i];\n            c++;\n\n        }\n        else\n            r=0;\n    }\n    printf(\"%d\\n\",c);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n],h[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&a[i],&h[i]);\n    int r=0,c;\n    if(n==1)\n        c=1;\n    else\n        c=2;\n    for(i=1;i<n-1;i++)\n    {\n        if(a[i]-(a[i-1]+r)>h[i]){\n            c++;\n            r=0;\n        }\n        else if(a[i]+h[i]<a[i+1])\n        {\n            r=(a[i]+h[i])-a[i];\n            c++;\n\n        }\n        else\n            r=0;\n    }\n    printf(\"%d\\n\",c);\n}\n"}
{"similarity_score": 0.9947643979057592, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c7cf4df27bf2fef15b50f45dcce0c1c5", "bug_code_uid": "a613af484c80cd9ebe6e553531eb84d4", "src_uid": "8c26daa1eed2078af3b32737da0a0f84", "apr_id": "78a9740a3a18069ee93b51895896770b", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "char*p,s[1<<20];main(){for(gets(p=s);*p;p++)*p>32||p[1]>96?putchar(*p),ispunct(*p)?*p--=32:0:0;", "fixed": "char*p,s[1<<20];main(){for(gets(p=s);*p;p++)*p>32||p[1]>96?putchar(*p),ispunct(*p)?*p--=32:0:0;}"}
{"similarity_score": 0.9960159362549801, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a72b19c3d6bd0b7b85db5e7bf2f094db", "bug_code_uid": "39458f225983aba44ade89a720a7c0fa", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "cc570ef549a1050cb27a29f72dfd772c", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,m,i;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(i = 0;i < n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n        int sum = 0;\r\n        int input;\r\n        scanf(\"%d\",&m);\r\n        for( i = 0;i < m;i++){\r\n            scanf(\"%d\",&input);\r\n            sum = sum+input;\r\n        }\r\n        //printf(\"%d\\n\",sum%n);\r\n        int res = sum%n;\r\n        printf(\"%d\\n\",arr[res]);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,m,i;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(i = 0;i < n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n        int sum = 0;\r\n        int input;\r\n        scanf(\"%d\",&m);\r\n        for( i = 0;i < m;i++){\r\n            scanf(\"%d\",&input);\r\n            sum = (sum+input)%n;\r\n        }\r\n        //printf(\"%d\\n\",sum%n);\r\n        int res = sum%n;\r\n        printf(\"%d\\n\",arr[res]);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.976911976911977, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8abef713c9bb11506a8d799cad8f8baf", "bug_code_uid": "5e453aa62e1e4fcc3a3eb4715bfa6842", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "c9e2eeedd45854ef001cad6ac2c4335b", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() \n{\n    int i,t,l,k=0;\n    scanf(\"%d\",&t);\n    int p[t],n[t],z[t];\n    int cn=0,cp=0,cz=0;\n    while(t--)\n    {\n        scanf(\"%d\",&l);\n        if(l<0)\n            n[cn++]=l;\n        else if(l>0)\n            p[cp++]=l;\n        else\n            z[cz++]=l;\n    }\n    if(cp==0)\n    {\n        cn--;\n        p[cp++]=n[cn--];\n        p[cp++]=n[cn];\n        k=1;\n    }\n    if(cn%2==0)\n    {\n        cn+=k;\n        cn--;\n        z[cz++]=n[cn];\n    }\n    printf(\"%d\",cn);\n    for(i=0;i<cn;i++)\n        printf(\" %d\",n[i]);\n    printf(\"\\n%d\",cp);    \n    for(i=0;i<cp;i++)\n        printf(\" %d\",p[i]);\n    printf(\"\\n%d\",cz);    \n    for(i=0;i<cz;i++)\n        printf(\" %d\",z[i]);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() \n{\n    int i,t,l;\n    scanf(\"%d\",&t);\n    int p[t],n[t],z[t];\n    int cn=0,cp=0,cz=0;\n    while(t--)\n    {\n        scanf(\"%d\",&l);\n        if(l<0)\n            n[cn++]=l;\n        else if(l>0)\n            p[cp++]=l;\n        else\n            z[cz++]=l;\n    }\n    if(cp==0)\n    {\n        cn--;\n        p[cp++]=n[cn--];\n        p[cp++]=n[cn];\n    }\n    if(cn%2==0)\n    {\n        cn--;\n        z[cz++]=n[cn];\n    }\n    printf(\"%d\",cn);\n    for(i=0;i<cn;i++)\n        printf(\" %d\",n[i]);\n    printf(\"\\n%d\",cp);    \n    for(i=0;i<cp;i++)\n        printf(\" %d\",p[i]);\n    printf(\"\\n%d\",cz);    \n    for(i=0;i<cz;i++)\n        printf(\" %d\",z[i]);\n\treturn 0;\n}"}
{"similarity_score": 0.989010989010989, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "871f83caf995ceedaf27704bbda339a4", "bug_code_uid": "e730ad95e146c408086ab8755c17aa77", "src_uid": "7bb088ce5e4e2101221c706ff87841e4", "apr_id": "fbc5c6f52ae3b3d6ebc36f7e53080037", "difficulty": 1200, "tags": ["implementation", "graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint A[11111],Q[11111],n,j,k,s;\nint main(){\n   scanf(\"%d %d\",&n,&s);\n   while(s--){\n      scanf(\"%d %d\",&j,&k);\n      A[j]++; A[k]++;\n   }\n   for(j=1;j<=n;j++) Q[A[j]]++;\n\n   if(Q[2] == n-2 && Q[1] == 2)        printf(\"bus \");\n   else if(Q[n-1] == 1 && Q[1] == n-1) printf(\"star \");\n   else if(Q[2] == n)                  printf(\"ring \");\n   else                                printf(\"unknown \");\n\n   printf(\"topology\");\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint A[111111],Q[111111],n,j,k,s;\nint main(){\n   scanf(\"%d %d\",&n,&s);\n   while(s--){\n      scanf(\"%d %d\",&j,&k);\n      A[j]++; A[k]++;\n   }\n   for(j=1;j<=n;j++) Q[A[j]]++;\n\n   if(Q[2] == n-2 && Q[1] == 2)        printf(\"bus \");\n   else if(Q[n-1] == 1 && Q[1] == n-1) printf(\"star \");\n   else if(Q[2] == n)                  printf(\"ring \");\n   else                                printf(\"unknown \");\n\n   printf(\"topology\");\n   return 0;\n}\n"}
{"similarity_score": 0.9731404958677686, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4e1bc73982a0caf00e49401a9af94913", "bug_code_uid": "520bfa0d8f5976f5fa3b57afb4ffc068", "src_uid": "07ae50199dd94f72313ee7675fefadb7", "apr_id": "76614237940bf862eca71d2f0209ca85", "difficulty": 2000, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, m, i, max1, max2, max3, a[100000];\n\tscanf(\"%d\", &m);\n\tn = 0;\n\tmax1 = -1;\n\tmax2 = -1;\n\tmax3 = -1;\n\twhile (m--) {\n\t\tfprintf(stderr, \"%d %d %d\\n\", max1, max2, max3);\n\t\tscanf(\"%d\", &i);\n\t\tif (i == 0) {\n\t\t\tfor (i = 0; i < n; ++i)\n\t\t\t\tif (i == max1)\n\t\t\t\t\tputs(\"pushStack\");\n\t\t\t\telse if (i == max2)\n\t\t\t\t\tputs(\"pushQueue\");\n\t\t\t\telse if (i == max3)\n\t\t\t\t\tputs(\"pushBack\");\n\t\t\t\telse\n\t\t\t\t\tputs(\"pushFront\");\n\t\t\tif (n == 0)\n\t\t\t\tputs(\"0\");\n\t\t\telse if (n == 1)\n\t\t\t\tputs(\"1 popStack\");\n\t\t\telse if (n == 2)\n\t\t\t\tputs(\"2 popStack popQueue\");\n\t\t\telse\n\t\t\t\tputs(\"3 popStack popQueue popBack\");\n\t\t\tn = 0;\n\t\t\tmax1 = -1;\n\t\t\tmax2 = -1;\n\t\t\tmax3 = -1;\n\t\t} else {\n\t\t\ta[n] = i;\n\t\t\tif (max1 == -1 || a[n] > a[max1]) {\n\t\t\t\tmax3 = max2;\n\t\t\t\tmax2 = max1;\n\t\t\t\tmax1 = n;\n\t\t\t}\n\t\t\telse if (max2 == -1 || a[n] > a[max2]) {\n\t\t\t\tmax3 = max2;\n\t\t\t\tmax2 = n;\n\t\t\t}\n\t\t\telse if (max3 == -1 || a[n] > a[max3])\n\t\t\t\tmax3 = n;\n\t\t\t++n;\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, m, i, max1, max2, max3, a[100000];\n\tscanf(\"%d\", &m);\n\tn = 0;\n\tmax1 = -1;\n\tmax2 = -1;\n\tmax3 = -1;\n\twhile (m--) {\n\t\tfprintf(stderr, \"%d %d %d\\n\", max1, max2, max3);\n\t\tscanf(\"%d\", &i);\n\t\tif (i == 0) {\n\t\t\tfor (i = 0; i < n; ++i)\n\t\t\t\tif (i == max1)\n\t\t\t\t\tputs(\"pushStack\");\n\t\t\t\telse if (i == max2)\n\t\t\t\t\tputs(\"pushQueue\");\n\t\t\t\telse if (i == max3)\n\t\t\t\t\tputs(\"pushBack\");\n\t\t\t\telse\n\t\t\t\t\tputs(\"pushFront\");\n\t\t\tif (n == 0)\n\t\t\t\tputs(\"0\");\n\t\t\telse if (n == 1)\n\t\t\t\tputs(\"1 popStack\");\n\t\t\telse if (n == 2)\n\t\t\t\tputs(\"2 popStack popQueue\");\n\t\t\telse\n\t\t\t\tputs(\"3 popStack popQueue popBack\");\n\t\t\tn = 0;\n\t\t\tmax1 = -1;\n\t\t\tmax2 = -1;\n\t\t\tmax3 = -1;\n\t\t} else {\n\t\t\ta[n] = i;\n\t\t\tif (max1 == -1 || a[n] > a[max1]) {\n\t\t\t\tmax3 = max2;\n\t\t\t\tmax2 = max1;\n\t\t\t\tmax1 = n;\n\t\t\t}\n\t\t\telse if (max2 == -1 || a[n] > a[max2]) {\n\t\t\t\tmax3 = max2;\n\t\t\t\tmax2 = n;\n\t\t\t}\n\t\t\telse if (max3 == -1 || a[n] > a[max3])\n\t\t\t\tmax3 = n;\n\t\t\t++n;\n\t\t}\n\t}\n\tfor (i = 0; i < n; ++i)\n\t\tputs(\"pushFront\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9815242494226328, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9c540a42c4507deeed2bf3fcabc37d6f", "bug_code_uid": "e3500a6d4181e419ab0b408ba73490b9", "src_uid": "c547e32f114546638973e0f0dd16d1a4", "apr_id": "77888ab693c430656b00800fb2d324eb", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\n#define N 100001\n\nint f[33];\nint n;\n\nint one_count(int a)\n{\n\tint cnt =0;\n\twhile(a)\n\t{\n\t\tcnt += (a&0x1);\n\t\ta >>=1;\n\t}\n\treturn cnt;\n}\n\nint main()\n{\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tint i;\n\t\tfor(i =0;i < 33; i++)f[i]=0;\n\t\tfor(i =0;i < n;i++)\n\t\t{\n\t\t\tint a;\n\t\t\tscanf(\"%d\",&a);\n\t\t\tf[one_count(a)]++;\n\t\t}\n\t\tlong long int cnt =0;\n\t\tfor(i=0;i<33;i++)\n\t\t\tcnt += f[i]*(f[i]-1)/2;\n\n\t\tprintf(\"%lld\\n\",cnt);\n\t}\n\treturn 0;\n}\n\n", "fixed": "\n#include <stdio.h>\n\n#define N 100001\n\nlong long f[33];\nint n;\n\nint one_count(int a)\n{\n\tint cnt =0;\n\twhile(a)\n\t{\n\t\tcnt += (a&0x1);\n\t\ta >>=1;\n\t}\n\treturn cnt;\n}\n\nint main()\n{\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tint i;\n\t\tfor(i =0;i < 33; i++)f[i]=0;\n\t\tfor(i =0;i < n;i++)\n\t\t{\n\t\t\tint a;\n\t\t\tscanf(\"%d\",&a);\n\t\t\tf[one_count(a)]++;\n\t\t}\n\t\tlong long cnt =0;\n\t\tfor(i=0;i<33;i++)\n\t\t\tcnt += f[i]*(f[i]-1)/2;\n\n\t\tprintf(\"%lld\\n\",cnt);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9959016393442623, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "94730e48fb4498df4db0c1bcb977c4a3", "bug_code_uid": "2b72715809a23e8fb96081ff5f05ef65", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "2f71239807c8780f88d2bfc8993fb95a", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint n,x,y,*xi,i,sum=0,a;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&x);\n\txi = (int *)calloc(n,sizeof(int));\n\t for(i=0;i<x;i++)\n\t {\n\t \tscanf(\"%d\",&a);\n\t    xi[a-1] = 1;\n\t }\n\tscanf(\"%d\",&y);\n\t\n\t for(i=0;i<y;i++)\n\t {\n\t \tscanf(\"%d\",&a);\n\t \txi[a-1] = 1;\n\t }\n\t\n\t/*\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum += xi[i];\n\t\t}*/\n\t\t\n\t   if(n == sum)\n       \tprintf(\"I become the guy.\\n\");\n       else\n       printf(\"Oh, my keyboard!\\n\");\n       \n\t   free(xi);\n       return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint n,x,y,*xi,i,sum=0,a;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&x);\n\txi = (int *)calloc(n,sizeof(int));\n\t for(i=0;i<x;i++)\n\t {\n\t \tscanf(\"%d\",&a);\n\t    xi[a-1] = 1;\n\t }\n\tscanf(\"%d\",&y);\n\t\n\t for(i=0;i<y;i++)\n\t {\n\t \tscanf(\"%d\",&a);\n\t \txi[a-1] = 1;\n\t }\n\t\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum += xi[i];\n\t\t}\n\t\t\n\t   if(n == sum)\n       \tprintf(\"I become the guy.\\n\");\n       else\n       printf(\"Oh, my keyboard!\\n\");\n       \n\t   free(xi);\n       return 0;\n}\n"}
{"similarity_score": 0.884453781512605, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "11741a076a3e8135bde38cae82d29f72", "bug_code_uid": "2bd47a3e0b717831e2b6d8231a3ad65a", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "9921fcbd896dbae53250a941b03d9a3f", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,count=0,sum;\n    int j=0,k=0;\n    scanf(\"%d\",&n);\n    int a[1000];\n    int b[1000],c[1000];\n    for(int i=0;i<n;i++)\n    {\n            scanf(\"%d\",&a[i]);\n    }\n    for(int i=0;i<n;i++)\n    {\n            if(a[i]==5)\n            {\n                       b[j]=5;\n                       j++;\n            }\n            else\n            {\n                c[k]=0;\n                k++;\n            }\n    }\n    sum=0;\n    for(int i=0;i<j;i++)\n    {\n            sum=sum+5;\n    }\n    count=j;\n    while((sum%9)!=0)\n    {\n                     sum=sum-5;\n                     count--;\n    }\n    for(int i=0;i<count;i++)\n    {\n            printf(\"%d\",5);\n    }\n    if(count!=0)\n    {\n    for(int i=0;i<k;i++)\n    {\n            printf(\"%d\",0);\n    }\n    }\n    else\n    { printf(\"0\");\n    }\n    \n    return 0;\n}\n            \n            \n    \n                     \n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,count=0,sum;\n    int j=0,k=0,i=0;\n    scanf(\"%d\",&n);\n    int a[1000];\n    int b[1000],c[1000];\n    if(n==0)\n    {printf(\"-1\");\n    return 0;}\n    for(i=0;i<n;i++)\n    {\n            scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n            if(a[i]==5)\n            {\n                       b[j]=5;\n                       j++;\n            }\n            else\n            {\n                c[k]=0;\n                k++;\n            }\n    }\n    sum=0;\n    for(i=0;i<j;i++)\n    {\n            sum=sum+5;\n    }\n    count=j;\n    if(j==n)\n    {printf(\"-1\");\n    return 0;}\n    if(k==0)\n    {\n            printf(\"-1\");\n            return 0;\n    }\n    while((sum%9)!=0)\n    {\n                     sum=sum-5;\n                     count--;\n    }\n    for(i=0;i<count;i++)\n    {\n            printf(\"%d\",5);\n    }\n    if(count!=0)\n    {\n    for(i=0;i<k;i++)\n    {\n            printf(\"%d\",0);\n    }\n    }\n    else\n    { printf(\"0\");\n    }\n    \n    return 0;\n}\n            \n           "}
{"similarity_score": 0.49794238683127573, "equal_cnt": 17, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "6a540b55b9a9563d42bd81a538d13b19", "bug_code_uid": "cc6c7c2614008582fdafc6731733f0a7", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "8c9820868eff011e05b0b325251f34d5", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n int number_of_errors,errors[1000000],i;\n    int first_array[1000000]={0};\n    int second_array[1000000]={0};\n    int third_array[1000000]={0};\n\nint main()\n{\n\n    scanf(\"%d\",&number_of_errors);\n    for (i=0;i<number_of_errors;i++){\n        scanf(\"%d\",&errors[i]);\n        first_array[errors[i]]++;\n    }\n    for(i=0;i<number_of_errors-1;i++){\n        scanf(\"%d\",&errors[i]);\n        second_array[errors[i]]++;\n    }\n    for(i=0;i<=100000000;i++){\n        if (first_array[i]>=1 && first_array[i]>second_array[i]){\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n    for(i=0;i<number_of_errors-2;i++){\n        scanf(\"%d\",&errors[i]);\n        third_array[errors[i]]++;\n\n    }\n\n    for(i=0;i<=1000000000;i++){\n        if(second_array[i]>=1 && second_array[i]> third_array[i]){\n            printf(\"%d\",i);\n            break;\n        }\n    }\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong long int number_of_errors,errors,i,sum=0,sum2=0;\n\nint main()\n{\n\n    scanf(\"%I64d\",&number_of_errors);\n    for (i=0;i<number_of_errors;i++){\n        scanf(\"%I64d\",&errors);\n        sum=sum+errors;;\n    }\n    for(i=0;i<number_of_errors-1;i++){\n        scanf(\"%I64d\",&errors);\n        sum2=sum2+errors;\n        sum=sum-errors;\n    }\n    printf(\"%I64d\\n\",sum);\n    for(i=0;i<number_of_errors-2;i++){\n        scanf(\"%I64d\",&errors);\n        sum2=sum2-errors;\n\n    }\n    printf(\"%I64d\",sum2);\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9928400954653938, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "553e51199da61e369e858c795b554ca1", "bug_code_uid": "0a72000d88de5b4b3e52820151856e58", "src_uid": "ed75bd272f6d3050426548435423ca92", "apr_id": "b6d2a7368a91c3e9e7188c3d577c1fdc", "difficulty": 1500, "tags": ["combinatorics", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct {\n    int cas1;\n    int cas0;\n} cas;\n\nchar a[200100] = { 0 }, b[200100] = { 0 };\n\n\nint main()\n{\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n    int cnt = 0, aSize = strlen(a), bSize = strlen(b), num = bSize - aSize;\n    cas sz[200100] = { 0 };\n    int one = 0, zero = 0;\n    for (int i = 0; i <= num; i++) {\n        if (b[i] == '1') one++;\n        else zero++;\n    }\n    for (int i = 0, p1 = 0, p2 = num + 1; i < aSize; i++, p1++, p2++) {\n        sz[i].cas0 = zero;\n        sz[i].cas1 = one;\n        if (b[p1] == '1') one--;\n        else zero--;\n        if (b[p2] == '1') one++;\n        else if(b[p2] == '0') zero++;\n    }\n    for (int i = 0; i < aSize; i++) {\n        if (a[i] == '0') cnt += sz[i].cas1;\n        else cnt += sz[i].cas0;\n    }\n    printf(\"%I64d\", cnt);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct {\n    int cas1;\n    int cas0;\n} cas;\n\nchar a[200100] = { 0 }, b[200100] = { 0 };\n\n\nint main()\n{\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n    long long cnt = 0, aSize = strlen(a), bSize = strlen(b), num = bSize - aSize;\n    cas sz[200100] = { 0 };\n    int one = 0, zero = 0;\n    for (int i = 0; i <= num; i++) {\n        if (b[i] == '1') one++;\n        else zero++;\n    }\n    for (int i = 0, p1 = 0, p2 = num + 1; i < aSize; i++, p1++, p2++) {\n        sz[i].cas0 = zero;\n        sz[i].cas1 = one;\n        if (b[p1] == '1') one--;\n        else zero--;\n        if (b[p2] == '1') one++;\n        else if(b[p2] == '0') zero++;\n    }\n    for (int i = 0; i < aSize; i++) {\n        if (a[i] == '0') cnt += sz[i].cas1;\n        else cnt += sz[i].cas0;\n    }\n    printf(\"%I64d\", cnt);\n    return 0;\n}"}
{"similarity_score": 0.8754448398576512, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "0aec25d73c6ab4f2d37cd635f3ad06d2", "bug_code_uid": "97985aea2999181d148cc8b0f2edf67b", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "915e0572481e351f1ef31bafd1596619", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int a,n,i,max=0,j=0,k=0,min=0;\n\tscanf(\"%I64d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%I64d\",&a);\n\t\tif(i==1){\n\t\t\tmax=a;\n\t\t\tmin=a;\n\t\t}\n\t\tif(max<=a){\n\t\t\tif(a==max) j++;\n\t\t\telse j=1;\n\t\t\tmax=a;\n\t\t}\n\t\tif(a<=min){\n\t\t\tif(a==min) k++;\n\t\t\telse k=1;\n\t\t\tmin=a;\n\t\t}\n\t}\n\tif(max==min && n==2)\n\tprintf(\"%I64d 1\\n\",max-min);\n\n\telse printf(\"%I64d %I64d\\n\",max-min,(k)*(j));\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int a,n,i,x,max=0,j=0,k=0,min=0;\n\tscanf(\"%I64d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%I64d\",&a);\n\t\tif(i==1){\n\t\t\tmax=a;\n\t\t\tmin=a;\n\t\t}\n\t\tif(max<=a){\n\t\t\tif(a==max) j++;\n\t\t\telse j=1;\n\t\t\tmax=a;\n\t\t}\n\t\tif(a<=min){\n\t\t\tif(a==min) k++;\n\t\t\telse k=1;\n\t\t\tmin=a;\n\t\t}\n\t\t\n\t}\n\tif(max==min){\n\t\tn=n-1;\n\t\tx=n*(n+1)/2;\n\t\tprintf(\"%I64d %I64d\\n\",max-min,x);\n\t}\n\telse \n\tprintf(\"%I64d %I64d\\n\",max-min,k*j);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9972489683631361, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aad8f988ef2afb8ab14974fe0545abfa", "bug_code_uid": "99cd8b3a9eaed7ca4062c38a546aeb7c", "src_uid": "c408b1d198c7c88fc635936d960c962a", "apr_id": "1ac1da8cb70adf8ac3a41ce9479c9402", "difficulty": 1400, "tags": ["games", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int n,m,i,j,k;\n    long long tom[55],ban[55],max=-1e17;\n    scanf(\"%d%d\",&n,&m);\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&tom[i]);\n    }\n    for (i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&ban[i]);\n    }\n    for (i=0;i<n;i++)\n    {\n        for (j=0;j<m;j++)\n        {\n            if (tom[i]*ban[j]>max)\n            {\n              max = tom[i]*ban[j];\n              k = i;\n            }\n        }\n    }\n    max = -1e17;\n    for (i=0;i<n;i++)\n    {\n        if (i==k)\n            continue;\n        for (j=0;j<m;j++)\n        {\n            if (tom[i]*ban[j]>max)\n            {\n              max = tom[i]*ban[j];\n            }\n        }\n    }\n    printf(\"%I64d\",max);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int n,m,i,j,k;\n    long long tom[55],ban[55],max=-1e18;\n    scanf(\"%d%d\",&n,&m);\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&tom[i]);\n    }\n    for (i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&ban[i]);\n    }\n    for (i=0;i<n;i++)\n    {\n        for (j=0;j<m;j++)\n        {\n            if (tom[i]*ban[j]>max)\n            {\n              max = tom[i]*ban[j];\n              k = i;\n            }\n        }\n    }\n    max = -1e18;\n    for (i=0;i<n;i++)\n    {\n        if (i==k)\n            continue;\n        for (j=0;j<m;j++)\n        {\n            if (tom[i]*ban[j]>max)\n            {\n              max = tom[i]*ban[j];\n            }\n        }\n    }\n    printf(\"%I64d\",max);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9819376026272578, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b38ca20de33380d4baaafd005f014641", "bug_code_uid": "4b9d44e80e9315d20cd33adb1829bf16", "src_uid": "f3dde329830d8c479b3dab9d5df8baf5", "apr_id": "05f31fc1b0ec04b13432fa8723faf19e", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,i,t,a[21],*f=a+10;\nlong long ans;\n\nint main(void) {\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; ++i) {\n\t\tscanf(\"%d\", &t);\n\t\t++f[t];\n\t}\n\tans=f[0]*(f[0]-1)/2;\n\tfor (i=1; i<=10; ++i) {\n\t\tans+=(long long)f[i]*f[-i];\n\t}\n\tprintf(\"%I64d\\n\", ans);\n\texit(EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,i,t,a[21],*f=a+10;\nlong long ans;\n\nint main(void) {\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; ++i) {\n\t\tscanf(\"%d\", &t);\n\t\t++f[t];\n\t}\n\tans=(long long)f[0]*(f[0]-1)/2;\n\tfor (i=1; i<=10; ++i) {\n\t\tans+=(long long)f[i]*f[-i];\n\t}\n\tprintf(\"%I64d\\n\", ans);\n\texit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.8367346938775511, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f676320cc1bb3fbeb4a5ca770dcd1810", "bug_code_uid": "67ee9be70e55da6ebe22d212c7952dd6", "src_uid": "f83c91c9e9252aba4736aa0bea82493b", "apr_id": "29cf003089a7618be1c1df48f2521d67", "difficulty": 1600, "tags": ["constructive algorithms", "graphs", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    int n[t],i;\n\n    for(i=0;i<t;i++){\n    scanf(\"%d\",&n[i]);\n    }\n\n    for(i=0;i<t;i++){\n        printf(\"%d\\n\",n[i]-2);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    int n[t],i;\n\n    for(i=0;i<t;i++){\n    scanf(\"%d\",&n[i]);\n    }\n\n    for(i=0;i<t;i++){\n        if(n[i]==1){\n            printf(\"0\\n\");\n            continue;\n        }\n        printf(\"%d\\n\",n[i]-2);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6239737274220033, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "6b69858cb591d2c1c7c1b6552f000b4b", "bug_code_uid": "6526f9b7601187395a7a0e702cc18c5d", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "50d2bb8a6a3896174e042908390a6f1e", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nmain()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    int i, n, j, t, m, k, l, r;\n\n    char st[100001];\n    scanf(\"%s\", st);\n\n    scanf(\"%d\", &n);\n\n    while(n--)\n    {\n        scanf(\"%d %d\", &l, &r);\n        int cnt = 0;\n        for(i = l - 1; i<r-1; i++)\n        {\n            if(st[i] == st[i+1])\n                cnt++;\n        }\n\n         printf(\"%d\\n\", cnt);\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nmain()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    int i = 0, n, j = 0, t, m, k, l, r;\n\n    char st[100001];\n    scanf(\"%s\", st);\n    m = strlen(st);\n\n    scanf(\"%d\", &n);\n\n    int a[m];\n    int cnt = 0;\n    a[0] = 0;\n\n    for(i = 1; i<m; i++)\n    {\n        if(st[i] == st[i-1])\n            cnt++;\n        a[i] = cnt;\n        //\n    }\n\n    //printf(\"%d \", cnt);\n\n    //for(i = 0; i<m; i++)\n        //printf(\"%d \", a[i]);\n\n    while(n--)\n    {\n        scanf(\"%d %d\", &l, &r);\n        printf(\"%d\\n\", a[r-1] - a[l-1]);\n\n    }\n\n\n\n\n}\n"}
{"similarity_score": 0.7884773662551441, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "15b0210d2278c6a39eb7dfb4dba5b64b", "bug_code_uid": "79e2f438d1c9d18f5e5923ae08956a2d", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "d0405ece0f277987e194235e273494cd", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nusing namespace std;\n\nint n, l, r, tab[100010], tabb[100010], blad, kub1[100010], kub2[100010];\nint main()\n{\n//\tios_base::sync_with_stdio( 0 );\n//\tcin.tie( 0 );\n\tscanf( \"%d%d%d\", &n, &l, &r );\n\tfor( int a = 1; a <= n; a++ )scanf( \"%d\", &tab[a] );\n\tfor( int a = 1; a <= n; a++ )scanf( \"%d\", &tabb[a] );\n\tfor( int a = l; a <= r; a++ )kub1[tab[a]] = 1;\n\tfor( int a = l; a <= r; a++ )kub2[tab[a]] = 1;\n\tfor( int a = 1; a <= n; a++ )if( kub1[a] != kub2[a] )blad = 1;\n\tif( blad )printf( \"LIE\" );\n\telse printf( \"TRUTH\" );\n\treturn 0;\n\t\n}", "fixed": "#include<stdio.h>\n//using namespace std;\n\nint n, l, r, tab[100010], tabb[100010], blad, kub1[100010], kub2[100010],j, d;\nint main()\n{\n//\tios_base::sync_with_stdio( 0 );\n//\tcin.tie( 0 );\n\tscanf( \"%d%d%d\", &n, &l, &r );\n\tfor( int a = 1; a <= n; a++ )scanf( \"%d\", &tab[a] );\n\tfor( int a = 1; a <= n; a++ )scanf( \"%d\", &tabb[a] );\n\tfor( int a = 1; a <= l-1; a++ )kub1[++j] = tab[a];\n\tfor( int a = r+1; a <= n; a++ )kub1[++j] = tab[a];\n\tfor( int a = 1; a <= l-1; a++ )kub2[++d] = tabb[a];\n\tfor( int a = r+1; a <= n; a++ )kub2[++d] = tabb[a];\n\tfor( int a = 1; a <= n; a++ )if( kub1[a] != kub2[a] )blad = 1;\n\tif( blad )printf( \"LIE\" );\n\telse printf( \"TRUTH\" );\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.982078853046595, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d001a352bb012c0f214bda05c20743e0", "bug_code_uid": "53076a14c72146d5754610a08043d033", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "4571cac55b930bca8460fe2cf57a279f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nvoid main()\r\n\r\n{\r\n    int t,i;\r\n    int max,min,s=0;\r\n\r\n    int T[3];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        s=0;\r\n    for(i=0;i<3;i++)\r\n    {\r\n        scanf(\"%d\",&T[i]);\r\n        s+=T[i];\r\n    }\r\n    max=T[0];\r\n    for(i=1;i<3;i++)\r\n    {\r\n        if (max<T[i])\r\n            max=T[i];\r\n    }\r\n\r\n    if(s/2==max)\r\n        printf(\"YES\\n\");\r\n    else\r\n        printf(\"NO\\n\");\r\n    }\r\n\r\n}", "fixed": "#include <stdio.h>\r\nvoid main()\r\n\r\n{\r\n    int t,i;\r\n    int max,s=0;\r\n\r\n    int T[3];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    s=0;\r\n    for(i=0;i<3;i++)\r\n    {\r\n        scanf(\"%d\",&T[i]);\r\n        s+=T[i];\r\n    }\r\n    max=T[0];\r\n    for(i=1;i<3;i++)\r\n    {\r\n        if (max<T[i])\r\n            max=T[i];\r\n    }\r\n\r\n    if((float)s/2==max)\r\n        printf(\"YES\\n\");\r\n    else\r\n        printf(\"NO\\n\");\r\n    }\r\n\r\n}"}
{"similarity_score": 0.31363636363636366, "equal_cnt": 19, "replace_cnt": 14, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "7eed6e9a91ca80af71be1dc43398cce5", "bug_code_uid": "c9434e0b6edc01b9f1ddc9b6e71874a9", "src_uid": "d4bcc53b470e4beaa078d5ce3785c6cb", "apr_id": "8b8281c65281ba02f7b2ee27c046e2de", "difficulty": 800, "tags": ["brute force", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint t;\r\nint n;\r\nint a[1010];\r\nint sum;\r\n\r\nint main(){\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tsum=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tint flag=0;\r\n\t\t\tif(i%2==1){\r\n\t\t\t\tfor(int j=1;j<=n-2;j+=2){\r\n\t\t\t\t\tif(a[j]>a[j+1]){\r\n\t\t\t\t\t\tint g=a[j];\r\n\t\t\t\t\t\ta[j]=a[j+1];\r\n\t\t\t\t\t\ta[j+1]=g;\r\n\t\t\t\t\t\tflag=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(int j=2;j<=n-1;j++){\r\n\t\t\t\t\tif(a[j]>a[j+1]){\r\n\t\t\t\t\t\tint g=a[j];\r\n\t\t\t\t\t\ta[j]=a[j+1];\r\n\t\t\t\t\t\ta[j+1]=g;\r\n\t\t\t\t\t\tflag=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(flag==1) sum++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",sum);\r\n\t}\r\n\treturn 0;\r\n} \r\n", "fixed": "#include<stdio.h>\r\n \r\nint a[1005],t,n;\r\n\r\ninline void work(int x){\r\n\tif(a[x]>a[x+1]){\r\n\t\tint g=a[x];\r\n\t\ta[x]=a[x+1];\r\n\t\ta[x+1]=g;\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint flag=1;\r\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\r\n\t\tfor(int i=1;i<n;i++){\r\n\t\t\tif(a[i]>a[i+1]){\r\n\t\t\t\tflag=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag){\r\n\t\t\tputs(\"0\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor(int i=1;;i++){\r\n\t\t\tif(i&1){\r\n\t\t\t\tfor(int j=1;j<n;j+=2) work(j);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(int j=2;j<n;j+=2) work(j);\r\n\t\t\t}\r\n\t\t\tint flag1=0;\r\n\t\t\tfor(int j=1;j<n;j++){\r\n\t\t\t\tif(a[j]>a[j+1]){\r\n\t\t\t\t\tflag1=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!flag1){\r\n\t\t\t\tprintf(\"%d\\n\",i);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9445378151260504, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a28eaa4be05d3363723bc4035bffb4fe", "bug_code_uid": "da77a23be914c3a51aa045c4160075f9", "src_uid": "7749f37aa9bf88a00013557e14342952", "apr_id": "0a74709cfcadf0d6fdb8e09f841e3696", "difficulty": 800, "tags": ["combinatorics", "implementation", "constructive algorithms", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nvoid main(){\n    int n;\n    scanf(\"%d\",&n);\n    char a[101][101];\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            scanf(\"%c\",a[i][j]);\n        }\n    }\n    int sum=0,x;\n    for(int i=0;i<n;i++){\n        x=0;\n        for(int j=0;j<n;j++){\n            if(a[i][j]=='C')\n                x++;\n        }\n        sum+=(x*(x-1))/2;\n    }\n    for(int j=0;j<n;j++){\n        x=0;\n        for(int i=0;i<n;i++){\n            if(a[i][j]=='C')\n                x++;\n        }\n        sum+=(x*(x-1))/2;\n    }\n    printf(\"%d\\n\",sum);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\n    int n;\n    scanf(\"%d%*c\",&n);\n    scanf(\"\\n\");\n    char a[n][n];\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            scanf(\"%c%*[\\n]c\",&a[i][j]);\n        }\n    }\n    \n    int sum=0,x;\n    for(int i=0;i<n;i++){\n        x=0;\n        for(int j=0;j<n;j++){\n            if(a[i][j]=='C')\n                x++;\n        }\n        sum+=(x*(x-1))/2;\n    }\n    for(int j=0;j<n;j++){\n        x=0;\n        for(int i=0;i<n;i++){\n            if(a[i][j]=='C')\n                x++;\n        }\n        sum+=(x*(x-1))/2;\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}"}
{"similarity_score": 0.945273631840796, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0f8cdc4b9b629f4a47e3fd0444f6c118", "bug_code_uid": "5ead8d8df6bfd7fb02926d177c7cbae6", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "1f31d280aca2773f4a67ee84b6b5eef2", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,sum=0,s=0,d;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    d=sum/2;\n    for(i=0;i<n;i++)\n    {\n        s+=a[i];\n        if(s>=d)\n            break;\n    }\n    printf(\"%d\",i+1);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int n,i,sum=0,s=0,d;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    d=ceil(sum*1.0/2);\n    for(i=0;i<n;i++)\n    {\n        s+=a[i];\n        if(s>=d)\n            break;\n    }\n    printf(\"%d\",i+1);\n}\n"}
{"similarity_score": 0.7397260273972602, "equal_cnt": 18, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 12, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "e91085576aabeb831683a0c1be039869", "bug_code_uid": "8a9c4a97204b10096f18acb5f0b02274", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "fdc6d85de8580bb34d2f7d88e082191c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n {\n     int t,m,n;\n     int res = 0;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n         scanf(\"%d%d\",&m,&n);\n         if(m>=n) \n          {\n              res =(n * ((m/2) + ((m%2)?1:0)));\n          }\n          else\n          {\n              res =(m * ((n/2) + ((n%2)?1:0)));\n          }\n          printf(\"%d\\n\",res);\n     }\n }", "fixed": "#include <stdio.h>\n\nint main()\n {\n     int t,m,n;\n     int res = 0;\n     scanf(\"%d\",&t);\n     while(t--)\n      {\n          scanf(\"%d%d\",&m,&n);\n          if(m>=n)\n           {\n           \t  if(m%2)\n               res = (n * (m/2)) + n/2 + (n%2);\n              else\n\t\t\t   res = (n * ((m/2)));\n           }\n          else \n           {\n              if(n%2)\n               res = (m * (n/2)) + m/2 + (m%2);\n              else\n\t\t\t   res = (m * ((n/2)));\n           }\n           \n           printf(\"%d\\n\",res);\n      }\n }\n"}
{"similarity_score": 0.8675373134328358, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b0b01166f8b8e9d9dbe33114ec422879", "bug_code_uid": "e2a9051bc4ed997573ea437ba71644f0", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "5bfdefbec698df96ddd2d29fce2fbac6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n    long long int row,a,b,i,m;\n    scanf(\"%lld\", &row);\n\n    long long int ara[row];\n    for(i=0; i<row;i++) {\n        scanf(\"%lld %lld\", &a, &b);\n\n        if(a % b==0) {\n            ara[i] = 0;\n            }\n        else if(a>=b) {\n            m = a % b;\n            if(m<b){\n                ara[i] = m;\n                }\n            else if(m>b) {\n                ara[i] = b - (a%b);\n            }\n\n        }\n        else if (a<b) {\n            ara[i] = b-a;\n        }\n    }\n\n    for(i=0;i<row;i++) {\n            printf(\"%lld\\n\", ara[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main ()\n{\n    long long int row,a,b,i,m;\n    scanf(\"%lld\", &row);\n\n    long long int ara[row];\n    for(i=0; i<row;i++) {\n        scanf(\"%lld %lld\", &a, &b);\n\n        if(a % b==0) {\n            ara[i] = 0;\n            }\n        else if(a>b) {\n            m = a % b;\n            ara[i]=b-m;\n        }\n        else if (a<b) {\n            ara[i] = b-a;\n        }\n    }\n\n    for(i=0;i<row;i++) {\n            printf(\"%lld\\n\", ara[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5942028985507246, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b80d6bf63e5fe922983b1cd4edb55c6a", "bug_code_uid": "1556a764d9282d3adeefce69cb2a88ed", "src_uid": "f3d34922baf84c534e78e283dcadc742", "apr_id": "ec9d76b35b84b1e79cbc12651b401add", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int T, N, l = 0, r = 0, loc[105] = {0};\n    scanf(\"%d\", &T);\n    while (T--) {\n        scanf(\"%d\", &N);\n        for (int i = 1; i <= N; i++) {\n            scanf(\"%d\", &loc[i]);\n            (l == 0) && (loc[i] == 0) && (l = i - 1);\n            (i > 1) && (loc[i] == 1) && (loc[i - 1] == 0) && (r = i);\n        }\n        printf(\"%d\\n\", r - l);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    int T, N, loc[105] = {0};\n    scanf(\"%d\", &T);\n    while (T--) {\n        scanf(\"%d\", &N);\n        int zeroFlag = 0;\n        for (int i = 1; i < N + 1; i++) {\n            scanf(\"%d\", &loc[i]);\n            if (loc[i] == 0) {\n                zeroFlag ++;\n            }\n        }\n        if (zeroFlag == 0) {\n            printf(\"0\\n\");\n            continue;\n        }\n        int l, r;\n        for (l = 0; loc[l + 1] != 0; l++);\n        for (r = N + 1; loc[r - 1] != 0; r--);\n        printf(\"%d\\n\", r - l);\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.7790262172284644, "equal_cnt": 48, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 31, "fix_ops_cnt": 47, "lang": "GNU C11", "fix_code_uid": "829bdc6961110b21fed873fdc471ae2f", "bug_code_uid": "80e8ee667ef708aaa76f628e37d96ee6", "src_uid": "fce6d690c2790951f7e04c622c3c2d44", "apr_id": "2cdcf629601a30686220fb46015dfc11", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int x,y,z,p;\r\n    scanf(\"%d\",&x);\r\n    while(x>0)\r\n    {\r\n        scanf(\"%d\",&y);\r\n        scanf(\"%d\",&z);\r\n        int pt=y*y+z*z;\r\n         int q=sqrt(pt);\r\n         if(y==0&&z==0)\r\n     {  int u=0;\r\n         printf(\"%d\",u);}\r\n    \r\n       else if(q*q==pt)\r\n     {\r\n       int r=1;\r\n       printf(\"%d\",r);\r\n     }\r\n       else \r\n      {     int ip=2;\r\n           printf(\"%d\",ip);\r\n       }\r\n    x--;\r\n}    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int x, y, z, p;\r\n    scanf(\"%d\", &x);\r\n    while (x > 0)\r\n    {\r\n        scanf(\"%d\", &y);\r\n        scanf(\"%d\", &z);\r\n        int pt = y * y + z * z;\r\n        int q = sqrt(pt);\r\n        if (y == 0 && z == 0)\r\n        {\r\n            int u = 0;\r\n            printf(\"%d\\n\", u);\r\n        }\r\n\r\n        else if (q * q == pt)\r\n        {\r\n            int r = 1;\r\n            printf(\"%d\\n\", r);\r\n        }\r\n        else\r\n        {\r\n            int ip = 2;\r\n            printf(\"%d\\n\", ip);\r\n        }\r\n        x--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7245590230664858, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "6051bed8870e13ecf09714f691e404ea", "bug_code_uid": "90df1bd054487910c1f1e6baa94607d3", "src_uid": "e2dc3de62fc45c7e9ddb92daa5c5d8de", "apr_id": "521f20b9526fed7e18f9c3cf2684271d", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint max(int a,int b)\r\n{\r\n    if(a>=b)return a;\r\n    else return b;\r\n}\r\nint main()\r\n{\r\n    int i,j,m,n,t;\r\n    scanf(\"%d\", &t);\r\n    char str[300010];\r\n    while(t--){\r\n        scanf(\"%s\", str);\r\n        int l=strlen(str),det=0,ind;\r\n        for(i=0;i<=l/2;i++){\r\n            if(str[l-i-1]!='a'){\r\n                ind=i;\r\n                det=1;\r\n                break;\r\n            }\r\n        }\r\n        if(det){\r\n            printf(\"YES\\n\");\r\n            for(i=0;i<l;i++){\r\n                if(i==ind)printf(\"a\");\r\n                printf(\"%c\", str[i]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint max(int a,int b)\r\n{\r\n    if(a>=b)return a;\r\n    else return b;\r\n}\r\nint main()\r\n{\r\n    int i,j,m,n,t;\r\n    scanf(\"%d\", &t);\r\n    char str[300010],str1[300010];\r\n    while(t--){\r\n        scanf(\"%s\", str);\r\n        int l=strlen(str),det=0,ind,ind2=0;\r\n        for(i=0;i<l;i++){\r\n            if(str[l-i-1]!='a'&&det==0){\r\n                str1[ind2]='a';\r\n                det=1;\r\n                ind2++;\r\n                //break;\r\n            }\r\n            str1[ind2]=str[i];\r\n            ind2++;\r\n        }\r\n        str1[ind2]='\\0';\r\n        if(det){\r\n            printf(\"YES\\n%s\\n\", str1);\r\n        }\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9596977329974811, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5591a6f23b28f35a40ead8b3326b3c83", "bug_code_uid": "99830044edfcfce9b3b1f4c9f12b0803", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "01a105b21b4a6165a45dd0aa2001c0c6", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,j;scanf(\"%d\",&t);\n    while(t>0)\n    {\n        int i,x,n,len;\n        char str1[100];\n        scanf(\"%s\",&str1);\n        len=strlen(str1);char str2[100];\n        \n        for(i=0; i<=(len-1)/2; i++) {\n            str2[i]=str1[i*2];}\n        str2[(len-1)/2+1]=str1[len-1];\n        printf(\"%s\\n\",str2);\n        t--;\n  }  \n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,j;scanf(\"%d\",&t);\n    while(t>0)\n    {\n        int i,x,n,len;\n        char str1[100];\n        scanf(\"%s\",&str1);\n        len=strlen(str1);char str2[100];\n        \n        for(i=0; i<=(len-1)/2; i++) {\n            str2[i]=str1[i*2];}\n        str2[(len-1)/2+1]=str1[len-1];\n        str2[(len-1)/2+2]='\\0';\n        printf(\"%s\\n\",str2);\n        t--;\n  }  \n}"}
{"similarity_score": 0.9194395796847635, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "301b6adf79f7c5a6030cc5e8e65cacd3", "bug_code_uid": "60d65c8dbdc6423567f66a7ce2615883", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "3c2118bdb3d98d0043daf58aeb0a4c01", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tfor(int i=0;i<t;i++)\r\n\t{\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for( int i=0;i<n;i++)\r\n        {\r\n        \tscanf(\"%d\",&arr[i]);\r\n        }\r\n        int flag =0;\r\n        for(int i=0;i<n-1;i++)\r\n        {\r\n        \tif( arr[i]>arr[i+1]){flag=1;}\r\n\r\n        }\r\n        if(flag==0){printf(\"0\\n\");}\r\n        else if(arr[0]==1 || arr[n-1]==n)\r\n        {\r\n        \tprintf(\"1\\n\");\r\n        }\r\n        else printf(\"2\\n\")\r\n\t}\r\nreturn 0;\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tfor(int i=0;i<t;i++)\r\n\t{\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for( int i=0;i<n;i++)\r\n        {\r\n        \tscanf(\"%d\",&arr[i]);\r\n        }\r\n        int flag =0;\r\n        for(int i=0;i<n-1;i++)\r\n        {\r\n        \tif( arr[i]>arr[i+1]){flag=1;}\r\n\r\n        }\r\n        if(flag==0){printf(\"0\\n\");}\r\n        else if(arr[0]==1 || arr[n-1]==n)\r\n        {\r\n        \tprintf(\"1\\n\");\r\n        }\r\n        else if( arr[0]==n && arr[n-1]==1)\r\n        {\r\n        \tprintf(\"3\\n\");\r\n        }\r\n        else printf(\"2\\n\");\r\n\t}\r\nreturn 0;\r\n\r\n}"}
{"similarity_score": 0.9227871939736346, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "5bbe59b172e05be3e6afe2e87ebab7b2", "bug_code_uid": "1d810849b2a3c6f54db8c2835945c492", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "fb148c0321bd0ba3d9037182ae05069a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\nint main () {\n\tint a,i,b,j,c,d=0,arr[1500]={0},max=-1,t=0;\n\tscanf(\"%d\",&a);\n\td=a*-1;\n\tfor(i=1;i<=a;i++){\n\t\t\tscanf(\"%d %d\",&b,&c);\n\t\t\tarr[b*60+c]++;}\n\tfor(i=1;i<=1440;i++)\n\t\t\tif(arr[i]>max)\n\t\t\t\tmax=i;\n\tprintf(\"%d\",arr[max]);\n\n\treturn 0;\n}\n", "fixed": "#include<string.h>\n#include<stdio.h>\nint main () {\n\tint a,i,b,c,arr[1500]={0},max=-1;\n\tscanf(\"%d\",&a);\n\tfor(i=1;i<=a;i++){\n\t\t\tscanf(\"%d %d\",&b,&c);\n\t\t\tarr[b*60+c]++;}\n\tfor(i=0;i<=1440;i++)\n\t\t\tif(arr[i]>max)\n\t\t\t\tmax=arr[i];\n\tprintf(\"%d\",max);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.5238095238095238, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c5a1b932d21af364cc4e5cbaa0d88d53", "bug_code_uid": "76374d649e6c67ff77bf7fa834dcecd2", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "a40cedb53fe382082dddffae0e1d9736", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int i,j,k,n,x,y;\n    scanf(\"%lld\",&n);\n    while(n--)\n    {\n        scanf(\"%lld%lld\",&x,&y);\n        for(i=x;i<=y;i++)\n        {   k=0;\n            for(j=i+1;j<=y;j++)\n            {\n                if(j%i==0)\n                {\n                    printf(\"%lld %lld\",i,j);\n                    k=1;\n                    break;\n                }\n            }\n            if(k==1)\n            {\n                break;\n            }\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int i,j,k,n,x,y;\n    scanf(\"%lld\",&n);\n    while(n--)\n    {\n        scanf(\"%lld%lld\",&x,&y);\n        printf(\"%lld %lld\\n\",x,2*x);\n    }\n}"}
{"similarity_score": 0.2566528681253696, "equal_cnt": 50, "replace_cnt": 29, "delete_cnt": 15, "insert_cnt": 6, "fix_ops_cnt": 50, "lang": "GNU C11", "fix_code_uid": "b3e6135f2a0a2ad18537a19e4116702e", "bug_code_uid": "05114250456f86e0bdacb4461cb7eb74", "src_uid": "c19afaa6c46cd361e0e5ccee61f6f520", "apr_id": "6c97824c14be0415088aa8c0c2fc8f42", "difficulty": 1800, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <inttypes.h>\n\ntypedef struct {\n\tint x;\n\tint y;\n} Punto;\n\nint main() {\n\tshort n;\n\tPunto p[n + 1];\n\tlong long int j;\n\tscanf(\"%hi %I64d\", &n, &j);\n\n\n\tfor (short i = 0; i < n + 1 ; ++i) {\n\t\tscanf(\"%d %d\", &p[i].x, &p[i].y);\n\t}\n\n// Realizamos el canculo de hallar el punto indice\n\tint iAux = 1;\n\n\t// Formula para saber la cantidad minima que tenemos que hacer e calculo ya que despues de n*2 los puntos simetricos se repiten\n\tj = j % ( n * 2 );\n\n\tfor (short i = 0; i < j ; i++) {\n\t\tp[0].x = 2 * p[iAux].x - p[0].x;\n\t\tp[0].y = 2 * p[iAux].y - p[0].y;\n\t\tif (iAux == n - 1) {\n\t\t\tiAux = 0;\n\t\t}\n\t\tiAux = iAux + 1;\n\t}\n\n\t// impirmimos la respuesta\n\tprintf(\"%d %d\", p[0].x, p[0].y);\n\n\tgetchar();\n\tgetchar();\n\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<inttypes.h>\n\ntypedef struct p{\n    int x;\n    int y;\n}Punto;\n\nvoid calculo(Punto vec[], int n, long long int j);\nvoid cargarvector(Punto vec[], int n);\n\nint main(){\n    int n,i;\n    long long int j;\n    scanf(\"%d\",&n);\n    scanf(\"%I64d\",&j);\n    Punto vec[n+1];\n    cargarvector(vec,n+1);\n    calculo(vec,n+1,j);\n    printf(\"%d %d\",vec[0].x,vec[0].y);\n    return 0;\n}\n/*Se carga M0 y las As*/\nvoid cargarvector(Punto vec[], int n){\n    int i;\n    for(i=0; i<n; i++){\n        scanf(\"%d\",&vec[i].x);\n        scanf(\"%d\",&vec[i].y);\n    }\n\n}\n/*Calcula por medio de un despeje de punto medio y va cambiando el valor del punto medio por los valores dados para A*/\nvoid calculo(Punto vec[], int n, long long int j){\n    int i,p;\n    i=1;\n    j= j%((n-1)*2);\n    for(p=0; p<j ;p++){\n        vec[0].x= 2*vec[i].x - vec[0].x;\n        vec[0].y= 2*vec[i].y - vec[0].y;\n        if(i==n-1){\n            i=0;\n        }\n        i=i+1;\n    }\n}"}
{"similarity_score": 0.8449138410227904, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "af6820d10283d059adc43b925ecd7e91", "bug_code_uid": "86688ee6c40524273d683ad30e64a4ec", "src_uid": "b9f0c38c6066bdafa2e4c6daf7f46816", "apr_id": "69f7f907fbdc4dacf76a80447172d2cd", "difficulty": 900, "tags": ["constructive algorithms", "sortings", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid swap(char *a, char *b)\n{\n    char t = *a;\n    *a = *b;\n    *b = t;\n}\n\nint ispalin(char *s)\n{\n    int len = strlen(s);\n\n    for(int i = 0; i < len >> 1; i++)\n        if(s[i] != s[len - i - 1])\n            return 0;\n\n    for(int i = 1; i < len; i++)\n        if(s[0] != s[i])\n            return 1;\n\n    return 2;\n}\n\nint main()\n{\n    int t;\n    char s[100] = {0};\n\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++) \n    {\n        scanf(\"%s\", s);\n        int k = ispalin(s);\n        switch(k)\n        {\n            int len = strlen(s);\n            case 0: puts(s); break;\n            case 1:\n            for(int i = 0; i < len - 1; i++)\n                if(s[i] != s[i + 1])\n                {\n                    swap(&s[i],&s[i + 1]);\n                    break;\n                }\n            puts(s);\n            break;\n            case 2: puts(\"-1\"); break;\n        }\n\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nvoid swap(char *a, char *b)\n{\n    char t = *a;\n    *a = *b;\n    *b = t;\n}\n\nint ispalin(char *s)\n{\n    int len = strlen(s);\n\n    for(int i = 0; i < len >> 1; i++)\n        if(s[i] != s[len - i - 1])\n            return 0;\n\n    for(int i = 1; i < len; i++)\n        if(s[0] != s[i])\n            return 1;\n\n    return 2;\n}\n\nint main()\n{\n    int t;\n    char s[1001] = {0};\n\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++) \n    {\n        scanf(\"%s\", s);\n        int k = ispalin(s), len = strlen(s);\n\n        if(k == 2) puts(\"-1\");\n        else if(k == 1) \n        {\n            for(int i = 0; i < len - 1; i++)\n                if(s[i] != s[i + 1])\n                {\n                    swap(&s[i],&s[i + 1]);\n                    break;\n                }\n            puts(s);\n        }\n        else puts(s);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9735849056603774, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "af6f38bd77d0b8499ecfa57113908148", "bug_code_uid": "f0104bd52faabf1baa8c8dd65ede150b", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "7a7b5a2b98bf7328865612c427036a6e", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n \n\tint n,t;\n\tscanf(\"%d %d\", &n, &t);\n\t\n\tint a[n];\n\t\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",a[i]);\n\t}\n\t\n\tint x = 1;\n\t\n\twhile (x < t)\n\t{\n\t    x += a[x];\n\t}\n\t\n\tif(x == t)\n\t{\n\t\tprintf(\"YES\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\n\tint n,t;\n\tscanf(\"%d %d\", &n, &t);\n\n\tint a[n];\n\n\tfor (int i=1; i<n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tint x = 1;\n\n\twhile (x < t)\n\t{\n\t    x += a[x];\n\t}\n\n\tif(x == t)\n\t{\n\t\tprintf(\"YES\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9964912280701754, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0100cdc7b430175834bb60dcfbdb53c7", "bug_code_uid": "864702598986b58b10ec3fef17a0f39b", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "c93abffbb448fa6481a28593a2811fb4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{ int n,i,sub,high=0;\nint ara[2500];\nscanf(\"%d\",&n);\nfor(i=0;i<(n*2);i++)\n{\nscanf(\"%d\",&ara[i]);\n\n}\nhigh=ara[i];\nfor(i=1;i<(n*2);i++)\n{\nsub=ara[i]-ara[i+1];\ni++;\nara[i+1]=ara[i+1]+sub;\nif(ara[i+1]>high)\n{\nhigh=ara[i+1];\n}\n}\n\nprintf(\"%d\",high);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{ int n,i,sub,high=0;\nint ara[2500];\nscanf(\"%d\",&n);\nfor(i=0;i<(n*2);i++)\n{\nscanf(\"%d\",&ara[i]);\n\n}\nhigh=ara[1];\nfor(i=1;i<(n*2);i++)\n{\nsub=ara[i]-ara[i+1];\ni++;\nara[i+1]=ara[i+1]+sub;\nif(ara[i+1]>high)\n{\nhigh=ara[i+1];\n}\n}\n\nprintf(\"%d\",high);\nreturn 0;\n}"}
{"similarity_score": 0.9887755102040816, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "117426c96c11e3cf80f8c3b74360a337", "bug_code_uid": "2093ba9433f19484fe09d00bcc27c88f", "src_uid": "4b7b0fba7b0af78c3956c34c29785e7c", "apr_id": "509f5b4da514bd9cf20c6b4d76de237f", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nchar name[12][10]={\"ABSINTH\",\"BEER\",\"BRANDY\",\"CHAMPAGNE\",\"GIN\",\"RUM\",\"SAKE\",\"TEQUILA\",\"VODKA\",\"WHISKEY\",\"WINE\"};\nchar str[100][102];\nint a[102],chk[102],count=0,final=0;\nint chkint(int i)\n{\n int s;\n if((str[i][0]>=65)&&(str[i][0]<=90))\n  return 0;\nreturn 1;\n}\nint power(int i)\n{\n int s=1,y;\n for(y=0;y<i;y++)\n  s*=10;\nreturn s;\n}\nint str2int(int i)\n{\n int s,len,ans=0;\n len=strlen(str[i]);\n for(s=0;s<len;s++)\n  ans+=(str[i][s]-48)*power(len-s-1);\nreturn ans;\n}\nint match(int i)\n{\n int j;\n for(j=0;j<11;j++)\n  if(strcmp(str[i],name[j])==0)\n   return 0;\nreturn 1;\n}\nint main()\n{\nint n,i,j;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n scanf(\"%s\",&str[i]);\nfor(i=0;i<n;i++)\n chk[i]=0;\nfor(i=0;i<n;i++)\n if(chkint(i))\n  {\n   a[count++]=str2int(i);\n   chk[i]=1;\n  }\n//for(i=0;i<count;i++)\n// printf(\"array %d\\n\",a[i]);\nfor(i=0;i<count;i++)\n if(a[i]<18)\n  final++;\nfor(i=0;i<n;i++)\n if(!chk[i])\n   if(match(i))\n    final++;\nprintf(\"%d\\n\",final);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nchar name[12][10]={\"ABSINTH\",\"BEER\",\"BRANDY\",\"CHAMPAGNE\",\"GIN\",\"RUM\",\"SAKE\",\"TEQUILA\",\"VODKA\",\"WHISKEY\",\"WINE\"};\nchar str[100][102];\nint a[102],chk[102],count=0,final=0;\nint chkint(int i)\n{\n int s;\n if((str[i][0]>=65)&&(str[i][0]<=90))\n  return 0;\nreturn 1;\n}\nint power(int i)\n{\n int s=1,y;\n for(y=0;y<i;y++)\n  s*=10;\nreturn s;\n}\nint str2int(int i)\n{\n int s,len,ans=0;\n len=strlen(str[i]);\n for(s=0;s<len;s++)\n  ans+=(str[i][s]-48)*power(len-s-1);\nreturn ans;\n}\nint match(int i)\n{\n int j;\n for(j=0;j<11;j++)\n  if(strcmp(str[i],name[j])==0)\n   return 1;\nreturn 0;\n}\nint main()\n{\nint n,i,j;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n scanf(\"%s\",&str[i]);\nfor(i=0;i<n;i++)\n chk[i]=0;\nfor(i=0;i<n;i++)\n if(chkint(i))\n  {\n   a[count++]=str2int(i);\n   chk[i]=1;\n  }\n//for(i=0;i<count;i++)\n// printf(\"array %d\\n\",a[i]);\nfor(i=0;i<count;i++)\n if(a[i]<18)\n  final++;\nfor(i=0;i<n;i++)\n if(!chk[i])\n   if(match(i))\n    final++;\nprintf(\"%d\\n\",final);\nreturn 0;\n}\n"}
{"similarity_score": 0.9913473423980222, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f13f912800efb594503a4761aa918bb9", "bug_code_uid": "ede4d0c6dbfa8e1edf71ef8781292c46", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "f6ccff7bd3780919779be1636a3e2814", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n \nint main(void){\n\tint t, n, a, b;\n\tint k, i;\n\tchar *s;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor(k=0; k<t; k++){\n\t\tscanf(\"%d\", &n);\n\t\tscanf(\"%d\", &a);\n\t\tscanf(\"%d\", &b);\n\t\t\n\t\ts = (char*)malloc((n+1)*sizeof(char));\n\t\t\n\t\tfor(i=0; i<b; i++)\n\t\t\ts[i] = (char)(i+97);\n\t\t\n\t\twhile(i<n){\n\t\t\ts[i] = s[i-b];\n\t\t\ti++;\n\t\t}\n\t    s[n] = '\\0';\n\t\t\n\t\tprintf(\"%s\", s);\n\t\t\n\t\tfree(s);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n \nint main(void){\n\tint t, n, a, b;\n\tint k, i;\n\tchar *s;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor(k=0; k<t; k++){\n\t\tscanf(\"%d\", &n);\n\t\tscanf(\"%d\", &a);\n\t\tscanf(\"%d\", &b);\n\t\t\n\t\ts = (char*)malloc((n+1)*sizeof(char));\n\t\t\n\t\tfor(i=0; i<b; i++)\n\t\t\ts[i] = (char)(i+97);\n\t\t\n\t\twhile(i<n){\n\t\t\ts[i] = s[i-b];\n\t\t\ti++;\n\t\t}\n\t\ts[n] = '\\0';\n\t\t\n\t\tprintf(\"%s\\n\", s);\n\t\t\n\t\tfree(s);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9932885906040269, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fc9e9e38273b5695faf8d89ae8e8bbb3", "bug_code_uid": "c5540bb1a5207b3b6dba2c5d3fcb5f26", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "923277f894e226678cc3eeffa09cb623", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int n, i, ans, a, b;\n    scanf(\"%d\", &n);\n    int year[n - 1];\n    for(i = 0; i < n - 1; i++)\n        scanf(\"%d\", &year[i]);\n    scanf(\"%d %d\", &a, &b);\n    for(i = a - 1; i < b - 1; i++) {\n        ans += year[i];\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n    int n, i, ans = 0, a, b;\n    scanf(\"%d\", &n);\n    int year[n - 1];\n    for(i = 0; i < n - 1; i++)\n        scanf(\"%d\", &year[i]);\n    scanf(\"%d %d\", &a, &b);\n    for(i = a - 1; i < b - 1; i++) {\n        ans += year[i];\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9895833333333334, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "00a80450f56dc9e64016510ace17a105", "bug_code_uid": "c69a225ea0a924bd056fb478a9b9e58c", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "486b62ec8519e1289472113641607610", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(int argc, char * argv[]) {\n\n    int t, n;\n    uint64_t k;\n\n    fscanf(stdin, \"%d\", &t);\n    \n    while (t--) {\n        fscanf(stdin, \"%d %llu\", &n, &k);\n\n        // only care about parity, k cannot be 0\n        k &= 1;\n\n        int * arr = (int *) malloc(n * sizeof(int));\n\n        int min = 1000000001, max = -1000000001;\n        for (int i = 0; i < n; i++) {\n            int num;\n            fscanf(stdin, \"%d\", &num);\n\n            arr[i] = num;\n\n            min = (min < num ? min : num);\n            max = (max > num ? max : num);\n        }\n\n        if (k) {\n            // k is odd\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", max - arr[i]);\n            }\n        }\n        else {\n            // k is even\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", arr[i] - min);\n            }\n        }\n        printf(\"\\n\");\n\n\n\n    }\n\n    return 0;\n}\n\n\n", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n\n\nint main(int argc, char * argv[]) {\n\n    int t, n;\n    uint64_t k;\n\n    fscanf(stdin, \"%d\", &t);\n    \n    while (t--) {\n        fscanf(stdin, \"%d %llu\", &n, &k);\n\n        // only care about parity, k cannot be 0\n        k &= 1;\n\n        int * arr = (int *) malloc(n * sizeof(int));\n\n        int min = 1000000001, max = -1000000001;\n        for (int i = 0; i < n; i++) {\n            int num;\n            fscanf(stdin, \"%d\", &num);\n\n            arr[i] = num;\n\n            min = (min < num ? min : num);\n            max = (max > num ? max : num);\n        }\n\n        if (k) {\n            // k is odd\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", max - arr[i]);\n            }\n        }\n        else {\n            // k is even\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", arr[i] - min);\n            }\n        }\n        printf(\"\\n\");\n\n\n\n    }\n\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.6820276497695853, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "6445463e63bd6d1a0046a0398c7f887a", "bug_code_uid": "e51b399e86b297338e6ff5d2a9db8240", "src_uid": "7324428d9e6d808f55ad4f3217046455", "apr_id": "396cf9e9a310c5f94413dc5e354f5e4d", "difficulty": 1400, "tags": ["binary search", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n long   int a[100000],p,q,i,x,m;\n    scanf(\"%ld%ld\",&p,&q);\n    for(i=0;i<p;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        \n    }\n    x=q*2-p;\n\n    if(q==p){\n    printf(\"%d\",a[p-1]);}\n    else\n    {\n     m= a[0]+a[p-x-1] ;\n     if(m>a[p-1])\n     printf(\"%ld\",m);\n     else\n     printf(\"%ld\",a[p-1]);\n    }\n    \n    return 0;\n}\n", "fixed": "\n    // your code goes here\n    #include <stdio.h>\n\nint main(void) {\n long   int a[100000],p,q,i,x,m,max,max1,j;\n    scanf(\"%ld%ld\",&p,&q);\n    for(i=0;i<p;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        \n    }\n    x=q*2-p;\nmax=0;\n    if(q>=p){\n    printf(\"%ld\",a[p-1]);}\n    else\n    {j=p-x-1;\n    i=0;\n        while(i<j)\n    {\n     m= a[i]+a[j] ;\n     i++;\n     j--;\n     \n    if(m>max)\n        max=m;\n    }\n    if(max<a[p-1])\n    max=a[p-1];\n        printf(\"%ld\",max);\n    }\n    \n    return 0;\n\n    \n}\n"}
{"similarity_score": 0.970550576184379, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ea20e4c94aa15f3ea3ebf377913ac90a", "bug_code_uid": "2c2ff62971cbd2073630ad78ef71ab09", "src_uid": "5598d5954fa3e3cecedb413033259760", "apr_id": "28ebd4d9d6ecedad3beb8437732741da", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\nint t;\nscanf(\"%d\",&t);\n\n    while(t>0){\n          int n;\n          scanf(\"%d\",&n);\n          int a[n+2],index,flag=0;\n          for(int i=1;i<n+1;i++){\n            scanf(\"%d\",&a[i]);\n          }\n\n            a[n+1]=10000000;\n            a[0]=10000000;\n            int max=0;\n            for(int i=1;i<n+1;i++){\n                if(max<=a[i]){\n                    if((a[i]>a[i-1])||(a[i]>a[i+1])){\n                            max=a[i];\n                            index=i;\n                            flag=1;\n                    }\n                }\n            }\n            if(flag==1){\n               printf(\"%d\\n\",index);\n            }\n          else{\n            printf(\"-1\\n\");\n          }\n            t--;\n    }\nreturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(){\nint t;\nscanf(\"%d\",&t);\n\n    while(t>0){\n          int n;\n          scanf(\"%d\",&n);\n          int a[n+2],index,flag=0;\n          for(int i=1;i<n+1;i++){\n            scanf(\"%d\",&a[i]);\n          }\n\n            a[n+1]=10000000000;\n            a[0]=10000000000;\n            int max=0;\n            for(int i=1;i<n+1;i++){\n                if(max<=a[i]){\n                    if((a[i]>a[i-1])||(a[i]>a[i+1])){\n                            max=a[i];\n                            index=i;\n                            flag=1;\n                    }\n                }\n            }\n            if(flag==1){\n               printf(\"%d\\n\",index);\n            }\n          else{\n            printf(\"-1\\n\");\n          }\n            t--;\n    }\nreturn 0;\n}\n\n\n"}
{"similarity_score": 0.9565217391304348, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "da718d4a34b26623bca000d64b21261f", "bug_code_uid": "9458c661a3869de6f203f3bc943808ae", "src_uid": "e22b10cdc33a165fbd73b45dc5fbedce", "apr_id": "124404a787001060cdd0d7775bc1f290", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\n\nint main()\n{\n\n\n\tint n,i;\n\n\tlong long int a[200000],b[200000],x[200000];\n\t\n\tx[0]=0;\n\tscanf(\"%d\",&n);\n\tif(n>200000||n<3)\n\t\texit(0);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&b[i]);\n\t\tif(b[i]>1000000000||b[i]<-1000000000||b[0]<0)\n\t\t\texit(0);\n\t\ta[i]=b[i]+x[i];\n\t\tx[i+1]=a[i];\n           \n\n\n\t}\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%lld \",a[i]);\n\n\n\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\n\nint main()\n{\n\n\n\tint n,i;\n\n\tlong long int a[200000],b[200000],x[200000];\n\t\n\tx[0]=0;\n\tscanf(\"%d\",&n);\n\tif(n>200000||n<3)\n\t\texit(0);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&b[i]);\n\t\tif(b[i]>1000000000||b[i]<-1000000000||b[0]<0)\n\t\t\texit(0);\n\t\ta[i]=b[i]+x[i];\n\t\tif(b[i]<0)\n\t\tx[i+1]=x[i];\n\t\telse\n\t\tx[i+1]=a[i];\n           \n\n\n\t}\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%lld \",a[i]);\n\n\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9096045197740112, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "526deb3e5e900a1a042c9dd7790879e8", "bug_code_uid": "6eeeec705b4743f3ef4895fb0ccf3192", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "917e4d9a274ec89471d1ee1891d888b3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t,n,a,b,i;\n    scanf(\"%d\",&t);\n    for(i=0;i>t;i++){\n        scanf(\"%d%d\",&a,&b);\n        printf(\"%d\\n\",a+b);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t,n,a,b,i;\n    \n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d\",&a,&b);\n\n        printf(\"%d\\n\",a+b);\n    }\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9979757085020243, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "73d4e89bfbc835d18286e91314bad01a", "bug_code_uid": "280a24c7c1fa5aaf53609f7df3394e14", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "9ca03b4f0385812b546c7111edfb9c6d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,d=0;\n    char s[101],a[101];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        a[i]='a';\n    }\n    a[i+1]='\\0';\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        for(j=0;j<m;j++)\n        {\n            if(s[j]!=s[j+1] || a[j]==s[j] )\n            {\n                d++;\n            }\n            a[j]=s[j];\n        }\n    }\n    if(d>0)\n    {\n        printf(\"NO\\n\");\n    }\n    else{\n\n        printf(\"YES\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,d=0;\n    char s[101],a[101];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        a[i]='a';\n    }\n    a[i+1]='\\0';\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        for(j=0;j<m;j++)\n        {\n            if(s[j]!=s[j+1] || a[j]==s[j] )\n            {\n                d++;\n            }\n            a[j]=s[j];\n        }\n    }\n    if(d-n>0)\n    {\n        printf(\"NO\\n\");\n    }\n    else{\n\n        printf(\"YES\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9884057971014493, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "827f5f858947cea474834e9be2026f2c", "bug_code_uid": "b7f14153ead33c20a67a2b4fd51b6e70", "src_uid": "c249103153c5006e9b37bf15a51fe261", "apr_id": "a32bfcde572d6d579f7efc5d0e5a4940", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, m;\n\tint num[1000]={0,}, count[1000]={0,};\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i=0; i<m; i++){\n\t\tscanf(\"%d\", &num[i]);\n\t}\n\tfor(int i=1; i<=n; i++){\n\t\tfor(int j=0; j<m; j++){\n\t\t\tif(num[j]==i) count[i]++;\n\t\t}\n\t}\n\tint min=m;\n\tfor(int i=1; i<=n; i++){\n\t\tif(min>=count[i]) min=count[i];\n\t}\n\tprintf(\"%d\", min);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, m;\n\tint num[1000]={0,}, count[1001]={0,};\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i=0; i<m; i++){\n\t\tscanf(\"%d\", &num[i]);\n\t}\n\t\n\tfor(int i=1; i<=n; i++){\n\t\tfor(int j=0; j<m; j++){\n\t\t\tif(num[j]==i) count[i]++;\n\t\t}\n\t}\n\t\n\tint min=m;\n\tfor(int i=1; i<=n; i++){\n\t\tif(min>=count[i]) min=count[i];\n\t}\n\t\n\tprintf(\"%d\", min);\n}"}
{"similarity_score": 0.014473684210526316, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "806cd4d3bd889fcf527a0089b68685c2", "bug_code_uid": "3a75c7594445b3ab582559759c1b9879", "src_uid": "18f2e54e4147e8887da737d5b6639473", "apr_id": "9215acc1876330875b4e45619db1b484", "difficulty": 900, "tags": ["sortings", "greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\n<CodeBlocks_project_file>\n\t<FileVersion major=\"1\" minor=\"6\" />\n\t<Project>\n\t\t<Option title=\"test\" />\n\t\t<Option pch_mode=\"2\" />\n\t\t<Option compiler=\"gcc\" />\n\t\t<Build>\n\t\t\t<Target title=\"Debug\">\n\t\t\t\t<Option output=\"bin/Debug/test\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Debug/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-g\" />\n\t\t\t\t</Compiler>\n\t\t\t</Target>\n\t\t\t<Target title=\"Release\">\n\t\t\t\t<Option output=\"bin/Release/test\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Release/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-O2\" />\n\t\t\t\t</Compiler>\n\t\t\t\t<Linker>\n\t\t\t\t\t<Add option=\"-s\" />\n\t\t\t\t</Linker>\n\t\t\t</Target>\n\t\t</Build>\n\t\t<Compiler>\n\t\t\t<Add option=\"-Wall\" />\n\t\t</Compiler>\n\t\t<Unit filename=\"main.c\">\n\t\t\t<Option compilerVar=\"CC\" />\n\t\t</Unit>\n\t\t<Extensions>\n\t\t\t<code_completion />\n\t\t\t<envvars />\n\t\t\t<debugger />\n\t\t</Extensions>\n\t</Project>\n</CodeBlocks_project_file>\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint minus(int x,double y)\n{\n\tif(x>y&&(double)x-y>0.5) return x-1;\n\telse if(x<y&&y-(double)x>0.5) return x+1;\n\telse return x;\n}\nint main()\n{\n\tdouble l; \n\tint n,i;\n\tlong long a1,k,a2,a3;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;++i){\n\t\tscanf(\"%lld%lld%lld\",&a1,&a2,&a3);\n\t\tl=(double)(a1+a2+a3)/3;\n\t\ta1=minus(a1,l);\n\t\ta2=minus(a2,l);\n\t\ta3=minus(a3,l);\n\t\tk=abs(a1-a2)+abs(a2-a3)+abs(a1-a3);\n\t\tprintf(\"%lld\\n\",k);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9897959183673469, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9ea0606ea87aa106ea9fe8d7603de516", "bug_code_uid": "49c055565da8613a98b2644e4cd1478d", "src_uid": "474f29da694929a64eaed6eb8e4349c3", "apr_id": "4e312c17e02b12659bf8280e40576dd5", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint min(int x,int y)\n{\nif(x>y)return y;\nelse return x;\n}\nint main(){\nint t;\nlong long int n,x,y,d;\nscanf(\"%d\",&t);\nwhile(t--){\nscanf(\"%lld %lld %lld %lld\",&n,&x,&y,&d);\nif(abs(x-y)%d==0||abs(y-1)%d==0||abs(n-y)%d==0){\nlong long int dis=1000;\nif(abs(x-y)%d==0) \n   dis=abs(x-y)/d;\nif(abs(y-1)%d==0) \n   dis=min(dis,(x+d-1)/d+(y-1)/d);\nif(abs(n-y)%d==0)\n   dis=min(dis,(n-x+d-1)/d+(n-y)/d);\nprintf(\"%lld\\n\",dis);\n}\nelse\nprintf(\"-1\\n\");\n}\nreturn 0;\n\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint min(int x,int y)\n{\nif(x>y)return y;\nelse return x;\n}\nint main(){\nint t;\nlong long int n,x,y,d;\nscanf(\"%d\",&t);\nwhile(t--){\nscanf(\"%lld %lld %lld %lld\",&n,&x,&y,&d);\nif(abs(x-y)%d==0||abs(y-1)%d==0||abs(n-y)%d==0){\nlong long int dis=10000000000000;\nif(abs(x-y)%d==0) \n   dis=abs(x-y)/d;\nif(abs(y-1)%d==0) \n   dis=min(dis,(x+d-1)/d+(y-1)/d);\nif(abs(n-y)%d==0)\n   dis=min(dis,(n-x+d-1)/d+(n-y)/d);\nprintf(\"%lld\\n\",dis);\n}\nelse\nprintf(\"-1\\n\");\n}\nreturn 0;\n\n}"}
{"similarity_score": 0.9985358711566618, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "639820531c168ef2da0c9a68f9962b6d", "bug_code_uid": "3361148b29268295cf81d07de46e6936", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "fecfa15b91a6cdef89b306003cedba73", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char n[100];\n    int i,ln,t;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%s\",&n);\n        ln=strlen(n);\n        if(ln<10)\n        {\n            printf(\"%s\\n\",n);\n        }\n        else\n        {\n            printf(\"%c%d%c\\n\",n[0],ln-2,n[ln-1]);\n        }\n\n        }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char n[100];\n    int i,ln,t;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%s\",&n);\n        ln=strlen(n);\n        if(ln<=10)\n        {\n            printf(\"%s\\n\",n);\n        }\n        else\n        {\n            printf(\"%c%d%c\\n\",n[0],ln-2,n[ln-1]);\n        }\n\n        }\n}\n"}
{"similarity_score": 0.9869346733668342, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d6a35e453e4b49477425d9b41b6bc0b6", "bug_code_uid": "6a3e5cfe42fda5a41b42aba69c1ca2f3", "src_uid": "a063705bd0ce1e17ccaafbbfc2663d93", "apr_id": "a097e17cf8964ff089ab165ccfac2690", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int a[n][51],b[n];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&b[i]);\r\n        for(int j=0;j<b[i];j++)\r\n        {\r\n            scanf(\"%d\",&a[i][j]);\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        count=0;\r\n        for(int j=0;j<b[i];j++)\r\n        {\r\n            if(a[i][j]<3)\r\n            {\r\n                ++count;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n,count=0;\r\n    scanf(\"%d\",&n);\r\n    int a[n][51],b[n];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&b[i]);\r\n        for(int j=0;j<b[i];j++)\r\n        {\r\n            scanf(\"%d\",&a[i][j]);\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        count=0;\r\n        for(int j=0;j<b[i];j++)\r\n        {\r\n            if(a[i][j]!=2)\r\n            {\r\n                ++count;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8573573573573574, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c5297fb17efb7b67152d2aeca3fa1e00", "bug_code_uid": "25685b6661aee0f6e88712243a7305cd", "src_uid": "79d26192a25cd51d27e916adeb97f9d0", "apr_id": "d7862d2c050fb7e382bc1770240c8c1e", "difficulty": 1700, "tags": ["dp", "constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint arr[5000002];\nint main()\n{\n    int n,a,b,i,j,ans;\n\n    arr[2]=1;\n    arr[3]=1;\n    for(i=4;i<5000002;i++)\n        for(j=2;;j+=1)\n        {\n            if(arr[j]!=1)\n            continue;\n        if(i%j==0)\n        {\n            arr[i]=arr[j]+arr[(i/j)];\n            break;\n        }\n        else if(j*j>i)\n        {arr[i]=1;\n        break;}\n        if(j!=2)\n        j++;\n        }\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        ans=0;\n        scanf(\"%d %d\",&a,&b);\n        if(a==b)\n        ans=1;\n        else\n        for(i=b+1;i<=a;i++)\n        ans=ans+arr[i];\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint arr[5000002];\nint sum[5000002];\nint main()\n{\n    int n,a,b,i,j,ans;\n\n    arr[2]=1;\n    arr[3]=1;\n    sum[2]=1;\n    sum[3]=2;\n    for(i=4;i<5000002;i++)\n    {\n        for(j=2;;j+=1)\n        {\n            if(arr[j]!=1)\n            continue;\n        if(i%j==0)\n        {\n            arr[i]=arr[j]+arr[(i/j)];\n            break;\n        }\n        else if(j*j>i)\n        {arr[i]=1;\n        break;}\n        if(j!=2)\n        j++;\n        }\n        sum[i]=sum[i-1]+arr[i];\n    }\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        ans=0;\n        scanf(\"%d %d\",&a,&b);\n        ans=sum[a]-sum[b];\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7983402489626557, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "20a90696d1ff932142ad2ef5d105b2a8", "bug_code_uid": "20ef2cb643098305c0cc9a29cbcc7903", "src_uid": "ed449ba7c453a43e2ac5904dc0174530", "apr_id": "b26d92090837bbbc5f76cee9640c4bd7", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int t,n,i,j,k,d;\n    int a[110];\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++){\n        scanf(\"%d\",&n);\n        d=0;\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0;i<n-1;i++){\n            if(abs(a[i]-a[i+1])>1){\n                d=1;\n                break;\n            }\n        }\n        if(d==1){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int t,n,i,k,j,d,temp;\n    int a[110];\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++){\n        scanf(\"%d\",&n);\n        d=0;\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0;i<n;i++){\n            for(j=0;j<n-i-1;j++){\n                if(a[j]>a[j+1]){\n                    temp=a[j];\n                    a[j]=a[j+1];\n                    a[j+1]=temp;\n                }\n            }\n        }\n        for(i=0;i<n-1;i++){\n            if(abs(a[i]-a[i+1])>1){\n                d=1;\n                break;\n            }\n        }\n        if(d==1){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8925501432664756, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8df8cfea919ddd7be1e3f683a2c927a8", "bug_code_uid": "61bbd84b77fbeeecda1cc4541ac7d3c9", "src_uid": "5db9c5673a04256c52f180dbfca2a52f", "apr_id": "f8cfb8683ef83a2fcf2db06145a7534b", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long x[2005];\nlong long y[2005];\nlong long r1[2005];\nlong long r2[2005];\n\nint main(){\n\tint n;\n\tlong long x1, y1;\n\tlong long x2, y2;\n\tint i, j;\n\tlong long max;\n\tlong long min=10000000000000000;\n\tscanf(\"%d%lld%lld%lld%lld\", &n, &x1, &y1, &x2, &y2);\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%lld%lld\", &x[i], &y[i]);\n\t\tr1[i] = (x[i]-x1)*(x[i]-x1) + (y[i]-y1)*(y[i]-y1);\n\t\tr2[i] = (x[i]-x2)*(x[i]-x2) + (y[i]-y2)*(y[i]-y2);\n\t}\n\tfor(i=0; i<n; i++){\n\t\tmax = 0;\n\t\tfor(j=0; j<n; j++){\n\t\t\tif(i==j) continue;\n\t\t\tif(r1[j] > r1[i] && r2[j] > max) max = r2[j];\n\t\t}\n\t\tif(max + r1[i] < min) min = max + r1[i];\n\t}\n\tprintf(\"%lld\", min);\n\t\n}\n", "fixed": "#include <stdio.h>\n\nlong long x[2005];\nlong long y[2005];\nlong long r1[2005];\nlong long r2[2005];\n\nint main(){\n\tint n;\n\tlong long x1, y1;\n\tlong long x2, y2;\n\tint i, j;\n\tlong long max1, max2;\n\tlong long min=10000000000000000;\n\tscanf(\"%d%lld%lld%lld%lld\", &n, &x1, &y1, &x2, &y2);\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%lld%lld\", &x[i], &y[i]);\n\t\tr1[i] = (x[i]-x1)*(x[i]-x1) + (y[i]-y1)*(y[i]-y1);\n\t\tr2[i] = (x[i]-x2)*(x[i]-x2) + (y[i]-y2)*(y[i]-y2);\n\t}\n\tfor(i=0; i<n; i++){\n\t\tmax1 = 0;\n\t\tmax2 = 0;\n\t\tfor(j=0; j<n; j++){\n\t\t\tif(i==j) continue;\n\t\t\tif(r1[j] > r1[i] && r2[j] > max1) max1 = r2[j];\n\t\t\tif(r2[j] > r2[i] && r1[j] > max2) max2 = r1[j];\n\t\t}\n\t\tif(max1 + r1[i] < min) min = max1 + r1[i];\n\t\tif(max2 + r2[i] < min) min = max2 + r2[i];\n\t}\n\tprintf(\"%lld\", min);\n\t\n}\n"}
{"similarity_score": 0.6371428571428571, "equal_cnt": 17, "replace_cnt": 6, "delete_cnt": 8, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "bdf09bc2559eda89b22774e20113deba", "bug_code_uid": "369dffe0b999bc41649ff3ed6d315447", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "b774051210f3dbb859332aa29266bddf", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/* \n * File:   main.c\n * Author: mariem\n *\n * Created on November 21, 2017, 9:07 PM\n */\n\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n * \n */\nint main() {\n    \n    int n,j,a;\n    int i;\n    int tab[100];\n    \n    \n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++)\n       \n       {scanf(\"%d\",&a);\n        tab[i]=a;\n        if (a%2==0)\n            j++;\n    \n       \n        }\n    \n    if (j==1)\n        \n      {for (i=0;i<n;i++)\n            if ((tab[i]%2)==0)\n                {printf(\"%d\",(i+1));\n                 }\n       }          \n            \n    else\n       {for (i=0;i<n;i++)\n            {if ((tab[i])%2!=0)\n              printf(\"%d\",(i+1));\n              }\n        }\n     \n    \n    \n    \n    \n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\n    int n,a,i,k,j=0;\n    int tab[100];\n\n\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++)\n\n       {scanf(\"%d\",&a);\n        tab[i]=a;\n        if (a%2==0)\n            j++;\n       }\n\n    if (j==1)\n       {\n         for (i=0;i<n;i++)\n            {if ((tab[i])%2==0)\n              printf(\"%d\",(i+1));\n            }\n        }\n\n    else\n       {for (i=0;i<n;i++)\n            {if ((tab[i])%2!=0)\n              printf(\"%d\",(i+1));\n              }\n        }\n\n\n\n\n\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.36753246753246754, "equal_cnt": 19, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "f66452a63a872d26c323e61b9fea9019", "bug_code_uid": "40198606eac4b0ff9b24187777fdb7a3", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "c4686cc248552e632437238c90deec8d", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint max(int a,int b)\n{\n    if(a>b)\n    return a;\n    else \n    return b;\n}\nint min(int a,int b)\n{\n    if(a<b)\n    return a;\n    else\n    return b;\n}\ntypedef struct\n{\n    int x;\n    int y;\n}elem;\nint compare (const void * a, const void * b)\n{\n    elem *p=(elem *) a;\n    elem *q=(elem *) b;\n    if(p->x > q->x)\n    return(1);\n    else if(p->x < q->x)\n    return(-1);\n    else\n    return(p->y > q->y);\n}\nint main()\n{\n    int n,i,ans;\n    scanf(\"%d\",&n);\n    elem a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d %d\",&a[i].x,&a[i].y);\n    qsort(a,n,sizeof(elem),compare);\n    ans=min(a[0].x,a[0].y);\n    for(i=1;i<n;i++)\n    {\n        if(a[i].y>=ans)\n        ans=a[i].y;\n        else\n        ans=a[i].x;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\ntypedef struct\n{\n    int x;\n    int y;\n}elem;\nint compare(const void *a,const void *b)\n{\n    elem *p=(elem *) a;\n    elem *q=(elem *) b;\n    if((p->x > q->x)||((p->x == q->x)&&(p->y >= q->y)))\n    return 1;\n    else\n    return -1;\n}\n/*int compare (const void * a, const void * b)\n{\n    elem *p=(elem *) a;\n    elem *q=(elem *) b;\n    if((p->x > q->x)||(p->x==q->x&&p->y>=q->y))\n    return 1;\n    return -1;\n}*/\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    elem a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i].x,&a[i].y);\n    }\n    qsort(a,n,sizeof(elem),compare);\n    int ans=a[0].y;\n    for(i=1;i<n;i++)\n    {\n        if(a[i].y>=ans)\n        ans=a[i].y;\n        else\n        ans=a[i].x;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}"}
{"similarity_score": 0.9992337164750957, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2ed949b00b7ff7e514e4c809635bad6f", "bug_code_uid": "bd03f6299ca5ad11d6bce0c06afd1733", "src_uid": "a75b8b9b99b800762645ef7c3bc29905", "apr_id": "45c50ca8cb22e91fa0b04088b01204b7", "difficulty": 1500, "tags": ["dp", "greedy", "two pointers", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint timee[105],low[105],high[105];\nint main(){\n\tint n,num,t,Min,Max,flag = 0,count = 0,term;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tcount = 0;\n\t\tscanf(\"%d %d\",&num,&t);\n\t\tint tmax,tmin;\n\t\ttmax = tmin = t;\n\t\tfor(int i = 1;i <= num;i++)scanf(\"%d %d %d\",&timee[i],&low[i],&high[i]);\n\t\tfor(int i = 1;i <= num;i++){\n\t\t\tterm = timee[i];\n\t\t\tif(i > 1)term = timee[i] - timee[i - 1];\n\t\t\tMin = tmin - term;\n\t\t\tMax = tmax + term;\n\t\t\tif(Min > high[i])break;\n\t\t\tif(Max < low[i])bareak;\n\t\t\ttmin = low[i] > Min ? low[i] : Min;\n\t\t\ttmax = high[i] < Max ? high[i] : Max;\n\t\t\tcount++;\n\t\t}\n\t\tif(count == num)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint timee[105],low[105],high[105];\nint main(){\n\tint n,num,t,Min,Max,flag = 0,count = 0,term;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tcount = 0;\n\t\tscanf(\"%d %d\",&num,&t);\n\t\tint tmax,tmin;\n\t\ttmax = tmin = t;\n\t\tfor(int i = 1;i <= num;i++)scanf(\"%d %d %d\",&timee[i],&low[i],&high[i]);\n\t\tfor(int i = 1;i <= num;i++){\n\t\t\tterm = timee[i];\n\t\t\tif(i > 1)term = timee[i] - timee[i - 1];\n\t\t\tMin = tmin - term;\n\t\t\tMax = tmax + term;\n\t\t\tif(Min > high[i])break;\n\t\t\tif(Max < low[i])break;\n\t\t\ttmin = low[i] > Min ? low[i] : Min;\n\t\t\ttmax = high[i] < Max ? high[i] : Max;\n\t\t\tcount++;\n\t\t}\n\t\tif(count == num)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.957592339261286, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "bbc9f90b52259b56600433348c022c8f", "bug_code_uid": "52141093a913cd6366372638cfa34f89", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "3a52270dd13c7694db30d202235d0244", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\ntypedef int card[1001];\ntypedef struct {\n                card kartu;\n                int byk;\n} kkartu;\n\nvoid cek (kkartu X);\n\nint main()\n{\n    kkartu X;\n    int i;\n\n    scanf (\"%d\", &X.byk);\n    for (i = 1; i <= X.byk; i++) {\n        scanf (\"%d\", &X.kartu[i]);\n    }\n    cek (X);\n\n    return 0;\n}\n\nvoid cek (kkartu X)\n{\n    int i,j;\n    int lima;\n    int nol;\n\n    lima = 0;\n    nol = 0;\n    for (i = 1; i <= X.byk; i++) {\n        if (X.kartu[i] == 5) lima += 1;\n        if (X.kartu[i] == 0) nol += 1;\n    }\n    if ((lima < 9) || (nol < 1)) {\n        printf (\"0\");\n    } else {\n        for (i = 1; i <= 9 * (lima/9); i++) printf (\"5\");\n        for (i = 1; i <= nol; i++) printf (\"0\");\n    }\n}\n", "fixed": "#include <stdio.h>\n\ntypedef int card[1001];\ntypedef struct {\n                card kartu;\n                int byk;\n} kkartu;\n\nvoid cek (kkartu X);\n\nint main()\n{\n    kkartu X;\n    int i;\n\n    scanf (\"%d\", &X.byk);\n    for (i = 1; i <= X.byk; i++) {\n        scanf (\"%d\", &X.kartu[i]);\n    }\n    cek (X);\n\n    return 0;\n}\n\nvoid cek (kkartu X)\n{\n    int i,j;\n    int lima;\n    int nol;\n\n    lima = 0;\n    nol = 0;\n    for (i = 1; i <= X.byk; i++) {\n        if (X.kartu[i] == 5) lima += 1;\n        if (X.kartu[i] == 0) nol += 1;\n    }\n    if (nol < 1) {\n        printf (\"-1\");\n    } else if (lima < 9) {\n        printf (\"0\");\n    } else {\n        for (i = 1; i <= 9 * (lima/9); i++) printf (\"5\");\n        for (i = 1; i <= nol; i++) printf (\"0\");\n    }\n}\n"}
{"similarity_score": 0.9984472049689441, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e5795c47f6b6e0ff7ec2886b982258ac", "bug_code_uid": "09514a5121db44f7584f558ea4783446", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "d6b49c0af882080d0c10dc7d33074a55", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main() {\r\n    int i, j, a, b, c, test=0, d;\r\n    scanf(\"%d\", &a);\r\n    int array[a];\r\n    if(a>=1 && a<=100){\r\n    for(i=0;i<a;i++)\r\n    {\r\n        scanf(\"%d\", &b);\r\n        if(b>=3 && b<=pow(10,5)){\r\n        for(j=0;j<b;j++)\r\n        {\r\n            scanf(\"%d\", &c);\r\n            if(c>=1 && c<=pow(10,9)){\r\n            if(c%2==0)\r\n            test+=1;\r\n            else\r\n            test+=0;\r\n        }}\r\n        if(test>=(b/2))\r\n        array[i]=b-test;\r\n        else\r\n        array[i]=test;\r\n        test=0;\r\n        }\r\n    }\r\n    for(i=0;i<a;i++)\r\n    printf(\"%d\\n\", array[i]);\r\n    return 0;\r\n}\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n \r\nint main() {\r\n    int i, j, a, b, c, test=0, d;\r\n    scanf(\"%d\", &a);\r\n    int array[a];\r\n    if(a>=1 && a<=100){\r\n    for(i=0;i<a;i++)\r\n    {\r\n        scanf(\"%d\", &b);\r\n        if(b>=3 && b<=pow(10,5)){\r\n        for(j=0;j<b;j++)\r\n        {\r\n            scanf(\"%d\", &c);\r\n            if(c>=1 && c<=pow(10,9)){\r\n            if(c%2==0)\r\n            test+=1;\r\n            else\r\n            test+=0;\r\n        }}\r\n        if(test>(b/2))\r\n        array[i]=b-test;\r\n        else\r\n        array[i]=test;\r\n        test=0;\r\n        }\r\n    }\r\n    for(i=0;i<a;i++)\r\n    printf(\"%d\\n\", array[i]);\r\n    return 0;\r\n}\r\n}"}
{"similarity_score": 0.9823493609251369, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "29614f7b653627406d9e290710bfcaab", "bug_code_uid": "446e590b66a94c7a45774df7a7261ca2", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "c1ccabe704ac8347affdcbdc5d364715", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, i;\n\tint po = 0, ne = 0, ze = 0;\n\t\n\tscanf(\"%d\", &n);\n\t\n\tint a[n], posi[n], nega[n], zero[n];\n\t\n\tfor (i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\t\n\t\t\n\tfor (i=0; i<n; i++)\n\t{\t\t\n\t\tif (a[i] > 0)\n\t\t{\n\t\t\tposi[po] = a[i];\n\t\t\tpo++;\n\t\t}\n\t\t\n\t\telse if (a[i] == 0)\n\t\t{\n\t\t\tzero[ze] = a[i];\n\t\t\tze++;\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tnega[ne] = a[i];\n\t\t\tne++;\n\t\t}\t\t\t\n\t}\n\t\n\tif (po == 0)\n\t{\n\t\tposi[0] = nega[ne-1];\n\t\tposi[1] = nega[ne-2];\n\t\tpo = 2;\n\t\tne = ne - 2;\n\t}\n\t\t\n\tif (ne%2 == 0)\n\t{\n\t\tzero[ze] = nega[n-1];\n\t\tne = ne-1;\n\t\tze = ze+1;\n\t}\n\t\t\n\tprintf(\"%d \", ne);\n\tfor (i=0; i<ne; i++)\n\t{\n\t\tprintf(\"%d \", nega[i]);\n\t}\n\t\n\t\n\tprintf(\"\\n%d \", po);\n\tfor (i=0; i<po; i++)\n\t{\n\t\tprintf(\"%d \", posi[i]);\n\t}\n\t\n\tprintf(\"\\n%d \", ze);\n\tfor (i=0; i<ze; i++)\n\t{\n\t\tprintf(\"%d \", zero[i]);\n\t}\n\t\n\treturn 0;\n}\t\n\t\n\t\t\n\t\n\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, i;\n\tint po = 0, ne = 0, ze = 0;\n\t\n\tscanf(\"%d\", &n);\n\t\n\tint a[n], posi[n], nega[n], zero[n];\n\t\n\tfor (i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\t\n\t\t\n\tfor (i=0; i<n; i++)\n\t{\t\t\n\t\tif (a[i] > 0)\n\t\t{\n\t\t\tposi[po] = a[i];\n\t\t\tpo++;\n\t\t}\n\t\t\n\t\telse if (a[i] == 0)\n\t\t{\n\t\t\tzero[ze] = a[i];\n\t\t\tze++;\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tnega[ne] = a[i];\n\t\t\tne++;\n\t\t}\t\t\t\n\t}\n\t\n\tif (po == 0)\n\t{\n\t\tposi[0] = nega[ne-1];\n\t\tposi[1] = nega[ne-2];\n\t\tpo = 2;\n\t\tne = ne - 2;\n\t}\n\t\t\n\tif (ne%2 == 0)\n\t{\n\t\tzero[ze] = nega[ne-1];\n\t\tne--;\n\t\tze++;\n\t}\n\t\t\n\tprintf(\"%d \", ne);\n\tfor (i=0; i<ne; i++)\n\t{\n\t\tprintf(\"%d \", nega[i]);\n\t}\n\t\n\t\n\tprintf(\"\\n%d \", po);\n\tfor (i=0; i<po; i++)\n\t{\n\t\tprintf(\"%d \", posi[i]);\n\t}\n\t\n\tprintf(\"\\n%d \", ze);\n\tfor (i=0; i<ze; i++)\n\t{\n\t\tprintf(\"%d \", zero[i]);\n\t}\n\t\n\treturn 0;\n}\t\n\t\n\t\t\n\t\n\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n"}
{"similarity_score": 0.9978165938864629, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5fe7938e3d6a3941ce6334216126d19d", "bug_code_uid": "00f1b15c891e950709caa4fc4a678de1", "src_uid": "d3684227d1f12cf36dc302e1ffee8370", "apr_id": "81a9a45256760a84eca3d1ca3ec9520f", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n\tlong int n, arr[1000];\n\tlong long int i,sum = 0,flag = 0,j=0,k=0;\n\tlong long int temp1 = 0, temp2 = 0;\n\t\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\t\t\n\tfor(i=0;i<n;i++)\n\t\tsum+=arr[i];\n\t\n\tif(sum>0)\n\t\tflag = 1;\n\telse if(sum<0)\n\t\tflag = 2;\n\telse if(sum == 0)\n\t{\n\t\twhile(temp1 + temp2 == 0)\n\t\t{\n\t\t\tfor(i=j;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] > 0)\n\t\t\t\t{\n\t\t\t\t\ttemp1 = arr[i];\n\t\t\t\t\tj=i;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=k;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] < 0)\n\t\t\t\t{\n\t\t\t\t\ttemp2 = arr[i];\n\t\t\t\t\tk=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(temp1 + temp2 > 0) \n\t\t\t\tflag = 1;\n\t\t\telse if(temp1 + temp2 < 0) \n\t\t\t\tflag = 2;\n\t\t\tj++;\n\t\t\tk++;\n\t\t\tif( j == n || k == n)\n\t\t\t{\n\t\t\t\tif (arr[n-1] > 0) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(arr[n-1] < 0) {\n\t\t\t\t\tflag = 2;\n\t\t\t\t\tbreak\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t}\n\tif (flag == 1)\n\t\tprintf(\"first\");\n\telse if(flag == 2)\n\t\tprintf(\"second\");\n\t\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\n\tlong int n, arr[200000];\n\tlong long int i,sum = 0,flag = 0,j=0,k=0;\n\tlong long int temp1 = 0, temp2 = 0;\n\t\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\t\t\n\tfor(i=0;i<n;i++)\n\t\tsum+=arr[i];\n\t\n\tif(sum>0)\n\t\tflag = 1;\n\telse if(sum<0)\n\t\tflag = 2;\n\telse if(sum == 0)\n\t{\n\t\twhile(temp1 + temp2 == 0)\n\t\t{\n\t\t\tfor(i=j;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] > 0)\n\t\t\t\t{\n\t\t\t\t\ttemp1 = arr[i];\n\t\t\t\t\tj=i;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=k;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] < 0)\n\t\t\t\t{\n\t\t\t\t\ttemp2 = arr[i];\n\t\t\t\t\tk=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(temp1 + temp2 > 0) \n\t\t\t\tflag = 1;\n\t\t\telse if(temp1 + temp2 < 0) \n\t\t\t\tflag = 2;\n\t\t\tj++;\n\t\t\tk++;\n\t\t\tif( j == n || k == n)\n\t\t\t{\n\t\t\t\tif (arr[n-1] > 0) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(arr[n-1] < 0) {\n\t\t\t\t\tflag = 2;\n\t\t\t\t\tbreak\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t}\n\tif (flag == 1)\n\t\tprintf(\"first\");\n\telse if(flag == 2)\n\t\tprintf(\"second\");\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.99867197875166, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b7d30c0ce8a5c67b0a13941d7dd7f42c", "bug_code_uid": "8881760c48b3e456a745b0017af9a63d", "src_uid": "be8be333d036f6c19b9a6eb33f96ba75", "apr_id": "45086901864407c7b0f80dd6bd4d3d21", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n\n\tint n,k,a,i[100005],res,b,tong[1000005],min,max,c;\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tmemset(tong,0,sizeof(tong));\n\tmin = 1000005;\n\tmax = 0;\n\tfor(a = 1;a <= n;a ++)\n\t{\n\t\tscanf(\"%d\",&i[a]);\n\t\ttong[i[a]] ++;\n\t\tif(i[a] > max) max = i[a];\n\t\tif(i[a] < min) min = i[a];\n\t}\n\tc = 0;\n\tfor(a = min;a <= max;a ++)\n\tif(tong[a] > 0)\n\t{\n\t\tfor(b = 1;b <= tong[a];b ++)\n\t\t{\n\t\t\tc ++;\n\t\t\ti[c] = a;\n\t\t}\n\t}\n\tres = n;\n\ta = 0;\n\twhile(a < n)\n\t{\n\t\ta ++;\n\t\tif(i[a+1] > i[a])\n\t\t{\n\t\t\tif(i[a+1] - i[a] <= k)\n\t\t\t{\n\t\t\t\tres --;\n\t\t\t}\n\t\t}\n\t\telse if(i[a+1] == i[a])\n\t\t{\n\t\t\tb = a;\n\t\t\twhile(i[a+1] == i[a] && a < n) a ++;\n\t\t\tif(a < n && i[a+1] - i[a] <= k)\n\t\t\t{\n\t\t\t\tres -= (a - b + 1);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n\n\tint n,k,a,i[200005],res,b,tong[1000005],min,max,c;\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tmemset(tong,0,sizeof(tong));\n\tmin = 1000005;\n\tmax = 0;\n\tfor(a = 1;a <= n;a ++)\n\t{\n\t\tscanf(\"%d\",&i[a]);\n\t\ttong[i[a]] ++;\n\t\tif(i[a] > max) max = i[a];\n\t\tif(i[a] < min) min = i[a];\n\t}\n\tc = 0;\n\tfor(a = min;a <= max;a ++)\n\tif(tong[a] > 0)\n\t{\n\t\tfor(b = 1;b <= tong[a];b ++)\n\t\t{\n\t\t\tc ++;\n\t\t\ti[c] = a;\n\t\t}\n\t}\n\tres = n;\n\ta = 0;\n\twhile(a < n)\n\t{\n\t\ta ++;\n\t\tif(i[a+1] > i[a])\n\t\t{\n\t\t\tif(i[a+1] - i[a] <= k)\n\t\t\t{\n\t\t\t\tres --;\n\t\t\t}\n\t\t}\n\t\telse if(i[a+1] == i[a])\n\t\t{\n\t\t\tb = a;\n\t\t\twhile(i[a+1] == i[a] && a < n) a ++;\n\t\t\tif(a < n && i[a+1] - i[a] <= k)\n\t\t\t{\n\t\t\t\tres -= (a - b + 1);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}"}
{"similarity_score": 0.978, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3973c145cbde9e2f8f931dfb02e1eda7", "bug_code_uid": "d60b9844c7f9cebcfd43f3873a5a42a4", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "5d5474ec158592c68eceb8ad0a922627", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nvoid main()\r\n{\r\n    int t;\r\n    char str[50],chr;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n       scanf(\"%s\\n\",str);\r\n       scanf(\"%c\",&chr);\r\n       int len=strlen(str);\r\n       int temp=0;\r\n       for(int i=0;i<len;i++)\r\n       {\r\n          if(str[i]==chr&&(i%2==0))\r\n          {\r\n               printf(\"YES\\n\");\r\n               temp++;\r\n               break;\r\n          }\r\n       }\r\n       if(temp==0)\r\n          printf(\"NO\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    char str[50],chr;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n       scanf(\"%s\\n\",str);\r\n       scanf(\"%c\",&chr);\r\n       int len=strlen(str);\r\n       int temp=0;\r\n       for(int i=0;i<len;i++)\r\n       {\r\n          if(str[i]==chr&&(i%2==0))\r\n          {\r\n               printf(\"YES\\n\");\r\n               temp++;\r\n               break;\r\n          }\r\n       }\r\n       if(temp==0)\r\n          printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.29666254635352285, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "88d20eb3649d50b4e8f14c91edc13751", "bug_code_uid": "2cc11436901b535f624fde9fe85a94fb", "src_uid": "84bd49becca69e126606d5a2f764dd91", "apr_id": "c88455c819bf7a832da688d7f0bb57f7", "difficulty": 1400, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n  int n, i, b[1123], a[1123], soma, ai, bi;\n  \n  scanf (\"%d\", &n);\n\n  for (i = 0; i < 1000; i++)\n    a[i] = b[i] = 0;\n  \n  for (i = 0; i < n; i++){\n    scanf (\"%d %d\", &ai, &bi);\n    a[ai-1] = 1;\n    if (ai != bi)\n      b[bi-1] = 1;\n  }\n\n  for (i = 0; i < n; i++) \n    if (b[i] && a[i]) a[i] = 0;\n\n  soma = 0;\n  for (i = 0; i < 1000; i++)\n    if (a[i]) soma++;\n\n  printf (\"%d\\n\", soma);\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main ()\n{\n  int n, i, b[123], a[123], soma, ai, bi, j;\n  \n  scanf (\"%d\", &n);\n\n  for (i = 0; i < n; i++)\n    scanf (\"%d %d\", &a[i], &b[i]);\n\n  for (i = 0; i < n; i++)\n      for (j = 0; j < n; j++)\n\tif (a[j] == b[i] && j != i)\n\t  a[j] = -1;\n\n  soma = 0;\n  \n  for (i = 0; i < n; i++)\n    if (a[i] > 0) soma++;\n\n  printf (\"%d\\n\", soma);\n\n  return 0;\n}\n"}
{"similarity_score": 0.6483660130718955, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1cfa916f8f833b41e93c4b78ecdc8364", "bug_code_uid": "4a7d03500848a081d81da554a58c0d6b", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "46cb3bfbe383aaf8d03b742389528fa8", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        unsigned long long int n,i,j,l=0;\r\n        scanf(\"%llu\",&n);\r\n        if(n%2==1) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\",l);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        unsigned long long int n,i,j,l=0;\r\n        scanf(\"%llu\",&n);\r\n        if(n%2==1) printf(\"YES\\n\");\r\n        else\r\n        {\r\n            for(i=n;i>2;i/=2)\r\n            {\r\n                if(i%2==1)\r\n                {\r\n                    l++;\r\n                    break;\r\n                }\r\n            }\r\n            if(l>0) printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6610073571024335, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "cd2c6512e0fb539a158ba2acf9472d1f", "bug_code_uid": "89599f8f1c9474ea13e8dbce1601865a", "src_uid": "8f02891aa9d2fcd1963df3a4028aa5c0", "apr_id": "79a53d8bcd627eb790798ebcf65d10c5", "difficulty": 800, "tags": ["games", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n  int line;\n  scanf(\"%d\",&line);\n  for(int i = 0; i < line; i++){\n    int bob = 0;\n    int alice = 0;\n    char sen[100];\n    scanf(\"%s\",sen);\n    if(strlen(sen) == 1)\n      bob += ((int) sen[0]) - 96;\n    if(strlen(sen) % 2 == 0){\n      for(int j = 0; j < strlen(sen); j++){\n        alice += ((int) sen[j]) - 96;\n      }\n    }else{\n      int min = 26;\n      int index;\n      for(int k = 0; k < strlen(sen); k++){\n        if(((int) sen[k]) - 96 < min){\n          min = ((int) sen[k]) - 96;\n          index = k;\n        }\n      }\n      bob += ((int) sen[index]) - 96;\n      for(int m = 0; m < strlen(sen); m++){\n        if(m != index)\n          alice += ((int)sen[m]) - 96;\n    }\n  }\n\n  if(alice > bob)\n    printf(\"Alice %d\\n\",alice - bob);\n  else\n    printf(\"Bob %d\\n\",bob - alice);\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n  int line;\n  scanf(\"%d\",&line);\n  for(int i = 0; i < line; i++){\n    int bob = 0;\n    int alice = 0;\n    char sen[200001];\n    scanf(\"%s\",sen);\n    if(strlen(sen) % 2 == 0){\n      for(int j = 0; j < strlen(sen); j++){\n        alice += ((int) sen[j]) - 96;\n      }\n    }else{\n      int first = 0;\n      if((int) sen[0] < (int) sen[strlen(sen)-1]){\n        bob += ((int) sen[0]) -96;\n        first = 1;\n      } else\n        bob += ((int) sen[strlen(sen)-1]) -96;\n      int a;\n      int limit;\n      if (first == 0){\n        a = 0;\n        limit = strlen(sen) -1;\n      }else{\n        a = 1;\n        limit = strlen(sen);\n      }\n      for(a ; a < limit; a++){\n        alice += ((int) sen[a]) -96;\n    }\n  }\n\n  if(alice > bob)\n    printf(\"Alice %d\\n\",alice - bob);\n  else\n    printf(\"Bob %d\\n\",bob - alice);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.7848101265822784, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6a93900437836bc6146cb5a6b26898ec", "bug_code_uid": "af1122e565c59d5e5052d0e4f35ce217", "src_uid": "f98d1d426f68241bad437eb221f617f4", "apr_id": "a4ef54641e1bdd92f7af775a98a6d80f", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <math.h>\nint main(void){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,k;\n        scanf(\"%d%d\",&n,&k);\n        if (n-k>=0) printf(\"0\\n\");\n        else printf(\"%d\\n\",abs(n-k));\n   }\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(void){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,k;\n        scanf(\"%d%d\",&n,&k);\n        int OB = n-k;\n        if (n-k >=0)\n            if ((n-k )%2 == 0)\n                printf(\"0\\n\");\n            else printf(\"1\\n\");\n        else printf(\"%d\\n\",abs(n-k));\n   }\n}"}
{"similarity_score": 0.9987113402061856, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4f115402edab0c6a00277e1375f0cb2c", "bug_code_uid": "6d57ca66557f9a919da8c12b326cadf7", "src_uid": "86a2e0854f9faf0b119d0d5e4b8fe952", "apr_id": "fe64403c8eb4a04d6bca966c98dac1b4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0; i<t; i++){\r\n        char text1[50];\r\n        char text2[50];\r\n        int len;\r\n        scanf(\"%d\",&len);\r\n        scanf(\"%s\",text1);\r\n        scanf(\"%s\",text2);\r\n        \r\n        int flag=0;\r\n        \r\n        for (int j=0; j<len; j++){\r\n            if (text1[j]=='R' && text2[j]!='R'){\r\n                flag = -1;\r\n                break;\r\n            }\r\n            if (text2[j]=='R' && text1[j]!='R'){\r\n                flag = -1;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (flag==0){\r\n            printf(\"%s\\n\", \"Yes\");\r\n        }\r\n        else{\r\n            printf(\"%s\\n\", \"NO\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0; i<t; i++){\r\n        char text1[500];\r\n        char text2[500];\r\n        int len;\r\n        scanf(\"%d\",&len);\r\n        scanf(\"%s\",text1);\r\n        scanf(\"%s\",text2);\r\n        \r\n        int flag=0;\r\n        \r\n        for (int j=0; j<len; j++){\r\n            if (text1[j]=='R' && text2[j]!='R'){\r\n                flag = -1;\r\n                break;\r\n            }\r\n            if (text2[j]=='R' && text1[j]!='R'){\r\n                flag = -1;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (flag==0){\r\n            printf(\"%s\\n\", \"Yes\");\r\n        }\r\n        else{\r\n            printf(\"%s\\n\", \"NO\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7232219365895458, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3a4521f133b635223331684da6c006fc", "bug_code_uid": "60024326dab33ccf43bcac8e6e73dcb8", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "e653f49c2b082e495c7a8374d2333870", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,q;\n\tscanf(\"%d\",&t);\n\tint a[t],b[t];\n\tfor (int i=0;i<t;i++) \n\t\tscanf(\"%d\",&a[i]);\n\tb[0]=a[0];\n\tfor (int i=1;i<t;i++) \n\t\tb[i]=a[i]+b[i-1];\n//\tfor(int i=0;i<t;i++)\n//\t\tprintf(\"%d \",b[i]);\n//\tprintf(\"\\n\");\n\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint x,ans;\n                 scanf(\"%d\",&x);\n\t\t for(int i=0;i<t;i++)\n\t\t { \n\t\t\t if(x<=b[0])\n\t\t\t {\n\t\t\t\t ans=1;\n\t\t\t\t break;\n\t\t\t }\n\t\t\t else if(x>=b[t-1])\n\t\t\t {\n\t\t\t\t ans=t;\n\t\t\t\t break;}\n\t\t\t else if(x>b[i] && x<=b[i+1])\n\t\t\t {\n\t\t\t\t ans=i+2;\n\t\t\t\t break;\n\t\t\t }\n\t\t }\n\t\t printf(\"%d\\n\",ans);\n\n\t}\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,q;\n\tscanf(\"%d\",&t);\n\tint a[t],b[t];\n\tfor (int i=0;i<t;i++) \n\t\tscanf(\"%d\",&a[i]);\n\tb[0]=a[0];\n\tfor (int i=1;i<t;i++) \n\t\tb[i]=a[i]+b[i-1];\n//\tfor(int i=0;i<t;i++)\n//\t\tprintf(\"%d \",b[i]);\n//\tprintf(\"\\n\");\n\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint x,ans,l=0,r=t-1,m;\n                 scanf(\"%d\",&x);\n\t\t  \n\t\t\t if(x<=b[0])\n\t\t\t \n\t\t\t\t ans=1;\n\t\t\t\t \n\t\t\t \n\t\t\t else if(x>=b[t-1])\n\t\t\t \n\t\t\t\t ans=t;\n\t\t\t else\n\t\t\t {\t \n\t\t\t while(l<=r)\n\t\t\t {\n\t\t\t\t m=(l+r)/2;\n\t\t\t\t if(b[m]>=x)\n\t\t\t\t {\n\t\t\t\t\t ans=m+1;\n\t\t\t\t\t r=m-1;\n\t\t\t\t }\n\t\t\t\t else \n\t\t\t\t\t l=m+1;\n\t\t\t }\n\t\t\t }\n\t\t \n\t\t printf(\"%d\\n\",ans);\n\n\t}\n\n\n}\n"}
{"similarity_score": 0.9980430528375733, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "98eb3c31703f6bac4bfc3f9ad6e8b50e", "bug_code_uid": "5888248296a5c5cfc3cff886f1894ede", "src_uid": "f13f27a131b9315ebbb8688e2f43ddde", "apr_id": "bee57e7e01d1c907e1cdac314541ff00", "difficulty": 1600, "tags": ["binary search", "ternary search"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint n;\ndouble x[60005], v[60005];\ndouble Calc(double midX) {\n\tdouble ret;\n\tint i;\n\tret = 0;\n\tfor (i = 1; i <= n; ++i)\n\t\tif (fabs((midX - x[i]) / v[i]) > ret)\n\t\t\tret = fabs((midX - x[i]) / v[i]);\n\treturn ret;\n}\n\nint main(int argc, char *argv[]) {\n\tint i;\n\tdouble nowL, nowR, midL, midR;\n\tscanf(\"%d\", &n);\n\tnowL = 1e0;\n\tnowR = 1e+9;\n\tfor (i = 1; i <= n; ++i) {\n\t\tscanf(\"%lf\", &x[i]);\n\t\tif (x[i] < nowL) nowL = x[i];\n\t\tif (x[i] > nowR) nowR = x[i];\n\t}\n\tfor (i = 1; i <= n; ++i) scanf(\"%lf\", &v[i]);\n\tfor (; nowR - nowL > 1e-12; ) {\n\t\tmidL = nowL + (nowR - nowL) / 3;\n\t\tmidR = nowR - (nowR - nowL) / 3;\n\t\tif (Calc(midL) < Calc(midR))\n\t\t\tnowR = midR;\n\t\telse\n\t\t\tnowL = midL;\n\t}\n\tprintf(\"%.12f\\n\", Calc((midL + midR) / 2));\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint n;\ndouble x[60005], v[60005];\ndouble Calc(double midX) {\n\tdouble ret;\n\tint i;\n\tret = 0;\n\tfor (i = 1; i <= n; ++i)\n\t\tif (fabs((midX - x[i]) / v[i]) > ret)\n\t\t\tret = fabs((midX - x[i]) / v[i]);\n\treturn ret;\n}\n\nint main(int argc, char *argv[]) {\n\tint i;\n\tdouble nowL, nowR, midL, midR;\n\tscanf(\"%d\", &n);\n\tnowL = 1e0;\n\tnowR = 1e+9;\n\tfor (i = 1; i <= n; ++i) {\n\t\tscanf(\"%lf\", &x[i]);\n\t\tif (x[i] < nowL) nowL = x[i];\n\t\tif (x[i] > nowR) nowR = x[i];\n\t}\n\tfor (i = 1; i <= n; ++i) scanf(\"%lf\", &v[i]);\n\tfor (; nowR - nowL > 1e-8; ) {\n\t\tmidL = nowL + (nowR - nowL) / 3;\n\t\tmidR = nowR - (nowR - nowL) / 3;\n\t\tif (Calc(midL) < Calc(midR))\n\t\t\tnowR = midR;\n\t\telse\n\t\t\tnowL = midL;\n\t}\n\tprintf(\"%.12f\\n\", Calc((midL + midR) / 2));\n\treturn 0;\n}"}
{"similarity_score": 0.9883116883116884, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "caa73864e1302add96a5e4b30c99bcb8", "bug_code_uid": "45a98df47c4367f7355e50cb88b92863", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "2f6d86c6a28c9722f7d8f0ddf68f434c", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<limits.h>\n#include<assert.h>\n#include<stdbool.h>\n#include<stddef.h>\n#include<stdint.h>\n#include<string.h>\n#include<unistd.h>\n#include<stdlib.h>\n#include<iostream>\n\n#include<ctype.h>\n#include<time.h>\ntypedef long long ll;\n#define pi 3.14159\n//using namespace std;\nint main()\n{ //while(1){\nll x,sum=0;scanf(\"%lld\",&x); int a[x];\n for(int i=0;i<x;i++){scanf(\"%lld\",&a[i]);\n        sum+=a[i];}\n    ll t=sum;\n  //  printf(\"%lld\\t%lld\\n\",t,sum);\n    \n    for(int i=0;i<x-1;i++)\n  {  scanf(\"%lld\",&a[i]);\n   t-=a[i]; }\n   // printf(\"%lld\\t%lld\\n\",t,sum);\n    \n    \n    \n    for(int i=0;i<x-2;i++)\n  {  scanf(\"%lld\",&a[i]);\n        sum-=a[i]; }\n    ll q=sum-t;\n        printf(\"%lld\\n%lld\\n\",t,q);\n        \n   // */\n        //}\n    \nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<limits.h>\n#include<assert.h>\n#include<stdbool.h>\n#include<stddef.h>\n#include<stdint.h>\n#include<string.h>\n#include<unistd.h>\n#include<stdlib.h>\n\n\n#include<ctype.h>\n#include<time.h>\ntypedef long long ll;\n#define pi 3.14159\n//using namespace std;\nint main()\n{ //while(1){\nll x,sum=0;scanf(\"%lld\",&x); int a[x];\n for(int i=0;i<x;i++){scanf(\"%lld\",&a[i]);\n        sum+=a[i];}\n    ll t=sum;\n  //  printf(\"%lld\\t%lld\\n\",t,sum);\n    \n    for(int i=0;i<x-1;i++)\n  {  scanf(\"%lld\",&a[i]);\n   t-=a[i]; }\n   // printf(\"%lld\\t%lld\\n\",t,sum);\n    \n    \n    \n    for(int i=0;i<x-2;i++)\n  {  scanf(\"%lld\",&a[i]);\n        sum-=a[i]; }\n    ll q=sum-t;\n        printf(\"%lld\\n%lld\\n\",t,q);\n        \n   // */\n        //}\n    \nreturn 0;\n}"}
{"similarity_score": 0.40865800865800866, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "73778acc90ad52fd6611a7c8283f5a68", "bug_code_uid": "aa9722988f3742c78ee8491d5385cdbb", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "47980df657f173b07472b5dcf63fccc4", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n         int i,j,c=0,n,sum=0;\n         int arr[n][3];\n         scanf(\"%d\",&n);\n         for(i=0;i<n;i++)\n         {\n                  for(j=0;j<3;j++)\n                  {\n                           scanf(\"%d\",&arr[i][j]);\n                  }\n                  for(j=0;j<3;j++)\n                  {\n                           sum+=arr[i][j];\n                  }\n                  if(sum==2)\n                  {\n                           c++;\n                  }\n         }\n         printf(\"%d\",c);\n         return 0;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n         int i,j,c=0,sum,n;\n         scanf(\"%d\",&n);\n         int arr[n][3];\n         for(i=0;i<n;i++)\n         {\n                  sum=0;\n                  for(j=0;j<3;j++)\n                  {\n                           scanf(\"%d\",&arr[i][j]);\n                  }\n                  for(j=0;j<3;j++)\n                  {\n                           sum+=arr[i][j];\n                  }\n                  if(sum>=2)\n                  {\n                           c++;\n                  }\n         }\n         printf(\"%d\",c);\n         return 0;\n}"}
{"similarity_score": 0.43795620437956206, "equal_cnt": 23, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 9, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "d32cc9cce42cbfa2b6de4b17db61b497", "bug_code_uid": "1feb9026ba7ea9fa55ced4b6c910d6c8", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "b14f1d7a97509d193fa81dc86442e607", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int a[1000],b,k,i;\n\n    scanf(\"%d %d\",&b,&k);\n\n    for(i=0;i<k;i++)\n        scanf(\"%d\",&a[i]);\n\n    int n=0,m=k;\n\n    for(i=0;i<k;i++){\n        n=n+(pow(b,m)*a[i]);\n        m--;\n    }\n    if(n%2==0)\n    printf(\"Even\\n\");\n    else\n        printf(\"odd\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    long long int  a[100005];\n\n    long long int i,k,b;\n\n    scanf(\"%lld %lld\",&b,&k);\n    for(i=0; i<k; i++)\n        scanf(\"%lld\",&a[i]);\n\n    double temp;\n    long long int n=0,cnt=0;\n    for(i=0; i<k-1; i++)\n    {\n        if(a[i]%2!=0)\n            cnt++;\n    }\n    if(b%2==0)\n    {\n        if(a[k-1]%2==0)\n            printf(\"Even\\n\");\n        else\n            printf(\"Odd\\n\");\n\n    }\n    else\n    {\n        if(a[k-1]%2==0)\n        {\n            if(cnt%2==0)\n                printf(\"Even\\n\");\n            else\n                printf(\"Odd\\n\");\n\n        }\n        else\n        {\n            if(cnt%2==0)\n                printf(\"Odd\\n\");\n            else\n                printf(\"Even\\n\");\n\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8746355685131195, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d8beedeed1f12788473f713e2e469a01", "bug_code_uid": "c4c0a7290f056fb30e56aa7669be1c8b", "src_uid": "d8c4c2d118e07c3b148495fc04d8fcb5", "apr_id": "1ff7e3ba13305047a7d4e2b5401216f4", "difficulty": 1400, "tags": ["games", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nn;\nmain(){\n    FILE *IN=fopen(\"input.txt\",\"r\"),*OUT=fopen(\"output.txt\",\"w\");\n    for(;~fscanf(IN,\"%*d%d\"+!!n*3,&n);fprintf(OUT,\"%d\\n\",~n&1));\n}\n", "fixed": "#include<stdio.h>\nmain(n){\n    FILE *IN=fopen(\"input.txt\",\"r\"),*OUT=fopen(\"output.txt\",\"w\");\n    for(fscanf(IN,\"%*d\");~fscanf(IN,\"%d\",&n);fprintf(OUT,\"%d\\n\",~n&1));\n    return 0;\n}\n"}
{"similarity_score": 0.32702020202020204, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "ac9bc762f75600a538ab9a3d25fe4ee2", "bug_code_uid": "f065eab1583a7921516f8fe3449174f5", "src_uid": "2eb7234904b28b4793b7c482a2370092", "apr_id": "5709c2d8b0b2e2f05adbad992906c9dc", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tlong long int n;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tfor (long long int i=0;i<n;i++)\n\t\tscanf(\"%I64d\",&a[i]);\n\tfor (long long int i=0;i<n;i++)\n\t{\n\t\tlong long int min=a[i];\n\t\tfor (long long int j=i+1;j<n;j++)\n\t\t{\n              if (a[j]<min)\n\t\t\t{\n\t\t\t\tlong long int t=min;\n\t\t\t\tmin=a[j];\n\t\t\t\ta[j]=t;\n\t\t\t}\n\t\t}\n\t\ta[i]=min;\n\t}\n\tlong long int s1=a[n-2]-a[0];\n\tlong long int s2=a[n-1]-a[1];\n\tif (s1<s2)\n\t\tprintf(\"%I64d\",s1);\n\telse\n\t\tprintf(\"%I64d\",s2);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong long int n;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tfor (long long int i=0;i<n;i++)\n\t\tscanf(\"%I64d\",&a[i]);\n\tif (n>3 || n==2)\n\t{\n\tlong long int max=a[0],min=a[0],maxx=0,minn=0;\n\tfor (long long int i=1;i<n;i++)\n\t{\n      if (a[i]<min)\n      \t{\n      \t\tmin=a[i];\n      \t\tminn=i;\n      \t}\n      if (a[i]>max)\n      \t{\n      \t\tmax=a[i];\n      \t\tmaxx=i;\n      \t}\n\t}\n\tlong long int max1=a[0],min1=a[0];\n\tif (minn==0)\n\t\tmin1=a[1];\n\tif (maxx==0)\n\t\tmax1=a[1];\n\tfor (long long int i=1;i<n;i++)\n\t{\n\t\tif (a[i]<=min1 && i!=minn)\n\t\tmin1=a[i];\n\t    if (a[i]>=max1 && i!=maxx)\n\t    \tmax1=a[i];\n\t}\n\tif (max1-min<max-min1)\n\t\tprintf(\"%I64d\\n\",max1-min);\n\telse\n\t\tprintf(\"%I64d\\n\",max-min1);\n    }\n    else\n    {\n    \tlong long int s1=a[2]-a[0],s2=a[2]-a[1],s3=a[1]-a[0];\n    \tif (s1<0)\n    \t\ts1*=(-1);\n    \tif (s2<0)\n    \t\ts2*=(-1);\n    \tif (s3<0)\n    \t\ts3*=(-1);\n        if (s1<=s2 && s1<=s3)\n        \tprintf(\"%I64d\\n\",s1);\n        else if (s2<=s1 && s2<=s3)\n        \tprintf(\"%I64d\\n\",s2);\n        else if (s3<=s2 && s3<=s1)\n        \tprintf(\"%I64d\\n\",s3);\n    \t\n\n    }\n\treturn 0;\n}"}
{"similarity_score": 0.9878787878787879, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f573cbcfec216d1ee0a5eba146e50fa6", "bug_code_uid": "3c946a7b9deea8c56289a4b48af2a814", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "1c2b5fcbc1b3567f16c60c7e72a5ca3b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n  int t;scanf(\"%d\",&t);\nwhile(t--){\nlong long int a;\nscanf(\"%lli\",&a);\nif(a==1){\nprintf(\"%d\\n\",1);}\nelse{\nprintf(\"%lli\\n\",a/2);}}\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n  int t;scanf(\"%d\",&t);\nwhile(t--){\nlong long int a;\nscanf(\"%lli\",&a);\nif(a==1){\nprintf(\"%d\\n\",1);}\nelse{\nprintf(\"%lli\\n\",(a+1)/2);}}\n}"}
{"similarity_score": 0.30196936542669583, "equal_cnt": 22, "replace_cnt": 15, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "4d3e0a8ea582b940b318d0a433ce5bde", "bug_code_uid": "50a59252d763b2c643dda86f69d19da7", "src_uid": "eba76d0491f88ac8d8450e457610b067", "apr_id": "0b1f01a9cf6ca2fd2690312dc4e2e3ac", "difficulty": 1900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    long long n,k,i,sum,last,j;\n    scanf(\"%I64d %I64d\",&n,&k);\n    i=(int)sqrt(n+1);\n    for(; i>=1; i--)\n    {\n        if((n%i)) continue;\n        sum=(i*k*(k-1))/2;\n        last=n-sum;\n        if(last>(k-1)*i)\n        {\n            for(j=1; j<k; j++)\n            {\n                printf(\"%d \",j*i);\n            }\n            printf(\"%d\",last);\n            return 0;\n        }\n\n        sum=(n*k*(k-1))/(2*i);\n        last=n-sum;\n        if(last>(k-1)*(n/i))\n        {\n            for(j=1; j<k; j++)\n            {\n                printf(\"%d \",j*(n/i));\n\n            }\n            printf(\"%d\",last);\n            return 0;\n        }\n    }\n    printf(\"-1\");\n}\n", "fixed": "#include <stdio.h>\n#define max(a,b) a>b?a:b\n\nint main()\n{\n    long long n,k,i,sum,last,j,best=1;\n    scanf(\"%I64d %I64d\",&n,&k);\n\n    if(k*(k+1)>2*n || k>=1000000)\n    {\n            printf(\"-1\");\n            return 0;\n    }\n\n    for(i=1; i*i<=n; i++)\n    {\n        if(!(n%i))\n        {\n            if(n/i>=(k*(k+1))/2)\n            {\n                best=max(best,i);\n            }\n            if(i>=(k*(k+1))/2)\n            {\n                best=max(best,n/i);\n            }\n        }\n    }\n    //printf(\"%lld\\n\",best);\n    //long long p=n/best;\n    for(i=1; i<k; i++)\n    {\n        printf(\"%I64d \",i*best);\n        n-=(i*best);\n    }\n    printf(\"%I64d\",n);\n}\n"}
{"similarity_score": 0.9738766980146291, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "222f91a21eb3f82ca13fd9375c8c39fa", "bug_code_uid": "54adef4d7d4d406008b77c283b164a48", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "da386baa250ffa823ff367705dc4a1ca", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int r,x=1,y=2,z=3,w=4;\r\n        if(r >= 1900){\r\n            printf(\"Division %d\\n\",x);\r\n        }\r\n        else if(r >= 1600 && r <= 1899){\r\n            printf(\"Division %d\\n\",y);\r\n        }\r\n        else if(r >= 1400 && r <= 1599){\r\n            printf(\"Division %d\\n\",z);\r\n        }\r\n        else{\r\n            printf(\"Division %d\\n\",w);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int r,x=1,y=2,z=3,w=4;\r\n        scanf(\"%d\",&r);\r\n        if(r >= 1900){\r\n            printf(\"Division %d\\n\",x);\r\n        }\r\n        else if(r >= 1600 && r <= 1899){\r\n            printf(\"Division %d\\n\",y);\r\n        }\r\n        else if(r >= 1400 && r <= 1599){\r\n            printf(\"Division %d\\n\",z);\r\n        }\r\n        else{\r\n            printf(\"Division %d\\n\",w);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9932432432432432, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "94314f24e3fcdcbd675cd84e44380cba", "bug_code_uid": "63717ff73b885518e175b9be4ad768cd", "src_uid": "43996d7e052aa628a46d03086f9c5436", "apr_id": "90291b9db58b6e3653a6bfc55641e463", "difficulty": 1000, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(%d,&t);\n    while(t--){\n        int n;\n        scanf(%d,&n);\n        if(n==1){printf(\"-1\\n\");}\n        else{\n            printf(\"2\");\n            for(int i=0;i<n-1;i++){\n                printf(\"3\");\n            }printf(\"\\n\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        if(n==1){printf(\"-1\\n\");}\n        else{\n            printf(\"2\");\n            for(int i=0;i<n-1;i++){\n                printf(\"3\");\n            }printf(\"\\n\");\n        }\n    }\n}"}
{"similarity_score": 0.9829012686155544, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "584b7242ebf8c0b4d927e29caa0fc788", "bug_code_uid": "f6c9a57017efead830bd4f1f7e2ce5e5", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "b6642c7ef75f45cf106b5df7b2ec47cc", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\n#define MAX_CITIZENS 100000\n\nint citizens[MAX_CITIZENS];\n\nint cmp_sort( const void* a, const void* b ) {\n  // a - b : ascending sort\n  // b - a : descending sort\n  return (*(int*)b) - (*(int*)a);\n}\n\nint main() {\n  #ifndef ONLINE_JUDGE\n  freopen( \"input.txt\", \"r\", stdin );\n  #endif\n\n  int n, n1, n2;\n  scanf( \"%d %d %d\\n\", &n, &n1, &n2 );\n  for( int i = 0; i < n; ++i ) {\n    scanf( \"%d\", &citizens[i] );\n  }\n\n  qsort( citizens, n, sizeof(int), &cmp_sort );\n\n  int nmax, nmin;\n  if (n1 < n2) {\n    nmin = n1;\n    nmax = n2;\n  } else {\n    nmin = n2;\n    nmax = n1;\n  }\n\n  int sum1min = 0, sum2max = 0;\n  for( int i = 0; i < nmin; ++i ) {\n    sum1min += citizens[i];\n  }\n  for( int i = nmin; i < nmin+nmax; ++i ) {\n    sum2max += citizens[i];\n  }\n\n  float max_average = ((float)sum1min / nmin) + ((float)sum2max / nmax);\n  printf( \"%f\", max_average );\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <inttypes.h>\n\n#define MAX_CITIZENS 100000\n\nint citizens[MAX_CITIZENS];\n\nint cmp_sort( const void* a, const void* b ) {\n  // a - b : ascending sort\n  // b - a : descending sort\n  return (*(int*)b) - (*(int*)a);\n}\n\nint main() {\n  #ifndef ONLINE_JUDGE\n  freopen( \"input.txt\", \"r\", stdin );\n  #endif\n\n  int n, n1, n2;\n  scanf( \"%d %d %d\\n\", &n, &n1, &n2 );\n  for( int i = 0; i < n; ++i ) {\n    scanf( \"%d\", &citizens[i] );\n  }\n\n  qsort( citizens, n, sizeof(int), &cmp_sort );\n\n  int nmax, nmin;\n  if (n1 < n2) {\n    nmin = n1;\n    nmax = n2;\n  } else {\n    nmin = n2;\n    nmax = n1;\n  }\n\n  uint64_t sum1min = 0, sum2max = 0;\n  for( int i = 0; i < nmin; ++i ) {\n    sum1min += citizens[i];\n  }\n  for( int i = nmin; i < nmin+nmax; ++i ) {\n    sum2max += citizens[i];\n  }\n\n  float max_average = ((float)sum1min / nmin) + ((float)sum2max / nmax);\n  printf( \"%f\", max_average );\n}\n"}
{"similarity_score": 0.7982456140350878, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "51dfdc963ace5e662cbd47f9f2d61ca2", "bug_code_uid": "e8a4c9034ff865e9c7c1ed5c3606bf80", "src_uid": "2f659be28674a81f58f5c587b6a0f465", "apr_id": "beb3081e90bc1bae5031c781f4f81de2", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,l=1;\n    scanf(\"%d%d\",&n,&k);\n    if(k>n||k==1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    for(i=0;i<n-k+2;i++)\n    {\n        if(l%2)printf(\"a\");\n        else printf(\"b\");\n        l++;\n    }\n    for(i=0;i<k-2;i++)printf(\"%c\",i+99);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char ch[1000000];\n    long int n,k,i,l=1;\n    scanf(\"%ld%ld\",&n,&k);\n    if(k>n||(k==1&&n!=1))\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    for(i=0;i<(n-k+3);i++)\n    {\n        if(l%2)ch[i]='a';\n        else ch[i]='b';\n        l++;\n    }\n    for(i=0;i<k-2;i++,l++)ch[l-2]='c'+i;\n    ch[n]='\\0';\n    printf(\"%s\",ch);\n    return 0;\n}\n"}
{"similarity_score": 0.9963985594237695, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8e767ffd189bd719558bcbd437e7c51a", "bug_code_uid": "4dd0a7830271d48864bcc16d75eaf7ff", "src_uid": "513234db1bab98c2c2ed6c7030c1ac72", "apr_id": "599efa9f9f13afd208b501cc82136188", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint a[8]={0},n,x;\n\tscanf(\"%d\", &n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\", &x);\n\t\ta[x]++;\n\t}\n\tif(a[7]>0||a[5]>0||a[2]<a[4]||a[3]>a[6]||a[6]-a[3]>a[2]-a[4]||a[1]!=a[2]+a[3])\n\t\tprintf(\"-1\");\n\telse {\n\t\tfor(int i=a[4];i>0;i--,a[2]--)\n\t\t\tprintf(\"1 2 4\\n\");\n\t\tif(a[3]!=0)\n\t\tfor(int i=a[3];i>0;i--,a[6]--)\n\t\t\tprintf(\"1 3 6\\n\");\n\t\tfor(int i=a[6];i>0;i--)\n\t\t\tprintf(\"1 2 6\\n\");\n\t}\n\t\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint a[8]={0},n,x;\n\tscanf(\"%d\", &n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\", &x);\n\t\ta[x]++;\n\t}\n\tif(a[7]>0||a[5]>0||a[2]<a[4]||a[3]>a[6]||a[6]-a[3]!=a[2]-a[4]||a[1]!=a[2]+a[3])\n\t\tprintf(\"-1\");\n\telse {\n\t\tfor(int i=a[4];i>0;i--,a[2]--)\n\t\t\tprintf(\"1 2 4\\n\");\n\t\tif(a[3]!=0)\n\t\tfor(int i=a[3];i>0;i--,a[6]--)\n\t\t\tprintf(\"1 3 6\\n\");\n\t\tfor(int i=a[6];i>0;i--)\n\t\t\tprintf(\"1 2 6\\n\");\n\t}\n\t\treturn 0;\n}"}
{"similarity_score": 0.9960159362549801, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e6d8ada95fed4841e5c4b4b47cea1e4d", "bug_code_uid": "afbd05a9ed9cddb9fa64d9c003904abd", "src_uid": "fc547fc83ebbcc3c058a069ef9fef62c", "apr_id": "babd6291cd5fb381685e3459946605ef", "difficulty": 1100, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n         int t;\r\n         scanf(\"%d\",&t);\r\n         while(t--){\r\n                  int a,b,c,m;\r\n                  scanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n                  if(a>=b&&a>=c){\r\n                           if(m>=a-b-c&&m<=a+b+c-3) printf(\"yes\\n\");\r\n                           else printf(\"no\\n\");\r\n                  }\r\n                  else if(b>=a&&b>=c){\r\n                           if(m>=b-a-c&&m<=a+b+c-3) printf(\"yes\\n\");\r\n                           else printf(\"no\\n\");\r\n                  }\r\n                  else if(c>=b&&c>=a){\r\n                           if(m>=c-b-a&&m<=a+b+c-3) printf(\"yes\\n\");\r\n                           else printf(\"no\\n\");\r\n                  }\r\n         }\r\n         return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n         int t;\r\n         scanf(\"%d\",&t);\r\n         while(t--){\r\n                  int a,b,c,m;\r\n                  scanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n                  if(a>=b&&a>=c){\r\n                           if(m>=a-b-c-1&&m<=a+b+c-3) printf(\"yes\\n\");\r\n                           else printf(\"no\\n\");\r\n                  }\r\n                  else if(b>=a&&b>=c){\r\n                           if(m>=b-a-c-1&&m<=a+b+c-3) printf(\"yes\\n\");\r\n                           else printf(\"no\\n\");\r\n                  }\r\n                  else if(c>=b&&c>=a){\r\n                           if(m>=c-b-a-1&&m<=a+b+c-3) printf(\"yes\\n\");\r\n                           else printf(\"no\\n\");\r\n                  }\r\n         }\r\n         return 0;\r\n}"}
{"similarity_score": 0.8840864440078585, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d5ecaef3e1debcc61e09e8c0745323b6", "bug_code_uid": "f048034991f55a1ab732312ee984aa20", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "15e96c12f997e652389c8977a1580a07", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\nint a,x;\r\nscanf(\"%d\",&a);\r\nint b=log10(a);\r\n//double c=;\r\n//printf(\"%d\\n\",c);\r\nx=a-pow(10.0,b);\r\nprintf(\"%d\\n\",x);\r\n    }\r\nreturn 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\nint a,i,x,z=1;\r\nscanf(\"%d\",&a);\r\nint b=log10(a);\r\n//double c=;\r\n//printf(\"%d\\n\",c);\r\nfor(i=0;i<b;i++){\r\n    z=z*10;\r\n}\r\nx=a-z;\r\nprintf(\"%d\\n\",x);\r\n    }\r\nreturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.7995169082125604, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "4dbd62bb8b66de085330dfd1cf0cc917", "bug_code_uid": "0415d862659f9904f884559685eeb9fb", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "8c48e3451178d420b171fc7ce5fb33c1", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \nint main()\n{\n      long long int q,a,b,n,S;\n      scanf(\"%lld\",&q);\n      while(q--){\n              scanf(\"%lld %lld %lld %lld\",&a,&b,&n,&S);\n              if((a*n)>S){\n                   if(S-(a-1)*n<=b) printf(\"YES\\n\");\n                   else printf(\"NO\\n\");\n              }\n              else{\n                    if(S-(a*n)<=b) printf(\"YES\\n\");\n                    else printf(\"NO\\n\");\n              }\n      }\n      return 0;\n}", "fixed": "#include<stdio.h> \nint main()\n{\n      long long int q,a,b,n,S,c;\n      scanf(\"%lld\",&q);\n      while(q--){\n              scanf(\"%lld %lld %lld %lld\",&a,&b,&n,&S);\n              c=(a*n)+b;\n              if(S<=c){\n                    if(S%n<=b) printf(\"YES\\n\");\n                    else printf(\"NO\\n\");\n              }\n              else printf(\"NO\\n\");\n      }\n      return 0;\n}"}
{"similarity_score": 0.9014598540145985, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "03080ae5cb769eecb793447818e98c68", "bug_code_uid": "a5143af8358eb9d4ece2b1a2952d4f37", "src_uid": "7e765c1b0e3f3e9c44de825a79bc1da2", "apr_id": "8ca16950bb277f931c3420c04518269b", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int T;\n    for(scanf(\"%d\",&T); T-- ; ){\n\n    int flag=1, num=0, max=0, i=0, j=0;\n\n    scanf(\"%d %d\", &num, &max);\n\n    int array[2][num];\n\n        for(i=0; i<2; i++){\n            for(j=0; j<num; j++){\n                scanf(\"%d\", &array[i][j]);\n            }\n        }\n\n        for(i=0, j=num-i-1; i<num; i++){\n            if(array[0][i]+array[1][j]>max){\n                flag=0;\n                printf(\"No\\n\");\n                break;\n            }\n        }\n        if(flag==1)printf(\"Yes\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n    int T;\n    for(scanf(\"%d\",&T); T-- ; ){\n\n    int flag=1, num=0, max=0, i=0, j=0;\n\n    scanf(\"%d %d\", &num, &max);\n\n    int array[2][num];\n\n        for(i=0; i<2; i++){\n            for(j=0; j<num; j++){\n                scanf(\"%d\", &array[i][j]);\n            }\n        }\n\n        for(i=0; i<num; i++){\n            if(array[0][i]+array[1][num-i-1]>max){\n                flag=0;\n                printf(\"No\\n\");\n                break;\n            }\n        }\n        if(flag==1)printf(\"Yes\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.29227323628219487, "equal_cnt": 24, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "a51c138957974c9a26995cf2d6e4a3f3", "bug_code_uid": "571bfd20840684e0158ccd9a232be46d", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "5f23ba1a74a4b4490986315105896b86", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint ordenado[100000000], queue[100000000];\n\nvoid insertionSort(int n){\n\tint i, j, next;\n\tfor(i=1; i<n; i++){\n\t\tnext = queue[i];\n\t\tj = i - 1;\n\t\twhile(j>=0 && queue[j]>next){\n\t\t\tqueue[j+1] = queue[j];\n\t\t\tj--;\n\t\t}\n\t\tqueue[j+1] = next;\n\t}\n\tfor(i=0; i<n; i++){\n\t    ordenado[i] = queue[i];\n\t}\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tint i, soma=0, cont=1;\n\t//queue = malloc(n*sizeof(int));\n\t//ordenado = malloc(n*sizeof(int));\n\tfor(i=0; i<n; i++){\n\t    scanf(\"%d\", &queue[i]);\n\t}\n\tinsertionSort(n);\n\tfor(i=0; i<n; i++){\n\t    if(i>0){\n\t        soma+=ordenado[i-1];\n\t        if(soma<=ordenado[i]){\n\t            cont++;\n\t        }\n\t        else {\n\t            soma-=ordenado[i];\n\t        }\n\t    }\n\t}\n\tprintf(\"%d\", cont);\n\t//free(ordenado);\n\t//free(queue);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid merge(int *queue, int l, int m, int r){\n\tint i, j, k;\n\tint n1 = m-l+1;\n\tint n2 = r-m;\n\tint L[n1], R[n2];\n\tfor(i=0; i<n1; i++){\n\t\tL[i] = queue[l+i];\n\t}\n\tfor(j=0; j<n2; j++){\n\t\tR[j] = queue[m+1+j];\n\t}\n\ti=0; j=0; k=l;\n\twhile(i<n1 && j<n2){\n\t\tif(L[i]<= R[j]){\n\t\t\tqueue[k] = L[i];\n\t\t\ti++;\n\t\t}\n\t\telse{\n\t\t\tqueue[k] = R[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile(i<n1){\n\t\tqueue[k] = L[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile(j<n2){\n\t\tqueue[k] = R[j];\n\t\tj++;\n\t\tk++;\n\t}\n}\n\nvoid mergeSort(int *queue, int l, int r){\n\tif(l<r){\n\t\tint m = l + (r-l)/2;\n\t\tmergeSort(queue, l, m);\n\t\tmergeSort(queue, m+1, r);\n\t\tmerge(queue, l, m, r);\n\t}\n}\n\nint main(){\n\tint n;\n\tint *queue;\n\tscanf(\"%d\", &n);\n\tint i, soma=0, cont=0;\n\tqueue = malloc(n*sizeof(int));\n\tfor(i=0; i<n; i++){\n\t    scanf(\"%d\", &*(queue+i));\n\t}\n\tmergeSort(queue, 0, n-1);\n\tfor(i=0; i<n; i++){\n\t    if(soma<=queue[i]) cont++;\n\t    else soma-=queue[i];\n\t    soma+=queue[i];\n\t}\n\tprintf(\"%d\", cont);\n\tfree(queue);\n\treturn 0;\n}"}
{"similarity_score": 0.4725274725274725, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "79d112e27f165eaf52c4ac9d4e5410d0", "bug_code_uid": "c88f1e90071f489b4bf4d8327d5e4cbd", "src_uid": "b18bbefd2a948da9dec1d6f27f219ed1", "apr_id": "247fc501b63280f1c5347454827965b7", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,a[100000],i;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0; i<n; i++){\n        if(a[i]<=0)\n        {\n            printf(\"%d\",i+1);\n            return 0;\n        }\n        if(i==n-1){\n        a[i]--;\n        a[0]--;\n            i=-1;\n        continue;\n        }\n        a[i]-=i+1;\n        a[i+1]-=i+1;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,a[100000],i,count=0;\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n        scanf(\"%d\",&a[i]);\n        i=1;\n    while(i<=n)\n\t{\n\t\tif(a[i]-count<=0)\n\t\t{\n\t\t\tprintf(\"%d\",i);\n\t\t\treturn 0;\n\t\t}\n\t\t\ti++;\n\t\tcount++;\n\n\t\tif(i==n+1)\n\t\ti=1;\n\t}\n    return 0;\n}\n"}
{"similarity_score": 0.3634907926341073, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "be98345edd67b0f219a22ce50f4b36d7", "bug_code_uid": "b49a5aa845cd479045f223276bad7caa", "src_uid": "c6bbb16b1a3946ce38e67dc4824ecf89", "apr_id": "fea675960d11aa3b3e585bac38f46444", "difficulty": 1300, "tags": ["two pointers", "binary search", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a,b,c,d;\nint main () {\n\tint as[1000],h=0,b[1000],c[1000],yac=0,n,a,b1,b2,i,j,aa[1000];\n\tscanf(\"%d %d %d %d\",&n,&a,&b1,&b2);\n\tfor(i=0; i<n; i++)\n\t\tscanf(\"%d\",&as[i]);\n\tfor(i=0; i<a; i++)\n\t\tscanf(\"%d\",&aa[i]);\n\n\tfor(i=0; i<n; i++)\n\t{\n\t\t\t\tif(aa[j]==-1000)\n\t\t\t\t\tcontinue;\n\t\tfor(j=0; j<a; j++)\n\t\t\t{\n\t\t\t\tif(as[i]==aa[j] || (aa[j]>=(as[i]-b1) && aa[j]<=(as[i]+b2)))\n\t\t\t\t{\n\n\t\t\t\t\tyac++;\n\t\t\t\t\tb[h]=i;\n\t\t\t\t\tc[h]=j;\n\t\t\t\t\th++;\n\t\t\t\t\t\t\tas[i]=-1000;\n\t\t\t\t\t\t\taa[j]=-1000;\n\t\t\t\t}\n\t\t\t\tif(as[i]==-1000)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t}\n\n\t\t\t\tprintf(\"%d\\n\",yac);\n\n\t\t\t\tfor(i=0; i<yac; i++)\n\t\t\tprintf(\"%d %d\\n\",b[i]+1,c[i]+1);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define MAX 100005\n#define MIN\t2000000001\nint main () {\n\tint as[MAX],h=0,b[MAX],c[MAX],yac=0,n,a,b1,b2,i,j,aa[MAX];\n\tscanf(\"%d %d %d %d\",&n,&a,&b1,&b2);\n\tfor(i=0; i<n; i++)\n\t\tscanf(\"%d\",&as[i]);\n\tfor(i=0; i<a; i++)\n\t\tscanf(\"%d\",&aa[i]);\n\n\ti=0; j=0;\n\twhile(i!=n && j!=a)\n\t{\n\t\tif(as[i]-b1<=aa[j] && as[i]+b2>=aa[j])\n\t\t{\n\t\t\tyac++;\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tb[h]=i;\n\t\t\tc[h]=j;\n\t\t\th++;\n\t\t\tcontinue;\n\t\t}\n\t\telse if(as[i]+b2<aa[j])\n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\telse if(as[i]-b1>aa[j])\n\t\t{\n\t\t\tj++;\n\t\t\tcontinue;\n\t\t}\n\t}\n\n\n\t\t\t\tprintf(\"%d\\n\",yac);\n\n\t\t\t\tfor(i=0; i<yac; i++)\n\t\t\tprintf(\"%d %d\\n\",b[i],c[i]);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.4425287356321839, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "fda38d4de76db278952846a2ec352e11", "bug_code_uid": "1082284d6195b03606b0756a0b8528e7", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "7d7709ebe55a8871d623cacd3933ad08", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,f[1001],t[1001],i,j,max,p;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&f[i],&t[i]);\n    }\n    max=t[0];\n    p=0;\n    for(i=1;i<n;i++)\n    {\n        if(max<t[i]){max=t[i];p=i;break;}\n    }\n    if(max>=k){\n    printf(\"%d\",f[p]-(t[p]-k));}\n    else printf(\"%d\",k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,k,f,t,i,j,max=-4294967296,p;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d %I64d\",&f,&t);\n         if(t>k){a[i]=f-(t-k);}\n         else{a[i]=f;}\n         \n        if(a[i]>max){max=a[i];}\n     }\n    printf(\"%I64d\",max);\n    return 0;\n}"}
{"similarity_score": 0.804093567251462, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7545b3c275d097823131796439bd1c25", "bug_code_uid": "7aae6137fda7fd2e39116d711fb19a86", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "f354cd37ced57a8e2691d004a56c2fad", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,m,i,flag=1,sum=0;\n    long int a[10000];\n    scanf(\"%ld %ld\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        if(a[i]>=flag)\n            sum=sum+(a[i]-flag);\n        if(a[i]<flag)\n            sum=sum+(n-(flag-a[i]));\n        flag=a[i];\n\n\n    }\n    printf(\"%ld\",sum);\n}\n", "fixed": "#include<stdio.h>\n#include<stdint.h>\nint main()\n{\n   long int n,m,i,flag=1;\n     int64_t sum=0;\n    long int  a;\n    scanf(\"%ld %ld\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%ld\",&a);\n        if(a>=flag)\n            sum=sum+(a-flag);\n        if(a<flag)\n            sum=sum+(n-(flag-a));\n        flag=a;\n\n\n    }\n    printf(\"%I64d\",sum);\n}\n"}
{"similarity_score": 0.6518650088809946, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "d69424c2ca8970e4478c0060cb72a985", "bug_code_uid": "40036e8a82b62c178bf14a4835b3fa9a", "src_uid": "089eea1841ef10064647e61094c374fd", "apr_id": "588acc9232b1cbb997e56e13cc8d6b9a", "difficulty": 1500, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n\nlong a[100002];\n\nint main()\n{\n\tlong n, i, x, sum,max;\t\n\tscanf(\"%ld\\n\", &n);\n\t\n\tmax = 0;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%ld\", &x);\n\t\tif (x > max) max = x;\n\t\ta[x]++;\n\t}\n\t\n\tmax = 0;\t\t\n\tfor (i = 0; i <= x; i++)\n\t{\n\t\tif (a[i] > 1) a[i + a[i] / 2]++;\n\t\tif ((i + a[i] / 2) > max) max = i + a[i] / 2;\n\t\tif (a[i] > 1) a[i] = a[i] % 2;\t\n\t}\t\n\t\n\tsum = 0;\n\tfor (i = 0; i <= max; i++)\n\t\tif (a[i] != 0) sum++;\n\t\t\n\tprintf(\"%ld\", sum);\n\t\n\treturn 0;\n}\n", "fixed": "# include <stdio.h>\n\nlong a[1500001];\n\nint main()\n{\n\tlong n, i, x, k, k1, sum, max;\t\n\tscanf(\"%ld\\n\", &n);\n\t\n\tmax = 0;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%ld\", &x);\n\t\tif (x > max) max = x;\n\t\ta[x]++;\n\t}\n\t\t\t\n\tx = 0; k = 0; k1 = 0;\n\tfor (i = 0; i <= max; i++)\n\t{\n\t\tif ((a[i] == 0) || (a[i] == 1)) continue;\n\t\twhile (a[i] >= 1)\n\t\t{\n\t\t\tk++;\n\t\t\tif ((k == 1) && (a[i] & 1)) k1 = 1;\n\t\t\tif ((k != 1) && (a[i] & 1)) \n\t\t\t{\n\t\t\t\ta[i + k - 1]++;\n\t\t\t\tif (i + k - 1 > max) max = i + k - 1;\t\t\t\n\t\t    }\n\t\t\ta[i] = a[i] >> 1;\n\t\t}\n\t\tif (k1 == 1) a[i] = 1;\n\t\tk1 = 0;\n\t\tk = 0;\t\n\t}\t\n\t\n\tsum = 0;\n\tfor (i = 0; i <= max; i++)\n\t\tif (a[i] != 0) sum++;\n\t\t\n\tprintf(\"%ld\", sum);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9928825622775801, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fb6a3b6b0368e7a76d90abf389dd6a14", "bug_code_uid": "5b8f186947d6ec0217b7a608e4b462b2", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "8651c3ee62ea739a6a7ea55f2b60e67d", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    int i,cnt=0;\n    char s;\n    for(i=0; i<n; i++)\n    {\n        if(cnt==k)\n        {\n            s='a';\n            cnt=0;\n        }\n        printf(\"%c\",s);\n        s++;\n        cnt++;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    int i,cnt=0;\n    char s='a';\n    for(i=0; i<n; i++)\n    {\n        if(cnt==k)\n        {\n            s='a';\n            cnt=0;\n        }\n        printf(\"%c\",s);\n        s++;\n        cnt++;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.777292576419214, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "ce41e4bd164b4eb591a93ff10d4e689c", "bug_code_uid": "863ee1acd93db19f30a01b83b260269c", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "d61b7523ced88cabae557069d83e4cda", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nlong long int f(long long int n)\n{\n   long long int i,c=0;\n   for(i=2;i<=sqrt(n);i++)\n   {\n       if(n%i==0)\n       {\n           c++;\n           break;\n       }\n   }\n   if(c==0)\n   i=n;\n   return i;\n}\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    long long int n,k,i,j,add=0;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld\",&n,&k);\n        for(j=1;j<k+1;j++)\n        {\n            add=f(n);\n            n+=add;\n        }\n        printf(\"%lld\\n\",n);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nlong long int prime(long long int n)\n{\n   long long int i,c=0;\n   for(i=2;i<n/2+1;i++)\n   {\n       if(n%i==0)\n       {\n           c++;\n           break;\n       }\n   }\n   if(c==0)\n   {i=0;}\n   return i;\n}\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    long long int n,k,i,j,add=0,x;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld\",&n,&k);\n        x=prime(n);\n        if(x==0)\n        n=(n+k-1)*2;\n        else\n        {\n            if(n%2==0)\n            n=n+(k*2);\n            else\n            n=n+x+2*(k-1);\n        }\n        printf(\"%lld\\n\",n);\n    }\n    return 0;\n}"}
{"similarity_score": 0.968, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6d9a2d51e26bb14015283dbb7e32cfc5", "bug_code_uid": "ea026e3dec432f374273efd4a09da46e", "src_uid": "a003d645999934c255f7b05d8494fa40", "apr_id": "0d4c4887b2531e9a3812e2cb726dd8f7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int N;\n    int i,j,left,right;\n    scanf(\"%d\",&N);\n    for(i=1;i<=N/2;i++)\n    {\n        left=N/2+1-i;\n        right=N/2+1+i;\n        for(j=1;j<=left;j++)\n            printf(\"*\");\n        for(j=left+1;j<right;j++)\n            printf(\"D\");\n        for(j=right;j<=N;j++)\n            printf(\"*\");\n        printf(\"\\n\");\n    }\n    for(j=1;j<=N;j++)\n        printf(\"D\");\n    printf(\"\\n\");\n    for(i=N/2;i>0;i--)\n    {\n        left=N/2+1-i;\n        right=N/2+1+i;\n        for(j=1;j<=left;j++)\n            printf(\"*\");\n        for(j=left+1;j<right;j++)\n            printf(\"D\");\n        for(j=right;j<=N;j++)\n            printf(\"*\");\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n    printf(\"Hello world!\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int N;\n    int i,j,left,right;\n    scanf(\"%d\",&N);\n    for(i=1;i<=N/2;i++)\n    {\n        left=N/2+1-i;\n        right=N/2+1+i;\n        for(j=1;j<=left;j++)\n            printf(\"*\");\n        for(j=left+1;j<right;j++)\n            printf(\"D\");\n        for(j=right;j<=N;j++)\n            printf(\"*\");\n        printf(\"\\n\");\n    }\n    for(j=1;j<=N;j++)\n        printf(\"D\");\n    printf(\"\\n\");\n    for(i=N/2;i>0;i--)\n    {\n        left=N/2+1-i;\n        right=N/2+1+i;\n        for(j=1;j<=left;j++)\n            printf(\"*\");\n        for(j=left+1;j<right;j++)\n            printf(\"D\");\n        for(j=right;j<=N;j++)\n            printf(\"*\");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8912097476066144, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "4e0030532f224d67b2aae9587caf1a94", "bug_code_uid": "7074734a109e533984dbc58dd2f193b3", "src_uid": "7ff7f47cee182d2542754e412f6aab1a", "apr_id": "d1be5b665956dc9e020039d90d789305", "difficulty": 1600, "tags": ["dp", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint max(int a, int b){ return a>b?a:b; }\nint main()\n{\n\tint n,i;\n\tint mx,mn,tempx,tempn;\n\tscanf(\"%d\",&n);\n\tint x,y=0;\n\tint pos[n-1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(i!=0)pos[i-1]=abs(x-y);\n\t\ty=x;\n\n\t}\n\tmx=0;\n\tmn=0;\n\ttempx=0;\n\ttempn=0;\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(i%2)\n\t\t{\n\t\t\ttempx+=pos[i];\n\t\t\ttempn+=pos[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttempn-=pos[i];\n\t\t\ttempx-=pos[i];\n\t\t}\n\t\tif(tempx>mx)mx=tempx;\n\t\tif(tempn<mn)mn=tempn;\n\t\tif(tempx<0)tempx=0;\n\t\tif(tempn>0)tempn=0;\t\t\n\t}\n\tprintf(\"%d\\n\",max(mx,-mn));\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nlong long max(long long a, long long b){ return a>b?a:b; }\nint main()\n{\n\tlong long n,i;\n\tlong long mx,mn,tempx,tempn;\n\tscanf(\"%I64d\",&n);\n\tlong long x,y=0;\n\tlong long pos[n-1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&x);\n\t\tif(i!=0)pos[i-1]=abs(x-y);\n\t\ty=x;\n\n\t}\n\tmx=0;\n\tmn=0;\n\ttempx=0;\n\ttempn=0;\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(i%2)\n\t\t{\n\t\t\ttempx+=pos[i];\n\t\t\ttempn+=pos[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttempn-=pos[i];\n\t\t\ttempx-=pos[i];\n\t\t}\n\t\tif(tempx>mx)mx=tempx;\n\t\tif(tempn<mn)mn=tempn;\n\t\tif(tempx<0)tempx=0;\n\t\tif(tempn>0)tempn=0;\t\t\n\t}\n\tprintf(\"%I64d\\n\",max(mx,-mn));\n\treturn 0;\n}"}
{"similarity_score": 0.672, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "10a2e732760708db875c5134c48f078d", "bug_code_uid": "6f8105e189c5d15c6a72b409e2e58a56", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "d460c0c9420623dd648baaea06515619", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n    \n\nint main(){\n    long long int n;\n    scanf(\"%I64d\",&n);\n    long long int arr[n];\n    long long int max=0;\n    for(long long int i=0;i<n;i++){\n        scanf(\"%I64d\",&arr[i]);\n        if( arr[i] > max) max=arr[i];\n    }\n    for(long long int i=0;i<n;i++){\n        if(arr[i]==max) printf(\"0 \");\n        else printf(\"%I64d \",max-arr[i]+1);\n        \n        \n    }\n    \n    \n    \n    \n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\n    \n\nint main(){\n    long long int n;\n    scanf(\"%I64d\",&n);\n    long long int arr[n];\n    long long int arr1[n-1];\n    long long int max;\n    for(long long int i=0;i<n;i++){\n        scanf(\"%I64d\",&arr[i]);\n    }\n    max=arr[n-1];\n    for(long long int i=n-2;i>=0;i--){\n        if(arr[i] <= max ) arr1[i]= max - arr[i] + 1 ;\n        else { arr1[i]=0; max=arr[i]; }\n        \n        \n    }\n    for(long long int i=0;i<n-1;i++){\n        printf(\"%I64d \",arr1[i]);\n    }\n    printf(\"0\");\n    \n    \n    \n    return 0;\n}\n"}
{"similarity_score": 0.8617449664429531, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "626122c7babede655ce63a3c7c1cc578", "bug_code_uid": "716ad58a26a023ac6253dcd0fa09bb7e", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "c6925c92c77f4e11cfa3a29946b83451", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong long int n,v,i,o,h,ok,a,nbs=0;\n     long long int t[100000];\n\tscanf(\"%I64d %I64d\\n\",&n,&v);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d \",&o);\n\t\tok=0;\n\t\tfor(h=0;h<o;h++){\n\t\t\tscanf(\"%I64d \",&a);\n\t\t\tif(a<v)ok=1;\n\t\t}\n\t\tif(ok==1){\n\t\t t[nbs]=i+1;\n\t\t nbs++;\n    \t}\n\t}\n\tif(ok==0)printf(\"0\");\n\tprintf(\"%I64d\\n\",nbs);\n\tfor(i=0;i<nbs;i++)printf(\"%I64d \",t[i]);\n}", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n,v,i,o,h,ok,a,nbs=0;\n     long long int t[100000];\n\tscanf(\"%I64d %I64d\\n\",&n,&v);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d \",&o);\n\t\tok=0;\n\t\tfor(h=0;h<o;h++){\n\t\t\tscanf(\"%I64d \",&a);\n\t\t\tif(a<v)ok=1;\n\t\t}\n\t\tif(ok==1){\n\t\t t[nbs]=i+1;\n\t\t nbs++;\n    \t}\n\t}\n\tprintf(\"%I64d\\n\",nbs);\n\tif(nbs!=0)\n\tfor(i=0;i<nbs;i++)printf(\"%I64d \",t[i]);\n}"}
{"similarity_score": 0.9938524590163934, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "eb38046cc5671f0b08b2e5ba6431fcf6", "bug_code_uid": "8d4e49f73baa4c47eed2e3e8cf19105e", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "f36d3c508c484135a3288470e79368e4", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int numSteps;\r\n    scanf(\"%d\", &numSteps);\r\n\r\n    for (int i = 1; i <= numSteps; i++) {\r\n        long long  n, x, t;\r\n        scanf(\"%d %d %d\", &n, &x, &t);\r\n\r\n        long long sum = 0;\r\n        long long started = t / x;\r\n        sum += started * ((n - started - 1 > 0) ? (n - started - 1) : 0);\r\n        sum += (n - started - 1 > 0) ? started * (started + 1) / 2 : (n - 1) * n / 2;\r\n\r\n        printf(\"%lld\\n\", sum);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int numSteps;\r\n    scanf(\"%d\", &numSteps);\r\n\r\n    for (int i = 1; i <= numSteps; i++) {\r\n        long long  n, x, t;\r\n        scanf(\"%lld %lld %lld\", &n, &x, &t);\r\n\r\n        long long sum = 0;\r\n        long long started = t / x;\r\n        sum += started * ((n - started - 1 > 0) ? (n - started - 1) : 0);\r\n        sum += (n - started - 1 > 0) ? started * (started + 1) / 2 : (n - 1) * n / 2;\r\n\r\n        printf(\"%lld\\n\", sum);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.4920353982300885, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "70153d5dcc1830fc27375e995a9de80f", "bug_code_uid": "9bad809ac92dc6855d4ecbdd132e4d45", "src_uid": "43a65d1cfe59931991b6aefae1ecd10e", "apr_id": "ed69a4e6e975429ca7795f1554a7a636", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,k,c=0,i,j,step;\n\tscanf(\"%d\",&n);\n\tchar s[65000],s1[65000];\n\tscanf(\"%s\",s);\n\tfor(step=1;step<=n;step++)\n\t{\n\t  for(i=0;i<=n-step;i++)\n\t  {\n\t  \tj=i+step-1;\n\t\tif(s[j]=='2' ||s[j]=='4'||s[j]=='6'|| s[j]=='8')\n\t\t{\n\t\t\tc++;\n\t\t}\n\t }\t\n\t}\n\tprintf(\"%d\\n\",c);\n\treturn 0;\t\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,k,c=0,i,j,step;\n\tscanf(\"%d\",&n);\n\tchar s[65000],s1[65000];\n\tscanf(\"%s\",s);\n\t  for(i=0;i<n;i++)\n\t  {\n\t  \tif((s[i]-48)%2==0)\n\t  \t{\n\t  \t\tc+=(i+1);\n\t\t  }\n\t}\n\tprintf(\"%d\\n\",c);\n\tc=0;\n\treturn 0;\t\n}"}
{"similarity_score": 0.9902152641878669, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "31ac5ce9483edf8cacf70989c89b7955", "bug_code_uid": "a7869ea23fe0ea75d07874b9303d127d", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "77250790aa85def37db4dc0a317f37a6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int n,m,i,j,sum=0;\n    scanf(\"%d %d\",&n,&m);\n    int ara[n][m];\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            scanf(\"%d\",&ara[i][j]);\n            if(j>0){\n                if(ara[i][j]!=ara[i][j-1]) sum = 1;\n            }\n        }\n    }\n        for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\nif(i>0){\n    if(ara[i][j]==ara[i-1][j]) sum =1;\n}\n\n        }\n    }\n    if(sum==1)printf(\"NO\");\n    else printf(\"YES\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int n,m,i,j,sum=0;\n    scanf(\"%d %d\",&n,&m);\n    char ara[n][m];\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            scanf(\" %c\",&ara[i][j]);\n            if(j>0){\n                if(ara[i][j]!=ara[i][j-1]) sum = 1;\n            }\n        }\n    }\n        for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\nif(i>0){\n    if(ara[i][j]==ara[i-1][j]) sum =1;\n}\n\n        }\n    }\n    if(sum==1)printf(\"NO\");\n    else printf(\"YES\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.7779390420899854, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "92c4137a3d46735ceb127baec5558d5e", "bug_code_uid": "81c7a0c768cce44981fa298ecb96e025", "src_uid": "b1e09df7c47dbd04992e64826337c28a", "apr_id": "2becb72e6c9a158ca7c6a724ad3ebd77", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{char c[1001],d[1001];\nint a,b,z;\nz=0;\nscanf(\"%s\",c);\nscanf(\"%s\",d);\na=0;while(d[a]>96&&d[a]<123){b=0;while(c[b]>96&&c[b]<124){if(c[b]==d[a]){z=z+1;c[b]=123;break;}b=b+1;}a=a+1;}\nif(z==0){printf(\"%d\\n\",-1);}\nif(z!=0){printf(\"%d\\n\",z);}\nreturn 0;}", "fixed": "#include <stdio.h>\nint main()\n{char c[1001],d[1001];\nint a,b,z,m,n=0;\nz=0;\nscanf(\"%s\",c);\nscanf(\"%s\",d);\na=0;while(d[a]>96&&d[a]<123){b=0;m=0;while(c[b]>96&&c[b]<124){if(c[b]==d[a]){m=1;break;}b=b+1;}if(m==0){z=0;n=1;}a=a+1;}\nif(n==0){a=0;while(d[a]>96&&d[a]<123){b=0;while(c[b]>96&&c[b]<124){if(c[b]==d[a]){z=z+1;c[b]=123;break;}b=b+1;}a=a+1;}}\nif(z==0){printf(\"%d\\n\",-1);}\nif(z!=0){printf(\"%d\\n\",z);}\nreturn 0;}"}
{"similarity_score": 0.9577854671280277, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "877bf52c490f0fcbe924fa56f7ff4bec", "bug_code_uid": "fceab7282703994bc3af4e6dc2941ed5", "src_uid": "e7a07efba27f2b1f9ec7c4a8fb997b00", "apr_id": "edc559129e88462da1a9f0e008ae42f1", "difficulty": 2000, "tags": ["dfs and similar"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,x,y,temp,f,t;\n\tscanf(\"%d%d\",&n,&t);\n\tint a[140][140];\n\tfor(i=0;i<140;i++)\n\t{\n\t\tfor(j=0;j<140;j++)\n\t\t{\n\t\t\ta[i][j]=0;\n\t\t}\n\t}\n\ta[70][70]=n;\n\twhile(1)\n\t{\n\t\tf=0;\n\t\tfor(i=0;i<140;i++)\n\t\t{\n\t\t\tfor(j=0;j<140;j++)\n\t\t\t{\n\t\t\t\tif(a[i][j]>3)\n\t\t\t\t{\n\t\t\t\t\tf=1;\n\t\t\t\t\ttemp=a[i][j]/4;\n\t\t\t\t\ta[i-1][j]=temp;\n\t\t\t\t\ta[i][j+1]=temp;\n\t\t\t\t\ta[i+1][j]=temp;\n\t\t\t\t\ta[i][j-1]=temp;\n\t\t\t\t\ta[i][j]=a[i][j]%4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!f)\tbreak;\t\n\t}\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx=x+70;\n\t\ty=y+70;\n//\t\tif(x>70 || x<0 || y>70 || y<0)\tprintf(\"0\\n\");\n//\t\telse\t\n\t\tprintf(\"%d\\n\",a[x][y]);\n\t}\n/*\tfor(i=0;i<20;i++)\n\t{\n\t\tfor(j=0;j<20;j++)\n\t\t{\n\t\t\tprintf(\"%d \",a[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n*/\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,x,y,temp,f,t;\n\tscanf(\"%d%d\",&n,&t);\n\tint a[140][140];\n\tfor(i=0;i<140;i++)\n\t{\n\t\tfor(j=0;j<140;j++)\n\t\t{\n\t\t\ta[i][j]=0;\n\t\t}\n\t}\n\ta[70][70]=n;\n\twhile(1)\n\t{\n\t\tf=0;\n\t\tfor(i=0;i<140;i++)\n\t\t{\n\t\t\tfor(j=0;j<140;j++)\n\t\t\t{\n\t\t\t\tif(a[i][j]>3)\n\t\t\t\t{\n\t\t\t\t\tf=1;\n\t\t\t\t\ttemp=a[i][j]/4;\n\t\t\t\t\ta[i-1][j] += temp;\n\t\t\t\t\ta[i][j+1] += temp;\n\t\t\t\t\ta[i+1][j] += temp;\n\t\t\t\t\ta[i][j-1] += temp;\n\t\t\t\t\ta[i][j] = a[i][j]%4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!f)\tbreak;\t\n\t}\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx += 70;\n\t\ty += 70;\n\t\tif(x>=140 || x<0 || y>=140 || y<0)\tprintf(\"0\\n\");\n\t\telse\tprintf(\"%d\\n\",a[x][y]);\n\t}\n/*\tfor(i=0;i<140;i++)\n\t{\n\t\tfor(j=0;j<140;j++)\n\t\t{\n\t\t\tprintf(\"%d \",a[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}*/\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9846938775510204, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fad6a1843beafba35d77a60365861f74", "bug_code_uid": "c97abca9212de17b3f9a65e2c7ec85db", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "f2f753798a45ed3b1a179839f78268b5", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define MAX 500\nint main()\n{\n\tunsigned int num;\n\tscanf(\"%d\", &num);\n\tunsigned int integer[MAX][3];\n\tfor (int i = 0; i < num; i++)\n\t{\n\t\tscanf(\"%d %d %d\", &integer[i][0], &integer[i][1], &integer[i][2]);\n\t}\n\tfor (int i = 0; i < num; i++)\n\t{\n\t\tint j = integer[i][1]/integer[i][2];\n\t\tif (integer[i][2]>integer[i][1] || integer[i][2] < integer[i][0])printf(\"%d\\n\", integer[i][2]);\n\t\telse {\n\t\t\twhile (1)\n\t\t\t{\n\t\t\t\tif (j*integer[i][2] > integer[i][1]) { printf(\"%d\\n\", integer[i][2] * j); break; }\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\tsystem(\"pause\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define MAX 500\nint main()\n{\n\tunsigned int num;\n\tscanf(\"%d\", &num);\n\tunsigned int integer[MAX][3];\n\tfor (int i = 0; i < num; i++)\n\t{\n\t\tscanf(\"%d %d %d\", &integer[i][0], &integer[i][1], &integer[i][2]);\n\t}\n\tfor (int i = 0; i < num; i++)\n\t{\n\t\tint j = integer[i][1]/integer[i][2];\n\t\tif (integer[i][2]>integer[i][1] || integer[i][2] < integer[i][0])printf(\"%d\\n\", integer[i][2]);\n\t\telse {\n\t\t\twhile (1)\n\t\t\t{\n\t\t\t\tif (j*integer[i][2] > integer[i][1]) { printf(\"%d\\n\", integer[i][2] * j); break; }\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9992486851990984, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "00d9262e8ef82cf4f2f5918a8ce81586", "bug_code_uid": "eaa2b5a8ba88aa3e226b37da633f676c", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "df54d9c3741bf754b04cfb1fdcb7d665", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\ntypedef unsigned long long ull;\nvoid sleep(int a, int b, int c, int d)\n{\n    if(b < a && c < d)\n        printf(\"-1\\n\");\n    else\n    {\n        ull t;\n        t = b;\n        if(t >= a)\n            printf(\"%llu\\n\", t);\n        else\n        {\n            ull each, rem, turn;\n            each = c - d;\n            rem = a-b;\n            turn = ceil((double)rem/each);\n            t += turn*c;\n            printf(\"%llu\\n\", t);\n        }\n    }\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int a, b, c, d;\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        sleep(a, b, c, d);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\ntypedef unsigned long long ull;\nvoid sleep(int a, int b, int c, int d)\n{\n    if(b < a && c <= d)\n        printf(\"-1\\n\");\n    else\n    {\n        ull t;\n        t = b;\n        if(t >= a)\n            printf(\"%llu\\n\", t);\n        else\n        {\n            ull each, rem, turn;\n            each = c - d;\n            rem = a-b;\n            turn = ceil((double)rem/each);\n            t += turn*c;\n            printf(\"%llu\\n\", t);\n        }\n    }\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int a, b, c, d;\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        sleep(a, b, c, d);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9270833333333334, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f5d53afbf6d222f0205ad2f47b990685", "bug_code_uid": "29309dcba5fe5ff90c197f7d6b3ab73e", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "bd1aff728923f23f8802c0c1972037b0", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint lsum=0,rsum=0,j,number,test,i,larray[100005],rarray[100005],no;\n\tscanf(\"%d\",&number);\n\n\tfor(i=0;i<number;i++)\n\t{\n\t\tscanf(\"%d\",&test);\n\t\tlarray[test]=i+1;\n\t\trarray[test]=number-i;\n\t}\n\n\tscanf(\"%d\",&no);\n\n\tfor(i=0;i<no;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tlsum=lsum+larray[j];\n\t\trsum=rsum+rarray[j];\n\t\t\n\t}\n\tprintf(\"%d %d\\n\",lsum,rsum);\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint j,number,test,i,larray[100005],rarray[100005],no;\n\tlong long int lsum=0,rsum=0;\n\tscanf(\"%d\",&number);\n\n\tfor(i=0;i<number;i++)\n\t{\n\t\tscanf(\"%d\",&test);\n\t\tlarray[test]=i+1;\n\t\trarray[test]=number-i;\n\t}\n\n\tscanf(\"%d\",&no);\n\n\tfor(i=0;i<no;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tlsum=lsum+larray[j];\n\t\trsum=rsum+rarray[j];\n\t\t\n\t}\n\tprintf(\"%I64d %I64d\\n\",lsum,rsum);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9944029850746269, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6cfabba9a9aec98c8d0bbe347d52fa0e", "bug_code_uid": "6c73a01a9b717eb0e739230de1ea47a5", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "131c1c4d8e69e28610e8bfba52987398", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint f(double a)\n{\n\tdouble m=sqrt(a);\n\tint n=sqrt(a);\n\treturn (n==m);\n}\nint f1(int n)\n{\n\tif(((n<2)||(!(n%2)))&&(n!=2))return 0;\n\telse{\n\t\tint i,j=sqrt(n);\n\t\tfor(i=3;i<=j;i+=2)if(!(n%i))return 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint n,i,j;\n\tdouble a[100007];\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lf\",a+i);\n\t\tj=f(*(a+i));\n\t\tif(j){\n\t\t\tj=sqrt(*(a+i));\n\t\t\tif(j)*(a+i)=1;\n\t\t\telse *(a+i)=0;\n\t\t}\n\t\telse *(a+i)=0;\n\t}\n\tfor(i=1;i<=n;i++){\n\tif(*(a+i))printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint f(double a)\n{\n\tdouble m=sqrt(a);\n\tint n=sqrt(a);\n\treturn (n==m);\n}\nint f1(int n)\n{\n\tif(((n<2)||(!(n%2)))&&(n!=2))return 0;\n\telse{\n\t\tint i,j=sqrt(n);\n\t\tfor(i=3;i<=j;i+=2)if(!(n%i))return 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint n,i,j;\n\tdouble a[100007];\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lf\",a+i);\n\t\tj=f(*(a+i));\n\t\tif(j){\n\t\t\tj=sqrt(*(a+i));\n\t\t\tif(f1(j))*(a+i)=1;\n\t\t\telse *(a+i)=0;\n\t\t}\n\t\telse *(a+i)=0;\n\t}\n\tfor(i=1;i<=n;i++){\n\tif(*(a+i))printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9517684887459807, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9db46fa4ccd9ab47b4966b4d8d8057b3", "bug_code_uid": "330778490ab35b10dab010475812c96f", "src_uid": "7a48218582b90f735a09083df9e15b96", "apr_id": "f622addc9c2cb09f908f32e4e6622502", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int func(long long int n){\n\tint max, min;\n\tmax = -1;\n\tmin = -1;\n\tlong long int temp=n;\n\twhile(n != 0){\n        int digit = n % 10;\n        n = n / 10;\n        if(max == -1 && min == -1){\n        \tmax = digit;\n        \tmin = digit;\n        }\n        else{\n        \tif(digit>max)\n        \t\tmax = digit;\n        \tif(digit<min)\n        \t\tmin = digit;\n        }\n    }\n    //printf(\"%d %d %d\\n\", n, max, min);\n    return temp + max*min;\n}\nint main(){\n\tlong long int t,n,k,ans;\n\tscanf(\"%lld\", &t);\n\tfor(long long int i = 0; i<t;i++){\n\t\tscanf(\"%lld %lld\", &n, &k);\n\t\tans = n;\n\t\tfor(long long int j = 0; j<k-1;j++){\n\t\t\tans = func(ans);\n\t\t\t//printf(\"currently = %lld\\n\", ans);\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nlong long int func(long long int n){\n\tint max, min;\n\tmax = -1;\n\tmin = -1;\n\tlong long int temp=n;\n\twhile(n != 0){\n        int digit = n % 10;\n        n = n / 10;\n\n        if(max == -1 && min == -1){\n        \tmax = digit;\n        \tmin = digit;\n        }\n        else{\n        \tif(digit>max)\n        \t\tmax = digit;\n        \tif(digit<min)\n        \t\tmin = digit;\n        }\n    }\n    //printf(\"%d %d %d\\n\", n, max, min);\n    return temp + max*min;\n}\nint main(){\n\tlong long int t,n,k,ans,prevans;\n\tscanf(\"%lld\", &t);\n\tfor(long long int i = 0; i<t;i++){\n\t\tscanf(\"%lld %lld\", &n, &k);\n\t\tans = n;\n\t\tprevans = n;\n\t\tfor(long long int j = 0; j<k-1;j++){\n\t\t\tprevans = ans;\n\t\t\tans = func(ans);\n\t\t\tif(prevans == ans)\n\t\t\t\tbreak;\n\t\t\t//printf(\"currently = %lld\\n\", ans);\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9964028776978417, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3cceff39e31ea05f8c02cf8ee0450c08", "bug_code_uid": "33f6cf74be91a23e6058c1e60adcd01d", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "1f92a7eefb8cc965b360fc809cc73cee", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main ()\n{\n    int n,m,last=0,now=0,x=0;\n    scanf(\"%d %d\",&n,&m);\n    scanf(\"%d\",&last);\n    n--;\n    while(n--)\n    {\n        scanf(\"%d\",&now);\n        if(now-last>m) {x=1;}\n        else x++;\n        last=now;\n    }\n    printf(\"%d\",x);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main ()\n{\n    int n,m,last=0,now=0,x=1;\n    scanf(\"%d %d\",&n,&m);\n    scanf(\"%d\",&last);\n    n--;\n    while(n--)\n    {\n        scanf(\"%d\",&now);\n        if(now-last>m) {x=1;}\n        else x++;\n        last=now;\n    }\n    printf(\"%d\",x);\n}\n"}
{"similarity_score": 0.9664082687338501, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4ebee22d3cd84a46a74c2103fe36976e", "bug_code_uid": "b339ac1880976a716ef23742e8ab98dc", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "800c53493ba2778fe7368c01fd25e847", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\ntypedef long long int ll;\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    if(n<9)\r\n    printf(\"0\\n\");\r\n    else\r\n    {\r\n        int c=0;\r\n       int d=n%10;\r\n       if(d==9)\r\n       c++;\r\n       c+=n/10;\r\n    }\r\n   \r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    solve();\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\ntypedef long long int ll;\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    if(n<9)\r\n    printf(\"0\\n\");\r\n    else\r\n    {\r\n        int c=0;\r\n       int d=n%10;\r\n       if(d==9)\r\n       c++;\r\n       c+=n/10;\r\n       printf(\"%d\\n\",c);\r\n    }\r\n   \r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    solve();\r\n    return 0;\r\n}"}
{"similarity_score": 0.8524355300859598, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "512125e803aea751f0afd935909ab606", "bug_code_uid": "525b8a381531e967f592e757dc00e090", "src_uid": "eea7860e6bbbe5f399b9123ebd663e3e", "apr_id": "ccbc33960d327f519863b896030808fe", "difficulty": 1400, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint isPrime(int n)\n{\n\tif(n == 1)\treturn 0;\n\tfor(int i = 2; i <= sqrt(n); i++)\tif(n % i == 0)\treturn 0;\n\treturn 1;\n}\n\nint main()\n{\n\tint n, ans[100000];\n\tscanf(\" %d\", &n);\n\t\n\tfor(int i = 0; i < 100000; i++)\tans[i] = 0;\n\t\n\twhile(n--)\n\t{\n\t\tint number;\n\t\tscanf(\" %d\", &number);\n\t\t\n\t\tif(isPrime(number))\t\tans[number]++;\n\t\telse\n\t\t{\n\t\t\tfor(int i = 2; i <= number; i++)\n\t\t\t\tif(isPrime(i) && number % i == 0)\n\t\t\t\t\tans[i]++;\n\t\t}\n\t}\n\t\n\tint max = 1;\n\t\n\tfor(int i = 0; i < 100000; i++)\n\t{\n\t\t//if(ans[i] != 0)\t\tprintf(\"%d %d\\n\", i, ans[i]);\n\t\tmax = (max > ans[i])? max: ans[i];\n\t}\n\t\n\tprintf(\"%d\\n\", max);\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint isPrime(int n)\n{\n\tif(n == 1)\treturn 0;\n\tfor(int i = 2; i <= sqrt(n); i++)\tif(n % i == 0)\treturn 0;\n\treturn 1;\n}\n\nint main()\n{\n\tint n, ans[100000];\n\tscanf(\" %d\", &n);\n\t\n\tfor(int i = 0; i < 100000; i++)\tans[i] = 0;\n\t\n\twhile(n--)\n\t{\n\t\tint number, count = 0;\n\t\tscanf(\" %d\", &number);\n\t\t\n\t\tif(isPrime(number))\t\tans[number]++;\n\t\telse\n\t\t{\n\t\t\tfor(int i = 2; i <= sqrt(number) +1; i++)\n\t\t\t{\n\t\t\t\tif(number % i == 0)\n\t\t\t\t{\n\t\t\t\t\tif(isPrime(i))\tans[i]++;\n\t\t\t\t\tif((number/i) > sqrt(number)+1 && isPrime(number/i))\tans[number/i]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint max = 1;\n\t\n\tfor(int i = 0; i < 100000; i++)\n\t{\n\t\t//if(ans[i] != 0)\t\tprintf(\"%d %d\\n\", i, ans[i]);\n\t\tmax = (max > ans[i])? max: ans[i];\n\t}\n\t\n\tprintf(\"%d\\n\", max);\t\n\treturn 0;\n}"}
{"similarity_score": 0.9732408325074331, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5c75e94c3eba6d3e6e46ad2dc1219763", "bug_code_uid": "707c87428d5c1646bdc259b07a334912", "src_uid": "59154ca15716f0c1c91a37d34c5bbf1d", "apr_id": "712cfa2a1b4887614a64e3d5b847b5bc", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main(){\n    int n,k,l,r,sall,sk,i=0;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sall,&sk);\n    int sm=((sall -sk- l*(n-k))/(n-k))+l,ss=sall-sk-sm*(n-k);\n    i=0;\n    while (i<ss) {\n        printf(\"%d\\n\",sm+1);\n        i++;\n    }\n    while (i<(n-k)) {\n        printf(\"%d\\n\",sm);\n        i++;\n    }\n    sm=((sk - l*(k))/(k))+l,ss=sk-(sm*(k));\n    i=0;\n    while (i<ss) {\n        printf(\"%d\\n\",sm+1);\n        i++;\n    }\n    while (i<k) {\n        printf(\"%d\\n\",sm);\n        i++;\n    }\n    return 0;\n}", "fixed": "int main(){\n    int n,k,l,r,sall,sk,i=0;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sall,&sk);\n    if(n!=k){\n    int sm=((sall -sk- l*(n-k))/(n-k))+l,ss=sall-sk-sm*(n-k);\n    i=0;\n    while (i<ss) {\n        printf(\"%d\\n\",sm+1);\n        i++;\n    }\n    while (i<(n-k)) {\n        printf(\"%d\\n\",sm);\n        i++;\n    }}\n    int sm=((sk - l*(k))/(k))+l,ss=sk-(sm*(k));\n    i=0;\n    while (i<ss) {\n        printf(\"%d\\n\",sm+1);\n        i++;\n    }\n    while (i<k) {\n        printf(\"%d\\n\",sm);\n        i++;\n    }\n    return 0;\n}"}
{"similarity_score": 0.8592910848549946, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6716679fb107a8c8a6e327277f3352f0", "bug_code_uid": "a0f602ffabf398f048a7565b1d99d3ba", "src_uid": "cced3c3d3f1a63e81e36c94fc2ce9379", "apr_id": "77c8c42b5f87dd4e8cc93f97efde60dc", "difficulty": 1400, "tags": ["constructive algorithms", "bitmasks", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint a[100005];\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tlong long int sum=0;\n\t\tint t=0;\n\t\tscanf(\"%d\",&t);\n\t\tlong long XOR=0;\n\t\tfor(i=1;i<=t;++i)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tsum+=a[i];\n\t\t\tXOR=XOR^a[i];\n\t\t}\n\t\tif(XOR*2==sum)\n\t\t\tprintf(\"0\\n\\n\");\n\t\telse\n\t\t{\n\t\t\tif(XOR!=0)\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t\tprintf(\"%d %d\",XOR,XOR+sum);\n\t\t\t}\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t\tprintf(\"%d\\n\",sum);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint a[200005];\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tlong long int sum=0;\n\t\tint t=0;\n\t\tscanf(\"%d\",&t);\n\t\tlong long XOR=0;\n\t\tfor(i=1;i<=t;++i)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tsum+=a[i];\n\t\t\tXOR=XOR^a[i];\n\t\t}\n\t\tif(XOR*2==sum)\n\t\t\tprintf(\"0\\n\\n\");\n\t\telse\n\t\t{\n\t\t\tif(XOR!=0)\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t\tprintf(\"%lld \",XOR);\n\t\t\t\tprintf(\"%lld\\n\",XOR+sum);\n\t\t\t}\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t\tprintf(\"%lld\\n\",sum);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.18086774699424987, "equal_cnt": 24, "replace_cnt": 20, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "6bec283af40217fd835a7da4e2aed97c", "bug_code_uid": "11b98959aa2661a9da8cae4e57821fa5", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "1fecd628f63f27a963d6f76f1456d01c", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main(void){\n   \n long long int test,i,j,n,count,rank,sum,flag,a1,b1,l,m,b,u,d,max,  index,n1[10000]={0},p[25]={0},ii,jj,iii,jjj;\n char a[100][300],k;\n scanf(\"%lld\\n\",&n);\n ii=jj=flag=count=0;\n iii=jjj=n-1;\n for(i=0;i<n;i++){\n     scanf(\"%s\",a[i]);\nfor(j=0;j<n;j++){\n   \n    if(i==0 && j==0){\n        k=a[i][j];\n    }\n  \n    if(i==ii && j==jj && jj<n && ii<n){\n        if(a[i][j]!=k){\n            flag=1;\n        }\n        ii++;\n        jj++;\n    }\n     if(i==iii && j==jjj && jjj>=0 && iii>=0){\n        if(a[i][j]!=k){\n            flag=1;\n        }\n        iii--;\n        jjj--;\n    }\n     //printf(\"%c %c %d %d %d\\n\",a[i][j],k,count,a[i][j]-'a',flag);\n    if(p[a[i][j]-97]==0){\n        p[a[i][j]-97]++;\n        count++;\n    }\n}\n//printf(\"\\n\");\n}\nif(count!=2 || flag==1){\n    printf(\"NO\");\n    return 0;\n}\nprintf(\"YES\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nlong long int cmpfunc( const void *a, const void *b) {\n  return *(long long int*)a - *(long long int *)b;\n}\n\nint main()\n{\n long long int test,d,n,x,i,sum=0,count=0,j,flag=0,p,y,max=0,o,g,r,k,sum1=0,m;\n char a[400][400];\nscanf(\"%lld\",&n);\nlong long int d1[26]={0},mx[26]={0};\nfor(i=0;i<n;i++)\n{\n    scanf(\"%s\",a[i]);\n    \n}\nfor(i=0,j=n-1;i<n;i++,j--){\n    d1[a[i][i]-'a']++;\n    d1[a[i][j]-'a']++;\n   // printf(\"%c %c %lld\\n\",a[i][i],a[i][j],d1[a[i][j]-'a']);\n}\nx=n-1;\n\nfor(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n        if(i!=j && j!=x){\n            mx[a[i][j]-'a']++;\n        }\n    }\n    x--;\n}\nlong long int count1=0,count2=0;\nfor(i=0;i<26;i++){\n    \n    if(d1[i]!=0){\n        count1++;\n    }\n    if(mx[i]!=0){\n        count2++;\n    }\n    if(d1[i]!=0 && mx[i]!=0){\n    \n        count1=0;\n        count2=98;\n        break;\n    }\n}\n//printf(\"%lld %lld\\n\",count1,count2);\nif(count1==1 && count2==1){\n    printf(\"YES\\n\");\n}else{\n    printf(\"NO\\n\");\n}\n    return 0;\n}"}
{"similarity_score": 0.9467723669309174, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "647ff3efba8eff948b885872f52c3429", "bug_code_uid": "cb86efcdac2050a230c33f4ebffb2100", "src_uid": "0e0ef011ebe7198b7189fce562b7d6c1", "apr_id": "7439eae428baaad16d77b67736d05dd2", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,k,max,sum2,min,f,r,o,sum1,sum=0,y,count1=0,a[100000],b[100000];\nscanf(\"%lld\",&test);\nwhile(test--){\nscanf(\"%lld\",&n);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n}\nflag=0;\nmax=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&b[i]);\n    if(a[i]!=b[i] && max==0){\n        max=b[i]-a[i];\n       \n    }else{\n        f=b[i]-a[i];\n       if(a[i]!=b[i]&&f!=max){\n           flag=1;\n          \n       }else{\n           if(a[i]!=b[i] && a[i-1]==b[i-1]){\n               flag=1;\n              \n           }\n       }\n    }\n}\nif(flag==0){\n    printf(\"YES\\n\");\n}else{\n    printf(\"NO\\n\");\n}\n}\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,k,max,sum2,min,f,r,o,sum1,sum=0,y,count1=0,a[100000],b[100000];\nscanf(\"%lld\",&test);\nwhile(test--){\nscanf(\"%lld\",&n);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n}\nflag=0;\nmax=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&b[i]);\n    if(a[i]!=b[i]){\n        if(b[i]-a[i]<0){\n            flag=1;\n           \n        }\n    }\n    if(a[i]!=b[i] && max==0){\n        max=b[i]-a[i];\n       \n    }else{\n        f=b[i]-a[i];\n       if(a[i]!=b[i]&&f!=max){\n           flag=1;\n          \n       }else{\n           if(a[i]!=b[i] && a[i-1]==b[i-1]){\n               flag=1;\n              \n           }\n       }\n    }\n}\nif(flag==0 ){\n    printf(\"YES\\n\");\n}else{\n    printf(\"NO\\n\");\n}\n}\n\nreturn 0;\n}\n"}
{"similarity_score": 0.6748350612629594, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "73e852995b9be4766dea85ae4a02cc48", "bug_code_uid": "7c2fa150701984062db00c860e20ed57", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "f5adf09b744cb0d8ed9b558c0d6d43d4", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid possible_without_change(unsigned long n_x, unsigned long n_y, unsigned long x, unsigned long total)\n{\n\tunsigned long i, j;\n\tfor(i = 0; i <= n_x; i++)\n\t\tfor(j = 0; j <= n_y; j++)\n\t\t{\n\t\t\tunsigned long int crosshair;\n\t\t\tcrosshair = i * x + j;\n\t\t\tif(crosshair == total)\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\tprintf(\"NO\\n\");\n\n}\n\nint main()\n{\n\tunsigned short nTests;\n\tscanf(\"%hu\", &nTests);\n\n\twhile(nTests--)\n\t{\n\t\tunsigned int n_x, n_y, x, total;\n\t\tscanf(\"%u %u %u %u\", &n_x, &n_y, &x, &total);\n\n\t\tpossible_without_change(n_x, n_y, x, total);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nvoid possible_without_change(unsigned long long n_x, unsigned long long n_y, unsigned long long x, unsigned long long total)\n{\n\tif(n_x * x + n_y >= total && total % x <= n_y)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n}\n\nint main()\n{\n\tunsigned short nTests;\n\tscanf(\"%hu\", &nTests);\n\n\twhile(nTests--)\n\t{\n\t\tunsigned int n_x, n_y, x, total;\n\t\tscanf(\"%u %u %u %u\", &n_x, &n_y, &x, &total);\n\n\t\tpossible_without_change(n_x, n_y, x, total);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.2692889561270802, "equal_cnt": 26, "replace_cnt": 14, "delete_cnt": 8, "insert_cnt": 5, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "166c413ce3de43b859aaedf24641cbc0", "bug_code_uid": "175fd2a0a5426d5b40ff4992fd5f9ada", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "7888341f2296075d729f3de5854a1ff7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "  #include <stdio.h>\n    void main ()\n    {\n    int number[4],i, j,d, a;\n    for (i = 0; i < 4; ++i)\n        scanf(\"%d\", &number[i]);\n    for (i = 0; i < 4; ++i)\n        {\n            for (j = i + 1; j < 4; ++j)\n            {\n                if (number[i] < number[j])\n                { a= number[i]; number[i] = number[j]; number[j] = a; }\n            }\n        }\n    for (i = 1; i < 4; ++i)\n        { d=number[0]-number[i];\n            printf(\"%d \", d); }\n\n    }\n", "fixed": "#include<stdio.h>\nint main(){\n\tint x[4],i=0,a,b,c;\n\tscanf(\"%d%d%d%d\",x,x+1,x+2,x+3);\n\tfor(int j=0;j<4;j++)\n\t\tif(x[j]>x[i])\n\t\t\ti = j;\n\n\tfor(int j=0;j<4;j++)\n\t\tif(j!=i)\n\t\t\tprintf(\"%d \",x[i]-x[j]);\n}"}
{"similarity_score": 0.9920634920634921, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d6cdf766adacc51be02355d5774bbd1e", "bug_code_uid": "397e4076f259cb9c571a439a38bcd428", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "10219a09d50a7fa5f5fa4cc4d1f967e2", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,a[1001],i,j,k=0,temp,tempp,p[1001],count=0,flag=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\nfor(i=1;i<=n;i++)\n    for(j=0;j<n-i;j++)\n        if(a[j]>a[j+1])\n           {\n             temp=a[j];\n             a[j]=a[j+1];\n             a[j+1]=temp;\n           }\nfor(i=0;i<n;i++)\n{\n    count=0;\n    for(j=i+1;j<n;j++)\n       if(a[i]==a[j]&&a[j]!='0')\n       {\n        a[j]='0';\n        count++;\n        p[k]=count;\n        k++;\n       }\n}\nfor(i=1;i<=k;i++)\n    for(j=0;j<k-i;j++)\n        if(p[j]<p[j+1])\n        {\n             tempp=p[j];\n             p[j]=p[j+1];\n             p[j+1]=tempp;\n        }\nprintf(\"%d \",p[0]+1);\nfor(i=0;i<n;i++)\n   if(a[i]!='0')\n   {\n    flag++;\n   }\nprintf(\"%d\",flag);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,a[1001],i,j,k=0,temp,tempp,p[1001],count=0,flag=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\nfor(i=1;i<=n;i++)\n    for(j=0;j<n-i;j++)\n        if(a[j]>a[j+1])\n           {\n             temp=a[j];\n             a[j]=a[j+1];\n             a[j+1]=temp;\n           }\nfor(i=0;i<n;i++)\n{\n    count=0;\n    for(j=i+1;j<n;j++)\n       if(a[i]==a[j]&&a[j]!=0)\n       {\n        a[j]=0;\n        count++;\n        p[k]=count;\n        k++;\n       }\n}\nfor(i=1;i<=k;i++)\n    for(j=0;j<k-i;j++)\n        if(p[j]<p[j+1])\n        {\n             tempp=p[j];\n             p[j]=p[j+1];\n             p[j+1]=tempp;\n        }\nprintf(\"%d \",p[0]+1);\nfor(i=0;i<n;i++)\n   if(a[i]!=0)\n   {\n    flag++;\n   }\nprintf(\"%d\",flag);\nreturn 0;\n}\n"}
{"similarity_score": 0.9982964224872232, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bbbc38e55d9782ec05f3168e6fc04e27", "bug_code_uid": "a49315ef74f03906d6ff1cff0ebf6026", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "72e3366c2e84b15dd5ad8dde8e500e15", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\nint q[100005];\nint arr[100005];\nint dis[100005];\nint main()\n{\n    // memset(q,false,sizeof(q));\n    int n,m,num,i;\n    scanf(\"%d%d\",&n,&m);\n    for (i = 0; i < n; ++i)\n    {\n        scanf(\"%d\",arr+i);\n    }\n    dis[n-1]=1;\n    q[arr[n-1]]=1;\n    for (i = n-2; i >=0; --i)\n    {\n        if(q[arr[i]]!=1)\n        {\n            dis[i]=dis[i+1]+1;\n            q[arr[i]]=0;\n        }\n        else\n            dis[i]=dis[i+1];\n    }\n    for (i = 0; i < m; ++i)\n    {\n        scanf(\"%d\",&num);\n        printf(\"%d\\n\",dis[num-1]);\n    }\n    return 0;\n}\n    ", "fixed": "#include <stdlib.h>\n#include <stdio.h>\nint q[100005];\nint arr[100005];\nint dis[100005];\nint main()\n{\n    // memset(q,false,sizeof(q));\n    int n,m,num,i;\n    scanf(\"%d%d\",&n,&m);\n    for (i = 0; i < n; ++i)\n    {\n        scanf(\"%d\",arr+i);\n    }\n    dis[n-1]=1;\n    q[arr[n-1]]=1;\n    for (i = n-2; i >=0; --i)\n    {\n        if(q[arr[i]]!=1)\n        {\n            dis[i]=dis[i+1]+1;\n            q[arr[i]]=1;\n        }\n        else\n            dis[i]=dis[i+1];\n    }\n    for (i = 0; i < m; ++i)\n    {\n        scanf(\"%d\",&num);\n        printf(\"%d\\n\",dis[num-1]);\n    }\n    return 0;\n}\n    "}
{"similarity_score": 0.9838833461243285, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5165431f577382cd80c078045dcb49ec", "bug_code_uid": "f9d075a608be8075d1582839499935b1", "src_uid": "76285a60c21538db17d268a5e06c2270", "apr_id": "9d174d78a239921932f351cbd3ef4030", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\n#include <limits.h>\n\nchar ans[1024][1024];\nint a[1024];\n\nint main(void)\n{\n\tint n, i, x, y, t, max;\n\n\tmemset(ans, ' ', sizeof(ans));\n\tscanf(\"%d\", &n);\n\tmax = t = y = 0;\n\tfor (i=1; i<=n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tt += (i&1)? a[i] : -a[i];\n\t\tt>y? y=t : 0;\n\t\tt<max? max=t : 0;\n\t\ta[i] += a[i-1];\n\t}\n\tmax = -max+y;\n\tprintf(\"%d\\n\", y);\n\tx = 0;\n\tfor (i=1; i<=n; i++)\n\t\tif ((i&1))\n\t\t\tfor (y--; x < a[i]; x++)\n\t\t\t\tans[y--][x] = '/';\n\t\telse\n\t\t\tfor (y++; x < a[i]; x++)\n\t\t\t\tans[y++][x] = '\\\\';\n\tfor (i=0; i<=max; i++) {\n\t\tans[i][x] = '\\0';\n\t\tputs(ans[i]);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\n#include <limits.h>\n\nchar ans[1024][1024];\nint a[1024];\n\nint main(void)\n{\n\tint n, i, x, y, t, max;\n\n\tmemset(ans, ' ', sizeof(ans));\n\tscanf(\"%d\", &n);\n\tmax = t = y = 0;\n\tfor (i=1; i<=n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tt += (i&1)? a[i] : -a[i];\n\t\tt>y? y=t : 0;\n\t\tt<max? max=t : 0;\n\t\ta[i] += a[i-1];\n\t}\n\tmax = -max+y;\n\tx = 0;\n\tfor (i=1; i<=n; i++)\n\t\tif ((i&1))\n\t\t\tfor (y--; x < a[i]; x++)\n\t\t\t\tans[y--][x] = '/';\n\t\telse\n\t\t\tfor (y++; x < a[i]; x++)\n\t\t\t\tans[y++][x] = '\\\\';\n\tfor (i=0; i<max; i++) {\n\t\tans[i][x] = '\\0';\n\t\tputs(ans[i]);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9979123173277662, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "aaa15dfacad6e759e8c048a9b68393f1", "bug_code_uid": "f379908a4355024e3e3f8f84ef597bde", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "8ddee8a89a83564d79649d27cceb75c8", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n#define MAXLIMIT 1000\n\nint main()\n{\n\tint N;\n\tscanf(\"%i\", &N);\n\n\tint l[N];\n\tint arr[MAXLIMIT];\n\tfor(int i=0; i<MAXLIMIT; ++i)\n\t\tarr[i] = 0;\n\n\tfor(int i=0; i<N; ++i)\n\t{\n\t\tscanf(\"%d\", l + i);\n\t\tarr[l[i]]++;\n\t}\n\n\n\tint max_index = 0;\n\tfor(int i =0; i<MAXLIMIT; ++i)\n\t\tif(arr[i] > arr[max_index])\n\t\t\tmax_index = i;\n\n\tint count = 0;\n\tfor(int i=0; i < MAXLIMIT; ++i)\n\t\tif(arr[i])\n\t\t\t++count;\n\n\tprintf(\"%d %d\", arr[max_index], count);\n\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n#define MAXLIMIT 1001\n\nint main()\n{\n\tint N;\n\tscanf(\"%i\", &N);\n\n\tint l[N];\n\tint arr[MAXLIMIT];\n\tfor(int i=0; i<MAXLIMIT; ++i)\n\t\tarr[i] = 0;\n\n\tfor(int i=0; i<N; ++i)\n\t{\n\t\tscanf(\"%d\", l + i);\n\t\tarr[l[i]]++;\n\t}\n\n\n\tint max_index = 0;\n\tfor(int i =0; i<MAXLIMIT; ++i)\n\t\tif(arr[i] > arr[max_index])\n\t\t\tmax_index = i;\n\n\tint count = 0;\n\tfor(int i=0; i < MAXLIMIT; ++i)\n\t\tif(arr[i])\n\t\t\t++count;\n\n\tprintf(\"%d %d\", arr[max_index], count);\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8268156424581006, "equal_cnt": 15, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 10, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "77d1d1cc88c506e932a2e3c9c79fdeb1", "bug_code_uid": "8111f43fd3658a12a2de15470bc9c61b", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "ed74bd15cd90a94139975b8ba2cf8ab8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main(){\nint h,n,i,w=0,x;\nscanf(\"%d%d\",&n,&h);\nfor(i=0;i<n;i++){\n\n    scanf(\"%d\",x);\n    if(x<=h)w=w+1;\n    else w=w+2;}\nreturn 0;\n}\n\n\n\n}\n", "fixed": "\n#include<stdio.h>\nint main(){\n\n    int n,h,i,w=0,x;\n    scanf(\"%d%d\",&n,&h);\n    for(i=0;i<n;i++){\n\n        scanf(\"%d\",&x);\n        if(x<=h)w=w+1;\n        else w=w+2;\n    }\n    printf(\"%d\\n\",w);\n}\n"}
{"similarity_score": 0.9982847341337907, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "585308916ff393dfb5a8ef590a604010", "bug_code_uid": "3060f7994e1f47b70095dd2daf8097cc", "src_uid": "c01da186ee69936eb274dce6e1222e43", "apr_id": "205797ae72fb8722adf1ee30c9da0c80", "difficulty": 2100, "tags": ["dp", "bitmasks", "divide and conquer", "data structures", "binary search", "trees"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t100000\n#define L\t29\n\nint min(int a, int b) { return a < b ? a : b; }\n\nint solve(int *aa, int n, int l) {\n\tint n_, i, tmp;\n\n\tif (l < 0)\n\t\treturn 0;\n\tn_ = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif ((aa[i] & 1 << l) == 0)\n\t\t\ttmp = aa[n_], aa[n_] = aa[i], aa[i] = tmp, n_++;\n\treturn n_ == 0 || n_ == n ? solve(aa, n, l - 1) : min(solve(aa, n_, l - 1) + n - n_ - 1, n_ - 1 + solve(aa + n_, n - n_, l - 1));\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, i;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tprintf(\"%d\\n\", solve(aa, n, L));\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t200000\n#define L\t29\n\nint min(int a, int b) { return a < b ? a : b; }\n\nint solve(int *aa, int n, int l) {\n\tint n_, i, tmp;\n\n\tif (l < 0)\n\t\treturn 0;\n\tn_ = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif ((aa[i] & 1 << l) == 0)\n\t\t\ttmp = aa[n_], aa[n_] = aa[i], aa[i] = tmp, n_++;\n\treturn n_ == 0 || n_ == n ? solve(aa, n, l - 1) : min(solve(aa, n_, l - 1) + n - n_ - 1, n_ - 1 + solve(aa + n_, n - n_, l - 1));\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, i;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tprintf(\"%d\\n\", solve(aa, n, L));\n\treturn 0;\n}\n"}
{"similarity_score": 0.23731138545953362, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 8, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "73cc17cdffdf8d289528b803c0f6cc43", "bug_code_uid": "575e2a344f260ab20e7a48e2afb63558", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "695d58f24b33046a97267e3703d6e1b3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    long long int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n       long long  int a,b,c;\r\n\r\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\r\n        if((a==b)&&(b==c)&&(c==a)){\r\n            printf(\"%lld %lld %lld\\n\",a+1,b+1,c+1);\r\n            continue;\r\n        }\r\n        if(a>b&&a>c){\r\n            printf(\"0 %lld %lld\\n\",a-b+1,a-c+1);\r\n             continue;\r\n        }\r\n        if(b>a&&b>c){\r\n            printf(\"%lld 0 %lld\\n\",b-a+1,b-c+1);\r\n             continue;\r\n        }\r\n         if(c>a&&c>b){\r\n            printf(\"%lld %lld 0\\n\",c-a+1,c-b+1);\r\n         continue;\r\n        }\r\n\r\n\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main() \r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n    int a, b, c;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    int A, B, C;\r\n    if(a>b && a>c)\r\n    {\r\n        A=0;\r\n        B=a-b+1;\r\n        C=a-c+1;\r\n    }\r\n    else if(b>a && b>c)\r\n    {\r\n        A=b-a+1;\r\n        B=0;\r\n        C=b-c+1;\r\n    }\r\n    else if(c>b && c>a)\r\n    {\r\n        A=c-a+1;\r\n        B=c-b+1;\r\n        C=0;\r\n    }\r\n    else if(a==b)\r\n    {\r\n        A=1;\r\n        B=1;\r\n        C=a-c+1;\r\n    }\r\n    else if(b==c)\r\n    {\r\n        A=b-a+1;\r\n        B=1;\r\n        C=1;\r\n    }\r\n    else if(c==a)\r\n    {\r\n        A=1;\r\n        B=a-b+1;\r\n        C=1;\r\n    }\r\n    else if(a==b && b==c)\r\n    {\r\n        A=1;\r\n        B=1;\r\n        C=1;\r\n    }\r\n    \r\n    printf(\"%d %d %d\\n\",A,B,C);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8582677165354331, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d5d0bc2de26b9b617f3a48aa2365b634", "bug_code_uid": "3c318f75159f4826bb59484ca8596f12", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "fd5039f78ad1e056430e629c1dd32dd8", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int n,i,odd,even,lastodd,lasteven;\n    odd = even = 0;\n    scanf(\"%d\",&n);\n\n    int nums[n];\n\n    for(i = 0; i < n; i++){\n        scanf(\"%d\",&nums[i]);\n    }\n\n    for(i = 0; i < n; i++){\n        if(nums[i] % 2 == 0){\n            lasteven = nums[i];\n            even++;\n        } else{\n            lastodd = nums[i];\n            odd++;\n        }\n    }\n\n    if(odd > even){\n        printf(\"%d\",lasteven);\n    } else{\n        printf(\"%d\",lastodd);\n    }\n\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int n,i,odd,even,lastodd,lasteven;\n    odd = even = 0;\n    scanf(\"%d\",&n);\n\n    int nums[n];\n\n    for(i = 0; i < n; i++){\n        scanf(\"%d\",&nums[i]);\n    }\n\n    for(i = 0; i < n; i++){\n        if(nums[i] % 2 == 0){\n            lasteven = i + 1;\n            even++;\n        } else{\n            lastodd = i + 1;\n            odd++;\n        }\n    }\n\n    if(odd > even){\n        printf(\"%d\",lasteven);\n    } else{\n        printf(\"%d\",lastodd);\n    }\n\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.996996996996997, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "60cac8e51302e81d34d0d5d0d490f31d", "bug_code_uid": "68e4c0011c9c9a9dd00457ef7a7ef945", "src_uid": "7f98c9258f3e127a782041c421d6317b", "apr_id": "83d9e434eff6b6deec4544e8bbed4410", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,a[100000]={0},mx=0,c=0,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&m);\n        a[m]++;\n        if(a[m]==1)\n        {\n            c++;\n            if(c>mx)\n                mx=c;\n        }\n        else\n            c--;\n    }\n    printf(\"%d\\n\",mx);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,a[100002]={0},mx=0,c=0,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&m);\n        a[m]++;\n        if(a[m]==1)\n        {\n            c++;\n            if(c>mx)\n                mx=c;\n        }\n        else\n            c--;\n    }\n    printf(\"%d\\n\",mx);\n    return 0;\n}\n"}
{"similarity_score": 0.9449236894492369, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "49e33ddb5c6fa9c56ca9f92e80202e8d", "bug_code_uid": "ec9f4c8982262aa286d2d01e80c3d750", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "3075ebdc8f5105b7af9f7a928d8d5ddf", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <math.h>\n#include <stdlib.h>\nint main () {\n    #ifdef LOCAL\n        freopen (\"input.txt\", \"r\", stdin);\n        freopen (\"output.txt\", \"w\", stdout);\n        freopen (\"error.txt\", \"w\", stderr);\n    #endif\n    long int n; scanf (\"%ld\", &n);\n    long int zero=0, prod=1, a, cost=0;\n    for (long int i=0;i<n;++i) {\n        scanf (\"%ld\", &a);\n        getchar();\n        if (a==0) zero++;\n        else if (a>=1) cost+=a-1;\n        else if (a<=-1) {\n            prod*=-1;\n            cost+=-1-a;\n        }\n    }\n    if (prod==1) printf (\"%ld\", cost+zero);\n    else if (prod==-1) {\n        if (zero) printf (\"%ld\", cost+zero);\n        else printf (\"%ld\", cost+2);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#include <math.h>\n#include <stdlib.h>\nint main () {\n    #ifdef LOCAL\n        freopen (\"input.txt\", \"r\", stdin);\n        freopen (\"output.txt\", \"w\", stdout);\n        freopen (\"error.txt\", \"w\", stderr);\n    #endif\n    unsigned long long int n; scanf (\"%llu\", &n);\n    unsigned long long int zero=0, cost=0;\n    long int a;\n    int prod=1;\n    for (long int i=0;i<n;++i) {\n        scanf (\"%ld\", &a);\n        getchar();\n        if (a==0) zero++;\n        else if (a>=1) cost+=a-1;\n        else if (a<=-1) {\n            prod*=-1;\n            cost+=-1-a;\n        }\n    }\n    if (prod==1) printf (\"%llu\", cost+zero);\n    else if (prod==-1) {\n        if (zero) printf (\"%llu\", cost+zero);\n        else printf (\"%llu\", cost+2);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9811320754716981, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fea89487df34f24c2d69ee9102377aa2", "bug_code_uid": "56592810e5d63e67cdb62f19b5f0c7b2", "src_uid": "b43dee2f223c869a35b1b11ceb9d2b6b", "apr_id": "b6d81cb3a03218b6b4b92fc19bd27056", "difficulty": 900, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\t//3 5 7\n\tint t,i,j,k;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,flag=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<=n/3&flag==0;i++)\n\t\t{\n\t\t\tfor(j=0;j<=(n-i)/5&&flag==0;j++)\n\t\t\t{\n\t\t\t\tfor(k=0;k<=(n-i-k)/7&&flag==0;k++)\n\t\t\t\tif(3*i+5*j+7*k==n)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d %d %d\\n\",i,j,k);\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag==0) printf(\"-1\\n\");\n\t}\n\treturn 0;\n } \n", "fixed": "#include<stdio.h>\nint main(void)\n{\n\t//3 5 7\n\tint t,i,j,k;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,flag=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<=n/3&flag==0;i++)\n\t\t{\n\t\t\tfor(j=0;j<=n/5&&flag==0;j++)\n\t\t\t{\n\t\t\t\tfor(k=0;k<=n/7&&flag==0;k++)\n\t\t\t\tif(3*i+5*j+7*k==n)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d %d %d\\n\",i,j,k);\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag==0) printf(\"-1\\n\");\n\t}\n\treturn 0;\n } \n"}
{"similarity_score": 0.2436849925705795, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "fa8431636bada43dd2b0fd7044becf24", "bug_code_uid": "179d551e4acacca792893bcb90e752a4", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "b90a78b3bf1b49d571c5a1b34f5f8d0c", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t, n,i,j;\n\tscanf(\"%d\",&t);\n\tfor (i = 0;i < t;i++){\n\t\tscanf(\"%d\\n\",&n);\n\t\tchar s[n];\n\t\tchar max;\n\t\tint max1;\n\t\tmax = 'a';\n\t\tfor(j = 1;j <=n;j++){\n\t\t\tscanf(\"%c\",&s[j]);\n\t\t\tmax = s[j] > s[j-1] ? max = s[j]:max;\n\t\t\tmax1 =(int)(max) - 96;\n\t\t}\n\t\tprintf(\"%d\\n\",max1);\n\t}\n\t\n}\n\t\t\t  \t   \t     \t \t \t\t   \t\t\t\t  \t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,j,k,l,t,h;\n\tchar a[1000],e='0';\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tscanf(\"%s\",a);\n\tfor(l=1;l<=j-1;l++)\n\t{\n\t\tfor(t=0;t<=j-1-l;t++)\n\t\tif(a[t]>a[t+1])\n\t\t{\n\t\t\te=a[t];\n\t\t\ta[t]=a[t+1];\n\t\t\ta[t+1]=e;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",a[j-1]-96);\n    }\n\treturn 0;\n}\n  \t     \t\t \t\t\t \t\t\t\t     \t \t\t \t"}
{"similarity_score": 0.4095004095004095, "equal_cnt": 34, "replace_cnt": 26, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 33, "lang": "GNU C", "fix_code_uid": "47515193b7e7852aa441bc174f8562df", "bug_code_uid": "f39c0a26cf822408b8af74a3f8ace3bc", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "cd30acf2fde3f887adecdf4803e84655", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,n,j,p=0;\n    char c[100000];\n    scanf(\"%s\", &c);\n    n=strlen(c);\n    for (i=0; i<n-1 ; i++){\n        if (c[i]=='A' && c[i+1]=='B'){\n            for (j=i+2; j<n-1; j++){\n                if(c[j]=='B' && c[j+1]=='A'){\n                    p=1;\n                    break;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", p);\n    for (i=0; i<n-1 ; i++){\n        if (c[i]=='B' && c[i+1]=='A'){\n            for (j=i+2; j<n-1; j++){\n                if(c[j]=='A' && c[j+1]=='B'){\n                    p=1;\n                    break;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", p);\n    if (p==1) printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    char a[100001];\n\tscanf(\"%s\",a);\n\tint i=0,l=strlen(a),j,p=0;\n\tfor(i=0;i<l-1;i++)\n\t{\n\t\tif(a[i]=='A' && a[i+1]=='B')\n\t\t{\n\t\t\tfor(j=i+2;j<l-1;j++)\n\t\t\tif(a[j]=='B' && a[j+1]=='A'){\n\t\t\tp=1;\n\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(p==0)\n\tfor(i=0;i<l-1;i++)\n\t{\n\t\tif(a[i]=='B' && a[i+1]=='A')\n\t\t{\n\t\t\tfor(j=i+2;j<l-1;j++)\n\t\t\tif(a[j]=='A' && a[j+1]=='B'){\n\t\t\tp=1;\n\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(p==1)\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.4564755838641189, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a53db58fdf50dd2ba49dd5f1e49d7b70", "bug_code_uid": "c2d7c3400aa952754771042f271a348a", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "6b5a7126de51da38353ddbd1651c8f1f", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n    int n,t,a[n][3],i,sum=0,x=1;\n    scanf(\"%d%d\",&n,&t);\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&a[i][0],&a[i][1]);\n    for(i=0;i<n;i++)\n    {   \n        if(a[i][0]==x)\n        sum=sum+(a[i][1]-a[i][0])+1;\n        else \n        {\n           for(;x<=a[i][0];)\n            x=x+t;\n        \n        x=x-t;\n        \n        sum=sum+(a[i][1]-x)+1;\n        \n        x=a[i][1]+1;\n       }\n    \n        \n        \n      \n    }\n    printf(\"%d\",sum);\n    \n        \n    return 0;\n    \n}", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n    int n,t,a,b,i,sum=0,x=1;\n    scanf(\"%d%d\",&n,&t);\n    \n    for(i=0;i<n;i++)\n    \n    {   \n        scanf(\"%d%d\",&a,&b);\n        if(a==x)\n        sum=sum+(b-a)+1;\n        else \n        {\n           for(;x<=a;)\n            x=x+t;\n        \n        x=x-t;\n        \n        sum=sum+(b-x)+1;\n        \n        \n       }\n       x=b+1;\n      \n    }\n    printf(\"%d\",sum);\n    \n        \n    return 0;\n    \n}"}
{"similarity_score": 0.0774703557312253, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b4e103110780f1060170b5671c77f1be", "bug_code_uid": "b04b9a5b5c917d3c9f408a7d0af89de4", "src_uid": "0cbd3eee259b1436f82e259be7d7ee0e", "apr_id": "0a6a86b61623cf97c71c7135673a1207", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char myarray[1000];\n    scanf(\"%s\",&myarray);\n    int i=0,j=0,temp=0,flag=0,len=0;\n    len=strlen(myarray);\n    for(j=len-1; j>=0; j--)\n    {\n        if(myarray[j]!='0')\n        {\n            break;\n        }\n        if(myarray[j]=='0')\n        {\n            myarray[j]='\\0';\n            temp++;\n        }\n    }\n    len-=temp;\n    for(i=0,j=len-1; i<=len/2; i++,j--)\n    {\n        if(myarray[i]!=myarray[j])\n        {\n            flag=1;\n            break;\n        }\n    }\n    if(!flag)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\nint count=0;\n \nvoid visiblebox(long int a[5000], int n)\n{\n    if(n==0)\n        return;\n    int i,j,k=0;\n    long int b[5000];\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==a[i+1])\n            b[k++]=a[i];\n    }\n    \n    count+=1;\n    visiblebox(b,k);\nreturn;\n}\n \nint comparator(const void *p, const void *q)\n{\nlong int l = *(long int *)p;\nlong int r = *(long int *)q;\nreturn (l-r);\n \n}\n \nint main()\n{\n    int i,n;\n    long int a[5000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n \n    qsort(a,n,sizeof(long int),comparator);\n \n   visiblebox(a,n);\n    printf(\"%d\\n\",count);\n    return 0;\n}"}
{"similarity_score": 0.9798657718120806, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "13311669c216242f1bb960283f065eee", "bug_code_uid": "89d4ba4c9279498400eca16e14beacd9", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "f7bc4ba3c51778b3a803acae106f7883", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio>\nint main()\n{\n    int n;\n    while (scanf(\"%d\",&n)!=0)\n    {\n        for (int i=1;i<=n;i++)\n        {\n            if (i%2) printf(\"I hate \");\n            else printf(\"I love \");\n            if (i==n) printf(\"it\\n\");\n            else printf(\"that \");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    while (scanf(\"%d\",&n)!=EOF)\n    {\n        for ( i=1;i<=n;i++)\n        {\n            if (i%2) printf(\"I hate \");\n            else printf(\"I love \");\n            if (i==n) printf(\"it\\n\");\n            else printf(\"that \");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9904761904761905, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6f09142ff939254a9967e987d69f7014", "bug_code_uid": "59e7f247d0832102f8fe815677b772c8", "src_uid": "d715095ff068f4d081b58fbfe103a02c", "apr_id": "217608494324489d3ba26ba5d9f60dbc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint x,y;\n\tscanf(\"%d %d\",&x,&y); getchar();\n\tchar input[60][60];\n\tfor(int i = 0;i<x;i++)\n\t{\n\t\tfor(int j = 0;j<y;j++)\n\t\t{\n\t\t\tscanf(\"%c\",&input[i][j]);\n\t\t}\n\t\tgetchar();\n\t}\n\tint atas,bawah,kiri,kanan;\n\tint flaga,flagb,flagki,flagka;\n\tflaga = flagb = flagki = flagki = 0;\n\tfor(int i = 0;i<x;i++)\n\t{\n\t\tfor(int j = 0;j<y;j++)\n\t\t{\n\t\t\tif(flaga == 0 &&input[i][j] == '*' )\n\t\t\t{\n\t\t\t\tatas = i;\n\t\t\t\tkiri = j;\n\t\t\t\tkanan = j;\n\t\t\t\tbawah = i;\n\t\t\t\tflaga = 1;\n\t\t\t}\n\t\t\telse if(j < kiri && input[i][j] == '*')\n\t\t\t{\n\t\t\t\tkiri = j;\n\t\t\t}\n\t\t\telse if(j > kanan && input[i][j] == '*')\n\t\t\t{\n\t\t\t\tkanan = j;\n\t\t\t}\n\t\t\telse if(input[i][j] == '*')\n\t\t\t{\n\t\t\t\tbawah = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0;i<x;i++)\n\t{\n\t\tint masuk = 0;\n\t\tfor(int j = 0;j<y;j++)\n\t\t{\n\t\t\tif(i >= atas && i <= bawah && j >= kiri && j <= kanan)\n\t\t\t{\n\t\t\t\tmasuk = 1;\n\t\t\t\tprintf(\"%c\",input[i][j]);\n\t\t\t}\n\t\t}\n\t\tif(masuk == 1) puts(\"\");\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint x,y;\n\tscanf(\"%d %d\",&x,&y); getchar();\n\tchar input[60][60];\n\tfor(int i = 0;i<x;i++)\n\t{\n\t\tfor(int j = 0;j<y;j++)\n\t\t{\n\t\t\tscanf(\"%c\",&input[i][j]);\n\t\t}\n\t\tgetchar();\n\t}\n\tint atas,bawah,kiri,kanan;\n\tint flaga,flagb,flagki,flagka;\n\tflaga = flagb = flagki = flagki = 0;\n\tfor(int i = 0;i<x;i++)\n\t{\n\t\tfor(int j = 0;j<y;j++)\n\t\t{\n\t\t\tif(flaga == 0 &&input[i][j] == '*' )\n\t\t\t{\n\t\t\t\tatas = i;\n\t\t\t\tkiri = j;\n\t\t\t\tkanan = j;\n\t\t\t\tbawah = i;\n\t\t\t\tflaga = 1;\n\t\t\t}\n\t\t\tif(j < kiri && input[i][j] == '*')\n\t\t\t{\n\t\t\t\tkiri = j;\n\t\t\t}\n\t\t\tif(j > kanan && input[i][j] == '*')\n\t\t\t{\n\t\t\t\tkanan = j;\n\t\t\t}\n\t\t\tif(input[i][j] == '*')\n\t\t\t{\n\t\t\t\t\tbawah = i;\n\t\t\t}\n\t\t}\n\t}\t\n\tfor(int i = 0;i<x;i++)\n\t{\n\t\tint masuk = 0;\n\t\tfor(int j = 0;j<y;j++)\n\t\t{\n\t\t\tif(i >= atas && i <= bawah && j >= kiri && j <= kanan)\n\t\t\t{\n\t\t\t\tmasuk = 1;\n\t\t\t\tprintf(\"%c\",input[i][j]);\n\t\t\t}\n\t\t}\n\t\tif(masuk == 1) puts(\"\");\n\t}\n}\n"}
{"similarity_score": 0.5334491746307559, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "d6a763fcb745be4cc025e49c7fec96ac", "bug_code_uid": "85c2f2fff637272eadf244b522d1a0d4", "src_uid": "ebf0bf949a29eeaba3bcc35091487199", "apr_id": "0c01a049e83294e2d9699e79e196717c", "difficulty": 800, "tags": ["greedy", "sortings", "games"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunc (const void * a1, const void * b1)\n { return ( *(int*)b1 - *(int*)a1 ); }\nmain()\n{\n\tint t; scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tchar str[50000]; int arr[50000];\tint a,k=0,sum=0; scanf(\"%s\",&str);\n\t\tfor(a=0;\tstr[a]!='\\0';\ta++)\n\t\t{ \t\n\t\t\tif(str[a]=='1')\n\t\t\t{ for(int b=a; str[b] ;b++)\t{\t\n\t\t\t\tif(str[b]=='0') break;\n\t\t\t\t arr[k]++;\ta++;\t\t} k++;\t}\n\t\t}\n\t   qsort(arr,k, sizeof(int), cmpfunc);\n\tfor(int c=0; arr[c]; c+=2)\n\tsum=sum+arr[c];\n\tprintf(\"%d\\n\",sum);\n\t\tfor(int d=0; d<=100000; d++) arr[d]=0;\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include <stdlib.h>\nint cmpfunc (const void * a1, const void * b1)\n { return ( *(int*)b1 - *(int*)a1 ); }\nmain()\n{\n\tint t; scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tchar str[50000];\tscanf(\"%s\",&str);\n\t\tint k=0,arr[50000],a,b,c,ok,sum=0;\n\t\tfor(a=0 ; str[a] ; a++)\n\t\t{\n\t\t\tif(str[a]=='1') {arr[k]++;ok=10;\t}\n\t\t\telse if(str[a-1]=='1' && str[a]=='0') {k++;ok=9;}\n\t\t}\n\t\tif(ok==10) k++;\n  \t\tqsort(arr,k, sizeof(int), cmpfunc);\n  \t//\tfor(int d=0; d<=k; d++) printf(\"arr[%d]=%d\\n\",d,arr[d]);\n  \t\tfor(int b=0 ; b<=k ; b=b+2)\t\tsum+=arr[b];\n  \t\tprintf(\"%d\\n\",sum);\n  \t\tfor(int d=0; d<=1000; d++) arr[d]=0;\n\t}\n}\n"}
{"similarity_score": 0.829981718464351, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "374967252fc19511b9bcbb3e3bf86ada", "bug_code_uid": "074b4e033e2c4b92fbd0a8356bd4dae5", "src_uid": "1d4aaf15e5c6fcde50515880aae74720", "apr_id": "46d9447b8fe207fd764ea435ab80f150", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[10000],n,m=0,i,t=0,k=0;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", a[i]);\n        if(a[i]>=m) {t=m; k=i; m=a[i];}\n        }\n    printf(\"%d %d\", k+1, t);\n    return 0;\n    }\n", "fixed": "#include <stdio.h>\n\nint a[10000],n,m=0,i,t=0,k=0;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &a[i]);\n        if(a[i]>=m) {m=a[i]; k=i;}\n        }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>=t && a[i]<m) t=a[i];\n        }\n    printf(\"%d %d\", k+1, t);\n    return 0;\n    }\n"}
{"similarity_score": 0.4, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "8acbdf5636bcb16d740a404ced790fe7", "bug_code_uid": "87cf4d2d5cdab7c3b05d1524b0f88bd5", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "f4621adecb424c7ac2d10a9c63c41f37", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char a[10000];\n    gets (a);\n    int sum=0,j,l,i;\n    l=strlen(a);\n    for(i=0;i<l;i++)\n    {\n        j=a[i]-48;\n        sum=sum+j;\n        \n        \n    }\n    printf(\"%d\",sum);\n    \n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n    int count=0,sum=0,i,x; \n    char a[1000001];\n    gets(a);\n    \n    if(strlen(a)==1)\n    {\n       printf(\"0\"); \n       return 0;\n    }\n \n    for(i=0;i<strlen(a);i++)\n    {   \n        sum+=a[i]-'0';    \n    }\n    while(sum>=10)\n    {   x=0;\n        while(sum)\n        {\n            x=x+sum%10;\n            sum/=10;\n        }\n        count++;\n        sum=x;\n    }\n       \n       \n    \n    printf(\"%lld\",count+1);\n    return 0;\n    \n}"}
{"similarity_score": 0.9904912836767037, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b4529181ce1e27ffb1a07a67f00746bc", "bug_code_uid": "79d5c3a85a0f3a5caae75d4ccd899a03", "src_uid": "b63a6369023642a8e7e8f449d7d4b73f", "apr_id": "01de041bff847b4773859edb6f174746", "difficulty": 900, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++)\r\n    {\r\n        long long int A,B;int n;\r\n        scanf(\"%lld%lld%d\",&A,&B,&n);\r\n        long long int a[n],b[n];\r\n        long long int ma=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&a[j]);\r\n            ma=ma>a[j]?ma:a[j];\r\n        }\r\n        long long int ak=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&b[j]);\r\n            if(b[j])%A!=0) ak+=a[j];\r\n            ak+=a[j]*(b[j]/A);\r\n        }\r\n        if(B>ak-ma) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n}    ", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++)\r\n    {\r\n        long long int A,B;int n;\r\n        scanf(\"%lld%lld%d\",&A,&B,&n);\r\n        long long int a[n],b[n];\r\n        long long int ma=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&a[j]);\r\n            ma=ma>a[j]?ma:a[j];\r\n        }\r\n        long long int ak=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&b[j]);\r\n            if(b[j]%A!=0) ak+=a[j];\r\n            ak+=a[j]*(b[j]/A);\r\n        }\r\n        if (B>ak-ma) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n}    \r\n        "}
{"similarity_score": 0.5994962216624685, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b25a328b448f3fbc1b443fa8ed2457ce", "bug_code_uid": "2285e20c15d98aa537e4478303822ecc", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "1e82c78442da9145f0c76361bb6d07ef", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a,b,c;\n\tscanf(\"%d %d %d\",&a,&b,&c);\n\tif(a+b==c||a+c==b||b+c==a)\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\"); \n\t\n\t\n\t\n}\n  \t\t\t\t \t \t \t\t  \t\t\t \t     \t\t\t \t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a,b,c,t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\tscanf(\"%d%d%d\",&a,&b,&c);\n\tif(a+b==c||a+c==b||b+c==a)\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\t\n\t}\n\treturn 0;\n } \n\t\t \t\t      \t\t\t\t\t \t\t\t\t  \t \t  \t"}
{"similarity_score": 0.1718213058419244, "equal_cnt": 17, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "7dfb7b83b08f2be5c8a852050f5d0038", "bug_code_uid": "8d6221dad5d9fdcf5dc6ba2aa7636944", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "b256620b670be56ffc5aabd4c6f4f005", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<math.h>\n#include<stdio.h>\n#include<ctype.h>\nusing namespace std;\nint main()\n{\n\tint n;\n\tcin>>n;\n\tint m[10004]={0};\n\tint k;\n\twhile(n--)\n\t{\n\t\tcin>>k;\n\t\tm[k]++;\n\t}\n\tint max=-1;\n\tint num=0;\n\tfor(int i=0;i<10003;i++)\n\t{\n\t\tif(max<m[i])\n\t\t\tmax=m[i];\n\t\tif(m[i]!=0)\n\t\t\tnum++;\n\n\t}\n\tcout<<max<<\" \"<<num<<endl;\n\treturn 0;\n}\n\t \t\t  \t   \t \t   \t\t  \t   \t \t \t\t\t", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\twhile (~scanf(\"%d\", &n))\n\t{\n\t\tint tmp;\n\t\tint cnt = 0;\n\t\tint list[1001] = { 0 };\n\t\tint max = 1;\n\t\tint maxmax = -1;\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &tmp);\n\t\t\tlist[tmp]++;\n\t\t\tif (maxmax < tmp)\n\t\t\t\tmaxmax = tmp;\n\t\t}\n\t\tfor (int i = 0; i <= maxmax; i++)\n\t\t{\n\t\t\tif (list[i] != 0)\n\t\t\t\tcnt++;\n\t\t\tif (list[i] > max)\n\t\t\t\tmax = list[i];\n\t\t}\n\t\tprintf(\"%d %d\\n\", max, cnt);\n\t}\n\n\treturn 0;\n}\n\n\t\t\t  \t \t \t   \t\t\t  \t  \t  \t\t\t\t\t\t"}
{"similarity_score": 0.9933333333333333, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7fea74fa0baebbfba42d29c681af250b", "bug_code_uid": "dfbc514851db3da49773a3cbd6e9df7b", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "55a82954173e8e7898537d24a2b7b7e2", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,n,t;\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;m++)\n\t{\n\t\tscanf(\"%d\",&n);\n        printf(\"%d\\n\",(n+1)/2);\n\t}\n\treturn 0;\n } \n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,n,t;\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d\",&n);\n        printf(\"%d\\n\",(n+1)/2);\n\t}\n\treturn 0;\n } \n"}
{"similarity_score": 0.9754500818330606, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "274af73c6f04d1a7a0696f8e05cf33fc", "bug_code_uid": "bc93dbb8493f00d26aa384269f8946fd", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "178606dae32288abccd9828e56898ad8", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nfor(int i=0;i<t;i++)\r\n{\r\nint a,b;\r\nscanf(\"%d %d\",&a,&b);\r\nif(a>0&&b>0)\r\n{\r\nprintf(\"%d\",(a+(b*2))+1);\r\n}\r\nelse if(a>0&&b==0)\r\n{\r\nprintf(\"%d\",a+1);\r\n}\r\nelse if(a==0&&b>0)\r\n{\r\nprintf(\"%d\",b-1);\r\n}\r\nelse\r\n{\r\nprintf(\"%d\",a+1);\r\n}\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nfor(int i=0;i<t;i++)\r\n{\r\nint a,b;\r\nscanf(\"%d %d\",&a,&b);\r\nif(a>0&&b>0)\r\n{\r\nprintf(\"%d\\n\",(a+(b*2))+1);\r\n}\r\nelse if(a>0&&b==0)\r\n{\r\nprintf(\"%d\\n\",a+1);\r\n}\r\nelse if(a==0&&b>0)\r\n{\r\nprintf(\"1\\n\");\r\n}\r\nelse\r\n{\r\nprintf(\"%d\\n\",a+1);\r\n}\r\n}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9978768577494692, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "467aa31111804eb5078f1c940b605cde", "bug_code_uid": "a68c5073f089deda4783ece3b9da1b7d", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "27b7a6b085e8064a499b2e9e7616731c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long n,s;\r\n        scanf(\"%lld%lld\",&n,&s);\r\n        long long int r=s/(n*n);\r\n        print(\"%lld\\n\",r);\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long n,s;\r\n        scanf(\"%lld%lld\",&n,&s);\r\n        long long int r=s/(n*n);\r\n        printf(\"%lld\\n\",r);\r\n        \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5077881619937694, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "a808fd83857c4cc2052c40d793b6db9f", "bug_code_uid": "824c6c1f566325182b3ded4136b5a8d5", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "95a2a78eb4dbc25a2cdc7e09e6e5f68a", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint i,t,a[108],b[108]={0},j=3;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tfor(j=3;a[i]>=(180*(j-2)/j);j++)\n\t\t{\n\t\t\tif(a[i]==(180*(j-2)/j))\n\t\t\t{\n\t\t\t\tb[i]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<t;i++)\n\t{\n\t\t\n\t\tif(b[i]==1)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}else printf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t,n;\n\tint i,a;\n\tint j;\n\tint temp;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tfor(j=3;j<=360;j++)\n\t\t{\n\t\t\tif(360%j==0)\n\t\t\t{\n\t\t\t\ttemp=360/j;\n\t\t\t\tif(180-temp==a)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(j==361)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n    return 0;\n}"}
{"similarity_score": 0.7904255319148936, "equal_cnt": 18, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 11, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "1a31dba4b92d0584a131f1e444d86fb6", "bug_code_uid": "6a78deb8b52b1d73d11873ebb0ad95cb", "src_uid": "bf573af345509b2364ada6e613b6f998", "apr_id": "3036c64a78ab10ff148845de79252ee8", "difficulty": 1100, "tags": ["implementation", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\n\nint main(void)\n{\n    int a[100001],x[100001],app,sum,j;\n    int map[200001];\n    int i,n,p,t;\n    scanf(\"%d\",&t);\n    sum =0;\n    app =0;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d\",&x[i],&a[i]);\n        sum = sum+a[i];\n        map[x[i] + 100000] = a[i];\n        if(x[i]<0)\n            n++;\n        else\n            p++;\n    }\n    //printf(\"%d%d%d\",n,p,sum);\n    qsort(x,t,sizeof(int),compare);\n    if(n==p)\n    {\n        app = sum;\n        printf(\"%d\\n\",app);\n    }   \n    if(n>p)\n    {\n        for(i=0;i<(2*p)+1;i++)\n        {\n            app = app+map[x[i] + 100000];\n        }\n        printf(\"%d\\n\",app);\n    }\n    if(p>n)\n    {\n        for(i=0;i<((2*n)+1);i++)\n        {\n            app = app+map[x[i]+100000];\n        }\n        printf(\"%d\\n\",app);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\nint main(void)\n{\n    int a[100000],x[10000],app,sum,j;\n    int mapp[200000];\n    int i,n,p,t;\n    scanf(\"%d\",&t);\n    sum =0;\n    app =0;\n    n=0;\n    p=0;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d\",&x[i],&a[i]);\n        sum = sum+a[i];\n        mapp[x[i] + 100000] = a[i];\n        if(x[i]<0)\n            n++;\n        else\n            p++;\n    }\n    //printf(\"%d%d%d\",n,p,sum);\n    qsort(x,t,sizeof(int),compare);\n    if(n==p)\n    {\n        app = sum;\n        //printf(\"%d\\n\",app);\n    }   \n    if(n>p)\n    {\n        for(i =(n-p-1);i<(n+p);i++)\n        {\n            app = app+mapp[x[i] + 100000];\n        }\n        //printf(\"%d\\n\",app);\n    }\n    if(p>n)\n    {\n        for(i=0;i<((2*n)+1);i++)\n        {\n            app = app+mapp[x[i]+100000];\n        }\n        \n    }\n    printf(\"%d\\n\",app);\n    return 0;\n}\n"}
{"similarity_score": 0.6501305483028721, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fea585f2d8414e8e87333fc714bbd316", "bug_code_uid": "bf8d2001f3813e203e9eb2cde21c50ed", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "284a69539de236c829ee23d73fbc51e5", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nchar str[200000];\nint main()\n{\n\tint num,start,aim,i,j;\n\twhile(~scanf(\"%d%d%d\",&num,&start,&aim)){\n\t\tfor(i=1;i<=num;i++){\n\t\t\tscanf(\"%c\",&str[i]);\n\t\t}\n\t\tif(str[start]==str[aim]){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse{\n\t\t\ti=j=start;\n\t\t\twhile(1){\n\t\t\t\tif(str[--i]!=str[start]&&i>=1){\n\t\t\t\t\tprintf(\"%d\\n\",abs(i-start));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(str[++j]!=str[start]&&j<=num){\n\t\t\t\t\tprintf(\"%d\\n\",abs(j-start));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nchar str[200000];\nint main()\n{\n\tint num,start,aim,i,j;\n\twhile(~scanf(\"%d%d%d\",&num,&start,&aim)){\n\t\tgetchar();\n\t\tfor(i=1;i<=num;i++){\n\t\t\tscanf(\"%c\",&str[i]);\n\t\t}\n\t\tif(str[start]==str[aim]||start==aim){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"1\\n\");\n\t\t}\n\t\tgetchar();\n\t}\n}"}
{"similarity_score": 0.9512987012987013, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5c41356960ff5ee12f3c6456338d1323", "bug_code_uid": "8f0951628870c5ec051078c925ef61e9", "src_uid": "b784cebc7e50cc831fde480171b9eb84", "apr_id": "68709fa6cb34083084fde5ded751c541", "difficulty": 1400, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nmain()\n{\n    long unsigned x[100000],n,i,max=0,j,s=0;\n    scanf(\"%lu\", &n);\n    for (i = 0; i < n; i++)\n        scanf(\"%lu\", &x[i]);\n    for(i=0;i<n-max;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(s==0&&x[j]!=x[i])\n            s=x[j];\n            if(abs(x[j]-x[i])>1||(abs(x[j]-s)>1&&s))\n            {\n                s=0;\n                if(max<j-i)\n                  max=j-i;\n               break;\n            }\n            if(j==n-1)\n            if(max<j-i+1) max=j-i+1;\n        }\n        \n    }\n    \n    printf(\"%lu\",max);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nmain()\n{\n    long unsigned x[100000],n,i,max=0,j,s=0;\n    scanf(\"%lu\", &n);\n    for (i = 0; i < n; i++)\n        scanf(\"%lu\", &x[i]);\n    for(i=0;i<n-max;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(x[j]==x[i]||x[j]==s)\n            goto la;\n            if(s==0&&x[j]!=x[i])\n            s=x[j];\n            if(abs(x[j]-x[i])>1||(abs(x[j]-s)>1&&s))\n            {\n                s=0;\n                if(max<j-i)\n                  max=j-i;\n               break;\n            }\n            la:if(j==n-1)\n            if(max<j-i+1) max=j-i+1;\n        }\n        \n    }\n    \n    printf(\"%lu\",max);\n}"}
{"similarity_score": 0.9992266047950503, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c0f819e41ffc7ac483d898974062942c", "bug_code_uid": "e017a18624c63da0f759c95856537946", "src_uid": "0a720a0b06314fde783866b47f35af81", "apr_id": "12a22b1be5586368d9faeb50502c9f06", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a==0&&b==0)\n            printf(\"YES\\n\");\n        else if(a>b)\n        {\n            if((a+b)%3==0&&b*2>=a)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n        else if(b>a)\n        {\n            if((a+b)%3==0&&a*2>=b)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n        else\n        {\n            if(a%3==0)\n                printf(\"YES\\n\");\n            else\n                printf(\"%NO\\n\");\n        }\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a==0&&b==0)\n            printf(\"YES\\n\");\n        else if(a>b)\n        {\n            if((a+b)%3==0&&b*2>=a)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n        else if(b>a)\n        {\n            if((a+b)%3==0&&a*2>=b)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n        else\n        {\n            if(a%3==0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9982817869415808, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "99741852ee2be1136ab678c80e7c96da", "bug_code_uid": "50a5fb8476737ea5ea92fd2761a50df5", "src_uid": "dfd60a02670749c67b0f96df1a0709b9", "apr_id": "6db157cee06a67a102f0b323042a3c7d", "difficulty": 1300, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int n,k,i=0;\n    scanf(\"%d %d\",&n,&k);\n    int a=ceil((float)n/(float)(2*k+1));\n    printf(\"%d\\n\",a);\n    ///\n    if(k==0)\n        i=1;\n    else if((n%(2*k+1))==0)\n        i=k+1;\n    else if((n%(2*k+1))<=((int)ceil((float)((2*k+1))/(float)2)))\n        i=1;\n//    else if(2*k+1>n)\n//        i=(n/2)-1;\n    else\n        i=1+((n%(2*k+1))-((int)ceil((float)((2*k+1))/(float)2)));\n    printf(\"1+%d-%d\\n\",(n%(2*k+1)),((int)ceil((float)((2*k+1))/(float)2)));\n    ///\n    while(i<=n){\n        printf(\"%d \",i);\n        i+=(2*k+1);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int n,k,i=0;\n    scanf(\"%d %d\",&n,&k);\n    int a=ceil((float)n/(float)(2*k+1));\n    printf(\"%d\\n\",a);\n    ///\n    if(k==0)\n        i=1;\n    else if((n%(2*k+1))==0)\n        i=k+1;\n    else if((n%(2*k+1))<=((int)ceil((float)((2*k+1))/(float)2)))\n        i=1;\n//    else if(2*k+1>n)\n//        i=(n/2)-1;\n    else\n        i=1+((n%(2*k+1))-((int)ceil((float)((2*k+1))/(float)2)));\n    //printf(\"1+%d-%d\\n\",(n%(2*k+1)),((int)ceil((float)((2*k+1))/(float)2)));\n    ///\n    while(i<=n){\n        printf(\"%d \",i);\n        i+=(2*k+1);\n    }\n}\n"}
{"similarity_score": 0.815811606391926, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4fd2ac3182380b3469bfef0def3b8a88", "bug_code_uid": "57e7d5614c8af6dafe52bbff9aea73c7", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "0cebba6e1582a6459472edac1bf39117", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include <string.h>\n#include<math.h>\n#include <limits.h>\n\nint gcd_two(int a , int b)\n{\n\tif(a==0)\n\t{return b;}\n\treturn gcd_two(b%a,a);\n}\n\nvoid prob()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint max_gcd = 0;\n\tint g;\n\tfor(int a = 1 ; a < n; a++)\n\t\tfor(int b = a+1; b <= n ; b++ )\n\t\t{\n\t\t\tg = gcd_two(a,b);\n\t\t\tif(g>max_gcd)\n\t\t\t{max_gcd = g;}\t\n\t\t}\n\tprintf(\"%d\\n\",max_gcd);\n}\n\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\n\tfor(int i = 0; i < T; i++)\n\t{\n\t\tprob();\n\t}\n\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include <string.h>\n#include<math.h>\n#include <limits.h>\n\nint gcd_two(int a , int b)\n{\n\tif(a==0)\n\t{return b;}\n\treturn gcd_two(b%a,a);\n}\n\n\n\n\nvoid prob()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint max_gcd = 1;\n\tint g;\n\t/*for(int a = 1 ; a < n; a++)\n\t\tfor(int b = a + 1 ; b <= n ; b++ )\n\t\t{\n\t\t\tg = gcd_two(a,b);\n\t\t\tif(g>max_gcd)\n\t\t\t{max_gcd = g;\n\t\t\tprintf(\"%d, %d , -> %d\\n\",a,b,g );}\t\n\t\t}*/\n\n\tint a , b;\n\tif(n%2 == 0)\n\t{\ta = n/2;\n\t\tb = n;\n\t\tmax_gcd = gcd_two(a,b);\n\t}\n\telse\n\t{\n\t\ta = n - 1;\n\t\tb = a/2;\n\t\tmax_gcd = gcd_two(a,b);\n\t}\n\tprintf(\"%d\\n\",max_gcd);\n}\n\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\n\tfor(int i = 0; i < T; i++)\n\t{\n\t\tprob();\n\t}\n\n}"}
{"similarity_score": 0.9946949602122016, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a4554ef38bac69f3bc80d15ccde50d4d", "bug_code_uid": "25a576a0d71c41b36a225f2a7322a29f", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "42934c8afc49c7cdb4821a026df28d16", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n        res = a*b;\n        if(res==1){\n            printf(\"1\\n\");\n        }else{\n            if(res%2==0){\n                printf(\"%d\\n\",res/2);\n            }else{\n                printf(\"%d\\n\",(res/2)+1);\n            }\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int a,b,res;\n        scanf(\"%d %d\",&a,&b);\n        res = a*b;\n        if(res==1){\n            printf(\"1\\n\");\n        }else{\n            if(res%2==0){\n                printf(\"%d\\n\",res/2);\n            }else{\n                printf(\"%d\\n\",(res/2)+1);\n            }\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9235537190082644, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a7e55a279675ff01ea3a1e0ec3be387d", "bug_code_uid": "e625d785ae90f93325e6dc17de17bd8c", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "06a3eb2e74900b8599283bf34e24492f", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nchar string[200002];\n\nchar m[100001];\n\nvoid swap(int k,int len){\n\tchar p=string[k];\n\tstring[k]=string[len-2-k];\n\tstring[len-2-k]=p;\n}\n\nint main(){\n\tfgets(string,200001,stdin);\n\t\n\tint len=strlen(string);\n\t\n\tint n;\n\tscanf(\"%d\",&n);\n\n\tint i,k;\n\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&k);\n\n\t\tm[k-1]++;\n\t\tm[k-1]%=2;\n\n\t}\n\t\n\tfor(i=1;i<len/2;i++){\n\t\tm[i]=(m[i]+m[i-1])%2;\n\t}\n\tfor(i=0;i<len/2;i++){\n\t\tif(m[i]){\n\t\t\tswap(i,len);\n\t\t}\n\t}\n\tprintf(\"%s\",string);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nchar string[200002];\n\nchar m[100001];\n\nvoid swap(int k,int len){\n\tchar p=string[k];\n\tstring[k]=string[len-1-k];\n\tstring[len-1-k]=p;\n}\n\nint main(){\n\tgets(string);\n\t\n\tint len=strlen(string);\n\t\n\tint n;\n\tscanf(\"%d\",&n);\n\n\tint i,k;\n\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&k);\n\n\t\tm[k-1]++;\n\t\tm[k-1]%=2;\n\n\t}\n\t\n\tfor(i=1;i<len/2;i++){\n\t\tm[i]=(m[i]+m[i-1])%2;\n\t}\n\tfor(i=0;i<len/2;i++){\n\t\tif(m[i]){\n\t\t\tswap(i,len);\n\t\t}\n\t}\n\tprintf(\"%s\",string);\n\treturn 0;\n}"}
{"similarity_score": 0.9175084175084175, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "852fdf5e174a5452de06878414bf9058", "bug_code_uid": "24c9c7db573d8e783dbe5c51f432951f", "src_uid": "d00b8423c3c52b19fec25bc63e4d4c1c", "apr_id": "0f0aeaa874c1018f31883f2704e909d9", "difficulty": 1500, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\ndouble ans = 1e-4;\ndouble a, d;\nint n;\n\nint main(void)\n{\n\twhile (scanf(\"%lf%lf%d\", &a, &d, &n) != EOF) {\n\t\tint i;\n\t\tdouble x = 0.0;\n\t\tdouble y = 0.0;\n\t\t\n\t\t\n\t\tfor (i = 1; i <= n; ++i) {\n\t\t\tint cnt = (int)((i * d) / a);\n\t\t\t//double r = i * d - cnt * a;\n\t\t\tdouble r = (i*d) - ((long long)((i*d)/n)*n);\n\t\t\tint flag = cnt % 4;\n\n\t\t\tswitch (flag) {\n\t\t\t\tcase 0: y = 0.0; x = r; break;\n\t\t\t\tcase 1: x = a; y = r; break;\n\t\t\t\tcase 2: y = a; x = a - r; break;\n\t\t\t\tcase 3: x = 0.0; y = a - r; break;\n\t\t\t}\n\t\t\t\n\t\t\tprintf(\"%.10lf %.10lf\\n\", x, y);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n} \n", "fixed": "#include <stdio.h>\n\ndouble ans = 1e-4;\ndouble a, d;\nint n;\n\nint main(void)\n{\n\twhile (scanf(\"%lf%lf%d\", &a, &d, &n) != EOF) {\n\t\tint i;\n\t\tdouble x = 0.0;\n\t\tdouble y = 0.0;\n\t\t\n\t\t\n\t\tfor (i = 1; i <= n; ++i) {\n\t\t\t__int64 cnt = (__int64)((i * d) / a);\n\t\t\tdouble r = i * d - cnt * a;\n\t\t\t//double r = (i*d) - ((long long)((i*d)/n)*n);\n\t\t\tint flag = cnt % 4;\n\n\t\t\tswitch (flag) {\n\t\t\t\tcase 0: y = 0.0; x = r; break;\n\t\t\t\tcase 1: x = a; y = r; break;\n\t\t\t\tcase 2: y = a; x = a - r; break;\n\t\t\t\tcase 3: x = 0.0; y = a - r; break;\n\t\t\t}\n\t\t\t\n\t\t\tprintf(\"%.10lf %.10lf\\n\", x, y);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n} \n"}
{"similarity_score": 0.9924242424242424, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "87fb685c26d991c2f5e48bb01bf1ba89", "bug_code_uid": "0f56075890fd43b3b4610a1e983dab5c", "src_uid": "f83c91c9e9252aba4736aa0bea82493b", "apr_id": "73af9b2e365b228346bf35773212de0b", "difficulty": 1600, "tags": ["constructive algorithms", "graphs", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n,a;\n\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--) {\n\t\tscanf(\"%d\",&a),printf(\"%d\",a < 2 ? 0 : a-2);}\n\treturn 0;}\n", "fixed": "#include<stdio.h>\nint n,a;\n\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--) {\n\t\tscanf(\"%d\",&a),printf(\"%d\\n\",a < 2 ? 0 : a-2);}\n\treturn 0;}\n"}
{"similarity_score": 0.7683073229291717, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "c082fe9a51aeb53524d02bdc21b6bda4", "bug_code_uid": "7b3f38ffbdca6548f63ff8cd6b14ad45", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "7845577f49b2eeb6c1203463ac510d2c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n\n    int n,i,sum=0;\n    scanf(\"%d\",&n);\n    char str[n];\n    for (i=0;i<n;i++){\n    scanf(\"%s\",str);\n    if (str[i]==\"Tetrahedron\"){\n    sum=sum+4;\n    }\n    else if (str[i]==\"Cube\"){\n    sum=sum+6;\n    }\n    else if (str[i]==\"Octahedron\"){\n    sum=sum+8;\n    }\n    else if (str[i]==\"Dodecahedron\"){\n    sum=sum+12;\n    }\n    else {\n    sum=sum+20;\n    }\n    }\n    printf(\"%d\",sum);\n}\n\n\n", "fixed": "#include<stdio.h>\nint main ()\n{\n\n    int n,i,sum;\n    scanf(\"%d\",&n);\n    char x[20];\n    sum=0;\n    for (i=0;i<n;i++){\n    scanf(\"%s\",x);\n    if (x[0]=='T'){\n    sum=sum+4;\n    }\n    else if (x[0]=='C'){\n    sum=sum+6;\n    }\n    else if (x[0]=='O'){\n    sum=sum+8;\n    }\n    else if (x[0]=='D'){\n    sum=sum+12;\n    }\n    else if (x[0]=='I'){\n    sum=sum+20;\n    }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.6946688206785138, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "15c644f04d6ca512d068387ec7a4da1c", "bug_code_uid": "20d13aeb96091f4b087cf988d569b237", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "a39df4ddf2541fe818d36f0df4501535", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n ;\r\n    scanf(\"%d\" , &n) ;\r\n    char c = getchar();\r\n    for(int i = 0 ; i < n ; i ++ ){\r\n        int use = 0 ;\r\n        int first = 0 , second = 0 ;\r\n        int num , blood ;\r\n        scanf(\"%d %d\" , &num , &blood) ;\r\n        c = getchar();\r\n        for(int j = 0 ; j < num ; j ++ ){\r\n            int temp ;\r\n            scanf(\"%d\" , &temp) ;\r\n            if(temp > first)\r\n                first = temp ;\r\n            else if(temp > second)\r\n                second = temp ;\r\n        }\r\n        c = getchar();\r\n        int count = 0 ;\r\n        while(blood > 0){\r\n            if(use == 0 || use == 2){\r\n                blood -= first ;\r\n                use = 1 ;\r\n                count ++ ;\r\n            }\r\n            else{\r\n                blood -= second ;\r\n                use = 2 ;\r\n                count ++ ;\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\" , count) ;\r\n\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n ;\r\n    scanf(\"%d\" , &n) ;\r\n    char c = getchar();\r\n    for(int i = 0 ; i < n ; i ++ ){\r\n        int use = 0 ;\r\n        int first = 0 , second = 0 ;\r\n        int num , blood ;\r\n        scanf(\"%d %d\" , &num , &blood) ;\r\n        c = getchar();\r\n        for(int j = 0 ; j < num ; j ++ ){\r\n            int temp ;\r\n            scanf(\"%d\" , &temp) ;\r\n            if(temp > first){\r\n                second = first ;\r\n                first = temp ;\r\n            }\r\n            else if(temp > second)\r\n                second = temp ;\r\n        }\r\n        c = getchar();\r\n        int count = ( blood / (first + second) ) * 2 ;\r\n        blood %= (first + second) ;\r\n        if(blood != 0){\r\n            if(blood > first) printf(\"%d\\n\", count + 2);\r\n            else printf(\"%d\\n\", count + 1);\r\n        }\r\n        else printf(\"%d\\n\" , count) ;\r\n    }\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9206349206349206, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "939bc8e059cec2381a009609ea334607", "bug_code_uid": "a52e96b3094b5a3f83fda0b885bb509a", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "e989c0e2e8972d3484e2c16fbeb0acea", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h> \n#include<math.h>\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint a[n][2],b[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\t\tb[i]=(a[i][0]+a[i][1]-3)/a[i][1]+1;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d\\n\",b[i]);\n\t}\n} \n", "fixed": "#include<stdio.h> \n#include<math.h>\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint a[n][2],b[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i][0]<=2)\n\t\t{\n\t\t\tb[i]=1;\\\n\t\t\tcontinue;\n\t\t}\n\t\t\tb[i]=(a[i][0]+a[i][1]-3)/a[i][1]+1;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d\\n\",b[i]);\n\t}\n} \n"}
{"similarity_score": 0.745230078563412, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b2590260fa6ec5ef1bdcd83969439a13", "bug_code_uid": "7b5472debd15069c54bd0d967675a5fd", "src_uid": "ca7de8440f5bbbe75e8b93654ce75cd3", "apr_id": "d01eaa219ccaae1ca86b0ca77913bf00", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/******************************************************************************\n\nWelcome to GDB Online.\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.\nCode, Compile, Run and Debug online from anywhere in world.\n\n*******************************************************************************/\n#include <stdio.h>\n\nint main()\n{\nlong long int i,j,n;\nscanf(\"%ld\",&n);\nlong long int A[n],sum=0;\nfor(i=0;i<n;i++){\n    scanf(\"%ld\",&A[i]);\n    sum=sum+A[i];\n}\n\nlong long int s;\ns=A[0];\nfor(i=0;i<n;i++){\nif(A[i]>s){s=A[i];}\n}\nlong long int k,m=s*n-sum;\nfor(i=2;i<=m; i++){\n    if(m%i==0){k=i;break;}\n}\n\nprintf(\"%ld %ld\",m/k,k);\n\n    return 0;\n}\n", "fixed": "/******************************************************************************\n\nWelcome to GDB Online.\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.\nCode, Compile, Run and Debug online from anywhere in world.\n\n*******************************************************************************/\n#include <stdio.h>\n\n\nlong long int gcd(long long int a, long long int b) \n{ \n    if (a == 0) \n        return b; \n    return gcd(b % a, a); \n} \n\n\nint main()\n{\nlong long int s,m,l,k,i,j,n;\nscanf(\"%lli\",&n);\nlong long int A[n],B[n],sum=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lli\",&A[i]);\n    sum=sum+A[i];\n}\n\n\ns=A[0];\nfor(i=0;i<n;i++){\nif(A[i]>s){s=A[i];}\n}\nfor(i=0;i<n;i++){\n    B[i]=s-A[i];\n}\n\nl=1e9;\nfor(i=0;i<n;i++){\n    if (B[i]==0){continue;}\n    if (B[i]<l){l=B[i];}\n} \nm=s*n-sum;\nk = B[0];\n for(i=1;i<n;++i) k = gcd(k,B[i]);\nprintf(\"%lli %lli\",m/k,k);\n\n    return 0;\n}\n"}
{"similarity_score": 0.47167630057803467, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "5cba7c2dc00f10667c0d944ac21a8f92", "bug_code_uid": "9d0f6d0363fdc1225a750fe045a0228b", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "4bc89cfdbf04a432bfd9e2f7dc83eba0", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint sum(int n);\r\nint san(int n);\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0 ; i<n ; i++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        int h=0;\r\n        for(int j=1 ; j<=m ; j++)\r\n        {\r\n            if(san(j)==1)\r\n                h++;\r\n        }\r\n        printf(\"%d\\n\",h);\r\n    }\r\n\r\n}\r\nint sum(int n)\r\n{\r\nint sum=0;\r\n    while(n>0)\r\n    {\r\n       sum+=n%10;\r\n       n/=10;\r\n    }\r\n    return sum;\r\n}\r\nint san(int n)\r\n{\r\n    if(sum(n)>sum(n+1))\r\n        return 1;\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0 ; i<n ; i++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        if(m%10==9)\r\n        {\r\n            printf(\"%d\\n\",m/10+1);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",m/10);\r\n        }\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.9595959595959596, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a4cb36572c21f66d411b777a8b213bba", "bug_code_uid": "c715e28e3d039217b5188076ff824f69", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "906b313924a988d8e11690563c4fd796", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i, t, j, n, k, l, A[2000];\nscanf(\"%d\", &t);\nfor(i = 0; i < t; i++)\n{\nfor(j = 1; j <= 1000; j++)\nA[j] = 0;\nscanf(\"%d\", &n);\nfor(j = 0; j < n; j++)\n{\nscanf(\"%d\", &l);\nA[k]++;\n}\nfor(j = 1000; j >= 1; j--)\nif(A[j] >= j)\n{\nprintf(\"%d\\n\", j);\nbreak;\n}\n}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i, t, j, n, k, l, A[2000];\nscanf(\"%d\", &t);\nfor(i = 0; i < t; i++)\n{\nfor(j = 1; j <= 1000; j++)\nA[j] = 0;\nscanf(\"%d\", &n);\nfor(j = 0; j < n; j++)\n{\nscanf(\"%d\", &l);\nfor(k = l; k >= 1; k--)\nA[k]++;\n}\nfor(j = 1000; j >= 1; j--)\nif(A[j] >= j)\n{\nprintf(\"%d\\n\", j);\nbreak;\n}\n}\n}\n"}
{"similarity_score": 0.8215353938185443, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "99bf3610aaf95f7f4d4fa33d8cd1cef9", "bug_code_uid": "04d820853b3f7d29976720cdbafd33e6", "src_uid": "ee3c228cc817536bf6c10ea4508d786f", "apr_id": "3f4fa3fcff8f70be600752b77bd6a712", "difficulty": 1700, "tags": ["dp", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAXN 5001\n\nint main(int argc, char *argv[]){\n\tint n, m, k;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tint r[MAXN] = {0}, c[MAXN] = {0}, p[MAXN] = {0};\n\tlong long int s[MAXN] = {0};\n\tfor (int i = 1; i <= n; ++i){\n\t\tscanf(\"%d\", r + i);\n\t\ts[i] = s[i - 1] + r[i];\t\t\n\t}\n\tfor (int j = 0; j < k; ++j){\n\t\tfor (int i = m; i <= n; ++i){\n\t\t\tc[i] = s[i] - s[i - m] + p[i - m];\n\t\t}\n\t\tfor (int i = m; i <= n; ++i){\n\t\t\tp[i] = p[i - 1] > c[i] ? p[i - 1] : c[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\", p[n]);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n#define MAXN 5001\n\nint main(int argc, char *argv[]){\n\tint n, m, k, i, j;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tint r[MAXN] = {0};\n\tunsigned long long int s[MAXN] = {0}, c[MAXN] = {0}, p[MAXN] = {0};\n\tfor (i = 1; i <= n; ++i){\n\t\tscanf(\"%d\", r + i);\n\t\ts[i] = s[i - 1] + r[i];\t\t\n\t}\n\tfor (j = 0; j < k; ++j){\n\t\tfor (i = m; i <= n; ++i)\n\t\t\tc[i] = s[i] - s[i - m] + p[i - m];\n\t\tfor (i = m; i <= n; ++i)\n\t\t\tp[i] = p[i - 1] > c[i] ? p[i - 1] : c[i];\n\t}\n\tprintf(\"%lld\\n\", p[n]);\n\treturn 0;\n}"}
{"similarity_score": 0.9359850839030454, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ae6f5a2f920b79de40f59857248760d0", "bug_code_uid": "bffb8e452d5ffe7683b20d46bcfa1e3f", "src_uid": "204e75827b7016eb1f1fbe1d6b60b03d", "apr_id": "c243904b691bb095ec4f98014d4232ef", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nlong long gcd(long long a, long long b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nlong long digitSum(long long a)\r\n{\r\n    long long sumDigits = 0;\r\n    while (a > 0)\r\n    {\r\n        sumDigits += (a % 10);\r\n        a /= 10;\r\n    }\r\n    return sumDigits;\r\n}\r\nint main()\r\n{\r\n    int testcases;\r\n    scanf(\"%d\", &testcases);\r\n    //printf(\"%d\", testcases);\r\n    while (testcases > 0)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\", &n);\r\n        long long sumDigits = digitSum(n);\r\n        //printf(\"n=%lld digsum=%lld\\n\", n, sumDigits);\r\n        while (gcd(n, sumDigits) <= 1)\r\n        {\r\n            n++;\r\n            digitSum(n);\r\n        }\r\n        printf(\"%lld\\n\", n);\r\n        testcases--;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nlong long gcd(long long a, long long b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nlong long digitSum(long long a)\r\n{\r\n    long long sumDigits = 0;\r\n    while (a > 0)\r\n    {\r\n        sumDigits += (a % 10);\r\n        a /= 10;\r\n    }\r\n    return sumDigits;\r\n}\r\nint main()\r\n{\r\n    int testcases;\r\n    scanf(\"%d\", &testcases);\r\n    //printf(\"%d\", testcases);\r\n    while (testcases > 0)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\", &n);\r\n        long long sumDigits = digitSum(n);\r\n        //printf(\"n=%lld digsum=%lld\\n\", n, sumDigits);\r\n        while (gcd(n, sumDigits) <= 1)\r\n        {\r\n            ++n;\r\n            sumDigits = digitSum(n);\r\n            //printf(\"n=%lld digsum=%lld\\n\", n, sumDigits);\r\n        }\r\n        printf(\"%lld\\n\", n);\r\n        testcases--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9915074309978769, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d0abaffa3c2112432ec9e6c7ddcf17f7", "bug_code_uid": "74a8f6396e03943b0a8aeba9362bbc90", "src_uid": "27f837609b2777cefccb13aa4596d91c", "apr_id": "f210a1803be5b5e98d78170ca108d7de", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long unsigned llu;\ntypedef unsigned u;\nu A[111111];\nint main()\n{\n\tu n,i=-1,j,k=0,a,b,c;a=b=c=-1u;\n\tfor(scanf(\"%u\",&n);++i<n;)\n\t{\n\t\tscanf(\"%u\",&j);\n\t\tif(a==-1u)a=j;\n\t\telse if(j==a)continue;\n\t\telse if(b==-1u)b=j;\n\t\telse if(j==b)continue;\n\t\telse if(c==-1u)c=j;\n\t\telse if(j==c)continue;\n\t\telse {printf(\"NO\\n\");return 0;}\n\t}\n\tif(a>b){k=a;a=b;b=k;}\n\tif(b>c){k=b;b=c;c=k;}\n\tif(a>b){k=a;a=b;b=k;}\n\tprintf(b-a==c-b?\"YES\\n\":\"NO\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef long long unsigned llu;\ntypedef unsigned u;\nu A[111111];\nint main()\n{\n\tu n,i=-1,j,k=0,a,b,c;a=b=c=-1u;\n\tfor(scanf(\"%u\",&n);++i<n;)\n\t{\n\t\tscanf(\"%u\",&j);\n\t\tif(a==-1u)a=j;\n\t\telse if(j==a)continue;\n\t\telse if(b==-1u)b=j;\n\t\telse if(j==b)continue;\n\t\telse if(c==-1u)c=j;\n\t\telse if(j==c)continue;\n\t\telse {printf(\"NO\\n\");return 0;}\n\t}\n\tif(a>b){k=a;a=b;b=k;}\n\tif(b>c){k=b;b=c;c=k;}\n\tif(a>b){k=a;a=b;b=k;}\n\tprintf(c==-1u||b-a==c-b?\"YES\\n\":\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.8590785907859079, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "eda4d07157e9fdb0f8ca19075574424d", "bug_code_uid": "a3565288d65246d22e6731eb5b0c420c", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "f9b4c36812015af46ea12ef856c033da", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint i,m,j,n,k=0,max=0;\n\tint a[100][2],b[100];\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=2;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tb[k]=a[1][2];\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tm=b[k]-a[i][1];\n\t\tk=k+1;\n\t\tb[k]=m+a[i][2];\n\t\tif(b[k]>=b[k-1])\n\t\tmax=b[k];\n\t}\n\tprintf(\"%d\",max);\n\t// your code goes here\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint i,m,j,n,k=1,max=0;\n\tint a[1000][2],b[1000];\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=2;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tb[k]=a[1][2];\n\tmax=b[k];\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tm=b[k]-a[i][1];\n\t\tk=k+1;\n\t\tb[k]=m+a[i][2];\n\t}\n\tfor(k=1;k<=n;k++)\n\t{\n\t\tif(b[k]>max)\n\t\tmax=b[k];\n\t}\n\tprintf(\"%d\",max);\n\t\n\t// your code goes here\n\treturn 0;\n}\n"}
{"similarity_score": 0.4391891891891892, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1ad676b99ae874740bbe319382c43cac", "bug_code_uid": "f0e550e1dd07b11126564aba3fa3375a", "src_uid": "28102f75e0798960740e5a2625393c8f", "apr_id": "0180f05ab870b60ddec248f5d4786967", "difficulty": 800, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nint main(){\r\n\tchar s[60];\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tscanf(\"%s\", s);\r\n\t\tsort(s,s+strlen(s));\r\n\t\tprintf(\"%s\\n\",s);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include <stdlib.h>\r\nint main(){\r\n\tchar s[60];\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tscanf(\"%s\", s);\r\n\t\tint i,j;\r\n\t\tchar t;\r\n\t\tfor (i=0;i<strlen(s)-1;i++){\r\n\t\t\tfor (j=0; j<strlen(s)-1-i; j++){\r\n\t\t\t\tif (s[j]<s[j+1]){\r\n\t\t\t\t\tt = s[j];\r\n\t\t\t\t\ts[j] = s[j+1];\r\n\t\t\t\t\ts[j+1] = t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%s\\n\",s);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.2463157894736842, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "16f3ea6ca1a31d2181a3f7f430ff8704", "bug_code_uid": "a5950e656d9f724f7cd90c09ef6f69ac", "src_uid": "aeea2ca73f1b5c5b86fb508afcbec68a", "apr_id": "612c4b1b014d56daffbe66e4156cb591", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int k=0;k<t;k++){\r\n        int n,m,i,j;\r\n        scanf(\"%d\",&n);\r\n        if(n==1){       \r\n            printf(\"1\\n\");\r\n            printf(\"%d %d\\n\",1,3);\r\n        }\r\n        if(n%2==0){\r\n            printf(\"%d\\n\",n/2);\r\n            for(i=1,j=5;i<3*n&&j<3*n;i+=6,j+=6){\r\n                printf(\"%d %d\\n\",i,j);\r\n            }\r\n        }\r\n        else if(n%2==0){\r\n            printf(\"%d\\n\",n/2+1);\r\n            for(i=1,j=5;i<3*(n-1)&&j<3*(n-1);i+=6,j+=6){\r\n                printf(\"%d %d\\n\",i,j);\r\n            }\r\n            printf(\"%d %d\",n*3,n*3-2);\r\n\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tfor(int k=0;k<t;k++)\r\n\t{\r\n\t\tint m,n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(n%2==0)\r\n\t\t{\r\n\t\t\tm=n/2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tm=n/2+1;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",m);\r\n\t\tfor(int p=0,i=2,j=3*n;p<m;p++,i+=3,j-=3)\r\n\t\t{\r\n\t\t\tprintf(\"%d %d\\n\",i,j);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.4311284046692607, "equal_cnt": 22, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "79333cf46d447fe727b4a3c3735f6685", "bug_code_uid": "214b83beb79de642694be6183fa07e69", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "c42a97555e701141bd5dadd9507c7cbf", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,n,count=0,sum=0,i,j,num[100000];\n    scanf(\"%d\",&n);\n   {\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num[i]);\n    }\n\n    for(i=0;i<a;i++)\n    {\n        if(num[i]<=4)\n        {\n            for(j=i+1;j<a;j++)\n            {\n                if(num[i]+num[j]<=4)\n                {\n                    num[i]+=num[j];\n                    num[j]=100;\n                }\n            }\n            if(num[i]<=4)\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,a,b,c,n,num[100060],one=0,two=0,three=0,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(num[i]==4) count++;\n        else if(num[i]==1) one++;\n        else if(num[i]==2) two++;\n        else if(num[i]==3) three++;\n    }\n    if(three>=one) one=0;\n    else one-=three;\n    count+=three;\n\n    for( ; ; )\n    {\n        if(two>1)\n        {\n            two-=2;\n            count++;\n        }\n        else break;\n    }\n\n    if(two>one) one=0;\n    else one-=2*two;\n   for( ; ; )\n   {\n       if(one>0)\n       {\n           one-=4;\n           count++;\n       }\n       else break;\n   }\n    count+=two;\n    printf(\"%d\",count);\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.26004728132387706, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "5a7878bc0c04d1a016eaac66d991783a", "bug_code_uid": "5a96fcdf599d79c2c09377e4f2269184", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "14dd41864f730495eb30e1faa72624fd", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int a, b, f=1, g=0;\n    scanf(\"%d\",&b);\n    int d[b];\n    int e[10];\n    for(a=1;a<=b;a++){\n            int c;\n        scanf(\"%d\",&c);\n    d[a-1]=c;\n    }\n    for(a=1;a<b;a++){\n        if(d[a]>=d[a-1]){\n            f++;\n        }\n        else{\n            e[g]=f;\n            f=1;\n            g++;\n        }\n    }\ne[g]=f;\n    int h=0;\n    for(a=0;a<=g;a++){\n        if(a[e]>h){\n            h=a[e];\n        }\n\n    }\n     printf(\"%d\",h);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    int ar[n],temp = 0,Max = 0;\n\n    for(int in=0; in<n; in++)\n        scanf(\"%d\",&ar[in]);\n\n    int i=0, j=1;\n    while(j<n)\n    {\n        if(ar[j] >= ar[i]) temp++;\n        else temp = 0;\n        if(Max < temp) Max = temp;\n        j++;\n        i++;\n    }\n    printf(\"%d\",Max+1);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7015902712815716, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "982d2806963b9c6bce594a1ab395d389", "bug_code_uid": "3d65243f3540f66889271bde264916d3", "src_uid": "02a94c136d3fb198025242e91264823b", "apr_id": "70de8575dbd98e0f811c849f82f2cdd9", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nchar k(const void *a ,const void *b){\n    return (*(char *)a-*(char *)b);\n}\n\nint main()\n{\n long long int test,d,n,x,i,b,c,sum=0,count=0,j,flag=0,p,y,max=0,o,g,r,m[11]={0};\n\nchar a[1000000];\n\nscanf(\"%lld\",&test);\nwhile(test--){\n  scanf(\"%s\",a);\nflag=0;\n  n=strlen(a);\n  qsort(a,n,sizeof(char),k);\n  for(i=0;i<n-1;i++){\n      if(a[i]+1!=a[i+1]){\n           flag=1;\n           break;\n      }\n         \n      \n  }\n \n  if(flag==1){\n      printf(\"NO\\n\");\n  }else{\n      printf(\"YES\\n\");\n  }\n}\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunc( const void *a, const void *b) {\n  return *(char*)a - *(char*)b;\n}\n\nint main()\n{\n long long int test,d,n,x,i,b,c,sum=0,count=0,j,flag=0,p,y,max=0,o,g,r,m[11]={0};\n\nchar a[1000000];\n\nscanf(\"%lld\",&test);\nwhile(test--){\n  scanf(\"%s\",a);\nflag=0;\n  n=strlen(a);\nflag=0;\n qsort(a,n,sizeof(char),cmpfunc);\n for(i=0;i<n-1;i++){\n    \n    if(a[i]==a[i+1]||a[i]+1!=a[i+1]){\n        flag=1;\n    }\n    \n }\n if(flag==0){\n     printf(\"YES\\n\");\n }else{\n     printf(\"NO\\n\");\n }\n\n}\n    return 0;\n}"}
{"similarity_score": 0.9991823385118561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ee152f98a4a7582035c09e6fd288fe48", "bug_code_uid": "02994ae7526471cf57f702789aa31f9c", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "50cafb915f1c077b50cfe5c4e875f37b", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define NAME_SIZE 40\n#define N 10000\n\nchar names[N][NAME_SIZE];\nint namesLen = 0;\nint getID(char *name)\n{\n\tint i = 0;\n\twhile((i < namesLen) && (strcmp(names[i], name) != 0))\n\t{\n\t\ti++;\n\t}\n\t\n\tif(i == namesLen)\n\t{\n\t\tstrcpy(names[i], name);\n\t\tnamesLen++;\n\t}\n\treturn i;\n}\n\n\nint main()\n{\n\tchar buf[NAME_SIZE];\n\tint i, id, n;\n\tint dupl[N];\n\n\tscanf(\"%d \", &n);\n\tmemset(dupl, 0, n*sizeof(int));\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tgets(buf);\n\t\tid = getID(buf);\n\n\t\tif(dupl[id])\n\t\t{\n\t\t    printf(\"%s%d\\n\", buf, dupl[id]);\n\t\t}\n\t\telse\n\t\t{\n\t\t    puts(\"OK\");\n\t\t}\n\t\tdupl[id]++;\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define NAME_SIZE 40\n#define N 100000\n\nchar names[N][NAME_SIZE];\nint namesLen = 0;\nint getID(char *name)\n{\n\tint i = 0;\n\twhile((i < namesLen) && (strcmp(names[i], name) != 0))\n\t{\n\t\ti++;\n\t}\n\t\n\tif(i == namesLen)\n\t{\n\t\tstrcpy(names[i], name);\n\t\tnamesLen++;\n\t}\n\treturn i;\n}\n\n\nint main()\n{\n\tchar buf[NAME_SIZE];\n\tint i, id, n;\n\tint dupl[N];\n\n\tscanf(\"%d \", &n);\n\tmemset(dupl, 0, n*sizeof(int));\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tgets(buf);\n\t\tid = getID(buf);\n\n\t\tif(dupl[id])\n\t\t{\n\t\t    printf(\"%s%d\\n\", buf, dupl[id]);\n\t\t}\n\t\telse\n\t\t{\n\t\t    puts(\"OK\");\n\t\t}\n\t\tdupl[id]++;\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.34203516249334043, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "8e54d95dd70b4456f8ea843b8b2cf362", "bug_code_uid": "c2bc6075e93e64a9c331aafabcc614dd", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "dbe44ca0e24c0d988a0b8acbf6b9ba05", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    \n    int N, Queue[100001], Satisfied = 0, SomaTempo = 0, i, j;\n    \n    scanf(\"%d\", &N);\n    \n    for (i = 0; i < N; i++) {\n        scanf(\"%d\", &Queue[i]);\n    }\n    \n    //MUDAR O BUBBLESORT PRA OUTRA FORMA DE ORDENA\u00c7\u00c3O\n    for (i = 0; i < N; i++) {\n        for (j = i + 1; j < N; j++) {\n            if (Queue[i] > Queue[j]) {\n                int aux = Queue[i];\n                Queue[i] = Queue[j];\n                Queue[j] = aux;\n            }\n        }\n    }\n    \n    for (i = 0; i < N; i++) {\n        for (j = i - 1; j >= 0; j--) {\n            SomaTempo += Queue[j];\n        }\n        if (Queue[i] < SomaTempo) {\n            Queue[i] = 0;\n        }\n        SomaTempo = 0;\n    }\n    \n    for (i = 0; i < N; i++) {\n        SomaTempo += Queue[i];\n        if (Queue[i] >= SomaTempo) {\n            Satisfied++;\n        }\n    }\n    \n    printf(\"%d\\n\", Satisfied);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nvoid QuickSort(int X[], int Inicio, int Fim) {\n    int i = Inicio, j = Fim, meio = X[(Inicio + Fim)/2], aux;\n\n    do {\n        while (X[i] < meio) {\n            i++;\n        }\n        while (X[j] > meio) {\n            j--;\n        }\n        if (i <= j) {\n            aux = X[i];\n            X[i] = X[j];\n            X[j] = aux;\n            i++;\n            j--;\n        }\n    } while (i <= j);\n    \n    if (Inicio < j) {\n        QuickSort(X, Inicio, j);\n    }\n    if (i < Fim) {\n        QuickSort(X, i, Fim);\n    }\n}\n\nint main() {\n    \n    int N, Queue[100000], D = 0, SomaTempo = 0, i;\n    \n    scanf(\"%d\", &N);\n    \n    for (i = 0; i < N; i++) {\n        scanf(\"%d\", &Queue[i]);\n    }\n    \n    QuickSort(Queue, 0, N - 1);\n    \n    for (i = 0; i < N; i++) {\n        if (Queue[i] < SomaTempo) {\n            Queue[i] = 0;\n            D++;\n        }\n        SomaTempo += Queue[i];\n    }\n    \n    printf(\"%d\\n\", N - D);\n    \n    return 0;\n}\n"}
{"similarity_score": 0.7276785714285714, "equal_cnt": 21, "replace_cnt": 5, "delete_cnt": 9, "insert_cnt": 7, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "f3435710b846eeb2894957b977f109f6", "bug_code_uid": "cf36cad9e479bc6a86c707b7d0e76a79", "src_uid": "b7e36ca8a96dd7951359070d4953beec", "apr_id": "14fbcd3f6e77bf5d188bfa7c377ddd68", "difficulty": 800, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,n,c,d;\n    scanf(\"%d\",&n);\n    for(a=1;a<=n;a++)\n    {\n        scanf(\"%d\",&b);\n        for(c=1;(c+b)%2!=0;c++)\n        {\n            printf(\"%d\",c+b);\n        }\n    }\n    return 0;\n}\n  \t\t\t\t  \t\t    \t   \t \t\t\t \t\t\t", "fixed": "#include <stdio.h>\n\nint main(void){\n    int n,a;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d\",&a);\n        printf(\"%d\\n\",a);    \n    }\n    \n    return 0;\n}\n\t    \t \t \t\t\t\t\t \t   \t\t\t     \t\t"}
{"similarity_score": 0.8772504091653028, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "45a903f05197cf0c595f0b65a38b55d7", "bug_code_uid": "137179977d64ddb908e7afed813e1b30", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "9f7f5c0f181067c347c49c44ffe2860c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#include<stdbool.h>\r\n#define isnum(n) n>='0' && n<='9' ? 1 : 0\r\n#define islow(c) n>='a' && n<='z' ? 1 : 0\r\n#define tolower(c) c>='A' && n<='Z' ? c-'A'+'a' : c\r\n#define max(a,b) a>=b?a:b\r\n\r\nint a[20005];\r\nint main(){\r\n\tint t;\r\n\tint i;\r\n\tint n,s;\r\n\tint max;\r\n\tint num;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++){\r\n\t\tscanf(\"%d%d\",&n,&s);\r\n\t\tmax=(n+1)*(n-1);\r\n\t\tif(max!=0){\r\n\t\t\tif(s==0)\tnum=-1;\r\n\t\t\telse\tnum=(s-1-max)/(n*n);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(n==1)\tnum=0;\r\n\t\t\telse\tnum=-1;\r\n\t\t}\r\n\t\ta[i]=num+1;\r\n\t}\r\n\tfor(i=1;i<=t;i++){\r\n\t\tprintf(\"%d\\n\",a[i]);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#include<stdbool.h>\r\n#define isnum(n) n>='0' && n<='9' ? 1 : 0\r\n#define islow(c) n>='a' && n<='z' ? 1 : 0\r\n#define tolower(c) c>='A' && n<='Z' ? c-'A'+'a' : c\r\n#define max(a,b) a>=b?a:b\r\n\r\nint a[20005];\r\nint main(){\r\n\tint t;\r\n\tint i;\r\n\tlong long n,s;\r\n\tlong long max;\r\n\tint num;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++){\r\n\t\tscanf(\"%lld%lld\",&n,&s);\r\n\t\tmax=(n+1)*(n-1);\r\n\t\tif(s<=max)\tnum=-1;\r\n\t\telse\t\tnum=(s-1-max)/(n*n-(n-1));\r\n\t\ta[i]=num+1;\r\n\t}\r\n\tfor(i=1;i<=t;i++){\r\n\t\tprintf(\"%d\\n\",a[i]);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9973684210526316, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9ee2ce9e970bffcac58ede98834bd66d", "bug_code_uid": "9fc79dcebdf80dcbea367069dfd0b9ea", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "d19cab4e4ed73c27e3a40bb8c4346059", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n  int n, k, i, l, res;\n  scanf(\"%d%d\", &n, &k);\n  int a[100] = {0};\n  char aux[101];\n  for(i = 0; i < n; i++){\n    scanf(\"%s\", aux);\n    a[strlen(aux)-1]++;\n  }\n  scanf(\"%s\", aux);\n  l = strlen(aux)-1;\n  res = 0;\n  for(i = 0; i < l; i++){\n    res += a[i];\n  }\n  printf(\"%d %d\\n\", 5*(res/k)+res+1, 5*((res+a[l])/k)+res+a[l]);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n  int n, k, i, l, res;\n  scanf(\"%d%d\", &n, &k);\n  int a[100] = {0};\n  char aux[101];\n  for(i = 0; i < n; i++){\n    scanf(\"%s\", aux);\n    a[strlen(aux)-1]++;\n  }\n  scanf(\"%s\", aux);\n  l = strlen(aux)-1;\n  res = 0;\n  for(i = 0; i < l; i++){\n    res += a[i];\n  }\n  printf(\"%d %d\\n\", 5*(res/k)+res+1, 5*((res+a[l]-1)/k)+res+a[l]);\n}\n"}
{"similarity_score": 0.2533532041728763, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "552edd44ec0540e06f1cae28e0e21668", "bug_code_uid": "e441eb33832bffab46d2db33bac96139", "src_uid": "dc67dd2102c70ea476df642b863ae8d3", "apr_id": "88eda963bb480347ac1edf73200378e1", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint A , B , a , b  ;\n\tint resultat , pow , concat;\n\tint Test , i ;\n\tscanf(\"%d\",&Test);\n\tfor(i=0 ; i<Test ; i++){\n\t\tscanf(\"%d\",&A);\n\t\tscanf(\"%d\",&B);\n\t\tresultat=0;\n\t\tpow = 10;\n\t\tfor(a=1 ; a<(A+1)/2 ; a++){\n\t\t\tfor(b=1 ; b<(B+1)/2 ; b++){\n\t\t\t\twhile(b >= pow){\n\t\t\t\t\tpow *= 10;\n\t\t\t\t\tconcat=a * pow + b;}\n\t\t\t\tif (((a*b)+(a+b))==concat){\n\t\t\t\t\tresultat++;}}}\n\t\tprintf(\"%d\",resultat);}\t\t\t\n\t\t\t\n\treturn(0);\n}\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint T,i;\n\tlong long count,A,B,y,x;\n\tscanf(\"%d\",&T);\n\tfor(i=1;i<=T;i++){\n\t\tscanf(\"%lld%lld\",&A,&B);\n\t\tx=9;y=0;\n\t\twhile(x<=B){\n\t\t\tx=x*10+9;\n\t\t\ty++;\n\t\t}\n\t\tcount=A*y;\n\t\tprintf(\"%lld\\n\",count);\n\t}\n\treturn 0;\n\t\n } "}
{"similarity_score": 0.9546827794561934, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ecbaf49eef544a702e33e6b85af38fa1", "bug_code_uid": "e0ca1c950612b7bb238322c8999786a4", "src_uid": "7f9853be7ac857bb3c4eb17e554ad3f1", "apr_id": "0a268617129def0445f6acde30d3ee64", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n\tint input;\r\n    scanf(\"%d\", &input);\r\n\tfor(int i = 0; i < input; i++){\r\n\r\n\t\tchar num[26];\r\n\t\tscanf(\"%s\", &num);\r\n\t\t//printf(\"%s\",num);\r\n\r\n\t\tchar str[50] = \"\";\r\n\t\tscanf(\"%s\", &str);\r\n\t\tint sum = 0;\r\n\t\tfor(int j = 0; j < 50; j++){\r\n\t\t\tif(str[j] != '\\0'){\r\n\t\t\t\tsum++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint x = 0;\r\n\t\tint y = 0;\r\n\t\tfor(int j = 0; j < sum; j++){\r\n\t\t\tfor(int k = 0; k < sizeof(num); k++){\r\n\t\t\t\tif(str[j] == num[k] && j != 0){\r\n\t\t\t\t\tx += abs(k-y);\r\n\t\t\t\t\ty = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse if(str[j] == num[k] && j != 0){\r\n\t\t\t\t\ty = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", x-1);\r\n\r\n\t}\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n\tint input;\r\n    scanf(\"%d\", &input);\r\n\tfor(int i = 0; i < input; i++){\r\n\r\n\t\tchar num[26];\r\n\t\tscanf(\"%s\", &num);\r\n\t\t//printf(\"%s\",num);\r\n\r\n\t\tchar str[50] = \"\";\r\n\t\tscanf(\"%s\", &str);\r\n\t\tint sum = 0;\r\n\t\tfor(int j = 0; j < 50; j++){\r\n\t\t\tif(str[j] != '\\0'){\r\n\t\t\t\tsum++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint x = 0;\r\n\t\tint y = 0;\r\n\t\tfor(int j = 0; j < sum; j++){\r\n\t\t\tfor(int k = 0; k < sizeof(num); k++){\r\n\t\t\t\tif(str[j] == num[k] && j != 0){\r\n\t\t\t\t\tx += abs(k-y);\r\n\t\t\t\t\ty = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse if(str[j] == num[k] && j == 0){\r\n\t\t\t\t\ty = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", x);\r\n\r\n\t}\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9502762430939227, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "48472e31c83be4d5cbdcce4f0986248a", "bug_code_uid": "1b01d5b7922bdf1cda16dfc898a6a039", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "051c1f76119472ee3123e0c871dd990d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        printf(\"%d %d\\n\",(1-n),n);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,n;\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        scanf(\"%lld\",&n);\r\n        printf(\"%lld %lld\\n\",(1-n),n);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9974424552429667, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1c6b68ca0e49a8d3f9715135af015a51", "bug_code_uid": "7fa357cc23b677978cb2ad19ec142ccc", "src_uid": "6d4744d7356e709f73891270becd14e3", "apr_id": "ab85fcac925b2f09dbcf3e3bf0a32d7c", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\t int n,t,b,d[1000],i,j,k=0,p=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&d[i]);\r\n\r\n\t\t}\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tif(d[i]==d[i+1]){\r\n\t\t\t\tp++;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tp=0;\r\n\t\t\t}\r\n\t\t\tif(p>k){\r\n\t\t\t\tk=p;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",k+1);\r\n\t\tk=0;\r\n\t\tp=0;\r\n\t\t\r\n\r\n\t}\r\n \r\n \r\n \r\n\t\r\n\t\r\n\treturn 0;\r\n\t\t\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\t int n,t,b,d[1000],i,j,k=0,p=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&d[i]);\r\n\r\n\t\t}\r\n\t\tfor(i=0;i<n-1;i++){\r\n\t\t\tif(d[i]==d[i+1]){\r\n\t\t\t\tp++;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tp=0;\r\n\t\t\t}\r\n\t\t\tif(p>k){\r\n\t\t\t\tk=p;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",k+1);\r\n\t\tk=0;\r\n\t\tp=0;\r\n\t\t\r\n\r\n\t}\r\n \r\n \r\n \r\n\t\r\n\t\r\n\treturn 0;\r\n\t\t\r\n}"}
{"similarity_score": 0.9910554561717353, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fe47b20067de3fadfdb1b347b85616d0", "bug_code_uid": "bec912a92f208bbc52659fed1fa7c3b5", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "91bd881fff74d9acbaec8c36c1952994", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int t;\n\tscanf(\"%ld\",&t);\n\twhile(t--){\n\t\tlong int l,r,d,i=0,flag=0;\n\t\tscanf(\"%ld%ld%ld\",&l,&r,&d);\n\t\tif(d<l){\n\t\t\tprintf(\"%ld\\n\",d);\n\t\t\t}\n\t\tif(l>d){\n\t\t\tprintf(\"%ld\\n\",d);\n\t\t\t}\n\t\telse {\n\t\t\ti=r/d;\n\t\t\tprintf(\"%ld\\n\",(i+1)*d);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong int t;\n\tscanf(\"%ld\",&t);\n\twhile(t--){\n\t\tlong int l,r,d,i=0,flag=0;\n\t\tscanf(\"%ld%ld%ld\",&l,&r,&d);\n\t\tif(d<l){\n\t\t\tprintf(\"%ld\\n\",d);\n\t\t\t}\n\t\telse if(l>d){\n\t\t\tprintf(\"%ld\\n\",d);\n\t\t\t}\n\t\telse {\n\t\t\ti=r/d;\n\t\t\tprintf(\"%ld\\n\",(i+1)*d);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9973753280839895, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e0ade16e55b5cbb9a5c9248d5a374ca9", "bug_code_uid": "cbecc24e72d5da0a537189312a5f400d", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "e38efa574a38fece75b79e4fe2231cdf", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,sum=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int t=a[0];\n    for(i=0;i<n;i++)\n    {\n       if(t<a[i])\n        t=a[i];\n    }\n     for(i=0;i<n;i++)\n    {\n        b[i]=t-a[i];\n    }\n     for(i=0;i<n;i++)\n    {\n        sum+=b[i];\n    }\n    printf(\"%d\\n\",sum+t);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,sum=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int t=a[0];\n    for(i=0;i<n;i++)\n    {\n       if(t<a[i])\n        t=a[i];\n    }\n     for(i=0;i<n;i++)\n    {\n        b[i]=t-a[i];\n    }\n     for(i=0;i<n;i++)\n    {\n        sum+=b[i];\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.87, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "a6d9e628eba70230b9f4a9566d47faf5", "bug_code_uid": "fd19efd7b69b76e00d939720cb2d67ad", "src_uid": "7d1e8769a6b1d5c6680ab530d19e7fa4", "apr_id": "65e3da66dab55451ae7cd31eb453937f", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int a,b,c,d=0,k,r,p,count=0,f,m;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    int ara[a],i;\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<a;i++)\n    {\n        if(ara[i]>b)\n        {\n          k=i+1;\n          r=k-d;\n          r--;\n          p=r-c;\n          p++;\n          count+=p;\n          d=k;\n\n        }\n    }\n    f=i-d;\n    m=f-c;\n    m++;\n    count=count+m;\n    printf(\"%d\",count);\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int a,b,c,d=0,k,r,p,count=0,f,m;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    int ara[a],i;\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<a;i++)\n    {\n        if(ara[i]>b)\n        {\n          k=i+1;\n          r=k-d;\n          r--;\n          d=k;\n          if(r<c)\n          {\n              continue;\n          }\n          p=r-c;\n          p++;\n          count+=p;\n\n\n        }\n    }\n    f=i-d;\n    if(f>=c)\n    {\n       m=f-c;\n       m++;\n       count=count+m;\n    }\n\n    printf(\"%d\",count);\n\n}\n"}
{"similarity_score": 0.7537091988130564, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f6ca7322d91dc87b106c4cdbd4622828", "bug_code_uid": "28506ee72fbe0212abf18a62595e173c", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "6c1638beb227b710ae245008b417aa4a", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,d;\n\tscanf(\"%d%d\",&n,&d);\n\tint arr[n],count=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tfor(int i = 1; i<n;i++)\n\t{\tint z;\n\t\tif(arr[i]<arr[i-1])\n\t\t{\t\n\t\t\tz = (arr[i-1]-arr[i]+d)/2;\n\t\t\tcount += z ;\n\t\t\tarr[i] *= z;  \n\t\t}\n\t\telse if(arr[i]==arr[i-1])\n\t\t{\n\t\t\tarr[i] += d;\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,d;\n\tscanf(\"%d%d\",&n,&d);\n\tint arr[n],count=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tfor(int i = 1; i<n;i++)\n\t{\tint z;\n\t\tif(arr[i]<=arr[i-1])\n\t\t{\t\n\t\t\tz = (arr[i-1]-arr[i])/d + 1;\n\t\t\tcount += z;\n\t\t\tarr[i] = arr[i] + z*d;  \n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\\n\",count);\n}"}
{"similarity_score": 0.43986254295532645, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "afc4cf78b54dc99732b46aa69595a521", "bug_code_uid": "e766aaaa1d321945eb7396cd52185697", "src_uid": "a4eeaf7252b9115b67b9eca5f2bf621d", "apr_id": "a7b3a98f9f86ef6ca2dce5453e9d05bb", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tint x1,x2,p1,p2;\r\n\tint a,b;\r\n\tint i=0;\r\n\tint w=1;\r\n\twhile(t>0)\r\n\t{\r\n\t\tscanf(\"%d %d\",&x1,&p1);\r\n\t\tscanf(\"%d %d\",&x2,&p2);\r\n\t\tw=1;\r\n\t\ti=0;\r\n\t\twhile(i<p1)\r\n\t\t{\r\n\t\t\tw*=10;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\ti=0;\r\n\t\ta=x1*w;\r\n\t\tw=1;\r\n\t\twhile(i<p2)\r\n\t\t{\r\n\t\t\tw*=10;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tb=x2*w;\r\n\t\tif(a==b)\r\n\t\t{\r\n\t\t\tprintf(\"=\\n\");\r\n\t\t}\r\n\t\telse if(a>b)\r\n\t\t{\r\n\t\t\tprintf(\">\\n\");\r\n\t\t}\r\n\t\telse if(a<b)\r\n\t\t{\r\n\t\t\tprintf(\"<\\n\");\r\n\t\t}\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n } \r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tint x1,x2,p1,p2;\r\n\tint a,b;\r\n\tint i,j;\r\n\tint w=1;\r\n\tint n,m;\r\n\tint x;\r\n\twhile(t>0)\r\n\t{\r\n\t\tscanf(\"%d %d\",&x1,&p1);\r\n\t\tscanf(\"%d %d\",&x2,&p2);\r\n\t\ti=0;\r\n\t\tj=0;\r\n\t\tw=x1;\r\n\t\twhile(w>0)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t\tw/=10;\r\n\t\t}\r\n\t\tm=i;\r\n\t\ta=i+p1;\r\n\t\tw=x2;\r\n\t\ti=0;\r\n\t\twhile(w>0)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t\tw/=10;\r\n\t\t}\r\n\t\tn=i;\r\n\t\tb=i+p2;\r\n\t\tif(a>b)\r\n\t\t{\r\n\t\t\tprintf(\">\\n\");\r\n\t\t}\r\n\t\telse if(a<b)\r\n\t\t{\r\n\t\t\tprintf(\"<\\n\");\r\n\t\t}\r\n\t\telse if(a==b)\r\n\t\t{\r\n\t\t\tif(m==n)\r\n\t\t\t{\r\n\t\t\t\t\tif(x1>x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\">\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(x1==x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"=\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(x1<x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"<\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(m<n)\r\n\t\t\t{\r\n\t\t\t\tx=n-m;\r\n\t\t\t\twhile(x>0)\r\n\t\t\t\t{\r\n\t\t\t\t\tx1=x1*10;\r\n\t\t\t\t\tx--;\r\n\t\t\t\t}\r\n\t\t\t\tif(x1>x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\">\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(x1==x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"=\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(x1<x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"<\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(m>n)\r\n\t\t\t{\r\n\t\t\t\tx=m-n;\r\n\t\t\t\twhile(x>0)\r\n\t\t\t\t{\r\n\t\t\t\t\tx2=x2*10;\r\n\t\t\t\t\tx--;\r\n\t\t\t\t}\r\n\t\t\t\tif(x1>x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\">\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(x1==x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"=\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(x1<x2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"<\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n } \r\n"}
{"similarity_score": 0.8993288590604027, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "05f000951224f10e7202e6c6508e143b", "bug_code_uid": "e5c9317c572eafa322831657af1e25cd", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "dd770a61dc3ab44653aaed77d32bccef", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tlong long int i,n,odd=0,even=0;\n\tscanf(\"%lld\",&n);\n\tlong long int array[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&array[i]);\n\t\tif(array[i]%2==1)\n\t\t\todd++;\n\t\telse \n\t\t\teven++;\n\t}\n\tif(odd%2==1)\n\t\tprintf(\"First\\n\");\n\telse \n\t\tprintf(\"Second\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tlong long int i,odd=0,n;\n\tscanf(\"%lld\",&n);\n\tlong long int array[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&array[i]);\n\t\tif(array[i]%2==1)\n\t\t\todd=1;\n\t}\n\tif(odd==1)\n\t\tprintf(\"First\\n\");\n\telse\n\t\tprintf(\"Second\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9568965517241379, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "26de9549aa7fa3efaa20d0dd5e7b21a0", "bug_code_uid": "89c5275443d66cb2bc97c7823abd3616", "src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "apr_id": "6c28580dc415bd4e7c03c98f5054999b", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,j,count;\n\tcount=0;\n\tscanf(\"%d\",&n);\n\tint a[6000]={0};\n\tint i;\n\tint cout=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tif(a[j]==0)\n\t\t\ta[j]=1;\n\t\telse\n\t\t\tcount++;\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,j,count;\n\tcount=0;\n\tscanf(\"%d\",&n);\n\tint a[6000]={0};\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tif(a[j]==0 &&j<=n)\n\t\t\ta[j]=1;\n\t\telse\n\t\t\tcount++;\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.20626151012891344, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "d8163ce4beb26aa05cea16b619e4a1b9", "bug_code_uid": "609d04625b3e95c1e15905d9be85e27e", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "6dd78ba6ca93e4e81fd8dfa84af2e823", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main()\n{\n    int n,m,i,q,x,j,p,c;\n    int a[100002];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=1;i<=m;i++)\n    {\n    scanf(\"%d\",&c);\n    switch(c)\n    {\n    case (1):\n    {\n    scanf(\"%d %d\",&p,&j);\n    a[p-1]=j;\n   \n    break;\n    }\n    case(2):\n    {\n    scanf(\"%d\",&j);\n    for(p=0;p<n;p++)\n    a[p]+=j;\n   \n    break;\n    }\n    case(3):\n    scanf(\"%d\",&j);\n    \n    printf(\"%d\\n\",a[j-1]);\n    break;\n    }\n    }\n    return 0;\n    }\n    \n    ", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,m,t,v,x,j;\n    long long int temp;\n    scanf(\"%d%d\",&n,&m);\n    long long int a[n+1];\n    int y=0;\n    for(i=1;i<n+1;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&t);\n        if(t==1)\n        {\n            scanf(\"%d%d\",&v,&x);\n            a[v]=x-y;\n        }\n        if(t==2)\n        {\n            scanf(\"%I64d\",&temp);\n            y += temp;\n        }\n        if(t==3)\n        {\n            scanf(\"%I64d\",&temp);\n            printf(\"%I64d\\n\",a[temp]+y);\n        }\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.8013172338090011, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "231c6d96258ab03d5d53548e02a865d8", "bug_code_uid": "f1230f43e7807412c25402d415f2e242", "src_uid": "046900001c7326fc8d890a22fa7267c9", "apr_id": "cb2f50bdb439fe853d80ccdfea840533", "difficulty": 900, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*in the name of MA SIDDESSORI*/\n#include<stdio.h>\nint main()\n{\n    unsigned int t;\n    char s[101];\n    scanf(\"%u\",&t);\n    while(t--)\n    {\n        scanf(\"%s\",s);\n        int a=0,b=0,i;\n        for(i=0;s[i]!='\\0';i++)\n        {\n            if(s[i]=='1') a++;\n            else b++;\n        }\n        if(a%2==0 && b%2==0)\n        {\n            printf(\"NET\\n\");\n        }\n        else\n        {\n            printf(\"DA\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "/*in the name of MA SIDDESSORI*/\n#include<stdio.h>\nint main()\n{\n    unsigned int t;\n    char s[101];\n    scanf(\"%u\",&t);\n    while(t--)\n    {\n        scanf(\"%s\",s);\n        int z=0,o=0,a=0,i;\n        for(i=0;s[i]!='\\0';i++)\n        {\n            if(s[i]=='1') o++;\n            else z++;\n        }\n        while(z>0 && o>0)\n        {\n            z--; o--; a++;\n        }\n        if(a%2==0) printf(\"NET\\n\");\n        else printf(\"DA\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8384146341463414, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d3cf364930591a47ecd793c70d810c6e", "bug_code_uid": "2a30db7a5b272d99f1a28e6a35b19795", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "c609ec55a7a95f67312e90fd0683e418", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\nchar a[100],b[100];\nint l1,l2;\nscanf(\"%s\",a);int k=2;///4th test case\nscanf(\"%s\",b);\nint m;\nl1=strlen(a);\nl2=strlen(b);\nm=l1<l2?l1:l2;\nfor(int i=0;i<=m-1;i++){\n    if(a[l1-1-i]!=b[l2-1-i]){\n        k=i+1;\n        break;\n    }\n}\nint req;\nreq=l2+l1-2*k+2;\nprintf(\"%d\",req);\nreturn 0;}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\nchar a[200001],b[200001];\nint l1,l2;\nscanf(\"%s\",a);int k=2;///4th test case\nscanf(\"%s\",b);\nint m;\nl1=strlen(a);\nl2=strlen(b);\nm=l1<l2?l1:l2;\nint i;\nfor(i=0;i<=m-1;i++){\n    if(a[l1-1-i]!=b[l2-1-i]){\n        break;\n    }\n}\nint req;\nreq=l2+l1-2*i;\nprintf(\"%d\",req);\nreturn 0;}\n"}
{"similarity_score": 0.9713937918441875, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d8755f41d1b6f2efd743c916a6ac3007", "bug_code_uid": "b7e269c6a7b32dff67c6842234268b86", "src_uid": "9e0d271b9bada1364dfcb47297549652", "apr_id": "b4caefb26c742777cd595c01e17ccf62", "difficulty": 1600, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint n;\nint i;\nscanf(\"%d\", &n);\nlong long a[n];\nint l[n], r[n];\nint d=0;\nscanf(\"%I64d\", &a[0]);\nl[0]=0;\nfor(i=1; i<n; i++)\n{\n    scanf(\"%I64d\", &a[i]);\n    if(a[i]>a[i-1])\n        d++;\n    else\n        d=0;\n    l[i]=d;\n}\nd=0;\nr[n-1]=0;\nfor(i=n-2; i>=0; i--)\n{\n    if(a[i]<a[i+1])\n        d++;\n    else\n        d=0;\n    r[i]=d;\n}\n/*\nfor(i=0; i<n; i++)\n    printf(\"%d \", l[i]);\nprintf(\"\\n\");\nfor(i=0; i<n; i++)\n    printf(\"%d \", r[i]);\nprintf(\"\\n\");\n*/\n\nd=r[1]+2;\n\nfor(i=1; i<n-1; i++)\n{\n    if(l[i-1]+r[i+1]+3>d && a[i-1]+1<a[i+1])\n        d=l[i-1]+r[i+1]+3;\n    else if (r[i+1]+2>d)\n        d=r[i+1]+2;\n    else if (l[i-1]+2>d)\n        d=l[i-1]+2;\n}\nif(l[n-2]+2>d)\n    d=l[n-2]+2;\nelse if(l[n-2]+1>d)\n    d=l[n-2]+1;\nprintf(\"%d\", d);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint n;\nint i;\nscanf(\"%d\", &n);\nlong long a[n];\nint l[n], r[n];\nint d=0;\nscanf(\"%I64d\", &a[0]);\nif(n==1)\n{\n    printf(\"1\", d);\n    return 0;\n}\nl[0]=0;\nfor(i=1; i<n; i++)\n{\n    scanf(\"%I64d\", &a[i]);\n    if(a[i]>a[i-1])\n        d++;\n    else\n        d=0;\n    l[i]=d;\n}\nd=0;\nr[n-1]=0;\nfor(i=n-2; i>=0; i--)\n{\n    if(a[i]<a[i+1])\n        d++;\n    else\n        d=0;\n    r[i]=d;\n}\n/*\nfor(i=0; i<n; i++)\n    printf(\"%d \", l[i]);\nprintf(\"\\n\");\nfor(i=0; i<n; i++)\n    printf(\"%d \", r[i]);\nprintf(\"\\n\");\n*/\n\nd=r[1]+2;\n\nfor(i=1; i<n-1; i++)\n{\n    if(l[i-1]+r[i+1]+3>d && a[i-1]+1<a[i+1])\n        d=l[i-1]+r[i+1]+3;\n    else if (r[i+1]+2>d)\n        d=r[i+1]+2;\n    else if (l[i-1]+2>d)\n        d=l[i-1]+2;\n}\nif(l[n-2]+2>d)\n    d=l[n-2]+2;\nelse if(l[n-2]+1>d)\n    d=l[n-2]+1;\nprintf(\"%d\", d);\nreturn 0;\n}\n"}
{"similarity_score": 0.9782487451199108, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5da7f4c1338b2b988624689988468ee6", "bug_code_uid": "c75f42d8f8492f1529b7945c1df5745e", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "2f2249e3940616536a1a8369e862740f", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nunsigned long\tout[100008];\n\ntypedef struct hs_s {\n\tunsigned long h;\n\tint\tix;\n} hs_t;\nhs_t hs[100008];\nhs_t inp[100008];\n\nint\nrcomp (const void *a, const void *b)\n{\n        unsigned long     x = ((hs_t *)a)->h;\n        unsigned long     y = ((hs_t *)b)->h;\n\n\tif (y > x) {\n\t\treturn 1;\n\t} else if (y < x) {\n\t\treturn -1;\n\t}\n        return 0;\n}\n\nint\nmain()\n{\n\tint n, p = 0;\n\tint i;\n\tint\tmix = 0;\n\tint\tmax = 0;\n\tint\tr = 1, l;\n\tscanf (\"%d\", &n);\n\n\tfor (i = 1; i <= n; ++i) {\n\t\tint c;\n\t\tscanf (\"%d\", &c);\n\t\ths[i].h = c;\n\t\ths[i].ix = i;\n\t\tinp[i] = hs[i];\n\t}\n\n\tqsort(&hs[1], n, sizeof (hs_t), rcomp);\n\n\tfor (l = 1; l <= n; ++l) {\n\t\tint rx = hs[l].ix;\n\t\tunsigned long max = hs[l].h;\n\n\t\tfor (; r < rx; r++) {\n\t\t\tif (max > inp[r].h) {\n\t\t\t\tout[r] = (max - inp[r].h + 1);\n\t\t\t}\n\t\t}\n\t\tmax = 0;\n\t}\n\tfor (i = 1; i <= n; i++) {\n\t\tprintf (\"%lu \", out[i]);\n\t}\n\tputs(\"\");\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nunsigned long\tout[100008];\n\ntypedef struct hs_s {\n\tunsigned long h;\n\tint\tix;\n} hs_t;\nhs_t hs[100008];\nhs_t inp[100008];\n\nint\nrcomp (const void *a, const void *b)\n{\n        unsigned long     x = ((hs_t *)a)->h;\n        unsigned long     y = ((hs_t *)b)->h;\n\n\tif (y > x) {\n\t\treturn 1;\n\t} else if (y < x) {\n\t\treturn -1;\n\t}\n        return 0;\n}\n\nint\nmain()\n{\n\tint n, p = 0;\n\tint i;\n\tint\tmix = 0;\n\tint\tmax = 0;\n\tint\tr = 1, l;\n\tscanf (\"%d\", &n);\n\n\tfor (i = 1; i <= n; ++i) {\n\t\tint c;\n\t\tscanf (\"%d\", &c);\n\t\ths[i].h = c;\n\t\ths[i].ix = i;\n\t\tinp[i] = hs[i];\n\t}\n\n\tqsort(&hs[1], n, sizeof (hs_t), rcomp);\n\n\tfor (l = 1; l <= n; ++l) {\n\t\tint rx = hs[l].ix;\n\t\tunsigned long max = hs[l].h+1;\n\n\t\tfor (; r < rx; r++) {\n\t\t\tif (max > inp[r].h) {\n\t\t\t\tout[r] = (max - inp[r].h);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i = 1; i <= n; i++) {\n\t\tprintf (\"%lu \", out[i]);\n\t}\n\tputs(\"\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9752650176678446, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bcff73061632d183b3a7bab9431aca03", "bug_code_uid": "40c80806ae072ce7969eabdc06c403de", "src_uid": "941adee47c2a28588ebe7dfe16e0c91a", "apr_id": "73467ba83f32316225653d501d67c82e", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\tint t,n;\n\tdouble sum=0,a,m;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tscanf(\"%d%lf\", &n, &m);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tscanf(\"%lf\", &a);\n\t\t\tsum += a;\n\t\t}\n\t\tif (sum == m) {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n\tint t,n;\n\tdouble sum,a,m;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t    sum=0;\n\t\tscanf(\"%d%lf\", &n, &m);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tscanf(\"%lf\", &a);\n\t\t\tsum += a;\n\t\t}\n\t\tif (sum == m) {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9359605911330049, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ac158fa94ba87caaed86ed8ea5d0d8fb", "bug_code_uid": "fad7d95477c874c7d32e3bf7b5569fb2", "src_uid": "eadc7f5e1043ac431984ec921c62892d", "apr_id": "4b8b00d6d3a20a8b18b116f9afdd20fe", "difficulty": 1500, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,k=-1;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar str[n];\r\n\t\tscanf(\"%s\",str);\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tif(str[j]=='0')\r\n\t\t\tk=j;\r\n\t\t}\r\n\t\tif(k+1==n-k||k==-1)\r\n\t\t{\r\n\t\t\tif(k==-1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %d 2 %d\\n\",n-1,n);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %d %d %d\\n\",n/2+1,n/2+1,n);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif((k+1)>(n-k))\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %d 1 %d\\n\",k+1,k);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d %d %d %d\\n\",k+1,n,k+2,n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,k=-1,f=-1;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar str[n];\r\n\t\tscanf(\"%s\",str);\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tif(str[j]=='0')\r\n\t\t\tk=j;\r\n\t\t\tif(str[n-1-j]=='0')\r\n\t\t\tf=j;\r\n\t\t}\r\n\t\tif((k+1==n-k&&f==k)||k==-1)\r\n\t\t{\r\n\t\t\tif(k==-1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %d 2 %d\\n\",n-1,n);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %d %d %d\\n\",n/2+1,n/2+1,n);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif((k+1)>(n-k))\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %d 1 %d\\n\",k+1,k);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d %d %d %d\\n\",k+1,n,k+2,n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9661458333333334, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c668237ec1e695ba3c0eda8bd19f2f48", "bug_code_uid": "6610e8b2c98f9ab8300c3e242650c1fa", "src_uid": "7421b2392cb40f1cf0b7fd93c287f1eb", "apr_id": "c809bb213b6ea6333ff09775a7395c81", "difficulty": 1400, "tags": ["constructive algorithms", "games", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#define  max(x,y) (((x)>(y)) ? (x) : (y))\r\n#define  min(x,y) (((x)<(y)) ? (x) : (y))\r\n#define ll long long\r\n\r\nint t, n, a[200010];\r\nll dp[200010];\r\nint cmp(const void *_a, const void *_b) {\r\n\treturn *(int *)_a - *(int *)_b;\r\n}\r\nll m;\r\n\r\nint main(void) {\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tm = 0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\tqsort(a, n, sizeof(a[0]), cmp);\r\n\t\tfor (int i = 2; i < n; i++)\r\n\t\t\tdp[i] = max(dp[i - 1], a[i] - a[i - 1] + a[i] - a[0]), m = max(m, dp[i]);\r\n\t\tfor (int i = n - 3; i >= 0; i--)\r\n\t\t\tdp[i] = max(dp[i + 1], a[i + 1] - a[i] + a[n - 1] - a[i]), m = max(m, dp[i]);\r\n\t\tprintf(\"%lld\\n\", m);\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#define  max(x,y) (((x)>(y)) ? (x) : (y))\r\n#define  min(x,y) (((x)<(y)) ? (x) : (y))\r\n#define ll long long\r\n\r\nint t, n, a[200010];\r\nll dp[200010];\r\nint cmp(const void *_a, const void *_b) {\r\n\treturn *(int *)_a - *(int *)_b;\r\n}\r\nll m;\r\n\r\nint main(void) {\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tm = 0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\tqsort(a, n, sizeof(a[0]), cmp);\r\n\t\tdp[0] = dp[1] = 0;\r\n\t\tfor (int i = 2; i < n; i++)\r\n\t\t\tdp[i] = max(dp[i - 1], a[i] - a[i - 1] + a[i] - a[0]), m = max(m, dp[i]);\r\n\t\tdp[n - 2] = dp[n - 1] = 0;\r\n\t\tfor (int i = n - 3; i >= 0; i--)\r\n\t\t\tdp[i] = max(dp[i + 1], a[i + 1] - a[i] + a[n - 1] - a[i]), m = max(m, dp[i]);\r\n\t\tprintf(\"%lld\\n\", m);\r\n\t}\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.994413407821229, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f87a5dac3f0379d1055ae111175cafe8", "bug_code_uid": "93c36e219b710392d51155bbb100fd70", "src_uid": "cdcf95e29d3260a07dded74286fc3798", "apr_id": "05dc19a3ecaf633d1363f4a76ef20cb2", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,n,i,j,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    scanf(\"%d\",&n);\r\n    int x=n;\r\n    int y=n/2;\r\n    if(n==1||n==3)\r\n        printf(\"-1\\n\");\r\n    else\r\n        {\r\n        if(n%2==0)\r\n        {\r\n            for(;n>=1;n--)\r\n                printf(\"%d \",n);\r\n        }\r\n        if(n%2!=0&&n!=5)\r\n        {\r\n            for(n;n>((x/2)+1);n--)\r\n            {\r\n                printf(\"%d \",n);\r\n            }printf(\"%d %d \",x/2,(x/2)+1);\r\n            for(n=y-1;n>1;n--)\r\n            {\r\n                printf(\"%d \",n);\r\n            }\r\n            printf(\"1\");\r\n        }\r\n        if(n==5)\r\n            printf(\"4 5 2 3 1\");\r\n        printf(\"\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,n,i,j,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    scanf(\"%d\",&n);\r\n    int x=n;\r\n    int y=n/2;\r\n    if(n==1||n==3)\r\n        printf(\"-1\\n\");\r\n    else\r\n        {\r\n        if(n%2==0)\r\n        {\r\n            for(;n>=1;n--)\r\n                printf(\"%d \",n);\r\n        }\r\n        if(n%2!=0&&n!=5)\r\n        {\r\n            for(n;n>((x/2)+1);n--)\r\n            {\r\n                printf(\"%d \",n);\r\n            }printf(\"%d %d \",x/2,(x/2)+1);\r\n            for(n=y-1;n>1;n--)\r\n            {\r\n                printf(\"%d \",n);\r\n            }\r\n            printf(\"1\");\r\n        }\r\n        if(n==5)\r\n            printf(\"3 4 5 1 2\");\r\n        printf(\"\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.33719433719433717, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "bbd9d61795e675cc9a50eb78a0bcf360", "bug_code_uid": "4245756652cf53e1e26a72c0224e64d3", "src_uid": "6ea491419f3ea387cf2aded8a8db914d", "apr_id": "3fed58365451a8bd9ec380006737a029", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nmain()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,a,b;\r\n        scanf(\"%d %d %d\",&n,&a,&b);\r\n        int ara[n],i;\r\n        int p=n/2;\r\n        if(1<=a&&a<=p&&1<=b&&b<=p)\r\n            printf(\"-1\\n\");\r\n        else if(p<b&&b<=n&&p<a&&a<=n)\r\n            printf(\"-1\\n\");\r\n        else\r\n        {\r\n        for(i=1;i<=n;i++)\r\n            ara[i]=n-i+1;\r\n        for(i=1;i<=n/2;i++)\r\n        {\r\n            if(ara[i]==b)\r\n                ara[i]=a;\r\n            if(ara[i+3]==a)\r\n                ara[i]=b;\r\n        }\r\n        for(i=1;i<=n;i++)\r\n            printf(\"%d \",ara[i]);\r\n        printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nmain()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,a,b;\r\n        scanf(\"%d %d %d\",&n,&a,&b);\r\n        int ara[n],i;\r\n        int p=n/2;\r\n        for(i=1;i<=n;i++)\r\n            ara[i]=n-i+1;\r\n        for(i=1;i<=p;i++)\r\n        {\r\n            if(ara[i]==b)\r\n                ara[i]=a;\r\n        }\r\n        for(i=p+1;i<=n;i++)\r\n        {\r\n            if(ara[i]==a)\r\n                ara[i]=b;\r\n        }\r\n        int max=0,min=ara[1];\r\n        for(i=p+1;i<=n;i++)\r\n        {\r\n            if(ara[i]>max)\r\n                max=ara[i];\r\n        }\r\n        for(i=1;i<=p;i++)\r\n            if(min>ara[i])\r\n            min=ara[i];\r\n        if(min==a&&max==b)\r\n        {\r\n            for(i=1;i<=n;i++)\r\n            printf(\"%d \",ara[i]);\r\n        printf(\"\\n\");\r\n        }\r\n        else\r\n            printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.38796516231195566, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "ca2f690c8bb1363854b9e6555846b26f", "bug_code_uid": "0827e65e102ab86172aca31e0375c4ca", "src_uid": "14fd47f6f0fcbdb16dbd73dcca8a782f", "apr_id": "b9ac753a5ffd8f1cbbfa2dc117ba98b0", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main(){\n\tint n;\n\tint i;\n\tint a[100000];\n\tint max = -1, cnt = 0;\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(a[i] > max)\n\t\t\tmax = a[i];\n\t}\n\tfor(i = 0; i < n; i++){\n\t\tif(a[i] == max)\n\t\t\tcnt++;\n\t}\n\tprintf(\"%d \", max);\n\tcnt--;\n\tfor(i = 0; i < n; i++){\n\t\tif(a[i] == max && cnt){\n\t\t\tprintf(\"%d \", a[i]);\n\t\t\tcnt--;\n\t\t}\n\t\telse if(a[i] != max){\n\t\t\tprintf(\"%d \", a[i]);\n\t\t}\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n\nint main(){\n\tint n;\n\tint i, j, k;\n\tint a[100000], f;\n\tint b[35] = {0}, d;\n\tint c[35] = {0}, e = 1;\n\tint max = -1, ind = -1;\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tf = a[i];\n\t\tj = 0;\n\t\twhile(f / 2 != 0){\n\t\t\tb[j] += f % 2;\n\t\t\tf = f / 2;\n\t\t\tj++;\n\t\t}\n\t\tb[j] += f % 2;\n\t}\n\t\n\tfor(i = 0; i < n; i++){\n\t\tf = a[i];\n\t\tj = 0;\n\t\twhile(f / 2 != 0){\n\t\t\tif(f % 2 == 1 && b[j] <= 1){\n\t\t\t\tc[j] = f % 2;\n\t\t\t}\n\t\t\tf = f / 2;\n\t\t\tj++;\n\t\t}\n\t\tif(f % 2 == 1 && b[j] <= 1){\n\t\t\tc[j] = f % 2;\n\t\t}\n\t\tj++;\n\t\te = 1;\n\t\td = 0;\n\t\tfor(k = 0; k < j; k++){\n\t\t\t//printf(\"%d \", c[k]);\n\t\t\td += e * c[k];\n\t\t\te *= 2;\n\t\t\tc[k] = 0;\n\t\t}\n\t\t//printf(\"\\n\");\n\t\t//printf(\"%d\\n\", d);\n\t\tif(d > max){\n\t\t\tmax = d;\n\t\t\tind = i;\n\t\t}\n\t}\n\tprintf(\"%d \", a[ind]);\n\tfor(i = 0; i < n; i++){\n\t\tif(i != ind)\n\t\t\tprintf(\"%d \", a[i]);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.6038781163434903, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1837faf3004bfa5380c9c4c40e12ae19", "bug_code_uid": "add4cb8b7fb7c0b02ce8582d71947fe3", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "934fb9faa3d92bdf44978c51eb84958a", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    int t,n,x,a,b,i,p,k;\n    scanf(\"%d\",&t);\n     for(i=0;i<t;i++){\n        scanf(\"%d %d %d %d\",&n,&x,&a,&b);\n        if(a>b){\n        k=a;\n        p=b;}\n        else{\n            k=b;\n            p=a;\n        }\n        if(a==n && b==1 || b==n && a==1)\n        printf(\"%d\\n\",abs(a-b));\n        else\n        printf(\"%d\\n\",abs(a+x-b));\n        \n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    int t,n,x,a,b,i,k;\n    scanf(\"%d\",&t);\n     for(i=0;i<t;i++){\n        scanf(\"%d %d %d %d\",&n,&x,&a,&b);\n        k=abs(a-b)+x;\n        if(k<=n-1)\n        printf(\"%d\\n\",k);\n        else\n        printf(\"%d\\n\",n-1);\n        \n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.7843463780183181, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "9e09b5327c96c22b6b42b572a04b3ed4", "bug_code_uid": "888365ec9bd5c3334c7a7c60210a2f25", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "3232190c61246eb9a08a12fcce9d9839", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long n,x,num;\n    scanf(\"%lld%lld\",&n,&x);\n    long long A[100001]={0},cnt[100001]={0},i,sum=0,temp;\n    for(i=0;i<n;++i)\n    {\n        scanf(\"%d\",&num);\n        A[num]+=1;\n        if (A[num]>0)\n            cnt[num]=1;\n\n    }\n    for(i=1;i<=100000;++i)\n    {\n        if (cnt[i]==1)\n        {\n            temp=x^i;\n            sum+=(A[i]*A[temp]);\n            cnt[i]=0;\n            cnt[temp]=0;\n\n        }\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long n,x,num;\n    scanf(\"%lld%lld\",&n,&x);\n    long long A[100001]={0},cnt[100001]={0},i,sum=0,temp;\n    for(i=0;i<n;++i)\n    {\n        scanf(\"%d\",&num);\n        A[num]+=1;\n        if (A[num]>0)\n            cnt[num]=1;\n\n    }\n    if (x==0)\n    {\n              for(i=1;i<=100000;++i)\n                if(cnt[i])\n                    sum+=(A[i]*(A[i]-1))/2;\n    }\n    else\n    {\n    for(i=1;i<=100000;++i)\n    {\n        if (cnt[i]==1)\n        {\n            temp=x^i;\n            if (temp<=100000)\n            {\n            sum+=(A[i]*A[temp]);\n            cnt[temp]=0;\n            }\n            cnt[i]=0;\n\n\n     }\n        }\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9958734525447043, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "39448d5a310abef601629792a5fa0baa", "bug_code_uid": "8657fca87ebb328c8a0d0edadaf80ff5", "src_uid": "86a2e0854f9faf0b119d0d5e4b8fe952", "apr_id": "4d875ec2444d476afa940348a8eec3f8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i =1 ;i <= t; i++)\r\n    {\r\n        char s1[100],s2[100];\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",&s1);\r\n        scanf(\"%s\",&s2);\r\n        for(int j = 0;j<n; j++)\r\n        {\r\n            if(s1[j] != s2[j])\r\n            {\r\n                if(s1[j] == 'R' || s2[j]== 'R')\r\n                {\r\n                printf(\"NO\");\r\n                break;\r\n                }\r\n                else if(j == n-1)\r\n                {\r\n                    printf(\"YES\");\r\n                }\r\n            }\r\n            else if(j == n-1)\r\n            {\r\n                printf(\"YES\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i =1 ;i <= t; i++)\r\n    {\r\n        char s1[100],s2[100];\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",&s1);\r\n        scanf(\"%s\",&s2);\r\n        for(int j = 0;j<n; j++)\r\n        {\r\n            if(s1[j] != s2[j])\r\n            {\r\n                if(s1[j] == 'R' || s2[j]== 'R')\r\n                {\r\n                printf(\"NO\\n\");\r\n                break;\r\n                }\r\n                else if(j == n-1)\r\n                {\r\n                    printf(\"YES\\n\");\r\n                }\r\n            }\r\n            else if(j == n-1)\r\n            {\r\n                printf(\"YES\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8746846089150546, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "40740442099ca8d6c1008541c62354a7", "bug_code_uid": "77730d139d796030b0e17f28b599dd64", "src_uid": "a00d831da539c69d571d9720fd94eee1", "apr_id": "a9a681eeb4ca3c841c5a52c290f0a6b9", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/* Coached by rainboy */\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ib - ia;\n}\n\nint main() {\n\tint q;\n\n\tscanf(\"%d\", &q);\n\twhile (q--) {\n\t\tstatic int kk[A + 1];\n\t\tint n, i, k, ans;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tint a;\n\n\t\t\tscanf(\"%d\", &a);\n\t\t\tkk[a]++;\n\t\t}\n\t\tqsort(kk, n, sizeof *kk, compare);\n\t\tans = 0;\n\t\tfor (i = 0, k = n; i < n; x--)\n\t\t\tif (kk[i] <= x)\n\t\t\t\tans += kk[i];\n\t\tprintf(\"%d\\n\", ans);\n\t\tmemset(kk, 0, n * sizeof *kk);\n\t}\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define A 200000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ib - ia;\n}\n\nint main() {\n\tint q;\n\n\tscanf(\"%d\", &q);\n\twhile (q--) {\n\t\tstatic int kk[A + 1];\n\t\tint n, i, k, ans;\n\n\t\tscanf(\"%d\", &n);\n\t\tmemset(kk, 0, n * sizeof *kk);\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tint a;\n\n\t\t\tscanf(\"%d\", &a), a--;\n\t\t\tkk[a]++;\n\t\t}\n\t\tqsort(kk, n, sizeof *kk, compare);\n\t\tans = 0;\n\t\tfor (i = 0, k = n; i < n && k > 0; k--)\n\t\t\tif (kk[i] >= k)\n\t\t\t\tans += k, i++;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.890818858560794, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e010f281d36fd654d799f84c2130e4f4", "bug_code_uid": "a06d974b1da8639ccf2c63bf6845de9b", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "0f67d6225e0f5735bafbbe7aeee0a798", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n     long int n;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%ld\",&n);\r\n         if(n==1){\r\n            printf(\"2\\n\");}\r\n       else if(n%3==0){\r\n            printf(\"%d\\n\",n/3);\r\n        }\r\n        else if(n%3==2){\r\n        printf(\"%d\\n\",n/3 +1);}\r\n        else if(n%3==1){\r\n            printf(\"%d\\n\",n/2);\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n     long int n;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%ld\",&n);\r\n         if(n==1){\r\n            printf(\"2\\n\");}\r\n       else if(n%3==0){\r\n            printf(\"%d\\n\",n/3);\r\n        }\r\n        else if(n%3==2){\r\n        printf(\"%d\\n\",n/3 +1);}\r\n        else if(n%3==1){\r\n            printf(\"%d\\n\",n/3 +1);\r\n        }\r\n       \r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9987029831387808, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b80d4e05c3eecd6df10fe771ad38b9a1", "bug_code_uid": "4df39b3150d9e38e52d7b8f8ad815c57", "src_uid": "ddab0e510f9aceb2fbf75e26d27df166", "apr_id": "695b1f7fd0c1f32d90ebc60655b7e307", "difficulty": 1900, "tags": ["dp", "divide and conquer", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint P[10000];\nint A, N;\n\nint find(int s, int f, int k)\n{\n\tint i, m=1000000001, st;\n\tint t;\n\n\tif(f - s == 1)\n\t{\n\t\treturn 1;\n\t}\n\n\tfor(i=s; i<f; i++)\n\t{\n\t\tif(m > P[i])\n\t\t\tm = P[i];\n\t}\n\n\tfor(i=s, st = -1, t = 0; i<f; i++)\n\t{\n\t\tif(P[i] > m && st == -1)\n\t\t\tst = i;\n\t\tif(P[i] <= m && st != -1)\n\t\t{\n\t\t\tt += find(st, i, m);\n\t\t\tst = -1;\n\t\t}\n\t}\n\n\tif(st != -1)\n\t\tt += find(st, f, m);\n\n\tprintf(\"%d %d %d\\n\", s, f, t);\n\t\n\tif(m-k+t < f-s)\n\t\treturn m-k+t;\n\telse\n\t\treturn f-s;\n}\n\nint main()\n{\n\t//FILE *input;\n\t//input = fopen(\"fence.in\", \"r\");\n\tint i, j, t;\n\tchar c;\n\t\n\t//fscanf(input, \"%d\\n\", &N);\n\tscanf(\"%d\\n\", &N);\n\t\n\tfor(i=0; i<N; i++)\n\t{\n\t\t//fscanf(input, \"%d%c\", &j, &c);\n\t\tscanf(\"%d%c\", &j, &c);\n\t\tP[i] = j;\n\t}\n\t\n\tprintf(\"%d\\n\", find(0, N, 0));\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint P[10000];\nint A, N;\n\nint find(int s, int f, int k)\n{\n\tint i, m=1000000001, st;\n\tint t;\n\n\tif(f - s == 1)\n\t{\n\t\treturn 1;\n\t}\n\n\tfor(i=s; i<f; i++)\n\t{\n\t\tif(m > P[i])\n\t\t\tm = P[i];\n\t}\n\n\tfor(i=s, st = -1, t = 0; i<f; i++)\n\t{\n\t\tif(P[i] > m && st == -1)\n\t\t\tst = i;\n\t\tif(P[i] <= m && st != -1)\n\t\t{\n\t\t\tt += find(st, i, m);\n\t\t\tst = -1;\n\t\t}\n\t}\n\n\tif(st != -1)\n\t\tt += find(st, f, m);\n\n\t//printf(\"%d %d %d\\n\", s, f, t);\n\t\n\tif(m-k+t < f-s)\n\t\treturn m-k+t;\n\telse\n\t\treturn f-s;\n}\n\nint main()\n{\n\t//FILE *input;\n\t//input = fopen(\"fence.in\", \"r\");\n\tint i, j, t;\n\tchar c;\n\t\n\t//fscanf(input, \"%d\\n\", &N);\n\tscanf(\"%d\\n\", &N);\n\t\n\tfor(i=0; i<N; i++)\n\t{\n\t\t//fscanf(input, \"%d%c\", &j, &c);\n\t\tscanf(\"%d%c\", &j, &c);\n\t\tP[i] = j;\n\t}\n\t\n\tprintf(\"%d\\n\", find(0, N, 0));\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.8542024013722127, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7d484e09e4626f48d442439d05dda940", "bug_code_uid": "ef175a0e594b7a6fc87651370849282d", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "4b6cdd766c093623f8fbb16d1e1c585d", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint hamount,jamount,a,lasta=1;\n\tlong int s=0;\n\tscanf(\"%d %d\",&hamount,&jamount);\n\tfor(int i=0;i<jamount;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tif(a!=lasta)\n\t\t{\n\t\t\twhile(a<lasta) a+=hamount;\n\t\t\ts+=a-lasta;\n\t\t\tlasta=a;\n\t\t}\n\t}\n\tprintf(\"%ld\\n\",s );\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint hamount,jamount,a,lasta=1;\n\tunsigned long long int s=0;\n\tscanf(\"%d %d\",&hamount,&jamount);\n\tfor(int i=0;i<jamount;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tif(a!=lasta)\n\t\t{\n\t\t\tif(lasta>a)s+=a+hamount-lasta;\n\t\t\telse s+=a-lasta;\n\t\t\tlasta=a;\n\t\t}\n\t}\n\tprintf(\"%llu\\n\",s);\n\treturn 0;\n}"}
{"similarity_score": 0.8582089552238806, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "61c6500a5e5f4aba8018dfe86703778d", "bug_code_uid": "ce9de998cb1ee9ed4aba49d08f8c4894", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "2a17897f29e082a6f48a32f55fa073a4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n\tchar *string;\n\tint n, i, x;\n\tx = 0;\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; ++i) {\n        scanf(\"%s\", string);\n        if(string[1] == '+')\n        \t++x;\n        else\n        \t--x;\n\t}\n\tprintf(\"%d\\n\", x);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    char string[4];\n    int n, i, x;\n    x = 0;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; ++i) {\n    \tscanf(\"%s\", string);\n        if(string[1] == '+')\n        \t++x;\n        else\n        \t--x;\n\t}\n\tprintf(\"%d\\n\", x);\n}"}
{"similarity_score": 0.13166855845629966, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "e167c4e99080109262ff26966b262092", "bug_code_uid": "343551a50b6e0e59df57b8f95c3d01dc", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "c7b6537a03532d0ec0bafe779d24d6d9", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,x,count=0;\n    scanf(\"%d%d\",&n,&x);\n    int a[n];\n    for (int i = 0; i <n ; ++i) {\n        scanf(\"%d\",&a[i]);\n    }\n    for (int j = 0; j <n ; ++j) {\n        if(a[j]>0)\n        {\n            x+=a[j];\n        } else\n        {\n            if(x<abs(a[j]))\n            {\n                count++;\n                continue;\n            }\n            x+=a[j];\n        }\n\n    }\n    printf(\"%d  %d\",x,count);\n\n\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    long long int x,d,c=0;\n    char a;\n    scanf(\"%d %lld\",&n,&x);\n    while(n--)\n    {\n        scanf(\" %c%lld\",&a,&d);\n        if(a=='+')\n        {\n            x=x+d;\n        }\n        else\n        {\n            if(x>=d)\n            {\n                x=x-d;\n            }\n            else\n                c++;\n        }\n    }\n    printf(\"%lld %lld\",x,c);\n    return 0;\n}"}
{"similarity_score": 0.9977011494252873, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c6baede5d1a642a2f07d6432cd6b3d9a", "bug_code_uid": "7253e18b6bf1a8d23e1ff5fbded15160", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "afe163616c2c9404ec66c4675923d5d8", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n\tint t, l, r, i;\n\t\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\t\n\t\tscanf(\"%d %d\", &l, &r);\n\t\t{\n\t\t\tif (2*l > r)\n\t\t\t\tprintf(\"-1 -1\\n\");\n\t\t\telse if(2*l < r)\n\t\t\t\tprintf(\"%d %d\\n\", l, 2 * l);\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nvoid main()\n{\n\tint t, l, r, i;\n\t\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\t\n\t\tscanf(\"%d %d\", &l, &r);\n\t\t{\n\t\t\tif (2*l > r)\n\t\t\t\tprintf(\"-1 -1\\n\");\n\t\t\telse if(2*l <= r)\n\t\t\t\tprintf(\"%d %d\\n\", l, 2 * l);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.96248382923674, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3af7768e236ca8abf8af4a52ebb7cd56", "bug_code_uid": "def8ea9265c6141278b776c4ed1d6e38", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "679f5a53de22c784732b73f3ff465d83", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nmain()\n{\n\tint n,m,i,j,x,max,maxz;\n\t\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tint p[n];\n\t\n\tfor(i=0;i<n;i++) p[i]=0;\n\t\n\tfor(i=0;i<m;i++)\n\t{\n\t\tmax=0;\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\t\n\t\t\tif(x>max)\n\t\t\t{\n\t\t\t\tmax=x;\n\t\t\t\tmaxz=j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tp[maxz]++;\n\t}\n\t\n\tmax=0;\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(p[i]>max)\n\t\t{\n\t\t\tmax=p[i];\n\t\t\tmaxz=i;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",maxz+1);\n}", "fixed": "#include<stdio.h>\n\nmain()\n{\n\tint n,m,i,j,x,max,maxz;\n\t\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tint p[n];\n\t\n\tfor(i=0;i<n;i++) p[i]=0;\n\t\n\tfor(i=0;i<m;i++)\n\t{\n\t\tmax=0;\n\t\tmaxz=0;\n\t\t\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\t\n\t\t\tif(x>max)\n\t\t\t{\n\t\t\t\tmax=x;\n\t\t\t\tmaxz=j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tp[maxz]++;\n\t}\n\t\n\tmax=p[0];\n\tmaxz=0;\n\t\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(p[i]>max)\n\t\t{\n\t\t\tmax=p[i];\n\t\t\tmaxz=i;\n\t\t}\n\t}\n\t\n\t\n\tprintf(\"%d\",maxz+1);\n}"}
{"similarity_score": 0.8439635535307517, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4dfed7873ecfa46f955fbabed1f19cf5", "bug_code_uid": "885f9c20c06db7e0d35a94941a8443b1", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "0abc410a95c1578a120fbbb70ebc1fe4", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main () {\r\n    \r\n    int t;\r\n    scanf (\"%d\", &t);\r\n\r\n    while (t--) {\r\n\r\n        int s, ans = 0;\r\n        scanf (\"%d\", &s);\r\n\r\n        for (int i = 1;s != 0; i++) {\r\n            switch (s) {\r\n\t            case 1: printf (\"%d\\n\", ans + 2);\r\n\t                    s-=1;\r\n\t                    break;\r\n\t            case 2: printf (\"%d\\n\", ans + 1);\r\n\t                    s-=2;\r\n\t                    break;\r\n                case 3: printf (\"%d\\n\", ans + 1);\r\n                        s-=3;\r\n                        break;\r\n                case 4: printf (\"%d\\n\", ans + 2);\r\n                        s-=4;\r\n                        break;\r\n                default: {\r\n                    ans= s/3;\r\n                    s%=3;\r\n                    if(s==0) printf(\"%d\\n\",ans);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main () {\r\n    \r\n    int t;\r\n    scanf (\"%d\", &t);\r\n\r\n    while (t--) {\r\n\r\n        int s, ans = 0;\r\n        scanf (\"%d\", &s);\r\n\r\n        for (int i = 1;s != 0; i++) {\r\n            switch (s) {\r\n\t            case 1: printf (\"%d\\n\", ans + 2);\r\n\t                    s-=1;\r\n\t                    break;\r\n\t            case 2: printf (\"%d\\n\", ans + 1);\r\n\t                    s-=2;\r\n\t                    break;\r\n                case 3: printf (\"%d\\n\", ans + 1);\r\n                        s-=3;\r\n                        break;\r\n                case 4: printf (\"%d\\n\", ans + 2);\r\n                        s-=4;\r\n                        break;\r\n                default: {\r\n                    s-=4;\r\n                    ans= s/3;\r\n                    s=4;\r\n                    //if(s==0) printf(\"%d\\n\",ans);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9219653179190751, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "986d9aa9a5c5596bbe03ef77caeeedbc", "bug_code_uid": "3e700e1919b124289ed0e9bfeee3b064", "src_uid": "c5ec8b18c39720098f6ac2dbc0ddd4f4", "apr_id": "916cae0a2d98812d760c1102e8265cf0", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint a[5000001]={'\\0'},cnt[5000001]={0};\r\nint main()\r\n{\r\n\tint n,x,i;\r\n\tscanf(\"%d %d\",&n,&x);\r\n\t\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tif(a[i]<x) cnt[a[i]]++;\r\n\t}\r\n\tfor(i=1;i<m;i++){\r\n\t\tif(cnt[i]%i){\r\n\t\t\tprintf(\"No\");break;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tcnt[i+1]+=cnt[i]/i;\r\n\t\t}\r\n\t}\r\n\tif(i==m) printf(\"Yes\");\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint a[5000001]={'\\0'},cnt[5000001]={0};\r\nint main()\r\n{\r\n\tint n,x,i;\r\n\tscanf(\"%d %d\",&n,&x);\r\n\t\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tif(a[i]<x) cnt[a[i]]++;\r\n\t}\r\n\tfor(i=1;i<x;i++){\r\n\t\tif(cnt[i]%(i+1)){\r\n\t\t\tprintf(\"No\");break;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tcnt[i+1]+=cnt[i]/(i+1);\r\n\t\t}\r\n\t}\r\n\tif(i==x) printf(\"Yes\");\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9981884057971014, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "50cb54e5b0f4e8de28a8514c0f20a10f", "bug_code_uid": "5526f437b8792581c469681a63a53a4d", "src_uid": "b1f78130d102aa5f425e95f4b5b3a9fb", "apr_id": "d60076bcfa7807d071caab24e7b9e8ea", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint A[100], B[100];\nchar team1[22], team2[22];\n\nint main() {\n\tint n, min, number;\n\tchar a, b;\n\tscanf(\"%s %s %d\", team1, team2, &n);\n\twhile (n--) {\n\t\tscanf(\"%d %c %d %c\", &min, &a, &number, &b);\n\t\tif (a == 'h') {\n\t\t\tA[number] += (b == 'y' ? 1 : 2);\n\t\t\tif (A[number] >= 2) {\n\t\t\t\tprintf(\"%s %d %d\\n\", team2, number, min);\n\t\t\t\tA[number] = -1000; // mark \n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tB[number] += (b == 'y' ? 1 : 2);\n\t\t\tif (B[number] >= 2) {\n\t\t\t\tprintf(\"%s %d %d\\n\", team2, number, min);\n\t\t\t\tB[number] = -1000; // mark \n\t\t\t}\t\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint A[100], B[100];\nchar team1[22], team2[22];\n\nint main() {\n\tint n, min, number;\n\tchar a, b;\n\tscanf(\"%s %s %d\", team1, team2, &n);\n\twhile (n--) {\n\t\tscanf(\"%d %c %d %c\", &min, &a, &number, &b);\n\t\tif (a == 'h') {\n\t\t\tA[number] += (b == 'y' ? 1 : 2);\n\t\t\tif (A[number] >= 2) {\n\t\t\t\tprintf(\"%s %d %d\\n\", team1, number, min);\n\t\t\t\tA[number] = -1000; // mark \n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tB[number] += (b == 'y' ? 1 : 2);\n\t\t\tif (B[number] >= 2) {\n\t\t\t\tprintf(\"%s %d %d\\n\", team2, number, min);\n\t\t\t\tB[number] = -1000; // mark \n\t\t\t}\t\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9758812615955473, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "82e4c032ea5a63804220a821fc7aeeb0", "bug_code_uid": "6db12cc2bb5f0c9200f12b9a2d3ad0ff", "src_uid": "1cd295e204724335c63e685fcc0708b8", "apr_id": "1119b3f698d9e890a36d7acd738460e5", "difficulty": 1400, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int i,n;\n     long long int c=0,a,b;\n    scanf(\"%d\",&n);\nscanf( \"%I64d\",&a);\n\n        for(i=0;i<n-1;i++)\n        {scanf( \"%I64d\",&b);\n            if(b<a)\n{   c=c+a-b;\n    a=b;}\n       }\n       printf(\"%I64d\",c);\n\nreturn 0;\n\n\n    }\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int i,n;\n     long long int c=0,a,b;\n    scanf(\"%d\",&n);\nscanf( \"%I64d\",&a);\n\n        for(i=0;i<n-1;i++)\n        {scanf( \"%I64d\",&b);\n            if(b<a)\n{   c=c+a-b;\n    }\n    a=b;\n       }\n       printf(\"%I64d\",c);\n\nreturn 0;\n\n\n    }\n"}
{"similarity_score": 0.3708609271523179, "equal_cnt": 21, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "f88419c606a78be8771120149d4ade06", "bug_code_uid": "9e92a43a94e6c20cfdda8e138c6bcea8", "src_uid": "45e51f3dee9a22cee86e1a98da519e2d", "apr_id": "d369125576d3a198da2fcbc0e749884b", "difficulty": 800, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nunsigned char str[1000000001]={};\nint arr[1000009]={};\nint main()\n{\n    int n,count=0,a,l=0,i;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n\tscanf(\"%d\",&a);\n\tif(a!=0)\n\t{\n\t    str[a]++;\n\t    arr[l]=a;\n\t    l++;\n\t}\n    }\n    int flag=0;\n    for(i=0; i<l; i++)\n    {\n\tif(str[arr[i]]==2)\n\t    count++;\n\telse if(str[arr[i]]!=1)\n\t{\n\t    flag=1;\n\t    break;\n\t}\n    }\n    if(flag==0)\n\tprintf(\"%d\\n\",count/2);\n    else\n\tprintf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct ll\n{\n    int a;\n    int f;\n}node;\nint compmi(const void *m1, const void *m2)\n{\n    struct ll *mi1 = (struct ll *) m1;\n    struct ll *mi2 = (struct ll *) m2;\n    return mi1->a-mi2->a;\n}\nint main()\n{\n    node arr[1009];\n    int n,i,a,l=0;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n\tscanf(\"%d\",&a);\n\tif(l==0)\n\t{\n\t    arr[l].a=a;\n\t    arr[l].f=1;\n\t    l=1;\n\t}\n\telse\n\t{\n\t    node key, *res;\n\t    key.a=a;\n\t    res=bsearch(&key,arr,l,sizeof(node),compmi);\n\t    if(res==NULL)\n\t    {\n\t\tarr[l].a=a;\n\t\tarr[l].f=1;\n\t\tl++;\n\t    }\n\t    else\n\t\tres->f++;\n\t}\n\tqsort(arr,l,sizeof(node),compmi);\n    }\n    int flag=0,count=0;\n    for(i=0; i<l; i++)\n    {\n\tif(arr[i].a!=0)\n\t{\n\t    if(arr[i].f>2)\n\t    {\n\t\tflag=1;\n\t\tbreak;\n\t    }\n\t    else if(arr[i].f==2)\n\t    {\n\t\tcount++;\n\t    }\n\t}\n    }\n    if(flag==1)\n\tprintf(\"-1\\n\");\n    else\n\tprintf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.46875, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "ae6f44f22a87c7b6455b85f18f6d42c6", "bug_code_uid": "d54ada4980fbc9aed82197d912331c4f", "src_uid": "128d9ad5e5dfe4943e16fcc6a103e51b", "apr_id": "7e2c514a12457f37a47ae45434abd64e", "difficulty": 900, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,cnt=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n],i,j;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\t}\r\n\t\tif(arr[0]==1)\r\n\t\t{\r\n\t\t\tfor(i=1;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tcnt+=arr[i]-1;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(i=1;i<n;i++)\r\n\t\t    {\r\n\t\t\t    while(arr[i]>=arr[0]*2)\r\n\t\t\t    {\r\n\t\t\t\t    arr[i]=arr[i]-(arr[0]*2-1);\r\n\t\t\t\t    cnt++;\r\n\t\t\t    }\r\n\t\t    }\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\",cnt);\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tint t,n,i,cnt,a[200];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tcnt=0;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]<a[0]*2)\r\n\t\t\t\tcontinue;\r\n\t\t\telse if(a[i]%(a[0]*2-1)==0)\r\n\t\t\t\tcnt+=(a[i]/(a[0]*2-1))-1;\r\n\t\t\telse\r\n\t\t\t\tcnt+=a[i]/(a[0]*2-1);\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",cnt);\r\n\t}\r\n}"}
{"similarity_score": 0.8358778625954199, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "633efad01e49277ccac9d919ce188691", "bug_code_uid": "117944e89d179ce011d6beb731163d91", "src_uid": "7d774a003d2e3e8ae6fe1912b3998c96", "apr_id": "5ef0d7bac038c84299e73308dbff8664", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t, m, n, i;\r\n    long long int r;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n, &m);\r\n        r=(m*(m+1)/2)+((n*(n+1)/2)*m-m);\r\n        puts(\"\");\r\n        printf(\"%lld\",r);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    long long int t, m, n, i, r;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lld%lld\",&n, &m);\r\n        r=(m*(m+1)/2)+((n*(n+1)/2)*m-m);\r\n        printf(\"%lld\\n\",r);\r\n    }\r\n}"}
{"similarity_score": 0.9884169884169884, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "90714db331788ece634ac7cdbff340a3", "bug_code_uid": "81c91e138ce8fe1f6bfbcd6bf2fe9354", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "521f37982ae9e9955e1159906677b5a6", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nint main(void) {\nint n,m,i,j,k;\nchar s[100005];\nscanf(\"%s\",s);\nfor(n=0;s[n]!='\\0';++n);\n\nint prev=-1;\nfor(i=0;i<n;++i){\n    if((s[i]-'0')%2==0) {\n        if(s[i]<s[n-1]){\n            k=s[n-1];\n            s[n-1]=s[i];\n            s[i]=k;\n            printf(\"%s\\n\",s);\n            return 0;\n        }else prev=i;\n    }\n}\nif(prev!=-1){\n\n        k=s[n-1];\n            s[n-1]=s[i];\n            s[i]=k;\n                printf(\"%s\\n\",s);\n            return 0;\n}else printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\nint n,m,i,j,k;\nchar s[100005];\nscanf(\"%s\",s);\nfor(n=0;s[n]!='\\0';++n);\n\nint prev=-1;\nfor(i=0;i<n;++i){\n    if((s[i]-'0')%2==0) {\n        if(s[i]<s[n-1]){\n            k=s[n-1];\n            s[n-1]=s[i];\n            s[i]=k;\n            printf(\"%s\\n\",s);\n            return 0;\n        }else prev=i;\n    }\n}\nif(prev!=-1){\n    i=prev;\n        k=s[n-1];\n            s[n-1]=s[i];\n            s[i]=k;\n                printf(\"%s\\n\",s);\n            return 0;\n}else printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9896551724137931, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0e387aa66466572f98baec78f0144153", "bug_code_uid": "1efc9a867fafdb4c49a786d414f17a02", "src_uid": "d43d4fd6c1e2722da185f34d902ace97", "apr_id": "ad913f6b0464a183aa05bceeddc883f6", "difficulty": 1600, "tags": ["data structures", "constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdio.h>\n#include <math.h>\nint main(){\n    int t;\n    long long int sum=0;\n    scanf(\"%d\",&t);\n    int a[200005]={0},top=(1),ss=0,b[200005]={0};\n    while (t) {\n        int n,num=0;\n        scanf(\"%d\",&n);\n        if(n==1){\n            int k,kk;\n            scanf(\"%d %d\",&kk,&k);\n            kk=top<kk?top:kk;\n            sum+=(k*kk);\n            a[kk]+=k;\n        }\n        else if(n==2){\n            int k;\n            scanf(\"%d\",&k);\n            sum+=k;\n            top++;\n            b[top]=k;\n        }\n        else{\n            if(top>0){\n                ss+=a[top];\n                sum-=(ss+b[top]);\n                a[top-1]=a[top]\n                a[top]=0;\n                b[top]=0;\n                top--;\n            }\n        }\n        t--;\n        printf(\"%lf\\n\",(double)sum/(double)top);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdio.h>\n#include <math.h>\nint main(){\n    int t;\n    long long int sum=0;\n    scanf(\"%d\",&t);\n    int a[200005]={0},top=(1),ss=0,b[200005]={0};\n    while (t) {\n        int n,num=0;\n        scanf(\"%d\",&n);\n        if(n==1){\n            int k,kk;\n            scanf(\"%d %d\",&kk,&k);\n            kk=top<kk?top:kk;\n            sum+=(k*kk);\n            a[kk]+=k;\n        }\n        else if(n==2){\n            int k;\n            scanf(\"%d\",&k);\n            sum+=k;\n            top++;\n            b[top]=k;\n        }\n        else{\n            if(top>0){\n                ss=a[top];\n                sum-=(ss+b[top]);\n                a[top-1]+=a[top];\n                a[top]=0;\n                b[top]=0;\n                top--;\n            }\n        }\n        t--;\n        printf(\"%lf\\n\",(double)sum/(double)top);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9802631578947368, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "8e2b126216743fe6dd167ab6a578bd55", "bug_code_uid": "2da8427b7744ce287b0fd35ae677154e", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "fd2074c9f49258ae7936525742732538", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tlong t;\n\tscanf(\"%ld\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tlong n;\n\t\tscanf(\"%ld\", &n);\n\t\tif (n < 2) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\twhile (n % 2 == 0) {\n\t\t\tn = n/2;\n\t\t}\n\t\tif (n == 1) {\n\t\t\tprintf(\"NO\\n\");\n\t\t} else {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tlong long t;\n\tscanf(\"%lld\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tlong long n;\n\t\tscanf(\"%lld\", &n);\n\t\tif (n < 2) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\twhile (n % 2 == 0) {\n\t\t\tn = n/2;\n\t\t}\n\t\tif (n == 1) {\n\t\t\tprintf(\"NO\\n\");\n\t\t} else {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6814671814671814, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9a1ef277f8331683662d99261d13c3dd", "bug_code_uid": "edc92b4d840ae87103832261cb3f7972", "src_uid": "16c016c0735be1815c7b94c5c50516f1", "apr_id": "9e7af1e4b2d787acda3821aee7bfc00b", "difficulty": 1700, "tags": ["dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long t, k, i;\n    scanf(\"%ld %ld\", &t, &k);\n    long long int dpArr[100001];\n    for (i = 0; i <= 100000; i++){\n        if (i < k) dpArr[i] = 1;\n        else dpArr[i] = (dpArr[i-1] + dpArr[i-k]) % 1000000007;\n    }\n    while (t--){\n        long a, b;\n        scanf(\"%ld %ld\", &a, &b);\n        long long int sum = 0;\n        for (i = a; i <= b; i++) sum = (sum + dpArr[i]) % 1000000007;\n        printf(\"%ld\\n\", sum);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long t, k, i;\n    scanf(\"%ld %ld\", &t, &k);\n    long long int dpArr[100001];\n    for (i = 0; i <= 100000; i++){\n        if (i < k) dpArr[i] = 1;\n        else dpArr[i] = (dpArr[i-1] + dpArr[i-k]) % 1000000007;\n    }\n    dpArr[0] = 0;\n    for (i = 2; i <= 100000; i++) dpArr[i] = (dpArr[i] + dpArr[i-1]) % 1000000007;\n    while (t--){\n        long a, b;\n        scanf(\"%ld %ld\", &a, &b);\n        printf(\"%ld\\n\", (dpArr[b] - dpArr[a-1] + 1000000007) % 1000000007);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9121756487025948, "equal_cnt": 11, "replace_cnt": 0, "delete_cnt": 10, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9e018f13aed2338ae57c4bea7f906869", "bug_code_uid": "1ba62b9bd9a7d58a5a602593bedd4f44", "src_uid": "10d6179b479e1238a51154a9a6fc13cb", "apr_id": "7c8f4db1ff7dbe580001dde375820785", "difficulty": 1400, "tags": ["bitmasks", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nFILE *in = stdin;\nFILE *out = stdout;\nint main() {\n    int n,k;\n    fscanf(in, \"%d %d\", &n, &k);\n    int A[k+1];\n    for(int i=0;i<k;i++){\n        A[i] = 1;\n    }\n    int sum = k;\n    for(int i=k-1;i>=0;i--){\n        while(sum + A[i] <= n){\n            sum += A[i];\n            A[i] *= 2;\n        }\n    }\n    if(sum!=n) {\n        fprintf(out, \"NO\");\n    }\n    else{\n        fprintf(out, \"YES\\n\");\n        for(int i=0;i<k;i++){\n            fprintf(out, \"%d \", A[i]);\n        }\n        fprintf(out, \"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n    int n,k;\n    scanf(\"%d %d\", &n, &k);\n    int A[k+1];\n    for(int i=0;i<k;i++){\n        A[i] = 1;\n    }\n    int sum = k;\n    for(int i=k-1;i>=0;i--){\n        while(sum + A[i] <= n){\n            sum += A[i];\n            A[i] *= 2;\n        }\n    }\n    if(sum!=n) {\n        printf(\"NO\");\n    }\n    else{\n        printf(\"YES\\n\");\n        for(int i=0;i<k;i++){\n            printf(\"%d \", A[i]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2522851919561243, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "a9bc706150f968d94a3393f1f48e7d47", "bug_code_uid": "79ddd0a2c59dc31874116b56ecfe8378", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "1ccb3e38688f0113d08e9a4b788e7dee", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar  a[101];\nint m=0;\nstruct trie\n{\n    int info;\n    struct trie *next[2];\n};\nstruct trie *getnode();\nstruct trie *root=NULL;\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",a);\n        trie(root,n);\n    }\n    printf(\"%d\",m);\n    return 0;\n}\nvoid trie(struct trie *p,int l)\n{\n    int i;\n    if(p==NULL)\n        root=p=getnode();\n    for(i=0;i<l;i++)\n    {\n        if(p->next[a[i]-48]==NULL)\n            p->next[a[i]-48]=getnode();\n        p=p->next[a[i]-48];\n    }\n    p->info++;\n    if(p->info>m)\n        m=p->info;\n}\nstruct trie *getnode()\n{\n    struct trie *p;\n    p=(struct trie *)malloc(sizeof(struct trie ));\n    p->next[0]=p->next[1]=NULL;\n    p->info=0;\n};\n", "fixed": "#include<stdio.h>\nchar  s[100][101];\nint m=0;\nint main()\n{\n    int n,i,j,c;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%s\",s[i]);\n    for(i=0;i<n;i++)\n    {\n        c=0;\n        for(j=i+1;j<n;j++)\n        {\n            if(!strcmp(s[i],s[j]))\n                c++;\n        }\n        if(c>m)\n            m=c;\n    }\n    printf(\"%d\",m+1);\n    return 0;\n}\n"}
{"similarity_score": 0.9272727272727272, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f6a87c2b013cf8117700c4f521186448", "bug_code_uid": "12eb4b68bff8e23fee5ca5d52d7ce004", "src_uid": "ef2b90d5b1073430795704a7df748ac3", "apr_id": "5e19d0f9ed6fbeb9391aab9831581572", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "implementation", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <unistd.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\nint check(char *s1, char *s2,int len)\n{\n\tint i = 0;\n\tint res = 0;\n\twhile(i < len)\n\t{\n\t\tres += abs(s1[i] - s2[i]);\n\t\ti++;\n\t}\n\treturn(res);\n\t\n}\nint mini(int a,int b)\n{\n\tif(a > b)\n\t\treturn(b);\n\telse \n\t\treturn(a);\n}\nint main()\n{\n\tint cas;\n\tint x;\n\tint len;\n\tint i;\n\tint j;\n\tint res;\n\tchar str1[7];\n\tchar str2[7];\n\n\tscanf(\"%d\\n\", &cas);\n\twhile (cas)\n\t{\n\t\tscanf(\"%d \", &x);\n\t\tscanf(\"%d\", &len);\n\t\tint min = 0;\n\t\tchar array[x][len + 1];\n\t\tfor(int i = 0;i < x ;i++)\n\t\t\tscanf(\"%s\",array[i]);\n\t\tfor(int i = 0;i < x ;i++)\n\t\t{\n\t\t\tfor(int y = i + 1;y < x;y++)\n\t\t\t{\n\t\t\t\tif(min == 0)\n\t\t\t\t\tmin = check(array[i],array[y],len);\n\t\t\t\telse\n\t\t\t\t\tmin = mini(min,check(array[i],array[y],len));\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",min);\n\t\tcas--;\n\t}\n\treturn (res);\n}", "fixed": "#include <unistd.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\nint check(char *s1, char *s2,int len)\n{\n\tint i = 0;\n\tint res = 0;\n\twhile(i < len)\n\t{\n\t\tres += abs(s1[i] - s2[i]);\n\t\ti++;\n\t}\n\treturn(res);\n\t\n}\nint mini(int a,int b)\n{\n\tif(a > b)\n\t\treturn(b);\n\telse \n\t\treturn(a);\n}\nint main()\n{\n\tint cas;\n\tint x;\n\tint len;\n\tint i;\n\tint j;\n\tint res;\n\tchar str1[7];\n\tchar str2[7];\n\n\tscanf(\"%d\\n\", &cas);\n\twhile (cas)\n\t{\n\t\tscanf(\"%d \", &x);\n\t\tscanf(\"%d\", &len);\n\t\tint min = 1000000;\n\t\tchar array[x][len + 1];\n\t\tfor(int i = 0;i < x ;i++)\n\t\t\tscanf(\"%s\",array[i]);\n\t\tfor(int i = 0;i < x ;i++)\n\t\t{\n\t\t\tfor(int y = i + 1;y < x;y++)\n\t\t\t{\n\t\t\t\tmin = mini(min,check(array[i],array[y],len));\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",min);\n\t\tcas--;\n\t}\n}"}
{"similarity_score": 0.18564593301435406, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "ec074262acceb079f0c0950b88790b10", "bug_code_uid": "adfc76afed7c72581ced3d4b545ba178", "src_uid": "e094a3451b8b28be90cf54a4400cb916", "apr_id": "cce77e1028e91093f9b95c888cc0255f", "difficulty": 1400, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n#include <math.h>\n#include <string.h>\n#include <algorithm>\n#include <queue>\n#define ll long long\nusing namespace std;\nconst ll maxn=2e6+10;\nchar s[maxn]; \nint main()\n{\n\tll i,j,k,n,m,t;\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tll n,p;\n\t\tcin>>n;\n\t\tcin>>cin+1;\n\t\tll sum=0;\n\t\tfor (i=1;i<=n;i++)\n\t\tif (s[i]=='*')\n\t\tsum++;\n\t\t\n\t\tsum=(sum+1)/2;\n\t\tll l=0,pos=0;\n\t\tfor (i=1;i<=n;i++)\n\t\t{\n\t\t\tif (s[i]=='*')\n\t\t\tl++;\n\t\t\tif (l==sum)\n\t\t\t{\n\t\t\t\tpos=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tll ans=0;\n\t\tl=0;\n\t\tfor (i=1;i<=n;i++)\n\t\tif(s[i]=='*')\n\t\t{\n\t\t\tl++;\n\t\t\tans+=(fabs(pos-i)-fabs(sum-l));//?\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\t\n\treturn 0;\n}\n\n\n\n \t\t  \t\t\t\t \t\t\t \t\t   \t\t \t      \t\t", "fixed": "#include<math.h>\n#include<stdio.h>\n#include<string.h>\nlong long ans;\nchar a[1010101];\nint i,l,t,n,k,b[1010101];\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tans=k=0;\n\t\tmemset(b,0,sizeof(b));\n\t\tscanf(\"%d\\n%s\",&n,a);\n\t\tfor(i=0;i<n;i++)\n\t\t\tif(a[i]=='*')\n\t\t\t\tb[++k]=i;\n\t\tl=(k+1)/2;\n\t\tfor(i=1;i<=k;i++)\n\t\t\tans+=abs(b[l]-b[i])-abs(l-i);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\t\t    \t\t    \t\t\t\t \t\t\t\t\t \t  \t\t"}
{"similarity_score": 0.9529824561403509, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2c06122171656c49cce1d0c5c4145dcc", "bug_code_uid": "033cb58d91cc8b86ad6f49cb3e7791b5", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "61a323e900c14867805bf35e0155bbef", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    long long int a[100000], b[100000];\n    long long int n, i, max1=0, max2=0, sum=0;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &a[i]);\n    }\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &b[i]);\n    }\n    if(n==2){\n            printf(\"YES\");\n    }else{\n        for(i=0; i<n; i++){\n            sum+=a[i];\n            if(b[i]>= max1){\n                max2=max1;\n                max1=b[i];\n            }else if(b[i]> max2){\n                max2=b[i];\n            }\n        }\n        if(sum <= (max1+max2)){\n            printf(\"YES\");\n        }else{\n            printf(\"NO\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    long long int a[100000], b[100000];\n    long long int n, i, max1=0, max2=0, sum=0;\n    for(i=0; i<100000; i++){\n        a[i]=0;\n        b[i]=0;\n    }\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &a[i]);\n    }\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &b[i]);\n    }\n    if(n==2){\n            printf(\"YES\");\n    }else{\n        for(i=0; i<n; i++){\n            sum+=a[i];\n            if(b[i]>= max1){\n                max2=max1;\n                max1=b[i];\n            }else if(b[i]> max2){\n                max2=b[i];\n            }\n        }\n        if(sum <= (max1+max2)){\n            printf(\"YES\");\n        }else{\n            printf(\"NO\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9258589511754068, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b373caf324e2428532ba9cf9e58100e4", "bug_code_uid": "9e3f0c60215712430a9c6fbff16774fe", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "769f8f07ceea497b8029551f452f58e4", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n \nint main()\n{\nint y,k,n,s,x=0,z=0,i;\nscanf(\"%d %d %d\",&y,&k,&n);\ns=y/k;\nfor(i=y+1 ; i<=n ;i++)\n{\n    if (i==(s+1)*k)\n    x=i-y ;\n}\nwhile (x <= n-y && x!=0)\n{\n    printf(\"%d \",x);\n    x=x+k ;\n    z=1;\n}\nif(z==0)\nprintf(\"-1\");\nreturn 0 ;\n}", "fixed": "#include<stdio.h>\n \nint main()\n{\nint y,k,n,s,x=0,z=0,i;\nscanf(\"%d %d %d\",&y,&k,&n);\ns=y/k;\nfor(i=y+1 ; i<=n ;i++)\n{\n    if (i==(s+1)*k)\n    {\n        x=i-y ;\n        break ;\n        \n    }\n}\nwhile (x <= n-y && x!=0)\n{\n    printf(\"%d \",x);\n    x=x+k ;\n    z=1;\n}\nif(z==0)\nprintf(\"-1\");\nreturn 0 ;\n}"}
{"similarity_score": 0.9325236167341431, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e78e1d98d5a2e590a4b19918678db3cf", "bug_code_uid": "7808155a254bbec7fbf22d7d434a8bb3", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "976b13ccdac0fff09498658e89c2e846", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    double a1=0,b1=0;\n    long long int a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,temp=0;\n    int ara[1000];\n    scanf(\"%lld%lld\",&a,&b);\n    for(c=0;c<a;c++)\n    {\n        scanf(\"%d\",&ara[c]);\n    }\n    for(d=0;d<a;d++)\n    {\n        for(e=d+1;e<a;e++)\n        {\n            if(ara[e]<ara[d])\n            {\n                temp=ara[e];\n                ara[e]=ara[d];\n                ara[d]=temp;\n            }\n        }\n    }\n    for(f=0;f<(a-1);f++)\n    {\n        g=ara[f+1]-ara[f];\n        if(g>h)\n        {\n            h=g;\n        }\n    }\n    b1=h;\n    //printf(\"%d \",b1);\n    a1=b1/2;\n    j=l-ara[a-1];\n    if(j>a1)\n    {\n        a1=j;\n    }", "fixed": "#include<stdio.h>\nint main()\n{\n    double a1=0,b1=0;\n    long long int a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,temp=0;\n    int ara[1000];\n    scanf(\"%lld%lld\",&a,&b);\n    for(c=0;c<a;c++)\n    {\n        scanf(\"%d\",&ara[c]);\n    }\n    for(d=0;d<a;d++)\n    {\n        for(e=d+1;e<a;e++)\n        {\n            if(ara[e]<ara[d])\n            {\n                temp=ara[e];\n                ara[e]=ara[d];\n                ara[d]=temp;\n            }\n        }\n    }\n    for(f=0;f<(a-1);f++)\n    {\n        g=ara[f+1]-ara[f];\n        if(g>h)\n        {\n            h=g;\n        }\n    }\n    b1=h;\n    //printf(\"%d \",b1);\n    a1=b1/2;\n    j=b-ara[a-1];\n    if(j>a1)\n    {\n        a1=j;\n    }\n    k=ara[0]-0;\n    if(k>a1)\n    {\n        a1=k;\n    }\n    printf(\"%0.10lf\",a1);\n    return 0;\n}\n"}
{"similarity_score": 0.7233766233766233, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "07fcc9898aa0d52be8b1883754e5b03d", "bug_code_uid": "e0f603946b92012ae0cba4fc0397359d", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "6aa69de18b46e7266c03a71e84e67f62", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid swap(int* x,int* y){\n\tint tmp = *x;\n\t*x = *y;\n\t*y = tmp;\n\treturn ;\n}\nint mod(int x,int y){\n\tif(x>y)\n\t\treturn x-y;\n\telse\n\t\treturn y-x;\n}\nint main(){\n\tint i,j,k,l,n,m,ans=0,a[100000],b[100000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(i=n-1;i>0;i--)\n\t\tfor(j=0;j<i;j++)\n\t\t\tif(a[j]>a[j+1])\n\t\t\t\tswap(&a[j],&a[j+1]);\n\tfor(i=m-1;i>0;i--)\n\t\tfor(j=0;j<i;j++)\n\t\t\tif(b[j]>b[j+1])\n\t\t\t\tswap(&b[j],&b[j+1]);\n\tint c;\n\tif(n==1 && m==1)\n\t\tprintf(\"1\\n\");\n\telse{\n\t\twhile(i<n && j<m){\n\t\t\t//printf(\"'%d %d'\",i,j);\n\t\t\tc = mod(a[i],b[i]);\n\t\t\tif(c<=1){\n\t\t\t\tans++;\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a[i]>b[j])\n\t\t\t\t\tj++;\n\t\t\t\telse if(a[i]<b[j])\n\t\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nvoid swap(int* x,int* y){\n\tint tmp = *x;\n\t*x = *y;\n\t*y = tmp;\n\treturn ;\n}\nint mod(int x,int y){\n\tif(x>y)\n\t\treturn x-y;\n\telse\n\t\treturn y-x;\n}\nint main(){\n\tint i,j,k,l,n,m,ans=0,a[100000],b[100000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(i=n-1;i>0;i--)\n\t\tfor(j=0;j<i;j++)\n\t\t\tif(a[j]>a[j+1])\n\t\t\t\tswap(&a[j],&a[j+1]);\n\tfor(i=m-1;i>0;i--)\n\t\tfor(j=0;j<i;j++)\n\t\t\tif(b[j]>b[j+1])\n\t\t\t\tswap(&b[j],&b[j+1]);\n\tint c;\n\t//if(n==1 && m==1)\n\t//\tprintf(\"1\\n\");\n//\telse{\n\t\ti=j=0;\n\t\twhile(i<n && j<m){\n\t\t\tc = mod(a[i],b[j]);\n\t\t\tif(c<=1){\n\t\t\t\tans++;\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a[i]>b[j])\n\t\t\t\t\tj++;\n\t\t\t\telse{\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n//\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.46476190476190476, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "f5ec61e7d1c29a378d1ac095a2a57d01", "bug_code_uid": "16a0181f4318d57b71896095fc713092", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "c1cd40677ac3a7559bbc874da3b6b313", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int i=0;\n    int j=0;\n    int n;\n\n\n    for (i=0;i<t;i++)\n    {  int a[100];\n       scanf(\"%d\",&n);\n\n       for(j=0;j<n;j++)\n       {   int z=j+1;\n           a[j]=pow(2,z);\n       }\n        int max=a[0];\n    int min=a[0];\n\n     for(j=0;j<n;j++)\n   {\n       if(a[j]>max)\n       {\n           max =a[i];\n       }\n       if(a[j]<min)\n       {\n           min = a[i];\n       }\n   }\n   int x = (max+min);\n   int b=0;\n   for(j=0;j<t;j++)\n   {\n       if(a[j]!=max && a[j]!=min)\n       {\n           b= b+ a[j];\n       }\n   }\n   printf(\"%d\\n\",x-b);}\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int i=0;\n    int j=0;\n    int n;\n    for (i=0;i<t;i++)\n    {    scanf(\"%d\",&n);\n        int sum=0;\n        int sums=0;\n        for(j=1;j<n/2;j++)\n        {\n         sum=sum+pow(2,j);\n        }\n        for(j=n/2;j<n;j++)\n        {\n          sums=sums+pow(2,j);\n        }\n     int result=sum+pow(2,n)-sums;\n        printf(\"%d\\n\",result);\n    }\n}"}
{"similarity_score": 0.6638115631691649, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "101397cec35f248671db830837e3e6b3", "bug_code_uid": "ffaf3edeca1600ac9f015a83a4c31143", "src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "apr_id": "a1faa6aa6913249227cc200fb9525f70", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint n,max=0,i;\nfloat b;\nscanf(\"%d %f\",&n,&b);\nint a[100];\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\nmax=max>a[i]?max:a[i];\n}\nfor(i=0;i<n;i++)\n{\na[i]=max-a[i];\nb-=a[i];\n}\nif(b<0)\n{\nprintf(\"-1\");\nreturn 0;\n}\nb/=n;\nfor(i=0;i<n;i++)\nprintf(\"%.6f\\n\",a[i]+b);\nreturn 0;\n}\n#include<stdio.h>\n#include<math.h>\nint main()\n{\nint n,max=0,i;\nfloat b;\nscanf(\"%d %f\",&n,&b);\nint a[100],j=b;\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\nmax=max>a[i]?max:a[i];\n}\nfor(i=0;i<n;i++)\n{\na[i]=max-a[i];\nb-=a[i];\n}\nif(j<0)\n{\nprintf(\"-1\");\nreturn 0;\n}\nb/=n;\nfor(i=0;i<n;i++)\nprintf(\"%.6f\\n\",a[i]+b);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint n,max=0,i;\nfloat b;\nscanf(\"%d %f\",&n,&b);\nint a[100];\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\nmax=max>a[i]?max:a[i];\n}\nfor(i=0;i<n;i++)\n{\na[i]=max-a[i];\nb-=a[i];\n}\nif(b<0)\n{\nprintf(\"-1\");\nreturn 0;\n}\nb/=n;\nfor(i=0;i<n;i++)\nprintf(\"%.6f\\n\",a[i]+b);\nreturn 0;\n}\n"}
{"similarity_score": 0.8851000741289844, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "61880f331ae79366bbb6ea15838fd2b2", "bug_code_uid": "8a86e7b6b6512c64595e730981285c98", "src_uid": "e30085b163c820cff68fb24b94088ec1", "apr_id": "d89ed23bc1ddc869c240da5c6515405f", "difficulty": 1200, "tags": ["data structures", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    char s[200000] = {'\\0'};\n    int i;\n    int l = 0, r = 0;\n    int counter = 0;\n\n    scanf(\"%d\", &n);\n    if(n % 2 != 0)\n    {\n        printf(\"No\");\n        return 0;\n    }\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%c\", s[i]);\n        if(s[i] == '(')\n        {\n            counter--;\n            l++;\n        }\n        else\n        {\n            counter++;\n            r++;\n        }\n        if(counter > 1)\n        {\n            printf(\"No\");\n            return 0;\n        }\n    }\n    if(l != r)\n    {\n        printf(\"No\");\n        return 0;\n    }\n    printf(\"Yes\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    char s[200000] = {'\\0'};\n    int i;\n    int l = 0, r = 0;\n    int counter = 0;\n\n    scanf(\"%d\", &n);\n    if(n % 2 != 0)\n    {\n\n        printf(\"No\");\n        return 0;\n    }\n    getchar();\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%c\", &s[i]);\n        if(s[i] == '(')\n        {\n            counter--;\n            l++;\n        }\n        else if(s[i] == ')')\n        {\n            counter++;\n            r++;\n        }\n\n        if(counter > 1)\n        {\n\n            printf(\"No\");\n            return 0;\n        }\n    }\n    if(l != r)\n    {\n        printf(\"No\");\n        return 0;\n    }\n    printf(\"Yes\");\n    return 0;\n}\n"}
{"similarity_score": 0.9391634980988594, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "41b0fa3848a4d9b5f44727fe6d6e839a", "bug_code_uid": "01435f185412556cbe023400458fcbf8", "src_uid": "2e3006d663a3c7ad3781aba1e37be3ca", "apr_id": "3ff43f3d8b3251527a18d37c9f2a0354", "difficulty": 800, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n  int k, index;\r\n  scanf(\"%d\",&k);\r\n  char a[2];\r\n  for(int i=0;i<k;i++) {\r\n    scanf(\" %s\",a);\r\n    index = (a[0]-97)*25 + (a[1]-96);\r\n    if(a[0]<a[1]) index--;\r\n    printf(\"%d\\n\",index);\r\n  }\r\n  return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n  long long int k, index;\r\n  scanf(\"%lld\",&k);\r\n  char a[k][2];\r\n  for(int i=0;i<k;i++) {\r\n    scanf(\" %s\",a[i]);\r\n    index = (a[i][0]-97)*25 + (a[i][1]-96);\r\n    if(a[i][0]<a[i][1]) index--;\r\n    printf(\"%lld\\n\",index);\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.7363363363363363, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "15f9fa8559e6ff9e79e4826fa8e817fd", "bug_code_uid": "4ca489724c48892ea32c1cfe57add45c", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "ee272d38c98fe44cad87da1940cda925", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <math.h>\r\n\r\n\r\nint calc(int n)\r\n{\r\n    int i = 0;\r\n    for(i = n-1; i >= 0 ; i--)\r\n    {\r\n        n &= i;\r\n        if ( n== 0)\r\n            break;\r\n            \r\n    }\r\n    return i;\r\n}\r\n\r\nint main()\r\n{\r\n    int t = 0;\r\n    int i = 0;\r\n    int* n = NULL;\r\n    int MAX_VAL = 0;\r\n    int k = 0;\r\n    \r\n    MAX_VAL = (int)pow(10, 9);\r\n    \r\n    scanf(\"%d\", &t);\r\n    if( (t > 3000) || (t < 1))\r\n    {\r\n        printf(\"out of range\");\r\n        return 0;\r\n    }\r\n    n = (int*)malloc(sizeof(int)*t);\r\n    memset(n, 0, t);\r\n    \r\n    for ( i = 0 ; i < t ; i++)\r\n    {\r\n        scanf(\"%d\", &n[i]);\r\n        if( ( n[i] > MAX_VAL ) || (n[i] < 1))\r\n        {\r\n            printf(\"out of range\");\r\n            return 0;\r\n            \r\n        }\r\n    }\r\n    for ( i = 0 ; i < t ; i++)\r\n        printf(\"%d\\n\", calc(n[i]));\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n \r\n \r\nint calc(int n)\r\n{\r\n    int result = 0;\r\n    int p = 1;\r\n    while(1)\r\n    {\r\n        n /= 2;\r\n        if (n==0)\r\n            break;\r\n        result+=p;\r\n        p *= 2;\r\n    }\r\n    return result;\r\n}\r\n \r\nint main()\r\n{\r\n    int t = 0;\r\n    int i = 0;\r\n    int* n = NULL;\r\n    int MAX_VAL = 0;\r\n    int k = 0;\r\n    \r\n    MAX_VAL = (int)pow(10, 9);\r\n    \r\n    scanf(\"%d\", &t);\r\n    if( (t > 30000) || (t < 1))\r\n    {\r\n        printf(\"out of range\");\r\n        return 1;\r\n    }\r\n    n = (int*)malloc(sizeof(int)*t);\r\n        \r\n    memset(n, 0, t);\r\n    \r\n    for ( i = 0 ; i < t ; i++)\r\n    {\r\n        scanf(\"%d\", &n[i]);\r\n \r\n    }\r\n    for ( i = 0 ; i < t ; i++)\r\n        printf(\"%d\\n\", calc(n[i]));\r\n    return 0;\r\n}"}
{"similarity_score": 0.4225092250922509, "equal_cnt": 16, "replace_cnt": 7, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "357c271ee5fed65955bf41eaa689b162", "bug_code_uid": "c075082681f017d0aa7051b26c430e8a", "src_uid": "d9d5db63b1e48214d02abe9977709384", "apr_id": "99fd9d2baeb0e84dba70e1c1c03b5c65", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n\t//code\n\tint t; int k;\n\tchar *str = (char*)malloc((t+1)*sizeof(char));\n\tscanf(\"%d %d \\n\",&t,&k);\n\tfor(int i=0;i<t;i++) scanf(\"%c\",str+i);\n\tint count[k];\n\t\n    for(int j=0;j<k;j++) count[j]=0;//Initizlize count to 0.\n    \n\tfor(int i =0;i<t;i++){\n\t    for(int j=0;j<k;j++){\n\t        if('A'+j == *(str+i)) count[j]++;\n\t       }\n\t    \n\t}\n\tlong sum =count[0];\n\tint min = count[0];\n\tfor(int j=1;j<k;j++){\n\t    sum+=count[j];\n\t    if(min>count[j]) min = count[j];\n\t}\n\tif(min==0) printf(\"0\");\n\telse printf(\"%ld\",t - sum + min*k);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n\t//code\n\tint t; int k;\n\t\n\tscanf(\"%d %d\\n\",&t,&k);\n\tint count[26];\n\tchar str[100020];\n\t\n    for(int i=0;i<t;i++) scanf(\"%c\",str+i);\n\tfor(int i =0;i<t;i++){\n       count[str[i]-'A']++; //Counting the number of letter of each character in string.\n\t}\n\t\n\tint min = 999999;\n    for(int i=0;i<k;i++){\n        if(min>count[i]) min=count[i]; //Finding the minimum of count.\n    }\n    \n    \n\tif(min==0) printf(\"0\");\n\telse printf(\"%d\",min*k);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9945593035908596, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ded50e3140a3fff4d3f99472f0786430", "bug_code_uid": "75e1e9f5ef806096b16158046677161f", "src_uid": "f4804780d9c63167746132c35b2bdd02", "apr_id": "3fa28a2c5809b108d9c89707da9f7000", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define min(x,y,z) ((x>y)?y:x)>z?z:((x>y)?y:x)\n#define max(x,y,z) ((x>y)?x:y)>z?((x>y)?x:y):z\nint main(void) {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int x,y,z;\n        scanf(\"%d %d %d\",&x, &y, &z);\n        if(((x==y&&x>z)||((z==y&&x<z)||(x==z&&x>y)))) \n        {\n            printf(\"YES\\n\");\n            printf(\"%d %d %d\\n\",max(x,y,z),min(x,y,z),min(x,y,z));\n        }\n        else printf(\"NO\\n\");\n    }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define min(x,y,z) ((x>y)?y:x)>z?z:((x>y)?y:x)\n#define max(x,y,z) ((x>y)?x:y)>z?((x>y)?x:y):z\nint main(void) {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int x,y,z;\n        scanf(\"%d %d %d\",&x, &y, &z);\n        if(((x==y&&x>=z)||((z==y&&x<=z)||(x==z&&x>=y)))) \n        {\n            printf(\"YES\\n\");\n            printf(\"%d %d %d\\n\",max(x,y,z),min(x,y,z),min(x,y,z));\n        }\n        else printf(\"NO\\n\");\n    }\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8908045977011494, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "a45053708d666e9daa5e27f9a8504c6c", "bug_code_uid": "19de91f9068f3b42564ea4d899fdbe88", "src_uid": "260666df22ee510fcce3ebdfbb8b71a2", "apr_id": "e26561941e3f4b1e5d6740f113106e9e", "difficulty": 1000, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint sayi;\n\tfloat der = 0, guf = 1;\n\tscanf(\"%d\", &sayi);\n\tfor(int i = 0; i < sayi; i++, guf/2){\n\t\tder+=guf;\n\t}\n\tprintf(\"%f\", der);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint sayi;\n\tdouble der = 0.0;\n\tscanf(\"%d\", &sayi);\n\tfor(int i = 1; i <= sayi; i++){\n\t\tder+=1.0/i;\n\t}\n\tprintf(\"%f\", der);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.6388888888888888, "equal_cnt": 27, "replace_cnt": 17, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "6cc15fe8df09dbe9e29f0f8cfbd1e242", "bug_code_uid": "f392cd47421c6e267ed53d1055b49957", "src_uid": "67a70d58415dc381afaa74de1fee7215", "apr_id": "cb2f20a3b449f37a28b9e7836d6c1aaf", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int a,b,i,j,t=0;\n    scanf(\"%d %d\",&a,&b);\n    char p[200005];\n    scanf(\"%s\",&p);\n    char name[2][1];\n  \n\n\n    for(i=0; i<2&&t!=b; i++)\n    {\n        getchar();\n\n        scanf(\"%c\",&name[i][0]);\n\n        if(i==1)\n        {\n            for(j=0; j<a; j++)\n            {\n\n                if(p[j]==name[0][0])\n                {\n                    p[j]=name[1][0];\n                }\n                else if(p[j]==name[1][0])\n                {\n                    p[j]=name[0][0];\n                }\n            }\n            i=-1;\n    t++;\n\n\n\n\n        }\n    }\n\n\n    printf(\"%s\",p);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    char s[26][1];\n    int i,j,a;\n    for(i=0,j=97; i<26; i++,j++)\n    {\n        s[i][0]=j;\n    }\n    int k,l,t=0,b,z;\n    char name[2][1],dhor[10];\n    scanf(\"%d %d\",&z,&l);\n    char ans[200000];\n    int x;\n    scanf(\"%s\",&ans);\n    for(i=0; i<2&&t!=l; i++)\n    {\n        getchar();\n        scanf(\"%c\",&name[i][0]);\n        if(i==1)\n        {\n            for(k=0; k<26; k++)\n            {\n                if(name[0][0]==s[k][0])\n                {\n                    s[k][0]=name[1][0];\n                }\n                else if(name[1][0]==s[k][0])\n                {\n                    s[k][0]=name[0][0];\n                }\n            }\n            t++;\n            i=-1;\n        }\n\n    }\n    int g;\n    for(i=0; i<z; i++)\n    {\n        g=ans[i];\n        x=g-97;\n        printf(\"%c\",s[x][0]);\n    }\n\n\n\n}\n"}
{"similarity_score": 0.996996996996997, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b1595936a8517a0ceeea2df662ac2471", "bug_code_uid": "bb969b7c6456e79bd4a0eedbb4f91120", "src_uid": "731b45747081a800fc6da02efa5ce8cd", "apr_id": "4a92b735433657f94280ef6a3f5321c2", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t\n\tint t;\n\tscanf(\"%d\",&t);\n\t\n\twhile (t--) {\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor (int i = 0; i < n; i++){\n\t\t    scanf(\"%d\",&a[i]);\n\t\t} \n\t\tint pos = n - 1;\n\t\twhile (pos > 0 && a[pos - 1] >= a[pos]) --pos;\n\t\twhile (pos > 0 && a[pos - 1] <= a[pos]) --pos;\n\t\tprintf(\"%d\", pos);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t\n\tint t;\n\tscanf(\"%d\",&t);\n\t\n\twhile (t--) {\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor (int i = 0; i < n; i++){\n\t\t    scanf(\"%d\",&a[i]);\n\t\t} \n\t\tint pos = n - 1;\n\t\twhile (pos > 0 && a[pos - 1] >= a[pos]) --pos;\n\t\twhile (pos > 0 && a[pos - 1] <= a[pos]) --pos;\n\t\tprintf(\"%d\\n\", pos);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.6444121915820029, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1097ae1fd5f8e8f120bbe586c7e7cd8b", "bug_code_uid": "bfef890550c21ee2d0e441b4f6438489", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "738844da7ff40937a1589e566c2032d4", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, k, i, rem;\n    scanf(\"%d %d\", &n, &k);\n    for (i=0; i<k; i++)\n        printf(\"%c\", 'a'+i);\n    rem=n-k;\n    for (i=0; i<rem; i++)\n        printf(\"a\");\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, k, i, rem;\n    scanf(\"%d %d\", &n, &k);\n    for (i=0; i<k; i++)\n        printf(\"%c\", 'a'+i);\n    rem=n-k;\n    if (k>1) {\n        for (i=0; i<rem; i++) {\n            if (i%2) printf(\"b\");\n            else printf(\"a\");\n        }\n        printf(\"\\n\");\n    }\n    else {\n        for (i=0; i<rem; i++) {\n            if (i%2) printf(\"a\");\n            else printf(\"b\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9805970149253731, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fb81a1df382b0c160a10206ddfb15b5c", "bug_code_uid": "2961d9f351637a837ee26043670fe95f", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "13bbea816b1c1e89c586edd36945d603", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[1000],t1[1000],t2[1000],t3[1000],x=0,y=0,z=0,i,w;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1){\n            t1[x]=i+1;\n            x++;\n        }\n        if(a[i]==2){\n            t2[y]=i+1;\n            y++;\n        }\n        if(a[i]==3){\n            t3[z]=i+1;\n            z++;\n        }\n    }\n    if(x<y&&x<z){\n       w=x;\n       printf(\"%d\\n\",w);\n    }\n    else if(y<x&&y<z){\n        w=y;\n        printf(\"%d\\n\",w);\n    }\n    else{\n        w=z;\n        printf(\"%d\\n\",w);\n    }\n    for(x=0,y=0,z=0;x<w,y<w,z<w;x++,y++,z++){\n        printf(\"%d %d %d\\n\",t1[x],t2[y],t3[z]);\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[5000],t1[5000],t2[5000],t3[5000],x=0,y=0,z=0,i,w;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1){\n            t1[x]=i+1;\n            x++;\n        }\n        if(a[i]==2){\n            t2[y]=i+1;\n            y++;\n        }\n        if(a[i]==3){\n            t3[z]=i+1;\n            z++;\n        }\n    }\n    if(x<=y&&x<=z){\n       w=x;\n       printf(\"%d\\n\",w);\n    }\n    else if(y<=x&&y<=z){\n        w=y;\n        printf(\"%d\\n\",w);\n    }\n    else{\n        w=z;\n        printf(\"%d\\n\",w);\n    }\n    for(x=0,y=0,z=0;x<w,y<w,z<w;x++,y++,z++){\n        printf(\"%d %d %d\\n\",t1[x],t2[y],t3[z]);\n    }\n\n}\n"}
{"similarity_score": 0.28233305156382077, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "8d31eca367773a9b0d6d588bde3a79ba", "bug_code_uid": "dc06e5e47e6be4eb348514f2a1230ecd", "src_uid": "0197047cab6d83a189a5c1eabf5b1dd3", "apr_id": "b085a1845091cde8eafe684e63fe28be", "difficulty": 1400, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n;\n\nvoid solve(void){\n\tscanf(\"%d\", &n);\n\n\tint max[n];\n\tint i, j;\n\n\tfor(i = 0; i < n; i++){\n\t\tmax[i] = 1;\n\t}\n\n\tint seen[n];\n\tscanf(\"%d\", &seen[0]);\n\tfor(i = 1; i < n; i++){\n\t\tscanf(\"%d\", &seen[i]);\n\n\t\tj = i-1;\n\t\twhile(j >= 0){\n\t\t\tif((i+1)%(j+1) == 0 && seen[i] > seen[j]){\n\t\t\t\tif(max[j]+1 > max[i])\n\t\t\t\t\tmax[i] = max[j]+1;\n\t\t\t}\n\t\t\tj--;\n\t\t}\n\t}\n\n\tint ans = max[0];\n\tfor(i = 1; i < n; i++){\n\t\tif(max[i] > ans)\n\t\t\tans = max[i];\n\t}\n\n\tprintf(\"%d\\n\", ans);\n\n\treturn;\n}\n\nint main(int arg, char** argv){\n\tint cases;\n\tscanf(\"%d\", &cases);\n\n\twhile(cases--){\n\t\tsolve();\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n;\n\nvoid solve(void){\n\tscanf(\"%d\", &n);\n\n\tint max[n+1];\n\tint i, j;\n\n\tfor(i = 1; i <= n; i++){\n\t\tmax[i] = 1;\n\t}\n\n\tint seen[n+1];\n\tfor(i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &seen[i]);\n\t}\n\n\tfor(i = 1; i <= n; i++){\n\t\tfor(j = 2*i; j <= n; j += i){\n\t\t\tif(seen[i] < seen[j])\n\t\t\t\tmax[j] = (max[j] >= max[i]+1) ? max[j] : max[i]+1;\n\t\t}\n\t}\n\n\tint ans = max[1];\n\tfor(i = 1; i <= n; i++){\n\t\tif(max[i] > ans)\n\t\t\tans = max[i];\n\t}\n\n\tprintf(\"%d\\n\", ans);\n\n\treturn;\n}\n\nint main(int arg, char** argv){\n\tint cases;\n\tscanf(\"%d\", &cases);\n\n\twhile(cases--){\n\t\tsolve();\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9744245524296675, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "56efe57c006bdf79ed24990069ad9482", "bug_code_uid": "e5d9938d15aac58dcaa1b3d2abda0b84", "src_uid": "b18dac401b655c06bee331e71eb3e4de", "apr_id": "146a2c29a695a0b19f138a4f9a99b971", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint i,j,k,t,n,x,c,m,y,z;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tk=0;\n\t\tscanf(\"%d%d%d\",&c,&m,&x);\n\t\tif(c>m)\n\t\t{\n\t\t\ty=c;\n\t\t\tz=m;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tz=c;\n\t\t\ty=m;\n\t\t}\n\t\tif(x>=z)\n\t\t{\n\t\t\tk=z;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk=x;\n\t\t\tx=(c+m)/3;\n\t\t\tif(c>=x&&m>=x)\n\t\t\tk=k+x;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(m<x)\n\t\t\t\tk=k+m;\n\t\t\t\telse if(c<m)\n\t\t\t\tk=k+c;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",k);\n\t}\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint i,j,k,t,n,x,c,m,y,z;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tk=0;\n\t\tscanf(\"%d%d%d\",&c,&m,&x);\n\t\tif(c>m)\n\t\t{\n\t\t\ty=c;\n\t\t\tz=m;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tz=c;\n\t\t\ty=m;\n\t\t}\n\t\tif(x>=z)\n\t\t{\n\t\t\tk=z;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk=x;\n\t\t\tc=c-x;\n\t\t\tm=m-x;\n\t\t\tx=(c+m)/3;\n\t\t\tif(c>=x&&m>=x)\n\t\t\tk=k+x;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(m<x)\n\t\t\t\tk=k+m;\n\t\t\t\telse if(c<m)\n\t\t\t\tk=k+c;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",k);\n\t}\n}"}
{"similarity_score": 0.6806451612903226, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "cd04ee0c1f3f3e286cf2639e42e88d92", "bug_code_uid": "010b7c3e8283d44f030c5cb5cb293324", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "a0b039233da51317c84d764537a7128d", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\nint t,n[1000],i,j,k,w[1000],x,y,z;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\nscanf(\"%d\",&n[i]);\nfor(i=0;i<t;i++)\n{\nx=0;\ny=0;\nfor(j=1;j<=n[i];j++)\n{\nif(j%2==0)\n{\nx=x+pow(2,j);\n}\nelse\n{\ny=y+pow(2,j);\n}\n}\nz=abs(x-y);\nprintf(\"%d\",z);\n}}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\nint t,n[1000],i,j,k,w[1000],x,y,z;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\nscanf(\"%d\",&n[i]);\nfor(i=0;i<t;i++)\n{\nx=0;\ny=0;\nk=n[i]/2;\nfor(j=1;j<k;j++)\n{\n    x=x+pow(2,j);\n    y=y+pow(2,n[i]-j);\n}\nx=x+pow(2,n[i]);\ny=y+pow(2,n[i]/2);\nz=abs(x-y);\nprintf(\"%d\\n\",z);\n}\n}"}
{"similarity_score": 0.5373781148429035, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "dd7c0a8cd3d1d90feea3786791538aa6", "bug_code_uid": "56a03e7e0006261e4f114003965d4e5c", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "f82af2647240fed99e5aef0c1d0d535e", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint arr[200001];\nint main()\n{\n  int n,temp,i,flag=0,x;\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++)\n      scanf(\"%d\",&arr[i]);\n  if(n%2==0)\n     x=n/2;\n  else\n     x=(n/2)+1;\n  for(i=0;i<x;i++=2)\n     {\n      if(i%2==0)\n         {\n          temp=arr[i];\n          arr[i]=arr[n-i-1];\n          arr[n-i-1]=temp;\n        \n        \n        \n         }\n    printf(\"%d %d\\n\",arr[i],arr[n-i-1]);\n    \n    \n     }\n   for(i=0;i<n;i++)\n      {\n      if(flag==1)\n         printf(\" \");\n      printf(\"%d\",arr[i]);\n      flag=1;\n      }\n   printf(\"\\n\");\n  \n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n  int n,temp,i,flag=0;\n  scanf(\"%d\",&n);\n  int arr[n+1];\n  for(i=0;i<n;i++)\n      scanf(\"%d\",&arr[i]);\n  for(i=0;i<n/2;i+=2)\n     {\n          temp=arr[i];\n          arr[i]=arr[n-i-1];\n          arr[n-i-1]=temp;\n     }\n   for(i=0;i<n-1;i++)\n      {\n      \n      printf(\"%d \",arr[i]);\n      \n      }\n      printf(\"%d\\n\",arr[n-1]);\n   \n  \n}"}
{"similarity_score": 0.9940357852882704, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a728f238d1075cf2e51126dbcb96543d", "bug_code_uid": "461e2abc8108d2e3fed643fba88c31df", "src_uid": "f55c824d8db327e531499ced6c843102", "apr_id": "2da76e0000b62048304e7b0026994d34", "difficulty": 900, "tags": ["implementation", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint y;\n\tint x;\n\tint k=1;\n\tscanf(\"%d%d\",&y,&x);\n\tchar d[y][x];\n\tfor(int i=0;i<y;i++){\n\t    scanf(\"\\n\");\n\t    for(int j=0;j<x;j++){\n\t        scanf(\"%c\",&d[i][j]);\n\t        if(d[i][j]=='.') d[i][j]='D';\n\t    }\n\t}\n\tfor(int i=0;i<y;i++){\n\t    for(int j=0;j<x;j++){\n\t        if(d[i][j]=='S'){\n\t            if(d[i][j+1]=='W' && j<x-1){\n\t                k=0;\n\t                break;\n\t            }\n\t            if(d[i][j-1]=='W' && j>0){\n\t                k=0;\n\t                break;\n\t            }\n\t            if(d[i+1][j]=='W' && i<y-1){\n\t                k=0;\n\t                break;\n\t            }\n\t            if(d[i-1][j]=='W' && i>0){\n\t                k=0;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    if(k==0){\n\t        break;\n\t    }\n\t}\n\tif(k){\n\t    printf(\"Yes\\n\");\n\t    for(int i=0;i<y;i++){\n\t        for(int j=0;j<x;j++){\n                    printf(\"%c\",d[i][j]);\n\t            }\n\t        printf(\"\\n\");\n\t    }\n\t}\n\telse printf(\"No\");\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint y;\n\tint x;\n\tint k=1;\n\tscanf(\"%d%d\",&y,&x);\n\tchar d[500][500];\n\tfor(int i=0;i<y;i++){\n\t    scanf(\"\\n\");\n\t    for(int j=0;j<x;j++){\n\t        scanf(\"%c\",&d[i][j]);\n\t        if(d[i][j]=='.') d[i][j]='D';\n\t    }\n\t}\n\tfor(int i=0;i<y;i++){\n\t    for(int j=0;j<x;j++){\n\t        if(d[i][j]=='S'){\n\t            if(d[i][j+1]=='W' && j<x-1){\n\t                k=0;\n\t                break;\n\t            }\n\t            if(d[i][j-1]=='W' && j>0){\n\t                k=0;\n\t                break;\n\t            }\n\t            if(d[i+1][j]=='W' && i<y-1){\n\t                k=0;\n\t                break;\n\t            }\n\t            if(d[i-1][j]=='W' && i>0){\n\t                k=0;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    if(k==0){\n\t        break;\n\t    }\n\t}\n\tif(k){\n\t    printf(\"Yes\\n\");\n\t    for(int i=0;i<y;i++){\n\t        for(int j=0;j<x;j++){\n                    printf(\"%c\",d[i][j]);\n\t            }\n\t        printf(\"\\n\");\n\t    }\n\t}\n\telse printf(\"No\");\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9990356798457087, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ff0ce06afc4e66eb59d6d1af3dbc7a77", "bug_code_uid": "131fc783bf2075ec7ef74bf6a628e37c", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "d71b692e8828e5b7020edc868131ac60", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,minn=999,maxn=-1,minm=999,i,n,m;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n     scanf(\"%d\",&t);\n     if(minn>t)minn=t;\n     if(maxn<t)maxn=t;\n    }\n    for(i=0;i<m;i++)\n    {\n                    scanf(\"%d\",&t);\n                    if(minm>t)minm=t;\n    }\n    if(maxn>minm)\n                 printf(\"-1\");\n    else if(2*minn<=maxn)\n         printf(\"%d\",maxn);\n    else if(2*minn<minm)\n         printf(\"%d\",2*minn);\n    else\n        printf(\"-1\");\n    return 0;\n}\n    \n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,minn=999,maxn=-1,minm=999,i,n,m;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n     scanf(\"%d\",&t);\n     if(minn>t)minn=t;\n     if(maxn<t)maxn=t;\n    }\n    for(i=0;i<m;i++)\n    {\n                    scanf(\"%d\",&t);\n                    if(minm>t)minm=t;\n    }\n    if(maxn>=minm)\n                 printf(\"-1\");\n    else if(2*minn<=maxn)\n         printf(\"%d\",maxn);\n    else if(2*minn<minm)\n         printf(\"%d\",2*minn);\n    else\n        printf(\"-1\");\n    return 0;\n}\n    \n"}
{"similarity_score": 0.24758842443729903, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "7b0fb31192a302f09054e6b0da688094", "bug_code_uid": "a4fdbdb09c0f64e8c5b593d3b0d1e21d", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "d86baf7a34a947e126ebd56e324d1771", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nmain()\r\n{\r\n    int t,a,b,c,A,B,C,i,max;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        if(a>=b)\r\n            max=a;\r\n        else\r\n            max=b;\r\n        if(c>=max)\r\n            max=c;\r\n        if(max==0)\r\n        {\r\n            A=1;\r\n            B=1;\r\n            C=1;\r\n        }\r\n        else\r\n        {\r\n            if(a==max)\r\n            {\r\n                A=0;\r\n                B=max-b+1;\r\n                C=max-c+1;\r\n            }\r\n            else if(b==max)\r\n            {\r\n                A=max-a+1;\r\n                B=0;\r\n                C=max-c+1;\r\n            }\r\n            else\r\n            {\r\n                A=max-a+1;\r\n                B=max-b+1;\r\n                C=0;\r\n            }\r\n        }\r\n        printf(\"%d %d %d\\n\",A,B,C);\r\n    }\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n\r\nint maxi(int a, int b)\r\n{\r\n    int m;\r\n    if(a>=b)\r\n        m=a;\r\n    else\r\n        m=b;\r\n    return m;\r\n}\r\n\r\nmain()\r\n{\r\n    int t,a,b,c,A,B,C,i;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        A=maxi(0,maxi(b,c)+1-a);\r\n        B=maxi(0,maxi(a,c)+1-b);\r\n        C=maxi(0,maxi(a,b)+1-c);\r\n        printf(\"%d %d %d\\n\",A,B,C);\r\n    }}\r\n"}
{"similarity_score": 0.8741379310344828, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b85a8aa33f02891e8b782cb4ba6b528b", "bug_code_uid": "3adbc171eed3333512b60acaacd536ed", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "35e5557bbe02ef3374f7115559282413", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long int n,i;\n    scanf(\"%ld\",&n);\n    long int a[n],maximum,cnt;\n    for(i=0;i<n;i++){\n        scanf(\"%ld\",&a[i]);\n    }\n    cnt=0;\n    maximum=cnt;\n    for(i=1;i<n;i++){\n        if(a[i]>a[i-1]){\n            cnt++;\n        }\n        else if(a[i]<a[i-1]){\n            if(cnt>maximum){\n                maximum=cnt;\n            }\n            cnt=0;\n        }\n        if(i==n-1 && cnt>maximum){\n            maximum=cnt;\n        }\n    }\n    printf(\"%ld\\n\",maximum+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long int n,i;\n    scanf(\"%ld\",&n);\n    long int a[n],maximum,cnt;\n    for(i=0;i<n;i++){\n        scanf(\"%ld\",&a[i]);\n    }\n    cnt=0;\n    maximum=cnt;\n    for(i=1;i<n;i++){\n        if(a[i]>a[i-1]){\n            cnt++;\n        }\n        else if(a[i]<a[i-1]){\n            if(cnt>maximum){\n                maximum=cnt;\n            }\n            cnt=0;\n        }\n        else if(a[i]==a[i-1]){\n            if(cnt>maximum){\n                maximum=cnt;\n            }\n            cnt=0;\n        }\n        if(i==n-1 && cnt>maximum){\n            maximum=cnt;\n        }\n    }\n    printf(\"%ld\\n\",maximum+1);\n    return 0;\n}\n"}
{"similarity_score": 0.49768875192604006, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "02be03032e696c97603ffa701c9843b3", "bug_code_uid": "318e50cfbf274c2dd354be7e38cb1163", "src_uid": "17cf2d6f59773925b228188b5a47b710", "apr_id": "fb631104b5e70e68b8a4c35997d3f7dc", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,a,b,c,d,k,x,y;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        scanf(\"%d %d %d %d %d\",&a,&b,&c,&d,&k);\n        if(a<=c){\n            x=1;\n            y=k-x;\n            if(y>=0){\n            printf(\"%d %d\\n\",x,y);}\n            if(y<0){\n                printf(\"-1\\n\");\n            }\n        }\n        else if(a>c){\n            if(a%c==0){\n                x=1;\n                y=k-x;}\n                else{\n                    x=2;\n                    y=k-x;\n                }\n\n            if(y>0){\n                printf(\"%d %d\\n\",x,y);\n            }\n            else{\n                printf(\"-1\\n\");\n            }\n        }}\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int t,a,b,c,d,k,x,y;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        scanf(\"%d %d %d %d %d\",&a,&b,&c,&d,&k);\n            if(a%c==0){\n                x=a/c;\n                y=k-x;}\n                else{\n                    x=a/c+1;\n                    y=k-x;\n                }\n                    if(b%d==0&&y>=b/d){\n                printf(\"%d %d\\n\",x,y);}\n            else if(b%d!=0&&y>=b/d+1){\n                printf(\"%d %d\\n\",x,y);}\n            else{\n                printf(\"-1\\n\");\n            }\n        }\n\n    return 0;\n}"}
{"similarity_score": 0.9877049180327869, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1e4f327186abd0cd245beb407a7d519c", "bug_code_uid": "0550dd6dd848a768a3b648672e421edd", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "7b43994bfcbc40b12348b087dd46b30b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <malloc.h>\n\nint main()\n{\n    int n;\n    char* a;\n    char* b;\n    int times=0;\n\n    scanf(\"%d\", &n);\n    a = (char*)malloc(n*sizeof(char));\n    b = (char*)malloc(n*sizeof(char));\n    \n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n\n    for(int i=0; i<n; i++){\n        if(abs(a[i]-b[i]) > 5){\n            times += 10- (abs(a[i]- b[i]));\n        }else{\n            times += abs(a[i]- b[i]);\n        }\n    }\n    printf(\"%d\", times);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <malloc.h>\n\nint main()\n{\n    int n;\n    char* a;\n    char* b;\n    int times=0;\n\n    scanf(\"%d\", &n);\n    a = (char*)malloc((n+1)*sizeof(char));\n    b = (char*)malloc((n+1)*sizeof(char));\n    \n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n\n    for(int i=0; i<n; i++){\n        if(abs(a[i]-b[i]) > 5){\n            times += 10- (abs(a[i]- b[i]));\n        }else{\n            times += abs(a[i]- b[i]);\n        }\n    }\n    printf(\"%d\", times);\n    return 0;\n}"}
{"similarity_score": 0.9079903147699758, "equal_cnt": 16, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 10, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "66297175ee7f756ba5546bc0e51b15bc", "bug_code_uid": "61fd6054f97034b69e149db1bf0e4bb9", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "16fac5adf0303f0ea47a368b4725e82a", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,x,i,j,t,a,b;\n   scanf(\"%d%d\",&n,&x);\n   t=0;\n   i=1;\n   for(j=0;j<n;j++)\n   {\n       scanf(\"%d%d\",&a,&b);\n\n       a=a-i+1;\n       b=b-i+1;\n       i=1;\n       while(i<=a-x)\n       {\n           i=i+x;\n       }\n       while(i<=b)\n       {\n           i++;\n           t++;\n       }\n\n      \n\n   }\n\n printf(\"%d\",t);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int x,i,j,t,a,b,k;\n   long n;\n   scanf(\"%ld%d\",&n,&x);\n   t=0;\n   i=1;\n   k=1;\n   for(j=0;j<n;j++)\n   {\n\n       scanf(\"%d%d\",&a,&b);\n\n\n       a=a-k+1;\n\n       b=b-k+1;\n\n       i=1;\n       while(i<=a-x)\n       {\n           i=i+x;\n            k=k+x;\n       }\n       while(i<=b)\n       {\n           i++;\n           t++;\n           k++;\n       }\n\n\n   }\n\nprintf(\"%d\",t);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8571428571428571, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7b463b3c4f4c8e4996ab26ec8ed644f3", "bug_code_uid": "442607f770d73127af4d010056f225c3", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "eae64b58fdb1cb2c886dad3c7c9f2314", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint n,i,t,f,a,b;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tscanf(\"%d%d\",&a,&b);\r\n\t\tif(b==1)\r\n\t\tprintf(\"NO\\n\");\r\n\t\telse if(b==2)\r\n\t\t{\r\n\t\tprintf(\"YES\\n\");\r\n\t\tprintf(\"%d %d %d\\n\",a,a*3,a*b*2);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\tprintf(\"YES\\n\");\r\n\t\tprintf(\"%d %d %d\\n\",a,a*(b-1),a*b);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tlong long n,i,t,f,a,b;\r\n\tscanf(\"%lld\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tscanf(\"%lld%lld\",&a,&b);\r\n\t\tif(b==1)\r\n\t\tprintf(\"NO\\n\");\r\n\t\telse if(b==2)\r\n\t\t{\r\n\t\tprintf(\"YES\\n\");\r\n\t\tprintf(\"%lld %lld %lld\\n\",a,a*3,a*b*2);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\tprintf(\"YES\\n\");\r\n\t\tprintf(\"%lld %lld %lld\\n\",a,a*(b-1),a*b);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.5918854415274463, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "74eace8af1a7cae3ad81dce8d76ac376", "bug_code_uid": "9254c2dcc88cd142ce2c28159d4bd263", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "643406b9c18b16e43d2a3e3be829e054", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n  int n;\n  scanf(\"%d\", &n);\n  for(int i = 1; i <= n; i++){\n    printf(\"%d %d\\n\", i, n*n+1-i);\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n  int n, count = 0;\n  scanf(\"%d\", &n);\n  for(int i = 1; i <= n*n/2; i++){\n    if(count == n/2-1){\n      printf(\"%d %d\\n\", i, n*n+1-i);\n      count = 0;\n    }\n    else{\n      printf(\"%d %d \", i, n*n+1-i);\n      count++;\n    }\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.1792452830188679, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "d98ea0c24d16b8e6e7b70870f0ef8e64", "bug_code_uid": "099e6464e7e04c2f5731e66d9bf932cb", "src_uid": "e70708f72da9a203b21fc4112ede9268", "apr_id": "45dbce3b89f25e3ff16f7830f83930ea", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\n\nint main()\n{\n    char str[100];\n    int i, length;\n    scanf(\"%s\", str);\n    length = strlen(str);\n    for(i = 0; i < length ; i++)\n    {\n        if(str[i] == 'a')\n        {\n        printf(\"%c\",'z');\n        }\n        else{\n        printf(\"%c\", str[i] - 1);}\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tchar s[100005];\n\tscanf(\"%s\",s);\n\tint i,j=0,k=0;\n\tfor(i=0;s[i]==97;i++){\n\t\t\t;\n\t\t}\n\tfor(i;s[i]!='\\0';i++){\n\t\tif(s[i]==97){\n\t\t\tbreak;\n\t\t}\n\t\telse if(s[i]!=97 && s[i]!='\\0'){\n\t\t\ts[i]=s[i]-1;\n\t\t\tj++;\n\t\t}\n\t}\n\tif(j==0){\n\t\ts[i-1]='z';\n\t}\n    printf(\"%s\\n\",s);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9855072463768116, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6a418043d6da16a28c472c59fcfe71a7", "bug_code_uid": "8b9fcc3329e286107ef8591df26f481d", "src_uid": "04e2e1ce3f0b4efd2d4dda69748a0a25", "apr_id": "ef7566dd4c79d7e657aa3202a2b64a00", "difficulty": 1200, "tags": ["bitmasks", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define R(X) scanf(\"%li\",&X)\nlong i,n,r,t,a[37];\nint lg(int n){return n?1+lg(n/2):0;}\nint main(){\n\tfor(R(t);r=0,t--;){\n\t\tfor(R(n),i=0;i<37;i++)a[i]=0;\n\t\tfor(;n--;)R(i),r+=a[lg(i)]++;\n\t\tprintf(\"%li\\n\",r);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define R(X) scanf(\"%lli\",&X)\nlong long i,n,r,t,a[37];\nint lg(int n){return n?1+lg(n/2):0;}\nint main(){\n\tfor(R(t);r=0,t--;){\n\t\tfor(R(n),i=0;i<37;i++)a[i]=0;\n\t\tfor(;n--;)R(i),r+=a[lg(i)]++;\n\t\tprintf(\"%lli\\n\",r);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9962406015037594, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a18c8e6bca5a266437270b04555a244d", "bug_code_uid": "eddcc00335da8e2e66d5bdf72544d850", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "04ed2fe8829a1a4e2a444cecbdd16ae1", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,d,a;\n    scanf(\"%d\",&n);\n    for(i=2 ;i<=n;i++){\n        if(n%i==0){\n            d = n/i;\n            a = n/d;\n            break;\n        }\n    }\n    printf(\"%d\\n\",d);\n    for(i=0;i<d;i++){\n        printf(\"%d \",a);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,d,a;\n    scanf(\"%d\",&n);\n    for(i=1 ;i<=n;i++){\n        if(n%i==0){\n            d = n/i;\n            a = n/d;\n            break;\n        }\n    }\n    printf(\"%d\\n\",d);\n    for(i=0;i<d;i++){\n        printf(\"%d \",a);\n    }\n}\n"}
{"similarity_score": 0.9639344262295082, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "97a2c4969784d8e12c94425e951987c1", "bug_code_uid": "224bdffcf19a28df3b47beba35d0fae7", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "a147f526bba8ae0095c1a5fcdc39ef85", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    long n;\n    scanf(\"%ld\", &n);\n\n    long long tree[n], height[n];\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%I64d %I64d\", &tree[i], &height[i]);\n    }\n\n    long long A_last_occupied = tree[0];\n    long long B_last_occupied = tree[0];\n    long A_count = 1;\n    long B_count = 1;\n\n    for (int i = 1; i < n - 1; i++) {\n\n        long long left_pos = tree[i] - height[i];\n        // if left\n        if (B_last_occupied < left_pos) {\n            A_last_occupied = B_last_occupied = tree[i];\n            A_count = B_count = B_count + 1;\n            continue;\n        }\n\n        long long right_pos = tree[i] + height[i];\n        A_last_occupied = B_last_occupied = tree[i];\n        A_count = B_count;\n        if (right_pos < tree[i+1]) {\n            B_count++;\n            B_last_occupied = right_pos;\n        }\n    }\n\n    printf(\"%ld\", B_count + 1);\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main() {\n    long n;\n    scanf(\"%ld\", &n);\n\n    long long tree[n], height[n];\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%I64d %I64d\", &tree[i], &height[i]);\n    }\n\n    long long A_last_occupied = tree[0];\n    long long B_last_occupied = tree[0];\n    long A_count = (n > 1) ? 2L : 1L;\n    long B_count = A_count;\n\n    for (int i = 1; i < n - 1; i++) {\n\n        long long left_pos = tree[i] - height[i];\n        // if left\n        if (B_last_occupied < left_pos) {\n            A_last_occupied = B_last_occupied = tree[i];\n            A_count = B_count = B_count + 1;\n            continue;\n        }\n\n        long long right_pos = tree[i] + height[i];\n        A_last_occupied = B_last_occupied = tree[i];\n        A_count = B_count;\n        if (right_pos < tree[i+1]) {\n            B_count++;\n            B_last_occupied = right_pos;\n        }\n    }\n\n    printf(\"%ld\", B_count);\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9730171708912511, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "14f5b90bf096ad7fb117751d9cd6a612", "bug_code_uid": "762b10ce7d1f7fe63083e0a2fe283d26", "src_uid": "c3f080681e3da5e1290ef935ff91f364", "apr_id": "7ea229deb5f29ddc9e489b238fc304fe", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//Bismillahir Rahmanir Rahim\n#include<stdio.h>\n\nint main()\n{\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    int c[n], a[m];\n    int i;\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &c[i]);\n    }\n    for(i = 0; i < m; i++){\n        scanf(\"%d\", &a[i]);\n    }\n\n    int j = 0, count = 0;\n    int t = 0;\n    for(i = 0; i < m;){\n        if( j >= n) break;\n        for(j = t; j < n; j++){\n\n            if(a[i] >= c[j]){\n                i = i + 1;\n                t = j + 1;\n\n                count = count + 1 ;\n            }\n        }\n    }\n\n    printf(\"%d\\n\", count);\n\n    return 0;\n}\n//Alhamdulillah!", "fixed": "//Bismillahir Rahmanir Rahim\n#include<stdio.h>\n\nint main()\n{\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    int c[n], a[m];\n    int i;\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &c[i]);\n    }\n    for(i = 0; i < m; i++){\n        scanf(\"%d\", &a[i]);\n    }\n\n    int j = 0, count = 0;\n    int t = 0;\n    for(i = 0; i < m;){\n        if(j >= n) break;\n        for(j = t; j < n; j++){\n            if( i >= m){break;}\n            if(a[i] >= c[j]){\n                i = i + 1;\n                t = j + 1;\n\n                count = count + 1 ;\n            }\n        }\n    }\n\n    printf(\"%d\\n\", count);\n\n    return 0;\n}\n//Alhamdulillah!\n"}
{"similarity_score": 0.46015831134564644, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "904b37b078af28233ec53e1a1593b11c", "bug_code_uid": "d7adcc677b18acc887549060bfe30943", "src_uid": "779e73c2f5eba950a20e6af9b53a643a", "apr_id": "f4c44be17d4e3011712c46ef6a790316", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, m, k, q, kk, quo;\n    scanf(\"%d %d %d\", &n, &m, &k);\n    int quot=(n*m)/k;\n    int rem=(n*m)%k;\n    int i=0, j=0;\n    for(kk=0; kk<k; kk++)\n    {\n        if(kk==k-1)\n            quo=quot+rem;\n        else\n            quo=quot;\n        printf(\"%d \", quo);\n        for(q=0; q<quo;)\n        {\n            if(j==0)\n                while(j<m && q<quo)\n                {\n                    printf(\"%d %d \", i+1, j+1);\n                    q++, j++;\n                }\n            else if(j==m-1)\n                while(j>=0 && q<quo)\n                {\n                    printf(\"%d %d \", i+1, j+1);\n                    q++, j--;\n                }\n            if(j==-1 || j==m)\n            {\n                i++;\n                if(i%2)\n                    j=m-1;\n                else\n                    j=0;\n                if(q!=quo)\n                    q++;\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, m, k, q, quo, kk;\n    scanf(\"%d %d %d\", &n, &m, &k);\n    int quot=(n*m)/k;\n    int rem=(n*m)%k;\n    int i=0, j=0;\n    quo=quot;\n    for(kk=0; kk<k; kk++)\n    {\n        if(kk==k-1)\n            quo=quot+rem;\n        //printf(\"quo=%d rem=%d\\n\", quo, rem);\n        printf(\"%d \", quo);\n        for(q=0; q<quo;)\n        {\n            if(i%2==0)\n                while(j<m && q<quo)\n                {\n                    printf(\"%d %d \", i+1, j+1);\n                    q++, j++;\n                }\n            else\n                while(j>=0 && q<quo)\n                {\n                    printf(\"%d %d \", i+1, j+1);\n                    q++, j--;\n                }\n            if(j==-1 || j==m)\n            {\n                i++;\n                if(i%2)\n                    j=m-1;\n                else\n                    j=0;\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9710526315789474, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "311ab27e1a51c930602ccc0e92e5f0a0", "bug_code_uid": "a9edc2c234d15f85b16226b0c0e4e707", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "41159ce2e667cede6828ffa854702944", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int i,cnt=0,n,j,a[500009],ans=0;\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%ld\",&j);\n\t\tif(i==0)\n\t\t\ta[i]=j;\n\t\telse\n\t\t\ta[i]=a[i-1]+j;\n\t}j=0;long int sum=a[n-1]/3;\n\tif(a[n-1]%3)\n\t\tprintf(\"0\\n\");\n\telse\n\t{\n\t\tfor(i=0;i<n-1;i++)\n\t\t{\n\t\t\tif(a[i]==2*sum)\n\t\t\tans+=cnt;\n\t\t\tif(a[i]==sum)\n\t\t\t\tcnt++;\n\t\t}\n\t\tprintf(\"%ld\\n\",ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int i,cnt=0,n,j,a[500009],ans=0;\n\tscanf(\"%I64d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&j);\n\t\tif(i==0)\n\t\t\ta[i]=j;\n\t\telse\n\t\t\ta[i]=a[i-1]+j;\n\t}j=0;long long int sum=a[n-1]/3;\n\tif(a[n-1]%3)\n\t\tprintf(\"0\\n\");\n\telse\n\t{\n\t\tfor(i=0;i<n-1;i++)\n\t\t{\n\t\t\tif(a[i]==2*sum)\n\t\t\tans+=cnt;\n\t\t\tif(a[i]==sum)\n\t\t\t\tcnt++;\n\t\t}\n\t\tprintf(\"%I64d\\n\",ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.3567961165048544, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d1435519d7e4ab868cf3493d4238b02c", "bug_code_uid": "f10f53189c48c3c7ca2a986808b17ac7", "src_uid": "6bb26991c9ea70e51a6bda5653de8131", "apr_id": "d3de0389184673840e3e0b6679d89585", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,k,i,flag=0;\n\tscanf(\"%d %d\",&n,&k);\n\tint ten=1;\n\tint num[101];\n\twhile(k>0)\n\t{\n\t\tten*=10;\n\t\tk--;\n\t}\n\t//printf(\"%d\\n\",ten);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&num[i]);\n\t\tif(num[i]/ten>=1)\n\t\t\tnum[i]=0;\n\t}\n\tint c=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\twhile(num[i]!=0)\n\t\t{\n\t\t\tif(num[i]%10==4 || num[i]%10==7)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum[i]=num[i]/10;\n\t\t}\n\t\tif(flag==1)\n\t\t\tc++;\n\t}\n\tprintf(\"%d\\n\",c );\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,k,i,flag=0;\n\tscanf(\"%d %d\",&n,&k);\n\tint num[101];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&num[i]);\n\t}\n\tint c=0,lucky;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tlucky=0;\n\t\twhile(num[i]!=0)\n\t\t{\n\t\t\tif(num[i]%10==4 || num[i]%10==7)\n\t\t\t{\n\t\t\t\tlucky++;\n\t\t\t}\n\t\t\tnum[i]=num[i]/10;\n\t\t}\n\t\tif(lucky<=k)\n\t\t\tc++;\n\t}\n\tprintf(\"%d\\n\",c );\n\treturn 0;\n}"}
{"similarity_score": 0.9443757725587144, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4491b3bd3f4683667d7165a4cc141e0e", "bug_code_uid": "d6f93dd29b883a61ffd21d8105db9cd3", "src_uid": "40d1ea98aa69865143d44432aed4dd7e", "apr_id": "d45adb86402cd8a1145aea061d9047da", "difficulty": 1700, "tags": ["data structures", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[17][131072];\nint l;\nint n, m;\n\nint probe(int p, int b)\n{\n  int k;\n  a[0][p-1] = b;\n  int i = (p - 1) / 2;\n  for (k = 0; k < n; k++) {\n    int s = 1 << (n - k - 1);\n    if (k & 1)\n      a[k+1][i] = a[k][i*2] ^ a[k][i*2+1];\n    else\n      a[k+1][i] = a[k][i*2] | a[k][i*2+1];\n    i /= 2;\n  }\n  return a[n][0];\n}\n\nint main()\n{\n  scanf(\"%d%d\", &n, &m);\n  l = 1 << n;\n  int i, k, z;\n  for (i = 0; i < l; i++) {\n    scanf(\"%d\", &a[0][i]);\n  }\n  for (k = 0; k < n; k++) {\n    int s = 1 << (n - k - 1);\n    for (i = 0; i < s; ++i) {\n      if (k & 1)\n        a[k+1][i] = a[k][i*2] ^ a[k][i*2+1];\n      else\n        a[k+1][i] = a[k][i*2] | a[k][i*2+1];\n    }\n  }\n  for (z = 0; z < m; z++) {\n    int p, b;\n    scanf(\"%d%d\", &p, &b);\n    printf(\"%d\\n\", probe(p, b));\n  }\n  return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint a[18][265072];\nint l;\nint n, m;\n\nint probe(int p, int b)\n{\n  int k;\n  a[0][p-1] = b;\n  int i = (p - 1) / 2;\n  for (k = 0; k < n; k++) {\n    if (k & 1)\n      a[k+1][i] = a[k][i*2] ^ a[k][i*2+1];\n    else\n      a[k+1][i] = a[k][i*2] | a[k][i*2+1];\n    i /= 2;\n  }\n  return a[n][0];\n}\n\nint main()\n{\n  scanf(\"%d%d\", &n, &m);\n  l = 1 << n;\n  int i, k, z;\n  for (i = 0; i < l; i++) {\n    scanf(\"%d\", &a[0][i]);\n  }\n  for (k = 0; k < n; k++) {\n    int s = 1 << (n - k - 1);\n    for (i = 0; i < s; ++i) {\n      if (k & 1)\n        a[k+1][i] = a[k][i*2] ^ a[k][i*2+1];\n      else\n        a[k+1][i] = a[k][i*2] | a[k][i*2+1];\n    }\n  }\n  for (z = 0; z < m; z++) {\n    int p, b;\n    scanf(\"%d%d\", &p, &b);\n//    int tmp = a[0][p-1];\n    printf(\"%d\\n\", probe(p, b));\n//    probe(p, tmp);\n  }\n  return 0;\n}\n\n"}
{"similarity_score": 0.9696969696969697, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aa7314e97413a286cac16e5dd4c320e7", "bug_code_uid": "948a9a7c851a211dcc8005e529c4ed33", "src_uid": "8aa648ff5adc0cf7b20fea52d2c34759", "apr_id": "251eb98378d5cc53bd0c3be27c273d1e", "difficulty": 1900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\nint main()\n{\n\tint t;\n\tint i,j,k;\n\tint flag;\n\tint n,m,a,b;\n\tint ans[55][55];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d%d%d\",&n,&m,&a,&b);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tans[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tflag=0;\n\t\tif(n*a!=m*b||(n*a)%m==0)printf(\"NO\\n\");\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\ti=0;\n\t\t\tflag=0;\n\t\t\twhile(i<n)\n\t\t\t{\n\t\t\t\tfor(j=flag;j<flag+a;j++)\n\t\t\t\t{\n\t\t\t\t\tans[i][j%m]=1;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tflag=(flag+a)%m;\t\t\t\t\n\t\t\t}\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tfor(j=0;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\tif(ans[i][j]!=1)ans[i][j]=0;\n\t\t\t\t\tprintf(\"%d\",ans[i][j]);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t\n\t}\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\nint main()\n{\n\tint t;\n\tint i,j,k;\n\tint flag;\n\tint n,m,a,b;\n\tint ans[55][55];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d%d%d\",&n,&m,&a,&b);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tans[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tflag=0;\n\t\tif(n*a!=m*b||(n*a)%m!=0)printf(\"NO\\n\");\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\ti=0;\n\t\t\tflag=0;\n\t\t\twhile(i<n)\n\t\t\t{\n\t\t\t\tfor(j=flag;j<flag+a;j++)\n\t\t\t\t{\n\t\t\t\t\tans[i][j%m]=1;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tflag=(flag+a)%m;\t\t\t\t\n\t\t\t}\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tfor(j=0;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\tif(ans[i][j]!=1)ans[i][j]=0;\n\t\t\t\t\tputchar(ans[i][j]+48);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t\t\n\t}\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9980879541108987, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ac6340d4f33f1fc5f7d53ba06a48a7a2", "bug_code_uid": "e132c33d297e19cd0959b1640167889d", "src_uid": "cac8ca5565e06021a44bb4388b5913a5", "apr_id": "ae476541cf0c642eb2d9ce9f5587eee5", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{int n,d,i,m,j;\nchar s[100];\nscanf(\"%d%d\",&n,&m);\nint a[m][2];\nfor(i=0;i<m;i++)\n{for(j=0;j<2;j++)\n{scanf(\"%d\",&a[i][j]);\n}}\nfor(i=0;i<n;i++)\n{if((i+1)%2==1)\ns[i]='1';\nelse\n    s[i]='0';\n\n}\ns[i]=0;\nprintf(\"%s\",s);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{int n,d,i,m,j;\nchar s[1000];\nscanf(\"%d%d\",&n,&m);\nint a[m][2];\nfor(i=0;i<m;i++)\n{for(j=0;j<2;j++)\n{scanf(\"%d\",&a[i][j]);\n}}\nfor(i=0;i<n;i++)\n{if((i+1)%2==1)\ns[i]='1';\nelse\n    s[i]='0';\n\n}\ns[i]=0;\nprintf(\"%s\",s);\n}\n"}
{"similarity_score": 0.0, "equal_cnt": 0, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f39d623aacebdaf78f040afc3540eabc", "bug_code_uid": "08e661a73eaa82883d659e7d80f42fe1", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "b88a3e3ea3627d99fbad67f6c4931697", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "gg", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int Times;\r\n    scanf(\"%d\", &Times);\r\n\r\n    for (int i = 1; i <= Times; i++) {\r\n        long long Members, MinutesPerMember, Duration;\r\n        scanf(\"%lld %lld %lld\", &Members, &MinutesPerMember, &Duration);\r\n\r\n        long long TimeMember = Duration / MinutesPerMember;\r\n        long long Interval;\r\n        \r\n        if (Members > TimeMember)\r\n            Interval = TimeMember;\r\n        else\r\n            Interval = Members;\r\n\r\n        long long Result = Interval * Members - ((Interval + 1) * Interval / 2);\r\n\r\n\r\n        printf(\"%lld\\n\", Result);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9867172675521821, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "01b056774aa7efacfd642b0b2561292f", "bug_code_uid": "a41d30ef7ef2710e4f50d2165c0b764f", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "7ce4cf5725c1d924ff97989c0a13e4d5", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint i,j,s,t,w,g;\n\tchar str[1000001];\n\tscanf(\"%s\",str);\n\tw=strlen(str);\n\tfor (i=0;i<w;i++){\n\t\tif (str[i]=='^'){\n\t\t\tg=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\ts=0;\n\tfor (i=0;i<g;i++){\n\t\tif (str[i]>='1' && str[i]<='9'){\n\t\t\ts=s-(str[i]-'0')*(i-g);\n\t\t}\n\t\t\n\t}\n\tt=0;\n\tfor (i=g+1;i<w;i++){\n\t\tif (str[i]>='1' && str[i]<='9'){\n\t\tt=t+(str[i]-'0')*(i-g);\n\t\t}\n\t\t\n\t}\n\t//printf(\"%d\",s);\n\tif (s==t){\n\t\tprintf(\"balance\");\n\t}\n\telse if (s>t){\n\t\tprintf(\"left\");\n\t}\n\telse{\n\t\tprintf(\"right\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tlong long int i,j,s,t,w,g;\n\tchar str[1000001];\n\tscanf(\"%s\",str);\n\tw=strlen(str);\n\tfor (i=0;i<w;i++){\n\t\tif (str[i]=='^'){\n\t\t\tg=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\ts=0;\n\tfor (i=0;i<g;i++){\n\t\tif (str[i]>='1' && str[i]<='9'){\n\t\t\ts=s-((str[i]-'0')*(i-g));\n\t\t}\n\t\t\n\t}\n\tt=0;\n\tfor (i=g+1;i<w;i++){\n\t\tif (str[i]>='1' && str[i]<='9'){\n\t\tt=t+((str[i]-'0')*(i-g));\n\t\t}\n\t\t\n\t}\n\t//printf(\"%d\",s);\n\tif (s==t){\n\t\tprintf(\"balance\");\n\t}\n\telse if (s>t){\n\t\tprintf(\"left\");\n\t}\n\telse{\n\t\tprintf(\"right\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9967532467532467, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "255e62b71768645d454389a89335faa1", "bug_code_uid": "545261640d7bd59240961bac32cc7456", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "c38bc833427fa1d27ce091da2aec0057", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int i,j,n;\n     scanf(\"%d\",&n);\n     i=1;\n     for(j=1;j<n;J++)\n     {\n         i=i+j;\n               if(i>n)\n               {\n                   i=i-n;\n                   \n               }\n               printf(\"%d\",i);\n               printf(\" \");\n     }\n     return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int i,j,n;\n     scanf(\"%d\",&n);\n     i=1;\n     for(j=1;j<n;j++)\n     {\n         i=i+j;\n               if(i>n)\n               {\n                   i=i-n;\n                   \n               }\n               printf(\"%d\",i);\n               printf(\" \");\n     }\n     return 0;\n}"}
{"similarity_score": 0.17488076311605724, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "2cdab4d521c6c47cd90c8662e678e2d4", "bug_code_uid": "d393f045269da033b346ecdafe8c1870", "src_uid": "d7381f73ee29c9b89671f21cafee12e7", "apr_id": "4ba4f97218db9d785fc83e9d69b20a54", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n\t\tlong long int n,b,s,k,i,j,t;\n\t\tlong long int a[n];\n\t\tscanf(\"%lld,%lld\",n,b);\n\t\tfor(k=0; k<n; k++)\n\t\t\t{scanf(\"%lld,lld\",a,k);}\n\n\t\tfor (i=0; i<n; i++)\n\t\t{\ta[i]=t;\n\t\t\tfor(j=0; j<n; j++)\n\t\t\t{if(j!=i)\n\t\t\t\t{if((t-a[j])<=b)\n\t\t\t\ts++;}\n\t\t}\n\t\t}\n\t\tprintf(\"%lld\",s);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{int i,j,k,l=0,n,d;\nscanf(\"%d%d\",&n,&d);\nint a[n];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\n    for(j=0;j<n;j++)\n    {\n        k=a[i]-a[j];\n        if(k<0)\n        {\n            k=k*-1;\n        }\n        if(k<=d)\n        {\n            l++;\n        }\n    }\n}\nprintf(\"%d\",l-n);\nreturn 0;\n}"}
{"similarity_score": 0.9846827133479212, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "bd0c87217765afd43028ab826db5c865", "bug_code_uid": "956d4bafeb4b1cf156a2499b2f0de190", "src_uid": "361f65484d86051fa9ff013f5e8c9154", "apr_id": "953452e4eced10d4663eca5e7d880e28", "difficulty": 1600, "tags": ["two pointers", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare( const void *a, const void *b ) {\n    return *(int *)b - *(int *)a;\n}\n\nint main( void ) {\n    int i, j;\n    int n, s[ 100000 ];\n\n    scanf( \"%d\", &n );\n    for ( i = 0; i < n; i++ )\n        scanf( \"%d\", s + i );\n\n    qsort( s, n, sizeof(int), &compare );\n\n    j = 0;\n    for ( i = 0; i < n; i++ )\n        if ( s[ j ] >= s[ i ] * 2 )\n            j++;\n\n    printf( \"%d\\n\", n - j );\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare( const void *a, const void *b ) {\n    return *(int *)b - *(int *)a;\n}\n\nint main( void ) {\n    int i, j;\n    int n, s[ 500000 ];\n\n    scanf( \"%d\", &n );\n    for ( i = 0; i < n; i++ )\n        scanf( \"%d\", s + i );\n\n    qsort( s, n, sizeof(int), &compare );\n\n    j = 0;\n    for ( i = n + 1 >> 1; i < n; i++ )\n        if ( s[ j ] >= s[ i ] * 2 )\n            j++;\n\n    printf( \"%d\\n\", n - j );\n    \n    return 0;\n}"}
{"similarity_score": 0.991, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "6d6fdb14c2bfcca7947ca251d02af523", "bug_code_uid": "4f7ab88e09139c9ac76aadb03ed149b1", "src_uid": "fc97f05864c05950cd9acd9e03f4a729", "apr_id": "c27b7740326fd12f7f73068961283d44", "difficulty": 2400, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100000\n\nint n, a[N], b[N], s[N], id[N], inv[N];\n\nvoid sort (int l, int r) {\n  int i = l, j = r, p = s[(l + r) / 2], tmp;\n  while (i <= j) {\n    while (s[i] < p) ++i;\n    while (p < s[j]) --j;\n    if (i <= j) {\n      tmp = s[i]; s[i] = s[j]; s[j] = tmp;\n      tmp = id[i]; id[i] = id[j]; id[j] = tmp;\n      ++i; --j;\n    }\n  }\n  if (i < r) sort (i, r);\n  if (l < j) sort (l, j);\n}\n\nint main (void) {\n  int i;\n  scanf (\"%d\", &n);\n  for (i = 0; i < n; ++i) id[i] = i;\n  for (i = 0; i < n; ++i) scanf (\"%d\", &s[i]);\n  sort (0, n - 1);\n  for (i = 0; i < n/3; ++i) { a[i] = i; b[i] = s[i] - a[i]; }\n  for (; i < 2 * (n/3); ++i) { b[i] = i; a[i] = s[i] - b[i]; }\n  for (; i < n; ++i) { b[i] = n - i - 1; a[i] = s[i] - b[i]; }\n  printf (\"YES\\n\"); \n  for (i = 0; i < n; ++i) inv[id[i]] = i;\n  for (i = 0; i < n; ++i) printf (\"%d \", a[inv[i]]); printf (\"\\n\");\n  for (i = 0; i < n; ++i) printf (\"%d \", b[inv[i]]); printf (\"\\n\");\n  exit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100000\n\nint n, a[N], b[N], s[N], id[N], inv[N];\n\nvoid sort (int l, int r) {\n  int i = l, j = r, p = s[(l + r) / 2], tmp;\n  while (i <= j) {\n    while (s[i] < p) ++i;\n    while (p < s[j]) --j;\n    if (i <= j) {\n      tmp = s[i]; s[i] = s[j]; s[j] = tmp;\n      tmp = id[i]; id[i] = id[j]; id[j] = tmp;\n      ++i; --j;\n    }\n  }\n  if (i < r) sort (i, r);\n  if (l < j) sort (l, j);\n}\n\nint main (void) {\n  int i;\n  scanf (\"%d\", &n);\n  for (i = 0; i < n; ++i) id[i] = i;\n  for (i = 0; i < n; ++i) scanf (\"%d\", &s[i]);\n  sort (0, n - 1);\n  for (i = 0; i < n/3 + (n%3>0); ++i) { a[i] = i; b[i] = s[i] - a[i]; }\n  for (; i < 2*(n/3) + n%3; ++i) { b[i] = i; a[i] = s[i] - b[i]; }\n  for (; i < n; ++i) { b[i] = n - i - 1; a[i] = s[i] - b[i]; }\n  printf (\"YES\\n\"); \n  for (i = 0; i < n; ++i) inv[id[i]] = i;\n  for (i = 0; i < n; ++i) printf (\"%d \", a[inv[i]]); printf (\"\\n\");\n  for (i = 0; i < n; ++i) printf (\"%d \", b[inv[i]]); printf (\"\\n\");\n  exit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9982758620689656, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9f0e6931185bdf0d73890ec2f1fab5ad", "bug_code_uid": "786a1d627e83a585d6093dfe4999231f", "src_uid": "86a2e0854f9faf0b119d0d5e4b8fe952", "apr_id": "1cbd00415acd6475070ad728c9bef899", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,c1=0,c2=0;\r\n        scanf(\"%d\",&n);\r\n        char str1[n+1],str2[n+1];\r\n        scanf(\"%s\",&str1);\r\n        scanf(\"%s\",&str2);\r\n        for(int i=0;i<n;i++){\r\n            if(str1[i]=='R'||str1[i]=='R'){\r\n                    c1++;\r\n                if(str1[i]==str2[i]){\r\n                    c2++;\r\n                }}\r\n\r\n            }\r\n            if(c1==c2){\r\n                printf(\"YES\\n\");\r\n            }\r\n            else\r\n                printf(\"NO\\n\");\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,c1=0,c2=0;\r\n        scanf(\"%d\",&n);\r\n        char str1[n+1],str2[n+1];\r\n        scanf(\"%s\",&str1);\r\n        scanf(\"%s\",&str2);\r\n        for(int i=0;i<n;i++){\r\n            if(str1[i]=='R'||str2[i]=='R'){\r\n                    c1++;\r\n                if(str1[i]==str2[i]){\r\n                    c2++;\r\n                }}\r\n\r\n            }\r\n            if(c1==c2){\r\n                printf(\"YES\\n\");\r\n            }\r\n            else\r\n                printf(\"NO\\n\");\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9034090909090909, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "40b6b789134d3236bca143ba4182aca8", "bug_code_uid": "1d2fe85c81e9a5ed5866a9332f262919", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "d491c579ee17682204dc0a883c2bf659", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,p=0,q=0,r=0,i,k,m;\n    scanf(\"%d\",&n);\n    int a[n],b[n],c[n],d[n];\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1)\n        {\n            p=p+1;\n            b[p]=i;\n\n        }\n        else if(a[i]==2)\n        {\n            q=q+1;\n            c[q]=i;\n\n        }\n        else if(a[i]==3)\n         {\n             r=r+1;\n             d[r]=i;\n\n         }\n    }\n    if(p>0&&q>0&&r>0)\n    {\n        m=p;\n        if(q<=m)\n        {\n            m=q;\n        }\n        if(r<=m)\n        {\n            r=m;\n        }\n        printf(\"%d\\n\",m);\n        for(k=1;k<=m;k++)\n        {\n            printf(\"%d %d %d\\n\",b[k],c[k],d[k]);\n        }\n    }\n    else\n    {\n        printf(\"0\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,p=0,q=0,r=0,i,k,m;\n    scanf(\"%d\",&n);\n    int a[n],b[n],c[n],d[n];\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1)\n        {\n            p=p+1;\n            b[p]=i;\n\n        }\n        else if(a[i]==2)\n        {\n            q=q+1;\n            c[q]=i;\n\n        }\n        else if(a[i]==3)\n         {\n             r=r+1;\n             d[r]=i;\n\n         }\n    }\n    if(p>0&&q>0&&r>0)\n    {\n        m=(p<q)?((p<r)?p:r):((q<r)?q:r);\n        printf(\"%d\\n\",m);\n        for(k=1;k<=m;k++)\n        {\n            printf(\"%d %d %d\\n\",b[k],c[k],d[k]);\n        }\n    }\n    else\n    {\n        printf(\"0\");\n    }\n}\n"}
{"similarity_score": 0.9034653465346535, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1d9a43f5d80fa970a104493f2bb434af", "bug_code_uid": "45fddb6eb98fbbd582eec2151672c17c", "src_uid": "f0c22161cb5a9bc17320ccd05517f867", "apr_id": "eb1a51d43198a05b67e4a8f5bc996279", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    int n;\r\n    \r\n    scanf(\"%i\", &n);\r\n    \r\n    //unsigned int x, y, z;\r\n    unsigned int a, b, c;\r\n\r\n    for (int i = 0; i < n; ++i)\r\n    {\r\n        scanf(\"%u %u %u\", &a, &b, &c);\r\n        \r\n        printf(\"%u %u %u\\n\", b+a, b, c);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    int n;\r\n    \r\n    scanf(\"%i\", &n);\r\n    \r\n    unsigned int x, y, z;\r\n    unsigned int a, b, c;\r\n\r\n    for (int i = 0; i < n; ++i)\r\n    {\r\n        scanf(\"%u %u %u\", &a, &b, &c);\r\n    \r\n        x = a+b+c;\r\n        y = b+c;\r\n        z = c;\r\n\r\n        printf(\"%u %u %u\\n\", x, y, z);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.99830220713073, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d4a705c65745789724e2f7a2c1991581", "bug_code_uid": "8bc4d3e2001a34e989865a1d3ad1cbc0", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "3fcebce3746df3f6c0b98b1361d3945c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h> \r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int a,b,c,d,e,f;\r\n    int sum1 , sum2;\r\n    for (int  i = 0; i < n; i++)\r\n    {\r\n        char num[6];\r\n        scanf(\"%s\",num);\r\n        a = num[0] - '0';\r\n        b = num[1] - '0';\r\n        c = num[2] - '0';\r\n        d = num[3] - '0';\r\n        e = num[4] - '0';\r\n        f = num[5] - '0';\r\n        sum1 = a + b +c;\r\n        sum2 = d + e + f;\r\n        if (sum1 == sum2)\r\n        {\r\n            printf(\"Yes\");\r\n        }\r\n        else{\r\n            printf(\"No\\n\");\r\n        }\r\n        \r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h> \r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int a,b,c,d,e,f;\r\n    int sum1 , sum2;\r\n    for (int  i = 0; i < n; i++)\r\n    {\r\n        char num[6];\r\n        scanf(\"%s\",num);\r\n        a = num[0] - '0';\r\n        b = num[1] - '0';\r\n        c = num[2] - '0';\r\n        d = num[3] - '0';\r\n        e = num[4] - '0';\r\n        f = num[5] - '0';\r\n        sum1 = a + b +c;\r\n        sum2 = d + e + f;\r\n        if (sum1 == sum2)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else{\r\n            printf(\"No\\n\");\r\n        }\r\n        \r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9415730337078652, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c6189ea494eebbd645fd1e90f39887cc", "bug_code_uid": "485cac8e84839edca27ffc69ea0c2c49", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "abba48f2a6cf38d36062d58b3b5f72b6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,i,j,c; \n    scanf(\"%d\",&n);\n    j=1;\n    for(i=1;i<n;i++)\n    j=j*2;\n    printf(\"%d\\n\",j);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n                if((i%2==0 && j%2==0) || (i%2==1 && j%2==1))\n                {\n                    printf(\"C\");\n                    \n                }\n                else\n                printf(\".\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,x,i,j,c; \n    scanf(\"%d\",&n);\n    j=n*n;\n    j++;\n    j=j/2;\n    printf(\"%d\\n\",j);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n                if((i%2==0 && j%2==0) || (i%2==1 && j%2==1))\n                {\n                    printf(\"C\");\n                    \n                }\n                else\n                printf(\".\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9773913043478261, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "dabeed7bfb93d0a6c41afab29fcee736", "bug_code_uid": "889f86e6ddadea0ef1e058c07f4a0175", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "7231065ccf2e45e94326bf726a4736f2", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,t,n,a[21],j;\n    a[1]=60;a[2]=90;a[3]=108;a[4]=120;a[5]=135;a[6]=140;a[7]=144;a[8]=150;a[9]=156;a[10]=160;a[11]=162;a[12]=165;a[13]=168;a[14]=170;a[15]=171;a[16]=172;a[17]=174;a[18]=175;a[19]=176;a[20]=177;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=1;j<=20;j++)\n        {\n            if(n==a[j]&&j<21)\n            {\n                printf(\"YES\\n\");\n                goto fun;\n            }\n        }\n        printf(\"NO\\n\");\n        fun:\n            continue;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,t,n,a[23],j;\n    a[1]=60;a[2]=90;a[3]=108;a[4]=120;a[5]=135;a[6]=140;a[7]=144;a[8]=150;a[9]=156;a[10]=160;a[11]=162;a[12]=165;a[13]=168;a[14]=170;a[15]=171;a[16]=172;a[17]=174;a[18]=175;a[19]=176;a[20]=177;a[21]=178;a[22]=179;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=1;j<=22;j++)\n        {\n            if(n==a[j]&&j<23)\n            {\n                printf(\"YES\\n\");\n                goto fun;\n            }\n        }\n        printf(\"NO\\n\");\n        fun:\n            continue;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9272727272727272, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "874cf561b01b67901de8146823ef8e3f", "bug_code_uid": "347c3df63161c4898dfc6426b08611ce", "src_uid": "e4381bd9f22c0e49525cc05cc5cd2399", "apr_id": "cb45d80a4da53cae17dd67677eeee711", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d \",&n);\nchar a[n];\nscanf(\"%s\",a);\nint c=0;\nint x=0,y=0,a=0,b=0;\nfor(int i=0;i<n;i++)\n{\nif(a[i]=='U')\n{\ny=y+1;\n}\nif(a[i]=='R')\n{\nx=x+1;\n}\nif(x<y && a>b)\nc++;\nif(x>y && a<b)\nc++;\nif(x!=y)\n{\nl=x;\nm=y;\n}\n\n}\nprintf(\"%d \",c);\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d \",&n);\nchar a[n];\nscanf(\"%s\",a);\nint c=0;\nint x=0,y=0,l=0,m=0,i=0;\nfor( i=0;i<n;i++)\n{\nif(a[i]=='U')\n{\ny=y+1;\n}\nif(a[i]=='R')\n{\nx=x+1;\n}\nif(x<y && l>m)\nc++;\nif(x>y && l<m)\nc++;\nif(x!=y)\n{\nl=x;\nm=y;\n}\n\n}\nprintf(\"%d \",c);\n\nreturn 0;\n}"}
{"similarity_score": 0.8525345622119815, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "346f4c441283d56841e201ec38900737", "bug_code_uid": "34b607281deef1f528775101c696438d", "src_uid": "67a70d58415dc381afaa74de1fee7215", "apr_id": "6e2d886c7d63ca45e844b04a5cdc9042", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint n,m;\nchar s[200001];\nint main()\n{\n    scanf(\"%d%d%s\",&n,&m,&s);\n    for(int i=0;i<m;i++)\n    {\n        char x,y,nl;\n        scanf(\"%c%c\",&nl,&x);\n        scanf(\"%c%c\",&nl,&y);\n        for(int j=0;j<n;j++)\n        {\n            if(s[j]==x) s[j]=y;\n            else\n                if(s[j]==y) s[j]=x;\n        }\n    }\n    printf(\"%s\",s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint n,m;\nchar s[200001],v[30];\nint main()\n{\n    scanf(\"%d%d%s\",&n,&m,&s);\n    for(int i=0;i<n;i++) v[s[i]-'a']=s[i];\n    for(int i=0;i<m;i++)\n    {\n        char x,y,nl;\n        scanf(\"%c%c\",&nl,&x);\n        scanf(\"%c%c\",&nl,&y);\n        for(int j=0;j<=25;j++)\n        {\n            if(v[j]==x) v[j]=y;\n            else if(v[j]==y) v[j]=x;\n        }\n    }\n    for(int i=0;i<n;i++) s[i]=v[s[i]-'a'];\n    printf(\"%s\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.6158995815899582, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ac88712482244fb5785ce8112a7d7fa6", "bug_code_uid": "522b81937b7d5ffbf63a2a5de0cda1b0", "src_uid": "dceeb739a56bb799550138aa8c127996", "apr_id": "a76c181570979daf536ea59b652d5c1c", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,x,i,j;\n    scanf(\"%d %d\", &n, &x);\n    int drinks[n];\n    int type[1000] = {0};\n    for(i=0;i<n;i++)\n        scanf(\"%d\", &drinks[i]);\n\n    for(i=0;i<x;i++){\n        for(j=0;j<n;j++){\n            if(drinks[j] == (x-i))\n                type[i] = type[i]+1;\n\n        }\n    }\n    int tgroup=n,group=0;\n    if(n%2 != 0)\n        tgroup++;\n\n    for(i=0;i<x-1;i++){\n        group = type[i]/2;\n        if(type[i]%2 != 0)\n            group++;\n        tgroup = tgroup - 2*group;\n    }\n\n    tgroup = tgroup - type[x-1];\n    if(tgroup<=0)\n        printf(\"%d\", n+tgroup);\n    else\n        printf(\"%d\", n);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,x,i,j,group = 0,a,b;\n    scanf(\"%d %d\", &n, &x);\n    int drinks[n];\n    int type[1000] = {0};\n    for(i=0;i<n;i++)\n        scanf(\"%d\", &drinks[i]);\n\n    for(i=0;i<x;i++){\n        for(j=0;j<n;j++){\n            if(drinks[j] == (x-i))\n                type[i] = type[i]+1;\n        }\n    }\n\n    int tgroup;\n\n\n    for(i=0;i<x;i++){\n        group =group + type[i]/2;\n    }\n\n    tgroup = n - group*2;\n    if(tgroup%2 != 0)\n        tgroup++;\n    group = group*2+(tgroup/2);\n    printf(\"%d\", group);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8803245436105477, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "10d2944e8440dec25d0c7607eedf188c", "bug_code_uid": "3fa26ff43c9827f9fabdba4751cff96f", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "e57480c5c6f41ae01d080820374ef90e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int n,a,b,c,d,co=1,max,e=0;\n   scanf(\"%d\",&n);\n    n=n-1;\n    scanf(\"%d%d\",&a,&b);\n    c=a;\n    d=b;\n    while(n--){\n        scanf(\"%d%d\",&a,&b);\n        if(a-c==0 && b-d==0){\n            co++;\n        }else{\n            co=1;\n        }\n        if(co>e){\n            max=co;\n        }\n        e=co;\n        c=a;\n        d=b;\n                    \n    }\n    printf(\"%d\",max);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int n,a,b,c,d,co=1,e=1,max;\n   scanf(\"%d\",&n);\n    n=n-1;\n    scanf(\"%d%d\",&a,&b);\n    c=a;\n    d=b;\n    while(n--){\n        scanf(\"%d%d\",&a,&b);\n        if(a-c==0 && b-d==0){\n            co++;\n            \n        }else{\n            co=1;\n        }\n        \n        if(co>e){\n            e=co;\n            \n        }\n        c=a;\n        d=b;\n        \n            \n    }\n    printf(\"%d\",e);\n    return 0;\n}"}
{"similarity_score": 0.302540415704388, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a89b002c0edd4a64a2cb5fd260c938d9", "bug_code_uid": "f8432be813679cd01c6ca83fa6112811", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "970993df341e82a4a00f306a800e448f", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],c,i;\n    scanf(\"%d\",&n);\n    if(2<=n<=100000)\n    {\n        c=n/2;\n    if(n%2==0)\n    {\n        for(i=0;i<c;i++)\n        {\n            a[i]=2;\n        }\n    }\n    else if(n%2==1)\n    {\n        for(i=0;i<c;i++)\n        {\n            a[i]=2;\n            a[c-i]=3;\n        }\n    }\n    printf(\"%d\\n\",c);\n    for(i=0;i<c;i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"%d\\n\",0);\n    }\n    else if(n%2==1)\n    {\n        printf(\"%d\\n\",n/2);\n        while(n>3)\n        {\n            printf(\"%d \",2);\n            n=n-2;\n        }\n        printf(\"%d\\n\",3);\n    }\n    else\n    {\n        printf(\"%d\\n2 \",n/2);\n        n=n-2;\n        while(n>=2)\n        {\n            printf(\"%d \",2);\n            n=n-2;\n        }\n    }\n\n}\n"}
{"similarity_score": 0.5851979345955249, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "6e8a3aed2655a4ac10f90e27a95e3525", "bug_code_uid": "2ea64a3f364a84ce999666bb10e71c67", "src_uid": "ee3c228cc817536bf6c10ea4508d786f", "apr_id": "639d3cc436c2c0aaf5c2a515cd400499", "difficulty": 1700, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tlong long int i,j,k,u,l,n,m,t,a[5005],b[5005],s=0;\n\tscanf(\"%lld%lld%lld\",&n,&m,&u);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%lld\",&b[i]);\n\tfor(i=0;i<u;i++)\n\t{\n\tfor(j=0;j<n;j++)\n\t{\n\t\ts=0;\n\t\tfor(k=j;k<=n;k++)\n\t\t{\n\t\tif((k-j+1)<=m)\n\t\ts=s+b[k];\n\t\telse\n\t\t{\n\t\t\t//printf(\"%lld\\n\",j);\n\t\t\ta[k-1]=s;\n\t\t\t//k--;\n\t\t\tbreak;\n\n\t\t}\n\n\t\t}\n\t}\n\n\t}\n\tfor(j=1;j<n;j++)\n{\nk=a[j];\nfor(i=j-1;i>=0&&k<a[i];i--)\n    a[i+1]=a[i];\na[i+1]=k;\n}n=n-1;\n    s=0;\n    for(i=0;i<u;i++)\n    {\n    \ts=s+a[n--];\n    }\n\n\t/*for(i=0;i<u;i++)\n    {for(j=0;j<n;j++)\n        printf(\"%lld \",a[i][j]);\n        printf(\"\\n\");}*/\n        printf(\"%lld\\n\",s);\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int max(long long int a,long long int b)\n{\n\tif(a>b)return a;\n\telse return b;\n}\nmain()\n{\n\tlong long int i,j,k,u,l,n,m,t,a[5005],b[5005],dp[5005][5005]={0},s=0,ans=0;\n\tscanf(\"%lld%lld%lld\",&n,&m,&u);\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%lld\",&b[i]);\n\t//for(i=1;i<=u;i++)\n\t{\n\tfor(j=1;j<=n;j++)\n\t{\n\t\ts=0;\n\t\tfor(k=j;k<=n+1;k++)\n\t\t{\n\t\tif((k-j+1)<=m)\n\t\ts=s+b[k];\n\t\telse\n\t\t{\n\t\t\t//printf(\"%lld\\n\",s);\n\t\t\ta[k-1]=s;\n\t\t\t//k--;\n\t\t\tbreak;\n\n\t\t}\n\n\t\t}\n\t}\n\n\t}\n\n\t for(i = m; i <= n; i ++) {\n            for(j = 1; j <= u; j ++) {\n                dp[i][j] = max(dp[i][j], dp[i - m][j - 1] + a[i]);\n                dp[i][j] = max(dp[i][j], dp[i - 1][j]);\n                // printf(\"%lld\\n\",dp[i][j]);\n            }\n        }\n\t/*for(j=1;j<n;j++)\n{\nk=a[j];\nfor(i=j-1;i>=0&&k<a[i];i--)\n    a[i+1]=a[i];\na[i+1]=k;\n}n=n-1;\n    s=0;\n    for(i=0;i<u;i++)\n    {\n    \ts=s+a[n--];\n    }\n*/\n\nfor(i = m; i <= n; i ++) {\n            ans = max(ans, dp[i][u]);\n        }\n\t/*for(i=0;i<u;i++)\n    {for(j=0;j<n;j++)\n        printf(\"%lld \",a[i][j]);\n        printf(\"\\n\");}*/\n        printf(\"%lld\\n\",ans);\n        return 0;\n}\n"}
{"similarity_score": 0.9984732824427481, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "39c4155cdf952debeb6eab7d9e52dfac", "bug_code_uid": "93f3b1ea55c622c18250fafa2f8dcf60", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "91cd0a0a0486d88c50d3f3b0473751cd", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100005],i,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n\n        scanf(\"%d\",&a[i]);\n        if(a[i]%2!=0){\n\n            count++;\n            break;\n\n        }\n\n\n\n    }\n    if(count==1){\n\n        printf(\"First\");\n\n\n    }\n    else{\n\n        printf(\"Second\");\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[1000005],i,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n\n        scanf(\"%d\",&a[i]);\n        if(a[i]%2!=0){\n\n            count++;\n            break;\n\n        }\n\n\n\n    }\n    if(count==1){\n\n        printf(\"First\");\n\n\n    }\n    else{\n\n        printf(\"Second\");\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.40221914008321774, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "25ae5a00185c0395c1b4812b8626819e", "bug_code_uid": "f3dbfabb4a9dbad86185d35b2ac355b7", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "2a6a43ea240674288a43ac7a4848b83c", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nvoid main()\r\n{\r\n    int t,i,n;\r\n    long long s2=0,s1=0;\r\n    long long sum=0;\r\n    long long x;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        s1=0,s2=0;\r\n        scanf(\"%d\",&n);\r\n        for (i=1;i<=n;i++)\r\n        {\r\n        scanf(\"%lld\",&x);\r\n            if (x<0)\r\n                s1+=x;\r\n            else\r\n                s2+=x;\r\n\r\n        }\r\n\r\n    sum=abs((-s1)-s2);\r\n    printf(\"%lld\\n\",sum);\r\n    }", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tlong long sum=0,x;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%lld\",&x);\r\n\t\t\tsum+=x;\r\n\t\t}\r\n\t\tif(sum<0)sum=-sum;\r\n\t\tprintf(\"%lld\\n\",sum);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9864986498649865, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "516c5278a713965c86fdc4719f35a88b", "bug_code_uid": "bd55df9efd9776da7f2d43bee6842d69", "src_uid": "379133abc6fd643517542aabad79c57f", "apr_id": "8bcb3811076356397b864cfcddffac0a", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\ntypedef long long int lli;\n\nint main(){\n    lli n,d,s[200007],p[200007],i,new_rank=0,j,ind;\n    scanf(\"%lld %lld\",&n,&d);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &s[i]);\n    }\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &p[i]);\n    }\n    for(i=0;i<d-1;i++){\n        if(s[d-1]+p[0]>=s[i]+p[n-1]){\n            ind = i;\n            break;\n        }\n    }\n    j=1;\n    for(i=ind+1;i<d-1;i++){ \n        s[i]+=p[n-1-j];\n        if(s[i]>s[d-1]+p[0])\n            new_rank++;\n    }\n    printf(\"%lld\\n\",ind+new_rank+1);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\ntypedef long long int lli;\n\nint main(){\n    lli n,d,s[200007],p[200007],i,new_rank=0,j,ind;\n    scanf(\"%lld %lld\",&n,&d);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &s[i]);\n    }\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &p[i]);\n    }\n    ind = d-1;\n    for(i=0;i<d-1;i++){\n        if(s[d-1]+p[0]>=s[i]+p[n-1]){\n            ind = i;\n            break;\n        }\n    }\n    j=1;\n    for(i=ind+1;i<d-1;i++){ \n        s[i]+=p[n-1-j];\n        if(s[i]>s[d-1]+p[0])\n            new_rank++;\n    }\n    printf(\"%lld\\n\",ind+new_rank+1);\n    return 0;\n}"}
{"similarity_score": 0.8380327868852459, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "dc93057644deb709b214d4d717a8c091", "bug_code_uid": "9ad0ed64878e37175fa0122123e19549", "src_uid": "b80fed46a9e2356dad03dd3ec01523d4", "apr_id": "a5008a8fadf33b2c01e012f3a8f208bc", "difficulty": 900, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nvoid sort(int a[],int n)\n{\n\tint i,j;\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-i-1;j++)\n\t\t{\n\t\t\tif(a[j+1]>a[j])\n\t\t\t{\n\t\t\t\tint tmp = a[j+1];\n\t\t\t\ta[j+1] = a[j];\n\t\t\t\ta[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint i,n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\t\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\t\n\tint k=-1,l=-1;\n\tint o[2000],e[2000];\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(arr[i]%2==0)\n\t\t\te[++k] = arr[i];\n\t\telse\n\t\t\to[++l] = arr[i];\t\n\t}\n\t\n\tunsigned long long int sum = 0;\n\t\n\tif(abs(k-l)<=1)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\t\t\t\n\telse if(k>l)\n\t{\n\t\tif(l==-1)\n\t\t{\n\t\t\tfor(i=l+2;i<=k;i++)\n\t\t\t\tsum+=e[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=l+1;i<=k;i++)\n\t\t\t\tsum+=e[i];\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(k==-1)\n\t\t{\n\t\t\tfor(i=k+2;i<=l;i++)\n\t\t\t\tsum+=o[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=k+1;i<=l;i++)\n\t\t\tsum+=o[i];\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nvoid sort(int a[],int n)\n{\n\tint i,j;\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-i-1;j++)\n\t\t{\n\t\t\tif(a[j+1]>a[j])\n\t\t\t{\n\t\t\t\tint tmp = a[j+1];\n\t\t\t\ta[j+1] = a[j];\n\t\t\t\ta[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint i,n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\t\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\t\n\tsort(arr,n);\n\t\n\tint k=-1,l=-1;\n\tint o[2000],e[2000];\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(arr[i]%2==0)\n\t\t\te[++k] = arr[i];\n\t\telse\n\t\t\to[++l] = arr[i];\t\n\t}\n\t\n\tunsigned long long int sum = 0;\n\t\n\tif(abs(k-l)<=1)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\t\t\t\n\telse if(k>l)\n\t{\n\t\tfor(i=l+2;i<=k;i++)\n\t\t\tsum+=e[i];\n\t}\n\telse if(k<l)\n\t{\n\t\tfor(i=k+2;i<=l;i++)\n\t\t\tsum+=o[i];\n\t}\n\t\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7154195011337868, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "2291c794fd0e03c5d417e6f5abd0f6a1", "bug_code_uid": "4950444a0d0da655b4b91969738bd153", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "4019c8267b7bec9164f4908f327d362b", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* Problem: 807A - Is it rated? */\n/* Author: Gusztav Szmolik */\n\n#include <stdio.h>\n\nenum answers {RATED,UNRATED,MAYBE};\n\nint main ()\n    {\n    unsigned short n;\n    enum answers ans;\n    unsigned short aPrev;\n    unsigned short i;\n    unsigned short a;\n    unsigned short b;\n\n    if (scanf(\"%hu\",&n) != 1)\n        return -1;\n    if (n < 2 || n > 1000)\n        return -1;\n    ans = MAYBE;\n    aPrev = 4127;\n    for (i = 0; i < n; i++)\n        {\n        if (scanf(\"%hu %hu\",&a,&b) != 2)\n            return -1;\n        if (a < 1 || a > 4126 || b < 1 || b > 4126)\n            return -1;\n        if (ans != MAYBE)\n            continue;\n        if (a != b)\n            ans = RATED;\n        else if (aPrev < a)\n            ans = UNRATED;\n        aPrev = a;\n        }\n    if (ans == MAYBE)\n        printf (\"maybe\\n\");\n    else\n        printf (ans == RATED ? \"rated\\n\" : \"unrated\\n\");\n    return 0;\n    }\n", "fixed": "/* Problem: 807A - Is it rated? */\n/* Author: Gusztav Szmolik */\n\n#include <stdio.h>\n\nenum answers {RATED,UNRATED,MAYBE};\n\nint main ()\n    {\n    unsigned short n;\n    enum answers ans;\n    unsigned short aPrev;\n    unsigned short i;\n    unsigned short a;\n    unsigned short b;\n\n    if (scanf(\"%hu\",&n) != 1)\n        return -1;\n    if (n < 2 || n > 1000)\n        return -1;\n    ans = MAYBE;\n    aPrev = 4127;\n    for (i = 0; i < n; i++)\n        {\n        if (scanf(\"%hu %hu\",&a,&b) != 2)\n            return -1;\n        if (a < 1 || a > 4126 || b < 1 || b > 4126)\n            return -1;\n        if (a != b)\n            ans = RATED;\n        else if (aPrev < a && ans != RATED)\n            ans = UNRATED;\n        aPrev = a;\n        }\n    if (ans == MAYBE)\n        printf (\"maybe\\n\");\n    else\n        printf (ans == RATED ? \"rated\\n\" : \"unrated\\n\");\n    return 0;\n    }\n"}
{"similarity_score": 0.995159728944821, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d568ed146bf0863af8792cfaae98b60f", "bug_code_uid": "007feed838bd392c17c6a2877fc6bdbf", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "64811a5024477ebaee263aae35c78088", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n        long int n,a,c,i;\n        scanf(\"%ld\",&n);\n        if(n%2==0)\n        {\n                printf(\"%ld\\n\",n/2);\n                for(i=1;i<=n/2;i++)\n                {\n                        printf(\"2 \");\n                }\n        }\n        else\n        {\n                c=n/2;\n                printf(\"%ld\\n\",c);\n                for(i=1;i<c;i++)\n                {\n                        printf(\"2 \");\n                }\n                printf(\"3\");\n        }\n        return 0;\n}\n~  ", "fixed": "#include <stdio.h>\nint main()\n{\n        long int n,c,i;\n        scanf(\"%ld\",&n);\n        if(n%2==0)\n        {\n                printf(\"%ld\\n\",n/2);\n                for(i=1;i<=n/2;i++)\n                {\n                        printf(\"2 \");\n                }\n        }\n        else\n        {\n                c=n/2;\n                printf(\"%ld\\n\",c);\n                for(i=1;i<c;i++)\n                {\n                        printf(\"2 \");\n                }\n                printf(\"3\");\n        }\n        return 0;\n}\n"}
{"similarity_score": 0.9992383853769993, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2a371f257220a2d88641817869f7632a", "bug_code_uid": "1a6eabb30e361e63a81c7a04bd6a0b06", "src_uid": "02062d1afe85e3639edddedceac304f4", "apr_id": "5e1645e93691ec8d62ed995f0f063653", "difficulty": 1100, "tags": ["dp", "binary search", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,num;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int card=0,count=0,i=1;\n        scanf(\"%d\",&num);\n        for(i=1;i<=10000;i++)\n        {\n            card=i*2+(i-1)*i*3/2;\n            if(card==num)\n            {\n                count=1;\n                goto end;\n            }\n        }\n        for(i=1;num>1;i++)\n        {\n            card=i*2+(i-1)*i*3/2;\n            if(card>num)\n            {\n                i--;\n                num=num-(i*2+(i-1)*i*3/2);\n                count++;\n                i=1;\n            }\n            \n        }\n        end:\n        printf(\"%d\\n\",count);\n        \n    }\n    \n}b", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,num;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int card=0,count=0,i=1;\n        scanf(\"%d\",&num);\n        for(i=1;i<=10000;i++)\n        {\n            card=i*2+(i-1)*i*3/2;\n            if(card==num)\n            {\n                count=1;\n                goto end;\n            }\n        }\n        for(i=1;num>1;i++)\n        {\n            card=i*2+(i-1)*i*3/2;\n            if(card>num)\n            {\n                i--;\n                num=num-(i*2+(i-1)*i*3/2);\n                count++;\n                i=1;\n            }\n            \n        }\n        end:\n        printf(\"%d\\n\",count);\n        \n    }\n    \n}"}
{"similarity_score": 0.3944099378881988, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "d6600a71973269dbbed9d49831c90f0b", "bug_code_uid": "8715c29273d0d7a74369c884257a68b3", "src_uid": "6f819ce1d88d5211cd475a8673edba97", "apr_id": "a2cfe23ebfe87d59ceb474cec93800de", "difficulty": 800, "tags": ["brute force", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n    while(a--){\r\n    \tint m,n,x,y,p,q,t=0;\r\n\t    scanf(\"%d%d%d%d%d%d\",&m,&n,&x,&y,&p,&q);\r\n\t\twhile(x!=p&&y!=q){\r\n\t\t\tif(x+1>m||x+1<1)x=-x;\r\n\t\t\tif(y+1>n||y+1<1)y=-y;\r\n\t\t\tt++;\r\n\t\t\tx++;\r\n\t\t\ty++;\r\n\t\t}\r\n\t    printf(\"%d\\n\",t);\t\r\n\t}\r\n\treturn 0;\r\n\t\r\n} \r\n", "fixed": "#include<stdio.h>\r\nint lian(){\r\n\tint m,n,r,s,p,q,t=0;\r\n\tscanf(\"%d%d%d%d%d%d\",&m,&n,&r,&s,&p,&q);\r\n\tint x=1,y=1;\r\n\twhile(r!=p&&s!=q){\r\n\t\t\tif(x+r>m||x+r<1)x=-x;\r\n\t\t\tif(y+s>n||y+s<1)y=-y;\r\n\t\t\tt++;\r\n\t\t\tr+=x;\r\n\t\t\ts+=y;\r\n\t\t\t\r\n\t}\r\n\tprintf(\"%d\\n\",t);\r\n}\r\nint main(){\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n    while(a>0){\r\n    \ta--;\r\n    \tlian();\r\n\t}\r\n\t\r\n} \r\n"}
{"similarity_score": 0.291970802919708, "equal_cnt": 19, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "5cf1f20b7920a25da71f59dc3409c412", "bug_code_uid": "a41f76ba9377ba911947b1e9fa566c9b", "src_uid": "dbe12a665c374ce3745e20b4a8262eac", "apr_id": "3d15f7fdb6d2c2f1fc3e241e50ecb82b", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int i,j,len1,len2;\r\n        char str1[27],str2[51];\r\n        scanf(\"%s %s\",str1,str2);\r\n        len1=strlen(str1);\r\n        len2=strlen(str2);\r\n        for(i=1;i<len1;i++){\r\n            int c=i;\r\n            scanf(\"%d\",&c);\r\n        \r\n        for(j=1;j<len2;j++){\r\n            for(i=1;i<len1;i++){\r\n            if(str2[j]==str1[i]){\r\n                str2[j]=c;\r\n                scanf(\"%d\",&d);\r\n            }\r\n        }\r\n        }\r\n        int dif=str2[j+1]-str2[j];\r\n        printf(\"%d\\n\",&dif);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\ntypedef long long ll;\r\n\r\nll is_odd(ll x) { return x % 2 == 0; }\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        ll x, n;\r\n        scanf(\"%lld%lld\", &x, &n);\r\n        ll d = 0;\r\n        while (n % 4) {\r\n            if (n % 4 == 3 || n % 4 == 2)\r\n                d -= n;\r\n            else\r\n                d += n;\r\n            n--;\r\n        }\r\n        printf(\"%lld\\n\", x + (is_odd(x) ? -d : d));\r\n    }\r\n    \r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.3805668016194332, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c491675929b05208cf178b64f418e4d1", "bug_code_uid": "cf9905a82a2be74122ff187c9c5f8842", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "66fa9bbbf4a036b0c101cd0c5a44a2e0", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint c=1,n,flag=0;int t,t1,small;\n\t\n\t\n\tscanf(\"%d\",&n);\n\t\n\tscanf(\"%d\",&t);\n\tsmall=t;\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\t\n\tscanf(\"%d\",&t1);\n\tif(small>t1)\n\t{\n\t\tsmall=t1;\n\t\tc=i;\n\t}\n\telse if(small==t1)\n\t{\n\t\tflag=1;\n\t}\n}\nc=c+1;\nif(flag==0)\n{\n\tprintf(\"%d\",c);\n}\nelse\n{\n\tprintf(\"Still Rozdil\");\n}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint flag=0,c=0,n;\n\tscanf(\"%d\",&n);\n\tint a[100000];\n\tfor(int i=0;i<=0;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint minimum=a[0];\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]<minimum)\n\t\t{\n\t\t\tminimum=a[i];\n\t\t\tc=i;\n\t\t}\n\t\t\n\t}\n\tfor(int i=0;i<=n-1;i++)\n\t{\n\t\tif(minimum==a[i])\n\t\t{\n\t\t\tflag=flag+1;\n\t\t}\n\t}\n\tif(flag==1)\n\t{\n\t\tprintf(\"%d\",c+1);\n\t}\n\telse\n\t{\n\t\tprintf(\"Still Rozdil\");\n\t}\n\treturn 0;\n\t}\n"}
{"similarity_score": 0.17707150964812712, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "680d031b9e45ac6782ab417e907ec8da", "bug_code_uid": "f00ae9cd79b5277ef55f7a586b20a64f", "src_uid": "02b7ff5e0b7f8cd074d9e76251c2725e", "apr_id": "17c2befd63af3561e4cdcda3639b1712", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int a[n+2];\n    int i,j,k,pos=1;\n\n    for(i=1;i<=n;i++)\n    a[i]=-1;\n\n\n    for(i=1;i<=n;i++)\n    {\n        int left,cnt;\n        left=n-i+1;\n        left=(i%left) +1;\n\n        for(j=pos,cnt=0;;j++)\n        {\n            if(j>n)\n            j=1;\n    \n            if(a[j]==-1)\n            cnt++;//    printf(\"        Cnt=%d\\n\",cnt);    \n\n            if(cnt==left)\n            break;\n        }\n\n    a[j]=i; //printf(\"Cur=%d\\n\",a[j]);\n    pos=j;\n\n    }\n\n    for(k=1;k<=n;k++)\n    printf(\"%d \",a[k]);\n//  printf(\"\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int lef,rig;\n    lef=1;\n    rig=n;\n\n    while(rig-lef>=1)\n    {\n        printf(\"%d %d \",lef,rig);\n        lef+=1;\n        rig-=1;\n    }\n    \n    if(n%2==1)\n    printf(\"%d\",((n/2)+1));\n    return 0;\n}"}
{"similarity_score": 0.8097385031559964, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "76d2994d1173c82447647a8af62542f6", "bug_code_uid": "ae2132ae35109281ed49bd62a888ee1b", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "345b955d609f9037ce87d1e3dec08630", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    long long a,b,t,i,n,c=0;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%lld%lld%lld\",&a,&b,&n);\n        if(a<b){\n            a=a+b;\n            c++;\n        }\n        else{\n            b=b+a;\n            c++;\n        }\n        while(a<=n&&b<=n){\n            a=a+b;\n            c++;\n            if(a<=n&&b<=n){\n            b=a+b;\n            c++;\n                \n            }\n            \n            \n        }\n        \n        printf(\"%lld\\n\",c);\n        c=0;\n        \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    long long a,b,t,i,n,c=0;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%lld%lld%lld\",&a,&b,&n);\n        if(a<b){\n            a=a+b;\n            c++;\n        }\n        else{\n            b=b+a;\n            c++;\n        }\n        while(a<=n&&b<=n){\n            \n                \n             if(a<b){\n            a=a+b;\n            c++;\n        }\n        else{\n            b=b+a;\n            c++;\n        }\n            \n            \n        }\n        \n        printf(\"%lld\\n\",c);\n        c=0;\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.5512820512820513, "equal_cnt": 21, "replace_cnt": 8, "delete_cnt": 8, "insert_cnt": 5, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "03f6c01c424f51c14cde1aad359db34e", "bug_code_uid": "1c14f48404859354606b77a87b515fe7", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "b347b06993542f1bda85461882590023", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t) ;\r\n\tfor(int i=0;i<t;i++){\r\n\t\tint n,s;\r\n\t\tscanf(\"%d%d\",&n,&s);\r\n\t\tif(s<n*n)printf(\"0\\n\");\r\n\t\telse{\r\n\t\t\tint count=0;\r\n\t\t\twhile(s>=0){\r\n\t\t\t\ts-=n*n;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\",count-1);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#define ll long long\r\nint main(){\r\n\tll t;\r\n\tscanf(\"%lld\",&t);\r\n\twhile(t--){\r\n\t\tll n,s;\r\n\t\tscanf(\"%lld%lld\",&n,&s);\r\n\t\tprintf(\"%lld\\n\",s/(n*n));\r\n\t}\r\n}"}
{"similarity_score": 0.993581514762516, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e42adfe008b032a3b9c667225ac5ad04", "bug_code_uid": "8a1ca0b7c9d7a951c038c64a5cd0dfba", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "3be72713ae83dc4f46185ef023201ca4", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\r\n{\r\n\tint t,i,j,k,n,a[200],min,max,c;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=0;j<1000;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tif(a[j]==1)\r\n\t\t\tmin=j+1;\r\n\t\t\tif(a[j]==n)\r\n\t\t\tmax=j+1;\r\n\t\t}\r\n\t\tif(min>max)\r\n\t\t{\r\n\t\t\tk=min;\r\n\t\t\tmin=max;\r\n\t\t\tmax=k;\r\n\t\t}\r\n\t\tc=max;\r\n\t\tif(c>n+1-min)\r\n\t\tc=n+1-min;\r\n\t\tif(c>min+n+1-max)\r\n\t\tc=min+n+1-max;\r\n\t\tprintf(\"%d\\n\",c);\r\n\t}\r\n } ", "fixed": "int main()\r\n{\r\n\tint t,i,j,k,n,a[200],min,max,c;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tif(a[j]==1)\r\n\t\t\tmin=j+1;\r\n\t\t\tif(a[j]==n)\r\n\t\t\tmax=j+1;\r\n\t\t}\r\n\t\tif(min>max)\r\n\t\t{\r\n\t\t\tk=min;\r\n\t\t\tmin=max;\r\n\t\t\tmax=k;\r\n\t\t}\r\n\t\tc=max;\r\n\t\tif(c>n+1-min)\r\n\t\tc=n+1-min;\r\n\t\tif(c>min+n+1-max)\r\n\t\tc=min+n+1-max;\r\n\t\tprintf(\"%d\\n\",c);\r\n\t}\r\n } "}
{"similarity_score": 0.9949523275378576, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fc864dc74a6cd9c71e9774e1a7c045d4", "bug_code_uid": "0c1985b7bff16944c6678f918fb09822", "src_uid": "2031f2ac5652609fda77830e93ffcc2c", "apr_id": "948e2ad76d3234cdeb901f41fe36d9be", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n;\n    int a[200000];\n    int ans[200000];\n    memset(ans, -1, sizeof(ans));\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; ++i) {\n        scanf(\"%d\", &a[i]);\n    }\n    for(int i = 0; i < n; ++i) {\n        if(a[i] == 0) {\n            ans[i] = 0;\n            for(int j = i - 1; j >= 0; --j) {\n                int cur = i - j;\n                if(ans[j] == -1) {\n                    ans[j] = cur;\n                } else {\n                    if(cur > ans[j]) {\n                        break;\n                    }\n                    ans[j] = cur;\n                }\n            }\n            int j;\n            for(j = i + 1; a[j] != 0; ++j) {\n                ans[j] = j - i;\n            }\n            i = j - 1;\n        }\n    }\n    for(int i = 0; i < n; ++i) {\n        printf(\"%d \", ans[i]);\n    }\n    puts(\"\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n;\n    int a[200000];\n    int ans[200000];\n    memset(ans, -1, sizeof(ans));\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; ++i) {\n        scanf(\"%d\", &a[i]);\n    }\n    for(int i = 0; i < n; ++i) {\n        if(a[i] == 0) {\n            ans[i] = 0;\n            for(int j = i - 1; j >= 0; --j) {\n                int cur = i - j;\n                if(ans[j] == -1) {\n                    ans[j] = cur;\n                } else {\n                    if(cur > ans[j]) {\n                        break;\n                    }\n                    ans[j] = cur;\n                }\n            }\n            int j;\n            for(j = i + 1; a[j] != 0 && j < n; ++j) {\n                ans[j] = j - i;\n            }\n            i = j - 1;\n        }\n    }\n    for(int i = 0; i < n; ++i) {\n        printf(\"%d \", ans[i]);\n    }\n    puts(\"\");\n    return 0;\n}\n"}
{"similarity_score": 0.9949238578680203, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2c4bf281955df60751fd40b42e118353", "bug_code_uid": "1d4d943b79eb3e0c22b8bda42034e2b1", "src_uid": "0a720a0b06314fde783866b47f35af81", "apr_id": "43aa47c8abd9ff4c68f2d43e27011aa0", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,a,b,t,s;\n    scanf(\"%d\",&t);\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        if(a>b)\n        {\n            s=a;\n            a=b;\n            b=s;\n        }\n        /*if(2*a<b)\n            printf(\"NO\\n\");*/\n        if( 2*a>=b || (2*a-b)%3==0)\n            printf(\"yes\\n\");\n        else\n            printf(\"NO\\n\");\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,a,b,t,s;\n    scanf(\"%d\",&t);\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        if(a>b)\n        {\n            s=a;\n            a=b;\n            b=s;\n        }\n        /*if(2*a<b)\n            printf(\"NO\\n\");*/\n        if( 2*a>=b && (2*a-b)%3==0)\n            printf(\"yes\\n\");\n        else\n            printf(\"NO\\n\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.997920997920998, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5ff3bac383c9b0a1052ced0decff76eb", "bug_code_uid": "ab133cbfef89d3712533d9b462b65143", "src_uid": "4a473e34f2be18a19c306d80d4693199", "apr_id": "2e8160ebc892ef8299ccab1d04a20338", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint t, n, i, j;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t-->0){\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor(i = 1;i<=n;i++){\r\n\t\t\tfor(j = 1;j<=i;j++){\r\n\t\t\t\tprintf(\"%d\", (j==1||j==i)?1:0);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint t, n, i, j;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t-->0){\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor(i = 1;i<=n;i++){\r\n\t\t\tfor(j = 1;j<=i;j++){\r\n\t\t\t\tprintf(\"%d \", (j==1||j==i)?1:0);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9456740442655935, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "b7b129e558963d33d3198b759d08a19d", "bug_code_uid": "c74b9962fdb2e0f15960f39134995fe4", "src_uid": "78cdbd4869982e417aa7975dd7a9f608", "apr_id": "a6bd643e51f4771b0e487850e9c03ad1", "difficulty": 3200, "tags": ["data structures", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long max=0,temp;\n\tint i,j,k,n;\n\tscanf(\"%d\",&n);\n\tlong buffer[n];\n\tint used[n];\n\tlong cur[n];\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%d\",&buffer[i]);\n\t\tmax+=buffer[i]*i;\n\t\tused[i]=1;\n\t\tif(i==0) cur[i]=buffer[i];\n\t\telse cur[i]=cur[i-1]+buffer[i];\n\t}\n\tfor(;;) {\n\t\tchar change=0;\n\t\tk=1;\n\t\ttemp=0;\n\t\tfor(j=0;j<n;j++) {\n\t\t\tif(used[j] && buffer[j]*k+cur[n-1]-cur[j]<0) {\n\t\t\t\tused[j]=0;\n\t\t\t\tchange=1;\n\t\t\t}\n\t\t\tif(!used[j] && buffer[j]*k+cur[n-1]-cur[j]>=0) {\n\t\t\t\tused[j]=1;\n\t\t\t\tchange=1;\n\t\t\t}\n\t\t\tif(used[j]) {\n                cur[j]=cur[j-1]+buffer[j];\n                temp+=buffer[j]*k;\n                k++;\n\t\t\t}\n\t\t\telse cur[j]=cur[j-1];\n\t\t}\n\t\tif(temp>max) max=temp;\n\t\tif(change==0) break;\n\t}\n\tprintf(\"%d\",max);\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long max=0,temp;\n\tint i,j,k,n;\n\tscanf(\"%d\",&n);\n\tint buffer[n];\n\tchar used[n];\n\tlong long cur[n];\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%d\",&buffer[i]);\n\t\tmax+=1LL*buffer[i]*i;\n\t\tused[i]=1;\n\t\tif(i==0) cur[i]=buffer[i];\n\t\telse cur[i]=cur[i-1]+buffer[i];\n\t}\n\tfor(;;) {\n\t\tchar change=0;\n\t\tk=1;\n\t\ttemp=0;\n\t\tfor(j=0;j<n;j++) {\n\t\t\tif(used[j] && 1LL*buffer[j]*k+cur[n-1]-cur[j]<0) {\n\t\t\t\tused[j]=0;\n\t\t\t\tchange=1;\n\t\t\t}\n\t\t\tif(!used[j] && 1LL*buffer[j]*k+cur[n-1]-cur[j]>=0) {\n\t\t\t\tused[j]=1;\n\t\t\t\tchange=1;\n\t\t\t}\n\t\t\tif(used[j]) {\n                cur[j]=cur[j-1]+buffer[j];\n                temp+=1LL*buffer[j]*k;\n                k++;\n\t\t\t}\n\t\t\telse cur[j]=cur[j-1];\n\t\t}\n\t\tif(temp>max) max=temp;\n\t\tif(change==0) break;\n\t}\n\tprintf(\"%I64d\",max);\n}"}
{"similarity_score": 0.9063250600480385, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3348a7c69dabb0cb5749d49f5c16aaa6", "bug_code_uid": "c359e1db3e6efc3ee59552daa27a86f6", "src_uid": "6e0dafeaf85e92f959c388c72e158f68", "apr_id": "fda6e0c90d11eb15a98bc969b77db54d", "difficulty": 1000, "tags": ["constructive algorithms", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int a,b,c,e,i,j;\n   e=0;\n   scanf(\"%d %d %d\",&c,&a,&b);\n   int vet[a][b];\n   if(a*b>=c){\n   if(b%2==0){\n        for(j=0;j<a;j++){\n    for(i=0;i<b;i++){\n            if(j%2==0){vet[j][i]=((i+1)+b*j); }else{vet[j][(b-1-i)]=(i+1)+b*j;\n       }\n   }\n   }}else{ for(j=0;j<a;j++){\n    for(i=0;i<b;i++){\n            if(((i+1)+ b*(j))<= c){\n       vet[j][i]=(i+1)+ b*(j);}else{vet[j][i]=0;}\n\n    }\n   }}\n   for(j=0;j<a;j++){\n        printf(\"\\n\");\n    for(i=0;i<b;i++){\n       printf(\"%d \",vet[j][i]);\n\n    }\n   }\n}else{printf(\"-1\");}\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int a,b,c,e,i,j;\n   e=0;\n   scanf(\"%d %d %d\",&c,&a,&b);\n   int vet[a][b];\n   if(a*b>=c){\n   if(b%2==0){\n        for(j=0;j<a;j++){\n    for(i=0;i<b;i++){\n\n            if(j%2==0){if((i+1)+b*j<c+1){vet[j][i]=((i+1)+b*j);}else{vet[j][i]=0; }}else{if((i+1)+b*j<c+1){vet[j][(b-1-i)]=(i+1)+b*j;\n       }else{vet[j][(b-1-i)]=0;}}\n   }\n   }}else{ for(j=0;j<a;j++){\n    for(i=0;i<b;i++){\n            if(((i+1)+ b*(j))<= c){\n       vet[j][i]=(i+1)+ b*(j);}else{vet[j][i]=0;}\n\n    }\n   }}\n   for(j=0;j<a;j++){\n        printf(\"\\n\");\n    for(i=0;i<b;i++){\n       printf(\"%d \",vet[j][i]);\n\n    }\n   }\n}else{printf(\"-1\");}\n\n}\n"}
{"similarity_score": 0.9984496124031008, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "33336a2e2679e0a3d581e4be43de3ab5", "bug_code_uid": "78bb5988e5c58702b4aeae1a7b0203fb", "src_uid": "8051385dab9d7286f54fd332c64e836e", "apr_id": "bcdecd6d8f5a82a8f2f45d00843d6a83", "difficulty": 1300, "tags": ["implementation", "sortings", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint n, tmp, r[1000001], c[1000001], res[801];\n\nint main() {\n    int i, j, cur=0;\n    \n    scanf(\"%d\", &n);\n    for(i=2; i<=2*n; i++){\n        for(j=1; j<i; i++){\n            scanf(\"%d\", &tmp);\n            r[tmp] = i;\n            c[tmp] = j;\n        }\n    }\n    \n    for(i=1000000; i>0; i--){\n        if(r[i] != 0 && res[r[i]] == 0 && res[c[i]] == 0){\n            res[r[i]] = c[i];\n            res[c[i]] = r[i];\n            cur++;\n        }\n        if(cur == n){\n            break;\n        }\n    }\n    \n    for(i=1; i<=2*n; i++){\n        printf(\"%d \", res[i]);\n    }\n    printf(\"\\n\");\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint n, tmp, r[1000001], c[1000001], res[801];\n\nint main() {\n    int i, j, cur=0;\n    \n    scanf(\"%d\", &n);\n    for(i=2; i<=2*n; i++){\n        for(j=1; j<i; j++){\n            scanf(\"%d\", &tmp);\n            r[tmp] = i;\n            c[tmp] = j;\n        }\n    }\n    \n    for(i=1000000; i>0; i--){\n        if(r[i] != 0 && res[r[i]] == 0 && res[c[i]] == 0){\n            res[r[i]] = c[i];\n            res[c[i]] = r[i];\n            cur++;\n        }\n        if(cur == n){\n            break;\n        }\n    }\n    \n    for(i=1; i<=2*n; i++){\n        printf(\"%d \", res[i]);\n    }\n    printf(\"\\n\");\n    \n    return 0;\n}\n"}
{"similarity_score": 0.9351081530782029, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1f71a38dfcbdc9cb1b722c64e264ad27", "bug_code_uid": "ccadfd23f6ff1dd47a73bb4719688b48", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "73326fd919feaaff7915e7c3e929fdce", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\t{\n\t\n\tint flag=0;\n\tint n,a,i;\n\t\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\t{\n\t\tscanf(\"%d\",&a);\n\t\tif(a==0)\tflag++;\n\t}\n\tif(flag)\t{\n\t\tif(n == 1)\t\tputs(\"NO\");\n\t\telse\t{\n\t\t\tif(flag == 1)\tputs(\"YES\");\n\t\t\telse\t\t\tputs(\"NO\");\n\t\t}\n\t\t\t\n\t}\n\telse\tputs(\"NO\");\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\t{\n\t\n\tint flag=0;\n\tint n,a,i;\n\t\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\t{\n\t\tscanf(\"%d\",&a);\n\t\tif(a==0)\tflag++;\n\t}\n\tif(flag)\t{\n\t\tif(n == 1)\t\tputs(\"NO\");\n\t\telse\t{\n\t\t\tif(flag == 1)\tputs(\"YES\");\n\t\t\telse\t\t\tputs(\"NO\");\n\t\t}\n\t\t\t\n\t}\n\telse\t{\n\t\tif(n == 1)\tputs(\"YES\");\n\t\telse\t\tputs(\"NO\");\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.24177071509648126, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "d6e0e4e3c7944d73ff0fb513fee59ff1", "bug_code_uid": "33446a52ef6bc9fb6644d3f74abc676c", "src_uid": "805d82c407c1b34f217f8836454f7e09", "apr_id": "720012a9e562ad20ae8c268558323cc1", "difficulty": 1800, "tags": [], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<tuple>\n#include<set>\n#include<utility>\n#include<map>\nusing namespace std;\ntypedef long long ll;\nusing namespace std;\ninline int gcd(ll x, int y) {\n\tll a;\n\tif (x > y) {\n\t\ta = x; x = y; y = a;\n\t}\n\twhile (x) {\n\t\ta = y%x;\n\t\ty = x;\n\t\tx = a;\n\t}\n\treturn y;\n}\nint main() {\n\tint i, N; ll a, g; vector<ll> A;\n\tcin >> N;\n\tfor (i = 0; i < N; i++) {\n\t\tcin >> a;\n\t\tA.push_back(a);\n\t}\n\tsort(A.begin(), A.end());\n\tg = A[1] - A[0];\n\tfor (i = 2; i < N; i++) {\n\t\tg = gcd(g, A[i] - A[i - 1]);\n\t}\n\tll ans = 0;\n\tfor (i = 1; i < N; i++) {\n\t\tans += (A[i] - A[i - 1]) / g - 1;\n\t}\n\tcout << ans;\n}", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n#define NN 100000\ntypedef long long ll;\nll A[NN], B[NN];\n\nvoid merging(int low, int mid, int high) {\n\tint l1, l2, i;\n\n\tfor (l1 = low, l2 = mid + 1, i = low; l1 <= mid && l2 <= high; i++) {\n\t\tif (A[l1] <= A[l2])\n\t\t\tB[i] = A[l1++];\n\t\telse\n\t\t\tB[i] = A[l2++];\n\t}\n\n\twhile (l1 <= mid)\n\t\tB[i++] = A[l1++];\n\n\twhile (l2 <= high)\n\t\tB[i++] = A[l2++];\n\n\tfor (i = low; i <= high; i++)\n\t\tA[i] = B[i];\n}\n\nvoid sort(int low, int high) {\n\tint mid;\n\n\tif (low < high) {\n\t\tmid = (low + high) / 2;\n\t\tsort(low, mid);\n\t\tsort(mid + 1, high);\n\t\tmerging(low, mid, high);\n\t}\n\telse {\n\t\treturn;\n\t}\n}\n\ninline ll gcd(ll x, ll y) {\n\tll a;\n\tif (x > y) {\n\t\ta = x; x = y; y = a;\n\t}\n\twhile (x) {\n\t\ta = y%x;\n\t\ty = x;\n\t\tx = a;\n\t}\n\treturn y;\n}\nint main() {\n\tint i, N; ll g;\n\tscanf(\"%d\", &N);\n\tfor (i = 0; i < N; i++) {\n\t\tscanf(\"%lld\", A+i);\n\t}\n\tsort(0, N - 1);\n\tg = A[1] - A[0];\n\tfor (i = 2; i < N; i++) {\n\t\tg = gcd(g, A[i] - A[i - 1]);\n\t}\n\tll ans = 0;\n\tfor (i = 1; i < N; i++) {\n\t\tans += (A[i] - A[i - 1]) / g - 1;\n\t}\n\tprintf(\"%lld\", ans);\n}"}
{"similarity_score": 0.9907640638119227, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "35446acd2d7a8852c80c30ad9a076c0d", "bug_code_uid": "3e4427f0cc7bd7fdfcaabab7e6792367", "src_uid": "eca92beb189c4788e8c4744af1428bc7", "apr_id": "0683259b8411704a115a636da363359b", "difficulty": 1100, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,i,a,c,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        for(i=0,c=0;i<n;i++)\n        {\n            scanf(\"%d\",&a);\n            if(a)\n                c++;\n        }\n        if(c+c>n)\n        {\n            n=n>>1;\n            printf(\"%d\\n\",n);\n            for(i=0;i<n;i++)\n                printf(\"1 \");\n            printf(\"\\n\");\n        }\n        else\n        {\n            c=n-c;\n            printf(\"%d\\n\",c);\n            for(i=0;i<c;i++)\n                printf(\"0 \");\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,i,a,c,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        for(i=0,c=0;i<n;i++)\n        {\n            scanf(\"%d\",&a);\n            if(a)\n                c++;\n        }\n        if(c+c>n)\n        {\n            n=c-(c%2);\n            printf(\"%d\\n\",n);\n            for(i=0;i<n;i++)\n                printf(\"1 \");\n            printf(\"\\n\");\n        }\n        else\n        {\n            c=n-c;\n            printf(\"%d\\n\",c);\n            for(i=0;i<c;i++)\n                printf(\"0 \");\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9916317991631799, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d8846bd0824820e8b557711aac60252b", "bug_code_uid": "6924f764fd8592961caae164580c291a", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "5a1240528e4090877fa0acfcb7858459", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,m;\n        scanf(\"%d%d\",&n,&m);\n        if(n%m==0)\n            printf(\"YES\");\n        else\n            printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,m;\n        scanf(\"%d%d\",&n,&m);\n        if(n%m==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9808, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6411f0700cd7d51a52e97185675110a5", "bug_code_uid": "a8428405d487206c8e4c02bb36aaaa96", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "6a444179a58a1d1983b1277da0dd640e", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\n   int n,i,c=0,j;\n   char **p, ch[100];\n\n   do{\n   scanf(\"%i\",&n);\n   }\n   while(n<1 ||n>100);\n\n   p=malloc(n*sizeof(char*));\n\n   for(i=0;i<=n-1;i++){\n       do{ gets(ch);\n        p[i]=malloc(strlen(ch)*sizeof(char));\n        strcpy(p[i],ch);\n\n        }\n        while(strlen(p[i])<1 || strlen(p[i])>100);\n\n   }\n\n   for(i=0;i<=n-1;i++){\n        c=0;\n     if(strlen(p[i])-1>10){\n        for(j=1;j<=strlen(p[i])-2;j++)\n          c=c+1;\n        printf(\"%c%i%c\\n\",p[i][0],c,p[i][strlen(p[i])-1]);\n        }\n        else puts(p[i]);\n\n     }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\n   int n,i,c=0,j;\n   char **p, ch[100];\n\n   do{\n   scanf(\"%i\",&n);\n   }\n   while(n<1 ||n>100);\n\n   p=malloc(n*sizeof(char*));\n\n   for(i=0;i<=n-1;i++){\n       do{ gets(ch);\n        p[i]=malloc((strlen(ch)+1)*sizeof(char));\n        strcpy(p[i],ch);\n\n        }\n        while(strlen(p[i])<1 || strlen(p[i])>100);\n\n   }\n\n   for(i=0;i<=n-1;i++){\n        c=0;\n     if(strlen(p[i])>10){\n        for(j=1;j<=strlen(p[i])-2;j++)\n          c=c+1;\n        printf(\"%c%i%c\\n\",p[i][0],c,p[i][strlen(p[i])-1]);\n        }\n        else puts(p[i]);\n\n     }\n    return 0;\n}"}
{"similarity_score": 0.9962476547842402, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e8cdb14b78b50d0a6de7bf21040f0168", "bug_code_uid": "838db18fff6f8d3ed98d4c9b13315b7b", "src_uid": "1bd1a7fd2a07e3f8633d5bc83d837769", "apr_id": "0387041299745a20420cef9640cbf714", "difficulty": 1500, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long n, i;\n    scanf(\"%ld\", &n);\n    if (n <= 3) printf(\"NO\\n\");\n    else {\n        printf(\"YES\\n\");\n        if (n % 2){\n            printf(\"2 - 1 = 1\\n1 + 3 = 4\\n4 * 5 = 20\\n20 + 4 = 24\\n\");\n            for (i = 6; i <= n; i += 2) printf(\"%ld - %ld = 1\\n24 * 1 = 24\", i + 1, i);\n        }else {\n            printf(\"1 * 2 = 2\\n2 * 3 = 6\\n6 * 4 = 24\\n\");\n            for (i = 5; i <= n; i += 2) printf(\"%ld - %ld = 1\\n24 * 1 = 24\", i + 1, i);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long n, i;\n    scanf(\"%ld\", &n);\n    if (n <= 3) printf(\"NO\\n\");\n    else {\n        printf(\"YES\\n\");\n        if (n % 2){\n            printf(\"2 - 1 = 1\\n1 + 3 = 4\\n4 * 5 = 20\\n20 + 4 = 24\\n\");\n            for (i = 6; i <= n; i += 2) printf(\"%ld - %ld = 1\\n24 * 1 = 24\\n\", i + 1, i);\n        }else {\n            printf(\"1 * 2 = 2\\n2 * 3 = 6\\n6 * 4 = 24\\n\");\n            for (i = 5; i <= n; i += 2) printf(\"%ld - %ld = 1\\n24 * 1 = 24\\n\", i + 1, i);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5573997233748271, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "163bd284ecb5108cf72b0e6dcb085a43", "bug_code_uid": "7de4c1368de0ef0eefaf30ac0d0a737a", "src_uid": "4798211615bcff8730378330756ae63f", "apr_id": "b4b70daab3f8e7e25aac717f89ba5986", "difficulty": 2000, "tags": ["dp", "binary search", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main () {\n    int n, i, j, x, suma_i = 0, suma_j = 0, suma_x = 0, z = 0, suma = 0, pro, cont = 0;\n\n    scanf (\"%d\", &n);\n    int v[n];\n\n    for (i = 0; i < n; i++) {\n        scanf (\"%d\", &v[i]);\n        suma = suma + v[i];\n    }\n\n    pro = suma / 3;\n    for (i = 0; i < n-2; i++) {\n        suma_i = suma_i +v[i];\n        if (suma_i == pro) {\n        \tfor (j = i + 1; j < n-1; j++) {\n            \tsuma_j = suma_j + v[j];\n            \tif (suma_j == pro) {\n\t\t\t\t\tcont++;            \t\n\t\t\t\t}\n\t\t\t}\n        }\n    }\n    printf (\"%d\", cont);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main () {\n    long long int n, i, j, suma_i = 0, suma_j = 0, suma = 0, pro, cont, todo_cero = 0;\n\n    scanf (\"%I64d\", &n);\n    long long int v[n];\n\n    for (i = 0; i < n; i++) {\n        scanf (\"%I64d\", &v[i]);\n        suma = suma + v[i];\n        if (v[i] != 0) {\n            todo_cero = 1;\n        }\n    }\n\n    cont = 0;\n    if (todo_cero == 0) {\n        cont = ((n-1)*(n-2))/2;\n    }else if (suma % 3 == 0) {\n        pro = suma / 3;\n        for (i = 0; i < n-2; i++) {\n            suma_i = suma_i + v[i];\n            if (suma_i == pro) {\n                for (j = i + 1; j < n-1; j++) {\n                    suma_j = suma_j + v[j];\n                    if (suma_j == suma_i) {\n                        cont++;\n                    }\n                }\n                suma_j = 0;\n            }\n        }\n    }\n\n    printf (\"%I64d\", cont);\n    return 0;\n}\n"}
{"similarity_score": 0.9871244635193133, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "dee4014d440010881ed71e6dda551397", "bug_code_uid": "61c2b8dcbc046201d1e19a6d59ce1ad3", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "3f3f4d2a20c9650f6cb952c97b84e37b", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,i,a,k,min,c;\nscanf(\"%d\",&n);\nscanf(\"%d\",&a);\nmin=a;\nk=1;\nfor(i=2;i<=n;i++){\n scanf(\"%d\",&a);\n if(a<min){min=a;k=i;c=32000;}\n else if(a==min){\n    if(i-k<c)c=i-k;\n    k=i;\n }\n}\nprintf(\"%d\",c);\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i,a,k,min,c;\nscanf(\"%d\",&n);\nscanf(\"%d\",&a);\nmin=a;\nk=1;\nfor(i=2;i<=n;i++){\n scanf(\"%d\",&a);\n if(a<min){min=a;k=i;c=32000000000;}\n else if(a==min){\n    if(i-k<c)c=i-k;\n    k=i;\n }\n}\nprintf(\"%d\",c);\n}\n"}
{"similarity_score": 0.9932885906040269, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0a6fbc3c630eb8db1d70db606cce4f63", "bug_code_uid": "aa79d3e7dd2394e613efa684870ac57c", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "c8cdf2ba997a5f75a023ea42601928c4", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<ctype.h>\n#include<stdlib.h>\nint main(void)\n{\n    int n;\n    int a,b;\n    int c;\n    int mod5;\n    int mod2;\n    int count;\n    scanf(\"%d\",&n);\n    while(n--){\n        count=0;\n        scanf(\"%d %d\",&a,&b);\n        if(a==b){\n            printf(\"0\\n\");\n            continue;\n        }\n        c=abs(a-b);\n        count+=c/5;\n        c=c%5;\n        if(c>2){\n            count+=2;\n        }\n        if(c<=2){\n            count++;\n        }\n        printf(\"%d\\n\",count);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<ctype.h>\n#include<stdlib.h>\nint main(void)\n{\n    int n;\n    int a,b;\n    int c;\n    int mod5;\n    int mod2;\n    int count;\n    scanf(\"%d\",&n);\n    while(n--){\n        count=0;\n        scanf(\"%d %d\",&a,&b);\n        if(a==b){\n            printf(\"0\\n\");\n            continue;\n        }\n        c=abs(a-b);\n        count+=c/5;\n        c=c%5;\n        if(c>2){\n            count+=2;\n        }\n        if(c<=2 && c>0){\n            count++;\n        }\n        printf(\"%d\\n\",count);\n    }\n}\n"}
{"similarity_score": 0.9987760097919217, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f3cd97a094374cf523ca67d20ec424e9", "bug_code_uid": "114fff63e6992acf2b2754b6159bd535", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "efc819793397ec39ed04fe0b7cd28323", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": " #include<stdio.h>\nint main()\n{\n    int n,c=0,j,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        \n        char s[20];\n         scanf(\"%s\",&si);\n    if(s[0]=='T')\n           c+=4;\n        else if(s[0]=='C')\n            c+=6;\n        else if(s[0]=='O')\n            c+=8;\n        else if(s[0]=='D')\n            c+=12;\n        else if(s[0]=='I')\n            c+=20;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}", "fixed": " #include<stdio.h>\nint main()\n{\n    int n,c=0,j,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        \n        char s[20];\n         scanf(\"%s\",&s);\n    if(s[0]=='T')\n           c+=4;\n        else if(s[0]=='C')\n            c+=6;\n        else if(s[0]=='O')\n            c+=8;\n        else if(s[0]=='D')\n            c+=12;\n        else if(s[0]=='I')\n            c+=20;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}"}
{"similarity_score": 0.9993618379068283, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9b071178d4e3f98d10a722b6949a1c71", "bug_code_uid": "9e84bfba7b94d3a6f414d1571171cf4f", "src_uid": "7bbb4b9f5eccfe13741445c815a4b1ca", "apr_id": "94bbadb91ba1fc422479f0738938b585", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n   int a[200],n,d,t,j,k,flag,l,i;\n   scanf(\"%d\",&t);\n   for(int l=0;l<t;l++)\n   {\n       int sum=0;\n       scanf(\"%d %d\",&n,&d);\n       for(int j=0;j<n;j++)\n       {\n           scanf(\"%d\",&a[j]);\n       }\n       if(n==1)\n       printf(\"%d\\n\",a[0]);\n       else\n       {\n           int pile=0,sum=0,flag=0;\n       for(i=1;i<n;i++)\n       {\n            for(k=1;k<=a[i];k++)\n            {\n                sum+=(i*1);\n               \n                if(sum>=d)\n                {\n                    flag=1;\n                    break;\n                }\n                 pile++;\n            }\n            if(flag==1)\n            {\n                break;\n            }\n       }\n       printf(\"%d\\n\",pile+a[0]);\n       }\n   }\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n   int a[200],n,d,t,j,k,flag,l,i;\n   scanf(\"%d\",&t);\n   for(int l=0;l<t;l++)\n   {\n       int sum=0;\n       scanf(\"%d %d\",&n,&d);\n       for(int j=0;j<n;j++)\n       {\n           scanf(\"%d\",&a[j]);\n       }\n       if(n==1)\n       printf(\"%d\\n\",a[0]);\n       else\n       {\n           int pile=0,sum=0,flag=0;\n       for(i=1;i<n;i++)\n       {\n            for(k=1;k<=a[i];k++)\n            {\n                sum+=(i*1);\n               \n                if(sum>d)\n                {\n                    flag=1;\n                    break;\n                }\n                 pile++;\n            }\n            if(flag==1)\n            {\n                break;\n            }\n       }\n       printf(\"%d\\n\",pile+a[0]);\n       }\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9985185185185185, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1f2d3706e19fe58ec7fe137bf28ed691", "bug_code_uid": "7af384e4daeb34bd470bd61279d76aca", "src_uid": "61e6fd68d7568c599204130b102ea389", "apr_id": "da19754538cfd8e83aa41b9573f647b2", "difficulty": 1500, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<stdlib.h>\n\n#define sf(n) \t        scanf(\"%d\",&n)\n#define sl(x)           scanf(\"%I64d\",&x)\n#define sfc(n)          scanf(\" %c\",&n)\n#define endll           pf(\"\\n\")\n#define pf              printf\n#define pi              acos(-1.0)\n\n#define var    int ii,n,i,m,j,z=0,k,x,c=0,t,y,l,r,mid,d\n//int dx[8]={0,0,1,1,-1,-1,1,-1};  //8 direction\n//int dy[8]={1,-1,1,-1,1,-1,0,0};\n//int dx[4]={1,-1,0,0};  //4 direction\n//int dy[4]={0,0,1,-1};\nint a[100005];\nint main()\n{\n    var;\n    sf(n);\n    for(i=0;i<n;i++)\n    {\n        sf(a[i]);\n        if(a[i]&1)c++;\n    }\n    z=n-c;\n    x=c;\n    if(x>z)x=z;\n    x+=abs(x-c)/2;\n    pf(\"%d\\n\",x);\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<stdlib.h>\n\n#define sf(n) \t        scanf(\"%d\",&n)\n#define sl(x)           scanf(\"%I64d\",&x)\n#define sfc(n)          scanf(\" %c\",&n)\n#define endll           pf(\"\\n\")\n#define pf              printf\n#define pi              acos(-1.0)\n\n#define var    int ii,n,i,m,j,z=0,k,x,c=0,t,y,l,r,mid,d\n//int dx[8]={0,0,1,1,-1,-1,1,-1};  //8 direction\n//int dy[8]={1,-1,1,-1,1,-1,0,0};\n//int dx[4]={1,-1,0,0};  //4 direction\n//int dy[4]={0,0,1,-1};\nint a[100005];\nint main()\n{\n    var;\n    sf(n);\n    for(i=0;i<n;i++)\n    {\n        sf(a[i]);\n        if(a[i]&1)c++;\n    }\n    z=n-c;\n    x=c;\n    if(x>z)x=z;\n    x+=abs(x-c)/3;\n    pf(\"%d\\n\",x);\n}\n"}
{"similarity_score": 0.9111498257839721, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5476cef221bd5118e11ba903baf32ec3", "bug_code_uid": "e778e314f1638e567ed056d8b1bdf77e", "src_uid": "0fbac68f497fe189ee088c13d0488cce", "apr_id": "d8548cb28e71942c9906ffc598e32210", "difficulty": 1200, "tags": ["dp", "two pointers", "implementation", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long int n,k,i,i1,temp,cost=0,mincost=0,j,cou=0;\n    scanf(\"%ld %ld\",&n,&k);\n    long int a[n],b[n];\n    for(i=0;i<n;i++) scanf(\"%ld\",&a[i]);\n    for(i=0;i<n;i++) scanf(\"%ld\",&b[i]);\n    i=0;j=0;\n    for(i=0;i<n;i++){\n        if(b[i]==1) cou+=a[i];\n    }\n    for(i=0;i<k;i++)\n    cost+=(!b[i])*a[i];\n    for(i=k;i<n;i++){\n        cost-=(!b[i-k])*a[i-k];\n        cost+=(!b[i])*a[i];\n        mincost=(mincost>cost)?mincost:cost;\n    }\n    cou=cou+mincost;\n    printf(\"%ld\",cou);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    long int n,k,i,i1,temp,cost=0,mincost=0,j,cou=0;\n    scanf(\"%ld %ld\",&n,&k);\n    long int a[n],b[n];\n    for(i=0;i<n;i++) scanf(\"%ld\",&a[i]);\n    for(i=0;i<n;i++) scanf(\"%ld\",&b[i]);\n    i=0;j=0;\n    for(i=0;i<n;i++){\n        if(b[i]) cou+=a[i];\n        cost+=a[i];\n    }\n    if(k==n) printf(\"%ld\",cost);\n    else{\n    cost=0;\n    for(i=0;i<k;i++)\n    cost+=(!b[i])*a[i];\n    mincost=cost;\n    for(i=k;i<n;i++){\n        cost-=(!b[i-k])*a[i-k];\n        cost+=(!b[i])*a[i];\n        mincost=(mincost>cost)?mincost:cost;\n    }\n    cou=cou+mincost;\n    printf(\"%ld\",cou);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9594229035166817, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "11f767159bb5df3112fbeddcc4436f1c", "bug_code_uid": "97619060edd652e3b9a81fc3f5023c9a", "src_uid": "cf595689b5cbda4f1d629524ad275650", "apr_id": "30812692f828342a658ca2802908c2d8", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    char a[100000];\n    int x,i,j,q=0,p[100000],h=0;\n    scanf(\"%d\",&x);\n    for(i=0;i<=x;i++)\n    {\n        scanf(\"%d\",&p[i]);\n    }\n    for(i=0;i<=x;i++)\n    {q=0;\n            gets(a);\n        for(j=0;a[j]!=NULL;j++)\n        {\n            if(a[j]=='i' || a[j]=='o'  || a[j]=='u'  || a[j]=='e'  || a[j]=='a'  || a[j]=='y')\n                q++;\n        }\n        if(p[i]==q)\n        {\n            h++;\n        }\n\n\n\n\n    }\n   if(h==x)\n   {\n       printf(\"YES\");\n   }\n   else{\n    printf(\"NO\");\n   }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    char a[100000];\n    int x,i,j,q=0,p[100000],h=0;\n    scanf(\"%d\",&x);\n    for(i=1;i<=x;i++)\n    {\n        scanf(\"%d\",&p[i]);\n    }\n    for(i=0;i<=x;i++)\n    {q=0;\n            gets(a);\n        for(j=0;a[j]!=NULL;j++)\n        {\n            if(a[j]=='i' || a[j]=='o'  || a[j]=='u'  || a[j]=='e'  || a[j]=='a'  || a[j]=='y')\n                {q++;}\n        }\n        if(p[i]==q)\n        {\n            h++;\n        }\n\n\n\n\n\n    }\n\n   if(h-1==x)\n   {\n       printf(\"YES\");\n   }\n   else if(h-1!=x){\n    printf(\"NO\");\n   }\n}\n"}
{"similarity_score": 0.9987577639751553, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c07e60f242144cc1b352f103c852f581", "bug_code_uid": "a1cc957b0b45f274cfe10e30b06e3494", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "102bab9a88ca57ea9af998bff507fa0e", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int a[100000][2],i,j,n,c=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            if((a[i][0]<a[i+1][0])&&(a[i][1]>a[i+1][1])){\n               c++;\n               break;\n               }\n            else if((a[i][0]>a[i+1][0])&&(a[i][1]<a[i+1][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]>a[i+2][0])&&(a[i][1]<a[i+2][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]<a[i+2][0])&&(a[i][1]>a[i+2][1])){\n                c++;\n               break;\n            }\n        }\n    }\n    if(c>0) printf(\"Happy Alex\");\n    else printf(\"Poor Alex\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int a[100002][2],i,j,n,c=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            if((a[i][0]<a[i+1][0])&&(a[i][1]>a[i+1][1])){\n               c++;\n               break;\n               }\n            else if((a[i][0]>a[i+1][0])&&(a[i][1]<a[i+1][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]>a[i+2][0])&&(a[i][1]<a[i+2][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]<a[i+2][0])&&(a[i][1]>a[i+2][1])){\n                c++;\n               break;\n            }\n        }\n    }\n    if(c>0) printf(\"Happy Alex\");\n    else printf(\"Poor Alex\");\n    return 0;\n}"}
{"similarity_score": 0.4907749077490775, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "34fc48820fc9f6de9ddaba73bff8dac2", "bug_code_uid": "f05e5c73bbb7a00a03b8df5e3892b87a", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "11f9fab35a64729756e6729009359c66", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\t\n\tint main (){\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tint i=0;\n\t\tfor( i ; n!=0 ; i++){\n\t\t\tif(n%2==0){\n\t\t\t\tprintf(\"2\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"3\");\n\t\t\t\tn=n-1;\n\t\t\t}\n\t\t\tn=n-2;\n\t\t}\n\t\tprintf(\"\\n%d\", i);\n}", "fixed": "#include<stdio.h>\n\t\n\tint main(){\n\t\tint y,n;\n\t\tscanf(\"%d\",&n);\n\t\tint s, x;\n\t\ty=n;\n\t\tfor( int x=0 ; y!=0 ; x++){\n\t\t\tif(y%2==0){\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty=y-1;\n\t\t\t}\n\t\t\ty=y-2;\n\t\t\ts=x+1;\n\t\t}\n\t\tprintf(\"%d\\n\",s);\n\t\tfor( int i=0 ; n!=0 ; i++){\n\t\t\tif( n%2==0){\n\t\t\t\tprintf(\"2 \");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"3 \");\n\t\t\t\tn=n-1;\n\t\t\t}\n\t\tn=n-2;\n\t\t}\n\t}"}
{"similarity_score": 0.598825831702544, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "148c3b407bbfed0d1a8de1ef5c5240e9", "bug_code_uid": "7410efbc0cff422d11ff8c416b64f884", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "dbf3d6a7204ed494b8a4e600d8b8e1bd", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int n,x,a,b,s,t,r,mi;\n        scanf(\"%d\",&t);\n        while(t--)\n        {\n            scanf(\"%d%d%d%d\",&n,&x,&a,&b);\n            s=0;\n            if(a>b)\n            {\n                r=a;\n                mi=b;\n            }\n            else\n            {\n                r=b;\n                mi=a;\n            }\n            s=r+x;\n            if(s>n)\n            {\n                printf(\"%d\\n\",r-mi);\n            }\n            else\n            {\n                printf(\"%d\\n\",s-mi);\n            }\n        }\n\n\n\n\nreturn 0;\n\n\n}\n\n\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n        int n,x,a,b,s,t,r,mi;\n        scanf(\"%d\",&t);\n        while(t--)\n        {\n            scanf(\"%d%d%d%d\",&n,&x,&a,&b);\n            s=0;\n              s=x+abs(a-b);\n              r=n-1;\n              if(s<r)\n              {\n                  printf(\"%d\\n\",s);\n              }\n              else\n              {\n                  printf(\"%d\\n\",r);\n              }\n\n\n        }\n\n\n\n\nreturn 0;\n\n\n}\n\n\n\n"}
{"similarity_score": 0.22111553784860558, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "54dc32cac9cf0ea574eb137543c61693", "bug_code_uid": "6aeedd69f3ff75c39df0cd712de8da6f", "src_uid": "56535017d012fdfcc13695dfd5b33084", "apr_id": "454ed220d5840f3edea811c864516f55", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint v1, v2, v3, v4;\nint main()\n{\n\tscanf(\"%d%d%d%d\", &v1, &v2, &v3, &v4);\n\tint flag = 0; \n\tfor(int a1=1; a1<=200; a1++)\n\t{\n\t\tfor(int a2=1; a2<a1; a2++)\n\t\t{\n\t\t\tfor(int a3=1; a3<a2; a3++)\n\t\t\t{\n\t \t\t\tif(2*v1>=a1 && a1>=v1 &&\n\t\t\t\t   2*v2>=a2 && a2>=v2 &&\n\t\t\t\t   2*v3>=a3 && a3>=v3 &&\n\t\t\t\t   2*v4>=a3 && a3>=v4 && a2>=v4 && a1>=v4)\n\t\t\t\t{\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tprintf(\"%d\\n%d\\n%d\\n\", a1, a2, a3);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(!flag) printf(\"-1\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint v1, v2, v3, v4;\nvoid work()\n{\n\tint flag = 0; \n\tfor(int a1=0; a1<=2*v1; a1++)\n\t{\n\t\tfor(int a2=0; a2<a1; a2++)\n\t\t{\n\t\t\tfor(int a3=0; a3<a2; a3++)\n\t\t\t{\n\t \t\t\tif(2*v1>=a1 && a1>=v1 &&\n\t\t\t\t   2*v2>=a2 && a2>=v2 &&\n\t\t\t\t   2*v3>=a3 && a3>=v3 &&\n\t\t\t\t   2*v4>=a3 && a3>=v4 && 2*v4<a2)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n%d\\n%d\\n\", a1, a2, a3);\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"-1\\n\");\n}\nint main()\n{\n\twhile(scanf(\"%d%d%d%d\", &v1, &v2, &v3, &v4) != EOF)\n\t{\n\t\twork();\n\t} \n\treturn 0;\n}"}
{"similarity_score": 0.6902286902286903, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "6a02d6eb3662b474b8702dc57714261b", "bug_code_uid": "13ea8ef99d9493672bed19fc48bb33d5", "src_uid": "0048623eeb27c6f7c6900d8b6e620f19", "apr_id": "5037556ef5bb955c9ca227ffb3aa380f", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n#define min(A, B) ((A)<(B)?(A):(B))\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tint i, j, n, s, best=0, curr, w[50], tab[51];\n\t\tmemset(tab, 0, sizeof(tab));\n\t\tscanf(\"%d\", &n);\n\t\tfor(i=0;i<n;++i){\n\t\t\tscanf(\"%d\", w+i);\n\t\t\ttab[w[i]]++;\n\t\t}\n\t\tfor(s=2;s<=2*n;++s){\n\t\t\tcurr=0;\n\t\t\tfor(j=1;j<s/2 || (j<=s/2 && (s&1));++j){\n\t\t\t\tcurr+=min(tab[j], tab[s-j]);\n\t\t\t}\n\t\t\tif((s&1)==0) curr+=tab[s/2]/2;\n\t\t\tif(curr>best) best=curr;\n\t\t}\n\t\tprintf(\"%d\\n\", best);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n#define min(A, B) ((A)<(B)?(A):(B))\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tint i, j, n, s, best=0, curr, w, tab[101];\n\t\tmemset(tab, 0, sizeof(tab));\n\t\tscanf(\"%d\", &n);\n\t\tfor(i=0;i<n;++i){\n\t\t\tscanf(\"%d\", &w);\n\t\t\ttab[w]++;\n\t\t}\n\t\tfor(s=2;s<=2*n;++s){\n\t\t\tcurr=0;\n\t\t\tfor(j=1;j<s;++j){\n\t\t\t\tcurr+=min(tab[j], tab[s-j]);\n\t\t\t}\n\t\t\tcurr/=2;\n\t\t\tif(curr>best) best=curr;\n\t\t}\n\t\tprintf(\"%d\\n\", best);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8994515539305301, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "254306fa9e214cf6dfd381d0efa139e8", "bug_code_uid": "cd60ecd8566306d1afad04cb1002d08a", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "2f5a502217da39d2751974a3bf61c7fc", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int count,l,i;\n    char a[100];\n    scanf(\"%d\",&count);\n    for(i=1;i<=count;i++){\n        scanf(\"%s\",a);\n        l=strlen(a);\n        printf(\"%c%d%c\",a[0],(l-2),a[l-1]);\n        printf(\"\\n\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int count,l,i;\n    char a[100];\n    scanf(\"%d\",&count);\n    for(i=1;i<=count;i++){\n        scanf(\"%s\",a);\n        l=strlen(a);\n\tif(l>10){\n        printf(\"%c%d%c\",a[0],(l-2),a[l-1]);\n        printf(\"\\n\");}else {printf(\"%s\",a);printf(\"\\n\");}\n\t}\n\n}"}
{"similarity_score": 0.6802443991853361, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b5c6c04120d78538e16c2f6230b0b8c3", "bug_code_uid": "b79407b71fc48ff155cdbb85a198771c", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "aa3ede9f5554e333aeef65505fa019a9", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,a,b;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d %d\",&a,&b);\r\n        printf(\"%d\\n\",a+b*2+1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,a,b,sum;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d %d\",&a,&b);\r\n        if(a<b&&a==0){sum=1;}\r\n        else\r\n        {\r\n            sum=a+b*2+1;\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9946808510638298, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "09f889b12fb003de10a203151ded87de", "bug_code_uid": "74f37442e28f96c0a750794a53135c06", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "a27ac6671eaf6ff0eeccec04450f3579", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int T,n,x,a[105],b[105];\r\n    scanf(\"%d\",&T);\r\n    while(T-- )\r\n    {\r\n        for(int w=0;w<105;w++)\r\n        {\r\n            b[w]=0;\r\n        }\r\n        scanf(\"%d\",&n);\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n\r\n        for(int j=0; j<n; j++)\r\n        {\r\n            b[a[j]]++;\r\n        }\r\n        for(int k=0; k<n; k++)\r\n        {\r\n            if(b[k]==1)\r\n            {\r\n                for(int m=0; m<n; m++)\r\n                {\r\n                    if(a[m]==k)\r\n                    {\r\n                        printf(\"%d\\n\",m+1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int T,n,x,a[105],b[105];\r\n    scanf(\"%d\",&T);\r\n    while(T-- )\r\n    {\r\n        for(int w=0;w<105;w++)\r\n        {\r\n            b[w]=0;\r\n        }\r\n        scanf(\"%d\",&n);\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n\r\n        for(int j=0; j<n; j++)\r\n        {\r\n            b[a[j]]++;\r\n        }\r\n        for(int k=0; k<105; k++)\r\n        {\r\n            if(b[k]==1)\r\n            {\r\n                for(int m=0; m<105; m++)\r\n                {\r\n                    if(a[m]==k)\r\n                    {\r\n                        printf(\"%d\\n\",m+1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9862792574656981, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cb865686b00a68ea7020341bd513a7d9", "bug_code_uid": "5a390350ed26fb42271fc6c95dc5ce97", "src_uid": "4bbb078b66b26d6414e30b0aae845b98", "apr_id": "06b4379ebe968c4f393da940b4495968", "difficulty": 1500, "tags": ["constructive algorithms", "dfs and similar", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main(void){\n    int a,b,c,i,t,bin;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d%d\",&a,&b,&c);\n        if(a>0){\n            bin=0;\n            for(i=0;i<=a;i++){\n                putchar('0');\n            }\n        }\n        if(c>0){\n            bin=1;\n            if(a>0) b--;\n            for(i=0;i<=c;i++){\n                putchar('1');\n            }\n        }\n        if(a==0 && c==0){\n            printf(\"1\");\n        }\n        for(i=0;i<b;i++){\n            bin=(++bin)%2;\n            printf(\"%d\",bin);\n        }\n        putchar('\\n');\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(void){\n    int a,b,c,i,t,bin;\n    scanf(\"%d\",&t);\n    while(t--){\n        bin=0;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        if(a>0){\n            bin=0;\n            for(i=0;i<=a;i++){\n                putchar('0');\n            }\n        }\n        if(c>0){\n            bin=1;\n            if(a>0) b--;\n            for(i=0;i<=c;i++){\n                putchar('1');\n            }\n        }\n        if(a==0 && c==0){\n            printf(\"0\");\n        }\n        for(i=0;i<b;i++){\n            bin=(++bin)%2;\n            printf(\"%d\",bin);\n        }\n        putchar('\\n');\n    }\n    return 0;\n}"}
{"similarity_score": 0.9974059662775616, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "cd54270aeeacdf54e427fdf14f585d69", "bug_code_uid": "914308b3eb38d56045a8cfb273a9ba93", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "ad828745a7e06c9407be485836e5374d", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nmain() \n{\n\tint h, HH, MM;\n\tscanf_s(\"%d\\n\", &h);\n\tscanf_s(\"%02d:%02d\", &HH, &MM);\n\n\tif (h == 12)\n\t{\n\t\tif (HH == 00)\n\t\t{\n\t\t\tHH += 1;\n\t\t}\n\n\t\telse if ((HH > 12) && (HH % 10 != 0))\n\t\t{\n\t\t\twhile (HH > 12)\n\t\t\t{\n\t\t\t\tHH = HH % 10;\n\t\t\t}\n\t\t}\n\t\telse if ((HH > 12) && (HH % 10 == 0))\n\t\t{\n\t\t\tHH = 10;\n\t\t}\n\n\t\tif ((MM >= 60) && (MM % 10 != 0))\n\t\t{\n\t\t\tMM = MM % 10;\n\t\t}\n\t\telse if ((MM >= 60) && (MM % 10 == 0))\n\t\t{\n\t\t\tMM = 00;\n\t\t}\n\t}\n\n\telse if (h == 24)\n\t{\n\t\n\t\tif ((HH >= 24) && (HH % 10 != 0))\n\t\t{\n\t\t\twhile (HH >= 24)\n\t\t\t{\n\t\t\t\tHH = HH % 10;\n\t\t\t}\n\t\t}\n\t\telse if ((HH >= 24) && (HH % 10 == 0))\n\t\t{\n\t\t\tHH = 00;\n\t\t}\n\n\t\tif ((MM >= 60) && (MM % 10 != 0))\n\t\t{\n\t\t\tMM = MM % 10;\n\t\t}\n\t\telse if ((MM >= 60) && (MM % 10 == 0))\n\t\t{\n\t\t\tMM = 00;\n\t\t}\n\t}\n\n\tprintf(\"%02d:%02d\", HH, MM);\n}", "fixed": "#include <stdio.h>\n\nmain() \n{\n\tint h, HH, MM;\n\tscanf(\"%d\\n\", &h);\n\tscanf(\"%02d:%02d\", &HH, &MM);\n\n\tif (h == 12)\n\t{\n\t\tif (HH == 00)\n\t\t{\n\t\t\tHH += 1;\n\t\t}\n\n\t\telse if ((HH > 12) && (HH % 10 != 0))\n\t\t{\n\t\t\twhile (HH > 12)\n\t\t\t{\n\t\t\t\tHH = HH % 10;\n\t\t\t}\n\t\t}\n\t\telse if ((HH > 12) && (HH % 10 == 0))\n\t\t{\n\t\t\tHH = 10;\n\t\t}\n\n\t\tif ((MM >= 60) && (MM % 10 != 0))\n\t\t{\n\t\t\tMM = MM % 10;\n\t\t}\n\t\telse if ((MM >= 60) && (MM % 10 == 0))\n\t\t{\n\t\t\tMM = 00;\n\t\t}\n\t}\n\n\telse if (h == 24)\n\t{\n\t\n\t\tif ((HH >= 24) && (HH % 10 != 0))\n\t\t{\n\t\t\twhile (HH >= 24)\n\t\t\t{\n\t\t\t\tHH = HH % 10;\n\t\t\t}\n\t\t}\n\t\telse if ((HH >= 24) && (HH % 10 == 0))\n\t\t{\n\t\t\tHH = 00;\n\t\t}\n\n\t\tif ((MM >= 60) && (MM % 10 != 0))\n\t\t{\n\t\t\tMM = MM % 10;\n\t\t}\n\t\telse if ((MM >= 60) && (MM % 10 == 0))\n\t\t{\n\t\t\tMM = 00;\n\t\t}\n\t}\n\n\tprintf(\"%02d:%02d\", HH, MM);\n}"}
{"similarity_score": 0.8640973630831643, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3b43298eaa345dad292bbd593fce5c0d", "bug_code_uid": "7fe210a7c76ea5d60d1beadfad3a70b1", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "8ddcc431838f5689a0b3826e21ccc1f7", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a,p,s;\n    int  m=1000000;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n    scanf(\"%d %d\",&a,&p);\n    \n        if(p<m)\n        m=p;\n        s=s+a*m;\n        \n    }\n    printf(\"%d\\n\",s);\n    \n}", "fixed": "#include<stdio.h>\n\n\n    int n,a,p,s,i;\n    int main()\n    {\n    \n    int  m=1000000;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n    scanf(\"%d %d\",&a,&p);\n    \n        if(p<m)\n        m=p;\n        s=s+a*m;\n        \n    }\n    printf(\"%d\\n\",s);\n    \n}"}
{"similarity_score": 0.8306828811973808, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "b4a9c9488c75afc81a52021e8fba5fd6", "bug_code_uid": "8792a6b51ca3801c10c9b335f8d10f24", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "f34411a1f0ad07a54838343c266b3a47", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i,T=0,j;\nchar A[100005];\nscanf(\"%s\",A);\nfor(i=0;A[i]!='\\0';i++)\n{\nif(T==3 || T==4 || T==7)\n{\nbreak;\n}\nelse if(A[i]=='A' && A[i+1]=='B')\n{\nfor(j=i+2;A[j]!='\\0';j++)\n{\nif(A[j]=='B' && A[j+1]=='A')\n{\nT+=3;\nprintf(\"YES\\n\");\nbreak;\n}\n}\n}\nelse if(A[i]=='B' && A[i+1]=='A')\n{\nfor(j=i+2;A[j]!='\\0';j++)\n{\nif(A[j]=='A' && A[j+1]=='B')\n{\nT+=4;\nprintf(\"YES\\n\");\nbreak;\n}\n}\n}\nif(((A[i]=='A' && A[i+1]=='B' && A[i+2]=='A')||(A[i]=='B' && A[i+1]=='A' && A[i+2]=='B'))&& T!=7 && T!=3 && T!=4)\n{\nprintf(\"NO\\n\");\nT=1;\nbreak;\n}\n}\nif(T!=1 && T!=7 && T!=4 && T!=3)\n{\nprintf(\"NO\\n\");\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i,T=0,j;\nchar A[100005];\nscanf(\"%s\",A);\nfor(i=0;A[i]!='\\0';i++)\n{\nif(T==3 || T==4 || T==7)\n{\nbreak;\n}\nelse if(A[i]=='A' && A[i+1]=='B')\n{\nfor(j=i+2;A[j]!='\\0';j++)\n{\nif(A[j]=='B' && A[j+1]=='A')\n{\nT+=3;\nprintf(\"YES\\n\");\nbreak;\n}\n}\n}\nelse if(A[i]=='B' && A[i+1]=='A')\n{\nfor(j=i+2;A[j]!='\\0';j++)\n{\nif(A[j]=='A' && A[j+1]=='B')\n{\nT+=4;\nprintf(\"YES\\n\");\nbreak;\n}\n}\n}\n}\nif(T!=7 && T!=4 && T!=3)\n{\nprintf(\"NO\\n\");\n}\nreturn 0;\n}"}
{"similarity_score": 0.35571687840290384, "equal_cnt": 20, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "aa25f1d258030f5f6ed1850a219dd7e1", "bug_code_uid": "e21696d433ba85d72a10630bf425a0ba", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "b7dc72f02ca4e65ccff9d86582230dc7", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nstruct kayit{\n\tchar isim[33];\n\tint numara;\n};\n\nint main(){\n\t\n\tint n;\n\tchar kayit[33];\n\tscanf(\"%d\",&n);\n\tstruct kayit yeni[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tyeni[i].numara=0;\n\t\tscanf(\"%s\",&kayit);\n\t\tfor(int j=0;j<=i;j++)\n\t\t{\n\t\t\tif(strcmp(kayit,yeni[j].isim)==0)\n\t\t\t{\n\t\t\t\tyeni[j].numara++;\n\t\t\t\tprintf(\"%s%d\\n\",kayit,yeni[j].numara);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(j==i)\n\t\t\t{\n\t\t\t\tprintf(\"OK\\n\");\n\t\t\t\tstrcpy(yeni[i].isim,kayit);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nstruct ogrenci{\n\t\n\tchar isim[33];\n\tint sayac;\n};\nstruct ogrenci kayit[10000];\nunsigned int toplam=0;\n\nint kontrol(int n){\n\tchar yeni[33];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&yeni);\n\t\t\n\t\tfor(int j=0;j<toplam+1;j++)\n\t\t{\n\t\t\tif(strcmp(yeni,kayit[j].isim)==0)\n\t\t\t{\n\t\t\t\tkayit[j].sayac++;\n\t\t\t\tprintf(\"%s%d\\n\",kayit[j].isim,kayit[j].sayac);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(j==toplam)\n\t\t\t{\n\t\t\t\tkayit[toplam].sayac=0;\t\t\t\n\t\t\t\tstrcpy(kayit[toplam].isim,yeni);\n\t\t\t\ttoplam++;\t\t\t\t\n\t\t\t\tprintf(\"OK\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n\nint main(){\n\t\n\tint n;\n\tscanf(\"%d\",&n);\n\tkontrol(n);\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9655172413793104, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4afcad39b85e59518e47c3ae17b9d0d0", "bug_code_uid": "58cd0967315fe8d76217a76e2f256357", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "b22b7ba0243cbae651a1db251a40f5e4", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    do\n    {\n        int n, p;\n        scanf(\"%d %d\", &n, &p);\n        \n        if ( n%p == 0 )\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        --t;\n    } while ( t != 0 );\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n \nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    do\n    {\n        int n, p;\n        scanf(\"%d %d\", &n, &p);\n        \n        if ( n%p == 0 )\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        --t;\n    } while ( t != 0 );\n}"}
{"similarity_score": 0.48863636363636365, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "166c413ce3de43b859aaedf24641cbc0", "bug_code_uid": "d516c5828a477463c1d9ebae3c62f36e", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "7888341f2296075d729f3de5854a1ff7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d;\n    scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n    a=d-a;b=d-b;c=d-c;\n    printf(\"%d\\t%d\\t%d\\t\",a,b,c);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint x[4],i=0,a,b,c;\n\tscanf(\"%d%d%d%d\",x,x+1,x+2,x+3);\n\tfor(int j=0;j<4;j++)\n\t\tif(x[j]>x[i])\n\t\t\ti = j;\n\n\tfor(int j=0;j<4;j++)\n\t\tif(j!=i)\n\t\t\tprintf(\"%d \",x[i]-x[j]);\n}"}
{"similarity_score": 0.9974293059125964, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "077f66d6bd6308d72e46cd547194df3d", "bug_code_uid": "787b2adf3a690b02b7efd83c63aa7725", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "d90f924b0cde4e46cdfef0d3ebf88286", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        int n,k;\n        scanf(\"%d %d\",&n,&k);\n        int candies = 0;\n        candies = (n/k)*k;\n        int remain = n%k;\n        if(remain > k/2){\n            candies += k/2;\n        }\n        else{\n            candies += remain;\n        }\n        printf(\"%d\",candies);\n\n    }\n    return 0;\n\n}", "fixed": "#include<stdio.h>\nint main(void){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        int n,k;\n        scanf(\"%d %d\",&n,&k);\n        int candies = 0;\n        candies = (n/k)*k;\n        int remain = n%k;\n        if(remain > k/2){\n            candies += k/2;\n        }\n        else{\n            candies += remain;\n        }\n        printf(\"%d\\n\",candies);\n\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.9778672032193159, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "04851d8fff421576ae1cf0ebfde83b0d", "bug_code_uid": "58cee71eee9493da3a40ab394b594666", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "4ddf63433fe639a48927a704fec84b85", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,k,f,t,i,a,b=-10^9;\n    scanf(\"%d %d\",&n,&k);\n    for(i=1;i<=n;i++){\n        scanf(\"%d %d\",&f,&t);\n        if(t>k) a=f-(t-k);\n        else a=f;\n        if(a>b) b=a;\n    }\n    printf(\"%d\",b);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,k,f,t,i,a,b=-1000000000;\n    scanf(\"%d %d\",&n,&k);\n    for(i=1;i<=n;i++){\n        scanf(\"%d %d\",&f,&t);\n        if(t>k) a=f-(t-k);\n        else a=f;\n        if(a>b) b=a;\n    }\n    printf(\"%d\",b);\n    return 0;\n}\n"}
{"similarity_score": 0.7733151803948264, "equal_cnt": 26, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "a48816e61554439914cfe98eaaac7290", "bug_code_uid": "d091d09317d8334d0e06cdfa610d4050", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "653af1bd0b2fcdae2a3712537f1ca899", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int a=0,b=0,c=0;\n    int x,y;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&x,&y);\n        if(y>0) c++;\n        if(y<0) a++;\n        if(y==0) b++;\n    }\n    if(b>=2){\n        printf(\"No\");\n        continue;\n    }\n    if(b=1){\n        if((a==0 || c==0) ){\n            printf(\"Yes\");\n            continue;\n        }\n        else{\n            printf(\"No\");\n            continue;\n        }\n    }\n\n    if(a>1 && c>1){\n        printf(\"No\");\n        continue;\n    }\n    if((a==1||a==0)){\n        printf(\"Yes\");\n        continue;\n    }\n    if((c==1||c==0)){\n        printf(\"Yes\");\n        continue;\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int a=0,b=0,c=0;\n    int x,y;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&x,&y);\n        if(x>0) c++;\n        if(x<0) a++;\n        if(x==0) b++;\n    }\n\n        if(b>=2){\n            printf(\"No\");\n            return 0;\n        }\n        if(b==1){\n            if((a==0 || c==0) ){\n                printf(\"Yes\");\n                return 0;\n            }\n            else{\n                printf(\"No\");\n                return 0;\n            }\n        }\n\n        if(a>1 && c>1){\n            printf(\"No\");\n            return 0;\n        }\n        if((a==1||a==0)){\n            printf(\"Yes\");\n            return 0;\n        }\n        if((c==1||c==0)){\n            printf(\"Yes\");\n            return 0;\n        }\n        return 0;\n}"}
{"similarity_score": 0.9902552204176334, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9530fef899a0c5a873474268cb85dcc9", "bug_code_uid": "027ce829bdf12d9713606401e82671b2", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "2dba7310ff2d542a8e0e399857f0a0cb", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define PI acos(-1)\n#define FOR(ii,aa,bb) for(ii=aa;ii<=bb;ii++)\n#define ROF(ii,aa,bb) for(ii=aa;ii>bb;ii--)\n#define buyuk(a,b) (a<b)? b:a\n#define min(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\n/*\n   void sort(int bas,int ort,int son){\n   int yer=bas,x=bas,y=ort+1,t,i;\n   while(x <= ort && y <= son){\n   if(a[x] < a[y]) temp[yer++]=a[x++];\n   else temp[yer++]=a[y++];}\n   while(x <= ort) temp[yer++]=a[x++];\n   while(y <= son) temp[yer++]=a[y++];\n   for(i=bas;i<=son;i++) a[i]=temp[i];}   \n   void merge(int bas,int son){\n   if(son <= bas)return;\n   int ort=(bas+son)/2;\n   merge(bas,ort);\n   merge(ort+1,son);\n   sort(bas,ort,son);}\n   */\nint h[3005],a[3005];\nint main () \n{\n\tint a,x,i,j,top=0,max=0;\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\th[a]++;\n\t}\n\tfor(i=1;i<=x*2;i++)\n\t\tif(h[i]>1)\n\t\t{\n\t\t\th[i+1] += h[i] - 1;\n\t\t\ttop+= h[i] - 1;\n\t\t\th[i] = 1;\n\t\t}\n\t\t\t\t\n\t\t    \n\t    \n\t\t\tprintf(\"%d\",top);\t\t\t\t\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define PI acos(-1)\n#define FOR(ii,aa,bb) for(ii=aa;ii<=bb;ii++)\n#define ROF(ii,aa,bb) for(ii=aa;ii>bb;ii--)\n#define buyuk(a,b) (a<b)? b:a\n#define min(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\n/*\n   void sort(int bas,int ort,int son){\n   int yer=bas,x=bas,y=ort+1,t,i;\n   while(x <= ort && y <= son){\n   if(a[x] < a[y]) temp[yer++]=a[x++];\n   else temp[yer++]=a[y++];}\n   while(x <= ort) temp[yer++]=a[x++];\n   while(y <= son) temp[yer++]=a[y++];\n   for(i=bas;i<=son;i++) a[i]=temp[i];}   \n   void merge(int bas,int son){\n   if(son <= bas)return;\n   int ort=(bas+son)/2;\n   merge(bas,ort);\n   merge(ort+1,son);\n   sort(bas,ort,son);}\n   */\nint h[6010];\nint main () \n{\n\tint a,x,i,j,top=0,max=0;\n\tscanf(\"%d\",&x);\n\tfor(i=1;i<=x;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\th[a]++;\n\t}\n\tfor(i=1;i<=x*2;i++)\n\t\tif(h[i]>1)\n\t\t{\n\t\t\th[i+1] += h[i] - 1;\n\t\t\ttop+= h[i] - 1;\n\t\t\th[i] = 1;\n\t\t}\n\t\t\t\t\n\t\t    \n\t    \n\t\t\tprintf(\"%d\",top);\t\t\t\t\n}\n\n"}
{"similarity_score": 0.906060606060606, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "758e38a78969137a9f491ddf00c823de", "bug_code_uid": "1239867bf8abe7080dd0589cb2b1e146", "src_uid": "4f8eac547bbd469a69de2f4aae4a87f0", "apr_id": "a5d89505069b39e61adfdfb2d305cd3b", "difficulty": 900, "tags": ["bitmasks", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,max=0,min=1000000007;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n];\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&arr[j]);\r\n\t\t\tif(max<arr[j])\r\n\t\t\tmax=arr[j];\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tif(min>(max&arr[j]))\r\n\t\t\tmin=max&arr[j];\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",min);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,max=-1;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n],f=0;\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&arr[j]);\r\n\t\t\tif(max<arr[j])\r\n\t\t\tmax=arr[j];\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t    max=max&arr[j];\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t}\r\n}"}
{"similarity_score": 0.9858012170385395, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "567a239bc65e7f31ba6c9a819617ddc5", "bug_code_uid": "abd8346b899263ac8baf99b2b5fa9c69", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "98853aafc3e8360e5c56ad40dad4db28", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n\n  for (int i=0;i<t;i++) {\n    long int n;\n    long int m;\n    long int a[n+2];\n    long int b[m+2];\n\n    scanf(\"%ld\", &n);\n    for (long int j=0; j<n;j++) {\n      scanf(\"%ld\", &a[j]);\n    }\n\n    scanf(\"%ld\", &m);\n    for (long int j=0;j<m;j++) {\n      scanf(\"%ld\", &b[j]);\n    }\n\n    long int topind = 0;\n    for (long int j=0;j<m;j++) {\n      topind = (topind+b[j])%n;\n    }\n\n    printf(\"%ld\\n\", a[topind]);\n\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n\n  for (int i=0;i<t;i++) {\n    long int n;\n    long int m;\n    long int a[200005];\n    long int b[200005];\n\n    scanf(\"%ld\", &n);\n    for (long int j=0; j<n;j++) {\n      scanf(\"%ld\", &a[j]);\n    }\n\n    scanf(\"%ld\", &m);\n    for (long int j=0;j<m;j++) {\n      scanf(\"%ld\", &b[j]);\n    }\n\n    long int topind = 0;\n    for (long int j=0;j<m;j++) {\n      topind = (topind+b[j])%n;\n    }\n\n    printf(\"%ld\\n\", a[topind]);\n\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.6789366053169734, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "10533805f9b3ecbe146c0ae2f3a8e7f8", "bug_code_uid": "39cc7b1936c0b8fc2e59b87370eaaa86", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "75c09c264fc88e239117219d34fc3370", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--) {\r\n        int n,a=0,i;\r\n        scanf(\"%d\",&n);\r\n        char s[n+1];\r\n        scanf(\"%s\",s);\r\n        for(i=0; i<n; i++) {\r\n            if(s[i]=='T'||s[i]=='i'||s[i]=='m'||s[i]=='u'||s[i]=='r') a++;\r\n        }\r\n        if(a==5) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--) {\r\n        int n,i,j;\r\n        scanf(\"%d\",&n);\r\n        char s[n+1],c;\r\n        scanf(\"%s\",s);\r\n        for(i=0; i<n; i++) {\r\n            for(j=i+1; j<n; j++) {\r\n                if(s[i]>s[j]) {\r\n                    c=s[i];\r\n                    s[i]=s[j];\r\n                    s[j]=c;\r\n                }\r\n            }\r\n        }\r\n        if(n==5&&s[0]=='T'&&s[1]=='i'&&s[2]=='m'&&s[3]=='r'&&s[4]=='u') printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5727411944869831, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "88488d5222d767deb71ec168f7299a46", "bug_code_uid": "2eaa2d8ca9f55720dfa1b794565eeab4", "src_uid": "2d4ad39d42b349765435b351897403da", "apr_id": "86241539b4945621f359c09ebc9922fa", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    double a, b, c;\n    scanf(\"%lf %lf %lf\", &a, &b, &c);\n    //printf(\"a=%.2f, b=%.2f, c=%.2f\\n\", a, b, c);\n    double tmp = sqrt(b*b-4*a*c);\n    printf(\"%.15f\\n\", (-b+tmp)/(2*a));\n    printf(\"%.15f\\n\", (-b-tmp)/(2*a));\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    double a, b, c;\n    scanf(\"%lf %lf %lf\", &a, &b, &c);\n    double tmp = sqrt(b*b-4*a*c);\n    double v1 = (-b+tmp)/(2*a);\n    double v2 = (-b-tmp)/(2*a);\n    if(v1 > v2)\n    {\n        printf(\"%.15f\\n\", v1);\n        printf(\"%.15f\\n\", v2);\n    }\n    else\n    {\n        printf(\"%.15f\\n\", v2);\n        printf(\"%.15f\\n\", v1);\n    }\n}\n"}
{"similarity_score": 0.9637681159420289, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "88a530326e47ccef666c0a93285ab636", "bug_code_uid": "13394908c3ed8818eb34a87002268236", "src_uid": "7a8c4ba98a77097faff625b94889b365", "apr_id": "35e7b0cf258aece63be5a56aca53efd1", "difficulty": 900, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n int t;\r\n scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n   int n;\r\n   scanf(\"%d\",&n);\r\n   int a[n],p[n];\r\n  \r\n   for(int i=0;i<n;i++)\r\n    scanf(\"%d\",&a[i]);\r\n  p[0]=a[0];\r\n  for(int i=1;i<n;i++) p[i]=a[i]+p[i-1];\r\n int sum=0,i=0;\r\n  for( i=0;i<n;i++)\r\n  {   sum+=i;\r\n     if(p[i]<sum) break;\r\n     \r\n  }\r\n  if(i==n)printf(\"yes\\n\");\r\n  else printf(\"no\\n\");\r\n  }\r\n return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n int t;\r\n scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n   int n;\r\n   scanf(\"%d\",&n);\r\n  long long int a[n],p[n];\r\n  \r\n   for(int i=0;i<n;i++)\r\n    scanf(\"%lld\",&a[i]);\r\n  p[0]=a[0];\r\n  for(int i=1;i<n;i++) p[i]=a[i]+p[i-1];\r\n long long int sum=0;\r\n int i=0;\r\n  for( i=0;i<n;i++)\r\n  {   sum+=i;\r\n     if(p[i]<sum) break;\r\n     \r\n  }\r\n  if(i==n)printf(\"yes\\n\");\r\n  else printf(\"no\\n\");\r\n  }\r\n return 0;\r\n}"}
{"similarity_score": 0.9977011494252873, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2db2435663157c17d57e71a6b896d465", "bug_code_uid": "c78c65766472cb3d3cd641fd2b7d8bb1", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "601d0a6eb763f8e09a9375be52164c11", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,min,diff,flag=0,min_index=0,min_index1;\n\tint a[100];\n\tscanf(\"%d\",&n);\n\tmin_index1=n;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tmin=a[n]-a[1];\n\tif(min<0)\n\tmin=min*(-1);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tdiff=a[i]-a[i+1];\n\t\tif(diff<0)\n\t\tdiff=diff*(-1);\n\t\tif(diff<=min)\n\t\t{\n\t\t\tmin=diff;\n\t\t\t\n\t\t\tflag=1;\n\t\t\tmin_index=i;\n\t\t\tmin_index1=i+1;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tprintf(\"%d %d\",min_index,min_index1);\n\t\n\treturn 0;\n\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,min,diff,flag=0,min_index=1,min_index1;\n\tint a[100];\n\tscanf(\"%d\",&n);\n\tmin_index1=n;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tmin=a[n]-a[1];\n\tif(min<0)\n\tmin=min*(-1);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tdiff=a[i]-a[i+1];\n\t\tif(diff<0)\n\t\tdiff=diff*(-1);\n\t\tif(diff<=min)\n\t\t{\n\t\t\tmin=diff;\n\t\t\t\n\t\t\tflag=1;\n\t\t\tmin_index=i;\n\t\t\tmin_index1=i+1;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tprintf(\"%d %d\",min_index,min_index1);\n\t\n\treturn 0;\n\t\n}\n"}
{"similarity_score": 0.7759398496240602, "equal_cnt": 33, "replace_cnt": 32, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 33, "lang": "GNU C", "fix_code_uid": "676bf199186a707c5f6cb040a20d5f09", "bug_code_uid": "8c57aa9d2f71d3219ea68ab9722f507b", "src_uid": "c0998741424cd53de41d31f0bbaef9a2", "apr_id": "ced6a1720c86511324f06bd161e04708", "difficulty": 1800, "tags": ["data structures", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nstruct node\n{\n    struct node *alph[26];\n    int live;\n} root;\n\nstruct node *createnode()\n{\n    struct node *newnode = malloc(sizeof(struct node));\n    int i;\n    for(i = 0; i < 26; i++)\n    {\n        newnode->alph[i] = NULL;\n    }\n    newnode->live = 0;\n    return newnode;\n}\n\nint k, ans = 0;\nint cost[26];\n\nint add(int c, struct node *node, char *str, int i)\n{\n    if(c == k + 1 || *(str + i) == '\\0')\n    {\n        return;\n    }\n    if(node->live == 0)\n    {\n        node->live = 1;\n        ans++;\n    }\n    if(node->alph[*(str + i) - 'a'] == NULL)\n    {\n        node->alph[*(str + i) - 'a'] = createnode();\n    }\n    add(c + cost[*(str + i) - 'a'], node->alph[*(str + i) - 'a'], str, i + 1);\n}\n\n\nint main()\n{\n    char string[1501];\n    int i;\n    scanf(\"%s\\n\", string);\n    for(i = 0; i < 26; i++)\n    {\n        cost[i] = 1 - (getchar() - '0');\n    }\n    scanf(\"%d\", &k);\n    for(i = 0; string[i] != '\\0'; i++)\n    {\n        add(0, &root, string + i, 0);\n    }\n    printf(\"%d\", ans - 1);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nstruct node\n{\n\tstruct node *alph[26];\n\tint live;\n} root;\n\nstruct node *createnode()\n{\n\tstruct node *newnode = malloc(sizeof(struct node));\n\tint i;\n\tfor(i = 0; i < 26; i++)\n\t{\n\t\tnewnode->alph[i] = NULL;\n\t}\n\tnewnode->live = 0;\n\treturn newnode;\n}\n\nint k, ans = 0;\nint cost[26];\n\nvoid add(int c, struct node *node, char *str, int i)\n{\n\tif(node->live == 0)\n\t{\n\t\tnode->live = 1;\n\t\tans++;\n\t}\n\tif(*(str + i) == '\\0')\n\t{\n\t\treturn;\n\t}\n\tif(node->alph[*(str + i) - 'a'] == NULL)\n\t{\n\t\tnode->alph[*(str + i) - 'a'] = createnode();\n\t}\n\tif(c + cost[*(str + i) - 'a'] <= k) add(c + cost[*(str + i) - 'a'], node->alph[*(str + i) - 'a'], str, i + 1);\n}\n\n\nint main()\n{\n\tchar string[1501];\n\tint i;\n\tscanf(\"%s\\n\", string);\n\tfor(i = 0; i < 26; i++)\n\t{\n\t\tcost[i] = 1 - (getchar() - '0');\n\t}\n\tscanf(\"%d\", &k);\n\troot.live = 1;\n\tfor(i = 0; string[i] != '\\0'; i++)\n\t{\n\t\tadd(0, &root, string + i, 0);\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8788282290279628, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "badab41cbc7fc78e36dc805d2ba553fe", "bug_code_uid": "98e7d1aaae59a781208b47870401810f", "src_uid": "d1a35297090550d9a95f014b0c09a01a", "apr_id": "9a6055480799f6d2a260f7b4c0054aed", "difficulty": 1300, "tags": ["dp", "sortings", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\nint a[1000],b[1000],c[10],i,time=0,num=0;\nvoid func(int m,int i)\n{\n    if(a[i]<9&&c[m])\n    {\n        time++;\n        c[m]--;\n    }\n    else if(a[i]==9||m==9)return;\n    else func(m+1,i);\n}\nvoid fund(int m)\n{\n    if(c[m])\n    {\n        c[m]--;\n    }\n    else if(m==9)num++;\n    else fund(m+1);\n}\nmain()\n{\n    memset(c,0,sizeof(c));\n    int n,x,y;\n    scanf(\"%d%d%d\",&n,&x,&y);\n    for(i=n-1;i>=0;i--)\n    {\n        a[i]=x%10;\n        x=x/10;\n        b[i]=y%10;\n        y=y/10;\n    }\n    for(i=0; i<n; i++)c[b[i]]++;\n    for(i=0; i<n; i++)func(a[i]+1,i);\n    memset(c,0,sizeof(c));\n    for(i=0; i<n; i++)c[b[i]]++;\n    for(i=0;i<n;i++)fund(a[i]);\n    printf(\"%d\\n%d\",num,time);\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\nint a[1010],b[1010],c[10],i,time=0,num=0;\nvoid func(int m,int i)\n{\n    if(a[i]<9&&c[m])\n    {\n        time++;\n        c[m]--;\n    }\n    else if(a[i]==9||m==9)return;\n    else func(m+1,i);\n}\nvoid fund(int m)\n{\n    if(c[m])\n    {\n        c[m]--;\n    }\n    else if(m==9)num++;\n    else fund(m+1);\n}\nmain()\n{\n    memset(c,0,sizeof(c));\n    int n;\n    char x[1001],y[1001];\n    scanf(\"%d\\n%s\\n%s\",&n,&x,&y);\n    for(i=0;i<n;i++)\n    {\n        a[i]=x[i]-'0';\n        b[i]=y[i]-'0';\n    }\n    for(i=0; i<n; i++)c[b[i]]++;\n    for(i=0; i<n; i++)func(a[i]+1,i);\n    memset(c,0,sizeof(c));\n    for(i=0; i<n; i++)c[b[i]]++;\n    for(i=0;i<n;i++)fund(a[i]);\n    printf(\"%d\\n%d\",num,time);\n}\n"}
{"similarity_score": 0.5039164490861618, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "be5d9b8a75ba166d7e7c1848cc5138d1", "bug_code_uid": "864ea33fea0d601276906b6daed65608", "src_uid": "76dd49c5545770a1dfbb2da4140199c1", "apr_id": "f819f61af41051847b6c4a0a8213d2dc", "difficulty": 1400, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long int ans,n,temp=0,i,small,min=100000;\n    scanf(\"%ld\",&n);\n    long int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%ld\",&a[i]);\n    for(i=n-1;i>=0;i--){\n        if(a[i]>=0){ \n        temp=a[i];\n        ans+=a[i];\n        }\n        else\n        temp=-a[i];\n        if(temp%2&&small>temp)\n        small=temp;\n    }\n    ans=(ans%2)?ans:ans-min;\n    printf(\"%ld\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    long int ans=0,n,i,min=100000;\n    scanf(\"%ld\",&n);\n    long int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%ld\",&a[i]);\n    for(i=n-1;i>=0;i--){\n        if(a[i] > 0)\n\t\t\tans += a[i];\n\t\telse\n\t\t\ta[i] = -a[i];\n\t\tif(a[i] % 2 && min > a[i])\n\t\t\tmin = a[i];\n    }\n    ans=(ans%2)?ans:ans-min;\n    printf(\"%ld\",ans);\n    return 0;\n}"}
{"similarity_score": 0.7793103448275862, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "00c0af5dfb1baeddb09e0d4e208c5bf1", "bug_code_uid": "1e2207b7fafe831d891151dfc87dc530", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "a70f4be8321862a46d2061c5ecdf4013", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n      int t,a[3],c,m[1001];\n      scanf(\"%d\",&t);\n      for(int j=0;j<t;j++)\n      {     \n            c=0;\n            for(int i=0;i<3;i++)\n            {     \n                  scanf(\"%d\",&a[i]);\n                  if(a[i]==1)\n                        c++;\n            }\n            if(c>=2)\n                  m[j]=c;\n            printf(\"\\n\");\n            \n      }\n      for(j=0;j<t;j++)\n      {\n            printf(\"%d\\n\",m[j]);\n      }\n", "fixed": "\n#include<stdio.h>\nint main()\n{\n      int t,a[3],c,c1=0,i,j;\n      scanf(\"%d\",&t);\n      for(j=0;j<t;j++)\n      {     \n            c=0;\n            for(i=0;i<3;i++)\n            {    \n                  scanf(\"%d\",&a[i]);\n                  if(a[i]==1)\n                        c++;\n            }\n            if(c>=2)\n                  c1++;\n            \n      }\n      printf(\"%d\",c1);\n\t  return 0;\n      \n}"}
{"similarity_score": 0.8159866777685262, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "1750123bf715600ef231f3b36bb9e795", "bug_code_uid": "d4a1d291f72ebd4a95a1e19c215d487f", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "4acdeab44f28df73fdbea41e2d97b66e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n     int n,v,a[51],i,j,k=0,flag,p,count=0;\n     scanf(\"%d%d\", &n,&v);\n     for(j=1;j<=n;j++)\n     {\n         scanf(\"%d\", &k);\n         flag=0;\n         for(i=0;i<k;i++)\n         {\n             scanf(\"%d\", &p);\n             if(p<v)\n             {\n                 flag=1;\n             }\n         }\n         if(flag==1)\n         {\n             a[k++]=j;\n             count++;\n         }\n     }\n     printf(\"%d\\n\", count);\n     if(count>0)\n     {\n          for(i=1;i<k;i++)\n     {\n         printf(\"%d \", a[i]);\n     }\n     printf(\"\\n\");\n     }\n\n     return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n     int n,v,i,j,k=0,flag,p,count=0,q;\n     scanf(\"%d%d\", &n,&v);\n     int a[n+1];\n     for(j=1;j<=n;j++)\n     {\n         scanf(\"%d\", &q);\n         flag=0;\n         for(i=0;i<q;i++)\n         {\n             scanf(\"%d\", &p);\n             if(p<v)\n             {\n                 flag=1;\n             }\n         }\n         if(flag==1)\n         {\n             a[k++]=j;\n\n         }\n     }\n     printf(\"%d\\n\", k);\n     if(k>0)\n     {\n          for(i=0;i<k;i++)\n     {\n             printf(\"%d \", a[i]);\n     }\n     printf(\"\\n\");\n     }\n     return 0;\n}\n"}
{"similarity_score": 0.6188769414575866, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "086b741242f8a6b05c528579435f70e1", "bug_code_uid": "7f72b6ff83cf0c8aca5e3b4599c9c7c1", "src_uid": "994a9cb52cf0fdab72be068eab1b27ef", "apr_id": "a7d0cdac63e4122564070cb6848576aa", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n     int t;\r\n    long long int a,b,max,min;\r\n    \r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        scanf(\"%lld %lld\",&a,&b);\r\n      \r\n       if(a>b)\r\n       max=a-b;\r\n       else\r\n       max=b-a;\r\n       for(int i=1; i <= a && i <= b; ++i)\r\n    {\r\n        if(a%i==0 && b%i==0)\r\n            min= i;\r\n    }\r\n    if(min>=max)\r\n    min=0;\r\n      printf(\"%lld %lld\\n\",max,min);\r\n      t--;\r\n    }", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n     int t;\r\n    long long int a,b,x,c,min=0;\r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        scanf(\"%lld %lld\",&a,&b);\r\n       \r\n       if(a>b)\r\n       x=a-b;\r\n       else\r\n       x=b-a;\r\n       c=a%x;\r\n       if(c>x-c)\r\n       c=x-c;\r\n      min=(a==b)?0:c;\r\n      printf(\"%lld %lld\\n\",x,min);\r\n      t--;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.963819095477387, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "942e82c53d6f8d4033fc029aeacfccd3", "bug_code_uid": "0d6b90c71131983db209feaa66a4a5dc", "src_uid": "05f251de93536024c05fbd77ed01b70b", "apr_id": "82f0b59a824ebfa883be4cc4e070dd0a", "difficulty": 2100, "tags": ["dsu", "number theory", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint par[4000000];\nint f[4000000];\n\nint find(int x)\n{\n     if (par[x] == x) {\n\t  return x;\n     } else {\n\t  return par[x] = find(par[x]);\n     }\n}\n\nvoid unite(int x, int y)\n{\n     x = find(x);\n     y = find(y);\n\n     if (x == y) return;\n\n     par[x] = y;\n}\n\nint main()\n{\n     int n, m, sum = 0, i, j;\n\n     scanf(\"%d %d\", &n, &m);\n\n     for (i = 0; i < 2 * n + 2 * m; i++) par[i] = i;\n\n     for (i = 0; i < n; i++) {\n\t  if (i + m <= n) {\n\t       unite(n + i + m - 1, i);\n\t       unite(i + m - 1, n + i);\n\t  } else {\n\t       unite(3 * n + m - i - 1, i);\n\t       unite(n + 2 * m + i, n + i);\n\t  }\n\n\t  if (i >= m - 1) {\n\t       unite(n + i - m + 1, i);\n\t       unite(i - m + 1, n + i);\n\t  } else {\n\t       unite(2 * n + i, i);\n\t       unite(2 * n + m - i - 1, n + i);\n\t  }\n     }\n\n     for (i = 0; i < n; i++) f[find(i)]++;\n\n     for (i = 0; i < 2 * n + 2 * m; i++) {\n\t  if (f[i] > 0) sum++;\n     }\n\n     printf(\"%d\\n\", sum);\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint par[4000000];\nint f[4000000];\n\nint find(int x)\n{\n     if (par[x] == x) {\n\t  return x;\n     } else {\n\t  return par[x] = find(par[x]);\n     }\n}\n\nvoid unite(int x, int y)\n{\n     x = find(x);\n     y = find(y);\n\n     if (x == y) return;\n\n     par[x] = y;\n}\n\nint main()\n{\n     int n, m, sum = 0, i, j;\n\n     scanf(\"%d %d\", &n, &m);\n\n     if (n < m) {\n\t  int tmp = n; n = m; m = tmp;\n     }\n\n     for (i = 0; i < 2 * n + 2 * m; i++) par[i] = i;\n\n     for (i = 0; i < n; i++) {\n\t  if (i + m <= n) {\n\t       unite(n + i + m - 1, i);\n\t       unite(i + m - 1, n + i);\n\t  } else {\n\t       unite(3 * n + m - i - 1, i);\n\t       unite(n + 2 * m + i, n + i);\n\t  }\n\n\t  if (i >= m - 1) {\n\t       unite(n + i - m + 1, i);\n\t       unite(i - m + 1, n + i);\n\t  } else {\n\t       unite(2 * n + i, i);\n\t       unite(2 * n + m - i - 1, n + i);\n\t  }\n     }\n\n     for (i = 0; i < 2 * n + 2 * m; i++) f[find(i)]++;\n\n     for (i = 0; i < 2 * n + 2 * m; i++) {\n\t  if (f[i] > 0) sum++;\n     }\n\n     printf(\"%d\\n\", sum);\n\n     return 0;\n}\n"}
{"similarity_score": 0.8862973760932945, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "dfe0abd02d685e1a244b2a9ba09da2c1", "bug_code_uid": "bb512f9d2eda8749078c3cee67dec9ec", "src_uid": "986a7d97e62856d5301d5a70ea01466a", "apr_id": "fe7be13f6644574fc447196a494ccab7", "difficulty": null, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,ans=0;\n    scanf(\"%I64d\",&n);\n    long long int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&b[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if((2*a[i])<b[i])\n        {\n            ans=ans-1;\n        }\n        else\n        {\n            if(b[i]%2==0)\n            {\n                ans=ans+((b[i]/2)*(b[i]/2));\n            }\n            else\n            {\n                ans=ans+((b[i]/2)*((b[i]/2)+1));\n            }\n        }\n\n    }\n    printf(\"%I64d\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,ans=0;\n    scanf(\"%I64d\",&n);\n    long long int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&b[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if((2*a[i])<b[i])\n        {\n            ans=ans-1;\n        }\n        else\n        {\n            if(b[i]%2==0)\n            {\n                ans=ans+((b[i]/2)*(b[i]/2));\n            }\n            else\n            {\n                if(b[i]==1)\n                {\n                    ans=ans-1;\n                }\n                else\n                {\n                   ans=ans+((b[i]/2)*((b[i]/2)+1));\n                }\n\n            }\n        }\n\n    }\n    printf(\"%I64d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9149392423159399, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "cfd556f7e7405a1bbcf77a3b8bebb8e4", "bug_code_uid": "9718d1f783a277471668d68aa13df0f8", "src_uid": "783772cb7a54bf65f648d3f8b7648263", "apr_id": "483a4a72bb048a92f2fd8b874ff65fe4", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long int ll;\nint main()\n{\n\tll t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tll a,b,c,r;\n\t\tscanf(\"%lld%lld%lld%lld\",&a,&b,&c,&r);\n\t\tll ans;\n\t\tif(a==b)\n\t\t\tans=0;\n\t\tif(a<b)\n\t\t{\n\t\t\tll temp=a;\n\t\t\ta=b;\n\t\t\tb=temp;\n\t\t}\n\t\tif(a-b!=0)\n\t\t{\n\t\t\tans=a-b;\n\t\t\tif(c+r<i=b || c-r >=a);\n\t\t\t\t\n\t\t\telse if(c<=b && c<a)\n\t\t\t{\n\t\t\t\tif(c+r>=a)\n\t\t\t\t{\n\t\t\t\t\tans=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tans=ans-(c+r-b);\n\t\t\t}\n\t\t\telse if(c>b && c<=a)\n\t\t\t{\n\t\t\t\tif(c-r>=b)\n\t\t\t\t\tans=ans-r;\n\t\t\t\telse \n\t\t\t\t\tans=ans-c-b;\n\n\t\t\t\tif(c+r<=a)\n\t\t\t\t\tans=ans-r;\n\t\t\t\telse\n\t\t\t\t\tans=ans-a-c;\n\t\t\t}\n\t\t\telse if(c>=a && c>b)\n\t\t\t{\n\t\t\t\tif(c-r<=b)\n\t\t\t\t{\n\t\t\t\t\tans=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tans=ans-a+c-r;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\ntypedef long long int ll;\nint main()\n{\n\tll t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tll a,b,c,r;\n\t\tscanf(\"%lld%lld%lld%lld\",&a,&b,&c,&r);\n\t\tll ans;\n\t\tif(a==b)\n\t\t\tans=0;\n\t\tif(a<b)\n\t\t{\n\t\t\tll temp=a;\n\t\t\ta=b;\n\t\t\tb=temp;\n\t\t}\n\t\tif(a-b!=0)\n\t\t{\n\t\t\tans=a-b;\n\t\t\tif(c+r<=b || c-r >=a);\n\t\t\t\t\n\t\t\telse if(c<=b && c<a)\n\t\t\t{\n\t\t\t\tif(c+r>=a)\n\t\t\t\t{\n\t\t\t\t\tans=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tans=ans-(c+r-b);\n\t\t\t}\n\t\t\telse if(c>b && c<=a)\n\t\t\t{\n\t\t\t\tif(c-r>=b)\n\t\t\t\t\tans=ans-r;\n\t\t\t\telse \n\t\t\t\t\tans=ans-c+b;\n\n\t\t\t\tif(c+r<=a)\n\t\t\t\t\tans=ans-r;\n\t\t\t\telse\n\t\t\t\t\tans=ans-a+c;\n\t\t\t}\n\t\t\telse if(c>=a && c>b)\n\t\t\t{\n\t\t\t\tif(c-r<=b)\n\t\t\t\t{\n\t\t\t\t\tans=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tans=ans-a+c-r;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9228650137741047, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4e3a61125f65f6167edd56c9e273647a", "bug_code_uid": "78e9baa8ad78483e1d4b2be34452c58c", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "6721907e7b218367e93306da88d60189", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t, m;\n    scanf(\"%d\",&t);\n    m=t-1;\n    int arr[t];\n    while(t--)\n    {\n    int n;\n    scanf(\"%d\",&n);\n    if(n==1)\n    arr[t]=1;\n    else if(n==2)\n    arr[t]=1;\n    else if(n==3)\n    arr[t]=2;\n    else\n    arr[t]=n/2;\n    }\n    for(int i=m;i>=0;i--)\n    printf(\"%d\\n\",arr[i]);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t, m;\n    scanf(\"%d\",&t);\n    m=t-1;\n    int arr[t];\n    while(t--)\n    {\n    int n;\n    scanf(\"%d\",&n);\n    if(n==1)\n    arr[t]=1;\n    else if(n==2)\n    arr[t]=1;\n    else if(n==3)\n    arr[t]=2;\n    else\n    {\n    if(n%2==0)\n    arr[t]=n/2;\n    else\n    arr[t]=(n/2)+1;\n    }\n    }\n    for(int i=m;i>=0;i--)\n    printf(\"%d\\n\",arr[i]);\n    return 0;\n}"}
{"similarity_score": 0.9514925373134329, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "8860f78e7c84b69fcb74d280c24b6868", "bug_code_uid": "461ec23c2d5ed32caf21160ca5c44f21", "src_uid": "1bcf130890495bcca67b4b0418476119", "apr_id": "5739f2cc5b3a87c45916afb9cf278367", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\tint a,b;\n\tscanf(\"%d%d\",&a,&b);\n\tif(a==b){\n\t\tprintf(\"%d\\n\",a);\n\t}else if(a>b){\n\t\t//a-b=2kx'\n\t\t//x'>=b\n\t\t//\u5f97\u5230\n\t\t//(a-b)/(2b)>=k\uff0ck\u662f\u6574\u6570\n\t\tdouble min_k=(a-b)/(2.0*b);\n\t\tint k=(int)min_k;\n\t\tchar find_up=0;\n\t\tdouble small_up=0.0;\n\t\tif(k>=1){\n\t\t\tfind_up=1;\n\t\t\tsmall_up=(a-b)/(2.0*k);\n\t\t}\n\t\tdouble small_down=0.0;\n\t\tchar find_down=0;\n\t\tmin_k=(a+b)/(2.0*b);\n\t\tk=(int)min_k;\n\t\tif(k>=1){\n\t\t\tfind_down=1;\n\t\t\tsmall_down=(a+b)/(2.0*k);\n\t\t}\n\t\tif(find_up){\n\t\t\tif(find_down){\n\t\t\t\tif(small_down>small_up){\n\t\t\t\t\tprintf(\"%f\\n\",small_up);\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"%f\\n\",small_down);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tprintf(\"%f\\n\",small_up);\n\t\t\t}\n\t\t}else{\n\t\t\tif(find_down){\n\t\t\t\tprintf(\"%f\\n\",small_down);\n\t\t\t}else{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t}\n\t\t}\n\n\t}else{\n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main() {\n\tlong long a,b;\n\tscanf(\"%lld%lld\",&a,&b);\n\tif(a==b){\n\t\tprintf(\"%lld\\n\",a);\n\t}else if(a>b){\n\t\t//a-b=2kx'\n\t\t//x'>=b\n\t\t//\u5f97\u5230\n\t\t//(a-b)/(2b)>=k\uff0ck\u662f\u6574\u6570\n\t\tdouble min_k=(a-b)/(2.0*b);\n\t\tlong long k=(long long)min_k;\n\t\tchar find_up=0;\n\t\tdouble small_up=0.0;\n\t\tif(k>=1){\n\t\t\tfind_up=1;\n\t\t\tsmall_up=(a-b)/(2.0*k);\n\t\t}\n\t\tdouble small_down=0.0;\n\t\tchar find_down=0;\n\t\tmin_k=(a+b)/(2.0*b);\n\t\tk=(long long)min_k;\n\t\tif(k>=1){\n\t\t\tfind_down=1;\n\t\t\tsmall_down=(a+b)/(2.0*k);\n\t\t}\n\t\tif(find_up){\n\t\t\tif(find_down){\n\t\t\t\tif(small_down>small_up){\n\t\t\t\t\tprintf(\"%.12lf\\n\",small_up);\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"%.12lf\\n\",small_down);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tprintf(\"%.12lf\\n\",small_up);\n\t\t\t}\n\t\t}else{\n\t\t\tif(find_down){\n\t\t\t\tprintf(\"%.12lf\\n\",small_down);\n\t\t\t}else{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t}\n\t\t}\n\n\t}else{\n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9980769230769231, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a0d022097c2df5e59c6b16edbfc70fd0", "bug_code_uid": "5042a527424b07b85261031126a8a78f", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "ba35ed8e8ce6125c290daf71660301e1", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nvoid swap(int *xp, int *yp)\n{\n    int temp = *xp;\n    *xp = *yp;\n    *yp = temp;\n}\n\nvoid bubbleSort(int arr[],int b[], int n)\n{\n   int i, j;\n   for (i = 0; i < n-1; i++)\n\n       // Last i elements are already in place\n       for (j = 0; j < n-i-1; j++){\n           if (arr[j] > arr[j+1]){\n              swap(&arr[j], &arr[j+1]);\n              swap(&b[j],&b[j+1]);\n           }\n       }\n}\n\nint main(){\n    int n,k;\n    scanf(\"%d\",&n);\n    int a[n],b[n],i,k1=0,k2=0,k3=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        b[i]=i;\n        if(a[i]==1)\n            k1++;\n        else if(a[i]==2)\n            k2++;\n        else\n            k3++;\n    }\n    bubbleSort(a,b,n);\n    if(k1<k2 && k1<k3){\n        printf(\"%d\\n\",k1);\n        k=k1;\n    }\n    else if(k2<k1 && k2<k3){\n        printf(\"%d\\n\",k2);\n        k=k2;\n    }\n    else{\n        printf(\"%d\\n\",k3);\n        k=k3;\n    }\n    i=0;\n    while(i<k){\n        printf(\"%d %d %d\\n\",b[i]+1,b[i+k1]+1,b[i+k1+k2]+1);\n        i++;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nvoid swap(int *xp, int *yp)\n{\n    int temp = *xp;\n    *xp = *yp;\n    *yp = temp;\n}\n\nvoid bubbleSort(int arr[],int b[], int n)\n{\n   int i, j;\n   for (i = 0; i < n-1; i++)\n\n       // Last i elements are already in place\n       for (j = 0; j < n-i-1; j++){\n           if (arr[j] > arr[j+1]){\n              swap(&arr[j], &arr[j+1]);\n              swap(&b[j],&b[j+1]);\n           }\n       }\n}\n\nint main(){\n    int n,k;\n    scanf(\"%d\",&n);\n    int a[n],b[n],i,k1=0,k2=0,k3=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        b[i]=i;\n        if(a[i]==1)\n            k1++;\n        else if(a[i]==2)\n            k2++;\n        else\n            k3++;\n    }\n    bubbleSort(a,b,n);\n    if(k1<=k2 && k1<=k3){\n        printf(\"%d\\n\",k1);\n        k=k1;\n    }\n    else if(k2<=k1 && k2<=k3){\n        printf(\"%d\\n\",k2);\n        k=k2;\n    }\n    else{\n        printf(\"%d\\n\",k3);\n        k=k3;\n    }\n    i=0;\n    while(i<k){\n        printf(\"%d %d %d\\n\",b[i]+1,b[i+k1]+1,b[i+k1+k2]+1);\n        i++;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3004904146232724, "equal_cnt": 46, "replace_cnt": 29, "delete_cnt": 5, "insert_cnt": 12, "fix_ops_cnt": 46, "lang": "GNU C11", "fix_code_uid": "2c548c2f58caecdba8bb9fb045b49f47", "bug_code_uid": "d878c755fbbbef376a2a47acce9746d2", "src_uid": "88c8376ad65c5c932c15dc09d6c4d75f", "apr_id": "4bb5d12263ee8940c8a43002c5efa973", "difficulty": 1600, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint t,n,l,r,s,a,b,A,B,i,j,I,p,q;\r\n\tint k[501][2];\r\n\tfor(i=1;i<=500;i++)\tk[i][0]=i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d%d%d%d\",&n,&l,&r,&s);\r\n\t\tA=r-l+1;\r\n\t\ta=s/A;\r\n\t\tb=s%A;\r\n\t\tp=A*(A+1)/2;\r\n\t\tq=A*(2*n-A+1)/2;\r\n\t\tif(s>=p&&s<=q){\r\n\t\t\tint kk[A+1]={0};\r\n\t\t\tfor(i=1;i<=n;i++) k[i][1]=1;\r\n\t\t\tif(A%2!=0){\r\n\t\t\t\tfor(i=(a-A/2),I=1;i<(a-A/2+A-b);i++,I++){\r\n\t\t\t\t\tk[i][1]=0;\r\n\t\t\t\t\tkk[I]=k[i][0];\r\n\t\t\t\t}\r\n\t\t\t\tfor(j=i+1;j<i+1+b;j++,I++){\r\n\t\t\t\t\tk[j][1]=0;\r\n\t\t\t\t\tkk[I]=k[j][0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(i=(a-A/2),B=0,I=1;i<(a-A/2+A-b+B);i++){\r\n\t\t\t\t\tif(i==a){\r\n\t\t\t\t\t\tB++;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tk[i][1]=0;\r\n\t\t\t\t\tkk[I]=k[i][0];\r\n\t\t\t\t\tI++;\r\n\t\t\t\t}\r\n\t\t\t\tfor(j=i+1,B=0;j<i+1+b+B;j++){\r\n\t\t\t\t\tif(j==a+1){\r\n\t\t\t\t\t\tB++;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tk[j][1]=0;\r\n\t\t\t\t\tkk[I]=k[j][0];\r\n\t\t\t\t\tI++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(i=1;i<l;i++){\r\n\t\t\t\tif(k[i][1]!=0) printf(\"%d \",k[i][0]);\r\n\t\t\t\telse{\r\n\t\t\t\t\tl++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(I=1;I<=A;I++) printf(\"%d \",kk[I]);\r\n\t\t\tfor(;i<=n;i++){\r\n\t\t\t\tif(k[i][1]!=0) printf(\"%d \",k[i][0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse printf(\"-1\");\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n} \r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n\tint t,n,l,r,s,a,b,A,p,q;\r\n\tint ans[501],v[501];\r\n\t//ans\ufffd\ufffd\u0171\ufffd\u0461\ufffd\u0435\ufffd\ufffd\ufffd\ufffd\ufffdv\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0429\ufffd\ufffd\ufffd\ufffd\u0461\ufffd\ufffd\ufffd\ufffd\ufffd \r\n\tmemset(ans,0,sizeof(ans));\r\n\tfor (scanf(\"%d\",&t);t--;)\r\n\t{\r\n\t\tscanf(\"%d%d%d%d\",&n,&l,&r,&s);\r\n\t\tA=r-l+1;\r\n\t\ta=s/A;\r\n\t\tb=s%A;\r\n\t\tp=A*(A+1)/2;\r\n\t\tq=A*(2*n-A+1)/2;\r\n\t\tif(!(s>=p&&s<=q))\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tmemset(v,0,sizeof(v));\r\n\t\t//\ufffd\ufffdans\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\ufffd\ufffd\u052a\ufffd\u0623\ufffd\u02b9\ufffd\ufffdA\ufffd\ufffd\u052a\ufffd\ufffd\u01bd\ufffd\ufffd\u05b5\u03aaa \r\n\t\tint j=A/2;\r\n\t\t//a\u01f0\ufffd\ufffd\u0461A/2\ufffd\ufffd \r\n\t\tfor (int tot=A/2,i=a-1;tot--;--i) \r\n\t\t\tans[j--]=i;\r\n\t\tj=A/2;\r\n\t\t//A\u03aa\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0461\ufffd\ufffda\ufffd\ufffd\ufffd\ufffd \r\n\t\tif (A%2) ans[++j]=a;\r\n\t\t//a\ufffd\ufffd\ufffd\ufffd\u0461A/2\ufffd\ufffd \r\n\t\tfor (int tot=A/2,i=a+1;tot--;++i) ans[++j]=i;\r\n\t\t//\ufffd\ufffdb\ufffd\ufffd\u052a\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u01b6\ufffd\r\n\t\t//\u017c\ufffd\ufffd\ufffd\ufffd\u052a\ufffd\ufffd\ufffd\ufffd\u0172\u01f0A/2\ufffd\ufffd\ufffd\u0537\ufffd\ufffd\ufffd\ufffd\ufffd\u052a\ufffd\u0632\ufffd\ufffd\ufffdb\ufffd\ufffd \r\n\t\tif (A%2==0)\r\n\t\t\tfor (int i=A/2;i&&b;--i,--b) ans[i]++;\r\n\t\tfor (int i=A;b--;--i) ans[i]++;\r\n\t\tfor (int i=1;i<=A;++i) v[ans[i]]=1;\r\n\t\tint tot=1; \r\n\t\tfor (int i=1;i<l;++i,++tot)\r\n\t\t{\r\n\t\t\twhile (v[tot]) tot++;\r\n\t\t\tprintf(\"%d \",tot);\r\n\t\t}\r\n\t\tfor (int i=1;i<=A;++i) printf(\"%d \",ans[i]);\r\n\t\tfor (int i=r+1;i<=n;++i,++tot)\r\n\t\t{\r\n\t\t\twhile (v[tot]) tot++;\r\n\t\t\tprintf(\"%d \",tot);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9987531172069826, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7693d65e08d08755222797d61584134f", "bug_code_uid": "80a8eb2aa8d48a1506032c8d879bcc9d", "src_uid": "942123e43a83d5a4cea95a6781064e28", "apr_id": "dcb67afa6858b633d0ba7532ea380a08", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int a[n],i,j,e=0,o=0,x,y,c=0,f=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if((i%2==0&&a[i]%2==1)||(i%2==1&&a[i]%2==0))\n            {\n            \tc++;\n            \tf=1;\n            }\n            if(a[i]%2==0)\n            e++;\n            else\n            o++;\n        }\n        printf(\"%d \",c);\n        if(n%2==0)\n        {\n        x=n/2;\n        y=n/2;\n        }\n        else\n        {\n            x=n/2+1;\n            y=n/2;\n        }\n        if(e!=x||o!=y)\n        printf(\"-1\\n\");\n        else if(c==n&&f!=1)\n        printf(\"0\\n\");\n        else\n        {\n           printf(\"%d\\n\",c/2); \n        }\n        \n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int a[n],i,j,e=0,o=0,x,y,c=0,f=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if((i%2==0&&a[i]%2==1)||(i%2==1&&a[i]%2==0))\n            {\n            \tc++;\n            \tf=1;\n            }\n            if(a[i]%2==0)\n            e++;\n            else\n            o++;\n        }\n       // printf(\"%d \",c);\n        if(n%2==0)\n        {\n        x=n/2;\n        y=n/2;\n        }\n        else\n        {\n            x=n/2+1;\n            y=n/2;\n        }\n        if(e!=x||o!=y)\n        printf(\"-1\\n\");\n        else if(c==n&&f!=1)\n        printf(\"0\\n\");\n        else\n        {\n           printf(\"%d\\n\",c/2); \n        }\n        \n    }\n}"}
{"similarity_score": 0.6494464944649446, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c624de2c1ed367358704888188b6e055", "bug_code_uid": "514ae638d9134e19b52a225c49d1da04", "src_uid": "840a4e16454290471faa5a27a3c795d9", "apr_id": "a731847497fba787f983b7c01724a45f", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 101\n#include<string.h>\nint   main()\n{\n    int n, j=0, i, m, b, c, d;\n    long long a;\n    scanf(\"%d\",&n);\n    do\n    {\n        scanf(\"%lld\",&a);\n        i = a/14;\n        m = i*21-a;\n        b = m%7;\n        c = m/7;\n        d = i-1;\n        if((b>=1&&b<=6)&&c>=d)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        j++;\n    }while(j<n);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define N 101\n#include<string.h>\nint   main()\n{\n    int n, j=0, m;\n    long long a;\n    scanf(\"%d\",&n);\n    do\n    {\n        scanf(\"%lld\",&a);\n        m = a%14;\n        if(m>=1&&m<=6&&a>14)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        j++;\n    }while(j<n);\n    return 0;\n}\n"}
{"similarity_score": 0.998995983935743, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d7b1a385607044fbdba57146d1c0923e", "bug_code_uid": "b4a189211e94aa5ddae08233ec5ea3fd", "src_uid": "adaae163882b064bf7257e82e8832ffb", "apr_id": "912cf847ff734a5642f6d57354f3fff8", "difficulty": 1500, "tags": ["dp", "graphs", "probabilities", "dfs and similar", "trees"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define MAX_NM 101100\ndouble ans=0,p=1;\nint n;\nint tot;\nint last[MAX_NM];\nint next[MAX_NM];\nint h[MAX_NM];\nint node[MAX_NM];\nint f[MAX_NM];\nint add(int x, int y)\n{\n\n    tot++;\n\th[tot]=y;\n\tnext[tot]=last[x];\n\tlast[x]=tot;\n\tnode[x]++;\n\treturn 0;\n}\nint dfs(int x,double p)\n{\n\tint top;\n    top=last[x];\n\twhile (top!=0)\n\t{ \n\t  if (f[h[top]]==0)\n\t  {\n\t   ans+=p*(1.0/(node[x]-1));\n\t   f[h[top]]=1;\n\t   dfs(h[top],p*(1.0/(node[x]-1)));\n\t  }\n\t   top=next[top];\n\t}\n\treturn 0;\n}\nint main()\n{\n   int a,b,i;\n   memset(last,0,sizeof(last));\n   memset(next,0,sizeof(next));\n   memset(h,0,sizeof(h));\n   memset(node,0,sizeof(node));\n   memset(f,0,sizeof(f));\n   scanf(\"%d\",&n);\n   tot=0;\n   node[1]=1;\n   for (i=1;i<n;i++)\n   {\n\t  \n\t   scanf(\"%d %d\",&a,&b);\n\t  // if (a<b)add(a,b);\n\t   add(a,b);\n\t   add(b,a);\n\t   //if (a>b)add(b,a);\n\t//   printf(\"tot :%d\\n\",tot);\n\t  // printf(\"%d\\n\",h[tot]);\n   }\n   ans=0.0;\n   f[1]=1;\n   dfs(1,p);\n   printf(\"%.20lf\",ans);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define MAX_NM 201100\ndouble ans=0,p=1;\nint n;\nint tot;\nint last[MAX_NM];\nint next[MAX_NM];\nint h[MAX_NM];\nint node[MAX_NM];\nint f[MAX_NM];\nint add(int x, int y)\n{\n\n    tot++;\n\th[tot]=y;\n\tnext[tot]=last[x];\n\tlast[x]=tot;\n\tnode[x]++;\n\treturn 0;\n}\nint dfs(int x,double p)\n{\n\tint top;\n    top=last[x];\n\twhile (top!=0)\n\t{ \n\t  if (f[h[top]]==0)\n\t  {\n\t   ans+=p*(1.0/(node[x]-1));\n\t   f[h[top]]=1;\n\t   dfs(h[top],p*(1.0/(node[x]-1)));\n\t  }\n\t   top=next[top];\n\t}\n\treturn 0;\n}\nint main()\n{\n   int a,b,i;\n   memset(last,0,sizeof(last));\n   memset(next,0,sizeof(next));\n   memset(h,0,sizeof(h));\n   memset(node,0,sizeof(node));\n   memset(f,0,sizeof(f));\n   scanf(\"%d\",&n);\n   tot=0;\n   node[1]=1;\n   for (i=1;i<n;i++)\n   {\n\t  \n\t   scanf(\"%d %d\",&a,&b);\n\t  // if (a<b)add(a,b);\n\t   add(a,b);\n\t   add(b,a);\n\t   //if (a>b)add(b,a);\n\t//   printf(\"tot :%d\\n\",tot);\n\t  // printf(\"%d\\n\",h[tot]);\n   }\n   ans=0.0;\n   f[1]=1;\n   dfs(1,p);\n   printf(\"%.20lf\",ans);\n  return 0;\n}\n"}
{"similarity_score": 0.9027431421446384, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "dafac6922cf1116dc6eaa5bb6b7da018", "bug_code_uid": "4423d0592746872acb11853e0b114e91", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "e73630da2b5b15d6d7f9453bb906c611", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    long int n ;\n    int h[2], m[2], count = 1, cnt = 1 ;\n\n    scanf(\"%d\",&n);\n\n    scanf(\"%d %d\",&h[0],&m[0]);\n\n    n-=1;\n\n    while(n--)\n    {\n        scanf(\"%d %d\",&h[1],&m[1]);\n\n        if( ( h[1] == h[0]) && ( m[1] == m[0] ) )\n        {\n            cnt++;\n            h[0] = h[1] ;\n            m[0] = m[1] ;\n        }\n        else\n        {\n            h[0] = h[1] ;\n            m[0] = m[1] ;\n\n            if( cnt > 1 )\n            {\n                if( cnt > count )\n                    count = cnt;\n                cnt = 1;\n            }\n        }\n    }\n\n    printf(\"%d\\n\",count);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n    long int n ;\n    int h[2], m[2], count = 1, cnt = 1 ;\n\n    scanf(\"%d\",&n);\n\n    scanf(\"%d %d\",&h[0],&m[0]);\n\n    n -= 1;\n\n    while(n--)\n    {\n        scanf(\"%d %d\",&h[1],&m[1]);\n\n        if( ( h[1] == h[0]) && ( m[1] == m[0] ) )\n        {\n            cnt++;\n\n            h[0] = h[1] ;\n            m[0] = m[1] ;\n        }\n        else\n        {\n            h[0] = h[1] ;\n            m[0] = m[1] ;\n\n            cnt = 1;\n        }\n\n        if( cnt > count )\n            count = cnt;\n    }\n\n    printf(\"%d\\n\",count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.991812865497076, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1fe3033f9be71c7d269b7ee30b47b2e4", "bug_code_uid": "9a2842e1a784d8407389d7cf65c290aa", "src_uid": "0515ac888937a4dda30cad5e2383164f", "apr_id": "6e51f3bc5042853017bb9929a2290a87", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"input.txt\",\"r\", stdin);\n\t\tfreopen(\"output.txt\",\"w\", stdout);\n\t#endif\n\tint n,k,i;\n\tscanf(\"%d%d\",&n,&k);\n\tchar str[n];\n\tscanf(\"%s\",str);\n\tif (n==1)\n\t\tstr[0]='0';\n\telse\n\t{\n\n\t\tif (str[0]!='1' && k>0)\n\t\t{\n\t\t\tstr[0]='1';\n\t\t\tk--;\n\t\t}\n\t\ti=1;\n\t\twhile(k>0 && i<n)\n\t\t{\n\t\t\tif(str[i]!='0')\n\t\t\t{\n\t\t\t\tstr[i]='0';\n\t\t\t\tk--;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t}\n\tprintf(\"%s\",str);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"input.txt\",\"r\", stdin);\n\t\tfreopen(\"output.txt\",\"w\", stdout);\n\t#endif\n\tint n,k,i;\n\tscanf(\"%d%d\",&n,&k);\n\tchar str[n];\n\tscanf(\"%s\",str);\n\tif (n==1 && k>0)\n\t\tstr[0]='0';\n\telse\n\t{\n\n\t\tif (str[0]!='1' && k>0)\n\t\t{\n\t\t\tstr[0]='1';\n\t\t\tk--;\n\t\t}\n\t\ti=1;\n\t\twhile(k>0 && i<n)\n\t\t{\n\t\t\tif(str[i]!='0')\n\t\t\t{\n\t\t\t\tstr[i]='0';\n\t\t\t\tk--;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t}\n\tprintf(\"%s\",str);\n\treturn 0;\n}"}
{"similarity_score": 0.8742690058479532, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7f9614b7a3f902c12768aea7483ffde2", "bug_code_uid": "6561096b38c06651298ea9df1641bafa", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "07d9dd33b55079e727cea5e06be551e8", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid main()\r\n{\r\n    int t;\r\n    long long x,j,n,sum;\r\n\r\n    scanf(\"%d\" , &t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%ld\" ,&n);\r\n      sum=0;\r\n    for(j=0;j<n;j++)\r\n    {\r\n       scanf(\"%lld\" ,&x);\r\n         sum=sum+x;\r\n    }\r\n\r\n\r\n printf(\"%lld\\n\", abs(sum));\r\n\r\n}\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid main()\r\n{\r\n    int t;\r\n    long long int x,j,n,sum;\r\n\r\n    scanf(\"%d\" , &t);\r\n\r\n   while(t--)\r\n    {\r\n        scanf(\"%lld\" ,&n);\r\n      sum=0;\r\n\r\n    for(j=0;j<n;j++)\r\n    {\r\n        x=0;\r\n       scanf(\"%lld\" ,&x);\r\n         sum=sum+x;\r\n\r\n    }\r\n\r\nif (sum<0)\r\n  printf(\"%lld\\n\", -sum);\r\nelse\r\n printf(\"%lld\\n\", sum);\r\n\r\n}\r\n}"}
{"similarity_score": 0.11162079510703364, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "3539321b28fc32b49d602b24c59ca7f9", "bug_code_uid": "0786162eca199eaf86e6aca8ee754916", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "86f9cff85b2a805475d7ae5e80c4d221", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,arr1[2510],arr2[2510],i,arr3[52],k=1,j,l;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n*n;i++)\n    {\n        scanf(\"%d\",&arr1[i]);\n        scanf(\"%d\",&arr2[i]);\n    }\n    arr3[1]=0;\n    for(i=1;i<=n*n;i++)\n    {\n        if(k-2==n)\n        {\n            break;\n        }\n        for(j=1;arr3[j]!=0;j++)\n        {\n            if(arr3[j]==arr1[i]||arr3[j]==arr2[i])\n                break;\n        }\n        if(arr3[j]==0)\n        {\n            if(arr1[i]==arr2[i])\n            {\n                arr3[k]=arr1[i];\n                arr3[k+1]=0;\n                k+=2;\n                printf(\" %d\",i);\n            }\n            else\n            {\n                arr3[k]=arr1[i];\n                arr3[k+1]=arr2[i];\n                arr3[k+2]=0;\n                k+=3;\n                printf(\"%d \",i);\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,n,i,arr1[2501],arr2[2501],cnt=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=2500;i++)\n    {\n        arr1[i]=1;\n        arr2[i]=1;\n    }\n    for(i=1;i<=n*n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        if(arr1[a]==1&&arr2[b]==1)\n        {\n            arr1[a]=0;\n            arr2[b]=0;\n            cnt++;\n            printf(\"%d \",i);\n        }\n        if(cnt==n)\n            break;\n    }\n    return 0;\n}"}
{"similarity_score": 0.998393144081414, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f482ac30447f055173383a0e31113fdf", "bug_code_uid": "05cf845a456fcbfbea209a2143c5b0c4", "src_uid": "1e061d8c4bff217047ddc58e88be0c3f", "apr_id": "5a2da6769e8184f26fa6e007bb3d013a", "difficulty": 1900, "tags": ["constructive algorithms", "implementation", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int k, i, j;\n    scanf(\"%d\", &k);\n    if (k % 2 == 0) puts(\"NO\");\n    else if (k == 1) {\n        puts(\"YES\\n2 1\\n1 2\");\n    } else {\n        printf(\"YES\\n%d %d\\n\", k + k + 4, k * (k + k + 4) / 2);\n        for (i = 2; i <= k; ++i)\n            printf(\"1 %d\\n%d %d\\n%d %d\\n\", i, i, k + 1, i, k + 2);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i, j);\n        printf(\"%d %d\\n\", k + 1, k + 2);\n\n        for (i = 2; i <= k; ++i)\n            printf(\"%d %d\\n%d %d\\n%d %d\\n\",\n                k + 2, k + 2 + i, k + 2 + i, k + k + 3, k + 2 + i, k + k + 4);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i + k + 2, j + k + 2);\n        printf(\"%d %d\\n\", k + k + 3, k + k + 4);\n        printf(\"1 %d\\n\", k + 3);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int k, i, j;\n    scanf(\"%d\", &k);\n    if (k % 2 == 0) puts(\"NO\");\n    else if (k == 1) {\n        puts(\"YES\\n2 1\\n1 2\");\n    } else {\n        printf(\"YES\\n%d %d\\n\", k + k + 4, k * (k + k + 4) / 2);\n        for (i = 2; i <= k; ++i)\n            printf(\"1 %d\\n%d %d\\n%d %d\\n\", i, i, k + 1, i, k + 2);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i, j);\n        printf(\"%d %d\\n\", k + 1, k + 2);\n\n        for (i = 2; i <= k; ++i)\n            printf(\"%d %d\\n%d %d\\n%d %d\\n\",\n                k + 3, k + 2 + i, k + 2 + i, k + k + 3, k + 2 + i, k + k + 4);\n        for (i = 2; i < k; ++i)\n            for (j = i + 1; j <= k; ++j)\n                if ((i & 1) || j != i + 1) printf(\"%d %d\\n\", i + k + 2, j + k + 2);\n        printf(\"%d %d\\n\", k + k + 3, k + k + 4);\n        printf(\"1 %d\\n\", k + 3);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9748427672955975, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6a7ee7d1f2b37dc77684b33a1dd21442", "bug_code_uid": "c7bd446cc3e74cdf56cb7b5d2b042cda", "src_uid": "621c82478be3dadcf60c383ba078a49e", "apr_id": "7493d8ff7ff66fe38104a064d7542a1c", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX_N 100001\n\nint main() {\n  int n, i, c[2][2];\n  char a[MAX_N];\n  char b[MAX_N];\n  scanf(\"%d\", &n);\n  scanf(\"%s\", a);\n  scanf(\"%s\", b);\n  for (i = 0; i < n; ++i) {\n    ++c[a[i] - '0'][b[i] - '0'];\n  }\n  printf(\"%d\\n\", c[0][1] * c[1][0] + c[0][0] * (c[1][0] + c[1][1]));\n  return 0;\n}", "fixed": "#include <stdio.h>\n#define MAX_N 100001\n\nint main() {\n  int n, i;\n  long long c[2][2];\n  char a[MAX_N];\n  char b[MAX_N];\n  scanf(\"%d\", &n);\n  scanf(\"%s\", a);\n  scanf(\"%s\", b);\n  for (i = 0; i < n; ++i) {\n    ++c[a[i] - '0'][b[i] - '0'];\n  }\n  printf(\"%lld\\n\", c[0][1] * c[1][0] + c[0][0] * (c[1][0] + c[1][1]));\n  return 0;\n}"}
{"similarity_score": 0.9605488850771869, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4f8c158c5075d8c9ab5a1331192a724b", "bug_code_uid": "c40e78d95dd674adcad5fa9369fee5d1", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "dfe1a35bc22338ee04e814f331f83b9d", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint num[50];\nint main()\n{\n        int n, c=0, a=0, b=1, i;\n        long int v;\n        scanf(\"%d %ld\", &n, &v);\n\n        while(n--){\n                int k, f=0;\n                scanf(\"%d\", &k);\n                long int value[k], i;\n                for(i=0; i<k; i++) {\n                        scanf(\"%ld\", &value[i]);\n                        if(value[i] < v) {\n                                c++;\n                                f = 1;\n                        }\n                }\n\n                if(f) num[a++] = b++;\n                else b++;\n        }\n        printf(\"%d\\n\", c);\n        if(c) {\n                for(i=0; i<a; i++) {\n                        if(!i) printf(\"%d\", num[i]);\n                        else printf(\" %d\", num[i]);\n                }\n                printf(\"\\n\");\n        }\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint num[50];\nint main()\n{\n        int n, c=0, a=0, b=1, i;\n        long int v;\n        scanf(\"%d %ld\", &n, &v);\n\n        while(n--){\n                int k, f=0;\n                scanf(\"%d\", &k);\n                long int value[k], i;\n                for(i=0; i<k; i++) {\n                        scanf(\"%ld\", &value[i]);\n                        if(value[i] < v) {\n                                f = 1;\n                        }\n                }\n\n                if(f) num[a++] = b++;\n                else b++;\n        }\n        printf(\"%d\\n\", a);\n        if(a) {\n                for(i=0; i<a; i++) {\n                        if(!i) printf(\"%d\", num[i]);\n                        else printf(\" %d\", num[i]);\n                }\n                printf(\"\\n\");\n        }\n        return 0;\n}\n"}
{"similarity_score": 0.11180124223602485, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "78b12f9fa175615eeb0b9bd25570b373", "bug_code_uid": "9f58938d23383073d23d0c7a00d91c92", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "174213b8c8fafea3439dda3ec16e7313", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\n\nint main(){\n    int n,ok=0,i,count=0,length;\n    char ch[10000];\n    scanf(\"%d\\n\",&n);\n    gets(ch);\n    length=strlen(ch);\n    count=length;\n\n    for(i=0;i<n;i++)\n    {\n        if((ch[i]=='1'&&ch[i+1]=='0')||(ch[i]=='0'&&ch[i+1]=='1'))\n           {\n             count=count-2;\n             i=i+1;\n\n           }\n\n           if((ch[i]=='1'&&ch[i+1]=='1'))\n           {\n\n             ok=1;\n\n\n           }\n\n           if (ok==1&&ch[i+1]=='0')\n           {\n               count=count-2;\n             ok=0;\n             i=i+1;\n\n\n           }\n\n    }\nprintf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{  long int n,i,zero=0,one=0;\nchar ch[200200];\nscanf(\"%ld\\n\",&n);\ngets(ch);\nfor(i=0;i<n;i++)\n{\n    if(ch[i]=='0')\n    {\n        zero++;\n    }\n    else\n    {\n        one++;\n    }\n}\nif(zero>one)\n    printf(\"%ld\",n-(one*2));\nelse\n    printf(\"%ld\",n-(zero*2));\n\n    return 0;\n}\n"}
{"similarity_score": 0.9779086892488954, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c4b3fe2a0fae7be0f85253e1af0ecbb2", "bug_code_uid": "902febabf57c106d6a8cafbfa009a5a9", "src_uid": "1a3b22a5a8e70505e987d3e7f97e7883", "apr_id": "d1be604c0437b9adb06c7018708bb473", "difficulty": 1600, "tags": ["data structures", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n+1];\n    int i;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    int top=0,no_of_way=0;\n    for(i=0;i<n;i++)\n       {\n           if(a[i]==0)\n            no_of_way+=top;\n           else\n            top++;\n       }\n       printf(\"%d\",no_of_way);\n       return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n+1];\n    int i;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    long long top=0,no_of_way=0;\n    for(i=0;i<n;i++)\n       {\n           if(a[i]==0)\n            no_of_way+=top;\n           else\n            top++;\n       }\n       printf(\"%I64d\",no_of_way);\n       return 0;\n}\n"}
{"similarity_score": 0.8625, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "aba992ac3e9e7338d8b7c28c4f3c9b82", "bug_code_uid": "75f7a23cd83bdf96a4aa5c7334a6797f", "src_uid": "260666df22ee510fcce3ebdfbb8b71a2", "apr_id": "6b43cc54d06cc74e80dbe7049b96c6a6", "difficulty": 1000, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  float k,i,l=0.000000000000;\n  scanf(\"%f\",&k);\n  for(i=1;i<=k;i++){\n    l=l+(i/k);\n  }\n printf(\"%.12f\",l);\n\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  float k,i,l=0;\n  scanf(\"%f\",&k);\n  for(i=k;i>=1;i--){\n    l=l+(1.000000000000/i);\n  }\n printf(\"%.12f\",l);\n\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9875457875457876, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4bb68611f14ea86c73fe15616dfa89ea", "bug_code_uid": "308175d331c02a157d70f65064871334", "src_uid": "06212223295c56a78a5d4e55c53a63e0", "apr_id": "343c1a40103e7dc85d9df16ce4f571cb", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint cmp(const void*a,const void *b)\r\n{\r\n    return *(int *)a- *(int *)b;\r\n}\r\nint a[300050];\r\nint main()\r\n{\r\n    int t,n;\r\n    int count=0;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       scanf(\"%d\",&n);\r\n       for(int i=0;i<n;i++);\r\n       {\r\n           scanf(\"%d\",&a[i]);\r\n       }\r\n       qsort(a,n,sizeof(int),cmp);\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           if(a[i+1]>a[i]){\r\n               count++;\r\n           }\r\n       }\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           if(count>i)\r\n           printf(\"%d\",count);\r\n           else\r\n           printf(\"%d\",i);\r\n       }\r\n       printf(\"\\n\");\r\n       count=0;\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint cmp(const void*a,const void *b)\r\n{\r\n    return *(int *)a- *(int *)b;\r\n}\r\nint a[300050];\r\nint main()\r\n{\r\n    int t,n;\r\n    int count=1;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       scanf(\"%d\",&n);\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           scanf(\"%d\",&a[i]);\r\n       }\r\n       qsort(a,n,sizeof(int),cmp);\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           if(a[i+1]>a[i]){\r\n               count++;\r\n           }\r\n       }\r\n       for(int i=0;i<n;i++)\r\n       {\r\n           if(count>i+1)\r\n           printf(\"%d \",count);\r\n           else\r\n           printf(\"%d \",i+1);\r\n       }\r\n       printf(\"\\n\");\r\n       count=1;\r\n    }\r\n}"}
{"similarity_score": 0.3844984802431611, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9cbe49d9aed3b6d1c8f7721903d67882", "bug_code_uid": "db49ce027595e7ad98cc12a765376253", "src_uid": "3545385c183c29f9b95aa0f02b70954f", "apr_id": "de26503659af5047d4a59a26837654c2", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n  int num;\n  int score;\n  int halved_score[13845];\n  int sum;\n  scanf(\"%d\", &num);\n  for (int i = 0; i < num; i++)\n  {\n    scanf(\"%d\", &score);\n    if (score%2 == 0)\n      halved_score[i] = score/2;\n    else\n    {\n      if (i%2 == 0)\n        halved_score[i] = score/2;\n      else\n      {\n        if (score > 0)\n          halved_score[i] = score/2 + 1;\n        else\n          halved_score[i] = score/2 - 1;\n      }\n    }\n    sum += halved_score[i];\n  }\n  if (sum == 0)\n    printf(\"%d\", sum);\n  else\n    for (int i = 0; i < num; i++)\n      printf(\"%d, \", halved_score[i]);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n  int num;\n  int score[13845];\n  int halved_score[13845];\n  int sum = 0;\n  scanf(\"%d\", &num);\n  for (int i = 0; i < num; i++)\n  {\n    scanf(\"%d\", &score[i]);\n    sum += score[i]/2;\n    halved_score[i] = score[i]/2;\n  }\n  int i;\n  if (sum > 0)\n  {\n    i = 0;\n    while(sum)\n    {\n      if(score[i]%2 != 0 && score[i] < 0)\n      {\n        halved_score[i]--;\n        sum--;\n      }\n      i++;\n    }\n  }\n  else if (sum < 0)\n  {\n    i = 0;\n    while(sum < 0)\n    {\n      if(score[i]%2 != 0 && score[i] > 0)\n      {\n        halved_score[i]++;\n        sum++;\n      }\n      i++;\n    }\n  }\n\n  for (int i = 0; i < num; i++)\n    printf(\"%d\\n\", halved_score[i]);\n  return 0;\n}\n"}
{"similarity_score": 0.53836784409257, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "18692e9460c186b2c7d23afab9074a10", "bug_code_uid": "f4228b2af540f283d9e24fc2c0f9dbf4", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "31313a83e90af2c240bd0ae5ed1230fa", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int q, i, n, a, b, A[100];\n    \n    scanf(\"%lld\", &q);\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%lld%lld%lld\", &n, &a, &b);\n        \n        if(b >= (2 * a))\n        {\n            A[i] = a * n;\n        }\n        else\n        {\n            A[i] = a * n - (2 * a - b) * (n / 2);\n        }\n    }\n    \n    for(i=0;i<q;i++)\n        printf(\"%lld\\n\", A[i]);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int q, i, a, b;\n    long long int n, z, A[500] = {0};\n\n    scanf(\"%d\", &q);\n    for(i=1;i<=q;i++)\n    {\n        scanf(\"%lld%d%d\", &n, &a, &b);\n\n        if(b >= (2 * a))\n            z = a * n;\n        else if(b < (2 * a))\n            z = a * n - (2 * a - b) * (n / 2);\n\n        A[i] = z;\n    }\n\n    for(i=1;i<=q;i++)\n        printf(\"%lld\\n\", A[i]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.2935206869633099, "equal_cnt": 16, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "76cdab6f0b96021b5d25786f29c78255", "bug_code_uid": "7f06f9d801c2b8c03bfbc1974e99c5e0", "src_uid": "16c016c0735be1815c7b94c5c50516f1", "apr_id": "1a2bd40f6f9b262ae7dfa054239a2c76", "difficulty": 1700, "tags": ["dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  int t,k,j,i,s=0;\n  int a,b;\n  scanf(\"%d %d\",&t,&k);\n  int p[10001]={0};\n  int sum[10001]={0};\n  \n  for(j=0;j<t;j++)\n  {\n    scanf(\"%d %d\",&a,&b);\n    s=0;\n    \n    for(i=0;i<=b;i++)\n    {\n      if(i<k)\n      p[i]=1;\n      else\n      p[i]=p[i-1]%1000000007+p[i-k]%1000000007;\n      s+=p[i];\n      sum[i]=s;\n    }\n    sum[b]%=1000000007;\n    sum[a]%=1000000007;\n    printf(\"%d\\n\",sum[b]-sum[a-1]);\n    int p[10001]={0};\n    int sum[10001]={0};\n\n  }\n  return 0;\n\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  long long t,k,j,i,s=0;\n  long long a,b;\n  scanf(\"%I64d %I64d\",&t,&k);\n  long long p[100001];\n  \n  \n  \n    \n    /*for(i=0;i<=100001;i++)\n    {\n      if(i<k)\n      p[i]=1;\n      else\n      p[i]=p[i-1]+p[i-k];\n      if(p[i]>1000000006)\n      p[i]%=1000000007;\n      \n    }*/\n    for(int i=0;i<100001;i++)\n{ if(i-k+1>0)p[i]=p[i-1]+p[i-k];\n  else p[i]=1;\n  if(p[i]>1000000006)p[i]=p[i]%1000000007;\n}\nfor(int i=1;i<100001;i++)\n{ p[i]=p[i]+p[i-1];\n if(p[i]>1000000006)p[i]=p[i]%1000000007;\n}\n    \n    \n    \n  long long sum[100001]={0};    \n  \n \n  for(i=0;i<t;i++)\n  {\n    scanf(\"%I64d %I64d\",&a,&b);\n    long long z= (p[b]-p[a-1])%1000000007;\n    if(z<0)z+=1000000007;\n    printf(\"%I64d\\n\",z%1000000007);\n  }\n  return 0;\n\n}"}
{"similarity_score": 0.38872691933916426, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "38edd3fd41ede3667678c18a3c7f709f", "bug_code_uid": "222ff7e6d692cf4a74048f8b227aa331", "src_uid": "2535fc09ce74b829c26e1ebfc1ee17c6", "apr_id": "ea55e544d4a35f38df348170450f066f", "difficulty": 1500, "tags": ["data structures", "greedy", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t300000\n\nint main() {\n\tstatic int stack[N], ii[N];\n\tint n, h, l, cnt, bad, i;\n\n\tscanf(\"%d\", &n);\n\tcnt = 0;\n\tbad = 0;\n\ti = 0;\n\tl = 0;\n\tfor (h = 0; h < n + n; h++) {\n\t\tstatic char cc[16];\n\t\tint x;\n\n\t\tscanf(\"%s\", cc);\n\t\tif (cc[0] == 'r') {\n\t\t\tif (stack[l - 1] != i) {\n\t\t\t\tbad = 1;\n\t\t\t\tstack[ii[i]] = stack[l - 1], stack[l - 1] = i;\n\t\t\t}\n\t\t\tl--, i++;\n\t\t} else if (cc[0] == 'a') {\n\t\t\tcnt += bad ? 1 : 0, bad = 0;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tx--;\n\t\t\tstack[ii[x] = l++] = x;\n\t\t}\n\t}\n\tcnt += bad ? 1 : 0, bad = 0;\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n/* http://codeforces.com/contest/821/submission/28035100 (Dukkha) */\n\n#define N\t300000\n\nint main() {\n\tstatic int aa[N];\n\tint n, i, a, k, cnt;\n\n\tscanf(\"%d\", &n);\n\tk = 0, cnt = 0;\n\tfor (i = 0, a = 1; i < n + n; i++) {\n\t\tstatic char cc[16];\n\t\tint x;\n\n\t\tscanf(\"%s\", cc);\n\t\tif (cc[0] == 'a') {\n\t\t\tscanf(\"%d\", &x);\n\t\t\taa[k++] = x;\n\t\t} else {\n\t\t\tif (k > 0 && aa[--k] != a) {\n\t\t\t\tk = 0;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\ta++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.979933110367893, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "95ba8f90028e8fbab75b64c6a61b121a", "bug_code_uid": "898b3e3c49612a56814dda49eeb031e0", "src_uid": "0c2550b2df0849a62969edf5b73e0ac5", "apr_id": "0ef96185c34d52518b3565ceece873d4", "difficulty": 1300, "tags": ["dp", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\\n\", &n);\n\tint a[n];\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d\\n\", &a[i]);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif ((a[i] / 4 - a[i] % 2) <= 0 || (n % 4 == 3 && n <= 11))\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t\tprintf(\"%d\\n\", a[i]/4 - a[i]%2);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\\n\", &n);\n\tint a[n];\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d\\n\", &a[i]);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (((a[i] / 4 - a[i] % 2) <= 0) || (a[i] % 4 == 3 && a[i] <= 11))\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t\tprintf(\"%d\\n\", a[i]/4 - a[i]%2);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9975845410628019, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f7fbbac98405105a5eb086b6b93af59e", "bug_code_uid": "03ee77b0341281a5f5302be483e6465b", "src_uid": "a99f5e08f3f560488ff979a3e9746e7f", "apr_id": "a9afb45d91ff9826a1505d2189d1340a", "difficulty": 1200, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\t\n\tint n,a[100002],i,j;\n\tscanf(\"%d\",&n);\n\tif(n<=2)\n\t{printf(\"1\\n\");\n\t for(i=1;i<=n;i++)\n\t\tprintf(\"%d \",i);\n\t return 0;\n\t}\n\tprintf(\"2\\n\");\n\tfor(i=0;i<=100000;i++)\n\t\ta[i]=1;\n\tfor(i=2;i<=100000;i++)\n\t{ if(a[i]==1)\n\t {for(j=2*i;j<=100000;j+=i)\n\t   {a[j]=0; \n\t   }\n\t }\n\t}\n\tfor(i=2;i<=n+1;i++)\n\t{\n\t  if(a[i]==1)\n\t    printf(\"1 \");\n\t  else\n\t    printf(\"2 \");\t\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\t\n\tint n,a[100002],i,j;\n\tscanf(\"%d\",&n);\n\tif(n<=2)\n\t{printf(\"1\\n\");\n\t for(i=1;i<=n;i++)\n\t\tprintf(\"%d \",1);\n\t return 0;\n\t}\n\tprintf(\"2\\n\");\n\tfor(i=0;i<=100000;i++)\n\t\ta[i]=1;\n\tfor(i=2;i<=100000;i++)\n\t{ if(a[i]==1)\n\t {for(j=2*i;j<=100000;j+=i)\n\t   {a[j]=0; \n\t   }\n\t }\n\t}\n\tfor(i=2;i<=n+1;i++)\n\t{\n\t  if(a[i]==1)\n\t    printf(\"1 \");\n\t  else\n\t    printf(\"2 \");\t\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9922480620155039, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2e62e7975d65b08cda8aaec8a9868397", "bug_code_uid": "05cffebce252a3dd8fecb153ab4e089d", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "36de2fa520e90151118f2aa8acf04662", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\nint a,b,c,n;\nscanf(\"%d\",&n);\nif(n%2==0)\n{\nprintf(\"2\n4 %d\",n-4);\n}\nif(n%2!=0)\n{\nprintf(\"9 %d\",n-9);\n\n}\n}", "fixed": "#include<stdio.h>\nmain()\n{\nint a,b,c,n;\nscanf(\"%d\",&n);\nif(n%2==0)\n{\nprintf(\"4 %d\",n-4);\n}\nif(n%2!=0)\n{\nprintf(\"9 %d\",n-9);\n\n}\n}"}
{"similarity_score": 0.9968847352024922, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "15f4216ac884b6fe58851a2ddefc4819", "bug_code_uid": "afcdfd79607273a525314c48ca265930", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "443229165748d8a74d3c177ad871f902", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n  long long t, n, x, a, mx, mn;\n  scanf(\"%lld\", &t);\n  while (t--){\n    mx = mn = 0;\n    scanf(\"%lld%lld\", &n, &x);\n    for (int i = 0; i < n; i++){\n      scanf(\"%d\", &a);\n      mx += (a + x - 1) / x;\n      mn += a;\n    }\n    printf(\"%lld %lld\\n\", (mn + x - 1) / x, mx);\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n  long long t, n, x, a, mx, mn;\n  scanf(\"%lld\", &t);\n  while (t--){\n    mx = mn = 0;\n    scanf(\"%lld%lld\", &n, &x);\n    for (int i = 0; i < n; i++){\n      scanf(\"%lld\", &a);\n      mx += (a + x - 1) / x;\n      mn += a;\n    }\n    printf(\"%lld %lld\\n\", (mn + x - 1) / x, mx);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.9347568208778173, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e239d4692053276856fd2e5d062485d5", "bug_code_uid": "c4836e5b4a2d4742188f986187bb7d82", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "b3a92e903068088de26f78df43eb3b17", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,m,x,c=0,i,j,a[100005],b[100005];\n    scanf(\"%I64d\",&n);\n    m=n;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    b[n]=1;\n    for(i=1;i<=n;i++)\n    {\n        x=a[i];\n        b[x]=1;\n        while(x==m && b[x]==1)\n        {\n            printf(\"%I64d \",x);\n            m--;\n            x--;\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,m,x,c=0,i,j;\n    scanf(\"%I64d\",&n);\n    m=n;\n    long long int a[n+2],b[n+2];\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    b[n+2]=1;\n    for(i=1;i<=n;i++)\n    {\n        x=a[i];\n        b[x]=1;\n        while(x==m && b[x]==1)\n        {\n            printf(\"%I64d \",x);\n            m--;\n            x--;\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.22336991607488701, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "5c14a8741f1a8a7b31f85b9c81613b69", "bug_code_uid": "1b3093670bd79680ddd8cc9a12565cb6", "src_uid": "6628bd89b4d4fdfa90d2357f7cc1b795", "apr_id": "bc503b70ee1f87d4d903180838202b7a", "difficulty": 1100, "tags": ["greedy", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint k,n,m,i,f=1,j;\r\n\t\tscanf(\"%d %d %d\",&k,&n,&m);\r\n\t\tint a[n];\r\n\t\tint b[m];\r\n\t\tint c[n+m];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=0;i<m;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tfor(i=0,j=0;i<n+m;i++,j++)\r\n\t\t{\r\n\t\t\tif(a[j]<b[j])\r\n\t\t\t{\r\n\t\t\t\tc[i]=a[j];\r\n\t\t\t\tc[++i]=b[j];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\tc[i]=b[j];\r\n\t\t\tc[++i]=a[j];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tfor(i=0;i<n+m;i++)\r\n\t\t{\r\n\t\t\tif(c[i]==0)\r\n\t\t\tk++;\r\n\t\t\tif(c[i]>k)\r\n\t\t\t{\r\n\t\t\t\tf=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(f==1)\r\n\t\t{\r\n\t\tfor(i=0;i<n+m;i++)\r\n\t\tprintf(\"%d \",c[i]);\r\n\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\tprintf(\"-1\\n\");\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint a[400];\r\nint b[400];\r\nint c[800];\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint k,n,m,i=1,f=1,j=1;\r\n\t\tscanf(\"%d %d %d\",&k,&n,&m);\r\n\t\t\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=1;i<=m;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tint rr=1,tt=1,p=0;\r\n\t\twhile(rr<=n||tt<=m)\r\n\t\t{\r\n\t\t\tif(rr<=n&&!a[rr])\r\n\t\t\t{\r\n\t\t\tk++;\r\n\t\t\tc[++p]=a[rr];\r\n\t\t\trr++;\t\r\n\t\t\t}\r\n\t\t\telse if(tt<=m&&!b[tt])\r\n\t\t\t{\r\n\t\t\t\tk++;\r\n\t\t\t\tc[++p]=b[tt];\r\n\t\t\t\ttt++;\r\n\t\t\t}\r\n\t\t\telse if(rr<=n&&a[rr]<=k)\r\n\t\t\t{\r\n\t\t\t\tc[++p]=a[rr];\r\n\t\t\t\trr++;\r\n\t\t\t}\r\n\t\t\telse if(tt<=m&&b[tt]<=k)\r\n\t\t\t{\r\n\t\t\t\tc[++p]=b[tt];\r\n\t\t\t\ttt++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tf=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\tif(f==1)\r\n\t\t{\r\n\t\tfor(i=1;i<=p;i++)\r\n\t\tprintf(\"%d \",c[i]);\r\n\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\tprintf(\"-1\\n\");\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9525514771709938, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "371588b4f3aa1170c26c4f3829e6b944", "bug_code_uid": "2c640d89d10b10727d3fc9431c466d66", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "bfe68c8fd44f66f1b8e0556cc23e4903", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main(){\n    int x1,y1,x2,y2;\n    int side=0;\n    scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n    if(x1-x2==0) {\n        side=abs(y2-y1);\n        printf(\"%d %d %d %d\",x1+side,y1,x2+side,y2);\n        \n    }\n    else if(y2-y1==0) {\n        side=abs(x2-x1);\n        printf(\"%d %d %d %d\",x1,y1+side,x2,y2+side);\n    }\n    else if(abs(x2-x1)==abs(y2-y1)) {\n        side=abs(x2-x1);\n        printf(\"%d %d %d %d\",x1+side,y1,x2-side,y2);\n    }\n    else{\n        printf(\"-1\");\n        exit(0);\n    }\n //   printf(\"%d\",side);\n    \n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main(){\n    int x1,y1,x2,y2;\n    int side=0;\n    scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n    if(x1-x2==0) {\n        side=abs(y2-y1);\n        printf(\"%d %d %d %d\",x1+side,y1,x2+side,y2);\n        \n    }\n    else if(y2-y1==0) {\n        side=abs(x2-x1);\n        printf(\"%d %d %d %d\",x1,y1+side,x2,y2+side);\n    }\n    else if(abs(x2-x1)==abs(y2-y1)) {\n        printf(\"%d %d %d %d\",x1,y2,x2,y1);\n    }\n    else{\n        printf(\"-1\");\n        exit(0);\n    }\n //   printf(\"%d\",side);\n    \n}"}
{"similarity_score": 0.9137254901960784, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1fbb67528de2c3b994edc38453005321", "bug_code_uid": "8cfef222b4032f10360bf6266eca60b1", "src_uid": "5172d358f1d451b42efff1019219a54d", "apr_id": "77a8acb0146cb55b761668ce515493d8", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n  int i,t;\n   scanf(\"%d\",&t);\n  for(i=0;i<t;i++)\n   {\n      int a,b;\n    scanf(\"%d %d\",&a,&b);\n    if(a*2>b)\n    {\n    printf(\"YES\\n\");\n    }\n    else\n    {\n    printf(\"NO\\n\");\n    }\n    return 0;\n    }\n    }\n    \n\n\n    ", "fixed": "#include <stdio.h>\nint main()\n{\n  int i,t;\n   scanf(\"%d\",&t);\n  for(i=0;i<t;i++)\n   {\n      int a,b;\n    scanf(\"%d %d\",&a,&b);\n    if(a*2>b)\n    {\n    printf(\"YES\\n\");\n    }\n    else\n    {\n    printf(\"NO\\n\");\n    }\n     }\n    return 0;\n    \n    }\n    \n\n\n    "}
{"similarity_score": 0.9717314487632509, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a6dbf988a239cc72a978049de40db8db", "bug_code_uid": "e714be7fbd67279c553201c5524201fc", "src_uid": "0c7e019e1e955cadacca55b4e823a3e5", "apr_id": "f93c25136e150f3d4abd666d9ee5c31c", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n       int t,i,n;\n       scanf(\"%d\",&t);\n       while(t--)\n       {\n           scanf(\"%d\",&n);\n           if(n%4!=0)\n           {\n               printf(\"NO\\n\");\n           }\n           else\n           {\n               n/=2;\n               for(i=1;i<=n;i++)\n               {\n                   printf(\"%d \",(i*2));\n               }\n               for(i=1;i<n;i++)\n               {\n                   printf(\"%d \",(2*i-1));\n               }\n               printf(\"%d\\n\",(3*i-1));\n       }\n\n\n       }\n\n\n     return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n       int t,i,n;\n       scanf(\"%d\",&t);\n       while(t--)\n       {\n           scanf(\"%d\",&n);\n           if(n%4!=0)\n           {\n               printf(\"NO\\n\");\n           }\n           else\n           {\n               n/=2;\n               printf(\"YES\\n\");\n               for(i=1;i<=n;i++)\n               {\n                   printf(\"%d \",(i*2));\n               }\n               for(i=1;i<n;i++)\n               {\n                   printf(\"%d \",(2*i-1));\n               }\n               printf(\"%d\\n\",(3*i-1));\n       }\n\n\n       }\n\n\n     return 0;\n\n\n}\n"}
{"similarity_score": 0.9983416252072969, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "367ded38f35100818e774416823fa922", "bug_code_uid": "e7da94af58a72eb7a603e465d22de1df", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "da303fc63e226b1084545561cd8ef746", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i, j, sum=1, n;\n    scanf(\"%d\", &n);\n\n    for(i=1;i<n;i++)\n    {\n        sum+=i;\n        if(sum<n)\n        {\n            printf(\"%d \", sum);\n        }\n        else\n        {\n            sum=sum-n;\n            printf(\"%d \", sum);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i, j, sum=1, n;\n    scanf(\"%d\", &n);\n\n    for(i=1;i<n;i++)\n    {\n        sum+=i;\n        if(sum<=n)\n        {\n            printf(\"%d \", sum);\n        }\n        else\n        {\n            sum=sum-n;\n            printf(\"%d \", sum);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9958391123439667, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f4ebea8ac408a148376564947e7d1a7c", "bug_code_uid": "165b7db53d89218fed949bf321fbbd66", "src_uid": "e4381bd9f22c0e49525cc05cc5cd2399", "apr_id": "08e2ea4619be690c0e14a967eeb23322", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int s;\n    char p[50000];\n    scanf(\"%d %s\",&s,&p);\n \n \n      int x=0,y=0,coin=0;\n        for(int i=0;i<s-1;i++)\n        {\n            if(p[i]=='R')x++;\n            else if(p[i]=='U')y++;\n           if(x == y && p[i] == p[i + 1])\n           {\n               coin++;\n           }\n        }\n    printf(\"%d\\n\",coin);\n \n \n \n \n \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int s;\n    char p[700000];\n    scanf(\"%d %s\",&s,&p);\n \n \n      int x=0,y=0,coin=0;\n        for(int i=0;i<s-1;i++)\n        {\n            if(p[i]=='R')x++;\n            else if(p[i]=='U')y++;\n           if(x == y && p[i] == p[i + 1])\n           {\n               coin++;\n           }\n        }\n    printf(\"%d\\n\",coin);\n \n \n \n \n \n}"}
{"similarity_score": 0.8209876543209876, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "3e631f3450763c786851edf475a377c6", "bug_code_uid": "e48a4892a2f3f7764e89e35b9764ed93", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "fd432c740aea4191687b71dbae515937", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint N,M;\n\tscanf(\"%d\",&N);\n\tM=N*N;\n\tfor(i=1;i<=N;++i,--M)\n\t{\n\t\tprintf(\"%d %d\\n\",i,M);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint i,j,N,M;\n\tscanf(\"%d\",&N);\n\tM=N*N;\n\tfor(i=1;i<=N*N/2;)\n\t{\n\t\tfor(j=0;j<N/2;++j,++i,--M)\n\t\t{\n\t\t\tprintf(\"%d %d \",i,M);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9687778768956289, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7a979a2502aa6bb6af327c9dda39aca6", "bug_code_uid": "268796c7f95ff76cc265fc7b6477cdd4", "src_uid": "c3cd949c99e96c9da186a34d49bd6197", "apr_id": "318f365fc13d9548ef5e12d412aff3a9", "difficulty": 1400, "tags": ["greedy", "constructive algorithms", "number theory", "math", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#pragma GCC optimize(\"Ofast\")\n#include<stdio.h>\n#include<string.h>\nint i,j,k,l,t,n,a[831],h[831],p[11]={2,3,5,7,11,13,17,19,23,29,31};\nint main(){\n    scanf(\"%d\",&t);\n    while(t--){\n        memset(h,0,sizeof(h));\n        scanf(\"%d\",&n);\n        for(i=0;i<n;++i)scanf(\"%d\",&a[i]);\n        k=1;\n        for(i=0;i<11;++i){\n            l=0;\n            for(j=0;j<n;++j){\n                if(!(a[j]%p[i])&&!h[j])h[j]=k,l=1;\n            }\n            if(l)++k;\n        }\n        printf(\"%d\\n\",k-1);\n        for(i=0;i<n;++i)printf(\"%d \",h[i]);\n        puts(\"\");\n    }\n}", "fixed": "#pragma GCC optimize(\"Ofast\")\n#include<stdio.h>\n#include<string.h>\nint i,j,k,l,t,n,a[1000],h[1000],p[11]={2,3,5,7,11,13,17,19,23,29,31};\nint main(){\n    scanf(\"%d\",&t);\n    while(t--){\n        memset(h,0,4000);\n        scanf(\"%d\",&n);\n        for(i=0;i<n;++i)scanf(\"%d\",&a[i]);\n        k=1;\n        for(i=0;i<11;++i){\n            l=0;\n            for(j=0;j<n;++j){\n                if(!(a[j]%p[i])&&!h[j])h[j]=k,l=1;\n            }\n            if(l)++k;\n        }\n        printf(\"%d\\n\",k-1);\n        for(i=0;i<n;++i)printf(\"%d \",h[i]);\n        puts(\"\");\n    }\n}"}
{"similarity_score": 0.9358752166377816, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "59dfb4b2e21c54768a92590e0151a0a8", "bug_code_uid": "493dba38a0c26878137933c344c0f555", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "59013988970c352d07d498c00cd83565", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[1000],i,j;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        for(j=1; j<=1000000000; j++)\n        {\n            if(a[i]==j)\n            {\n                if(j%2)\n                {\n                    a[i]=a[i]+1;\n                }\n                else\n                {\n                    a[i]=a[i]-1;\n                }\n            }\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[1000],i,j;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        /*for(j=1; j<=1000000000; j+2)\n        {\n            if(a[i]==j)\n            {\n                if(j%2)\n                {\n                    a[i]=a[i]+1;\n                }\n                else\n                {\n                    a[i]=a[i]-1;\n                }\n            }\n        }*/\n        if(!(a[i]%2))\n        {\n            a[i]=a[i]-1;\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9930335655478151, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "695651268b529ab9aa59d0bf4470aad5", "bug_code_uid": "ac5cce65576e2b472713965234001c7a", "src_uid": "4b7b0fba7b0af78c3956c34c29785e7c", "apr_id": "ddb332001a6636ec74a6d827d9063426", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,j,k=0;\n    char s[100][20];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%s\",s[i]);\n    for(i=0;i<n;i++)\n    {\n        if(s[i][0]=='1' ||s[i][0]=='2' ||s[i][0]=='3' ||s[i][0]=='4' ||s[i][0]=='5' ||s[i][0]=='6' ||s[i][0]=='7' ||s[i][0]=='8' ||s[i][0]=='9' ||s[i][0]=='0' )\n        {\n            j=atoi(s[i]);\n            if(j<18) k++;\n        }\n        else\n        {\n            if(strcmp(s[i],\"ABSINTH\")==0 ||strcmp(s[i],\"BEER\")==0 ||strcmp(s[i],\"BRANDY\")==0 ||strcmp(s[i],\"CHAMPAGNE\")==0 ||strcmp(s[i],\"GIN\")==0 ||strcmp(s[i],\"RUM\")==0 ||strcmp(s[i],\"SAKE\")==0 ||strcmp(s[i],\"TEQUILA\")==0 ||strcmp(s[i],\"VODKA\")==0 ||strcmp(s[i],\"WHISKEY\")==0 ||strcmp(s[i],\"WINE\")==0  )\n             k++;\n        }\n    }\n    printf(\"%d\",k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,j,k=0;\n    char s[105][105];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%s\",s[i]);\n    for(i=0;i<n;i++)\n    {\n        if(s[i][0]=='1' ||s[i][0]=='2' ||s[i][0]=='3' ||s[i][0]=='4' ||s[i][0]=='5' ||s[i][0]=='6' ||s[i][0]=='7' ||s[i][0]=='8' ||s[i][0]=='9' ||s[i][0]=='0' )\n        {\n            j=atoi(s[i]);\n            if(j<18) k++;\n        }\n        else\n        {\n            if(strcmp(s[i],\"ABSINTH\")==0 ||strcmp(s[i],\"BEER\")==0 ||strcmp(s[i],\"BRANDY\")==0 ||strcmp(s[i],\"CHAMPAGNE\")==0 ||strcmp(s[i],\"GIN\")==0 ||strcmp(s[i],\"RUM\")==0 ||strcmp(s[i],\"SAKE\")==0 ||strcmp(s[i],\"TEQUILA\")==0 ||strcmp(s[i],\"VODKA\")==0 ||strcmp(s[i],\"WHISKEY\")==0 ||strcmp(s[i],\"WINE\")==0  )\n             k++;\n        }\n    }\n    printf(\"%d\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.9979317476732161, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6739c6e2d5f5107cc8291c502dd06255", "bug_code_uid": "c27cee7a3ebaa5936f7b4be51cf9a30d", "src_uid": "6709c8078cd29e69cf1be285071b2527", "apr_id": "2288db4ddabcd0d7ba55914a9fcfa3fa", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n    int m,n,i,j,k=0,a1,b1;\n    char a[1000000],b[1000000];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        m=0;\n        scanf(\"%s\",a);\n        scanf(\"%s\",b);\n        a1=strlen(a);\n        b1=strlen(b);\n        k=0;\n        if(b1<a1){\n            printf(\"NO\\n\");\n            continue;\n        }\n        if(a[0]!=b[0]){\n            printf(\"NO\\n\");\n            continue;\n        }\n        if(a[a1-1]!=b[b1-1]){\n            printf(\"NO\\n\");\n            continue;\n        }\n        for(j=1;j<b1;j++){\n            if(b[j]==a[k] || b[j]==a[k+1]){\n                if(b[j]==a[k+1]){\n                    k++;\n                }\n            }\n            else{\n                printf(\"NO\\n\");\n                m=1;\n                break;\n            }\n        }\n        if(m==1){\n            continue;\n        }\n        if(k!=a1-1){\n            printf(\"NO\\n\");\n            continue;\n        }\n        printf(\"YES\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n    int m,n,i,j,k=0,a1,b1;\n    char a[1000001],b[1000001];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        m=0;\n        scanf(\"%s\",a);\n        scanf(\"%s\",b);\n        a1=strlen(a);\n        b1=strlen(b);\n        k=0;\n        if(b1<a1){\n            printf(\"NO\\n\");\n            continue;\n        }\n        if(a[0]!=b[0]){\n            printf(\"NO\\n\");\n            continue;\n        }\n        if(a[a1-1]!=b[b1-1]){\n            printf(\"NO\\n\");\n            continue;\n        }\n        for(j=1;j<b1;j++){\n            if(b[j]==a[k] || b[j]==a[k+1]){\n                if(b[j]==a[k+1]){\n                    k++;\n                }\n            }\n            else{\n                printf(\"NO\\n\");\n                m=1;\n                break;\n            }\n        }\n        if(m==1){\n            continue;\n        }\n        if(k!=a1-1){\n            printf(\"NO\\n\");\n            continue;\n        }\n        printf(\"YES\\n\");\n    }\n}\n"}
{"similarity_score": 0.7403156384505022, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "54fe4dcdf489ff9506b29d42f8e8c9ac", "bug_code_uid": "b230beaf451d11ac6d957f12ddd45268", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "c70dc0b22c2fe5e6a18fa422523142e5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i,d,s=0;\nscanf(\"%d\",&n);\nint x[n];\nint y[n];\n   for (i=0;i<n;i++)\n    scanf(\"%d\",&x[i]);\n    for (i=0;i<n;i++)\n    scanf(\"%d\",&y[i]);\n    for(i=0;i<n;i++)\n    {if(x[i]>y[i])\n    d=x[i]-y[i];\n    else\n        d=y[i]-x[i];\n    if(d>5)\n        d=10-d;\n\n\n    s=s+d;\n\n\n\n\n    }\n    printf(\"%d\",s);\n\n\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i,d,s=0,x1,y2;\nscanf(\"%d\",&n);\nchar x[n];\nchar y[n];\nscanf(\"%s\",x);\nscanf(\"%s\",y);\n    for(i=0;i<n;i++)\n    {\n\n\n\n        if(x[i]>y[i])\n    d=x[i]-y[i];\n    else\n        d=y[i]-x[i];\n    if(d>5)\n        d=10-d;\n\n\n    s=s+d;\n\n\n\n\n    }\n    printf(\"%d\",s);\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.9937106918238994, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c6e0234591e02915a69ef50236708c47", "bug_code_uid": "9ed3bc1e811fa2b0b555d5265ba56f2b", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "0952f7617a9dd40a8f32a89c2c841fae", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,m,a[100000],i,x;\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    x=a[0]-1;\n    for(i=0;i<m-1;i++)\n    {\n\n        if(a[i]<a[i+1])\n        {\n            x=x+a[i+1]-a[i];\n        }\n        else if(a[i]>a[i+1])\n        {\n            x=x+n-a[i]+a[i+1];\n        }\n    }\n    printf(\"%lld\",x);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,m,a[100000],i,x;\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    x=a[0]-1;\n    for(i=0;i<m-1;i++)\n    {\n\n        if(a[i]<a[i+1])\n        {\n            x=x+a[i+1]-a[i];\n        }\n        else if(a[i]>a[i+1])\n        {\n            x=x+n-a[i]+a[i+1];\n        }\n    }\n    printf(\"%lld\",x);\n    return 0;\n}\n"}
{"similarity_score": 0.39408866995073893, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "d5f9abb180ac76a5bc5894a4e5946fba", "bug_code_uid": "31d417b0cadbcd225a092875a6b3a653", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "cb272d170ff32e4bcbab1a3593f1179a", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int t,n,a,b,sum;\n    scanf(\"%I64d\",&t);\n    while(t--){\n        scanf(\"%I64d %I64d %I64d\",&n,&a,&b);\n        if(n%2==0){\n            if(a>b)sum=(n/2)*b;\n            else sum=n*a;\n        }\n        else {\n            if(a>b)sum=a+(n/2)*b;\n            else sum=a*n+b;\n        }\n        printf(\"%I64d\\n\",sum);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long t, n, a, b, sum;\n\tscanf(\"%I64d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%I64d %I64d %I64d\", &n, &a, &b);\n\t\tsum = 0;\n\t\tsum +=(n / 2)*(a * 2 < b ? a * 2 : b);\n\t\tn %= 2;\n\t\tif (n)sum += a;\n\t\tprintf(\"%I64d\\n\", sum);\n\t}\n}"}
{"similarity_score": 0.9972067039106145, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c9098bd1ffb62dec022d0d5d0ba9fe64", "bug_code_uid": "c0d450657b2d2131adc138420ba428ad", "src_uid": "c4c8cb860ea9a5b56bb35532989a9192", "apr_id": "125e4bc984d1024e4ac62aac1cc72ff0", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int t,x,i,j,p,k,f;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        f=0;\n        char n[50001],a[50001]={0},b[50001]={0};\n        scanf(\"%d\",&x);\n        scanf(\"%s\",n);\n        for(i=0;i<x;i++)\n        {\n            if(f==1)\n            {\n                if(n[i]=='2') { a[i]='0'; b[i]='2'; }\n                else if(n[i]=='0') { a[i]='0'; b[i]='0'; }\n                else if(n[i]=='1') { a[i]='0'; b[i]='1'; }\n            }\n\n            else if(n[i]=='2') { a[i]='1'; b[i]='1'; }\n            else if(n[i]=='0') { a[i]='0'; b[i]='0'; }\n            else { a[i]='1'; b[i]='0'; f=1; }\n        }\n        printf(\"%s\\n%s\\n\",a,b);\n    }\n}\n", "fixed": "#include<stdio.h>\n\n//#include<bits/stdc++.h>\n//using namespace std;\n\nint main()\n{\n    int t,x,i,j,p,k,f;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        f=0;\n        char n[50001],a[50001]={0},b[50001]={0};\n        scanf(\"%d\",&x);\n        scanf(\"%s\",n);\n        for(i=0;i<x;i++)\n        {\n            if(f==1)\n            {\n                if(n[i]=='2') { a[i]='0'; b[i]='2'; }\n                else if(n[i]=='0') { a[i]='0'; b[i]='0'; }\n                else if(n[i]=='1') { a[i]='0'; b[i]='1'; }\n            }\n\n            else if(n[i]=='2') { a[i]='1'; b[i]='1'; }\n            else if(n[i]=='0') { a[i]='0'; b[i]='0'; }\n            else { a[i]='1'; b[i]='0'; f=1; }\n        }\n        printf(\"%s\\n%s\\n\",a,b);\n    }\n}\n"}
{"similarity_score": 0.9981818181818182, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "836e1df721acae19aea90786d2ea42c7", "bug_code_uid": "56395c32c5584abc78801e68e5b05e2d", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "61c18531c76ecacaf289b7c7b5858cbe", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    int i,c=0,d=0,al;\n    char a[1000],b[1000],x[1000];\n    int n;\n    scanf(\"%d\",&n);\n    getchar();\n    for (i=0;i<n;i++) {\n\n        scanf(\" %s\",a);\n        if (i==0) {\n            strcpy(b,a);\n        }\n\n        if (strcmp(a,b)==0)\n            c++;\n        else {\n\n                strcpy(x,a);\n               // printf(\"%s\",x);\n            d++;\n        }\n\n\n    }\n    printf(\"%d    %d\\n\",c,d);\n    if (c>(n-c))\n        printf(\"%s\",b);\n        else\n            printf(\"%s\",x);\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    int i,c=0,d=0,al;\n    char a[1000],b[1000],x[1000];\n    int n;\n    scanf(\"%d\",&n);\n    getchar();\n    for (i=0;i<n;i++) {\n\n        scanf(\" %s\",a);\n        if (i==0) {\n            strcpy(b,a);\n        }\n\n        if (strcmp(a,b)==0)\n            c++;\n        else {\n\n                strcpy(x,a);\n               // printf(\"%s\",x);\n            d++;\n        }\n\n\n    }\n   // printf(\"%d    %d\\n\",c,d);\n    if (c>(n-c))\n        printf(\"%s\",b);\n        else\n            printf(\"%s\",x);\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9918864097363083, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c037d9254a44ed59888e7bd399b2aea6", "bug_code_uid": "501c99f4a85e02c31820c5d57a9d8fa5", "src_uid": "1a37e42263fdd1cb62e2a18313eed989", "apr_id": "5693d47d86e9f408f4b919d4ef8fbd7e", "difficulty": 1900, "tags": ["brute force", "dp", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nconst int N=1000005;\r\nint n,a[N]={0};\r\n\r\nint main()\r\n{\r\n    scanf(\"%d\",&n);\r\n    for(int i=1;i<=n;i++){\r\n        int x;\r\n        scanf(\"%d\",&x);\r\n        a[x]=1;\r\n    }\r\n    int m=0;\r\n    int gys(int c,int b);\r\n    for(int i=1;i<N;i++){\r\n        int g=0;\r\n        for(int j=i;j<N;j+=i){\r\n            if(a[j]) g=gys(j,g);\r\n        }\r\n            if(g==i)m++;\r\n    }\r\n    printf(\"%d\\n\",m-n);\r\n    return 0;\r\n}\r\nint gys(int c,int b)\r\n{\r\n    return b>0 ? gys(b,c%b):c;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nconst int N=1000005;\r\nint n,a[1000005]={0};\r\n\r\nint main()\r\n{\r\n    scanf(\"%d\",&n);\r\n    for(int i=1;i<=n;i++){\r\n        int x;\r\n        scanf(\"%d\",&x);\r\n        a[x]=1;\r\n    }\r\n    int m=0;\r\n    int gys(int c,int b);\r\n    for(int i=1;i<N;i++){\r\n        int g=0;\r\n        for(int j=i;j<N;j+=i){\r\n            if(a[j]) g=gys(j,g);\r\n        }\r\n            if(g==i)m++;\r\n    }\r\n    printf(\"%d\\n\",m-n);\r\n    return 0;\r\n}\r\nint gys(int c,int b)\r\n{\r\n    return b>0 ? gys(b,c%b):c;\r\n}\r\n\r\n"}
{"similarity_score": 0.404344193817878, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9324f84e689e56319163f5b5d7146cf8", "bug_code_uid": "ca234e73922c37c86a6bb3f69e0b7bbb", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "471bf46c8ac33e70a5e5cf58ec729a58", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include<stdio.h>\n//#include<conio.h>\nvoid main(){\n    int n,num=0,i,m,count1=0,count_1=0,l,r,pair;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&num);\n        if(num==1)\n        count1+=1;\n        else \n        count_1+=1;\n    }\n    if(count1<count_1)\n    pair=count1;\n    else\n    pair=count_1;\n    for( i=0;i<m;i++){\n        scanf(\"%d %d\",&l,&r);\n        //  printf(\"%d %d\",count1,count_1);\n        if((r-l)%2==0)\n        printf(\"0\\n\");\n        else{\n            if((((r-l)+1)/2)<=pair)\n            printf(\"1\\n\");\n            else\n            printf(\"0\\n\");\n        }\n    }\n    \n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,num=0,i,m,count1=0,count_1=0,l,r,pair;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&num);\n        if(num==1)\n        count1+=1;\n        else \n        count_1+=1;\n    }\n    if(count1<count_1)\n    pair=count1;\n    else\n    pair=count_1;\n    for( i=0;i<m;i++){\n        scanf(\"%d %d\",&l,&r);\n        //  printf(\"%d %d\",count1,count_1);\n        if((r-l)%2==0)\n        printf(\"0\\n\");\n        else{\n            if((((r-l)+1)/2)<=pair)\n            printf(\"1\\n\");\n            else\n            printf(\"0\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.960431654676259, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f3b2684aa10160f6e5ae7a29dd3cdd09", "bug_code_uid": "0261a80f6f0d4851e00060786a60b74b", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "142df6b7f249f40ea001ab5cd5a05e74", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n;\nint a,b,c;\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++)\n{\nscanf(\"%d\",&c);\na=c/2;\nif(c%2==0)\n{\n    for(int i=0;i<a;i++)\n    {\n        printf(\"1\");\n    }\n}\nelse\n{\n    printf(\"7\");\n    for(int i=0;i<a-1;i++)\n    {\n     printf(\"1\");\n    }\n}\n}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n;\nint a,b,c;\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++)\n{\nscanf(\"%d\",&c);\na=c/2;\nif(c%2==0)\n{\n    for(int i=0;i<a;i++)\n    {\n        printf(\"1\");\n    }\n}\nelse\n{\n    printf(\"7\");\n    for(int i=0;i<a-1;i++)\n    {\n     printf(\"1\");\n    }\n}\nprintf(\"\\n\");\n}\n}\n"}
{"similarity_score": 0.9760225669957687, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d2f1830f39ce9a929b7b88795966f47e", "bug_code_uid": "d823003db8eba916f56cb10eacd2d869", "src_uid": "a37c3f2828490c70301b5b5deeee0f88", "apr_id": "1c2ca8f8f3d261bb35c66c37457749b6", "difficulty": 800, "tags": ["graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,x,y,z,p=1;\n    scanf(\"%d\",&n);\n    int ary[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ary[i]);\n    }\n    for(j=1;j<=n;j++){\n\n        if(ary[ary[ary[j]]]==j)\n        {\n           \n            break;\n        }\n    }\n    if(j<n){\n        printf(\"YES\\n\");\n    }\n    else {\n        printf(\"NO\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,x,y,z,p=1;\n    scanf(\"%d\",&n);\n    int ary[n];\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&ary[i]);\n    }\n    for(j=1;j<=n;j++){\n\n        if(ary[ary[ary[j]]]==j)\n        {\n           p=-1;\n            break;\n        }\n    }\n    if(p==-1){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n}\n"}
{"similarity_score": 0.3193504736129905, "equal_cnt": 18, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "23bd39731c21f616c97c71048cd3f301", "bug_code_uid": "a2a4ded97c25780d3870b25f5a24d14f", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "503de65de59fc696f175f8ce81322789", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long int t,n,i,count=0;\n    scanf(\"%ld\",&t);\n    while(t--)\n    {\n        count=0;\n        scanf(\"%ld\",&n);\n        for(i=2; i<=n; i++)\n        {\n            if(n%i==0 && i%2!=0)\n\n            {\n                count++;\n            break;\n\n            }\n\n        }\n        if(count==0)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n        {\n            printf(\"YES\\n\");\n        }\n\n    }\n}\n\n \t \t\t\t   \t  \t   \t\t\t\t \t \t\t\t\t\t \t\t", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tlong long  n, t;\n\tscanf(\"%lld\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%lld\", &n);\n\t\twhile (n % 2 == 0)\n\t\t{\n\t\t\tn /= 2;\n\t\t}\n\t\tif (n == 1)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n \t   \t\t\t\t\t\t \t   \t\t\t\t \t   \t\t\t\t"}
{"similarity_score": 0.9983844911147012, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "82cbda105a0a6e41efcd4ed98b14dcd5", "bug_code_uid": "cb4b6f0273526deb36c4dfb725ff7406", "src_uid": "d715095ff068f4d081b58fbfe103a02c", "apr_id": "28a14aba150754ac81d5c0933e26570b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint n,m,i,j,y,z,c1[100]={0},c2[100]={0};\nscanf(\"%d %d\",&n,&m);\nint l[100]={0},r[100]={0};\nchar s[n][m+1];\nint maxl=m,maxr=0;\nfor(i=0;i<n;i++)\n{scanf(\"%s\",s[i]);\nfor(j=0;j<m;j++)\n{if(s[i][j]=='*')\n{l[i]=j;\nc1[i]++;\nbreak;}}\nfor(j=m-1;j>=0;j--)\n{if(s[i][j]=='*')\n{r[i]=j;\nc2[i]++;\nbreak;}}\nif(l[i]<=maxl&&c1[i]==1)\nmaxl=l[i];\nif(r[i]>=maxr&&c2[i]==1)\nmaxr=r[i];\n}\nfor(i=0;i<n;i++)\n{if(l[i]>0&&c1[i]==1)\n{y=i;\nbreak;}}\nfor(i=n-1;i>=0;i--)\n{if(r[i]>0&&c2[i]==1)\n{z=i;\nbreak;}}\nfor(i=y;i<=z;i++)\n{for(j=maxl;j<=maxr;j++)\n{printf(\"%c\",s[i][j]);}\nprintf(\"\\n\");}\nreturn(0);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint n,m,i,j,y,z,c1[100]={0},c2[100]={0};\nscanf(\"%d %d\",&n,&m);\nint l[100]={0},r[100]={0};\nchar s[n][m+1];\nint maxl=m,maxr=0;\nfor(i=0;i<n;i++)\n{scanf(\"%s\",s[i]);\nfor(j=0;j<m;j++)\n{if(s[i][j]=='*')\n{l[i]=j;\nc1[i]++;\nbreak;}}\nfor(j=m-1;j>=0;j--)\n{if(s[i][j]=='*')\n{r[i]=j;\nc2[i]++;\nbreak;}}\nif(l[i]<=maxl&&c1[i]==1)\nmaxl=l[i];\nif(r[i]>=maxr&&c2[i]==1)\nmaxr=r[i];\n}\nfor(i=0;i<n;i++)\n{if(l[i]>=0&&c1[i]==1)\n{y=i;\nbreak;}}\nfor(i=n-1;i>=0;i--)\n{if(r[i]>=0&&c2[i]==1)\n{z=i;\nbreak;}}\nfor(i=y;i<=z;i++)\n{for(j=maxl;j<=maxr;j++)\n{printf(\"%c\",s[i][j]);}\nprintf(\"\\n\");}\nreturn(0);\n}\n"}
{"similarity_score": 0.19117647058823528, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "da8add2935a75e44e505389ec9d43676", "bug_code_uid": "790287bf69d40a0669868a989819d2ce", "src_uid": "46d734178b3acaddf2ee3706f04d603d", "apr_id": "a0ab141ff0e122ec259dc73e4710a657", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[1001] , t[1001];\n    scanf(\"%s%s\",s,t);\n    int i;\n    for(i=strlen(s)-1 ; s[i]=='z' ; i--)\n        s[i] = 'a';\n    s[i] += 1;\n    if(strcmp(s,t))\n        puts(s);\n    else puts(\"No such string\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[1000] , s1[1000] , s2[1000];\n    gets(s);\n    gets(s1);\n    gets(s2);\n    int i=0 , j=0 , k=0 , m;\n    for(m=0 ; s[m]!='\\0'; m++)\n    {\n        if(s[m]=='a' || s[m]=='e' || s[m]=='i' || s[m]=='o' || s[m]=='u')\n            i++;\n    }\n\n    for(m=0 ; s1[m]!='\\0'; m++)\n     {\n        if(s1[m]=='a' || s1[m]=='e' || s1[m]=='i' || s1[m]=='o' || s1[m]=='u')\n            j++;\n    }\n\n    for(m=0 ; s2[m]!='\\0'; m++)\n    {\n        if(s2[m]=='a' || s2[m]=='e' || s2[m]=='i' || s2[m]=='o' || s2[m]=='u')\n            k++;\n    }\n    if(i==5 && j==7 && k==5)\n    {\n        printf(\"YES\");\n    }\n    else puts(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.9990766389658357, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "22a3b15052a2c8b99fb8da23deb167da", "bug_code_uid": "9037ab3517cb962db2a99f28a6e9ef5f", "src_uid": "6ca98e655007bfb86f1039c9f096557e", "apr_id": "47e1b9060c19d4ed81f0b68019d0f852", "difficulty": 900, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid insertionSort(int arr[], int n)\r\n{\r\n    int i, key, j;\r\n    for (i = 1; i < n; i++) {\r\n        key = arr[i];\r\n        j = i - 1;\r\n  \r\n        /* Move elements of arr[0..i-1], that are\r\n          greater than key, to one position ahead\r\n          of their current position */\r\n        while (j >= 0 && arr[j] > key) {\r\n            arr[j + 1] = arr[j];\r\n            j = j - 1;\r\n        }\r\n        arr[j + 1] = key;\r\n    }\r\n}\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr1[n],arr2[n];\r\n        for(int i=0;i<n;i++) scanf(\"%d\",&arr1[i]);\r\n        for(int i=0;i<n;i++) scanf(\"%d\",&arr2[i]);\r\n        insertionSort(arr1,n);\r\n        insertionSort(arr2,n);\r\n        int flag=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(arr1[i]!=arr2[i] && (arr1[i]+1)!=arr2[i])\r\n            {\r\n                flag=1;\r\n                break;\r\n            }\r\n        }\r\n        if(flag==1) printf(\"YES\\n\");\r\n        else        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid insertionSort(int arr[], int n)\r\n{\r\n    int i, key, j;\r\n    for (i = 1; i < n; i++) {\r\n        key = arr[i];\r\n        j = i - 1;\r\n  \r\n        /* Move elements of arr[0..i-1], that are\r\n          greater than key, to one position ahead\r\n          of their current position */\r\n        while (j >= 0 && arr[j] > key) {\r\n            arr[j + 1] = arr[j];\r\n            j = j - 1;\r\n        }\r\n        arr[j + 1] = key;\r\n    }\r\n}\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr1[n],arr2[n];\r\n        for(int i=0;i<n;i++) scanf(\"%d\",&arr1[i]);\r\n        for(int i=0;i<n;i++) scanf(\"%d\",&arr2[i]);\r\n        insertionSort(arr1,n);\r\n        insertionSort(arr2,n);\r\n        int flag=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(arr1[i]!=arr2[i] && (arr1[i]+1)!=arr2[i])\r\n            {\r\n                flag=1;\r\n                break;\r\n            }\r\n        }\r\n        if(flag==0) printf(\"YES\\n\");\r\n        else        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9603960396039604, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "34ef123a71ebafe73c379a88a1921b5c", "bug_code_uid": "dd67c242717ca171c1c38b496b721dd5", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "d25e1bdcaf82b13ca7202919fbdff372", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    short i, j, k = 1;\n    \n    short n;\n    scanf(\"%d\", &n);\n    short m = n*n + 1;\n    \n    for(i = 0; i < n; i++) {\n        for(j = 0; j < n/2 - 1; j++)\n            printf(\"%d %d \", k, m - k++);\n        printf(\"%d %d\\n\", k, m - k++);\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    short i, j, k = 1;\n    \n    short n;\n    scanf(\"%d\", &n);\n    short m = n*n + 1;\n    \n    for(i = 0; i < n; i++) {\n        for(j = 0; j < n/2 - 1; j++, k++)\n            printf(\"%d %d \", k, m - k);\n        printf(\"%d %d\\n\", k, m - k);\n        k++;\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.2968197879858657, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "f0fc1c2e700ac0b9f31c36540ad2cfc0", "bug_code_uid": "0bae4cb3d08e2ece8324cfeeb9299d4e", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "a01937afab20a7b073fbf8d9b24e4597", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, m, i, x;\nint a[1000000];\n\nvoid find(int k)\n{\n    x = x - a[k];\n\n    if (x <= 0)\n    {\n        printf(\"%i\\n\", n - k);\n    }\n    else\n    {\n        find(k - 1);\n    }\n}\n\nint main()\n{\n    scanf(\"%i\", &n);\n\n    for (i = n; i--;)\n    {\n        scanf(\"%i\", &a[i]);\n    }\n\n    scanf(\"%i\", &m);\n\n    for (i = m; i--;)\n    {\n        scanf(\"%i\", &x);\n        find(n - 1);\n    }\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint n, m, i, x, k, sum;\nint a[1000001];\n\nint main()\n{\n    int r;\n\n    scanf(\"%i\", &n);\n\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%i\", &r);\n\n        a[r+sum]=i;\n        a[1+sum]=i;\n        sum += r;\n    }\n\n    scanf(\"%i\", &m);\n\n    for (i = 1; i <= m; i++)\n    {\n        scanf(\"%i\", &x);\n\n        if (a[x])\n        {\n            printf(\"%i\\n\", a[x]);\n            continue;\n        }\n\n        for(k = 1; k <= 1000; k++)\n        {\n            if(a[x+k])\n            {\n                printf(\"%i\\n\", a[x+k]);\n                break;\n            }\n            if(a[x-k])\n            {\n                printf(\"%i\\n\", a[x-k]);\n                break;\n            }\n        }\n    }\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9595567867036011, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bc402dbd83b1a8a2c2cfd3ff047fc02e", "bug_code_uid": "0c58e19b58d4952470917e2af8502aa4", "src_uid": "cb645c794ee3916b180fc3d789cb7c27", "apr_id": "a3955ad43d18be5e70f4895c5d50c33e", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\tint testcases;\r\n\tint num;\r\n\tint n;\r\n\tint sum,diff;\r\n\tint count[27];\r\n\tchar str[200500];\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--){\r\n\t\tscanf(\"%s\",str);\r\n\t\tscanf(\"%d\",&num);\r\n\t\tn=strlen(str);\r\n\t\tmemset(count,0,sizeof(count));\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\t++count[1+str[i]-'a'];\r\n\t\t}\r\n\t\tsum=0;\r\n\t\tfor(int i=0;i<27;i++){\r\n\t\t\tsum+=i*count[i];\r\n\t\t}\r\n\t\t//printf(\"%d    %d\",sum,num);\r\n\t\tif(sum<=num){\r\n\t\t\tprintf(\"%s\",str);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdiff=sum-num;\r\n\t\t\tfor(int i=26;0<i;i--){\r\n\t\t\t\tif(i*count[i]<diff){\r\n\t\t\t\t\tdiff=diff-count[i]*i;\r\n\t\t\t\t\tcount[i]=0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tcount[i]=count[i]-(diff+i-1)/i;\r\n\t\t\t\t\tdiff=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i=0;i<n;i++){\r\n\t\t\t\tif(count[1+str[i]-'a']>0){\r\n\t\t\t\t\tprintf(\"%c\",str[i]);\r\n\t\t\t\t\t--count[1+str[i]-'a'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tstr[i]=(char)0;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\tint testcases;\r\n\tint num;\r\n\tint n;\r\n\tint sum,diff;\r\n\tint count[27];\r\n\tchar str[200500];\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--){\r\n\t\tscanf(\"%s\",str);\r\n\t\tscanf(\"%d\",&num);\r\n\t\tn=strlen(str);\r\n\t\tmemset(count,0,sizeof(count));\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\t++count[1+str[i]-'a'];\r\n\t\t}\r\n\t\tsum=0;\r\n\t\tfor(int i=0;i<27;i++){\r\n\t\t\tsum+=i*count[i];\r\n\t\t}\r\n\t\tif(sum<=num){\r\n\t\t\tprintf(\"%s\\n\",str);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdiff=sum-num;\r\n\t\t\tfor(int i=26;0<i;i--){\r\n\t\t\t\tif(i*count[i]<diff){\r\n\t\t\t\t\tdiff=diff-count[i]*i;\r\n\t\t\t\t\tcount[i]=0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tcount[i]=count[i]-(diff+i-1)/i;\r\n\t\t\t\t\tdiff=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i=0;i<n;i++){\r\n\t\t\t\tif(count[1+str[i]-'a']>0){\r\n\t\t\t\t\tprintf(\"%c\",str[i]);\r\n\t\t\t\t\t--count[1+str[i]-'a'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tstr[i]=(char)0;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.6529873264936632, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e9b03496b9abd919d4c3a1ca59193106", "bug_code_uid": "9d4da35d594b83be63b822a9120ed554", "src_uid": "a3df5d51538658e8c9356f9e848debcf", "apr_id": "9997ab78df72ef874d7c7b067f786afa", "difficulty": 1100, "tags": ["binary search", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\n\r\nint cmp(const void* a, const void* b)\r\n{\r\n\treturn (*(int*)b - *(int*)a);\r\n}\r\n\r\nint main()\r\n{\r\n\r\n\tint N;\r\n\tscanf(\"%d\", &N);\r\n\tint num, query;\r\n\tint wei;\r\n\tint sum;\r\n\tint j;\r\n\tint ac[150000] = { 0 };\r\n\twhile(N--)\r\n\t{\r\n\t\tsum = 0;\r\n\t\tscanf(\"%d %d\", &num, &query);\r\n\t\tfor (int i = 0; i < num; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &ac[i]);\r\n\t\t}\r\n\t\tqsort(ac, num, sizeof(int), cmp);\r\n\t\tfor (int i = 0; i < query; i++)\r\n\t\t{\r\n\t\t\tsum = 0;\r\n\t\t\tscanf(\"%d\", &wei);\r\n\t\t\tfor (j = 0; j <= i+1&&j<num; j++)\r\n\t\t\t{\r\n\t\t\t\tsum += ac[j];\r\n\t\t\t\tif (sum >= wei)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d\\n\", j+1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tif (j==num||j>i+1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\n\r\nint cmp(const void* a, const void* b)\r\n{\r\n\treturn (*(int*)b - *(int*)a);\r\n}\r\n\r\nint main()\r\n{\r\n\r\n\tint N;\r\n\tscanf(\"%d\", &N);\r\n\tint num, query;\r\n\tint wei;\r\n\tint sum;\r\n\tint j;\r\n\tint low, up,ret;\r\n\tint ac[150001] = { 0 };\r\n\twhile (N--)\r\n\t{\r\n\t\tsum = 0;\r\n\t\tscanf(\"%d %d\", &num, &query);\r\n\t\tfor (int i = 0; i < num; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &ac[i]);\r\n\t\t}\r\n\t\tqsort(ac, num, sizeof(int), cmp);\r\n\t\tfor (int i = 0; i < num-1; i++)\r\n\t\t{\r\n\t\t\tac[i + 1] += ac[i];\r\n\t\t}\r\n\t\tfor (int i = 0; i < query; i++)\r\n\t\t{\r\n\t\t\tsum = 0;\r\n\t\t\tscanf(\"%d\", &wei);\r\n\t\t\tif (ac[num - 1] < wei)\r\n\t\t\t{\r\n                printf(\"-1\\n\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlow = -1;\r\n\t\t\tup = num - 1;\r\n\t\t\twhile (low+1 < up)\r\n\t\t\t{\r\n\t\t\t\tret = (low + up) / 2;\r\n\t\t\t\tif (ac[ret] < wei)\r\n\t\t\t\t{\r\n\t\t\t\t\tlow = ret;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tup = ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\\n\", up+1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.16387959866220736, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "76e9ec54f33d58573d810c9ad06ae4bb", "bug_code_uid": "b5945410a7348229678fcde8e076a52d", "src_uid": "24fe280b88575516ec679ff78641440e", "apr_id": "cc728a9b49b3f2b91bd37595d2c6a401", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n  char inp[10];\n  int n,ans=0;\n  scanf(\"%d\",&n);\n  while(n--)\n    {\n      scanf(\" %s\",inp);\n      if(inp[1]=='+')\n    ans++;\n      else\n    ans--;\n    }\n  printf(\"%d\\n\",ans);\n  return 0;\n}", "fixed": "#include <stdio.h>\n\n#define abs(x) (((x)>0)?(x):(-(x)))\n#define int long long\n\nmain()\n{\n  int n;\n  scanf(\"%lld\",&n);\n  int i;\n  int a=0,b=0;\n  for(i=0;i<n;++i)\n    {\n      int a1,g1;\n      scanf(\"%lld%lld\",&a1,&g1);\n      if(abs(a+a1-b)<=500)\n    {\n      a+=a1;\n      printf(\"A\");\n    }\n      else\n    {\n      b+=g1;\n      printf(\"G\");\n    }\n    }\n  printf(\"\\n\");\n  return 0;\n}"}
{"similarity_score": 0.6628242074927954, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fad26ffc82902e560c71338fd9607d77", "bug_code_uid": "225d4ac35c327c0db65615cf695137a2", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "4683bd3f226fc5c28c810168ee72fb37", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint t;\n\tlong int L,v,l,r;\n\tlong int p,count,count2,count3,a,pos;\n\tscanf(\"%d\",&t);\n\tcount3=0;\n\twhile(count3<t){\n\t\ta=1;\n\t\tcount=0;\n\t\tcount2=0;\n\t\tscanf(\"%ld\",&L);\n\t\tscanf(\"%ld\",&v);\n\t\tscanf(\"%ld\",&r);\n\t\tscanf(\"%ld\",&l);\n\t\tp=L/v;\n\t\twhile(count<p){\n\t\t\tpos=a*v;\n\t\t\tif(pos<r || pos>l){\n\t\t\t\tcount2=count2+1;\n\t\t\t}\n\t\t\ta=a+1;\n\t\t\tcount=count+1;\n\t\t}\n\t\tprintf(\"%ld \\n\",count2);\n\t\tcount3++;\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n\tint t;\n\tlong int L,v,l,x;\n\tlong int p,count3;\n\tscanf(\"%d\",&t);\n\tcount3=0;\n\twhile(count3<t){\n\t\tscanf(\"%ld\",&L);\n\t\tscanf(\"%ld\",&v);\n\t\tscanf(\"%ld\",&l);\n\t\tscanf(\"%ld\",&x);\n\t\tp=L/v-x/v+(l-1)/v;\n\t\tprintf(\"%ld \\n\",p);\n\t\tcount3++;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.832146490335707, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "36ebd6fded5850253cf87da4df784f5c", "bug_code_uid": "02d5cadde714549b543f04ee28dba58e", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "b430699e6b94b13abec5e11e7aaf67ec", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char ** argv)\n{\n\n\tint nZeros = 0; nFives = 0, n, i = 0;\n\tscanf(\"%i\", &n);\n\t\n\tfor (; i < n; ++i)\n\t{\n\t\n\t\tint a;\n\t\tscanf(\"%i\", &a);\n\t\tif (a)\n\t\t{\n\t\t\t++nFives;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++nZeros;\n\t\t}\n\t\t\n\t}\n\t\n\tfor (i = 0; i < nFives / 9; ++i)\n\t{\n\t\tprintf(\"555555555\");\n\t}\n\t\n\tif (nFives >= 9)\n\t{\n\t\n\t\tfor (i = 0; i < nZeros; ++i)\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t}\n\t\t\n\t}\n\telse if (nZeros)\n\t{\n\t\tprintf(\"0\");\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n\t\n\tprintf(\"\\n\");\n\t\n\treturn 0;\n\t\n}", "fixed": "#include <stdio.h>\n\nint main(int argc, char ** argv)\n{\n\n\tint nZeros = 0, nFives = 0, n, i = 0;\n\tscanf(\"%i\", &n);\n\t\n\tfor (; i < n; ++i)\n\t{\n\t\n\t\tint a;\n\t\tscanf(\"%i\", &a);\n\t\tif (a)\n\t\t{\n\t\t\t++nFives;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++nZeros;\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tif ((nFives >= 9) && nZeros)\n\t{\n\t\n\t\tfor (i = 0; i < nFives / 9; ++i)\n\t\t{\n\t\t\tprintf(\"555555555\");\n\t\t}\n\n\t\tfor (i = 0; i < nZeros; ++i)\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t}\n\t\t\n\t}\n\telse if (nZeros)\n\t{\n\t\tprintf(\"0\");\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n\t\n\tprintf(\"\\n\");\n\t\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.3148936170212766, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "b5ea82ca886e85fb422265a113d7001f", "bug_code_uid": "3a5073f74384776f604fb46b782b3173", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "f4321ebf5e177c4ea8ba905425e54a14", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,i;\n\n    scanf(\"%d\",&n);\n    int a[n];\n    double s=0,r;\n    double b[n];\n\n    for(i=0;i<n;i++){\n       scanf(\"%d\",&a[i]);\n    }\n\n   double max=100.00;\n\n\n    //for(i=0;i<n;i++){\n       // printf(\"%d\\n\",a[i]);\n\n    for(i=0;i<n;i++){\n        b[i]=(a[i]/max);\n        s=s+b[i];\n    }\n\n\n    r=(s/n);\n\n    printf(\"%.12lf\",r*100);\n\n    return 0;\n}\n", "fixed": "   \n    #include <stdio.h>\n\n    int main()\n    {\n        int n;\n        scanf(\"%d\", &n);\n\n        float a[n],s = 0;\n        int i;\n\n        for(i = 0; i < n; i++)\n        {\n            scanf(\"%f\", &a[i]);\n            s = s + a[i];\n        }\n\n        double j = s/n;\n        printf(\"%.12f\", j);\n\n        return 0;\n    }\n\n\n"}
{"similarity_score": 0.6919242273180458, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "31ff338a87fa9de4cbda14c54560a669", "bug_code_uid": "ef5df0c8ff7e0843637be3c8dacadae9", "src_uid": "1c597da89880e87ffe791dd6b9fb2ac7", "apr_id": "046a99d599b7c30b4390b6d982c1ed96", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdbool.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#define MAX 20005\r\ntypedef long long int ll;\r\ntypedef unsigned long long int llu;\r\nint increasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return x-y;\r\n}\r\nint decreasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return y-x;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        ll n;\r\n        scanf(\"%d\",&n);\r\n        ll a[n+2];\r\n        for (ll i=0; i<n; i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n        }\r\n       if (a[0]==1)\r\n        printf(\"YES\\n\");\r\n       else\r\n       {\r\n           ll p = a[0];\r\n           for (ll i=1; i<n; i++)\r\n            a[i] = a[i] - p;\r\n            ll flag = 0;\r\n            for (ll i=1; i<n; i++)\r\n            {\r\n                if (a[i]==0 || a[i]==p)\r\n                    flag++;\r\n            }\r\n            if (flag==n-1)\r\n                printf(\"YES\\n\");\r\n            else\r\n                printf(\"NO\\n\");\r\n       }\r\n    }\r\n\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdbool.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#define MAX 20005\r\ntypedef long long int ll;\r\ntypedef unsigned long long int llu;\r\nint increasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return x-y;\r\n}\r\nint decreasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return y-x;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        ll n;\r\n        scanf(\"%lld\",&n);\r\n        ll a[n+2];\r\n        for (ll i=0; i<n; i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n        }\r\n        int p=a[0],flag=1;\r\n        for (ll i=1; i<n; i++)\r\n        {\r\n            if (a[i]%p!=0)\r\n            {\r\n                flag = 0;\r\n                break;\r\n            }\r\n        }\r\n        printf(flag?\"YES\\n\":\"NO\\n\");\r\n    }\r\n\r\n}\r\n\r\n"}
{"similarity_score": 0.07321131447587355, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "cd578f6ae92366edbcfc61340c657f0e", "bug_code_uid": "84a9e7d114780c8684d2bf01554376af", "src_uid": "a2085c2d21b2dbe4cc27a15fa4a1ec4f", "apr_id": "8c27b816fd19a564e62aa4e2b6a20855", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nusing namespace std;\n\nint main()\n{\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    int a[n];\n    int b[n], c=0;\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(int i=0; i<n; i++)\n    {\n        c+=a[i];\n        printf(\"%d \", c/m);\n        c=c%m;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int d, m;\n    scanf(\"%d %d\", &d, &m);\n    int a[d];\n    int b[d], c=0;\n    for(int i=0; i<d; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(int i=0; i<d; i++)\n    {\n        c+=a[i];\n        printf(\"%d \", c/m);\n        c=c%m;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.1558974358974359, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "6fe3a382eb479d7936c027a51cc52a07", "bug_code_uid": "3c149588c247c2097909422bcee40020", "src_uid": "447c17cba953d6e2da50c242ac431ab4", "apr_id": "3c1c8084b1553e54b5550897654b2965", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main( )\r\n{\r\n    int a[51],b,d,flag,e,n,i;\r\n    long long c;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n    \tscanf(\"%d %lld\",&b,&c);\r\n    \ti=0;\r\n    \td=1;\r\n    \twhile(i<b){\r\n    \t\tscanf(\"%d\",&a[i]);\r\n    \t\tc=c+a[i];\r\n    \t\ti++;\r\n\t\t}\r\n\t\ti=0;\r\n\t\tint g[1000]={};\r\n\t\twhile(i<b){\r\n\t\t\te=a[i];\r\n\t\t\tg[e]++;\r\n\t\t\tif(g[e]>1){\r\n\t\t\t\td=0;\r\n\t\t\t\tc=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\ti=1;\r\n\t\twhile(c>0&&i<101){\r\n\t\t\tc=c-i;\r\n\t\t\tif(c<0){\r\n\t\t\t\td=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif(d==0) printf(\"NO\\n\");\r\n\t\telse printf(\"YES\\n\");\r\n\t}\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint n,i,j,t,sum,k,max=0;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%d %d\",&t,&sum);\r\n\t\tint sumy=0,flag=0,sumx=0;\r\n\t\tfor(j=0;j<t;j++){\r\n\t\t\tscanf(\"%d\",&k);\r\n\t\t\tif(j==0||k>max)\r\n\t\t\tmax=k;\r\n\t\t\tsumy+=k;\r\n\t\t}\r\n\t\tfor(j=max;(j*(j+1)/2)-sumy<=sum;j++){\r\n\t\t\tif((j*(j+1)/2)-sumy==sum)\r\n\t\t\tflag=1;\r\n\t\t}\r\n\t\tif(flag)\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.9954983922829582, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "616ad1c8b2e84f21c4341f807e7a955c", "bug_code_uid": "98575699cd6f837e1052a44cb88cc3fd", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "95317c77dfcda5a1c57d092ec17b932e", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// \n#include <stdio.h>\n#include<stdlib.h>\nint compare(const void* a, const void* b)\n{\n    if(*(long long int*)a - *(long long int*)b > 0)  //this is for descending order. or change 1 t0 -1 and vice versa for increasing order\n        return -1;\n    if(*(long long int*)a - *(long long int*)b == 0)\n        return 0;\n    if(*(long long int*)a - *(long long int*)b < 0)  //to make it in increasing order you have to change the signs over there i.e. > to < and vice versa\n        return 1;\n}\nint main()\n{\n\t    long long int n,i,res;\n\t    scanf(\"%64d\",&n);\n\t    long long int a[n];\n\t    for(i=0;i<n;i++)\n\t    scanf(\"%64d \",&a[i]);\n\t    qsort(a,n,sizeof(long long int),compare);\n\t    if(n%2==0)\n\t    res=a[n/2-1];\n\t    else\n\t    res=a[n/2];\n\t    printf(\"%64d\\n\",res);\n\treturn 0;\n}\n\n", "fixed": "// \n#include <stdio.h>\n#include<stdlib.h>\nint compare(const void* a, const void* b)\n{\n    if(*(long long int*)a - *(long long int*)b < 0)  //this is for descending order. or change 1 t0 -1 and vice versa for increasing order\n        return -1;\n    if(*(long long int*)a - *(long long int*)b == 0)\n        return 0;\n    if(*(long long int*)a - *(long long int*)b > 0)  //to make it in increasing order you have to change the signs over there i.e. > to < and vice versa\n        return 1;\n}\nint main()\n{\n\t    long long int n,i,res;\n\t    scanf(\"%I64d\",&n);\n\t    long long int a[n];\n\t    for(i=0;i<n;i++)\n\t    scanf(\"%I64d \",&a[i]);\n\t    qsort(a,n,sizeof(long long int),compare);\n\t    if(n%2==0)\n\t    res=a[n/2-1];\n\t    else\n\t    res=a[n/2];\n\t    printf(\"%I64d\\n\",res);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.696969696969697, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "2cab1dfbcc1faf6e02dedd29b1d13942", "bug_code_uid": "a0268aca282ebb648c9185acef4a1e63", "src_uid": "9964bfdcfdd041b839ce120019e8220f", "apr_id": "c9f3bfa6e22920cb789b984c4605e930", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int q,n,m,i,j,c=0,a;\n    scanf(\"%lld\",&q);\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%lld%lld\",&n,&m);\n        c=0;\n        for(i=1;i<=10;i++)\n            c=c+(m*i)%10;\n        a=n/(m*10);\n        c=c*a;\n        n=n-a*m*10;\n        n=n/m;\n        for(i=1;i<=n;i++)\n            c=c+(m*i)%10;\n        printf(\"%lld\\n\",c);\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int q,n,m,i,k,c=0;\n    scanf(\"%lld\",&q);\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%lld%lld\",&n,&m);\n        c=0;\n        for(k=0;k<=10;k++)\n\t\t\tc=c+(n+(10-k)*m)/(m*10)*(m*k%10);\n        printf(\"%lld\\n\",c);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.31101511879049676, "equal_cnt": 20, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "b70af9a9650872bb92bc19ba4405cc99", "bug_code_uid": "e59c6c34fb27713c66fa7fa8606385c4", "src_uid": "5099a9ae62e82441c496ac37d92e99e3", "apr_id": "696a4c1b2b84cb25e4012721841594bd", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,k,h,i,s,t,count;\n    scanf(\"%d %d %d\",&n,&k,&h);\n    int a[n];\n    for(i=0,t=0,s=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0,t=0,s=0;i<n;i++)\n    {\n        s+=a[i];\n        if(s>k)\n            t++;\n        t+=s/h;\n        s=s%h;\n    }\n\n    printf(\"%d\",t);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n\nint main()\n{\n    long long n,h,k,a,c,b;\n    int i;\n    scanf(\"%I64d %I64d %I64d\",&n,&h,&k);\n    b=c=0;\n    for(i=0;i<n;++i)\n    {\n        scanf(\"%I64d\",&a);\n        if(c+a<=h)\n        {\n            c+=a;\n        }\n        else\n        {\n            b+=c/k;\n            c%=k;\n            if(c+a<=h)\n            {\n                c+=a;\n            }\n            else\n            {\n                ++b;\n                c=a;\n            }\n        }\n    }\n    if(c>=k)\n    {\n        b+=c/k;\n        c%=k;\n    }\n    b+=c>0?1:0;\n    printf(\"%I64d\\n\",b);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9984962406015038, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ff69f8a110310f4a5369ed1f63c90e1f", "bug_code_uid": "3502246191f2b0176b16ae1975a773ec", "src_uid": "ca5c44093b1ab7c01970d83b5f49d0c6", "apr_id": "d0f20e07b526704c43ecac5e5aa52442", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint cell[101][101], i, j;\n\tint n;\n\tint r1, c1, r2, c2;\n\tunsigned long long int sum = 0;\n\tchar specifier[6];\n\tspecifier[0] = '%';\n\tspecifier[1] = 'l';\n\tspecifier[2] = 'l';\n\tspecifier[3] = 'u';\n\tspecifier[4] = '\\n';\n\tspecifier[5] = '\\0';\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < 101; i++)\n\t{\n\t\tfor(j = 0; j < 101; j++)\n\t\t{\n\t\t\tcell[i][j] = 0;\n\t\t}\n\t}\n\n\twhile(n--)\n\t{\n\t\tscanf(\"%d %d %d %d\", &c1, &r1, &c2, &r2);\n\t\tfor(i = r1; i <= r2; i++)\n\t\t{\n\t\t\tfor(j = c1; j <= c2; j++)\n\t\t\t{\n\t\t\t\tcell[i][j] ++;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\tfor (i = 0; i < 101; i++)\n\t{\n\t\tfor(j = 0; j < 100; j++)\n\t\t{\n\t\t\tsum += cell[i][j];\n\t\t}\n\t}\n\tprintf(specifier, sum);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint cell[101][101], i, j;\n\tint n;\n\tint r1, c1, r2, c2;\n\tunsigned long long int sum = 0;\n\tchar specifier[6];\n\tspecifier[0] = '%';\n\tspecifier[1] = 'l';\n\tspecifier[2] = 'l';\n\tspecifier[3] = 'u';\n\tspecifier[4] = '\\n';\n\tspecifier[5] = '\\0';\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < 101; i++)\n\t{\n\t\tfor(j = 0; j < 101; j++)\n\t\t{\n\t\t\tcell[i][j] = 0;\n\t\t}\n\t}\n\n\twhile(n--)\n\t{\n\t\tscanf(\"%d %d %d %d\", &c1, &r1, &c2, &r2);\n\t\tfor(i = r1; i <= r2; i++)\n\t\t{\n\t\t\tfor(j = c1; j <= c2; j++)\n\t\t\t{\n\t\t\t\tcell[i][j] ++;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\tfor (i = 0; i < 101; i++)\n\t{\n\t\tfor(j = 0; j < 101; j++)\n\t\t{\n\t\t\tsum += cell[i][j];\n\t\t}\n\t}\n\tprintf(specifier, sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9924050632911392, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "51d8ba0c88d2f1c2eae4735fdacc8e45", "bug_code_uid": "f3dae2703a34c1fdfb165a45d0dc689d", "src_uid": "b40059fe9cbdb0cc3b64c3e463900849", "apr_id": "ff9427e31a456835cb7f94083e32095c", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k=0,m,n,cnt=0;\n   int l,sum=0;\n   scanf(\"%d\",&l);\n   while(l--)\n   {\n       scanf(\"%d\",&i);\n       long long int arr[i];\n       for(j=0;j<i;j++)\n       {\n       scanf(\"%lld\",&arr[j]);\n       if(arr[j]==2048)\n       k=1;\n       else if((arr[j]>2048))\n       cnt++;\n       }\n       if(k==1)\n       printf(\"Yes\\n\");\n       else\n       {\n           for(j=0;j<i;j++)\n           {\n               for(m=j+1;m<i;m++)\n               {\n                   if(arr[j]<arr[m])\n                   {\n                       n=arr[j];\n                       arr[j]=arr[m];\n                       arr[m]=n;\n                   }\n               }\n           }\n           for(j=cnt;j<i;j++)\n           {\n               sum=sum+arr[j];\n               if(sum==2048)\n               break;\n           }\n           if(sum==2048)\n           printf(\"Yes\\n\");\n           else\n           printf(\"No\\n\");\n       }\n       cnt=0,k=0;\n       \n       \n   }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k=0,m,n,cnt=0;\n   int l,sum=0;\n   scanf(\"%d\",&l);\n   while(l--)\n   {\n       scanf(\"%d\",&i);\n       long long int arr[i];\n       for(j=0;j<i;j++)\n       {\n       scanf(\"%lld\",&arr[j]);\n       if(arr[j]==2048)\n       k=1;\n       else if((arr[j]>2048))\n       cnt++;\n       }\n       if(k==1)\n       printf(\"Yes\\n\");\n       else\n       {\n           for(j=0;j<i;j++)\n           {\n               for(m=j+1;m<i;m++)\n               {\n                   if(arr[j]<arr[m])\n                   {\n                       n=arr[j];\n                       arr[j]=arr[m];\n                       arr[m]=n;\n                   }\n               }\n           }\n           for(j=cnt;j<i;j++)\n           {\n               sum=sum+arr[j];\n               if(sum==2048)\n               break;\n           }\n           if(sum==2048)\n           printf(\"Yes\\n\");\n           else\n           printf(\"No\\n\");\n       }\n       cnt=0,k=0,sum=0,n=0,m=0;\n       \n       \n   }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8794503435352904, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "33b5b4b81ad9b2d332248f915ebbd90e", "bug_code_uid": "bcd8a4cd143eaf36033936581a1ec396", "src_uid": "c05426881a7dccc1aa79608b612290a7", "apr_id": "e5ed6923e68e616cedcb5427c33bf1af", "difficulty": 800, "tags": ["dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d\",&n);\r\n        char s1[n+1];\r\n        char s2[n+1];\r\n        scanf(\"%s\",&s1);\r\n        scanf(\"%s\",&s2);\r\n        int count=0;\r\n        for(int i=0;i<n;i++){\r\n            if(s2[i]=='1'){\r\n              if(s1[i]=='0'){\r\n                count++;\r\n              }\r\n              else if(s1[i-1]=='1'){\r\n                  count++;\r\n                  s1[i-1]='2';\r\n              }  \r\n              else if(s1[i+1]=='1'){\r\n                  count++;\r\n                  s1[i+1]='2';\r\n              }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d\",&n);\r\n        char s1[n+1];\r\n        char s2[n+1];\r\n        scanf(\"%s\",&s1);\r\n        scanf(\"%s\",&s2);\r\n        int count=0;\r\n        if(s2[0]=='1'){\r\n          if(s1[0]=='0'){\r\n            count++;\r\n          }\r\n          else if(s1[1]=='1'){\r\n            count++;\r\n            s1[1]='2';\r\n          }\r\n\r\n        }\r\n        for(int i=1;i<n;i++){\r\n            if(s2[i]=='1'){\r\n              if(s1[i]=='0'){\r\n                count++;\r\n              }\r\n              else if(s1[i-1]=='1'){\r\n                  count++;\r\n                  s1[i-1]='2';\r\n              }  \r\n              else if(s1[i+1]=='1'){\r\n                  count++;\r\n                  s1[i+1]='2';\r\n              }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.14896214896214896, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "020b0ef92eb472e37a8a64a26f7e8426", "bug_code_uid": "5222006b75c8e2b76ee618b4f302ab62", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "e3b52257c450855d945ba64483505a31", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[20001][3]={0};\n\tint i;\n\tfor(i=0;i<2001;i++){\n\t\tscanf(\"%s\",a[i]);\n\t\tif(a[i][1]=='}')\n\t\t\tbreak;\n\t}\n\tint j=97,k,count=0;\n/*\tfor(i=0;i<2001;i++){\n\t\tfor(k=0;k<3;k++){\n\t\t\tif(a[i][k]!=0)\n\t\t\tprintf(\"%c\",a[i][k]);\n\t\t}\n\t\tif(a[i][1]=='}')\n\t\t\tbreak;\n\t}*/\n\twhile(j<123){\n\t\tfor(i=0;i<2001;i++){\n\t\t\tfor(k=0;k<3;k++){\n\t\t\t\tif(a[i][k]>96&&a[i][k]<123){\n\t\t\t\t\tif(a[i][k]==j){\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tcount++;\n//\t\t\t\t\t\tprintf(\"%d\\n\",count);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\tif(a[i][1]=='}')\n\t\tbreak;\n\t\t}\n//\tprintf(\"%d\\n\",j);\n\tj++;\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\nint arr[256]={0},i,top=0;\nchar h;\nwhile(1){\nscanf(\"%c\",&h);\nif(h == 10)break;\nif(h >= 'a' && h <= 'z')\narr[h]++;\n}\nfor(i = 0 ; i < 256 ; i++)\nif(arr[i])\ntop++;\nprintf(\"%d\",top);\nreturn 0;\n}"}
{"similarity_score": 0.9887005649717514, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ea2428b721c1b332d96aa7ea447d8a35", "bug_code_uid": "f7ebc8a176aa0cb457937f0cc51fff44", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "884f2d16a5d17ec8982f8f531c247759", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(int i = 1; i<=t;i++){\r\n        int setsNumber;\r\n        scanf(\"%d\",&setsNumber);\r\n        \r\n        int unevenCounter = 0;\r\n\r\n        for(int j=1;j<=setsNumber * 2;j++){\r\n            int number;\r\n            scanf(\"%d\",&number);\r\n\r\n            if(number % 2)\r\n                unevenCounter++;\r\n        }\r\n\r\n        if(unevenCounter == setsNumber){\r\n            printf(\"YES\");\r\n        }\r\n        else\r\n            printf(\"NO\");\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(int i = 1; i<=t;i++){\r\n        int setsNumber;\r\n        scanf(\"%d\",&setsNumber);\r\n\r\n        int unevenCounter = 0;\r\n\r\n        for(int j=1;j<=setsNumber * 2;j++){\r\n            int number;\r\n            scanf(\"%d\",&number);\r\n\r\n            if(number % 2)\r\n                unevenCounter++;\r\n        }\r\n\r\n        if(unevenCounter == setsNumber){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9946524064171123, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0a531370a6216591e5ccf70f6a9c9381", "bug_code_uid": "08b1de59fbf316b803da76e29d3e5cd2", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "9230055c9c33c3fb3a020ba127259be6", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,i,j,k=1,a,b,m,p,f=1;\n    scanf(\"%d\",&n);\n    scanf(\"%d %d\\n\",&m,&p);\n    for(i=1;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(a==m && b==p){\n            f++;\n        }\n        else{\n            m=a;\n            p=b;\n            if(f>=k&&f>1){\n                k=f;\n                f=0;\n            }\n            else{\n                f=1;\n            }\n        }\n    }\n    if(n==14411){\n        f=1070;\n    }\n    if(f>=k){\n        printf(\"%d\",f);\n    }\n    else if(f<k){\n        printf(\"%d\",k);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,j,k=1,a,b,m,p,f=1;\n    scanf(\"%d\",&n);\n    scanf(\"%d %d\\n\",&m,&p);\n    for(i=1;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(a==m && b==p){\n            f++;\n        }\n        else{\n            m=a;\n            p=b;\n            if(f>k){\n                k=f;\n                f=0;\n            }\n            else{\n                f=1;\n            }\n        }\n    }\n    if(n==14411){\n        f=1070;\n    }\n    if(f>=k){\n        printf(\"%d\",f);\n    }\n    else if(f<k){\n        printf(\"%d\",k);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9267707082833133, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e5c200721b8c47a304690e9a6c05700c", "bug_code_uid": "cd9b032249aa690bc743a2b6cfbc2fcc", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "dca21d88fb9aae1b877a4f690ae11cc3", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t,n,s,count,x;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t   scanf(\"%d\",&n);\n\t   int arr[n];\n\t   s=0;\n\t   count=0;\n\t   for(int i=0;i<n;i++)\n\t   {\n\t       scanf(\"%d\",&arr[i]);\n\t       s=s+arr[i];\n\t       if(arr[i]==0)\n\t       count++;\n\t   }\n\t   if(s+count<=0)\n\t   x=1-(s+count);\n\t   else\n\t   x=0;\n\t   printf(\"%d\\n\",count+x);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t,n,s,count,x;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t   scanf(\"%d\",&n);\n\t   int arr[n];\n\t   s=0;\n\t   count=0;\n\t   //y=0;\n\t   for(int i=0;i<n;i++)\n\t   {\n\t       scanf(\"%d\",&arr[i]);\n\t       s=s+arr[i];\n\t       if(arr[i]==0)\n\t       count++;\n\t       //if(arr[i]<0)\n\t       //y++;\n\t   }\n\t   if(s+count==0)\n\t   x=1;\n\t   else\n\t   x=0;\n\t   printf(\"%d\\n\",count+x);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7634936211972522, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "971240dd649663ce2134a61dfcb9db4a", "bug_code_uid": "cd5925b590fd806e47c1f14e74fad8b8", "src_uid": "55297e2a65144323af4d6abd6a6ef050", "apr_id": "e04f6c538557839f19df9159eeabcbc0", "difficulty": 1200, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\ntypedef long long LL;\n\nint comparator(void *p,void *q)\n{\n\tint l=*((int *)p);\n\tint r=*((int *)q);\n\treturn (l-r);\n}\n\n\nint main()\n{\n\tLL n,k;\n\tscanf(\"%lld %lld\",&n,&k);\n\n\tLL arr[n];\n\tLL i,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t}\n\n\tqsort((void *)arr,n,sizeof(long long int),comparator);\n\t\n\n\t\n\tif(arr[k-1]!=arr[k])\n\tprintf(\"%lld\",arr[k-1]);\n\n\telse\n\t\tprintf(\"-1\");\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\ntypedef long long LL;\n\nint comparator(void *p,void *q)\n{\n\tint l=*((int *)p);\n\tint r=*((int *)q);\n\treturn (l-r);\n}\n\n\nint main()\n{\n\tLL n,k;\n\tscanf(\"%lld %lld\",&n,&k);\n\n\tLL arr[n];\n\tLL i,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t}\n\n\tqsort((void *)arr,n,sizeof(long long int),comparator);\n\tif(k==0)\n\t{\n\t\tif(arr[0]>=2)\n\t\t{\n\t\tprintf(\"%lld\",arr[0]-1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t}\n\t\t\n\t}\n\telse if(k>n)\n\t{\n\t\tprintf(\"-1\");\n\t}\n\telse if(k==n)\n\t{\n\t\tprintf(\"%lld\",arr[k-1]);\n\t}\n\telse if(arr[k-1]!=arr[k])\n\t{\n\tprintf(\"%lld\",arr[k-1]);\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n\n}\n"}
{"similarity_score": 0.7222222222222222, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "eab433200c445142b9b933745fc3d85f", "bug_code_uid": "794f6e820ccf991a85d813ad0a91bb44", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "b095b4907dff4bf50a73a54bfaff70b1", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,p;\n    scanf (\"%d\",&n);\n    p=n*2;\n    int ar[10000000],i;\n    for (i=0;i<p;i++)\n    {\n        scanf (\"%d\",&ar[i]);\n    }\n    int m,t,min=12000,q,j,z,s=0;\n    m=p-1;\n    if (ar[1]==100 || ar[1]==1)\n    {\n       for (j=q-1;j<m;j+=2)\n       {\n          z=ar[j]*min;\n          s+=z;\n       }\n       printf (\"%d\\n\",s);\n    }\n    else\n    {\n    leo:\n    for (t=1;t<=m;t+=2)\n    {\n       if (ar[t]<=min)\n       {\n           min=ar[t];\n           q=t;\n       }\n    }\n    if (q==1)\n    {\n       for (j=q-1;j<m;j+=2)\n       {\n          z=ar[j]*min;\n          s+=z;\n       }\n       printf (\"%d\\n\",s);\n    }\n    else if (q!=1)\n    {\n       for (j=q-1;j<m;j+=2)\n       {\n          z=ar[j]*min;\n          s+=z;\n       }\n       m=q-2;\n       min=12000;\n       goto leo;\n    }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,p;\n    scanf (\"%d\",&n);\n    p=n*2;\n    int ar[10000000],i;\n    for (i=0;i<p;i++)\n    {\n        scanf (\"%d\",&ar[i]);\n    }\n    int m,t,min=12000,q,j,z,s=0;\n    m=p-1;\n    leo:\n    for (t=1;t<=m;t+=2)\n    {\n       if (ar[t]<min)\n       {\n           min=ar[t];\n           q=t;\n       }\n    }\n    if (q==1)\n    {\n       for (j=q-1;j<m;j+=2)\n       {\n          z=ar[j]*min;\n          s+=z;\n       }\n       printf (\"%d\\n\",s);\n    }\n    else if (q!=1)\n    {\n       for (j=q-1;j<m;j+=2)\n       {\n          z=ar[j]*min;\n          s+=z;\n       }\n       m=q-2;\n       min=12000;\n       goto leo;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9921259842519685, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "95999322d98041ef3e931947eeb9111b", "bug_code_uid": "61d56e415ad21e4ef58722cf8277a4d5", "src_uid": "8c26daa1eed2078af3b32737da0a0f84", "apr_id": "5b1df06f76d4ded8557525f547eb47df", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     int n, p = 0, f = 0, i;\n     char s1[10001], s2[20000];\n\n     fgets(s1, 10001, stdin);\n\n     n = strlen(s1);\n\n     s1[--n] = '\\0';\n\n     for (i = 0; i < n; i++) {\n\t  if (s1[i] >= 'a' && s1[i] <= 'z') {\n\t       if (f == 1) s2[p++] = ' ';\n\t       s2[p++] = s1[i];\n\t       f = 0;\n\t  } else if (s1[i] == ' ') {\n\t       f = 1;\n\t  } else {\n\t       s2[p++] = s1[i];\n\t       f = 1;\n\t  }\n     }\n\n     s2[p] = '\\0';\n\n     printf(\"%s\\n\", s2);\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     int n, p = 0, f = 0, i;\n     char s1[10010], s2[20000];\n\n     fgets(s1, 10010, stdin);\n\n     n = strlen(s1);\n\n     s1[--n] = '\\0';\n\n     for (i = 0; i < n; i++) {\n\t  if (s1[i] >= 'a' && s1[i] <= 'z') {\n\t       if (f == 1) s2[p++] = ' ';\n\t       s2[p++] = s1[i];\n\t       f = 0;\n\t  } else if (s1[i] == ' ') {\n\t       f = 1;\n\t  } else {\n\t       s2[p++] = s1[i];\n\t       f = 1;\n\t  }\n     }\n\n     s2[p] = '\\0';\n\n     printf(\"%s\\n\", s2);\n\n     return 0;\n}\n"}
{"similarity_score": 0.9037610619469026, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0f81bf185fdc303533396b06434bac7b", "bug_code_uid": "f39c21a6f86db1013905e7566d036437", "src_uid": "dd7faacff9f57635f8e00c2f8f5a4650", "apr_id": "d5f9690802fedd75fcd83ef650106cfb", "difficulty": 1100, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid printer(char s[], int i);\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int array_i[t];\r\n    int n;\r\n    for (int k = 0; k < t; k++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        char s[n + 1];\r\n        scanf(\"%s\", s);\r\n        int found = 0;\r\n        for (int i = 0; i < n - 1; i++)\r\n        {\r\n            if (s[i] <= s[i + 1])\r\n            {\r\n                printer(s, i);\r\n                found = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (found == 0)\r\n        {\r\n            printer(s, n - 1);\r\n        }\r\n    }\r\n}\r\n\r\nvoid printer(char s[], int i)\r\n{\r\n    for (int j = 0; j <= i; j++)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n        for (int j = i; j >= 0; j--)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n    printf(\"\\n\");\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid printer(char s[], int i);\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int array_i[t];\r\n    int n;\r\n    for (int k = 0; k < t; k++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        char s[n + 1];\r\n        scanf(\"%s\", s);\r\n        int found = 0;\r\n        for (int i = 0; i < n - 1; i++)\r\n        {\r\n            if (s[i] == s[i + 1] && i == 0)\r\n            {\r\n                printer(s, i);\r\n                found = 1;\r\n                break;\r\n            }\r\n            if (s[i] < s[i + 1])\r\n            {\r\n                printer(s, i);\r\n                found = 1;\r\n                break;\r\n            }\r\n            \r\n        }\r\n        if (found == 0)\r\n        {\r\n            printer(s, n - 1);\r\n        }\r\n    }\r\n}\r\n\r\nvoid printer(char s[], int i)\r\n{\r\n    for (int j = 0; j <= i; j++)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n        for (int j = i; j >= 0; j--)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n    printf(\"\\n\");\r\n}"}
{"similarity_score": 0.9233954451345756, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "454c38eb762a1563e3c9a350d65c3ae8", "bug_code_uid": "8625358a217e52344c122ca7426050c8", "src_uid": "915b4776a6b1fa15886247eb1ad40b60", "apr_id": "2a82084da21e33fec4d4b75e367395b1", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar s[500001];\n    fgets(s, 5000000, stdin);\n\tint leftBracket = -1;\n\tint rightBracket = -1;\n\tint leftColon = -1;\n\tint rightColon = -1;\n\tfor(int i = 0; i < strlen(s); ++i) {\n\t\tif (leftBracket == -1 && s[i] == '[')\n\t\t\tleftBracket = i;\n\t\telse if(s[i] == ']')\n\t\t\trightBracket = i;\n\t\telse if(leftBracket != -1 && s[i] == ':') {\n\t\t\tif(leftColon == -1)\n\t\t\t\tleftColon = i;\n\t\t\trightColon = i;\n\t\t}\n\t}\n\t\n\tif(rightColon > rightBracket) {\n\t\tfor(int i = rightBracket -1; i > leftColon; --i)\n\t\t\tif(s[i] == ':') {\n\t\t\t\trightColon = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\t\n\tif(leftBracket == -1 || rightBracket == -1|| leftBracket > rightBracket || leftColon == -1 || leftColon == rightColon)\n\t\tprintf(\"%d\", -1);\n\telse {\n\t\tint count = 0;\n\t\tfor(int i = leftColon + 1; i < rightColon; ++i) {\n\t\t\tif(s[i] == '|')\n\t\t\t\tcount++;\n\t\t}\n\t\tif(strcmp(s, ':[[[:]]]:') == 0)\n\t\t\tprintf(\"%d %d %d %d\\n\", leftBracket, rightBracket, leftColon, rightColon);\n\t\tprintf(\"%d\", count + 4);\n\t}\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar s[500001];\n    fgets(s, 5000000, stdin);\n\tint leftBracket = -1;\n\tint rightBracket = -1;\n\tint leftColon = -1;\n\tint rightColon = -1;\n\tfor(int i = 0; i < strlen(s); ++i) {\n\t\tif (leftBracket == -1 && s[i] == '[')\n\t\t\tleftBracket = i;\n\t\telse if(s[i] == ']')\n\t\t\trightBracket = i;\n\t\telse if(leftBracket != -1 && s[i] == ':') {\n\t\t\tif(leftColon == -1)\n\t\t\t\tleftColon = i;\n\t\t\trightColon = i;\n\t\t}\n\t}\n\t\n\tif(rightColon > rightBracket) {\n\t\tfor(int i = rightBracket -1; i > leftColon; --i)\n\t\t\tif(s[i] == ':') {\n\t\t\t\trightColon = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\t\n\tif(leftBracket == -1 || rightBracket == -1|| leftBracket > rightBracket || leftColon == -1 || leftColon == rightColon || rightColon > rightBracket) {\n\t\tprintf(\"%d\", -1);\n\t}\n\telse {\n\t\tint count = 0;\n\t\tfor(int i = leftColon + 1; i < rightColon; ++i) {\n\t\t\tif(s[i] == '|')\n\t\t\t\tcount++;\n\t\t}\n\t\tprintf(\"%d\", count + 4);\n\t}\n    return 0;\n}\n"}
{"similarity_score": 0.9973890339425587, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "835479d2c07cb506d539bfb0f3394676", "bug_code_uid": "7b752b50bebd7dbd555d11846f2ffa50", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "a5961da119b1f4aca89349dc4b0039a4", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,max=0,x,sum=0;\n    int mark[1001];\n    memset(mark,0,sizeof(mark));\n    scanf(\"%d\\n\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        mark[x]++;\n    }\n     for(i=1;i<1001;i++)\n     {\n        if(mark[i]>0)sum++;\n        if(mark[i]>max)max=mark[i];\n     }\n     printf(\"\\n%d\\t&d\",max,sum);\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,max=0,x,sum=0;\n    int mark[1001];\n    memset(mark,0,sizeof(mark));\n    scanf(\"%d\\n\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        mark[x]++;\n    }\n     for(i=1;i<1001;i++)\n     {\n        if(mark[i]>0)sum++;\n        if(mark[i]>max)max=mark[i];\n     }\n     printf(\"\\n%d\\t%d\",max,sum);\n     return 0;\n}\n"}
{"similarity_score": 0.9232571763327475, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "d4604bdef833595a4fcf20284144c5fa", "bug_code_uid": "1097d19f429df1a4686f87ed93cf96c9", "src_uid": "14959b7266ceebe96c33bfa1791e26b4", "apr_id": "e7ed785b0be583247dce5dcfb7ed9d05", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX(x,y) (((x) > (y))?(x):(y))\n#define ABS(x) (((x)<0) ? (-(x)):(x))\n\nint m ,n, x, y,r, i, j;\nint ma;\nchar c;\nint lawn[150][150];\n\nint main(void)\n{\n    scanf(\"%d %d\", &m, &n);\n    while ((c = getchar()) != EOF) {\n        if (isalpha(c)) {\n            if (c=='W') {\n                lawn[x][y] = 1;\n            }\n            x++;\n            if (x==n) {\n                x=0;\n                y++;\n            }\n        }\n    }\n    \n    x=0;\n    y=0;\n    while (y!=m) {\n        ma = x;\n        i = x;\n            \n        while (i!=n && i>=0) { \n            if (lawn[i][y] || ((y+1<m)&&(lawn[i][y+1]))) ma=i;\n            i+= ((y%2==0) ? 1 : -1);\n        }            \n        r+= ABS(ma-x);\n        x = ma;\n        y++;\n    }\n    printf(\"%d\\n\", r+m-1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAX(x,y) (((x) > (y))?(x):(y))\n#define ABS(x) (((x)<0) ? (-(x)):(x))\n\nint m ,n, x, y,r, i, j,w,yb;\nint ma;\nchar c;\nint lawn[150][150];\n\nint main(void)\n{\n    scanf(\"%d %d\", &m, &n);\n    while ((c = getchar()) != EOF) {\n        if (isalpha(c)) {\n            if (c=='W') {\n                lawn[x][y] = 1;\n            }\n            x++;\n            if (x==n) {\n                x=0;\n                y++;\n            }\n        }\n    }\n    \n    x=0;\n    y=0;\n    w=0;\n    yb=0;\n    while (y!=m) {\n        ma = x;\n        i = x;\n            \n        while (i!=n && i>=0) { \n            if (lawn[i][y] || ((y+1<m)&&(lawn[i][y+1]))) { ma=i; w=1; }\n            i+= ((y%2==0) ? 1 : -1);\n        }            \n        r+= ABS(ma-x);\n        if (w){\n            r+=yb;\n            yb=0;\n            w=0;\n        }\n        x = ma;\n        y++;\n        yb++;\n    }\n    printf(\"%d\\n\", r);\n    return 0;\n}\n"}
{"similarity_score": 0.996875, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f35af2d2612a213657b128b456fbd0e5", "bug_code_uid": "41cffad2e4bba5f0571c6edfdb9083ec", "src_uid": "14fccd50d5dfb557dd53f2896ed844c3", "apr_id": "f15aa0b46641b2a51a84068ae886225a", "difficulty": 800, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\n  int N;\n  scanf(\"%d\",&N);\n\n\n\n\n\n for(int i=0; i< N;i++) {\n\n   int a,b,c,stones=0;\n   scanf(\"%d %d %d\",&a,&b,&c);\n  for(;b >= 1 && c >= 2;){\n     b--;\n     c-=2;\n     stones+=3;\n  }\n\n  for(;a >= 1 && b >= 2;){\n    a--;\n    b-=2;\n    stones+=3;\n  }\n\n  printf(\"%d\",stones);\n}\n  return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n\n  int N;\n  scanf(\"%d\",&N);\n\n\n\n\n\n for(int i=0; i< N;i++) {\n\n   int a,b,c,stones=0;\n   scanf(\"%d %d %d\",&a,&b,&c);\n  for(;b >= 1 && c >= 2;){\n     b--;\n     c-=2;\n     stones+=3;\n  }\n\n  for(;a >= 1 && b >= 2;){\n    a--;\n    b-=2;\n    stones+=3;\n  }\n\n  printf(\"%d\\n\",stones);\n}\n  return 0;\n}\n"}
{"similarity_score": 0.9968253968253968, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cb47c776c8f9ff8ddd26b5a6e2ebc723", "bug_code_uid": "3f43046eb8b302143f1177d9c33cd9a8", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "2f59bc60248ae06932327e3e898606b1", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,d,c=0,z=0,flag=0,i,j;\r\n        scanf(\"%d %d\",&n,&d);\r\n        int arr[n];\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            if(arr[i] > d)\r\n                flag=1;\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n            z=1;\r\n        }\r\n        else if(flag==1)\r\n        {\r\n            for(i=0;i<n;i++)\r\n                for(j=0;j<n;j++)\r\n                {\r\n                    if(arr[i]+arr[j] < d)\r\n                        flag=0;\r\n                }\r\n        }\r\n        if(flag==1)\r\n            printf(\"NO\\n\");\r\n        else\r\n            if(z==0)\r\n            printf(\"YES\\n\");\r\n    }\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,d,c=0,z=0,flag=0,i,j;\r\n        scanf(\"%d %d\",&n,&d);\r\n        int arr[n];\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            if(arr[i] > d)\r\n                flag=1;\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n            z=1;\r\n        }\r\n        else if(flag==1)\r\n        {\r\n            for(i=0;i<n;i++)\r\n                for(j=i+1;j<n;j++)\r\n                {\r\n                    if(arr[i]+arr[j] <= d)\r\n                        flag=0;\r\n                }\r\n        }\r\n        if(flag==1)\r\n            printf(\"NO\\n\");\r\n        else\r\n            if(z==0)\r\n            printf(\"YES\\n\");\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9971014492753624, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "236de5d9cd2498e29c6b35ac4849a6cf", "bug_code_uid": "1c77534b9706d0015d1e669c06215683", "src_uid": "64a375c7c49591c676dbdb039c93d218", "apr_id": "632a424ccbbd564e896ce0ed0b78f13d", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\" %d\",&t);\n\twhile(t--){\n\t\tint a,b,c;\n\t\tscanf(\" %d %d %d\",&a,&b,&c);\n\t\tint nums[] = {a,b,a^b};\n\t\tprintf(\"%d^\\n\",nums[c%3]);\n\t}\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\" %d\",&t);\n\twhile(t--){\n\t\tint a,b,c;\n\t\tscanf(\" %d %d %d\",&a,&b,&c);\n\t\tint nums[] = {a,b,a^b};\n\t\tprintf(\"%d\\n\",nums[c%3]);\n\t}\n}"}
{"similarity_score": 0.7927927927927928, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "122ee8d5d6b1aec2d48ef56c3be2daff", "bug_code_uid": "b841a30243801d037a5489324ce8fa03", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "5b8caebbe64577f39b1fea638f48051d", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int l,r,n,t,c,i,j,k;\n    scanf(\"%d%d\",&n,&t);\n    int a[n+1], b[n+1];\n    a[0]=0;\n    b[0]=0;\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        b[i]=a[i];\n    }\n    for(i=1; i<=t; i++)\n    {\n        scanf(\"%d%d%d\",&l,&r,&c);\n\n        for(j=l,k=r; j<=r; j++,k--)\n        {\n            b[k]=a[j];\n        }\n\n        if(a[c]==b[c]) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int l,r,n,t,c,i,j,k,m,x,y;\n    scanf(\"%d%d\",&n,&t);\n    int a[n+1], b[n+1];\n    a[0]=0;\n    b[0]=0;\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        b[i]=a[i];\n    }\n    for(i=1; i<=t; i++)\n    {\n        scanf(\"%d%d%d\",&l,&r,&c);\n        x=0;\n        y=0;\n\n        for(j=l;j<c;j++)\n        {\n            if(a[j]>a[c]) x++;\n        }\n         for(j=c+1;j<=r;j++)\n        {\n            if(a[j]<a[c]) y++;\n        }\n        if(x==y) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n\n\n\n\n\n return 0;}\n\n"}
{"similarity_score": 0.8662068965517241, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d85e3e88cf160876c394201d31a682c7", "bug_code_uid": "4b34c84433dc96a6232b20ed5b138ad9", "src_uid": "beaeeb8757232b141d510547d73ade04", "apr_id": "1876e4caece86aa8ba87690728445894", "difficulty": 1200, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,i,a[1000006],count=1,val=1;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tval=n-a[n];\n\tfor(i=n-1;i>1;i--)\n\t{\n\t\tif(i==val)\n\t\t{\n\t\t\tcount+=1;\n\t\t\tval=i-a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\tif((i-a[i])<val)\n\t\t{\n\t\t\tval=i-a[i];\n\t\t}\n\t\t}\n\t}\n\tif(n!=1&&val==2)\n\t\tcount+=1;\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,i,a[1000006],count=1,val=1;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tval=n-a[n];\n\tfor(i=n-1;i>1;i--)\n\t{\n\t\tif(i<val)\n\t\t{\n\t\t\tcount+=1;\n\t\t\tval=i-a[i];\n\t\t}\n\t\telse if(i==val)\n\t\t{\n\t\t\tval=i-a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif((i-a[i])<val)\n\t\t\t{\n\t\t\t\tval=i-a[i];\n\t\t\t}\n\t\t}\n\t}\n\tif(n!=1&&val>1)\n\t\tcount+=1;\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7753120665742025, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6e7662db3b62350ec1e57eebc8100f67", "bug_code_uid": "87dbd0d2f24ce812dd0cd7eede10fa09", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "eddef3354ddbd98ca183c537af8218e1", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j=1,k=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(i=0;i<=n-1;i++)\n        scanf(\"%d %d\",&a[i],&b[i]);\n    for(i=1;i<=n-1;i++)\n    {\n            if((b[i]>b[0])&&(a[i]<a[0]))\n            {\n                k++;\n                printf(\"Happy Alex\\n\");\n                break;\n            }\n            else if((b[0]>b[i])&&(a[0]<a[i]))\n            {\n                k++;\n                printf(\"Happy Alex\\n\");\n                break;\n            }\n    }\n    if(k==0)\n        printf(\"Poor Alex\\n\");\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j=1,k=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(i=0;i<=n-1;i++)\n        scanf(\"%d %d\",&a[i],&b[i]);\n    for(i=1;i<=n-1;i++)\n    {\n            if((b[i]>b[0])&&(a[i]<a[0]))\n            {\n                k++;\n                printf(\"Happy Alex\\n\");\n                break;\n            }\n            else if((b[0]>b[i])&&(a[0]<a[i]))\n            {\n                k++;\n                printf(\"Happy Alex\\n\");\n                break;\n            }\n            else if((b[i-1]>b[i])&&(a[i-1]<a[i]))\n            {\n                k++;\n                printf(\"Happy Alex\\n\");\n                break;\n            }\n            else if((b[i]>b[i-1])&&(a[i]<a[i-1]))\n            {\n                k++;\n                printf(\"Happy Alex\\n\");\n                break;\n            }\n    }\n    if(k==0)\n        printf(\"Poor Alex\\n\");\n    return 0;\n}\n\n"}
{"similarity_score": 0.79, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d4633bcdd14fe9b6477ef19c5d238ed0", "bug_code_uid": "77c64a4017ee464b3710a01faa759b8e", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "f3ff22ce1f12e48a8814f6237b55faa7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t=0;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        int n=0,m=0;\r\n        int x=0;\r\n        scanf(\"%d %d %d\",&n,&m,&x);\r\n        int i = x%n;\r\n        int j = (x-i)/n;\r\n        printf(\"%d\\n\",(i-1)*m+j+1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t=0;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        long long int n=0,m=0;\r\n        long long int x=0;\r\n        scanf(\"%lld %lld %lld\",&n,&m,&x);\r\n        long long int i = (x-1)%n;\r\n        long long int j = (x-1)/n;\r\n        printf(\"%lld\\n\",i*m+j+1);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9774236387782205, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "50fb87a55f0cd378458b9e84b4994d32", "bug_code_uid": "861ab5d4bc4f7d916be05fb548ec2765", "src_uid": "0ea79b2a7ddf3d4da9c7a348e61933a7", "apr_id": "84eb573920d13a006e01724ba41e9437", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n\n#define N 100\n\nint main() {\n\tstatic int kk[N];\n\tint n, i, j, k, min, sum;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &kk[i]);\n\tmin = INT_MAX;\n\tfor (i = 0; i < n; i++) {\n\t\tsum = kk[i] * 15;\n\t\twhile (kk[i]--) {\n\t\t\tscanf(\"%d\", &a);\n\t\t\tsum += a * 5;\n\t\t}\n\t\tif (min > sum)\n\t\t\tmin = sum;\n\t}\n\tprintf(\"%d\\n\", min);\n\treturn 0;\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n\n#define N 100\n\nint main() {\n\tstatic int kk[N];\n\tint n, i, min, sum;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &kk[i]);\n\tmin = INT_MAX;\n\tfor (i = 0; i < n; i++) {\n\t\tsum = kk[i] * 15;\n\t\twhile (kk[i]--) {\n\t\t\tint a;\n\n\t\t\tscanf(\"%d\", &a);\n\t\t\tsum += a * 5;\n\t\t}\n\t\tif (min > sum)\n\t\t\tmin = sum;\n\t}\n\tprintf(\"%d\\n\", min);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9061154177433247, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "dabeed7bfb93d0a6c41afab29fcee736", "bug_code_uid": "311dca34e6252873fcee62c2d6b71638", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "7231065ccf2e45e94326bf726a4736f2", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,t,n,a[21],j;\n    a[1]=60;a[2]=90;a[3]=108;a[4]=120;a[5]=135;a[6]=140;a[7]=144;a[8]=150;a[9]=156;a[10]=160;a[11]=162;a[12]=165;a[13]=168;a[14]=170;a[15]=171;a[16]=172;a[17]=174;a[18]=175;a[19]=176;a[20]=177;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=1;j<22;j++)\n        {\n            if(n==a[j]&&j<21)\n            {   printf(\"%d\\n\",j);\n                printf(\"YES\\n\");\n                break;\n            }\n            if(j==21)\n                printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,t,n,a[23],j;\n    a[1]=60;a[2]=90;a[3]=108;a[4]=120;a[5]=135;a[6]=140;a[7]=144;a[8]=150;a[9]=156;a[10]=160;a[11]=162;a[12]=165;a[13]=168;a[14]=170;a[15]=171;a[16]=172;a[17]=174;a[18]=175;a[19]=176;a[20]=177;a[21]=178;a[22]=179;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=1;j<=22;j++)\n        {\n            if(n==a[j]&&j<23)\n            {\n                printf(\"YES\\n\");\n                goto fun;\n            }\n        }\n        printf(\"NO\\n\");\n        fun:\n            continue;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9972602739726028, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "64678ac8643e340cd931babcdf3ba7b2", "bug_code_uid": "bb580b0fd26e3a4ff2ae48a2efe4f008", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "7b52454b8ed596440e19d02d86220434", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n#define M 100007\nint main()\n{\n\tint n,a[M],i,f=0,pos,p=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]>a[i-1] && f==0)\t\n\t\t\tcontinue;\n\t\telse if(a[i]<a[i-1] && f==0)\n\t\t\t{\n\t\t\t\tpos=i-1;\n\t\t\t\tf=1;\n\t\t\t}\n\t\telse if(a[i]>a[i-1] && f==1 )\n\t\t     continue;\n\t\telse if(a[i]<a[i-1] && f==1 )\n\t\t\t{\n\t\t\t     \tp=1;\n\t\t\t     \tbreak;\n\t\t\t}\n\t\t\t\n\t}\n\tif(p==1)\n\t\tprintf(\"-1\");\n\telse\n\t{\n\t\tif(f==0)\n\t\t\tprintf(\"0\");\n\t\telse if(a[0]>a[n-1])\t\n\t\t\tprintf(\"%d\",n-pos-1);\n\t\telse\n\t\t\tprintf(\"-1\");\t\n\t}\n\treturn 0;\n}\t\t\t\t     \t\t\n", "fixed": "\n#include<stdio.h>\n#define M 100007\nint main()\n{\n\tint n,a[M],i,f=0,pos,p=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]>=a[i-1] && f==0)\t\n\t\t\tcontinue;\n\t\telse if(a[i]<a[i-1] && f==0)\n\t\t\t{\n\t\t\t\tpos=i-1;\n\t\t\t\tf=1;\n\t\t\t}\n\t\telse if(a[i]>=a[i-1] && f==1 )\n\t\t     continue;\n\t\telse if(a[i]<a[i-1] && f==1 )\n\t\t\t{\n\t\t\t     \tp=1;\n\t\t\t     \tbreak;\n\t\t\t}\n\t\t\t\n\t}\n\tif(p==1)\n\t\tprintf(\"-1\");\n\telse\n\t{\n\t\tif(f==0)\n\t\t\tprintf(\"0\");\n\t\telse if(a[0]>=a[n-1])\t\n\t\t\tprintf(\"%d\",n-pos-1);\n\t\telse\n\t\t\tprintf(\"-1\");\t\n\t}\n\treturn 0;\n}\t\t\t\t     \t\t\n"}
{"similarity_score": 0.46348314606741575, "equal_cnt": 21, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "b63f470bccfde5a5dbb3659ca55be78b", "bug_code_uid": "4bb21b0c56a669efbdb0bb1cfbe20aa3", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "1debbebff30f541aee7474d433fce0eb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include<stdio.h>\n    int main()\n    {\n        int s[1000],n,c=0,i;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&s[i]);\n           for(i=0;i<n-1;i++){\n           if(s[i]!=s[i+1]){\n             c++;\n           }\n           }\n     \n     \n        printf(\"%d\\n\",c);\n        return 0;\n    }", "fixed": "    # include <stdio.h>\n        int main ()\n        {\n            int n,i;\n            scanf (\"%d\",&n);\n            int a[n],count=0;\n            for (i=0; i<n; i++)\n                scanf (\"%d\",&a[i]);\n            for (i=0; i<n-1; i++)\n            {\n                if (a[i]!=a[i+1])\n                    count++;\n            }\n            printf (\"%d\\n\",count+1);\n            return 0;\n        }"}
{"similarity_score": 0.4019607843137255, "equal_cnt": 13, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "e1e1b3948f20ba72e43322d202745159", "bug_code_uid": "fc386f6c45e39ca8efbeb575b6b781ce", "src_uid": "1a5f266b49aadbeef59e19bcf5524a57", "apr_id": "3a316b83989aaf655a56995a5ab1add0", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int n,k,t2,type=2;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%d\",&k);\r\n        t2=k%3;\r\n        k/=3;\r\n        k*=2;\r\n        if(t2==1)\r\n        printf(\"1\");\r\n        while(k--){\r\n            printf(\"%d\",type);\r\n            type=3-type;\r\n        }\r\n        if(t2==2)\r\n        printf(\"2\");\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n    char type='2',arr[1005];\r\n    int k,n;\r\n    for(int i=0;i<1004;i++){\r\n        arr[i]=type;\r\n        type='0'+'3'-type;\r\n    }\r\n    scanf(\"%d\",&k);\r\n    while(k--){\r\n        scanf(\"%d\",&n);\r\n        int t2=n%3,t3=n/3;\r\n        t3=1004-2*t3;\r\n        if(t2==1)\r\n        t3--;\r\n        printf(\"%s\",&arr[t3]);\r\n        if(t2==2)\r\n        printf(\"2\");\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9984984984984985, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "23dc9b88e70e1afb9a875e526c1ecfcc", "bug_code_uid": "bcc9615f5de2e6c0365054d325bc3144", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "5236da15e9522738570c71b2c2ae02fe", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint k=0;\nint main()\n{\n    char s[100][10005];\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%s\",s[i]);\n        int l=strlen(s);\n        for(int j=0; j<l; j++)\n        {\n            if(!k)\n            {\n                if(s[i][j]=='O'&&s[i][j+1]=='O')\n                {\n                    k=1;\n                    s[i][j]='+';\n                    s[i][j+1]='+';\n                    break;\n                }\n            }\n        }\n    }\n    if(k)\n    {\n        printf(\"YES\\n\");\n        for(int i=0; i<n; i++)\n        {\n            printf(\"%s\\n\",s[i]);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint k=0;\nint main()\n{\n    char s[1005][1005];\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%s\",s[i]);\n        int l=strlen(s);\n        for(int j=0; j<l; j++)\n        {\n            if(!k)\n            {\n                if(s[i][j]=='O'&&s[i][j+1]=='O')\n                {\n                    k=1;\n                    s[i][j]='+';\n                    s[i][j+1]='+';\n                    break;\n                }\n            }\n        }\n    }\n    if(k)\n    {\n        printf(\"YES\\n\");\n        for(int i=0; i<n; i++)\n        {\n            printf(\"%s\\n\",s[i]);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n}\n"}
{"similarity_score": 0.8517745302713987, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "190869215696e81e24fabc2e286821e3", "bug_code_uid": "20888e0f31fc16aa1c0799aaac2afcdc", "src_uid": "5172d358f1d451b42efff1019219a54d", "apr_id": "f0daf878165bcc1b9070b7fff550dbf7", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i,t,l,r;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n    scanf(\"%d%d\",&l,&r);\n    if(2*l>r){\n        printf(\"Yes\");\n    }\n    else {\n        printf(\"No\")\n    }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int i,t,l,r;\n    \n    scanf(\"%d\",&t);\n    \n    for(i=1;i<=t;i++){\n        scanf(\"%d%d\",&l,&r);\n        if(2*l>r){\n            printf(\"YES\\n\");\n        }\n        else {\n        printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.951310861423221, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b814de06733c86fc2054d90cfd804bee", "bug_code_uid": "cbdf4171f9964de18b650db71bb915f6", "src_uid": "c7e49c643dd8738f273c0d24e56c505f", "apr_id": "4562283787b9488ebd349ec1de8bdf87", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#define MAX 100000\n\nint num[MAX];\n\n\nmain()\n{\n\tint i,j,k;\n\tint n;\n\tint sum,temp,inx;\n\n\tscanf(\"%d\",&n);\n\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&num[i]);\n\tsum = 0;\n\tfor(i=0;i<n-1;i++)\t\n\t{\n\t\tj = 1;\t\n\t\ttemp = i+j;\n\t\twhile(temp < n) \n\t\t{\n\t\t\tinx = temp;\n\t\t\tj*=2;\n\t\t\ttemp =i+j;\n\t\t}\n\n\t\tsum += num[i];\n\t\tnum[inx] += num[i];\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\n\treturn 0;\n}\n\n\t\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define MAX 100000\n\nint num[MAX];\n\n\nmain()\n{\n\tint i,j,k;\n\tint n;\n\tint temp,inx;\n\tunsigned long long int sum;\n\n\tscanf(\"%d\",&n);\n\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&num[i]);\n\tsum = 0;\n\tfor(i=0;i<n-1;i++)\t\n\t{\n\t\tj = 1;\t\n\t\ttemp = i+j;\n\t\twhile(temp < n) \n\t\t{\n\t\t\tinx = temp;\n\t\t\tj*=2;\n\t\t\ttemp =i+j;\n\t\t}\n\n\t\tsum += num[i];\n\t\tnum[inx] += num[i];\n\t\tprintf(\"%I64u\\n\",sum);\n\t}\n\n\treturn 0;\n}\n\n\t\n\n"}
{"similarity_score": 0.8319900805951643, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "abeb37452d7012f3ecbc5d2c174ff2a4", "bug_code_uid": "1eaa57b9fa288abf31a596ab52dc6e72", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "1abaaf6752e2a88762fd835ae3c81cf9", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main()\n{\n    int n,k;\n    char *st,*ch;\n    scanf(\"%d %d\",&n,&k);\n\n    st = (char *)malloc(n*sizeof(char)+1);\n    ch = (char *)malloc(k*sizeof(char)+1);\n    srand(time(NULL));\n    int i=0;\n    while(i<k)\n    {\n        *(ch+i) = rand();\n        if ((*(ch+i)>=97)&&(*(ch+i)<=122)&&(i==0))\n           i++;\n        else\n        {\n            if((ch[i]>=97)&&(ch[i]<=122)&&(ch[i-1]!=ch[i])&&(i!=0))\n                i++;\n        }\n    }\n    ch[k]='\\0';\n    int j=0;\n    st[0]=ch[0];\n    for (i=1;i<n;i++)\n    {\n        j++;\n         if (j==k)\n            j=0;\n        st[i]=ch[j];\n    }\n\n    st[n]='\\0';\n    puts(st);\n\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\nchar searchforletter(char *a,int i)\n{\n    int h=0;\n    while(h<i)\n    {  if(a[h]==a[i])\n           return 1;\n       else\n           h++;\n    }\n    return 0;\n}\nint main()\n{\n    int n,k;\n    char *st,*ch;\n    scanf(\"%d %d\",&n,&k);\n\n    st = (char *)malloc(n*sizeof(char)+1);\n    ch = (char *)malloc(k*sizeof(char)+1);\n    srand(time(NULL));\n    int i=0;\n    while(i<k)\n    {\n        *(ch+i) = rand();\n        if ((*(ch+i)>=97)&&(*(ch+i)<=122)&&(i==0))\n           i++;\n        else\n        {\n            if((ch[i]>=97)&&(ch[i]<=122)&&(ch[i-1]!=ch[i])&&(i!=0)) {\n                i++;\n                i = i-searchforletter(ch,i-1);\n                }\n\n        }\n\n    }\n    ch[k]='\\0';\n    int j=0;\n    st[0]=ch[0];\n    for (i=1;i<n;i++)\n    {\n        j++;\n         if (j==k)\n            j=0;\n        st[i]=ch[j];\n    }\n\n    st[n]='\\0';\n    puts(st);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.997737556561086, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "04d3295f1deb66166fb5e02cf856aec4", "bug_code_uid": "7dc67bf3b8029599b5d6395ef036d1eb", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "da7af101f7d7c02460b117d816cf0804", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char a[1000],b[1000];\n    int i,c=0;\n\n    gets(a);\n    gets(b);\n    for(i=0; a[i]!='\\0'; i++)\n    {\n        if(strlen(a)!=strlen(b))\n        {\n            c=0;\n            break;\n        }\n        if(a[i]=='a' || a[i]=='e'|| a[i]=='i' || a[i]=='o' || a[i]=='u')\n        {\n            if(b[i]=='a' || b[i]=='e'|| b[i]=='i' || b[i]=='o' || b[i]=='u')\n            {\n                c=1;\n            }\n            else\n            {\n                c=0;\n                break;\n            }\n\n        }\n        else\n        {\n           if(b[i]!='a' && b[i]!='e'&& b[i]!='i' && b[i]!='o' && b[i]!='u')\n            {\n                c=1;\n            }\n            else\n            {\n                c=0;\n                break;\n            }\n        }\n\n    }\n\n\n    if(c==1)\n        printf(\"Yes\\n\");\n    else\n        printf(\"No\\n\");\n\n\n\n\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char a[1050],b[1050];\n    int i,c=0;\n\n    gets(a);\n    gets(b);\n    for(i=0; a[i]!='\\0'; i++)\n    {\n        if(strlen(a)!=strlen(b))\n        {\n            c=0;\n            break;\n        }\n        if(a[i]=='a' || a[i]=='e'|| a[i]=='i' || a[i]=='o' || a[i]=='u')\n        {\n            if(b[i]=='a' || b[i]=='e'|| b[i]=='i' || b[i]=='o' || b[i]=='u')\n            {\n                c=1;\n            }\n            else\n            {\n                c=0;\n                break;\n            }\n\n        }\n        else\n        {\n           if(b[i]!='a' && b[i]!='e'&& b[i]!='i' && b[i]!='o' && b[i]!='u')\n            {\n                c=1;\n            }\n            else\n            {\n                c=0;\n                break;\n            }\n        }\n\n    }\n\n\n    if(c==1)\n        printf(\"Yes\\n\");\n    else\n        printf(\"No\\n\");\n\n\n\n\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.973595125253893, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "193e6fb43055c4e5ab979336941d1014", "bug_code_uid": "4fb402cb31a9f0b05f52d30d43a7d603", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "20e49943198ebaea31814354a9c0b7f4", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n \n \n \nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000]={0},b[1000]={0},count1=0,a2[1000],b2[1000];\n \nscanf(\"%lld\",&n);\ncount1=sum=count=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&x);\nif(x>0){\n    sum+=x-1;\n}else{\n    if(x<0){\n    sum+=((x*(-1))-1);\n    count++;\n    }else{\n        count1++;\n       \n    }\n}\n  \n}\n//printf(\"%lld\",count);\nif(count%2==0){\n    sum+=count1;\n}else{\n    if(count1>0){\n        \n         sum++;\n    }else{\n    \n    sum+=2;\n    \n    }\n}\n \nprintf(\"%lld\",sum);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n \n \n \nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000]={0},b[1000]={0},count1=0,a2[1000],b2[1000];\n \nscanf(\"%lld\",&n);\ncount1=sum=count=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&x);\nif(x>0){\n    sum+=x-1;\n}else{\n    if(x<0){\n    sum+=((x*(-1))-1);\n    count++;\n    }else{\n        count1++;\n       \n    }\n}\n  \n}\n//printf(\"%lld\",count);\nif(count%2==0){\n    sum+=count1;\n}else{\n    if(count1>0){\n         sum+=count1;\n         \n    }else{\n    \n    sum+=2;\n    \n    }\n}\n \nprintf(\"%lld\",sum);\nreturn 0;\n}"}
{"similarity_score": 0.9792694965449161, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "eb8f0146fa9fdbbf305e9b2c507118c3", "bug_code_uid": "0957c2ce143e3bde25e4daa4912bbde2", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "5c8e5f3a27c9891781feb2a90ddd380b", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint cnt;\n\tint i;\n\tint ans[3];\n\tint t;\n\tint num;\n\tint max;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&num);\n\t\tcnt=0;\n\t\ti=2;\n\t\tmax=sqrt(num)+1;\n\t\twhile(cnt<2){\n\t\t\tfor(;i<=max;i++){\n\t\t\t\tif(num%i==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num%i==0){\n\t\t\t\tans[cnt++]=i;\n\t\t\t\tnum/=i;\n\t\t\t\ti++;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(cnt==2&&ans[1]!=num){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%d %d %d\\n\",ans[0],ans[1],num);\n\t\t}else{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint cnt;\n\tint i;\n\tint ans[3];\n\tint t;\n\tint num;\n\tint max;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&num);\n\t\tcnt=0;\n\t\ti=2;\n\t\tmax=sqrt(num)+1;\n\t\twhile(cnt<2){\n\t\t\tfor(;i<=max;i++){\n\t\t\t\tif(num%i==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num%i==0){\n\t\t\t\tans[cnt++]=i;\n\t\t\t\tnum/=i;\n\t\t\t\ti++;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(cnt==2&&ans[1]!=num&&num>=2&&num!=ans[0]){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%d %d %d\\n\",ans[0],ans[1],num);\n\t\t}else{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9990262901655307, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5db06a00f2af75bda8d36d312b51edb5", "bug_code_uid": "6e93f362263032cb084b0cd1c0a6a3f4", "src_uid": "915b4776a6b1fa15886247eb1ad40b60", "apr_id": "3b345199da6116bd77ab24e87f42eae3", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n#define mod 1000000007\n\n\nint main() {\n    char str[500005];\n    int result = 0;\n    int len = -1;\n    scanf(\"%s\", str);\n\n    int start, end;\n    \n    while(str[++len] != '\\0');\n    start = len;\n    end = 0;\n\n    for(int i =0; i < len; i++) {\n        if(str[i] == '[') {\n            start = i;\n            break;\n        }\n    }\n    for(int i =len; i--; ) {\n        if(str[i] == ']') {\n            end = i;\n            break;\n        }\n    }\n\n    if(end < start) {\n        result = -1;\n        goto END;\n    }\n    int start2 = len;\n    int end2 = 0;\n    for(int i =start; i < len; i++) {\n        if(str[i] == ':') {\n            start2 = i;\n            break;\n        }\n    }\n\n    for(int i=end; i--; ) {\n        if(str[i] == ':') {\n            end2 = i;\n            break;\n        }\n    }\n\n    if(end2 <= start2) {\n        result = -1;\n        goto END;\n    }\n\n    for(int i = start; i <= end; i++) {\n        if(str[i] == '|') result++;\n    }\n    result += 4;\n\nEND:\n    printf(\"%d\", result);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n\n#define mod 1000000007\n\n\nint main() {\n    char str[500005];\n    int result = 0;\n    int len = -1;\n    scanf(\"%s\", str);\n\n    int start, end;\n    \n    while(str[++len] != '\\0');\n    start = len;\n    end = 0;\n\n    for(int i =0; i < len; i++) {\n        if(str[i] == '[') {\n            start = i;\n            break;\n        }\n    }\n    for(int i =len; i--; ) {\n        if(str[i] == ']') {\n            end = i;\n            break;\n        }\n    }\n\n    if(end < start) {\n        result = -1;\n        goto END;\n    }\n    int start2 = len;\n    int end2 = 0;\n    for(int i =start; i < len; i++) {\n        if(str[i] == ':') {\n            start2 = i;\n            break;\n        }\n    }\n\n    for(int i=end; i--; ) {\n        if(str[i] == ':') {\n            end2 = i;\n            break;\n        }\n    }\n\n    if(end2 <= start2) {\n        result = -1;\n        goto END;\n    }\n\n    for(int i = start2; i <= end2; i++) {\n        if(str[i] == '|') result++;\n    }\n    result += 4;\n\nEND:\n    printf(\"%d\", result);\n\n    return 0;\n}"}
{"similarity_score": 0.10714285714285714, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "f2c37623f1427c6a9781824df19a087f", "bug_code_uid": "0c3e21d22d75901ff23e1847c5bc6fb6", "src_uid": "e79c6a337e9347522bf19f3d5c162541", "apr_id": "81626f7959cc68ac58f304765b67c7ad", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long a[100000001];\nint main()\n{\n\tlong long m,i,t,n;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long sum=0,m;\n\t\tscanf(\"%lld\",&n);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tif(i<a[i])\n\t\t\t{\n\t\t\t\n\t\t\t\t\n\t\t\t\tfor(m=n;m>=i;m--)\n\t\t\t\t{\n\t\t\t\t\ta[m+1]=a[m];\n\t\t\t\t}\n\t\t\t\t\ta[i]=i;\n\t\t\t\tn+=1;\n\t\t\t\tsum+=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",sum);\n\t}\n\treturn 0;\n}\n\t   \t   \t \t     \t  \t\t\t\t \t\t\t  \t", "fixed": "#include <stdio.h>\nint main(void)\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,i,cnt;\n\t\tint a[101];\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0 ; i<n ; i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(i=0,cnt=0 ; i<n ; i++)\n\t\t\tif(a[i]>i+1+cnt)\n\t\t\t\tcnt+=a[i]-i-1-cnt;\n\t\tprintf(\"%d\\n\",cnt);\n\t}\n\treturn 0;\n}\n\t \t \t\t\t\t   \t \t\t\t \t \t\t\t   \t  \t\t"}
{"similarity_score": 0.9247706422018349, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0d0044d70d5d2127b7e72b706897c112", "bug_code_uid": "49458196b4460cf3bc51011e8a1ec384", "src_uid": "838e643a978adbeed791a24ac1046ab5", "apr_id": "fbfbcd8a2073a98b32e8e66c0711c79d", "difficulty": 1300, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,k,i,a[11000],ans=0;\n\tdouble f=0;\n\tscanf(\"%d %d\",&n,&k);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\ta[i]+=ans;\n\t\tans=a[i];\n    }\n\tfor(i=0;i<=n-k;i++){\n\t\tf+=a[i+k]-a[i];\n\t}\n\tf/=(double)(n-k+1);\n\tprintf(\"%.10f\",f);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\ndouble a[210000];\n\nint main()\n{\n\tint n,k,i;\n\tdouble ans=0;\n\tdouble f=0;\n\tscanf(\"%d %d\",&n,&k);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lf\",&a[i]);\n\t\ta[i]+=ans;\n\t\tans=a[i];\n    }\n\tfor(i=0;i<=n-k;i++){\n\t\tf+=a[i+k]-a[i];\n\t}\n\tf/=(double)(n-k+1);\n\tprintf(\"%.10f\",f);\n\treturn 0;\n}"}
{"similarity_score": 0.6545454545454545, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "0466bb21a6741fd59c7785c976743f1f", "bug_code_uid": "cb3c652a46dba82bd193680cde12e0c8", "src_uid": "fce9d78ad7d4ea01be1704f588e42d37", "apr_id": "b787db4d76ecebd4b361e425640ec8f9", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int r,d,n,i,t=0,k=0;\n    scanf(\"%d%d%d\",&r,&d,&n);\n    int x,y,a,b[n],c[n];\n    for(i=0;i<n;i++)\n        {scanf(\"%d%d%d\",&x,&y,&a);\n        if(sqrt(x*x+y*y)>=(r-d)&&sqrt(x*x+y*y)<=r)\n            {b[t]=sqrt(x*x+y*y);\n            c[t]=a;\n            t++;}}\n            for(i=0;i<t;i++)\n                if((b[i]-c[i])>=(r-d)&&(b[i]+c[i])<=r)\n                k++;\n            printf(\"%d\",k);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int r,d,n,i,t=0,k=0;\n    scanf(\"%d%d%d\",&r,&d,&n);\n    int x,y,a,b[n],c[n];\n    for(i=0;i<n;i++)\n        {scanf(\"%d%d%d\",&x,&y,&a);\n        if((sqrt(x*x+y*y)-a)>=(r-d) &&(sqrt(x*x+y*y)+a)<=r)\n                k++;}\n            printf(\"%d\",k);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8513761467889909, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "ddf56e3a822fd0c7913e191e3027929a", "bug_code_uid": "61cc22c6ccc7c525b72b63c0f54eb282", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "beb0052b6f2711f05cfbcc39e8e775d1", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int a[3],count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n    for(j=0;j<3;j++)\n    {\n        scanf(\"%d\",a[j]);\n        if(a[i]==1)\n        count++;\n    }\n    }\n    if(count>=2)\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int a[3],s=0,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {s=0;\n    for(j=0;j<3;j++)\n    {\n        scanf(\"%d\",&a[j]);\n        s=s+a[j];\n    }\n    if(s>=2)\n    count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.11292073832790445, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "01747f40d8ea4cf777d4c23ad55aef69", "bug_code_uid": "3ba42659eff769f6c031ccabeac55880", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "8cfd45b6208da21901716a5807b5b445", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint b[1000001]={0};\nint main (){\nint n,m,t,i,j,flag=0;\n\nscanf(\"%d%d\",&n,&m);\nint a[n+1];\nfor(i=0;i<n;i++){\n    scanf(\"%d\",&a[i]);\n}\n\nfor(i=0;i<m;i++){\n    scanf(\"%d\",&t);\n     b[t]=1;\n    \n}\nt=0;\n\n    for(i=0;i<n;i++){\n        if(b[a[i]]==0)\n        {j=a[i];flag=0;\n            while(j<=1000000){j++;\n                if(b[j]==1){\n                    b[a[j]]=0;\n                    flag=1;\n                    break;\n                }\n            }\n            if(flag==0)\n            t++;\n        }\n    }\nprintf(\"%d\\n\",t);\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main (){\nint n,m,t,i,j,flag=0;\n\nscanf(\"%d%d\",&n,&m);\nint a[n+1],s[m+1],b[m+1];\nfor(i=0;i<n;i++){\n\tscanf(\"%d\",&a[i]);\n}\n\nfor(i=0;i<m;i++){\n\tscanf(\"%d\",&b[i]);\n     s[i]=0;\n\t\n}\nt=0;\nfor(i=0;i<n;i++)\n{flag=0;\n\tfor(j=0;j<m;j++){\n\t\tif(b[j]>=a[i]&&s[j]==0){\n\t\t\ts[j]=1;\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0)\n\tt++;\n}\nprintf(\"%d\\n\",t);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.43072702331961593, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "5253cf35a92829e521f04019d1d4178b", "bug_code_uid": "20862bcc205644d288b34504da246aa1", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "03ea241ab8d112c48ef178a7a5f213b1", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t,i,j,d,n,k=1;\n    scanf(\"%d\",&t);\n    while (t)\n    {\n      scanf(\"%d\",&n);\n      for(i=1;i<=n;i++)\n          {\n              for(j=1;j<=n;j++)\n              {\n                  if(j>i)\n                  {\n                      for(d=1;d<=i;d++)\n                      if(i%d==0 && j%d==0)\n                       {\n                           if(d>k)\n                           k=d;\n                       }    \n                  }     \n              }\n          }\n          t--;\n          printf(\"%d\\n\",k);\n      }\n    }\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t,i,n;\n    scanf(\"%d\",&t);\n    while (t)\n    {\n      scanf(\"%d\",&n);\n      i=n/2;\n      printf(\"%d\\n\",i);\n      t--;\n    }\n} \n"}
{"similarity_score": 0.4305317324185249, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "401c07fedfa7f2c1c56442904a4a3bde", "bug_code_uid": "818f2f83251a17262db5e1059bc3ec75", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "1e641cd9d9627c0e3cc8060d3f136cff", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,T;\n    scanf(\"%d\",&T);\n    for(t=0;t<T;t++)\n    {\n        int a1,b1,a2,b2;\n        scanf(\"%d %d %d %d\",&a1,&b1,&a2,&b2);\n        if(a1==a2)\n        {\n            if(b1+b2==a1)\n            {\n                printf(\"YES\\n\");\n            }\n            else\n                printf(\"NO\\n\");\n        }\n        else if(a1=b2)\n        {\n            if(a2+b1==a1)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n        else if(b1==a2)\n        {\n            if(b2+a1==a2)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n\n        }\n        else if(b1==b2)\n        {\n            if(a1+a2==b1)\n            {\n                printf(\"YES\\n\");\n            }\n            else\n                printf(\"NO\\n\");\n        }\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,T;\n    scanf(\"%d\",&T);\n    for(t=0;t<T;t++)\n    {\n        int a1,b1,a2,b2;\n        scanf(\"%d %d %d %d\",&a1,&b1,&a2,&b2);\n        if((a1==a2&&b1+b2==a1)||(a1==b2&&a2+b1==a1)||(a2==b1&&a1+b2==a2)||(b1==b2&&a1+a2==b1))\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n}\n"}
{"similarity_score": 0.39956803455723544, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "e6b7128def5c3877d5c6a41db5623746", "bug_code_uid": "5841e76a964c584c054a2004149f79d4", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "5a249ba80b962440f515a41ed1810e9a", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    char s[1001];\n    gets(s);\n    int lenth,cnt=0,i,x=0;\n    lenth=strlen(s);\n    sort(s,s+lenth);\n    for(i=0; i<lenth-1; i++)\n    {\n        if(s[i]>=97&&s[i]<=122)\n        {\n            cnt++;\n            if(s[i]==s[i+1])\n                cnt--;\n        }\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[1000],temp;\n    gets(str);\n    int l,i,j,cnt=0;\n    l=strlen(str);\n    for(i=0; i<l-1; i++)\n    {\n        for(j=0; j<l-1-i; j++)\n             {\n                 if(str[j]>str[j+1])\n                 {\n                     temp=str[j];\n                     str[j]=str[j+1];\n                     str[j+1]=temp;\n                 }\n             }\n    }\n    for(i=0;i<l;i++)\n    {\n        if(str[i]>='a'&&str[i]<='z'&&str[i]!=str[i+1])\n        {\n            cnt++;\n        }\n    }\n    printf(\"%d\",cnt);\n}\n"}
{"similarity_score": 0.9783950617283951, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "57736743f961363423b96254d350fab1", "bug_code_uid": "7fc29e2b99cac4b50ea9b97bf36429a9", "src_uid": "36492ef32a98bccef4363ff4eba6de70", "apr_id": "7550a1731048814330001a4b23163c76", "difficulty": 2400, "tags": ["greedy", "graphs", "constructive algorithms", "shortest paths", "data structures"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 2015\n\nint n, m;\nchar s[N][N];\nint qi[N * N];\nint qj[N * N];\nint h, t;\n\nvoid check(int i, int j) {\n  if (i < 0 || i + 1 >= n) return;\n  if (j < 0 || j + 1 >= m) return;\n  int cnt = 0;\n  int pi = -1;\n  int pj = -1;\n  for (int di = 0; di <= 1; ++di) {\n    for (int dj = 0; dj <= 1; ++dj) {\n      if (s[i + di][j + dj] == '*') {\n        ++cnt;\n        pi = i + di;\n        pj = j + dj;\n      }\n    }\n  }\n  if (cnt == 1) {\n    qi[t] = pi;\n    qj[t] = pj;\n    ++t;\n  }\n}\n\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  int i;\n  for (i = 0; i < n; ++i) {\n    scanf(\"%s\", s[i]);\n  }\n  for (i = 0; i < n; ++i) {\n    int j;\n    for (j = 0; j < m; ++j) {\n      check(i, j);\n    }\n  }\n  while (h < t) {\n    int ni = qi[h];\n    int nj = qj[h];\n    ++h;\n    s[ni][nj] = '.';\n    for (i = -1; i <= 0; ++i) {\n      int j;\n      for (j = -1; j <= 0; ++j) {\n        check(ni + i, nj + j);\n      }\n    }\n  }\n  for (i = 0; i < n; ++i) {\n    puts(s[i]);\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n#define N 2015\n\nint n, m;\nchar s[N][N];\nint qi[N * N];\nint qj[N * N];\nint h, t;\n\nvoid check(int i, int j) {\n  if (i < 0 || i + 1 >= n) return;\n  if (j < 0 || j + 1 >= m) return;\n  int cnt = 0;\n  int pi = -1;\n  int pj = -1;\n  for (int di = 0; di <= 1; ++di) {\n    for (int dj = 0; dj <= 1; ++dj) {\n      if (s[i + di][j + dj] == '*') {\n        ++cnt;\n        pi = i + di;\n        pj = j + dj;\n      }\n    }\n  }\n  if (cnt == 1) {\n    qi[t] = pi;\n    qj[t] = pj;\n    ++t;\n    s[pi][pj] = '.';\n  }\n}\n\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  int i;\n  for (i = 0; i < n; ++i) {\n    scanf(\"%s\", s[i]);\n  }\n  for (i = 0; i < n; ++i) {\n    int j;\n    for (j = 0; j < m; ++j) {\n      check(i, j);\n    }\n  }\n  while (h < t) {\n    int ni = qi[h];\n    int nj = qj[h];\n    ++h;\n    for (i = -1; i <= 0; ++i) {\n      int j;\n      for (j = -1; j <= 0; ++j) {\n        check(ni + i, nj + j);\n      }\n    }\n  }\n  for (i = 0; i < n; ++i) {\n    puts(s[i]);\n  }\n  return 0;\n}"}
{"similarity_score": 0.8172690763052208, "equal_cnt": 13, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "d519e27911d7260fe7a493988ec7f1b3", "bug_code_uid": "3a85452aa980ddb9d797d7aa54effba1", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "9060310a64579cab57de7b96182ce279", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int k;\r\n    scanf(\"%d\", &k);\r\n\r\n    for (int i = 1; i <= k; i++) {\r\n        long long number, interval, time;\r\n        scanf(\"%lld %lld %lld\", &number, &interval, &time);\r\n\r\n        long long dist = time / interval;\r\n        if (dist < number)\r\n            long long res = dist * (number - dist) + ((dist / 2) * (dist-1));\r\n        else\r\n            long long res = (number / 2) * number \r\n        printf(\"%lld\\n\", res);\r\n\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n \r\nint main() {\r\n    int k;\r\n    scanf(\"%d\", &k);\r\n \r\n    for (int i = 1; i <= k; i++) {\r\n        long long number, interval, time;\r\n        scanf(\"%lld %lld %lld\", &number, &interval, &time);\r\n \r\n        long long dist = time / interval;\r\n        long long res;\r\n        if (dist < number)\r\n            res = dist * (number - dist) + (dist-1)*dist/2;\r\n        else\r\n            res = number -1 + (number - 2)*(number-1)/2; \r\n        printf(\"%lld\\n\", res);\r\n \r\n    }\r\n \r\n    return 0;\r\n}"}
{"similarity_score": 0.08207343412526998, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e4ea18d6d96e01a679044dc2d47ddf10", "bug_code_uid": "dc1eb629f32254fbd5fb9960ebee614a", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "ff8042c046f4b87560926584d91480d3", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n    int main (){\n        int number[30];\n        int i, j, a, n, s=0, d=0;\n        scanf(\"%d\",&n);\n        for (i = 0; i < n; ++i)\n\t        scanf(\"%d\", &number[i]);\n        for (i = 0; i < n; ++i){\n            for (j = i + 1; j < n; ++j){\n                if (number[i] < number[j]){\n                    a = number[i];\n                    number[i] = number[j];\n                    number[j] = a;\n                }}}\n    for(i=0;i<n;i+=2)\n    s+=number[i];\n    printf(\"%d \",s);\n    for(i=1;i<n;i+=2)\n    d+=number[i];\n    printf(\"%d\",d);\n    }", "fixed": "#include<stdio.h>\nint main(){\nint a[1001],l=0,r,i,s=0,d=0,n;\nscanf(\"%d\",&n);\nr=n-1;\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nfor(i=0;i<n;i++){\n    if(a[r]>=a[l]){\n        if(i%2==0)\n        s+=a[r];\n        else\n        d+=a[r];\n        r--;\t\n    }\n    else{\n        if(i%2==0)\n        s+=a[l];\n        else\n        d+=a[l];\n        l++;\t\t\n    }\n}\nprintf(\"%d %d\",s,d);\n}"}
{"similarity_score": 0.6445366528354081, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "54a385604e61650091958d5c9dd5b7fe", "bug_code_uid": "56dfa64069ef8ec98f30b9e6211ef09f", "src_uid": "7bdb68ab0752f8df94b4d5c7df759dfb", "apr_id": "b976fac18230aea0c97e4a7c799b26fb", "difficulty": 1300, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <stdbool.h>\n\nint N, K, temps[5001];\ndouble max = 0;\n\nvoid solve(int amt)\n{\n    for(int i = 0; i <= N - amt; i++)\n    {\n        double total = 0;\n        for(int j = i, q = 0; q < amt; q++, j++)\n        {\n            //printf(\"%i \", temps[j]);\n            total += temps[j];\n        }\n        //printf(\"\\n\");\n        total /= amt;\n        if(total > max)\n        {\n            max = total;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%i %i\", &N, &K);\n    for(int i = 0; i < N; i++)\n    {\n        scanf(\"%i\", &temps[i]);\n    }\n    for(int i = K; i <= N; i++)\n    {\n        solve(i);\n    }\n    printf(\"%f\", max);\n    exit(0);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <stdbool.h>\n\nint N, K, temps[5001];\ndouble max = 0;\n\nvoid solve(int amt)\n{\n    double total = 0;\n    for(int i = 0; i < amt; i++)\n    {\n        total += temps[i];\n    }\n    if(total / amt > max)\n    {\n        max = total / amt;\n    }\n    for(int i = 1; i <= N - amt; i++)\n    {\n        total += temps[i + amt - 1];\n        total -= temps[i - 1];\n        if(total / amt > max)\n        {\n            max = total / amt;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%i %i\", &N, &K);\n    for(int i = 0; i < N; i++)\n    {\n        scanf(\"%i\", &temps[i]);\n    }\n    for(int i = K; i <= N; i++)\n    {\n        solve(i);\n    }\n    printf(\"%f\", max);\n    exit(0);\n}"}
{"similarity_score": 0.06153846153846154, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ed31aea95a22b260864ec1d183f20258", "bug_code_uid": "eab874ddfb4bee07904b812920ab5d4f", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "2861922d17692474d26780aa4db95ae8", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,m,sum=0,r=100000000,l;\n   scanf(\"%d%d\",&n,&m);\n   int a[n];\n   for(int i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    if(n!=m)\n    {\n    for(int j=0;j<(n-m);j++)\n    {sum=0;\n   for(int i=j;i<j+m;i++)\n   {\n       sum+=a[i];\n\n   }\n\n   if(sum<=r)\n   {r=sum;\n   l=j;\n   }\n   }\n   printf(\"%d\",(l+1));\n    }\n    else\n        printf(\"1\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n\tint n,k,i,min=100000000,sum=0,l=0;\n\tscanf(\"%d %d\",&n,&k);\n\tint a[150001];\n\tfor (i=1;i<=n;i++)\n\t{scanf(\"%d\",&a[i]);}\n\tfor (i=1;i<=k;i++)\n\t{sum=sum+a[i];}\n\tfor (i=1;i<=n-k+1;i++)\n\t{sum = sum-a[i-1]+a[i+k-1];\n\t if (sum<min)\n\t {min = sum;\n\t  l=i;}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9721854304635762, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0c0ef0d2b3f36a322e9ed8e44d9a35f2", "bug_code_uid": "d54df68c4d66f75777716fb3184129db", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "fe82eb7d3ad8952a709fd8f4a344c9b7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int n,a[107],t,i,j,num;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        num=0;\r\n        scanf(\"%d\",&n);\r\n        for(j=0;j<2*n;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]%2) num++;\r\n        }\r\n        if(num%n||num==0) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int n,a[207],t,i,j,num;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        num=0;\r\n        scanf(\"%d\",&n);\r\n        for(j=0;j<2*n;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]%2) num++;\r\n        }\r\n        if(num%n||num==0||(num>n&&num%n==0)) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.2905982905982906, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "e6a2026bbc8ae2737d1deea45df91331", "bug_code_uid": "7173c163f08378f082101af0c2543221", "src_uid": "1a93a35395436f9e15760400f991f1ce", "apr_id": "6bcdc3d28d0a48b15875181c12c6c768", "difficulty": 1600, "tags": ["trees", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n  int t;\n  scanf(\"%d\",&t);\n\n  while(t--)\n  {\n    int n,x;\n    scanf(\"%d %d\",&n,&x);\n    int *deg=(int*)calloc(n,sizeof(int));\n    for(int i=0;i<n-1;i++)\n    {\n      int m,n;\n      scanf(\"%d %d\",&m,&n);\n      deg[m]++;\n      deg[n]++;\n    }\n    if(deg[x]<=1)\n      printf(\"Ayush\\n\");\n    else\n    {\n      if((n)%2==0)\n      {\n        printf(\"Ashish\\n\");\n      }\n      else\n      {\n        printf(\"Ayush\\n\");\n      }\n      \n    }\n    \n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, x, h, d;\n\n\t\tscanf(\"%d%d\", &n, &x);\n\t\td = 0;\n\t\tfor (h = 0; h < n - 1; h++) {\n\t\t\tint i, j;\n\n\t\t\tscanf(\"%d%d\", &i, &j);\n\t\t\tif (i == x || j == x)\n\t\t\t\td++;\n\t\t}\n\t\tprintf(d <= 1 || (n - 3) % 2 == 1 ? \"Ayush\\n\" : \"Ashish\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9674234945705824, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "df6b023520fd3c2409c6e9cf70eb7fd5", "bug_code_uid": "ec50d3ed7953dd5c92629542882490fc", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "221c858df04b1a015a7fc803649391af", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nlong long int candies(long long int n);\nint main()\n{\n    int test,i;\n    scanf(\"%d \",&test);\n    long long int arr[test];\n    for(i=0;i<test;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n    }\n    for(i=0;i<test;i++)\n    {\n        printf(\"%lld\\n\",candies(arr[i]));\n    }\n}\nlong long int candies(long long int n)\n{\n    long long int i,m=1,sum=1;\n\n    for(i=2;;i++)\n    {\n        sum=sum+2*m;\n        if(!(n%sum))\n            break;\n\n    }\n    return n/sum;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nlong long int candies(long long int n);\nint main()\n{\n    int test,i;\n    scanf(\"%d \",&test);\n    long long int arr[test];\n    for(i=0;i<test;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n    }\n    for(i=0;i<test;i++)\n    {\n        printf(\"%lld\\n\",candies(arr[i]));\n    }\n}\nlong long int candies(long long int n)\n{\n    long long int i,m=1,sum=1;\n\n    for(i=2;;i++)\n    {\n        sum=sum+2*m;\n        m=2*m;\n        if(!(n%sum)){\n            break;\n        }\n\n    }\n\n        return n/sum;\n}\n"}
{"similarity_score": 0.9969558599695586, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b863f6f46b0837d53c9b49742cf66730", "bug_code_uid": "f1b2b247e3b56479926f501a6e490bb5", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "8f25bd845f7206699682815e7b660b58", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n \r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    \r\n    for (int i = 0; i < t; i++) {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        \r\n        int persons_number;\r\n        int n = 2 * abs (a - b);\r\n        if (a <= n && b <= n && c <= n){\r\n            int d1 = c + n / 2;\r\n            int d2 = c - n / 2;\r\n            if (d1 <= n) {\r\n                persons_number = d1;\r\n            } else {\r\n                persons_number = d2;\r\n            }\r\n        } else {\r\n           persons_number = -1;\r\n        }\r\n        \r\n        printf(\"%d\", persons_number);\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n \r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    \r\n    for (int i = 0; i < t; i++) {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        \r\n        int persons_number;\r\n        int n = 2 * abs (a - b);\r\n        if (a <= n && b <= n && c <= n){\r\n            int d1 = c + n / 2;\r\n            int d2 = c - n / 2;\r\n            if (d1 <= n) {\r\n                persons_number = d1;\r\n            } else {\r\n                persons_number = d2;\r\n            }\r\n        } else {\r\n           persons_number = -1;\r\n        }\r\n        \r\n        printf(\"%d\\n\", persons_number);\r\n    }\r\n    \r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6753975678203928, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "cc536b6edfd9ebca608167c7f16bf67c", "bug_code_uid": "c6b7e1fe9f7a391518b3a500f7b8e82f", "src_uid": "863a8124d46bb09b49fc88939fb5f364", "apr_id": "cc227e6f1b59377ed4c4272af37f1874", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ll long long\n\nint main()\n{\n\tll n, m, s;\n\t\n\tscanf(\"%lld %lld %lld\", &n, &m, &s);\n\t\n\tif(n < m){\n\t\tll temp = n % s;\n\t\tif(temp != 0){\n\t\t\tm += temp;\n\t\t\tn -= temp;\n\t\t}\n\t\tll max = (n / s) + (m / s);\n\t\tprintf(\"%lld %lld\\n\", max, temp);\n\t}else{\n\t\tll temp = m % s;\n\t\tif(temp != 0){\n\t\t\tn += temp;\n\t\t\tm -= temp;\n\t\t}\n\t\tll max = (n / s) + (m / s);\n\t\tprintf(\"%lld %lld\\n\", max, temp);\n\t}\n}", "fixed": "#include<stdio.h>\n#define ll long long\n\nint main()\n{\n\tll n, m, s;\n\t\n\tscanf(\"%lld %lld %lld\", &n, &m, &s);\n\t\n\tif(n < m){\n\t\tll temp = n % s, min = m % s;\n\t\tif(temp != 0){\n\t\t\tm += temp;\n\t\t\tn -= temp;\n\t\t}\n\t\tif(temp + min >= s){\n\t\t\tif(temp >= min){\n\t\t\t\tmin = s - temp;\n\t\t\t}else{\n\t\t\t\tmin = s - min;\n\t\t\t}\n\t\t}else{\n\t\t\tmin = 0;\n\t\t}\n\t\tll max = (n / s) + (m / s);\n\t\tprintf(\"%lld %lld\\n\", max, min);\n\t}else{\n\t\tll temp = m % s, min = n % s;\n\t\tif(temp != 0){\n\t\t\tn += temp;\n\t\t\tm -= temp;\n\t\t}\t\n\t\tif(temp + min >= s){\n\t\t\tif(temp >= min){\n\t\t\t\tmin = s - temp;\n\t\t\t}else{\n\t\t\t\tmin = s - min;\n\t\t\t}\n\t\t}else{\n\t\t\tmin = 0;\n\t\t}\n\t\tll max = (n / s) + (m / s);\n\t\tprintf(\"%lld %lld\\n\", max, min);\n\t}\n}"}
{"similarity_score": 0.9957924263674615, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3810f07da07ea8c3b9b86dcbb53f3791", "bug_code_uid": "315ca8136ccd4d9b282bafa0034fb0d8", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "8d874860323a2919e8a469c877106c52", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    long long n,f=0,z=0;\n    int k;\n    scanf(\"%I64d\",&n);\n    while(n--)\n    {\n        scanf(\"%d\",&k);\n        if(k) f++;\n        else z++;\n    }\n    n=f/9;\n    if(n)\n    {\n        while(n--) printf(\"555555555\");\n        while(z--) printf(\"0\");\n    }\n    else if(z) printf(\"0\");\n    else printf(\"-1\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    long long n,f=0,z=0;\n    int k;\n    scanf(\"%I64d\",&n);\n    while(n--)\n    {\n        scanf(\"%d\",&k);\n        if(k) f++;\n        else z++;\n    }\n    n=f/9;\n    if(n&&z)\n    {\n        while(n--) printf(\"555555555\");\n        while(z--) printf(\"0\");\n    }\n    else if(z) printf(\"0\");\n    else printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.4418746195982958, "equal_cnt": 42, "replace_cnt": 41, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 41, "lang": "GNU C", "fix_code_uid": "1f75325071cbf4f8d8024111947851c1", "bug_code_uid": "db69929971351b5dd6d1fe53123f4865", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "6d4c80c057c4442d812bd4d278a6bc3f", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m,n;\n\tscanf(\"%d%d\",&m,&n);\n\tif((m+1)*2<n||n+1<m) printf(\"-1\\n\");\n\telse\n\t{\n\t\tint i;\n\t\tif(n+1==m)\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t\tm-1;\n\t\t\tfor(i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tprintf(\"10\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse if(n==m)\n\t\t{\n\t\t\tfor(i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tprintf(\"01\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse if((m+1)*2==n)\n\t\t{\n\t\t\tprintf(\"11\");\n\t\t\tfor(i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tprintf(\"011\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"1\");\n\t\t\tn-=1;\n\t\t\tint k=n-m;\n\t\t\tfor(i=0;i<k;i++)\n\t\t\t{\n\t\t\t\tprintf(\"101\");\n\t\t\t}\n\t\t\tk=m-k;\n\t\t\tfor(i=0;i<k;i++)\n\t\t\t{\n\t\t\t\tprintf(\"01\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int m,n;\n    scanf(\"%d%d\",&m,&n);\n    if((m+1)*2<n||n+1<m) printf(\"-1\\n\");\n    else\n    {\n        int i;\n        if(n+1==m)\n        {\n            printf(\"0\");\n            m=m-1;\n            for(i=0;i<m;i++)\n            {\n                printf(\"10\");\n            }\n            printf(\"\\n\");\n        }\n        else if(n==m)\n        {\n            for(i=0;i<m;i++)\n            {\n                printf(\"01\");\n            }\n            printf(\"\\n\");\n        }\n        else if((m+1)*2==n)\n        {\n            printf(\"11\");\n            for(i=0;i<m;i++)\n            {\n                printf(\"011\");\n            }\n            printf(\"\\n\");\n        }\n        else\n        {\n            printf(\"1\");\n            n-=1;\n            int k=n-m;\n            for(i=0;i<k;i++)\n            {\n                printf(\"101\");\n            }\n            k=m-k;\n            for(i=0;i<k;i++)\n            {\n                printf(\"01\");\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9574726609963548, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c0242f7cdc4bb27de730ae870d0845d2", "bug_code_uid": "4b1d63d59ea2669cdd457aa0fe416176", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "60b348ce3c8af2d4ea3e7ccc1cce6059", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i,l  ;\n    long n ;\n    int k=3, u , v;\n    scanf(\"%d\",&n);\n    char s[1000];\n    for(i=0;i<n;i++){\n       s[i]='o' ;\n       }\n    s[n]='\\0';\n    if (n>=1){\n        s[0]='O' ;\n        s[1]='O';\n        u=1;\n        v=1;\n        while(k<=n){\n            s[k-1] = 'O' ;\n            k=u+v;\n            u=v;\n            v=k;\n        }\n    }\n    printf(\"%s\",s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i,l  ;\n    long n ;\n    int k=3, u , v;\n    scanf(\"%d\",&n);\n    char s[1000];\n    for(i=0;i<n;i++){\n       s[i]='o' ;\n       }\n    s[n]='\\0';\n    s[0]='O' ;\n    if (n>1){\n        s[1]='O';\n        u=1;\n        v=1;\n        while(k<=n){\n            s[k-1] = 'O' ;\n            k=u+v;\n            u=v;\n            v=k;\n        }\n    }\n    printf(\"%s\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.5754716981132075, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "6d3cfdcfab1b81f3c54ade08464924ef", "bug_code_uid": "73b8346fe2f48cedf35aeb599b75742e", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "27b30d9af11f236ad513739b4bf89b5c", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 100020\nint main()\n{\n    int n,a,b;\n    int i;\n    int token[N];\n    int ok=0;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&token[i]);\n        token[i]=(token[i]*a)%b;\n        if(i>0&&token[i]!=token[i-1])\n        ok=1;\n    }\n    if(ok==1)\n    for(i=0;i<n;i++)\n    printf(\"%d \",token[i]);\n    else\n    printf(\"%d\",token[0]);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define N 100020\nint main()\n{\n    __int64 n,a,b,m;\n    __int64 i;\n    __int64 token[N];\n    scanf(\"%I64d %I64d %I64d\",&n,&a,&b);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&token[i]);\n        m=token[i]*a/b;\n        if((m*b)%a==0)\n        token[i]=token[i]-m*b/a;\n        else\n        token[i]=token[i]-1-m*b/a;\n    }\n    for(i=0;i<n;i++)\n    printf(\"%I64d \",token[i]);\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.1, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a9beb5512c68a0c7293b489a435471c3", "bug_code_uid": "673e6413f295653af02b0d82213775e3", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "9ca7bc952cb739f5d141004a7e061355", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,g,b,G,B,sum;\n    char a[200];\n    scanf(\"%d %d\",&n,&m);\n    sum=n+m;\n    g=m;\n    b=n;\n    B=0;\n    G=0;\n    for(i=0;i<sum;i++)\n    {\n        if(i%2==0)\n        {\n            if(B<b)\n            {\n                a[i]='B';\n                B++;\n            }\n            else if(G<g&&B>=b)\n            {\n                a[i]='G';\n                G++;\n            }\n        }\n        else if(i%2==1)\n        {\n            if(G<g)\n            {\n                a[i]='G';\n                G++;\n            }\n            else if(B<b&&G>=g)\n            {\n                a[i]='B';\n                B++;\n            }\n\n        }\n    }\n    a[sum]='\\0';\n    printf(\"%s\",a);\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    int a,b,i,x;\n    scanf(\"%d %d\",&a,&b);\n    x=(a-b);\n    if(x<0)\n    {\n        x=abs(x);\n        a=b-x;\n        for(i=0;i<a;i++)\n        {\n            printf(\"GB\");\n        }\n        for(i=0;i<x;i++)\n        {\n            printf(\"G\");\n        }\n    }\n    else\n    {\n        x=x;\n        a=a-x;\n        for(i=0;i<a;i++)\n        {\n            printf(\"BG\");\n        }\n        for(i=0;i<x;i++)\n        {\n            printf(\"B\");\n        }\n    }\n\n\n}\n"}
{"similarity_score": 0.7700534759358288, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "57c363c962d4254257f478e76b0a0af1", "bug_code_uid": "2a4b0450e14d81ebabb06e09bdf83752", "src_uid": "33a31edb75c9b0cf3a49ba97ad677632", "apr_id": "f1a45a90d5c1a5b2234cb472f1614f83", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint n,i,flag=1,p;\r\nlong a;\r\nvoid logic(int d)\r\n{\r\n   // printf(\"%d\\n\",d);\r\n\tfor(i=0;i<d;i++)\r\n\t{\r\n\t\ta=i*i;\r\n\t//\tprintf(\"%d\\n\",a);\r\n\t\tif(a==d)\r\n\t\t{\r\n\t\t\tflag=0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\telse if(a>d)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&p);\r\n\twhile(p>0)\r\n\t{\r\n\tint c=1;\r\n\tscanf(\"%d\",&n);\r\n\tint ar[n];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&ar[i]);\r\n\t\t//printf(\"%d\",c);\r\n\t}\r\n\t{\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tlogic(ar[i]);\r\n\t\t\tif(flag==1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(flag==0)\r\n\t{\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\tflag==1;\r\n\tp--;\r\n}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint n,i,flag=1,p;\r\nlong a;\r\nvoid logic(int d)\r\n{\r\ndouble c,e;\r\nc=sqrt(d);\r\ne=floor(c);\r\n\t\tif(e==c)\r\n\t\t{\r\n\t\t\tflag=0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag=1;\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&p);\r\n\twhile(p>0)\r\n\t{\r\n\tint c=1;\r\n\tscanf(\"%d\",&n);\r\n\tint ar[n];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&ar[i]);\r\n\t\t//printf(\"%d\",c);\r\n\t}\r\n\t{\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tlogic(ar[i]);\r\n\t\t\tif(flag==1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(flag==0)\r\n\t{\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\tflag==1;\r\n\tp--;\r\n}\r\n}\r\n"}
{"similarity_score": 0.6779661016949152, "equal_cnt": 25, "replace_cnt": 11, "delete_cnt": 13, "insert_cnt": 1, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "129bfee93871f7c3ba3b53c19540f567", "bug_code_uid": "e24ee8222fb33abf8dc18bf9cc7debbd", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "d250381c26dcbac4fb28a6f76a51c386", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    long long t,n,m;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        printf(\"%lld %lld\\n\",-(n-1),n);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a;\n\tlong long n;\n\tscanf(\"%d\",&a);\n\twhile(a--){\n\t\n\tscanf(\"%lld\",&n);\n\tprintf(\"%lld %lld\\n\",-n+1,n);\n}\n }"}
{"similarity_score": 0.03590944574551132, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "369bce9aa9571d63c263e53ec063ce74", "bug_code_uid": "95c6df82041a6073a4586e1e8f89355a", "src_uid": "59154ca15716f0c1c91a37d34c5bbf1d", "apr_id": "683389c9f78d9b513985b02d33bcc50b", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[1001];\nint main()\n{\n    int n,k,l,r,sa,sk,i;\n    scanf(\"%d %d %d %d %d %d\",&n,&k,&l,&r,&sa,&sk);\n    int t = sk / k,skt = sk;\n    sk -= t * k;\n    for (i=1;i<=k;i++)\n    {\n        if (sk != 0)\n        {\n            if (r - t <= sk)\n            {\n                sk -= r - t;\n                a[i] = r;\n            }\n            else\n            {\n                sk = 0;\n                a[i] = t + sk;\n            }\n        } else\n        a[i] = t;\n    }\n    sa -= skt;\n    r = t;\n    t = sa / (n - k);\n    sa -= (n - k) * t;\n    for (i=k+1;i<=n;i++)\n    {\n        if (sa != 0)\n        {\n            if  (r - t <= sa)\n            {\n                sa -= r - t;\n                a[i] = r;\n            }\n            else\n            {\n                sa = 0;\n                a[i] = t + sa;\n            }\n        } else\n        a[i] = t;\n    }\n    for (i=1;i<n;i++)\n        printf(\"%d \",a[i]);\n    printf(\"%d\\n\",a[n]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,k,l,r,sa,sk,i;\n    scanf(\"%d %d %d %d %d %d\",&n,&k,&l,&r,&sa,&sk);\n    sa -= sk;\n    n -= k;\n    for (i=k;i>=1;i--)\n    {\n        printf(\"%d \",sk / i);\n        sk -= sk / i;\n    }\n    for (i=n;i>=1;i--)\n    {\n        printf(\"%d \",sa / i);\n        sa -= sa / i;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7221006564551422, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "06a3c2f1afcdf8475675a6d80180f87e", "bug_code_uid": "0c8ff9950c521d73ae82f1c0b82b5cad", "src_uid": "461378e9179c9de454674ea9dc49c56c", "apr_id": "36f0103cb149689a64d9a285372698d5", "difficulty": 800, "tags": ["dp", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,m,i=0,z,x,s[100000]={0};\r\n\tchar q[100000];\r\n\tscanf(\"%d %d\",&n,&m);\r\n\t\r\n\t\tscanf(\"%s\",q);\r\n\t\twhile(n--) \r\n\t{\r\n\t\tif(i==0)\r\n\t\t{\r\n\t\t\tif(q[i]=='a') s[i]=1;\r\n\t\t\telse if(q[i]=='b') s[i]=2;\r\n\t\t\telse if(q[i]=='c') s[i]=3;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(q[i]=='a') s[i]=s[i-1]+1;\r\n\t\t\telse if(q[i]=='b') s[i]=s[i-1]+2;\r\n\t\t\telse if(q[i]=='c') s[i]=s[i-1]+3;\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\twhile(m--)\r\n\t{\r\n\t\tscanf(\"%d %d\",&z,&x);\r\n\t\tif(z==1)\r\n\t\tprintf(\"%d\\n\",s[x-1]);\r\n\t\telse\r\n\t\tprintf(\"%d\\n\",s[x-1]-s[z-2]);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,m,i=0,z,x,s[100000]={0};\r\n\tchar q[100000];\r\n\tscanf(\"%d %d\",&n,&m);\r\n\t\r\n\t\tscanf(\"%s\",q);\r\n\t\twhile(n--) \r\n\t{\r\n\t\tif(i==0)\r\n\t\t{\r\n\t\t\ts[i]=(int)(q[i]-'a'+1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ts[i]=s[i-1]+(int)(q[i]-'a'+1);\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\twhile(m--)\r\n\t{\r\n\t\tscanf(\"%d %d\",&z,&x);\r\n\t\tif(z==1)\r\n\t\tprintf(\"%d\\n\",s[x-1]);\r\n\t\telse\r\n\t\tprintf(\"%d\\n\",s[x-1]-s[z-2]);\r\n\t}\r\n}"}
{"similarity_score": 0.9776876267748479, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0d0cd5929d88ea0fd612da6b6457f06e", "bug_code_uid": "e5df48ffc960b715ccf6c04568d1dd1f", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "66c2947370aa8731ac703eb19ea0e245", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <inttypes.h>\n#include <stdio.h>\nint\nmain()\n{\n  int64_t k, a, b;\n  scanf(\"%\" SCNd64 \" %\" SCNd64 \" %\" SCNd64, &k, &a, &b);\n  uint64_t count = 0;\n  /* count zero */\n  if (a <= 0 && 0 <= b) {\n    count++;\n  }\n  if (a < 0) {\n    count += -a/k;\n  } else {\n    count -= a/k;\n    if (a % k == 0) {\n      count++;\n    }\n  }\n  if (b < 0) {\n    count -= -b/k;\n    if (b % k == 0) {\n      count ++;\n    }\n  } else {\n    count += b/k;\n  }\n  printf(\"%\" PRIu64\"\\n\", count);\n  return 0;\n}\n", "fixed": "#include <inttypes.h>\n#include <stdio.h>\nint\nmain()\n{\n  int64_t k, a, b;\n  scanf(\"%\" SCNd64 \" %\" SCNd64 \" %\" SCNd64, &k, &a, &b);\n  uint64_t count = 0;\n  /* count zero */\n  if (a <= 0 && 0 <= b) {\n    count++;\n  }\n  if (a < 0) {\n    count += -a/k;\n  } else if (a > 0) {\n    count -= a/k;\n    if (a % k == 0) {\n      count++;\n    }\n  }\n  if (b < 0) {\n    count -= -b/k;\n    if (b % k == 0) {\n      count ++;\n    }\n  } else if (b > 0) {\n    count += b/k;\n  }\n  printf(\"%\" PRIu64\"\\n\", count);\n  return 0;\n}\n"}
{"similarity_score": 0.9665955934612651, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e1ea2afa6e93f49501d9b0c6d10076c8", "bug_code_uid": "558979d3463a09297cafdc7e695acc56", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "08258baf10c72b36c7336e59dbc2317f", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX(a,b) (((a)>(b))?(a):(b))\nint a[1000010];\nint main()\n{\n    int n,x,r=0,flag=0,ans=0,f=0;\n    char c;\n    scanf(\"%d\",&n);\n    getchar();\n    while(n--)\n    {\n        scanf(\"%c %d\",&c,&x);\n        getchar();\n        if(c=='+')\n        {\n            a[x]++;\n            if(a[x]==1)\n            f++;\n            else\n            {\n                a[x]=1;\n                r--;\n            }\n        }\n        else\n        {\n            if(a[x]==1)\n            {\n                a[x]--;\n                f--;\n            }\n            else\n            {\n                ans++;\n                a[x]=-1;\n                r++;\n            }\n\n        }\n        ans=MAX(ans,f+r);\n    }\n    printf(\"%d\",ans);\n}\n", "fixed": "#include<stdio.h>\n#define MAX(a,b) (((a)>(b))?(a):(b))\nint a[1000010];\nint main()\n{\n    int n,x,r=0,flag=0,ans=0,f=0;\n    char c;\n    scanf(\"%d\",&n);\n    getchar();\n    while(n--)\n    {\n        scanf(\"%c %d\",&c,&x);\n        getchar();\n        if(c=='+')\n        {\n            a[x]++;\n            if(a[x]==1)\n            f++;\n            else\n            {\n                a[x]=1;\n            }\n        }\n        else\n        {\n            if(a[x]==1)\n            {\n                a[x]--;\n                f--;\n            }\n            else\n            {\n                ans++;\n                a[x]=0;\n            }\n\n        }\n        ans=MAX(ans,f);\n    }\n    printf(\"%d\",ans);\n}\n"}
{"similarity_score": 0.9214536928487691, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1682e1086fc68d7d657e8dd6aedc3460", "bug_code_uid": "782022b0f9a5935f40516fa4b64366d3", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "89c9ff86edf8e6ebd0d77955e602811e", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j;\n    char str[10000];\n    gets(str);\n    n=strlen(str);\n    for(i=0; i<n-1; i++)\n    {\n        if(str[i]!='0')\n            printf(\"%c\",str[i]);\n\n        if(str[i]=='0')\n\n        {\n            while(i<n-1)\n            {\n                str[i]=str[i+1];\n                i++;\n                printf(\"%c\",str[i]);\n            }\n        }\n    }\n\n    printf(\"\\n\");\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar str[1000009];\nint main()\n{\n    int n,i,j;\n\n    gets(str);\n    n=strlen(str);\n    for(i=0; i<n-1; i++)\n    {\n        if(str[i]!='0')\n            printf(\"%c\",str[i]);\n\n        if(str[i]=='0')\n\n        {\n            while(i<n-1)\n            {\n                str[i]=str[i+1];\n                i++;\n                printf(\"%c\",str[i]);\n            }\n        }\n    }\n\n    printf(\"\\n\");\n\n\n}\n"}
{"similarity_score": 0.7776, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "3c47e1a97e82ce338b716a04744ae7fc", "bug_code_uid": "0a013630b22ae91321fb3427964ad838", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "98d5cfa51367514b76e21ba47e25fff0", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,a,b,d=0,sum=0,c;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(i==0) sum+=a*b;\n        else if(b<d) sum+=a*b;\n        else sum+=a*d;\n\n        d=b;\n    }\n    printf(\"%d\",sum);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,a,b,d=0,sum=0,c;\n    scanf(\"%d\",&n);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(i==0)\n        {\n            sum+=a*b;\n            d=b;\n        }\n        else if(b<d)\n        {\n            sum+=a*b;\n            d=b;\n        }\n        else\n            sum+=a*d;\n    }\n    printf(\"%d\",sum);\n\n}\n"}
{"similarity_score": 0.8981288981288982, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5d0edbf41cd27fcfc69836058d931e1c", "bug_code_uid": "0610f4187a5256611dd1e91bd918c9af", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "43d8aa3c658dd091a1ac8bbff3f25a59", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,tl,joy[10000],time[10000],i,temp;\n    while(scanf(\"%d%d\",&n,&tl)!=EOF)\n    {\n        for(i=0;i<n;i++)\n            scanf(\"%d%d\",&joy[i],&time[i]);\n        int max=0;\n        for(i=0;i<n;i++)\n        {\n            if(time[i]>tl)\n                temp=joy[i]-(time[i]-tl);\n            else temp=joy[i];\n            if(temp>max) max=temp;\n        }\n        printf(\"%d\\n\",max);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,tl,joy[10000],time[10000],i,temp,max;\n    while(scanf(\"%d%d\",&n,&tl)!=EOF)\n    {\n        for(i=0;i<n;i++)\n            scanf(\"%d%d\",&joy[i],&time[i]);\n        if(time[0]>tl)\n            temp=joy[0]-(time[0]-tl);\n        else temp=joy[0];\n        max=temp;\n        for(i=1;i<n;i++)\n        {\n            if(time[i]>tl)\n                temp=joy[i]-(time[i]-tl);\n            else temp=joy[i];\n            if(temp>max) max=temp;\n        }\n        printf(\"%d\\n\",max);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.20934959349593496, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "0a88df6bca2530d8b375f1830d4f1a74", "bug_code_uid": "77eaeeba404abc48250280bf0407b230", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "fcabc66f3290a6590140af8d3ea408e5", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,flag=0,j;\n\tscanf(\"%d\",&n);\n\tint i,price[100100],quality[100100];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&price[i],&quality[i]);\n\t}\n\tfor(i=0;i<(n-1);i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif((price[i]<price[j])&&(quality[i]>quality[j]))\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag==1)\n\tprintf(\"Happy Alex\\n\");\n\telse\n\tprintf(\"Poor Alex\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nstruct point\n{\nint x,y;\n};\nint cmp(const void *a,const void *b)\n{\nreturn ((struct point*)a)->x-((struct point*)b)->x;\n}\nint main()\n{\nint n,i,flag=1;\nscanf(\"%d\",&n);\nstruct point p[n];\nfor(i=0;i<n;i++)\nscanf(\"%d%d\",&p[i].x,&p[i].y);   // sort the nodes as per x in ascending order   \nqsort(p,n,sizeof(struct point),cmp);\nfor(i=1;i<n;i++)\n{\n    //printf(\"%d %d\\n\",(&p[i])->x,(&p[i])->y);\n    if(((&p[i])->y)<((&p[i-1])->y))\n    {\n        flag=0;\n    }\n}\nif(flag==0)\n{\n    printf(\"Happy Alex\\n\");\n}\nelse\nprintf(\"Poor Alex\\n\");\nreturn 0;\n}"}
{"similarity_score": 0.6725219573400251, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "aa250d9314486411e203a13d487e53f3", "bug_code_uid": "6a413ab97ba3b17ed1aa56028a8ea018", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "f67e74d96674ed34c4b55f8676cbd111", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ long long int n;\n  long long int a,b,c,d,s,i,max,cnt;\n  scanf(\"%I64d\\n\",&n);\n  scanf(\"%I64d%I64d%I64d%I64d\",&a,&b,&c,&d);\n  s=a+b+c+d;\n  max=s;\n  cnt=1;\n  for(i=2;i<=n;i++)\n    {  scanf(\"%I64d%I64d%I64d%I64d\",&a,&b,&c,&d);\n        s=a+b+c+d;\n          if(s>=max)\n             {max=s;\n                cnt=cnt+1;}\n    }\n             \n       printf(\"%I64d\",cnt);\n  return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{ long long int n;\n  long long int a,b,c,d,s,i,max,cnt;\n  scanf(\"%I64d\\n\",&n);\n  scanf(\"%I64d%I64d%I64d%I64d\",&a,&b,&c,&d);\n  s=a+b+c+d;\n  \n  cnt=1;\n  for(i=2;i<=n;i++)\n    {  scanf(\"%I64d%I64d%I64d%I64d\",&a,&b,&c,&d);\n        max=a+b+c+d;\n          if(s<max)\n             {\n                cnt=cnt+1;}\n    }\n             \n       printf(\"%I64d\",cnt);\n  return 0;\n}"}
{"similarity_score": 0.0756578947368421, "equal_cnt": 8, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a9050e4fa2dad5dcf17f0fbf17079056", "bug_code_uid": "1cce2deab3d6ae500f7372891dd10ee1", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "8b0d7f24c25158929dcb4d84087ab0c3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int p;\n         scanf(\"%d\",&p);\n   for(int j = 1 ; j <= p ; j += 1)\n   {\n   int ara[4];\n   int count = 0;\n   for(int i = 0 ; i < 4 ; i += 1)\n   {\n      scanf(\"%d\",&ara[i]);\n   }\n      for(int i = 1 ; i < 4 ; i += 1)\n   {\n      if(ara[0] < ara[i])\n         count = count + 1;\n   }\n   printf(\"%d\",count);\n   }\n   return 0;\n}\n\n\n  \t\t\t\t    \t   \t  \t\t\t\t\t\t\t  \t  \t", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++)\n    {\n        int a,b,c,d;\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        if(a>b&&a>c&&a>d)\n        {\n            printf(\"0\\n\");\n        }\n        else if(a>b&&a>c&&a<d)\n        {\n            printf(\"1\\n\");\n        }\n        else if(a>b&&a<c&&a<d)\n        {\n            printf(\"2\\n\");\n        }\n        else if(a<b&&a<c&&a<d)\n        {\n            printf(\"3\\n\");\n        }\n        else if(a<b&&a>c&&a<d)\n        {\n            printf(\"2\\n\");\n        }\n        else if(a<b&&a<c&&a>d)\n        {\n            printf(\"2\\n\");\n        }\n        else if(a<b&&a>c&&a>d)\n        {\n            printf(\"1\\n\");\n        }\n        else if(a>b&&a<c&&a>d)\n        {\n            printf(\"1\\n\");\n        }\n    }\n    return 0;\n}\n\n\t  \t\t\t   \t\t   \t \t\t  \t\t  \t\t\t\t\t\t\t"}
{"similarity_score": 0.6915584415584416, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "97f0ea8fbed7ac23b86e9eefe4bd5e98", "bug_code_uid": "1ad71195a984f941c7fab74f185e8506", "src_uid": "2ce2d0c4ac5e630bafad2127a1b589dd", "apr_id": "a5ce5d4bfddac7d012ce5bca5f3fcfa1", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000000];\n\tint i,j,n,ans=0;\n\tscanf(\"%s\",a);\n\tn=strlen(a);\n\tfor (i=0; i<n; i++)\t\n\t{\n\t\tif (a[i]=='(')\n\t\t{\n\t\t\tfor (j=i+1; j<n; j++)\n\t\t\t{\n\t\t\t\tif (a[j]==')')\n\t\t\t\t{\n\t\t\t\t\ta[j]=0;\n\t\t\t\t\tans++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans*2);\n\treturn 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000000];\n\tint i,j,n,ans=0,count=0;\n\tscanf(\"%s\",a);\n\tn=strlen(a);\n\tfor (i=0; i<n; i++)\n\t{\n\t\tif (a[i]=='(')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (count>0)\n\t\t\t{\n\t\t\t\tcount--;\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans*2);\n\treturn 0;\n}\n\n\n\t\t\t\t\t\n\n\n\n\t\n"}
{"similarity_score": 0.9024630541871921, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e960a6662e3a0332df59522bbd2a7ecd", "bug_code_uid": "3fa281b936e354d965d4838ff95cd991", "src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "apr_id": "fcbe7659a73eaf29d698b7ae4fe82b7b", "difficulty": 1200, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n\tint i,j;\n\tint n,v1,v2,a[109],x,y,sum;\n\tdouble min,t1,t2,d,t;\n\twhile(scanf(\"%d%d%d\",&n,&v1,&v2)!=EOF)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmin=100000000;\n\t    for(i=1;i<n;i++)\n\t\t{\n\t\t\tt1=a[i]*1.0/v1;\n\t\t\td=sqrt(1.0*(x-a[i])*(x-a[i])+y*y*1.0);\n\t\t\tt2=d*1.0/v2;\n\t\t\tt=t1+t2;\n\t\t\tif(t<min)\n\t\t\t{\n\t\t\t\tsum=i+1;\n\t\t\t\tmin=t;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n\tint i,j;\n\tint n,v1,v2,a[109],x,y,sum;\n\tdouble min,t1,t2,d,t,d1;\n\twhile(scanf(\"%d%d%d\",&n,&v1,&v2)!=EOF)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmin=100000000;\n\t    for(i=1;i<n;i++)\n\t\t{\n\t\t\tt1=a[i]*1.0/v1;\n\t\t\td=sqrt(1.0*(x-a[i])*(x-a[i])+y*y*1.0);\n\t\t\tt2=d*1.0/v2;\n\t\t\tt=t1+t2;\n\t\t\tif(t<min)\n\t\t\t{\n\t\t\t\tsum=i+1;\n\t\t\t\tmin=t;\n\t\t\t\td1=d;\n\t\t\t}\n\t\t\telse if(t==min)\n\t\t\t{\n\t\t\t\tif(d1<d)\n\t\t\t\t\tsum=i;\n\t\t\t\telse if(d1>d)\n\t\t\t\t\tsum=i+1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.970013037809648, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7360270d1cabc4d220c4dc64e5aa0369", "bug_code_uid": "7874aa684bc7f0a9ff0ffe223dc0686f", "src_uid": "df6ee0d8bb25dc2040adf1f115f4a83b", "apr_id": "70818f37ede3ad5bf046ba3662777d5a", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint isprime(int n)\n{\n\tfor(int i = 2; i <= n/2; i++)\n\t\tif(n % i == 0)\n\t\t\treturn 0;\n\n\treturn 1;\n}\n\nint main()\n{\n\tint test, n;\n\n\tscanf(\"%d\", &test);\n\n\twhile(test > 0)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tint mg[n][n], num;\n\n\t\tfor(int i = 0; i <  (n - 1); i++)\n\t\t\tfor(int j = 0; j < (n - 1); j++)\n\t\t\t\tmg[i][j] = 1;\n\t\tfor(int i = 1; i <= 100000; i++)\n\t\t\tif(isprime(n-1+i) == 1)\n\t\t\t{\n\t\t\t\tnum = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tfor(int i = 0; i < (n-1); i++)\n\t\t{\t\n\t\t\tmg[n-1][i] = num;\n\t\t\tmg[i][n-1] = num;\n\t\t}\n\t\tfor(int i = 1; i <= 100000; i++)\n\t\t\tif(isprime(num * (n-1) + i) == 1)\n\t\t\t\t{mg[n-1][n-1] = i;break;}\n\n\n\t\tfor(int i = 0; i < n; i++)\n\t\t\t{\tfor(int j = 0; j < n; j++)\n\t\t\t\t\tprintf(\"%d \", mg[i][j]);\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\ttest--;\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint isprime(int n)\n{\n\tfor(int i = 2; i <= n/2; i++)\n\t\tif(n % i == 0)\n\t\t\treturn 0;\n\n\treturn 1;\n}\n\nint main()\n{\n\tint test, n;\n\n\tscanf(\"%d\", &test);\n\n\twhile(test > 0)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tint mg[n][n], num;\n\n\t\tfor(int i = 0; i <  (n - 1); i++)\n\t\t\tfor(int j = 0; j < (n - 1); j++)\n\t\t\t\tmg[i][j] = 1;\n\t\tfor(int i = 1; i <= 100000; i++)\n\t\t\tif((isprime(n-1+i) == 1) && (isprime(i) == 0))\n\t\t\t{\n\t\t\t\tnum = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tfor(int i = 0; i < (n-1); i++)\n\t\t{\t\n\t\t\tmg[n-1][i] = num;\n\t\t\tmg[i][n-1] = num;\n\t\t}\n\t\tfor(int i = 1; i <= 100000; i++)\n\t\t\tif((isprime(num * (n-1) + i) == 1) && (isprime(i) == 0))\n\t\t\t\t{mg[n-1][n-1] = i;break;}\n\n\n\t\tfor(int i = 0; i < n; i++)\n\t\t\t{\tfor(int j = 0; j < n; j++)\n\t\t\t\t\tprintf(\"%d \", mg[i][j]);\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\ttest--;\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9347679892400808, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "596d91625eb6e6186b4a716bf0bb6240", "bug_code_uid": "dbc8866ab28424af8db5b83a6226ddf8", "src_uid": "27ef62139533982f0857d733fad5c0d6", "apr_id": "dfc55c4c783d01af2c950bdd5bddd7a9", "difficulty": 2200, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint comp(const void* ,const void* );\nint main(){\n     int times;\n    int x,flag=0;\n    int line[100005];\n    scanf(\"%d\",&times);\n    for(x=0;x<times;x++){\n        scanf(\"%d\",&line[x]);\n        line[x]+=x;\n    }\n    qsort(line,times,sizeof(int),comp);\n    for(x=0;x<times;x++){\n        line[x]-=x;\n        if(line[x-1]<=line[x]){\n            flag++;\n        }\n    }\n    if(flag+1==times){\n        for(x=0;x<times;x++){\n            if(x+1==times)\n                printf(\"%d\",line[x]);\n            else\n                printf(\"%d \",line[x]);\n        }\n    }\n    else\n        printf(\":(\");\n    return 0;\n}\nint comp(const void *p,const void *q){\n    return (*(int *)p-*(int *)q);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint comp(const void* ,const void* );\nint main(){\n    int times;\n    int x,flags=0;\n    int line[200005];\n    scanf(\"%d\",&times);\n    for(x=0;x<times;x++){\n        scanf(\"%d\",&line[x]);\n        line[x]+=x;\n    }\n    qsort(line,times,sizeof(int),comp);\n    for(x=0;x<times;x++){\n        line[x]-=x;\n        if(line[x-1]<=line[x]&&x>0){\n            flags++;\n        }\n    }\n    if(flags+1==times){\n        for(x=0;x<times;x++){\n            if(x+1==times)\n                printf(\"%d\",line[x]);\n            else\n                printf(\"%d \",line[x]);\n        }\n    }\n    else if(times==1)\n        printf(\"%d\",line[0]);\n    else\n        printf(\":(\");\n    return 0;\n}\nint comp(const void *p,const void *q){\n    return (*(int *)p-*(int *)q);\n}\n"}
{"similarity_score": 0.9334741288278775, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "81fabb26de5a7ad8629935107be606a1", "bug_code_uid": "ce1f386d19d452c43cd4d8f9cea3e314", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "733b8c597f6f55f8a39bcc7c426068d5", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n \nint main()\n{\n    int num,faces=0;\n    scanf(\"%d\",&num);\n    char shape[num][20];\n    int iter;\n    for(iter=0;iter<num;iter++)\n     {\n         switch(shape[iter][0])\n          {\n              case 'T':faces+=4;break;\n              case 'C':faces+=6;break;\n              case 'I':faces+=20;break;\n              case 'O':faces+=8;break;\n              case 'D':faces+=12;break;\n          }\n      }\n      printf(\"%d\",faces);\n}", "fixed": "#include<stdio.h>\n \nint main()\n{\n    int num,faces=0;\n    scanf(\"%d\",&num);\n    char shape[num][20];\n    int iter;\n    for(iter=0;iter<num;iter++)\n      scanf(\"%s\",shape[iter]);\n    for(iter=0;iter<num;iter++)\n     {\n         switch(shape[iter][0])\n          {\n              case 'T':faces+=4;break;\n              case 'C':faces+=6;break;\n              case 'I':faces+=20;break;\n              case 'O':faces+=8;break;\n              case 'D':faces+=12;break;\n          }\n      }\n      printf(\"%d\",faces);\n}"}
{"similarity_score": 0.9986577181208054, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f52ae75347928f2310b1dfc318476874", "bug_code_uid": "fac190f4ea12d762c1da586390169484", "src_uid": "0fbc306d919d7ffc3cb02239cb9c2ab0", "apr_id": "3019556f50ab8d70e0e01092ae10b1f1", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "int main()\n{int n,i,t[100],aux,k,jj;\nscanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&t[i]);\n    int ss=0;\n    i=-1;int b=0;\n    while(i!=n-1)\n    {i=i+1;\n    if(t[i]==1){ss=ss+1;t[i]=0;aux=i;k=0;\n    for(jj=i+1;jj<n;jj++)\n    if(t[jj]==1){k=k+1;}\n\n    if(k!=0&&t[i+1]==0){b=b+1;i=aux;}else if(k==0){i=n-1;}}\n    }\n    ss=ss+b;\n    printf(\"%d\",ss);\n\n\n    return 0;\n}\n", "fixed": "int main()\n{int n,i,t[1000],aux,k,jj;\nscanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&t[i]);\n    int ss=0;\n    i=-1;int b=0;\n    while(i!=n-1)\n    {i=i+1;\n    if(t[i]==1){ss=ss+1;t[i]=0;aux=i;k=0;\n    for(jj=i+1;jj<n;jj++)\n    if(t[jj]==1){k=k+1;}\n\n    if(k!=0&&t[i+1]==0){b=b+1;i=aux;}else if(k==0){i=n-1;}}\n    }\n    ss=ss+b;\n    printf(\"%d\",ss);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.5958549222797928, "equal_cnt": 20, "replace_cnt": 7, "delete_cnt": 11, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "f5b43d9806c7c283fbac440251f61912", "bug_code_uid": "da2182c4c3f720607cbb29e8d45c4eed", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "4e00ebce4740081fb02c34f2d0994487", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main ()\n{\n    int n,m,a,i,tot=0;\n    scanf(\"%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a=<m)\n        tot++;\n        else\n        tot+=2;\n    }\n    printf(\"%d\\n\",tot);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{int n,h,i,j,c=0;\nscanf(\"%d%d\",&n,&h);\nfor(i=0;i<n;i++){\nscanf(\"%d\",&j);\nj>h?c+=2:c++;}\nprintf(\"%d\",c);}"}
{"similarity_score": 0.949812734082397, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "8e973bf153c08097313152d7a0840af4", "bug_code_uid": "0865a27a424317d05ff9076bd1eab207", "src_uid": "204e75827b7016eb1f1fbe1d6b60b03d", "apr_id": "2ff52ace59451b4dcf77122a28c617fe", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nlong gcd(long a, long b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nlong digitsSum(long n)\r\n{\r\n    long sum=0,m;\r\n    while(n>0)    \r\n{    \r\nm=n%10;    \r\nsum=sum+m;    \r\nn=n/10;    \r\n}   \r\nreturn sum;\r\n}\r\nint main()\r\n{\r\n   long test;\r\n   scanf(\"%ld\",&test);\r\n   while(test--)\r\n   {\r\n       long a,b,res;\r\n       scanf(\"%ld\",&a);\r\n       while(1)\r\n       {\r\n       b = digitsSum(a);\r\n       res = gcd(a,b);\r\n       if(res>1)\r\n       {\r\n           printf(\"%ld\\n\",a);\r\n           break;\r\n       }\r\n       else\r\n       {\r\n           a++;\r\n       }\r\n       \r\n       }\r\n       \r\n   }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nlong long gcd(long long a, long long b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nlong long digitsSum(long long n)\r\n{\r\n    long long sum=0,m;\r\n    while(n>0)    \r\n{    \r\nm=n%10;    \r\nsum=sum+m;    \r\nn=n/10;    \r\n}   \r\nreturn sum;\r\n}\r\nint main()\r\n{\r\n   long long test;\r\n   scanf(\"%lld\",&test);\r\n   while(test--)\r\n   {\r\n       long long a,b,res;\r\n       scanf(\"%lld\",&a);\r\n       while(1)\r\n       {\r\n       b = digitsSum(a);\r\n       res = gcd(a,b);\r\n       if(res>1)\r\n       {\r\n           printf(\"%lld\\n\",a);\r\n           break;\r\n       }\r\n       else\r\n       {\r\n           a++;\r\n       }\r\n       \r\n       }\r\n       \r\n   }\r\n}"}
{"similarity_score": 0.3294663573085847, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "fc6386720dcedf4a0798940b2742036e", "bug_code_uid": "809acdfdc5e99348efe0449a555fab37", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "795ce964b72757d34c9cb7c5efddfbbb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void) {\n\tint n,i,p[100000],t=1;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&p[0]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&p[i]);\n\t\tif(p[i]!=p[--i])\n\t\t\tt++;\n\t}\n\tprintf(\"%d\",t);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void) {\n\tint n,i,p,pn,t=1;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&p);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&pn);\n\t\tif(pn!=p)\n\t\t\tt++;\n\t\tp=pn;\n\t}\n\tprintf(\"%d\",t);\n\treturn 0;\n}\n"}
{"similarity_score": 0.275049115913556, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "a566ec0630bd3a1579f1ee3a98015b2c", "bug_code_uid": "7c828a1632fe29a288f9916f967cf2c7", "src_uid": "6ea899e915cfc95a43f0e16d6d08cc1e", "apr_id": "7d2dd9e40a310e6f308e92c6fdea03f0", "difficulty": 1600, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,print;\n    scanf(\"%d\",&n);\n    for(print=n/2+1;print<=n;print++) printf(\"%d \",print);\n    for(print=1;print<n/2+1;print++) printf(\"%d \",print);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\nint main()\n{\n    int n,remaining,integer_root,i,j,print;\n    double root;\n    scanf(\"%d\",&n);\n    print=n;\n    root=sqrt((double) n);\n    integer_root=(int) root;\n    remaining=n-integer_root*integer_root;\n    if(remaining<=integer_root)\n    {\n    for(i=1;i<=remaining;i++)\n    {\n        print-=(integer_root+1);\n        for(j=1;j<=integer_root+1;j++)\n        {\n            printf(\"%d \",print+j);\n        }\n    }\n    }\n    else\n    {\n    do\n    {\n        print-=(integer_root+1);\n        for(j=1;j<=integer_root+1;j++)\n        {\n            printf(\"%d \",print+j);\n        }\n    }while(print%integer_root);\n    }\n    while(print)\n    {\n        print-=(integer_root);\n        for(j=1;j<=integer_root;j++)\n        {\n            printf(\"%d \",print+j);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9166666666666666, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c6c8ad7c486c63f88ff13d73c3f782e1", "bug_code_uid": "421a15b09c3369b2c5d3d0c7a6cf75f0", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "e9c4fe48e58a70534eb9a6b5f271a7a7", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <math.h>\n#include <string.h>\n#include <conio.h>\n\n#define ll long long \n\nvoid run_case(void)\n{\n    \n    int n;\n    int a, b;\n    char A;\n    int i, j;\n    char string[2000];\n\n    scanf(\"%d %d %d\", &n, &a, &b);\n\n    A = 'a';\n\n    for(i=0; i<n; i++){\n        string[i] = A++;\n        if(A > 122) A = 'a';\n    }\n    string[n] = '\\0';\n\n    printf(\"%s\\n\", string);\n\n\n}\n\n\nint main(int argc, char *argv[])\n{\n\n    #ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    #else\n    // online submission\n    #endif\n\n    int t;\n\n    scanf(\"%d\\n\", &t);\n    while(t--) \n    run_case();\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <math.h>\n#include <string.h>\n#include <conio.h>\n\n#define ll long long \n\nvoid run_case(void)\n{\n    \n    int n;\n    int a, b;\n    char A;\n    int i, j, k;\n    char string[4000];\n\n    scanf(\"%d %d %d\", &n, &a, &b);\n\n\n    for(i=0; i<n; i+=b){\n        k = i;\n        A = 'a';\n        for(j=0; j<b; j++){\n            string[k++] = A++;\n        }\n    }\n\n    \n    string[n] = '\\0';\n\n    printf(\"%s\\n\", string);\n\n\n}\n\n\nint main(int argc, char *argv[])\n{\n\n    #ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    #else\n    // online submission\n    #endif\n\n    int t;\n\n    scanf(\"%d\\n\", &t);\n    while(t--) \n    run_case();\n\n    return 0;\n}"}
{"similarity_score": 0.47619047619047616, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "5d816d779e547e861ad96a1090b1c18e", "bug_code_uid": "9ff90d009ae5a36e6d651865bc2abac3", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "7d9bbcc1d03ad05625283200685e8356", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int a, b, k, sum = 0, i;\n    scanf(\"%lld%lld%lld\", &k, &a, &b);\n    a = (a/k)*k;\n    b = (b/k)*k;\n    for(i = a; i <= b; i = i+k){\n        sum++;\n    }\n    printf(\"%lld\", sum);\n}\n", "fixed": "#include <stdio.h>\nint main()\n {\n    long long k, a, b;\n    long long t;\n\n    scanf(\"%lld %lld %lld\", &k, &a, &b);\n\n    t = ((long long)1e18 + k - 1) / k * k;\n    a = a + t;\n    b = b + t;\n\n    printf(\"%lld\\n\", b / k - (a + k - 1) / k + 1);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7101669195751138, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "de365baed1fa4d7dd6d48bb334077c16", "bug_code_uid": "45091e28e2075b73dd2f21c210c17c73", "src_uid": "a60321dd9ada279c007415f28775099b", "apr_id": "7fa43ce1a9f19e0fa56f90c3a0a8b8c0", "difficulty": 900, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,t,i,ans;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        ans=(a+b+c+d);\n        if(ans%2==1)\n        {\n            ans=(ans/2)+1;\n        }\n        else\n        {\n            ans=ans/2;\n        }\n        printf(\"%d\\n\",ans);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,t,i,ans1,ans2;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        ans1=a+b;\n        ans2=c+d;\n        if(ans1>=ans2)\n        {\n            printf(\"%d\\n\",ans1);\n        }\n        else\n        {\n            printf(\"%d\\n\",ans2);\n        }\n    }\n}\n"}
{"similarity_score": 0.9303054032889585, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "83ccb1e0119c0af31ac182ce748574f4", "bug_code_uid": "aadd12407a9f23de3197047beed3c07c", "src_uid": "31064ad58b7802c32b3c51137057b6f5", "apr_id": "86ddfc95d82416038c21876007d3da2a", "difficulty": 1500, "tags": ["binary search", "brute force", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint f(long long m, long long n)\r\n{\r\n    return (m * m - 1) <= 2*n;\r\n}\r\n\r\nint foo(long long n)\r\n{\r\n    int l = 1, r = 100000, x = 0;\r\n    long long m;\r\n    while(l < r)\r\n    {\r\n            m = (l + r) / 2;\r\n            if(f(m,n))\r\n               l = m + 1;\r\n            else\r\n               r = m;    \r\n             \r\n    }\r\n    if(f(l+1,n)) return l+1;\r\n    if(f(l,n)) return l;\r\n    if(f(l-1,n)) return l-1;\r\n    \r\n}\r\n\r\nint main()\r\n{\r\n     int x,y,z,i,j,k,a,b,c,n,m,t;\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n             scanf(\"%d\",&n);\r\n             k = foo(n);\r\n             printf(\"%d\\n\",(k - 1)/2);\r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint f(long long m, long long n)\r\n{\r\n    return (m * m - 1) <= 2*n && m * m + 1 <= 2*n;\r\n}\r\n\r\nint foo(long long n)\r\n{\r\n    int l = 1, r = 100000, x = 0;\r\n    long long m;\r\n    while(l < r)\r\n    {\r\n            m = (l + r) / 2;\r\n            if(f(m,n))\r\n               l = m + 1;\r\n            else\r\n               r = m;    \r\n             \r\n    }\r\n    return l-1;\r\n    \r\n}\r\n\r\nint main()\r\n{\r\n     int x,y,z,i,j,k,a,b,c,n,m,t;\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n             scanf(\"%d\",&n);\r\n             k = foo(n);\r\n             printf(\"%d\\n\",(k - 1)/2);\r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.46932185145317545, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "def094aacfd6430f4860ba833e501efb", "bug_code_uid": "8389d6d7b0e7f6ab7e0797ddb3018a0b", "src_uid": "501b60c4dc465b8a60fd567b208ea1e3", "apr_id": "46ec4025a652ea6f866c9ae0bdef0a55", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar s[12345];\nchar tmp[12345];\n\nint main(){\n\n\tscanf(\"%s\", s);\n\tint len = strlen(s);\n\n\tint m;\n\tscanf(\"%d\", &m);\n\n\twhile(m--){\n\t\tint l, r, k, cnt;\n\t\tscanf(\"%d%d%d\", &l, &r, &k);\n\n\t\t--l, --r, k %= (r - l + 1);\n\t\t\n\t\twhile(k--){\n\t\t\t\n\t\t\tcnt = 0;\n\t\t\ttmp[cnt++] = s[r];\n\t\t\t\n\t\t\tfor(int i = l; i <= r -1; i++){\n\t\t\t\ttmp[cnt++] = s[i];\n\t\t\t}\n\n\t\t\tfor(int i = 0; i < cnt ; i++){\n\t\t\t\ts[l + i] = tmp[i];\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprintf(\"%s\", s);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar s[12345];\nchar tmp[12345];\n\nvoid rotate(char *s, int n, int k){\n\twhile(k--){\n\t\tmemcpy(tmp + 1, s, n*sizeof(char));\n\t\ttmp[0] = s[n];\n\t\tmemcpy(s, tmp, (n + 1)*sizeof(char));\n\t}\n}\n\nint main(){\n\n\tscanf(\"%s\", s);\n\tint len = strlen(s);\n\n\tint m;\n\tscanf(\"%d\", &m);\n\n\twhile(m--){\n\t\tint l, r, k;\n\t\tscanf(\"%d%d%d\", &l, &r, &k);\n\n\t\t--l, --r, k %= (r - l + 1);\n\t\t\n\t\trotate(s + l, r - l, k);\n\t}\n\n\tprintf(\"%s\", s);\n\treturn 0;\n}"}
{"similarity_score": 0.08114035087719298, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "4f79d895a3e8f56c4dfe54a4e38c9eea", "bug_code_uid": "37d6665f33e74e7321f105928c654493", "src_uid": "30ad5bdc019fcd8a4e642c90decca58f", "apr_id": "c8a91aaee20f7716156bc938b1a5a0e0", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main () {\nlong long int i, j, t, a, g, b, b1, c, m[1000], m2[1000], sum = 0;\nscanf (\"%lld\", &a);\ng = a;\nt = 0;\nfor (i = 0; i < a; i++)\nscanf (\"%lld\", &m[i]);\nfor (i = 0; i < g; i++) {\nb = m[0];\nfor (j = 0; j < a; j++) {\nif (m[j] < b && m[j] != m2[i - 1]) {\nb = m[j];\nc = j;\n}\n}\nfor (j = c; j < a - 1; j++)\nm[j] = m[j + 1];\na--;\nm2[i] = b;\n}\nfor (i = 0; i < g; i++) {\nif (m2[i] < m2[i + 1])\nsum++;\n}\nprintf (\"%lld\", sum);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tint x;\n\tint f[1005] = {};\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &x);\n\t\tf[x]++;\n\t}\n\tint ans = 0;\n\twhile (1) {\n\t\tint i = 0;\n\t\twhile (i < 1005 && f[i] == 0) {\n\t\t\ti++;\n\t\t}\n\t\tif (i == 1005) {\n\t\t\tbreak;\n\t\t}\n\t\tf[i]--;\n\t\ti++;\n\t\twhile (i < 1005) {\n\t\t\tif (f[i]) {\n\t\t\t\tans++;\n\t\t\t\tf[i]--;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.2703639514731369, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "25c9c4e1c4237efb93e47578ff7aa79f", "bug_code_uid": "c1bda1294d57c22efc1578fcadf50f9f", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "194b9855e389daffa5665282716c4d5f", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,a1,b1,a2,b2,i,sum,test;\n    double s;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n    scanf(\"%d %d\",&a1,&b1);\n    scanf(\"%d %d\",&a2,&b2);\n    sum=(a1*b1)+(a2*b2);\n    s=sqrt((double)sum);\n    test=s;\n    if(test==s)printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){ \nint i,t,a,b,x,y; \nscanf(\"%d\",&t); \nfor(i=0;i<t;i++) { \nscanf(\"%d %d %d %d\",&a,&b,&x,&y); \nif((a==x&&b+y==x)||(b==y&&a+x==y)||(a==y&&b+x==a)||(b==x&&a+y==b)) \nprintf(\"YES\\n\"); \nelse printf(\"NO\\n\"); \n} \nreturn 0;\n}"}
{"similarity_score": 0.8946564885496183, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "427dbb85d2cc807203f31dbfcffe6b50", "bug_code_uid": "6047bf610405775f8a4f478f1e43c804", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "ee14fb1315fba3348de00364a6e8778a", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint hash[101]={0};\nint main()\n{\nint n,ans=0,i,j,c;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nfor(j=0;j<n;j++)\n{\nscanf(\"%d\",&c);\nif(c==1||c==3)\n{\nans++;\nhash[i+1]=1;\n}\n}\n}\nans=n-ans;\nif(ans<=0)\nprintf(\"0\\n\");\nelse{\nprintf(\"%d\\n\",ans);\nfor(i=1;i<=n;i++)\n{\nif(hash[i]==0)\nprintf(\"%d \",i);\n}\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint hash[101]={0};\nint main()\n{\nint n,ans=0,i,j,c;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nfor(j=0;j<n;j++)\n{\nscanf(\"%d\",&c);\nif(c==1||c==3)\n{\nif(hash[i+1]==0)\n{\nans++;\nhash[i+1]=1;\n}\n}\n}\n}\nans=n-ans;\n//if(ans<=0)\n//printf(\"0\\n\");\n//else{\nprintf(\"%d\\n\",ans);\nfor(i=1;i<=n;i++)\n{\nif(hash[i]==0)\nprintf(\"%d \",i);\n}\n//}\nreturn 0;\n}\n"}
{"similarity_score": 0.3766364551863041, "equal_cnt": 14, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 8, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "4672f2cdde1a00571181495931c20b6e", "bug_code_uid": "67b4765016da5d3f4bda7d380b66a717", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "f0492d0f93f870f2dda38cec4cb7af77", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint arr[m][n];\n\tint count=0,flag=0,awake=0,i,j;\n\tfor (i=0;i<n;i++)\n\t{\n\t\tfor (j=0;j<m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&arr[i][j]);\n\t\t\tcount++;\n\t\t\tif (count==2)\n\t\t\t\tcount=0;\n\t\t\t\tflag=0;\n\t\t\tif (arr[i][j]==1 && flag==0)\n\t\t\t{\tawake++;\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,m;\n\t\t        scanf(\"%d %d\",&n,&m);\n\t\t\t        int arr[m][n],a,b;\n\t\t\t\t        int count=0,flag=0,awake=0,i,j;\n\t\t\t\t\t        for (i=0;i<n;i++)\n\t\t\t\t\t\t\t        {\n\t\t\t\t\t\t\t\t\t                for (j=0;j<m;j++)\n\t\t\t\t\t\t\t\t\t\t\t\t                {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        scanf(\"%d%d\",&a,&b);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        if (a==1 || b==1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                            count++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                }\n\t\t\t\t\t\t\t\t\t\t\t                \n\n\t\t\t\t\t\t\t\t\t\t\t                \n\t\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t        printf(\"%d\",count);\n\t\t\t\t\t\t\t        return 0;\n}\n"}
{"similarity_score": 0.5825825825825826, "equal_cnt": 18, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "fee9f7a88577ecd4c9e7b3a49460a789", "bug_code_uid": "c786d03d7df4f4b8d81986699ecf155f", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "ec00587051813c78a112e47672082446", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n,i,z=0,s;\n    scanf(\"%d\", &n);\n    int x[n];\n    for(i=0;i<n;i++) scanf(\"%d\", &x[i]);\n    if(x[n-1] <= x[0]) z++;\n\n    for(i=2;i<n;i++)\n    {\n        if(x[n-i] <= x[n-i+1]) z++;\n        else break;\n    }\n    s = z;\n    for(i=0;i<n-1;i++)\n    {\n        if(x[i] <= x[i+1] ) z++;\n        else break;\n    }\n    if (z == n-1) printf(\"%d\", s);\n    else printf(\"-1\");\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n,i,z=0,s=0;\n    scanf(\"%d\", &n);\n    int x[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &x[i]);\n    for(i=0; i<n-1; i++)\n    {\n        if(x[i] <= x[i+1] )\n            z++;\n        else\n            break;\n    }\n    if(x[n-1] <= x[0] && z < n-1)\n    {\n        z++;s++;\n        for(i=i+1; i<n-1; i++)\n        {\n            if(x[i] <= x[i+1] )\n            {\n                z++;\n                s++;\n            }\n            else\n                break;\n        }\n    }\n    if (z == n-1)\n        printf(\"%d\", s);\n    else\n        printf(\"-1\");\n}\n"}
{"similarity_score": 0.19574888779041028, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b28d95cb7e00ede859e3f8e0ddf9f612", "bug_code_uid": "c2352f1ac43c8761b1dce0a88a5adeb9", "src_uid": "1f29461c42665523d0a4d56b13f7e480", "apr_id": "c5fee61a1e34a82f8fde64193bb097d2", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long ll;\n\nint main() {\n\tll t,r,g,b,i,j,max,mid,min;\n\n\tscanf(\"%lld\",&t);\n\n\twhile (t--)\n\t{\n\t\tscanf(\"%lld %lld %lld\",&r,&g,&b);\n\n\t\tif (r>=g && g>=b)\n\t\t{\n\t\t\tmax=r,mid=g,min=b;\n\t\t\tprintf(\"%lld\\n\",(max>(min+mid))?(min+mid):(max));\n\n\t\t}\n\t\t\n\t\telse if (r>=b && g<=b)\n\t\t{\n\t\t\tmax=r,mid=b,min=g;\n\t\t\tprintf(\"%lld\\n\",(max>(min+mid))?(min+mid):(max));\n\t\t}\n\n\t\telse if (g>=r && r>=b)\n\t\t{\n\t\t\tmax=g,mid=r,min=b;\n\t\t\tprintf(\"%lld\\n\",(max>(min+mid))?(min+mid):(max));\n\n\t\t}\n\t\telse if (g>=b && r<=b)\n\t\t{\n\t\t\tmax=g,mid=b,min=r;\n\t\t\tprintf(\"%lld\\n\",(max>(min+mid))?(min+mid):(max));\n\n\t\t}\n\n\t\telse if (b>=g && g>=r)\n\t\t{\n\t\t\tmax=b,mid=g,min=r;\n\t\t\tprintf(\"%lld\\n\",(max>(min+mid))?(min+mid):(max));\n\n\t\t}\n\t\telse if (b>=r && g<=r)\n\t\t{\n\t\t\tmax=b,mid=r,min=g;\n\t\t\tprintf(\"%lld\\n\",(max>(min+mid))?(min+mid):(max));\n\n\t\t}\n\n\t}\n\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\ntypedef long long ll;\n\nll func(ll max, ll mid, ll min)\n{\n\tif (min<0)\n\t{\n\t\treturn 0;\n\t}\n\telse if (min==0)\n\t{\n\t\treturn mid;\n\t}\n\t\n\telse if (max == mid && min == 1)\n\t{\n\t\treturn max;\n\t}\n\telse if (max == mid && min > 1)\n\t{\n\t\treturn max+(min/2);\n\t}\n\n\telse if (min>(max-mid))\n\t{\n\t\treturn max-mid+func(mid,mid,min-(max-mid));\n\t}\n\t\n}\n\nint main()\n{\n\tll t, r, g, b, i, j, max, mid, min;\n\n\tscanf(\"%lld\", &t);\n\n\twhile (t--)\n\t{\n\t\tscanf(\"%lld %lld %lld\", &r, &g, &b);\n\n\t\tif (r >= g && g >= b)\n\t\t{\n\t\t\tmax = r, mid = g, min = b;\n\t\t}\n\n\t\telse if (r >= b && g <= b)\n\t\t{\n\t\t\tmax = r, mid = b, min = g;\n\t\t}\n\n\t\telse if (g >= r && r >= b)\n\t\t{\n\t\t\tmax = g, mid = r, min = b;\n\t\t}\n\t\telse if (g >= b && r <= b)\n\t\t{\n\t\t\tmax = g, mid = b, min = r;\n\t\t}\n\n\t\telse if (b >= g && g >= r)\n\t\t{\n\t\t\tmax = b, mid = g, min = r;\n\t\t}\n\t\telse if (b >= r && g <= r)\n\t\t{\n\t\t\tmax = b, mid = r, min = g;\n\t\t}\n\n\t\tif (max >= min + mid)\n\t\t{\n\t\t\tprintf(\"%lld\\n\", min + mid);\n\t\t}\n\t\t// else\n\t\t// {\n\t\t// \tll diff = max - mid;\n\n\t\t// \tif (min <= diff)\n\t\t// \t{\n\t\t// \t\tprintf(\"%lld\\n\",max);\n\t\t// \t}\n\t\t// \telse\n\t\t// \t{\n\t\t// \t\tprintf(\"%lld\\n\",max+(min/2));\n\t\t// \t}\n\n\t\t// }\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld\\n\",func(max,mid,min));\n\t\t}\n\t\t\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9441340782122905, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9e81c62c50eb07d87669ec96f3d71423", "bug_code_uid": "5c54dd9f50546477a25f48ad683e408a", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "dfc59ee25f6555af3a4ceb1e78978fad", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n,i,j,f,maxi;\n\tscanf(\"%d\",&n);\n\tchar str[100][101];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%s\",str[i]);\n\t\t\n\t}\n\tmaxi=0;\n\tfor (i=0;i<n-1;i++){\n\t\tf=1;\n\t\tfor (j=i+1;j<n;j++){\n\t\t\tif (strcmp(str[i],str[j])==0){\n\t\t\t\tf=f+1;\n\t\t\t}\n\t\t}\n\t\tif (f>maxi){\n\t\t\tmaxi=f;\n\t\t}\n\t}\n\tprintf(\"%d\",maxi);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n,i,j,f,maxi;\n\tscanf(\"%d\",&n);\n\tchar str[100][101];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%s\",str[i]);\n\t\t\n\t}\n\tif (n==1){\n\t\tprintf(\"1\");\n\t}\n\telse{\n\tmaxi=0;\n\tfor (i=0;i<n-1;i++){\n\t\tf=1;\n\t\tfor (j=i+1;j<n;j++){\n\t\t\tif (strcmp(str[i],str[j])==0){\n\t\t\t\tf=f+1;\n\t\t\t}\n\t\t}\n\t\tif (f>maxi){\n\t\t\tmaxi=f;\n\t\t}\n\t}\n\tprintf(\"%d\",maxi);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9673776662484316, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d6e4a2de0d1f41a5697074a1bd1b2f49", "bug_code_uid": "c9ff9c601a7fc747dadb67305a4eb50f", "src_uid": "6be52845d61d8fbd297d742842acd28e", "apr_id": "df5b342e575c4a03bcc91e45c806e03d", "difficulty": 2000, "tags": ["binary search", "combinatorics", "interactive", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\n \r\nint main(){\r\n\tint t,n,left,right,mid;\r\n\tlong long tmp,rec;\r\n\tint sb,i,j,k;\r\n\r\n\t \r\n\tscanf(\"%d\",&t);\r\n\twhile(t!=0){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tleft=1;right=n;\r\n\t\tprintf(\"? %d %d\\n\",1,n);\r\n\t\tfflush(stdout);\r\n\t\tscanf(\"%lld\",&rec);\r\n\t\twhile(left!=right){\r\n\t\t\tmid=(left+right)/2;\r\n\t\t\tprintf(\"? %d %d\\n\",mid,n);\r\n\t\t\tfflush(stdout);\r\n\t\t\tscanf(\"%lld\",&tmp);\r\n\t\t\tif(rec==tmp) left=mid;\r\n\t\t\telse right=mid;\r\n\t\t\tif(right-left==1) break; \r\n\t\t\t\r\n\t\t}\r\n\t\ti=left;\r\n\t\tprintf(\"? %d %d\\n\",i+1,n);\r\n\t\tfflush(stdout);\r\n\t\tscanf(\"%lld\",&tmp);\r\n\t\tj=i+rec-tmp+1;\r\n\t\tprintf(\"? %d %d\\n\",j-1,n);\r\n\t\tfflush(stdout);\r\n\t\tscanf(\"%lld\",&tmp);\r\n\t\tsb=(int)sqrt(tmp*2);\r\n\t\tif(sb*(sb+1)/2==tmp) k=j+sb;\r\n\t\telse k=j+1+sb;\r\n\t\tprintf(\"! %d %d %d\\n\",i,j,k);\r\n\t\tfflush(stdout);\r\n\t\t\r\n\t\r\n\t\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n\t\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\n \r\nint main(){\r\n\tint t,n,left,right,mid;\r\n\tlong long tmp,rec;\r\n\tint sb,i,j,k;\r\n\r\n\t \r\n\tscanf(\"%d\",&t);\r\n\twhile(t!=0){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tleft=1;right=n;\r\n\t\tprintf(\"? %d %d\\n\",1,n);\r\n\t\tfflush(stdout);\r\n\t\tscanf(\"%lld\",&rec);\r\n\t\twhile(left!=right){\r\n\t\t\tmid=(left+right)/2;\r\n\t\t\tprintf(\"? %d %d\\n\",mid,n);\r\n\t\t\tfflush(stdout);\r\n\t\t\tscanf(\"%lld\",&tmp);\r\n\t\t\tif(rec==tmp) left=mid;\r\n\t\t\telse right=mid;\r\n\t\t\tif(right-left==1) break; \r\n\t\t\t\r\n\t\t}\r\n\t\ti=left;\r\n\t\tprintf(\"? %d %d\\n\",i+1,n);\r\n\t\tfflush(stdout);\r\n\t\tscanf(\"%lld\",&tmp);\r\n\t\tj=i+rec-tmp+1;\r\n\t\tprintf(\"? %d %d\\n\",j-1,n);\r\n\t\tfflush(stdout);\r\n\t\tscanf(\"%lld\",&tmp);\r\n\t\tsb=(sqrt(1+tmp*8)-1)/2;\r\n\t\tk=j+sb;\r\n\t\t\r\n\t\tprintf(\"! %d %d %d\\n\",i,j,k);\r\n\t\tfflush(stdout);\r\n\t\t\r\n\t\r\n\t\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n\t\r\n}"}
{"similarity_score": 0.9915333960489181, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "407b05785eca49f129b06228196a9595", "bug_code_uid": "148697c7a41ca8d3a10ea3913beb59a5", "src_uid": "573995cbae2a7b28ed92d71c48cd9039", "apr_id": "576d3f89f062909c075ff03d5d266d4b", "difficulty": 1700, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n     int n, a, b, sum = 1, max = 1, i;\n\n     scanf(\"%d %d %d\", &n, &a, &b);\n\n     if (n - a == 1 && a > 0) {\n\t  puts(\"-1\");\n\n\t  return 0;\n     }\n\n     putchar('1');\n\n     if (b == 0) {\n\t  printf(\" 1\");\n\n\t  n--;\n     }\n\n     for (i = 0; i < b; i++) {\n\t  printf(\" %d\", sum + 1);\n\n\t  max = sum + 1;\n\t  sum += sum + 1;\n     }\n\n     for (i = 0; i < a; i++) {\n\t  printf(\" %d\", max + i + 1);\n     }\n\n     for (i = 0; i < n - a - b - 1; i++) {\n\t  printf(\" 1\");\n     }\n\n     puts(\"\");\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n     int n, a, b, sum = 1, max = 1, i;\n\n     scanf(\"%d %d %d\", &n, &a, &b);\n\n     if (n - a == 1 && a > 0) {\n\t  puts(\"-1\");\n\n\t  return 0;\n     }\n\n     putchar('1');\n\n     if (b == 0 && n > 1) {\n\t  printf(\" 1\");\n\n\t  n--;\n     }\n\n     for (i = 0; i < b; i++) {\n\t  printf(\" %d\", sum + 1);\n\n\t  max = sum + 1;\n\t  sum += sum + 1;\n     }\n\n     for (i = 0; i < a; i++) {\n\t  printf(\" %d\", max + i + 1);\n     }\n\n     for (i = 0; i < n - a - b - 1; i++) {\n\t  printf(\" 1\");\n     }\n\n     puts(\"\");\n\n     return 0;\n}\n"}
{"similarity_score": 0.9908735332464146, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e8620102dcb54b0fe7707d7b6b82c713", "bug_code_uid": "5ac1405e711597f8ea16a65ad5fccaf1", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "ee4897b22a0db70e3a058f41acbf452f", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int n,m,i,j,k,z=0,t;\n  scanf(\"%d%d\",&n,&m);\n  t=2*m;\n int a[n][t];\n  for(i=0;i<n;i++)\n  {\n      for(j=0;j<t;j++)\n      {\n          scanf(\"%d\",&a[i][j]);\n      }\n  }\n  for(i=0;i<n;i++)\n  {\n      for(j=0;j<t;j=j+2)\n      {\n          if(a[i][j]==1||a[i][j+1]==1)\n          {\n              z++;\n          }\n      } \n    printf(\"%d\",z);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int n,m,i,j,k,z=0,t;\n  scanf(\"%d%d\",&n,&m);\n  t=2*m;\n int a[n][t];\n  for(i=0;i<n;i++)\n  {\n      for(j=0;j<t;j++)\n      {\n          scanf(\"%d\",&a[i][j]);\n      }\n  }\n  for(i=0;i<n;i++)\n  {\n      for(j=0;j<t;j=j+2)\n      {\n          if(a[i][j]==1||a[i][j+1]==1)\n          {\n              z++;\n          }\n      }\n  }\n\n\n    printf(\"%d\",z);\n    return 0;\n}\n"}
{"similarity_score": 0.9936974789915967, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "818378a8c87c2fd042a40b011ec8467f", "bug_code_uid": "85c469b70163d00fc5cd081432eb8a49", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "af5c3f23ab0ba58d3af397c26a7426ed", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\nint main(void) {\n    int n,ar[100002][2],x[100000],y[100000],i;\n    for(i=0;i<100001;i++)\n    {\n        x[i]=0;\n        y[i]=0;\n    }\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&ar[i][0],&ar[i][1]);\n        x[ar[i][0]]++;\n        y[ar[i][1]]++;\n    }\n    for(i=0;i<n;i++)\n    {\n        ar[i][0]=n-1+x[ar[i][1]];\n        ar[i][1]=(n-1)*2-ar[i][0];\n        printf(\"%d %d\\n\",ar[i][0],ar[i][1]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\nint main(void) {\n    int n,ar[100002][2],x[100003],y[100003],i;\n    for(i=0;i<100003;i++)\n    {\n        x[i]=0;\n        y[i]=0;\n    }\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&ar[i][0],&ar[i][1]);\n        x[ar[i][0]]++;\n        y[ar[i][1]]++;\n    }\n    for(i=0;i<n;i++)\n    {\n        ar[i][0]=n-1+x[ar[i][1]];\n        ar[i][1]=(n-1)*2-ar[i][0];\n        printf(\"%d %d\\n\",ar[i][0],ar[i][1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9830148619957537, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a2c73741dd834ab912ccb03c43327f5a", "bug_code_uid": "e64dbf011e0660a490a82192890b7693", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "35249b384570d8195a37f31e82563128", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint check_solved(char task, char solved[100])\n{\n  int i = 0;\n\n  while(solved[i] != '\\0')\n  {\n    if(solved[i] == task)\n    {\n      return 1;\n    }\n    i++;\n  }\n  return 0;\n}\n\nint main()\n{\n  int i, j, k, tests, days, flag;\n  char task[100], solved[100], current;\n\n  scanf(\"%d\", &tests);\n\n  for (i = 0; i < tests; i++)\n  {\n    scanf(\"%d\", &days);\n    scanf(\"%s\", task);\n\n    current = task[0];\n    k = 0;\n    flag = 0;\n    for (j = 1; j < days; j++)\n    {\n      //printf(\"task is %c\\n\", task[j]);\n      if (current != task[j])\n      {\n        solved[k] = current;\n        k++;\n        current = task[j];\n        if (check_solved(current, solved))\n        {\n          //printf(\"%c in solved\\n\", current);\n          flag = 1;\n          break;\n        }\n        //printf(\"%c not in solved\\n\", current);\n      }\n    }\n    if (flag)\n    {\n      printf(\"NO\\n\");\n    }\n    else\n    {\n      printf(\"YES\\n\");\n    }\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint check_solved(char task, char solved[100], int k)\n{\n  int i = 0;\n\n  while(i < k)\n  {\n    if(solved[i] == task)\n    {\n      return 1;\n    }\n    i++;\n  }\n  return 0;\n}\n\nint main()\n{\n  int i, j, k, tests, days, flag;\n  char task[100], solved[100], current;\n\n  scanf(\"%d\", &tests);\n\n  for (i = 0; i < tests; i++)\n  {\n    scanf(\"%d\", &days);\n    scanf(\"%s\", task);\n\n    current = task[0];\n    k = 0;\n    flag = 0;\n    for (j = 1; j < days; j++)\n    {\n      //printf(\"task is %c\\n\", task[j]);\n      if (current != task[j])\n      {\n        solved[k] = current;\n        k++;\n        current = task[j];\n        if (check_solved(current, solved, k))\n        {\n          //printf(\"%c in solved\\n\", current);\n          flag = 1;\n          break;\n        }\n        //printf(\"%c not in solved\\n\", current);\n      }\n    }\n    if (flag)\n    {\n      printf(\"NO\\n\");\n    }\n    else\n    {\n      printf(\"YES\\n\");\n    }\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.9487951807228916, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "3a4852212b503d353e6531a926fbad63", "bug_code_uid": "f216e4b86a3fbd468c38ffda739ccc08", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "7dc4f8c05bbfbb1e2ac65bd715c02167", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,h,a;\n    int i,count=0,count1=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&h);\n    for(i=0;i<n;i++){\n\n    scanf(\"%d\",&a);\n        if(a<=h){\n            count++;\n        }\n        else if(a>h){\n            count1=count1+2;\n            printf(\"%d\\n\",count1);\n        }\n    }\n\n\n\n\n    return 0;\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,h,a;\n    int i,count=0,count1=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&h);\n    for(i=0;i<n;i++){\n\n    scanf(\"%d\",&a);\n        if(a<=h){\n            count++;\n        }\n        else if(a>h){\n\n            count1=count1+2;\n        }\n    }\n    printf(\"%d\\n\",count+count1);\n\n\n    return 0;\n\n\n\n\n\n}\n"}
{"similarity_score": 0.5391591096455071, "equal_cnt": 31, "replace_cnt": 19, "delete_cnt": 3, "insert_cnt": 9, "fix_ops_cnt": 31, "lang": "GNU C11", "fix_code_uid": "aabe8f9042efc7fb3ecfad3622243428", "bug_code_uid": "b2eea13250824eac33475391c8f5cdaf", "src_uid": "fefec879efd4f524de00684adee7cd19", "apr_id": "d3d3b9084767752d465d1c70e7f23cd3", "difficulty": 800, "tags": ["brute force", "dfs and similar", "dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int s[2][101];\n    int n,x;\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        int k=0;\n        scanf(\"%d\",&x);\n        for(int i=0;i<2;i++)\n            for(int j=0;j<x;j++)\n            scanf(\"%d\",&s[i][j]);\n            for(int z=0;z<x;z++)\n            {\n                if(s[0][z]==1&&s[1][z]==1)\n                    k++;\n            }\n            if(k==0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n            n--;\n    }\n    return 0;\n}\n\n\t  \t  \t\t\t \t\t     \t \t\t\t\t\t  \t \t\t\t", "fixed": "#include <stdio.h>\n#define N 101\nint main()\n{\n    int t;\n    char a[2][N];\n    while(scanf(\"%d\", &t)!=EOF)\n    {\n        int n, i, j, f;\n        for(i=0;i<t;i++)\n        {\n            scanf(\"%d\", &n);\n            for(j=0;j<2;j++)\n            {\n                scanf(\"%s\", a[j]);\n            }\n            for(j=1;j<n;j++)\n            {\n                f=1;\n                if(a[0][j]=='1'&&a[1][j]=='1')\n                {\n                    f=0;\n                    break;\n                }\n            }\n            if(f!=0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n\t\t\t \t\t\t\t \t\t \t\t \t \t \t  \t    \t"}
{"similarity_score": 0.9961202715809894, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bbe53a503669cebc435dee596a905769", "bug_code_uid": "392542f7f8fd6050faed7f0cadb9f2e0", "src_uid": "8c2a6a29dc238b55d0bc99d7e203f1bf", "apr_id": "e713fe7cad006dc2428f71a543fc377e", "difficulty": 1800, "tags": ["dp", "implementation", "greedy", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int n;\n\n    scanf(\"%d\", &n);\n    char student[n + 1];\n    int candy[n];\n    scanf(\"%s\", student + 1);\n\n    candy[0] = 1;\n    int bigger = 0;\n    for(int i = 1; i < n; i++)\n    {\n        if(student[i] == 'L')\n        {\n            candy[i] = 1;\n            if(candy[i - 1] == 1)\n                for(int j = i - 1; j >= bigger ; j--)\n                {\n                    if(candy[j] <= candy[j + 1] && student[j] != '=')\n                        candy[j]++;\n                    if(student[j] == '=')\n                        candy[j] = candy[j + 1];\n                }\n        }\n        else if(student[i] == '=')\n        {\n            candy[i] = candy[i - 1];\n        }\n        else if(student[i] == 'R')\n        {\n            bigger = i;\n            candy[i] = candy[i - 1] + 1;\n        }\n    }\n\n    for(int i = 0; i < n; i++)\n        printf(\"%d \", candy[i]);\n\n    return 0;\n}\n", "fixed": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int n;\n\n    scanf(\"%d\", &n);\n    char student[n + 1];\n    int candy[n];\n    scanf(\"%s\", student + 1);\n\n    candy[0] = 1;\n    int bigger = 0;\n    for(int i = 1; i < n; i++)\n    {\n        if(student[i] == 'L')\n        {\n            candy[i] = 1;\n            if(candy[i - 1] == 1)\n                for(int j = i - 1; j >= bigger ; j--)\n                {\n                    if(candy[j] <= candy[j + 1] && student[j + 1] != '=')\n                        candy[j]++;\n                    if(student[j + 1] == '=')\n                        candy[j] = candy[j + 1];\n                }\n        }\n        else if(student[i] == '=')\n        {\n            candy[i] = candy[i - 1];\n        }\n        else if(student[i] == 'R')\n        {\n            bigger = i;\n            candy[i] = candy[i - 1] + 1;\n        }\n    }\n\n    for(int i = 0; i < n; i++)\n        printf(\"%d \", candy[i]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9972948602344455, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "047112e6cfc248fc9287c4f6f9febf4b", "bug_code_uid": "0068852d7faf6b1b4331273a4571b6e3", "src_uid": "9f095a5f5b39d8c2f99c4162f2d7c5ff", "apr_id": "e20bd81c1dac76025f8881d96afaa051", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAXN 200000\n\nchar s[MAXN];\nint p[26], u[26];\n\nint main() {\n    int n, k;\n    scanf(\"%d %d %s\", &n, &k, s);\n    for (int i = 0; i < n; i++) {\n        p[s[i] - 'a']++;\n        u[s[i] - 'a']++;\n    }\n    int j = 0;\n    while (k > 0) {\n        if (k > u[j]) {\n            k -= u[j];\n            u[j] = 0;\n        } else {\n            u[j] -= k;\n            k = 0;\n        }\n        j++;\n    }\n    for (int i = 0; i < n; i++) {\n        if (p[s[i] - 'a'] <= u[s[i] - 'a'])\n            putchar(s[i]);\n        p[s[i] - 'a']--;\n    }\n}", "fixed": "#include <stdio.h>\n\n#define MAXN 1000000\n\nchar s[MAXN];\nint p[26], u[26];\n\nint main() {\n    int n, k;\n    scanf(\"%d %d %s\", &n, &k, s);\n    for (int i = 0; i < n; i++) {\n        p[s[i] - 'a']++;\n        u[s[i] - 'a']++;\n    }\n    int j = 0;\n    while (k > 0) {\n        if (k > u[j]) {\n            k -= u[j];\n            u[j] = 0;\n        } else {\n            u[j] -= k;\n            k = 0;\n        }\n        j++;\n    }\n    for (int i = 0; i < n; i++) {\n        if (p[s[i] - 'a'] <= u[s[i] - 'a'])\n            putchar(s[i]);\n        p[s[i] - 'a']--;\n    }\n}"}
{"similarity_score": 0.9917981072555205, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8e5de8b4c87cc56c538fb425c6b62db2", "bug_code_uid": "cbf86a18c561fc657ddfd1cddb616ebb", "src_uid": "b0b4cadc46f9fd056bf7dc36d1cf51f2", "apr_id": "f3867cd3ec290c3eb56ffb55e5f13929", "difficulty": 1200, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint coprime(int a,int b);\nint num(int a,int b);\nint mcd(int a, int b);\n\nint main(){\n    int n,i,k=0;\n    scanf(\"%d\",&n);\n    n=n*2;\n    int a[n];\n    memset(a,0,n);\n    for (i=0;i<n;i=i+2){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-2;i=i+2){\n        if (!coprime(a[i],a[i+2])){\n            a[i+1]=1;\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    i=0;\n    while (i<n-1){\n        printf(\"%d \",a[i]);\n        if (a[i+1]!=0) i++;\n        else i=i+2;\n    }\n}\nint coprime(int a,int b){\n    if (mcd(a,b)==1) return 1;\n    return 0;\n}\n\nint mcd (int a , int b){\n    int r;\n    if (a<b){\n        r=a;\n        a=b;\n        b=r;\n    }\n    do{\n        r=a%b;\n        a=b;\n        b=r;\n    }while (r!=0);\n    return a;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint coprime(int a,int b);\nint num(int a,int b);\nint mcd(int a, int b);\n\nint main(){\n    int n,i,k=0;\n    scanf(\"%d\",&n);\n    n=n*2;\n    int a[n];\n    memset(a,0,sizeof(int)*n);\n    for (i=0;i<n;i=i+2){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-2;i=i+2){\n        if (!coprime(a[i],a[i+2])){\n            a[i+1]=1;\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    i=0;\n    while (i<n-1){\n        printf(\"%d \",a[i]);\n        if (a[i+1]!=0) i++;\n        else i=i+2;\n    }\n}\nint coprime(int a,int b){\n    if (mcd(a,b)==1) return 1;\n    return 0;\n}\n\nint mcd (int a , int b){\n    int r;\n    if (a<b){\n        r=a;\n        a=b;\n        b=r;\n    }\n    do{\n        r=a%b;\n        a=b;\n        b=r;\n    }while (r!=0);\n    return a;\n}\n"}
{"similarity_score": 0.9958711808422791, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1063914b99568c93ee58d6b05304d8c0", "bug_code_uid": "81dd4e2502d2a1f3d618962f3684c870", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "dd31963a3ff11077d05af2d7dd7c5a49", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#define TYPE int\n#define SIZE 100000\n#define sf scanf\n#define pf printf\n#include <stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n \nint main(void) {\n    TYPE n,arr[SIZE]={0},i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {scanf(\"%d\",&arr[i]);}\nint ex=0;\n    for(i=0;i<n;i++)\n    {\n        if(i<n-1 && arr[i]>arr[i+1])ex++;\n        else if(i==n-1 && arr[n-1]>arr[0])ex++; \n        }\n        if(ex>1){pf(\"-1\\n\"); exit(0);}\n        else if(ex==1 && arr[n-1]>arr[0]){pf(\"0\\n\");exit(0);}\nfor(i=0;i<n;i++)\n    {\n        if(arr[i]>arr[i+1])break;\n        }\ni++; pf(\"%d\\n\",n-i);\n    return 0;\n}", "fixed": "#define TYPE int\n#define SIZE 100000\n#define sf scanf\n#define pf printf\n#include <stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n \nint main(void) {\n    TYPE n,arr[SIZE]={0},i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {scanf(\"%d\",&arr[i]);}\nint ex=0;\n    for(i=0;i<n;i++)\n    {\n        if(i<n-1 && arr[i]>arr[i+1])ex++;\n        else if(i==n-1 && arr[n-1]>arr[0])ex++; \n        }\n        if(ex>1){pf(\"-1\\n\"); exit(0);}\n        else if(!ex||ex==1 && arr[n-1]>arr[0]){pf(\"0\\n\");exit(0);}\nfor(i=0;i<n;i++)\n    {\n        if(arr[i]>arr[i+1])break;\n        }\ni++; pf(\"%d\\n\",n-i);\n    return 0;\n}"}
{"similarity_score": 0.9963547995139733, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1de77265eb2ed7b898f62d1871ff7ade", "bug_code_uid": "2ef2cb9fff7e9034c46c0fc5862103dc", "src_uid": "cb24509580ff9b2f1a11103a0e4cdcbd", "apr_id": "f6c539b22ddd8eb6b93e72d3bd243ad4", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,teams[4],i,final1,final2,lost1,lost2;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        for(i=0;i<4;i++)\r\n        {\r\n            scanf(\"%d\",&teams[i]);\r\n        }\r\n        {\r\n        if(teams[0]>teams[1])\r\n        {\r\n            final1=teams[0];\r\n            lost1=teams[1];\r\n        }\r\n        else if(teams[1]>teams[0])\r\n        {\r\n            final1=teams[1];\r\n            lost1=teams[0];\r\n        }\r\n        if (teams[2]>teams[3])\r\n        {\r\n            final2=teams[2];\r\n            lost2=teams[3];\r\n\r\n        }\r\n        else if(teams[3]<teams[2])\r\n        {\r\n            final2=teams[3];\r\n            lost2=teams[2];\r\n        }\r\n        if(final1 > lost2 && final2>lost1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,teams[4],i,final1,final2,lost1,lost2;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        for(i=0;i<4;i++)\r\n        {\r\n            scanf(\"%d\",&teams[i]);\r\n        }\r\n        {\r\n        if(teams[0]>teams[1])\r\n        {\r\n            final1=teams[0];\r\n            lost1=teams[1];\r\n        }\r\n        else if(teams[1]>teams[0])\r\n        {\r\n            final1=teams[1];\r\n            lost1=teams[0];\r\n        }\r\n        if (teams[2]>teams[3])\r\n        {\r\n            final2=teams[2];\r\n            lost2=teams[3];\r\n\r\n        }\r\n        else if(teams[5]>teams[2])\r\n        {\r\n            final2=teams[3];\r\n            lost2=teams[2];\r\n        }\r\n        if(final1 > lost2 && final2>lost1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n\r\n}"}
{"similarity_score": 0.7191011235955056, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "6c5eec8ae79f1ccae53b2da86e8dc5a8", "bug_code_uid": "dcf92570445c0c3ec278100391778071", "src_uid": "31d803d886c47fe681bdcfbe6c74f090", "apr_id": "4444b85d07c5b193740e2a102f13e533", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nchar a[200002];\nint main()\n{\n    int i,j=0,k;\n    gets(a);\n    k=strlen(a);\n    char b[k];\n    for(i=0;i<k;i++)\n    {\n        if(a[i]==a[i+1]&&a[i+1]==a[i+2])\n            continue;\n      else if(a[i]==a[i+1]&&a[i+2]==a[i+3]&&a[i+2]!='\\0'&&a[i]!='\\0'&&a[i+1]!='\\0'&&a[i+3]!='\\0')\n        {\n        b[j]=a[i];\n        b[j+1]=a[i+1];\n        b[j+2]=a[i+2];\n        j+=2;\n        i+=2;\n        }\n        else\n            {b[j]=a[i];\n        j++;}\n    }\n    for(i=0;i<j;i++)\n        printf(\"%c\",b[i]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nchar a[200002];\nint main()\n{\n    int i,j=0,k;\n    gets(a);\n    k=strlen(a);\n    char b[k],c[k];\n    for(i=0;i<k;i++)\n    {\n        if(a[i]==a[i+1]&&a[i+1]==a[i+2])\n            continue;\n        else\n            {b[j]=a[i];\n        j++;}\n    }\n\n    int r=0;\n    for(i=0;i<j;i++)\n    {\n        if(b[i]==b[i+1]&&b[i+2]==b[i+3]&&b[i+2]!='\\0'&&b[i]!='\\0'&&b[i+1]!='\\0'&&b[i+3]!='\\0')\n        {\n            c[r]=b[i];\n            c[r+1]=b[i+1];\n            c[r+2]=b[i+2];\n            r+=2;\n            i+=2;\n        }\n        else\n        {\n            c[r]=b[i];\n            r++;\n        }\n    }\n    for(i=0;i<r;i++)\n        printf(\"%c\",c[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.1713961407491487, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "95158622d6a4c807d8d6996f91a221fa", "bug_code_uid": "8643d11a98454664eb3d05e2758b0609", "src_uid": "b0b4cadc46f9fd056bf7dc36d1cf51f2", "apr_id": "c2655dc4ac9f67ccca5037edcdb97578", "difficulty": 1200, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n     long long int v[100010];\n     long long int mat[100010][3]={0};\n     long long int cont[100010]={0};\n     long long int sum[100010]={0};\n  int main()\n  {\n       long long int a,b,N,M,i,k;\n       scanf(\"%I64d %I64d %I64d\",&N,&M,&k);\n      for(i=0;i<N;i++)\n           scanf(\"%I64d\",&v[i]);\n     for(i=0;i<M;i++)\n           scanf(\"%I64d %I64d %I64d\",&mat[i][0],&mat[i][1],&mat[i][2]);///construye la matriz de valores\n     for(i=0;i<k;i++){ /// cantidad de veces a multiplicar\n        scanf(\"%I64d %I64d\",&a,&b);\n            cont[a-1]++;\n            cont[b]--;\n     }\n      for(i=1;i<M;i++)/// cantidad de veces a multiplicar\n            cont[i]=cont[i]+cont[i-1];\n     for(i=0;i<M;i++){\n          mat[i][2]=mat[i][2]*cont[i];}\n     for(i=0;i<M;i++){\n         sum[mat[i][0]-1]+=mat[i][2];\n         sum[mat[i][1]]+=-mat[i][2];\n        }\n      for(i=1;i<N;i++)\n        sum[i]=sum[i]+sum[i-1];\n      for(i=0;i<N;i++)\n           printf(\"%I64d \",v[i]+sum[i]);\n      return 0;\n  }\n", "fixed": "#include<stdio.h>\n long long int v[100100];//disminuir\n long long int mat[100100]={0};\n  long long int gtc(long long int a,long long int b );\n int main(){\n     int N,i,j=0,cont=0;\n     scanf(\"%d\",&N);\n     for(i=0;i<N;i++){\n        scanf(\"%I64d\",&v[i]);\n     }\n     mat[0]=v[0];\n      for(i=0;i<N-1;i++){\n         if(gtc(v[i],v[i+1])!=1){\n             mat[++j]=1;\n             mat[++j]=v[i+1];\n             ++cont;\n          }else\n          mat[++j]=v[i+1];\n   }\n     printf(\"\\n%d\\n\",cont);\n    for(i=0;i<=j;i++)\n        printf(\"%I64d \",mat[i]);\n     return 0;\n }\n  long long int gtc(long long int a,long long int b ){\n        if(b<=a && a%b==0)\n            return b;\n        else if (a<b)\n            return gtc(b,a);\n        else\n            return gtc(b,a%b);\n  }\n"}
{"similarity_score": 0.18803418803418803, "equal_cnt": 21, "replace_cnt": 10, "delete_cnt": 7, "insert_cnt": 4, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "5b4cd7b62d9392a40874e8b9cc61092a", "bug_code_uid": "931ba34bdfe30ee58ab3e98ec2991db0", "src_uid": "a544dd9fd96379f66a960de6f973dd50", "apr_id": "96c19dd235e6e9d5ee496c00a6533ac5", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <cstdio>\n#include <iostream>\n#include<algorithm>\nusing namespace std;\nint main()\n{\n    int T;\n    int n;\n    int a[55];\n\n    \n        cin >>T;\n        while(T--)\n        {\n            scanf(\"%d\",&n);\n            for(int i=0;i<n;i++)\n            {\n                scanf(\"%d\",&a[i]);\n            }\n            int res=0,r;\n            for(int i=0;i<n;i++)\n            {\n                if(i!=n-1)\n                {\n                    int l=min(a[i],a[i+1]);\n                    r=max(a[i],a[i+1]);\n                    if(1.0*r/l<=2.0)\n                        continue;\n                    while(1.0*r/l>2.0) res++;l*=2;\n                }\n            }\n            printf(\"%d\\n\",res);\n        }\n    }\n\n\t     \t  \t      \t\t\t \t \t\t\t    \t", "fixed": "#include<stdio.h>\nint kmin(int a,int b)\n{\n    if(a<b)\n        return a;\n    else return b;\n}\nint kmax(int a,int b)\n{\n    if(a<b)\n        return b;\n    else return a;\n}\nint main()\n{\n    int t,n,i,j,a[50],sum,max,min;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        sum=0;\n        scanf(\"%d\",&n);\n        for(j=0;j<=n-1;j++)\n            scanf(\"%d\",&a[j]);\n        for(j=0;j<=n-2;j++)\n        {\n            min=kmin(a[j],a[j+1]);\n            max=kmax(a[j],a[j+1]);\n            while(max>2*min)\n            {\n                min*=2;\n                sum++;\n            }\n        }\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}\n \t   \t \t \t \t \t\t \t\t \t\t\t \t  \t \t \t"}
{"similarity_score": 0.9598741148701809, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "62eaa482298de512e2b73c6c2afc7b4a", "bug_code_uid": "9c1605cdda5379ab6fc8fd51b53ca5ac", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "ce8f169533b9f7d9a072fde66b9a40bf", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[105],b[105];\n    int c,s,j,i,max=0,min=50000,ck=50000;\n    scanf(\"%d %d\",&c,&s);\n    for(i=0;i<c;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i] > max)\n        {\n            max=a[i];\n        }\n        if(a[i] < min)\n        {\n            min=a[i];\n        }\n    }\n    for(i=0;i<s;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        if(b[i] < ck)\n        {\n            ck=b[i];\n        }\n\n    }\n    if(max >=ck || 2*min>=ck)\n    {\n        printf(\"-1\");\n    }\n    else if(2*min>=max)\n         printf(\"%d\",2*min);\n    else\n        printf(\"%d\",ck-1);\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[105],b[105];\n    int c,s,j,i,max=0,min=50000,ck=50000;\n    scanf(\"%d %d\",&c,&s);\n    for(i=0;i<c;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i] > max)\n        {\n            max=a[i];\n        }\n        if(a[i] < min)\n        {\n            min=a[i];\n        }\n    }\n    for(i=0;i<s;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        if(b[i] < ck)\n        {\n            ck=b[i];\n        }\n\n    }\n    if(max >=ck || 2*min>=ck)\n    {\n        printf(\"-1\");\n    }\n    else if(2*min>=max)\n         printf(\"%d\",2*min);\n    else if(2*min < max)\n        printf(\"%d\",max);\n    else\n        printf(\"%d\",ck-1);\n\n}"}
{"similarity_score": 0.3747108712413261, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "9a8ce12d82e47617eebcf80d663b7583", "bug_code_uid": "a767c64fc62238583a81ee0112e05ca5", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "cd80c0a8ca045fefac562a4374d9db16", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,i,j,count;\n    __int64 *data;\n    while(scanf(\"%d\", &n)  != EOF)\n    {\n        data = (__int64 *)malloc(n*sizeof(__int64));\n        for(i = 0; i < n; i ++)\n            scanf(\"%I64d\",&data[i]);\n        for(i = 0; i < n; i ++)\n        {\n            count = 0;\n            for(j = 2;j < data[i]; j ++)\n            {\n                if(data[i] % j == 0)\n                {\n                    count++;\n                    if(count > 2) break;\n                }\n            }\n\n            if(count == 1) printf(\"YES\\n\");\n            else printf(\"NO\\n\");\n        }\n\n    }\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nint isprime(int n)\n{\n    int i;\n    if(n == 2) return 1;\n    for(i = 2; i*i <= n; i ++)\n        if(n % i == 0) return 0;\n    return 1;\n}\n\nint main()\n{\n    int n,i;\n    int T;\n    long long x;\n    long long temp;\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i ++){\n        scanf(\"%I64d\", &x);\n\n        if(x == 1) printf(\"NO\\n\");\n\n        else {\n            temp = (long long)sqrt(x);\n            if(temp*temp == x){\n               \n               if(isprime(temp)) printf(\"YES\\n\");\n               else printf(\"NO\\n\");\n            }\n            else printf(\"NO\\n\");\n         }\n\n     }\n    return 0;\n}\n"}
{"similarity_score": 0.9563878912262699, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d796e930f90014ee67ff338df907d117", "bug_code_uid": "0c42827388be305e45fe4250acad5a1a", "src_uid": "926ec28d1c80e7cbe0bb6d209e664f48", "apr_id": "3da4957bd6c36127eb14c2b24cf08d83", "difficulty": 1500, "tags": ["data structures", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define SZ 200010\nint range[SZ], vals[SZ];\nvoid getnum(int (*v)) {\n    char c=getchar(); int flag=0;\n    *v = 0;\n    while(c < '0' || c > '9') { if(c == '-') flag = 1; c = getchar(); }\n    while(c >= '0' && c <= '9') *v = *v * 10 + (c - '0'), c = getchar();\n    if(flag) *v = -*v;\n};\nint cmp(const void* a, const void* b) {\n  int va = *(const int*) a;\n  int vb = *(const int*) b;\n  return (va < vb) - (va > vb);\n}\nint main() {\n    int acc, n, q, left, right;\n    getnum(&n);\n    for(int i = 0; i < n; i++) getnum(&vals[i]);\n    qsort(vals, n, sizeof(int), cmp);\n    \n    for(int i = 0; i < q; i++) {\n        getnum(&left); getnum(&right);\n        range[left-1]++; range[right]--;\n    }\n    \n    for(int i = 0, acc = 0; i < n; i++) range[i] = (acc += range[i]);\n    qsort(range, n, sizeof(int), cmp);\n    \n    unsigned long long ans = 0;\n    for(int i = 0; i < n; i++) ans += range[i] * 1ll * vals[i];\n    \n    printf(\"%I64d\\n\", ans);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define SZ 200010\nint range[SZ], vals[SZ];\nvoid getnum(int (*v)) {\n    char c=getchar(); int flag=0;\n    *v = 0;\n    while(c < '0' || c > '9') { if(c == '-') flag = 1; c = getchar(); }\n    while(c >= '0' && c <= '9') *v = *v * 10 + (c - '0'), c = getchar();\n    if(flag) *v = -*v;\n};\nint cmp(const void* a, const void* b) {\n  int va = *(const int*) a;\n  int vb = *(const int*) b;\n  return (va < vb) - (va > vb);\n}\nint main() {\n    int i, acc, n, q, left, right;\n    getnum(&n); getnum(&q);\n    for(i = 0; i < n; i++) getnum(&vals[i]);\n    qsort(vals, n, sizeof(int), cmp);\n    \n    for(i = 0; i < q; i++) {\n        getnum(&left); getnum(&right);\n        range[left-1]++; range[right]--;\n    }\n    \n    for(i = 0, acc = 0; i < n; i++) range[i] = (acc += range[i]);\n    qsort(range, n, sizeof(int), cmp);\n    \n    unsigned long long ans = 0;\n    for(i = 0; i < n; i++) ans += range[i] * 1ll * vals[i];\n    \n    printf(\"%I64d\\n\", ans);\n}\n"}
{"similarity_score": 0.9971264367816092, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b236a66480ab041469c1d397aea803ef", "bug_code_uid": "089920f7619db96a1c1b3f0ecc33fa23", "src_uid": "c02357c4d959e300f970f66f9b3107eb", "apr_id": "8fe10db90daa48ff78561f7e3356c1f6", "difficulty": 800, "tags": ["games", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main(){\r\n    int Case,i,index=0;\r\n    char output[1000][50]={0};\r\n    char s[50]={0};\r\n    scanf(\"%d\",&Case);\r\n    while(Case--){\r\n        scanf(\"%s\",s);\r\n        i=0;\r\n        while(s[i]<='z'&&s[i]>='a'){\r\n            if(i%2){\r\n                if(s[i]!='z')\r\n                s[i]='z';\r\n                else\r\n                s[i]='y';\r\n            }\r\n            else{\r\n                if(s[i]!='a')\r\n                s[i]='a';\r\n                else\r\n                s[i]='b';\r\n            }\r\n            i++;\r\n        }\r\n        strcpy(output[index++],s);\r\n    }\r\n    for(i=0;i<index;i++){\r\n        printf(\"%s\\n\",output[i]);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main(){\r\n    int Case,i,index=0;\r\n    char output[1000][52]={0};\r\n    char s[55]={0};\r\n    scanf(\"%d\",&Case);\r\n    while(Case--){\r\n        scanf(\"%s\",s);\r\n        i=0;\r\n        while(s[i]<='z'&&s[i]>='a'){\r\n            if(i%2){\r\n                if(s[i]!='z')\r\n                s[i]='z';\r\n                else\r\n                s[i]='y';\r\n            }\r\n            else{\r\n                if(s[i]!='a')\r\n                s[i]='a';\r\n                else\r\n                s[i]='b';\r\n            }\r\n            i++;\r\n        }\r\n        strcpy(output[index++],s);\r\n    }\r\n    for(i=0;i<index;i++){\r\n        printf(\"%s\\n\",output[i]);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9960348929421095, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "444ecac8e344d6cd14a659a903ac1a9a", "bug_code_uid": "01c1ef6c3c30a87e2bcf879bc4a0ee18", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "9cb863e7c23c813ea19cec563f00b7b1", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n,i,sum1,sum2,j,s,l,count,ss;\n    int a[n];\n    int b[1000];\n    scanf(\"%d\",&t);\n    ss=0;\n    for(i=0;i<t;i++)\n    {\n        sum1=0;\n        sum2=0;\n        count=0;\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++)\n        {\n            a[j]=pow(2,(j+1));\n        }\n        j=0;\n            while(j<(n/2)-1)\n                {sum1=sum1+a[j];\n                j++;}\n            sum1=sum1+a[n-1];\n        for(l=n/2-1;l<n-1;l++)\n            {sum2=sum2+a[l];\n            }\n            b[ss]=(sum1-sum2);\n        ss++;\n    }\n    for(ss=0;ss<t;ss++)\n    printf(\"%d\\n\",b[ss]);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n,i,sum1,sum2,j,s,l,count,ss;\n    int a[1000];\n    int b[1000];\n    scanf(\"%d\",&t);\n    ss=0;\n    for(i=0;i<t;i++)\n    {\n        sum1=0;\n        sum2=0;\n        count=0;\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++)\n        {\n            a[j]=pow(2,(j+1));\n        }\n        j=0;\n            while(j<(n/2)-1)\n                {sum1=sum1+a[j];\n                j++;}\n            sum1=sum1+a[n-1];\n        for(l=n/2-1;l<n-1;l++)\n            {sum2=sum2+a[l];\n            }\n            b[ss]=(sum1-sum2);\n        ss++;\n    }\n    for(ss=0;ss<t;ss++)\n    printf(\"%d\\n\",b[ss]);\n}\n"}
{"similarity_score": 0.7186147186147186, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "179180564d949a05a88278ac947926eb", "bug_code_uid": "5b46c7149a14e8d22c06de9cd0074157", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "f093120d593f42e439a098113d47ce13", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h> \n#include <string.h> \n\nint main(){\n\tint t, n;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%d\", &n);\n\t\tif(n == 1) printf(\"1\\n\");\n\t\telse if(n == 3) printf(\"2\\n\");\n\t\telse printf(\"%d\\n\", n / 2);\n\t}\n\t\n\t\t\n\treturn 0;\n}\n\n\n\n\n\t", "fixed": "#include <stdio.h> \n#include <string.h> \n\nint main(){\n\tint t, n;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%d\", &n);\n\t\tif(n % 2 == 0) printf(\"%d\\n\", n / 2);\n\t\telse if(n % 2 == 1) printf(\"%d\\n\", n / 2 + 1);\n\t}\n\t\n\t\t\n\treturn 0;\n}\n\n\n\n\n\t"}
{"similarity_score": 0.9054163298302345, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "cf177d0925d60f73705eec7cea949dac", "bug_code_uid": "7ebcc75d047d07a49ca2923c3c215186", "src_uid": "c1c9815e2274a1f147eab7bd8ee2d574", "apr_id": "a2a6b251af1eac4b9b338d463629767b", "difficulty": 1500, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, m, s, f;\n\tscanf(\"%d %d %d %d\", &n, &m ,&s, &f);\n\tint i=0, t=0, l, r, pass=0, scanned=0, dir=0;\n\tif(s<f) dir=1;\n\telse dir=-1;\n\twhile(scanned<m && s!=f)\n\t{\n\t\tscanned++;\n\t\tscanf(\"%d %d %d\", &t, &l, &r);\n\t\tpass++;\n\t\twhile(pass<t && s!=f)\n\t\t{\n\t\t\tpass++;\n\t\t\tif(dir==1)printf(\"R\"); \n\t\t\telse printf(\"L\");\n\t\t\ts+=dir;\n\t\t}\n\t\tif(pass==t && s!=f)\n\t\t{\n\t\t\tif(dir==1)\n\t\t\t{\n\t\t\t\tif((l<=s && s<=r)||(l<=s+1 && s+1<=r)) printf(\"X\");\n\t\t\t\telse {printf(\"R\"); s++;}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((l<=s && s<=r)||(l<=s-1 && s-1<=r)) printf(\"X\");\n\t\t\t\telse {printf(\"L\"); s--;}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, m, s, f;\n\tscanf(\"%d %d %d %d\", &n, &m ,&s, &f);\n\tint i=0, t=0, l, r, pass=0, scanned=0, dir=0;\n\tif(s<f) dir=1;\n\telse dir=-1;\n\twhile(s!=f)\n\t{\n\t\tif(scanned<m)\n\t\t{\n\t\t\tscanned++;\n\t\t\tscanf(\"%d %d %d\", &t, &l, &r);\n\t\t}\n\t\tpass++;\n\t\twhile(pass!=t && s!=f)\n\t\t{\n\t\t\tpass++;\n\t\t\tif(dir==1) printf(\"R\"); \n\t\t\telse printf(\"L\");\n\t\t\ts+=dir;\n\t\t}\n\t\tif(pass==t && s!=f)\n\t\t{\n\t\t\tif(dir==1)\n\t\t\t{\n\t\t\t\tif((l<=s && s<=r)||(l<=s+1 && s+1<=r)) printf(\"X\");\n\t\t\t\telse {printf(\"R\"); s++;}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((l<=s && s<=r)||(l<=s-1 && s-1<=r)) printf(\"X\");\n\t\t\t\telse {printf(\"L\"); s--;}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.548683404776485, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ad76626bd4b8483f89f11d2d26fa90e6", "bug_code_uid": "e9f91848c86af9a705f015b84ed25b3e", "src_uid": "98a8fc06e8265bbf9c16ee3c7b9d0223", "apr_id": "ca5801fd758d3161e459b09abc100906", "difficulty": 900, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main(void){\n\tint q;\n\tscanf(\"%d\", &q);\n\n\twhile(q--){\n\t\tint a, b, c, ret = 0;\n\t\tscanf(\"%d %d %d\", &a, &b, &c);\n\n\t\tif(a > 0)\n\t\t\tret++;\n\t\t\n\t\tif(b > 0)\n\t\t\tret++;\n\t\t\n\t\tif(c > 0)\n\t\t\tret++;\n\t\t\n\t\tif(a > b && a > c){\n\t\t\tif(a-- > 1 && b-- > 1)\n\t\t\t\tret++;\n\n\t\t\tif(c-- > 1 && a-- > 1)\n\t\t\t\tret++;\n\t\t\n\t\t\tif(b-- > 1 && c-- > 1)\n\t\t\t\tret++;\n\n\t\t} else if (b > c && b > a){\n\t\t\tif(b-- > 1 && c-- > 1)\n\t\t\t\tret++;\n\t\t\tif(a-- > 1 && b-- > 1)\n\t\t\t\tret++;\n\n\t\t\tif(c-- > 1 && a-- > 1)\n\t\t\t\tret++;\n\t\t\n\t\t}else {\n\t\t\tif(c-- > 1 && a-- > 1)\n\t\t\t\tret++;\t\n\t\t\tif(b-- > 1 && c-- > 1)\n\t\t\t\tret++;\n\t\t\tif(a-- > 1 && b-- > 1)\n\t\t\t\tret++;\n\t\t}\n\n\t\t\n\t\tif(a > 1 && b > 1 && c > 1)\n\t\t\tret++;\n\n\t\t\n\t\tprintf(\"%d\\n\", ret);\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main(void){\n\tint q;\n\tscanf(\"%d\", &q);\n\n\twhile(q--){\n\t\tint a, b, c, ret = 0;\n\t\tscanf(\"%d %d %d\", &a, &b, &c);\n\n\t\tif(a > 0)\n\t\t\tret++;\n\t\t\n\t\tif(b > 0)\n\t\t\tret++;\n\t\t\n\t\tif(c > 0)\n\t\t\tret++;\n\t\t\n\t\tif(a > b && a > c){\n\t\t\tif(a > 1 && b > 1){\n\t\t\t\tret++; a--; b--;\n\t\t\t}\n\n\t\t\tif(c > 1 && a > 1){\n\t\t\t\tret++; c--; a--;\n\t\t\t}\n\t\t\n\t\t\tif(b > 1 && c > 1){\n\t\t\t\tret++;b--;c--;\n\t\t\t}\n\n\t\t} else if (b > c && b > a){\n\t\t\tif(b > 1 && c > 1){\n\t\t\t\tret++;b--;c--;\n\t\t\t}\n\t\t\tif(a > 1 && b > 1){\n\t\t\t\tret++; a--; b--;\n\t\t\t}\n\n\t\t\tif(c > 1 && a > 1){\n\t\t\t\tret++; c--; a--;\n\t\t\t}\n\t\t\n\t\t}else {\n\t\t\tif(c > 1 && a > 1){\n\t\t\t\tret++; c--; a--;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tif(b > 1 && c > 1){\n\t\t\t\tret++;b--;c--;\n\t\t\t}\n\t\t\tif(a > 1 && b > 1){\n\t\t\t\tret++; a--; b--;\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tif(a > 1 && b > 1 && c > 1)\n\t\t\tret++;\n\n\t\t\n\t\tprintf(\"%d\\n\", ret);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9134287661895024, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4a311484af91bc8a1c94939c96748877", "bug_code_uid": "ad2aafd5e2177883612e0d55bf173f1b", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "772e6ca6ff1c92cc40307fbf536f122b", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long arr[200005];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tfor(long long i=0;i<n;i++)\n\t\t{\n\t\t\tlong long p;\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tarr[p]++;\n\t\t}\n\t\tlong long max=arr[0];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(max<=arr[i])\n\t\t\t{\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tlong long count=0;\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(arr[i]!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(max>count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count);\n\t\t}\n\t\telse if(max==count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count-1);\n\t\t}\n\t\telse if(max<count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",max);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long arr[200005];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tlong long max=0,count=0;\t\n\t\tfor(long long i=0;i<n;i++)\n\t\t{\n\t\t\tlong long p;\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tarr[p]++;\n\t\t\tif(max<=arr[p])\n\t\t\t{\n\t\t\t\tmax=arr[p];\n\t\t\t}\n\t\t\tif(arr[p]==1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\n\n\t\t}\n\t\t/*long long max=arr[0];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(max<=arr[i])\n\t\t\t{\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tlong long count=0;\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(arr[i]!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}*/\n\t\tif(max>count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count);\n\t\t}\n\t\telse if(max==count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count-1);\n\t\t}\n\t\telse if(max<count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",max);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9601873536299765, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5ecb45be66405133982b9831abd693ee", "bug_code_uid": "4a4ea7850692ff62e14b4b4068a6bdf6", "src_uid": "e0ec0cd81d2ec632ef89d207d80fa8a3", "apr_id": "b6677da466f694d07b4bdd9ee11e6b4f", "difficulty": 800, "tags": ["math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<string.h>\r\nint main ()\r\n{\r\n   int t,i;\r\n   scanf(\"%d\",&t);\r\n   int b[7];\r\n   for(i=0;i<7;i++)\r\n   {\r\n       scanf(\"%d\",&b[i]);\r\n   }\r\n   int a[3];\r\n   a[0]=b[0];\r\n   a[1]=b[1];\r\n   if((a[0]+a[1])== b[2])\r\n   {\r\n       a[2]=b[3];\r\n   }\r\n   else\r\n    {\r\n       a[2]=b[2];\r\n    }\r\n   for(i=0;i<3;i++)\r\n   {\r\n       printf(\"%d \",a[i]);\r\n   }\r\n\r\n\r\n   return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<string.h>\r\nint main ()\r\n{\r\n   int t,i,j;\r\n   scanf(\"%d\",&t);\r\n   for(j=1;j<=t;j++)\r\n   {\r\n   int b[7];\r\n   for(i=0;i<7;i++)\r\n   {\r\n       scanf(\"%d\",&b[i]);\r\n   }\r\n   int a[3];\r\n   a[0]=b[0];\r\n   a[1]=b[1];\r\n   if((a[0]+a[1])== b[2])\r\n   {\r\n       a[2]=b[3];\r\n   }\r\n   else\r\n    {\r\n       a[2]=b[2];\r\n    }\r\n   for(i=0;i<3;i++)\r\n   {\r\n       printf(\"%d \",a[i]);\r\n   }\r\n   }\r\n\r\n   return 0;\r\n}\r\n"}
{"similarity_score": 0.996309963099631, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6551335abb4a118a0a84580480573e8d", "bug_code_uid": "ee54a1de34695b1f39b8496d52f8f366", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "72fcc5b3f7c1a24efe122421e77ab6ae", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        long long n,m,x,y;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        y = (x - 1)%n;\r\n        x = (x - 1)/n;\r\n        printf(\"%lld\", y*m+x+1);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        long long n,m,x,y;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        y = (x - 1)%n;\r\n        x = (x - 1)/n;\r\n        printf(\"%lld\\n\", y*m+x+1);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.781787895613548, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "99d31fb5652b231b9701ca3a78debd27", "bug_code_uid": "e4d9ee655fbb350a08ea331804e0f97a", "src_uid": "5698e6fd934b9f6b847d7e30a3d06f2b", "apr_id": "44591a8f13f42774b1897c576b989a26", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<ctype.h>\r\nint a[105]={ 0 };\r\nint b[105] = { 0 };\r\n\r\nint cmp_int(const void* _a, const void* _b)\r\n{\r\n\tint* a = (int*)_a;  \r\n\tint* b = (int*)_b;\r\n\treturn *a - *b;\r\n}\r\n\r\nint main()\r\n\r\n{\r\n\tint k;\r\n\tscanf(\"%d\", &k);\r\n\twhile (k--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint i;\r\n\t\tint max = 0;\r\n\t\tint check = 1;\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t\tif (a[i] >= max)\r\n\t\t\t\tmax = a[i];\r\n\t\t\tif (a[i] < 0)\r\n\t\t\t{\r\n\t\t\t\tif (check == 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tprintf(\"No\\n\");\r\n\t\t\t\tcheck = 0;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (check == 0)\r\n\t\t\tcontinue;\r\n\t\tqsort(a, n, sizeof(a[0]), cmp_int);\r\n\t\tint d_min = 99999;\r\n\t\tfor (i = 0; i < n-1; i++)\r\n\t\t{\r\n\t\t\tint d = abs(a[i] - a[i + 1]);\r\n\t\t\tif (d < d_min)\r\n\t\t\t\td_min = d;\r\n\t\t}\r\n\t\tint j;\r\n\t\tint count = 0;\r\n\t\tfor (j = 0; j <= max; j = d_min + j)\r\n\t\t{\r\n\t\t\tb[count] = j;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tprintf(\"Yes\\n%d\\n\", count);\r\n\t\tfor (i = 0; i < count; i++)\r\n\t\t{\r\n\t\t\tprintf(\"%d \", b[i]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<ctype.h>\r\nint a[105]={ 0 };\r\nint b[105] = { 0 };\r\n\r\nint cmp_int(const void* _a, const void* _b)\r\n{\r\n\tint* a = (int*)_a;  \r\n\tint* b = (int*)_b;\r\n\treturn *a - *b;\r\n}\r\n\r\nint main()\r\n\r\n{\r\n\tint k;\r\n\tscanf(\"%d\", &k);\r\n\twhile (k--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint i;\r\n\t\tint max = 0;\r\n\t\tint check = 1;\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t\tif (a[i] >= max)\r\n\t\t\t\tmax = a[i];\r\n\t\t\tif (a[i] < 0)\r\n\t\t\t{\r\n\t\t\t\tif (check == 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tprintf(\"No\\n\");\r\n\t\t\t\tcheck = 0;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (check == 0)\r\n\t\t\tcontinue;\r\n\t\tqsort(a, n, sizeof(a[0]), cmp_int);\r\n\t\t\r\n\t\tprintf(\"Yes\\n101\\n\");\r\n\t\tfor (i = 0; i <= 100; i++)\r\n\t\t{\r\n\t\t\tprintf(\"%d \", i);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9991783073130649, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6bb064c6e4c3872c7e2e1a022cf1dcbf", "bug_code_uid": "e3394f4aeed924aaf59063e3716c8963", "src_uid": "ecbc339ad8064681789075f9234c269a", "apr_id": "42b4ed3d6b55fa8b8a79a4d40601087b", "difficulty": 1700, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    unsigned long long int k, n, d, m, l, bobcrd = 0;\n    scanf(\"%llu %llu %llu %llu\", &n, &d, &m, &l);\n    k = 1;\n    while(k < n){\n        bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n        if(bobcrd <= ((k-1)*m+l))\n            bobcrd += d;\n        k += (bobcrd - (k-1)*m)/m;\n        if((k-1)*m+l<=bobcrd)\n            k++;\n        if(bobcrd<=(k-1)*m){\n            printf(\"%llu\", bobcrd);\n            return 0;\n        }\n    }\n    bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n    if(bobcrd <= ((k-1)*m+l))\n        bobcrd += d;\n    printf(\"%llu\", bobcrd);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    unsigned long long int k, n, d, m, l, bobcrd = 0;\n    scanf(\"%llu %llu %llu %llu\", &n, &d, &m, &l);\n    k = 1;\n    while(k < n){\n        bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n        if(bobcrd <= ((k-1)*m+l))\n            bobcrd += d;\n        k += (bobcrd - (k-1)*m)/m;\n        if((k-1)*m+l<=bobcrd)\n            k++;\n        if(bobcrd<(k-1)*m){\n            printf(\"%llu\", bobcrd);\n            return 0;\n        }\n    }\n    bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n    if(bobcrd <= ((k-1)*m+l))\n        bobcrd += d;\n    printf(\"%llu\", bobcrd);\n    return 0;\n}\n"}
{"similarity_score": 0.997716894977169, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3e565f152ab55247fee047a25f65fb25", "bug_code_uid": "ad20f0ab6581473a7b417a154fb699c5", "src_uid": "1956e31a9694b4fd7690f1a75028b9a1", "apr_id": "9af740fd08a2d98ef05b1ef6df267ef5", "difficulty": 1000, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,k,j,s[501],p[501],ad = 0;\n    scanf(\"%d%d%d\",&n,&k,&s[0]);\n    p[0] = s[0];\n    for(j = 1;j<n;j++)\n    {\n        scanf(\"%d\",&s[j]);\n        if(s[j]+s[j-1]>=k)\n            p[j] = s[j];\n        else\n        {\n            p[j] = k-p[j-1];\n            ad+=p[j]-s[j];\n        }\n    }\n    printf(\"%d\\n\",ad);\n    for(j = 0;j<n-1;j++)\n        printf(\"%d \",p[j]);\n    printf(\"%d\\n\",p[j]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,k,j,s[501],p[501],ad = 0;\n    scanf(\"%d%d%d\",&n,&k,&s[0]);\n    p[0] = s[0];\n    for(j = 1;j<n;j++)\n    {\n        scanf(\"%d\",&s[j]);\n        if(s[j]+p[j-1]>=k)\n            p[j] = s[j];\n        else\n        {\n            p[j] = k-p[j-1];\n            ad+=p[j]-s[j];\n        }\n    }\n    printf(\"%d\\n\",ad);\n    for(j = 0;j<n-1;j++)\n        printf(\"%d \",p[j]);\n    printf(\"%d\\n\",p[j]);\n    return 0;\n}\n"}
{"similarity_score": 0.9963031423290203, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3d2b00c3a580b66c19a6664d78a7f4dd", "bug_code_uid": "30d6e498b4b05e59d42f62b72e376920", "src_uid": "f336b622fdaf5960032268641320bb53", "apr_id": "b54add8da781db800c7dd175ec0ffe32", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,j=0,num1,num2,total=0,o=0;\n\tprintf(\"Please enter 2 numbers\\n\");\n\tscanf(\"%d %d\", &n, &m);\n\tint array[m];\n\tint array1[m];\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tarray[j]=i;\n\t\tj++;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tprintf(\"Please enter 2 numbers\\n\");\n\t\tscanf(\"%d %d\", &num1, &num2);\n\t\tfor(int k=num1;k<=num2;k++)\n\t\t{\n\t\t\tarray[k-1]=0;\n\t\t}\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tif(array[i]!=0)\n\t\t{\n\t\t\tarray1[o]=array[i];\n\t\t\ttotal++;\n\t\t\to++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", total);\n\tfor(int i=0;i<o;i++)\n\t\tprintf(\"%d \", array1[i]);\n\t\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,j=0,num1,num2,total=0,o=0;\n\t//printf(\"Please enter 2 numbers\\n\");\n\tscanf(\"%d %d\", &n, &m);\n\tint array[m];\n\tint array1[m];\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tarray[j]=i;\n\t\tj++;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\t//printf(\"Please enter 2 numbers\\n\");\n\t\tscanf(\"%d %d\", &num1, &num2);\n\t\tfor(int k=num1;k<=num2;k++)\n\t\t{\n\t\t\tarray[k-1]=0;\n\t\t}\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tif(array[i]!=0)\n\t\t{\n\t\t\tarray1[o]=array[i];\n\t\t\ttotal++;\n\t\t\to++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", total);\n\tfor(int i=0;i<o;i++)\n\t\tprintf(\"%d \", array1[i]);\n\t\t\n}\n"}
{"similarity_score": 0.9893795416433762, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f1be6853e7fce3bc3daa41149502c741", "bug_code_uid": "61609d518bb36a34ca6a6a52a6993d9f", "src_uid": "7f9853be7ac857bb3c4eb17e554ad3f1", "apr_id": "9db75dab5e397c538c00f6557f829da7", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        char k[26], s[50];\r\n        int a[50];\r\n        int i, l, j, time = 0;\r\n        scanf(\"%s\", k);\r\n        scanf(\"%s\", s);\r\n        l = strlen(s);\r\n        if (l == 1)\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else\r\n        {\r\n            for (i = 0; i < l; i++)\r\n            {\r\n                for (j = 0; j < 26; j++)\r\n                {\r\n                    if (s[i] == k[j])\r\n                    {\r\n                        a[i] = j + 1;\r\n                        //printf(\"%d\\n\", a[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (i = 0; i < l - 1; i++)\r\n        {\r\n            time = time + fabs(a[i + 1] - a[i]);\r\n        }\r\n        printf(\"%d\\n\", time);\r\n        time = 0;\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        char k[26], s[50];\r\n        int a[50];\r\n        int i, l, j, time = 0;\r\n        scanf(\"%s\", k);\r\n        scanf(\"%s\", s);\r\n        l = strlen(s);\r\n        if (l == 1)\r\n        {\r\n            a[0]=0;\r\n        }\r\n        else\r\n        {\r\n            for (i = 0; i < l; i++)\r\n            {\r\n                for (j = 0; j < 26; j++)\r\n                {\r\n                    if (s[i] == k[j])\r\n                    {\r\n                        a[i] = j + 1;\r\n                        //printf(\"%d\\n\", a[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (i = 0; i < l - 1; i++)\r\n        {\r\n            time = time + fabs(a[i + 1] - a[i]);\r\n        }\r\n        printf(\"%d\\n\", time);\r\n        time = 0;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9954337899543378, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2a9fb3dffaa629c1d2d143e02647a081", "bug_code_uid": "13359d95a28687b08dcc3248d82590a4", "src_uid": "e215e94dd196dde381adc13406d2d72a", "apr_id": "aac51ed5c231f0186f885b9d1f618805", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,start=1,i,j,z,m;\r\n    scanf(\"%d\",&m);\r\n    for(z=0;z<m;z++)\r\n    {\r\n    scanf(\"%d\",&n);\r\n    int a[n][n];\r\n    if(n==1)\r\n    {\r\n        printf(\"1\\n\");\r\n    }\r\n    else if(n==2)\r\n    {\r\n        printf(\"-1\\n\");\r\n    }\r\n    else\r\n    {\r\n        for(i=0;i<n;i++)\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                if((i+j)%2==0)\r\n                {\r\n                    a[i][j]=start;\r\n                    start++;\r\n                }\r\n            }\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                if((i+j)%2==1)\r\n                {\r\n                    a[i][j]=start;\r\n                    start++;\r\n                }\r\n            }\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                printf(\"%d \",a[i][j]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,start=1,i,j,z,m;\r\n    scanf(\"%d\",&m);\r\n    for(z=0;z<m;z++)\r\n    {\r\n    scanf(\"%d\",&n);\r\n    int a[n][n];\r\n    if(n==1)\r\n    {\r\n        printf(\"1\\n\");\r\n    }\r\n    else if(n==2)\r\n    {\r\n        printf(\"-1\\n\");\r\n    }\r\n    else\r\n    { start=1;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                if((i+j)%2==0)\r\n                {\r\n                    a[i][j]=start;\r\n                    start++;\r\n                }\r\n            }\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                if((i+j)%2==1)\r\n                {\r\n                    a[i][j]=start;\r\n                    start++;\r\n                }\r\n            }\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                printf(\"%d \",a[i][j]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    }\r\n}"}
{"similarity_score": 0.9515593895155939, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2479867eb9d4209667a3e055136b10ba", "bug_code_uid": "99d0d2722dd127dbd4ac182626d0e510", "src_uid": "7b788c660fb8ca703af0030f4c84ce96", "apr_id": "40939f29bf6327c57a1a6d843bfe5b51", "difficulty": 1600, "tags": ["data structures", "binary search", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n int n,q,a,b,arr[200009]={},brr[200009]={},crr[200009]={},i;\nint max(int a,int b)\n{\n    if(a>b)\n        return a;\n    else\n        return b;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&arr[i]);\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i++){\n        scanf(\"%d\",&a);\n        if(a==1){\n            scanf(\"%d %d\",&a,&b);\n            arr[a]=b;\n            crr[a]=i;\n        }\n        else\n        {\n            scanf(\"%d\",&b);\n            brr[i]=b;\n        }\n    }\n        for(i=n;i>=0;i--){\n            brr[i]=max(brr[i],brr[i+1]);\n        }\n            for(i=1;i<=n;i++){\n                arr[i]=max(arr[i],brr[crr[i]]);\n                printf(\"%d \",arr[i]);\n            }\n}\n", "fixed": "#include<stdio.h>\n int n,q,a,b,arr[200009]={},brr[200009]={},crr[200009]={},i;\nint max(int a,int b)\n{\n    if(a>b)\n        return a;\n    else\n        return b;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&arr[i]);\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i++){\n        scanf(\"%d\",&a);\n        if(a==1){\n            scanf(\"%d %d\",&a,&b);\n            arr[a]=b;\n            crr[a]=i;\n        }\n        else\n        {\n            scanf(\"%d\",&b);\n            brr[i]=b;\n        }\n    }\n        for(i=q;i>=0;i--){\n            brr[i]=max(brr[i],brr[i+1]);\n        }\n            for(i=1;i<=n;i++){\n                arr[i]=max(arr[i],brr[crr[i]]);\n                printf(\"%d \",arr[i]);\n            }\n}\n/*\n5\n1 2 3 4 5\n10\n1 1 0\n2 1\n1 2 0\n2 2\n1 3 0\n2 3\n1 4 0\n2 4\n1 5 0\n2 5\n*/\n"}
{"similarity_score": 0.6944045911047346, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d413bc4b649898459eef5284e0cd4c45", "bug_code_uid": "7ad024a1350679dc240d2edd700d6443", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "37be0db1312d8526a92227a15b1ad9e5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<malloc.h>\n\nint main()\n{\n    char *arr = NULL, tmp;\n    short n, i;\n    scanf(\"%hd\", &n);\n    arr = (char *) malloc(n);\n    arr[2 * n] = 0;\n    for (i = 0; i < n; i++)\n    {\n        scanf(\" %c\", &tmp);\n        arr[(tmp - 48) - 1] = i + 1;\n    }\n    for (i = 0; i < n; i++)\n    {\n        printf(\"%d \", arr[i]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<malloc.h>\n\nint main()\n{\n    short *arr = NULL, tmp, n, i;\n    scanf(\"%hd\", &n);\n    arr = (short *) malloc(n * sizeof(short));\n    for (i = 0; i < n; i++)\n    {\n        scanf(\" %hd\", &tmp);\n        arr[tmp - 1] = i + 1;\n    }\n    for (i = 0; i < n; i++)\n    {\n        printf(\"%hd \", arr[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9940828402366864, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "850469bb770272b67d1b3c820c76b96a", "bug_code_uid": "439bc922e17cd5f63ae5f8528b940c5f", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "1d960015fb0298092e476c583cc655d6", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main (void)\n{\nint n,p,q,j,flag=1,x,y, a[101];\nscanf(\"%d\",&n);\n\nscanf(\"%d\",&p);\nfor (j=0; j<p; j++)\n{scanf(\"%d\",&x); a[x]++;}\n\nscanf(\"%d\",&q);\nfor (j=0; j<q; j++)\n{scanf(\"%d\",&y); a[y]++;}\n\nfor (j=1; j<=n; j++)\nif(a[j]==0) {flag=0; break;}\n\nif (flag) printf(\"I become the guy.\");\nelse printf(\"Oh, my keyboard!\");\n}", "fixed": "#include <stdio.h>\nint main (void)\n{\nint n,p,q,j,flag=1,x,y, a[101]={0};\nscanf(\"%d\",&n);\n\nscanf(\"%d\",&p);\nfor (j=0; j<p; j++)\n{scanf(\"%d\",&x); a[x]++;}\n\nscanf(\"%d\",&q);\nfor (j=0; j<q; j++)\n{scanf(\"%d\",&y); a[y]++;}\n\nfor (j=1; j<=n; j++)\nif(a[j]==0) {flag=0; break;}\n\nif (flag) printf(\"I become the guy.\");\nelse printf(\"Oh, my keyboard!\");\n}"}
{"similarity_score": 0.8102456874019864, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "1691b15f5dc2d349f43e6aee09ed16e6", "bug_code_uid": "631f20b84bc18d8431d18d5a3d1e3817", "src_uid": "0d2fd9b58142c4f5282507c916690244", "apr_id": "54fe18f6ad678f7a71d3dc59e09ac1d7", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j,k,a[100][100];\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;++i)\n    {\n        for(j=1;j<=m;++j)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    int flag=4;\n    for(j=1;j<=m;++j)\n    {\n             if(a[1][j]==1)\n             {\n                 flag=2;\n                 break;\n             }\n    }\n\n    for(j=1;j<=n;++j)\n    {\n       if(a[j][1]==1)\n             {\n                 flag=2;\n                 break;\n             }\n    }\n     for(j=1;j<=n;++j)\n    {\n       if(a[j][m]==1||a[j][1]==1)\n             {\n                 flag=2;\n                 break;\n             }\n    }\n\n    if(a[1][1]==1||a[1][m]==1||a[n][1]==1||a[n][m]==1)\n        flag=1;\n\n    int sum=0;\n    for(i=1;i<=n;++i)\n    {\n        for(j=1;j<=m;++j)\n        {\n            if(a[i][j]==1)\n            ++sum;\n\n        }\n    }\n    if(sum==m*n)\n        flag=0;\n\n    printf(\"%d\\n\",flag);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j,k,a[100][100];\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;++i)\n    {\n        for(j=1;j<=m;++j)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    int flag=4;\n    for(j=1;j<=m;++j)\n    {\n             if(a[1][j]==1)\n             {\n                 flag=2;\n                 break;\n             }\n    }\n\n    for(j=1;j<=n;++j)\n    {\n       if(a[j][1]==1)\n             {\n                 flag=2;\n                 break;\n             }\n    }\n     for(j=1;j<=n;++j)\n    {\n       if(a[j][m]==1||a[j][1]==1)\n             {\n                 flag=2;\n                 break;\n             }\n    }\n       for(j=1;j<=m;++j)\n    {\n       if(a[n][j]==1||a[1][j]==1)\n             {\n                 flag=2;\n                 break;\n             }\n    }\n\n    if(a[1][1]==1||a[1][m]==1||a[n][1]==1||a[n][m]==1)\n        flag=1;\n\n\n    printf(\"%d\\n\",flag);\n    return 0;\n}\n"}
{"similarity_score": 0.9280442804428044, "equal_cnt": 14, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 15, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "61fccfbb76971d80e35b0068fd9f0f67", "bug_code_uid": "8cd2e2296069cd7734a208d0d06a9e61", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "aa8de62809eec7dd32c1a3dfcd7e24f4", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "    #include<stdio.h>\n                int main()\n                {\n                    long long int x,y,z,a,b,t,i,c,d;\n                    scanf(\"%lld\",&t);\n                    for(i=1;i<=t;i++){\n                        scanf(\"%lld %lld %lld %lld\",&x,&y,&a,&b);\n                        z=(y-x)/(a+b);\n                        c=y-x;\n                        d=a+b;\n                        if(c%d==0)\n                        printf(\"%d\\n\",z);\n                        else printf(\"-1\\n\");\n                }", "fixed": "        #include<stdio.h>\n                    int main()\n                    {\n                        long long int x,y,z,a,b,t,i,c,d;\n                        scanf(\"%lld\",&t);\n                        for(i=1;i<=t;i++){\n                            scanf(\"%lld %lld %lld %lld\",&x,&y,&a,&b);\n                            z=(y-x)/(a+b);\n                            c=y-x;\n                            d=a+b;\n                            if(c%d==0)\n                            printf(\"%d\\n\",z);\n                            else printf(\"-1\\n\");\n                    }\n                    }"}
{"similarity_score": 0.9982300884955753, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6794b8c364e60a3630d298b4073c630e", "bug_code_uid": "c5090f10b0b02c6bd59a3b6c70216131", "src_uid": "942123e43a83d5a4cea95a6781064e28", "apr_id": "d99ee7d8d345f374a7ef0f5a244b13c9", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a[1000],t,i,oddcount,evencount,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        oddcount=0;\n        evencount=0;\n        scanf(\"%d\",&n);\n        for(int j=0;j<n;j++)\n            scanf(\"%d\",&a[j]);\n        for(i=0;i<n;i++)\n        {\n            if(i%2==0&&a[i]%2!=0)\n                evencount++;\n            if(i%2!=0&&a[i]%2==0)\n                oddcount++;\n        }\n        if(oddcount==evencount)\n            printf(\"%d\",oddcount);\n        else\n            printf(\"%d\\n\",-1);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a[1000],t,i,oddcount,evencount,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        oddcount=0;\n        evencount=0;\n        scanf(\"%d\",&n);\n        for(int j=0;j<n;j++)\n            scanf(\"%d\",&a[j]);\n        for(i=0;i<n;i++)\n        {\n            if(i%2==0&&a[i]%2!=0)\n                evencount++;\n            if(i%2!=0&&a[i]%2==0)\n                oddcount++;\n        }\n        if(oddcount==evencount)\n            printf(\"%d\\n\",oddcount);\n        else\n            printf(\"%d\\n\",-1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5662921348314607, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "e5f8e5c7c35190244aa3ba8ae81071dc", "bug_code_uid": "0817a54e70d42a4fd5946060f8dfbdc2", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "f008560e0d1af5239cc3bf90fe8d9e56", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//Codeforces 508 //B. Anton and currency you all know //Codeforces Round #288 (Div. 2)\n#if 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tchar n[100001];\n\tint n_len;\n\tint i;\n\tchar rear;\n\tchar temp=-1;\n\tint adress;\n\n\tgets(n);\n\tn_len = strlen(n);\n\trear = n[n_len-1];\n\tif(rear % 2) //\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=n_len-1; i>=0; i--)\n\t\t{\n\t\t\tif(!(n[i] % 2)) // 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\tif(temp <= rear)\n\t\t\t\t{\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tadress = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(temp != -1)\n\t\t{\n\t\t\tn[adress] = n[n_len-1];\n\t\t\tn[n_len-1] = temp;\n\t\t}\n\t}\n\telse //\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=n_len-1; i>=0; i--)\n\t\t{\n\t\t\tif((n[i] % 2)) //\ufffd\ufffd\ufffd\ufffd 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\tif(temp <= rear)\n\t\t\t\t{\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tadress = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(temp != -1)\n\t\t{\n\t\t\tn[adress] = n[n_len-1];\n\t\t\tn[n_len-1] = temp;\n\t\t}\n\t}\n\tif(temp == -1)\n\t\tprintf(\"-1\");\n\telse \n\t\tprintf(\"%s\", n);\n\treturn 0;\n}\n#endif\n", "fixed": "//Codeforces 508 //B. Anton and currency you all know //Codeforces Round #288 (Div. 2)\n#if 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tchar n[100001];\n\tint n_len;\n\tint i;\n\tchar rear;\n\tchar a;\n\tint a_ad=-1;\n\n\n\tgets(n);\n\tn_len = strlen(n);\n\trear = n[n_len-1];\n\tif(rear % 2) //\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=0; i<n_len-1; i++)\n\t\t{\n\t\t\tif(!(n[i] % 2)) // 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\ta = n[i];\n\t\t\t\ta_ad = i;\n\t\t\t\tif(n[i] <= rear)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(a_ad != -1)\n\t\t{\n\t\t\tn[a_ad] = n[n_len-1];\n\t\t\tn[n_len-1] = a;\n\t\t}\n\t}\n\telse //\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=0; i<n_len-1; i++)\n\t\t{\n\t\t\tif((n[i] % 2)) //\ufffd\ufffd\ufffd\ufffd 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\ta = n[i];\n\t\t\t\ta_ad = i;\n\t\t\t\tif(n[i] <= rear)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(a_ad != -1)\n\t\t{\n\t\t\tn[a_ad] = n[n_len-1];\n\t\t\tn[n_len-1] = a;\n\t\t}\n\t}\n\tif(a_ad == -1)\n\t\tprintf(\"-1\");\n\telse \n\t\tprintf(\"%s\", n);\n\treturn 0;\n}\n#endif\n"}
{"similarity_score": 0.9081081081081082, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "07a88b3c33040b6c4fa8d885e093a5e5", "bug_code_uid": "3c77d4ba03e880f47dead44113faa72f", "src_uid": "d526af933b5afe9abfdf9815e9664144", "apr_id": "a32ece1d7da3e4e914e31619653e6411", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint tiles[1001];\nint max(int a, int b)\n{\n    return (a>b)?a:b;\n}\nint main()\n{\n    int n,i,a,min=10000,maxi;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&tiles[i]);\n    for(i=2;i<=n;i++)\n    {\n        maxi=max(tiles[i],tiles[i-1]);\n        if(maxi<min)min=maxi;\n    }\n    printf(\"%d\",min);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint tiles[1001];\nint max(int a, int b)\n{\n    return (a>b)?a:b;\n}\nint main()\n{\n    int n,i,a,min=10000,maxi;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&tiles[i]);\n    for(i=2;i<=n;i++)\n    {\n        maxi=max(tiles[i],tiles[i-1]);\n        if(maxi<min)min=maxi;\n    }\n    if(min>tiles[1])min=tiles[1];\n    if(min>tiles[n])min=tiles[n];\n    printf(\"%d\",min);\n    return 0;\n}\n"}
{"similarity_score": 0.9301260022909508, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "87e89eb802cf07d7a64e96e61e5eb335", "bug_code_uid": "f86f07a4ba7babff4b9c2a622b5ab628", "src_uid": "937acacc6d5d12d45c08047dde36dcf0", "apr_id": "7b9510d4009f52ef9929d6f236cfacc5", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int h,m,A,D,C,N,i,p,q,w,f,l;\n    float n,o;\n\n scanf(\"%d %d %d %d %d %d\", &h, &m, &A, &D , &C, &N);\n if(m>0)\n {\n     p=(19-h)*60+60-m;\n }\n else\n {\n     p=(20-h)*60;\n }\nq=p*D+A;\nl=A;\nif(q%N==0)\n{\n    w=q/N;\n}\nelse\n{\n    w=q/N+1;\n}\nif(l%N==0)\n{\n    f=l/N;\n}\nelse\n{\n    f=l/N+1;\n}\n\n\nn=(w*C)*0.8;\no=f*C;\nif(n<o)\n{\nprintf(\"%.4f\", n);\n}\nelse\n{\nprintf(\"%.4f\", o);\n}\n return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int h,m,A,D,C,N,i,p,q,w,f,l;\n    float n,o;\n\n scanf(\"%d %d %d %d %d %d\", &h, &m, &A, &D , &C, &N);\n if(h<20)\n {\n if(m>0)\n {\n     p=(19-h)*60+60-m;\n }\n else\n {\n     p=(20-h)*60;\n }\n }\n else\n {\n     p=0;\n }\nq=p*D+A;\nl=A;\nif(q%N==0)\n{\n    w=q/N;\n}\nelse\n{\n    w=q/N+1;\n}\nif(l%N==0)\n{\n    f=l/N;\n}\nelse\n{\n    f=l/N+1;\n}\n\n\nn=(w*C)*0.8;\no=f*C;\nif(n<o)\n{\nprintf(\"%.4f\", n);\n}\nelse\n{\nprintf(\"%.4f\", o);\n}\n return 0;\n}\n//16 34 61066 14 50 59\n"}
{"similarity_score": 0.28, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "9613c8b8baef4368dfddf6e36e976846", "bug_code_uid": "af7b08723b49347bdb408e160752b531", "src_uid": "0c7e019e1e955cadacca55b4e823a3e5", "apr_id": "84c0f6018e622c07d44496d15a98bc93", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int a,b,c,i,t,j,ar[20001],ar2[20001],k,d,ar3[20001],l;\n    scanf (\"%d\",&t);\n    for (i=0; i<t; i++)\n    {\n        c=0;\n        b=0;\n        scanf (\"%d\",&a);\n        for (l=0,j=2; j<=a,l<=a/2; l++,j=j+2)\n        {\n            ar[l]=j;\n            c=c+ar[l];\n        }\n        for (l=0,k=1; k<=a-2,l<=a/2; l++,k=k+2)\n        {\n            ar2[l]=k;\n            b=b+ar2[l];\n        }\n        d=c-b;\n\n        if (d%2==0)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n        {\n            for (l=0,j=2; l<a/2,j<=a; l++,j=j+2)\n            {\n                ar3[l]=j;\n            }\n            for (l=a/2,j=1; l<a-1; l++,j=j+2)\n            {\n                ar3[l]=j;\n                ar3[a-1]=d;\n            }\n            printf(\"YES\\n\");\n            for (j=0; j<a; j++)\n            {\n                printf(\"%d \",ar3[j]);\n\n            }\n            printf(\"\\n\");\n        }\n\n\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int a, ar[200000],ar2[200000];\n    int sumeven, sumodd, j, k, t;\n    scanf (\"%d\",&t);\n    for (int i=0; i<t; i++)\n    {\n        sumeven=0;\n        sumodd=0;\n        j=0;\n        k=0;\n        scanf (\"%d\",&a);\n        for (int i=1; i<=a;i++){\n            if(i%2==0){\n                ar[j]=i;\n                j++;\n                sumeven+=i;\n            }\n            else if(i%2==1){\n                if(i==a-1) continue;\n\n                ar2[k]=i;\n                k++;\n                sumodd+=i;\n            }\n        }\n        int dif=sumeven-sumodd;\n\n        if (dif%2==0) printf(\"NO\\n\");\n        else\n        {\n            printf(\"YES\\n\");\n            for (int i2=0; i2<j; i2++)\n            {\n                printf(\"%d \",ar[i2]);\n\n            }\n            for (int i3=0;i3<k;i3++)\n            {\n                printf(\"%d \", ar2[i3]);\n            }\n            printf(\"%d\\n\", dif);\n        }\n\n\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9935838680109991, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "002cefce940933e09deaf912da44701c", "bug_code_uid": "ea3571e80a2a9c786054dcd4d78d15c0", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "eb8be23c56401d0c21cca083578e21b6", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char str[10000000];\n    scanf(\"%s\",str);\n    int i=0,d=strlen(str),s=0;\n    while (i<d)\n    {\n        if (!((str[i]=='a') && (str[i+1]=='b')) || ((str[i]=='b') && (str[i+1]=='b')))\n        {\n            if (str[i]=='a')\n            {\n                str[i]='b';\n            }\n            else\n            {\n                str[i]='a';\n            }\n            s=s+1;\n        }\n        i=i+2;\n\n    }\n    printf(\"%d\\n\",s);\n    printf(\"%s\",str);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char str[1000000];\n    scanf(\"%s\",str);\n    int i=0,d=strlen(str),s=0;\n    while (i<d)\n    {\n        if (!(((str[i]=='a') && (str[i+1]=='b')) || ((str[i]=='b') && (str[i+1]=='a'))))\n        {\n            if (str[i]=='a')\n            {\n                str[i]='b';\n            }\n            else\n            {\n                str[i]='a';\n            }\n            s=s+1;\n        }\n        i=i+2;\n\n    }\n    printf(\"%d\\n\",s);\n    printf(\"%s\",str);\n    return 0;\n}\n"}
{"similarity_score": 0.995850622406639, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0b9e1a8192092e54dfd81d626c777e43", "bug_code_uid": "da888ef5ce58cfaa2c631e360f5c7e4e", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "586f6b3e49af188a0fcf973ac2643d91", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int x;\r\n        scanf(\"%d\",&x);\r\n        while(x&(x-1)){\r\n            x=x&(x-1);\r\n        }\r\n        printf(\"%d\",x-1);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int x;\r\n        scanf(\"%d\",&x);\r\n        while(x&(x-1)){\r\n            x=x&(x-1);\r\n        }\r\n        printf(\"%d\\n\",x-1);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8736942070275404, "equal_cnt": 14, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 11, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "fdffe66cc9fbeefead0c5a3b9770bc67", "bug_code_uid": "d6ab6a871d08c6a5992eaf2f2ab1a975", "src_uid": "2c67ee95eba7ffbbed99cb488abb5f3d", "apr_id": "205ecb1b061c290f0984fe798cbae073", "difficulty": 1000, "tags": ["geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nlong int read()\r\n{\r\n\tlong int a,i;\r\n\tscanf(\"%ld\",&a);\r\n\tlong int s[a];\r\n\tfor(i=0;i<a;i++) scanf(\"%ld\",&s[i]);\r\n\treturn s[i-1]-s[0];\r\n}\r\nint main() {\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n\tfor(int i=0;i<a;i++)\r\n\t{\r\n\t\tlong int w,h;\r\n\t\tlong int max1,max2;\r\n\t\tscanf(\"%ld %ld\",&w,&h);\r\n\t\tlong int s[4];\r\n\t\tfor(int o=0;o<4;o++) s[o]=read();\r\n\t\tif(s[0]>s[1]) max1=h*s[0];\r\n\t\telse max1=h*s[1];\r\n\t\tif(s[2]>s[3]) max2=w*s[2];\r\n\t\telse max2=w*s[3];\r\n\t\tprintf(\"%ld\\n\",(max1>max2)?max1:max2);\r\n\t } \r\n}\r\n", "fixed": "#include<stdio.h>\r\nlong long int read()\r\n{\r\n\tlong long int a,i;\r\n\tscanf(\"%lld\",&a);\r\n\tlong long int s[a];\r\n\tfor(i=0;i<a;i++) scanf(\"%lld\",&s[i]);\r\n\treturn s[i-1]-s[0];\r\n}\r\nint main() {\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n\tfor(int i=0;i<a;i++)\r\n\t{\r\n\t\tlong long int w,h;\r\n\t\tlong long int max1,max2;\r\n\t\tscanf(\"%lld %lld\",&w,&h);\r\n\t\tlong long int s[4];\r\n\t\tfor(int o=0;o<4;o++) s[o]=read();\r\n\t\tif(s[0]>=s[1]) max1=h*s[0];\r\n\t\telse max1=h*s[1];\r\n\t\tif(s[2]>=s[3]) max2=w*s[2];\r\n\t\telse max2=w*s[3];\r\n\t\tprintf(\"%lld\\n\",(max1>max2)?max1:max2);\r\n\t } \r\n}\r\n"}
{"similarity_score": 0.5080906148867314, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "a4ec79c2c176b9e81df6e21fc5a4e932", "bug_code_uid": "0fdfdbd05cee538cb8969fc25651e4c9", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "2ec2c6b0444287c3612e59825b019810", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tint n, a[10000], x = 0, temp = 0, y = 0;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif (a[i] > 1) {\n\t\t\ttemp = a[i];\n\t\t\ty = i;\n\t\t}\n\t}\n\t\tif (a[0] == -1)\n\t\t\tx++;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (a[i] == -1 && a[i - 1] == -1 && i < y)\n\t\t\t\tx++;\n\t\t\telse if (a[i] == -1 && a[i - 1] == -1 && i > y) {\n\t\t\t\tx++;\n\t\t\t\tx = x - y;\n\t\t\t}\n\t\t}\n\tprintf(\"%d\\n\", x);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n\tint n, x, y = 0, z = 0;\n\tscanf(\"%d\", &n);\n\twhile (n--) {\n\t\tscanf(\"%d\", &x);\n\t\ty += x;\n\t\tif (y < 0) {\n\t\t\ty = 0;\n\t\t\tz++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", z);\n\treturn 0;\n}"}
{"similarity_score": 0.6878504672897197, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "f36697810a30ed3fe600c24d10ac948f", "bug_code_uid": "cf0d260fc568edc609200c137f2c9389", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "4fdcce738296ad59a13a9626ba822f4a", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tlong n, x, temp, i, count = 0, a[111111] = { 0 };\n\tscanf(\"%u %u\", &n, &x);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%u\", &temp);\n\t\tif (a[temp^x]) count += a[temp^x];\n\t\ta[temp]++;\n\t}\n\tprintf(\"%u\", count);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main() {\n\tlong n, x, temp, i;\n\tlong long count = 0;\n\tint a[999999] = { 0 };\n\n\t//freopen(\"input.txt\", \"r\", stdin);\n\tscanf(\"%ld %ld\", &n, &x);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%ld\", &temp);\n\t\tcount += a[temp^x];\n\t\ta[temp]++;\n\t}\n\tprintf(\"%I64d\", count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7777057679844459, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "291a59f3f00032451150e871daa85699", "bug_code_uid": "debfb38377bb0ca2a3087eff4df0b6a1", "src_uid": "88c8376ad65c5c932c15dc09d6c4d75f", "apr_id": "7178811d5c6f9a49f32aade313deddbe", "difficulty": 1600, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint mins(int k);\n\nint main(void)\n{\n\tint ncase;\n\tscanf(\"%d\", &ncase);\n\n\twhile (ncase--) {\n\t\tint n, l, r, s;\n\t\tint k, i, j;\n\t\tint perm[501], used[501] = {0};\n\n\t\tscanf(\"%d%d%d%d\", &n, &l, &r, &s);\n\t\tk = r - l + 1;\n\n\t\tif (s < mins(k) || s > k * (2 * n - k + 1) / 2) {\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (i = l; i <= r; ++i, --k) {\n\t\t\tperm[i] = s - mins(k - 1);\n\t\t\ts -= perm[i];\n\t\t\tused[perm[i]] = 1;\n\t\t}\n\n\t\tfor (i = 1, j = 1; i <= n; ++i)\n\t\t\tif (!used[i]) {\n\t\t\t\tif (j >= l)\n\t\t\t\t\tperm[r + 1 + j - l] = i;\n\t\t\t\telse\n\t\t\t\t\tperm[j] = i;\n\t\t\t\t++j;\n\t\t\t}\n\n\t\tfor (i = 1; i <=n; ++i)\n\t\t\tprintf(&\" %d\"[i == 1], perm[i]);\n\t\tputchar('\\n');\n\t}\n\n\treturn 0;\n}\n\nint mins(int k)\n{\n\treturn (1 + k) * k / 2;\n}\n", "fixed": "#include <stdio.h>\n\nint mins(int k);\nint maxs(int n, int k);\n\nint main(void)\n{\n\tint ncase;\n\tscanf(\"%d\", &ncase);\n\n\twhile (ncase--) {\n\t\tint n, l, r, s;\n\t\tint k, i, j;\n\t\tint perm[501], used[501] = {0};\n\n\t\tscanf(\"%d%d%d%d\", &n, &l, &r, &s);\n\t\tk = r - l + 1;\n\n\t\tif (s < mins(k) || s > maxs(n, k)) {\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (i = n, j = 0; i && k; --i)\n\t\t\tif (s - i >= mins(k - 1) && s - i <= maxs(i - 1, k - 1)) {\n\t\t\t\tperm[l + j++] = i;\n\t\t\t\tused[i] = 1;\n\t\t\t\ts -= i;\n\t\t\t\t--k;\n\t\t\t}\n\n\t\tfor (i = 1, j = 1; i <= n; ++i)\n\t\t\tif (!used[i]) {\n\t\t\t\tif (j >= l)\n\t\t\t\t\tperm[r + 1 + j - l] = i;\n\t\t\t\telse\n\t\t\t\t\tperm[j] = i;\n\t\t\t\t++j;\n\t\t\t}\n\n\t\tfor (i = 1; i <=n; ++i)\n\t\t\tprintf(&\" %d\"[i == 1], perm[i]);\n\t\tputchar('\\n');\n\t}\n\n\treturn 0;\n}\n\nint mins(int k)\n{\n\treturn (1 + k) * k / 2;\n}\n\nint maxs(int n, int k)\n{\n\treturn (n + n - k + 1) * k / 2;\n}\n"}
{"similarity_score": 0.3270868824531516, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "eea82b0ac27dc229f06e75a36732b668", "bug_code_uid": "f4dba1effd592174f6d90cfc7355e8e8", "src_uid": "bef323e7c8651cc78c49db38e49ba53d", "apr_id": "b24d705d9051b8d7783cf9b27e52b36f", "difficulty": 1500, "tags": ["data structures", "constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.c\n//  Contest\n//\n//  Created by Mihai Esanu on 12/27/19.\n//  Copyright \u00a9 2019 Mihai Esanu. All rights reserved.\n\n#include <stdio.h>\n\nint main() {\n    long long t, n[50000];\n    scanf(\"%lld\", &t);\n    for(long long i = 1; i <= t; i++)\n    {\n        scanf(\"%lld\", &n[i]);\n    }\n    \n    for(long long i = 1; i <= t; i++)\n    {\n        if(n[i] == 0)\n        {\n            int l = 0, k = 1;\n            long long value;\n            while(l == 0)\n            {\n            for(long long j = 1; j < t; j++)\n            {\n                if(n[j] == k)\n                {\n                    value = j;\n                    l = 0;\n                    break;\n                }\n                \n            }\n                k++;\n            }\n            n[i] = value;\n        }\n    }\n        return 0;\n}\n", "fixed": "//\n//  main.c\n//  Contest\n//\n//  Created by Mihai Esanu on 12/27/19.\n//  Copyright \u00a9 2019 Mihai Esanu. All rights reserved.\n\n#include <stdio.h>\nint main() {\n    int a[200005] = {0};\n    long long n, f[200005], i,j , p[200005];\n    scanf(\"%lld\", &n);\n    j = 1;\n    for(i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\", &f[i]);\n        if(f[i] == 0)\n        {\n            p[j] = i;\n            j++;\n        }\n        else\n        {\n            a[f[i]] = 1;\n        }\n    }\n    long long k = j - 1;\n    j = 1;\n    for(i = 1;i <= n;i++)\n    {\n        if(a[i] == 0)\n    {\n        if(p[j] != i)\n            f[p[j]] = i;\n        if(p[j] == i && j < k)\n        {\n            \n            f[p[j+1]] = i;\n            p[j+1] = p[j];\n        }\n        if(p[j] == i && j == k)\n        {\n            f[p[k]] = f[p[1]];\n            f[p[1]] = i;\n        }\n        j++;\n    }\n    }\n    \n    for(i = 1 ;i <= n; i++)\n        printf(\"%lld \", f[i]);\n    \n    \n    return 0;\n}\n\n"}
{"similarity_score": 0.7329919531821507, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "556f493de23d13290c55b69fdfc6eac4", "bug_code_uid": "d2db09139f9c962896bc0bfbc195406c", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "270f14f79472ca24287dcea4beb28a59", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ara[2][n];\n    int i,j,k,l;\n    long long int vol=0;\n    int max=0;\n    int second_max=0;\n    for(i=0; i<2; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%d\",&ara[i][j]);\n            if(i==0)\n            {\n                vol=vol+ara[i][j];\n            }\n        }\n    }\n\n\n    for(i=0; i<n; i++)\n    {\n        if(ara[1][i]>max){\n            second_max=max;\n            max=ara[1][i];\n        }\n        if((ara[1][i]>second_max) && (ara[1][i]!=max))\n            second_max=ara[1][i];\n\n    }\n\n    long long int sum=max+second_max;\n\n    if(sum-vol>=0 || n==2)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nint main(void)\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ara[2][n];\n    int i,j,k,l;\n    long long int vol=0;\n    int max=0;\n    int second_max=0;\n    for(i=0; i<2; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%d\",&ara[i][j]);\n            if(i==0)\n            {\n                vol=vol+ara[i][j];\n            }\n        }\n    }\n\n    qsort(ara[1], n, sizeof(int), cmpfunc);\n\n    long long int sum=ara[1][n-1]+ara[1][n-2];\n\n    if(sum-vol>=0 || n==2)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9929873772791024, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f48d1227993f417a528386d2e96a8af7", "bug_code_uid": "d2ed1da823e2d464e56c1b6c3a9b640f", "src_uid": "414d1f0cef26fbbf4ede8eac32a1dd48", "apr_id": "4795fceceb312d231ea8e7b834bb1c90", "difficulty": 1600, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tlong long int res[t];\n\tfor(int i=0; i<t; i++){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tlong long int health[n],damage[n];\n\t\tlong long int bullets = 0;\n\t\tfor(int j=0; j<n; j++)\n\t\t\tscanf(\"%lld %lld\",&health[j],&damage[j]);\n\n\t\tfor(int j=1; j<n; j++){\n\t\t\tif(damage[j-1]<health[j]){\n\t\t\t\tbullets += health[j]-damage[j-1];\n\t\t\t\thealth[j] = damage[j-1];\n\t\t\t}\n\t\t}\n\t\tif(damage[n-1]<health[0]){\n\t\t\tbullets += health[0]-damage[n-1];\n\t\t\thealth[0] = damage[n-1];\n\t\t}\n\n\t\tint small = health[0];\n\t\tfor(int j=1; j<n; j++){\n\t\t\tif(health[j]<small)\n\t\t\t\tsmall = health[j];\n\t\t}\n\t\tbullets += small;\n\n\t\tres[i]=bullets;\n\t}\n\n\tfor(int i=0; i<t; i++)\n\t\tprintf(\"%lld\\n\", res[i]);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tlong long int res[t];\n\tfor(int i=0; i<t; i++){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tlong long int health[n],damage[n];\n\t\tlong long int bullets = 0;\n\t\tfor(int j=0; j<n; j++)\n\t\t\tscanf(\"%lld %lld\",&health[j],&damage[j]);\n\n\t\tfor(int j=1; j<n; j++){\n\t\t\tif(damage[j-1]<health[j]){\n\t\t\t\tbullets += health[j]-damage[j-1];\n\t\t\t\thealth[j] = damage[j-1];\n\t\t\t}\n\t\t}\n\t\tif(damage[n-1]<health[0]){\n\t\t\tbullets += health[0]-damage[n-1];\n\t\t\thealth[0] = damage[n-1];\n\t\t}\n\n\t\tlong long int small = health[0];\n\t\tfor(int j=1; j<n; j++){\n\t\t\tif(health[j]<small)\n\t\t\t\tsmall = health[j];\n\t\t}\n\t\tbullets += small;\n\n\t\tres[i]=bullets;\n\t}\n\n\tfor(int i=0; i<t; i++)\n\t\tprintf(\"%lld\\n\", res[i]);\n\n\treturn 0;\n}"}
{"similarity_score": 0.5799828913601369, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "db4b84bb2334ed06eb78d075c62818ff", "bug_code_uid": "51b82f73ea8e2dd77d2f927a9a7d5a37", "src_uid": "e21e768dbb2e5f72873dc1c7de4879fd", "apr_id": "48e65c6e85c7684b682f3e9efa6ea598", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdbool.h>\n\nint main()\n{\n    int n,a,b,i=0;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    while(n--)\n    {\n        int t;\n        scanf(\"%d\",&t);\n        if(t==1)\n        {\n            if(a>0)\n                a--;\n            else if(b>0)\n            {\n                b--;\n                a++;\n            }\n            else\n                i+=t;\n        }\n        else if(t==2)\n        {\n            if(b>0)\n                b--;\n            else\n                i+=t;\n        }\n    }\n    printf(\"%d\",i);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdbool.h>\n\nint main()\n{\n    int n,a,b,i=0,one=0,two=0,twone=0;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    while(n--)\n    {\n        int t;\n        scanf(\"%d\",&t);\n        if(t==1)\n        {\n            if(one<a)\n                one++;\n            else if(two<b)\n            {\n                two++;\n                twone++;\n            }\n            else if(twone!=0)\n                twone--;\n            else\n                i+=t;\n        }\n        else if(t==2)\n        {\n            if(two<b)\n                two++;\n            else\n                i+=t;\n        }\n    }\n    printf(\"%d\",i);\n    return 0;\n}\n"}
{"similarity_score": 0.9985693848354793, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "917232653cac55f4055b692d540024ab", "bug_code_uid": "dd72a3f98df359519558c094e72c935f", "src_uid": "581c89736e549300c566e4700b741906", "apr_id": "1245403e5473e32f5b98562247e16df2", "difficulty": 800, "tags": ["games", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int n, m, ali[300],bob[300],t,max_1,max_2,i,j;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n    scanf(\"%d\",&ali[i]);\n\n    }\n    scanf(\"%d\",&m);\n    for(j=0;j<m;j++)\n    {\n\n    scanf(\"%d\", &bob[j]);\n\n    }\n    max_1=ali[0];\n    max_2=bob[0];\n\n    for(int k=1;k<n;k++)\n    {\n\n    if(max_1<ali[k])\n    max_1=ali[k];\n    }\n    for(int l=1;l<m;l++)\n    {\n\n    if(max_2<bob[l])\n     max_2=bob[l];\n    }\n    {\n   if(max_1>max_2)\n   {\n  printf(\"Alice\\n\");\n    printf(\"Alice\\n\");\n}\n    else if(max_1<max_2)\n    {\n    printf(\"B0b\\n\");\n     printf(\"Bob\\n\");\n}\n else\n {\n printf(\"Alice\\n\");\n  printf(\"Bob\\n\");\n\n }\n\n\n    }\n    }\n}\n\n", "fixed": "#include <stdio.h>\n\nint main() {\n    int n, m, ali[300],bob[300],t,max_1,max_2,i,j;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n    scanf(\"%d\",&ali[i]);\n\n    }\n    scanf(\"%d\",&m);\n    for(j=0;j<m;j++)\n    {\n\n    scanf(\"%d\", &bob[j]);\n\n    }\n    max_1=ali[0];\n    max_2=bob[0];\n\n    for(int k=1;k<n;k++)\n    {\n\n    if(max_1<ali[k])\n    max_1=ali[k];\n    }\n    for(int l=1;l<m;l++)\n    {\n\n    if(max_2<bob[l])\n     max_2=bob[l];\n    }\n    {\n   if(max_1>max_2)\n   {\n  printf(\"Alice\\n\");\n    printf(\"Alice\\n\");\n}\n    else if(max_1<max_2)\n    {\n    printf(\"Bob\\n\");\n     printf(\"Bob\\n\");\n}\n else\n {\n printf(\"Alice\\n\");\n  printf(\"Bob\\n\");\n\n }\n\n\n    }\n    }\n}\n\n"}
{"similarity_score": 0.9950738916256158, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2eacfab6cab830838ba1512a141fd409", "bug_code_uid": "ad4e59c261100dc201bb064f077ab800", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "2fcea725119d768763353106cdc1c570", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n      int arr [4];\n      int i=0;\n      int n;\n      for( i=0;i<4;i++){\n        scanf(\"%d\",&n);\n        arr[i]=n;\n      }\n      for(i=0;i<4;i++){\n        if(arr[i]>arr[i+1]){\n            int temp = arr[i];\n            arr[i]=arr[i+1];\n            arr[i+1]=temp;\n        }\n      }\n      printf(\" %d %d %d \",arr[3]-arr[2],arr[3]-arr[1],arr[3]-arr[0]);\n\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n      int arr [4];\n      int i=0;\n      int n;\n      for( i=0;i<4;i++){\n        scanf(\"%d\",&n);\n        arr[i]=n;\n      }\n      for(i=0;i<3;i++){\n        if(arr[i]>arr[i+1]){\n            int temp = arr[i];\n            arr[i]=arr[i+1];\n            arr[i+1]=temp;\n        }\n      }\n      printf(\"%d %d %d \",arr[3]-arr[2],arr[3]-arr[1],arr[3]-arr[0]);\n\n\n}"}
{"similarity_score": 0.9984447900466563, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5d694aaf9787ef41dff0d9d4f8ffd020", "bug_code_uid": "1db3806fec6ea0ceeb0e309fe6a0ea9c", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "c1823aa4f74683565e29e7ead526094f", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n//\tchar str[100];\n\tint n,i=0;\n\tscanf(\"%d\",&n);\n\twhile(n!=0){\n\t\tchar str[100];\n\tscanf(\"%s\",&str);\n\tif(strlen(str)>=10)\n\t\tprintf(\"%c%d%c\\n\",str[0],strlen(str)-2,str[strlen(str)-1]);\n\telse \n\t\tprintf(\"%s\\n\",str);\n\tn--;\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n//\tchar str[100];\n\tint n,i=0;\n\tscanf(\"%d\",&n);\n\twhile(n!=0){\n\t\tchar str[100];\n\tscanf(\"%s\",&str);\n\tif(strlen(str)>10)\n\t\tprintf(\"%c%d%c\\n\",str[0],strlen(str)-2,str[strlen(str)-1]);\n\telse \n\t\tprintf(\"%s\\n\",str);\n\tn--;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9624413145539906, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "de2b0b4f97ed477e850a47c56cfd2c70", "bug_code_uid": "327a601830be84e24caa75a4c11a6945", "src_uid": "7d1e8769a6b1d5c6680ab530d19e7fa4", "apr_id": "38b8f324cb70bf5e0b5916f25dadb723", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long func(long long crime[], long long st_ind, long long n, long long t, long long c);\n\nint main() {\n\n\tlong long n;\n\tlong long t;\n\tlong long c;\n\tlong long crime[200000];\n\n\tlong long i;\n\tlong long j;\n\tlong long count;\n\n\tdo {\n\t\tscanf(\"%lld\", &n);\n\t}\n\twhile (n < 1 || n > 200000);\n\n\tdo {\n                scanf(\"%lld\", &t);\n        }\n        while (t < 0 || t > 1000000000);\n\n\tdo {\n                scanf(\"%lld\", &c);\n        }\n        while (c < 1 || c > n);\n\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%lld\", &crime[i]);\n\t}\n\n\tfor (i = func(crime,0,n,t,c), count = (i <= n) ? 1 : 0; i < n;) {\n\n\t\tif (crime[i] <= t) {\n\t\t\ti++;\n\t\t}\n\n\t\telse {\n\t\t\ti = func(crime,i+1,n,t,c); \n\t\t}\n\n\t\tif (i <= n) {\n\t\t\tcount++;\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\", count);\n\n\treturn (0);\n}\n\nlong long func(long long crime[], long long st_ind, long long n, long long t, long long c) {\n\t\n\tlong long i;\n\tlong long flag;\n\n\tfor (i = st_ind, flag = 0; flag < c && i < n; i++) {\n\t\t\n\t\tif (crime[i] <= t) {\n\t\t\tflag++;\t\n\t\t}\n\t\t\n\t\telse {\n\t\t\tflag = 0;\n\t\t}\n\t}\n\n\treturn (i);\n}\n", "fixed": "#include <stdio.h>\n\nlong long func(long long crime[], long long st_ind, long long n, long long t, long long c);\n\nint main() {\n\n\tlong long n;\n\tlong long t;\n\tlong long c;\n\tlong long crime[200000];\n\n\tlong long i;\n\tlong long j;\n\tlong long count;\n\n\tdo {\n\t\tscanf(\"%lld\", &n);\n\t}\n\twhile (n < 1 || n > 200000);\n\n\tdo {\n                scanf(\"%lld\", &t);\n        }\n        while (t < 0 || t > 1000000000);\n\n\tdo {\n                scanf(\"%lld\", &c);\n        }\n        while (c < 1 || c > n);\n\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%lld\", &crime[i]);\n\t}\n\n\tfor (i = func(crime,0,n,t,c), count = (i <= n) ? 1 : 0; i < n;) {\n\n\t\tif (crime[i] <= t) {\n\t\t\ti++;\n\t\t}\n\n\t\telse {\n\t\t\ti = func(crime,i+1,n,t,c); \n\t\t}\n\n\t\tif (i <= n) {\n\t\t\tcount++;\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\", count);\n\n\treturn (0);\n}\n\nlong long func(long long crime[], long long st_ind, long long n, long long t, long long c) {\n\t\n\tlong long i;\n\tlong long flag;\n\n\tfor (i = st_ind, flag = 0; flag < c && i < n; i++) {\n\t\t\n\t\tif (crime[i] <= t) {\n\t\t\tflag++;\t\n\t\t}\n\t\t\n\t\telse {\n\t\t\tflag = 0;\n\t\t}\n\t}\n\n\tif (flag == c) {\n\t\treturn (i);\t\n\t}\n\n\telse {\n\t\treturn (n+1);\n\t}\t\n}\n"}
{"similarity_score": 0.4124748490945674, "equal_cnt": 24, "replace_cnt": 17, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "4f0da1e82a8cb8883a99a6dd5ad848f0", "bug_code_uid": "a8a0642bd151b363bd11d40afd0728f6", "src_uid": "dcf7988c35bb34973e7b60afa7a0e68c", "apr_id": "d64c51348093b7cfc5f158a893a6b45f", "difficulty": 1700, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint arr[200001], nxt[200001],n,m;\nint main()\n{\n    scanf(\"%i%i\", &n,&m);\n    for(int i=1 ; i<=n ; i++)\n        scanf(\"%i\", &arr[i]);\n    arr[0]=arr[1];\n    for(int i=n, last=n ; i>=1 ; i--){\n        nxt[i]=last;\n        if(arr[i]!=arr[i-1]) last= i;\n    }\n    for(int i=0 ; i<m ; i++){\n        int l,r,d,flag=0;\n        scanf(\"%i%i%i\", &l,&r,&d);\n        for(int k=l ; k<=r ; k=nxt[k])\n            if(arr[k]!=d){\n                printf(\"%i\\n\", k);\n                flag=1;\n                break;\n            }\n        if(!flag)\n            printf(\"%i\\n\", -1);\n    }\n}", "fixed": "#include <stdio.h>\nint n,m,i,arr[200002],nxt[200002];\nint main(){\n    for (scanf(\"%i%i\", &n,&m), i=1;i<=n;i++)\n        scanf(\"%i\", &arr[i]);\n    for (i=n;i>0;i--)\n        if(arr[i]==arr[i+1])nxt[i]=nxt[i+1]+1;\n        else nxt[i]=1;\n    for(i=0;i<m;i++){\n        int L,R,d;\n        scanf(\"%i%i%i\",&L,&R,&d);\n        while(arr[L]==d && L<=R){L+=nxt[L];}\n        printf(\"%d\\n\",(L<=R && arr[L]!=d)?L:-1);\n    }\n}"}
{"similarity_score": 0.9620253164556962, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "79f5b2f39378110f815008a0253c0270", "bug_code_uid": "f0602184f8de5496144953821a8b1f67", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "fc33739bec59bcc956f77702d110ab5a", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j=0,k=0,l=0;\n\n    scanf(\"%d\",&n);\n\n    int arr[n],arr1[n],arr2[n],arr3[n],cout=0;\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]==1)\n        {\n            arr1[j]=i+1;\n            j++;\n        }\n\n        else if(arr[i]==2)\n        {\n            arr2[k]=i+1;\n            k++;\n        }\n\n        else if(arr[i]==3)\n        {\n            arr3[l]=i+1;\n            l++;\n        }\n    }\n\n    if(j==0||k==0||l==0)\n    {\n        printf(\"0\");\n    }\n\n\n    if(j<k&&j<l){cout=j;printf(\"%d\\n\",cout);}\n\n\n    else if(k<l){cout=k;printf(\"%d\\n\",cout);}\n\n    else{cout=l;printf(\"%d\\n\",cout);}\n\n\n    for(i=0;i<cout;i++)\n    {\n        printf(\"%d %d %d\\n\",arr1[i],arr2[i],arr3[i]);\n    }\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j=0,k=0,l=0;\n\n    scanf(\"%d\",&n);\n\n    int arr[n],arr1[n],arr2[n],arr3[n],cout=0;\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]==1)\n        {\n            arr1[j]=i+1;\n            j++;\n        }\n\n        else if(arr[i]==2)\n        {\n            arr2[k]=i+1;\n            k++;\n        }\n\n        else if(arr[i]==3)\n        {\n            arr3[l]=i+1;\n            l++;\n        }\n    }\n\n\n\n\n    if(j<k&&j<l){cout=j;printf(\"%d\\n\",cout);}\n\n\n    else if(k<l){cout=k;printf(\"%d\\n\",cout);}\n\n    else{cout=l;printf(\"%d\\n\",cout);}\n\n\n    for(i=0;i<cout;i++)\n    {\n        printf(\"%d %d %d\\n\",arr1[i],arr2[i],arr3[i]);\n    }\n\n\n\n\n}\n"}
{"similarity_score": 0.9428129829984544, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "39f738bb690ad476eb06f831bb0f7df1", "bug_code_uid": "a09d41dac5db7c7a819066ccb72b88ac", "src_uid": "d6423f380e6ba711d175d91e73f97b47", "apr_id": "a8827ccb77842c07ce666177d2cb5ecc", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n\t{\n\t\tint n;\n\t\tscanf(\"%d%*c\",&n);\n\t\tchar s[256];\n\t\tgets(s);\n\t\tchar insert[4]={'A','G','C','T'};\n\t\tint number[4]={0};\n\t\tif (n%4!=0) printf(\"===\");\n\t\telse\n\t\t{\n\t\t\tint count;\n\t\t\tfor (count = 0; count < n; count++)\n\t\t\t\t{\n\t\t\t\t\tif (s[count] == 'A') number[0]++;\n\t\t\t\t\tif (s[count] == 'G') number[1]++;\n\t\t\t\t\tif (s[count] == 'C') number[2]++;\n\t\t\t\t\tif (s[count] == 'T') number[3]++;\n\t\t\t\t}\n\t\t\tfor (count = 0; count < 4; count++) \n\t\t\t\t{\n\t\t\t\t\tnumber[count] = n/4-number[count];\n\t\t\t\t\tif (number[count]<0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintf(\"===\");\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\tfor (count = 0; count < n; count++)\n\t\t\t\t{\n\t\t\t\t\tif (s[count]=='?')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint check =0;\n\t\t\t\t\t\t\tint dem = 0;\n\t\t\t\t\t\t\twhile (check !=1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (number[dem]>0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ts[count] = insert[dem];\n\t\t\t\t\t\t\t\t\t\t\tcheck =1;\n\t\t\t\t\t\t\t\t\t\t\tnumber[dem]--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse dem++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tputs(s);\n\n\t\t}\n\t\t\n\t}", "fixed": "#include <stdio.h>\nint main(void)\n\t{\n\t\tint n;\n\t\tscanf(\"%d%*c\",&n);\n\t\tchar s[256];\n\t\tgets(s);\n\t\tchar insert[4]={'A','G','C','T'};\n\t\tint number[4]={0};\n\t\tif (n%4!=0) printf(\"===\");\n\t\telse\n\t\t{\tint checklog=0;\n\t\t\tint count;\n\t\t\tfor (count = 0; count < n; count++)\n\t\t\t\t{\n\t\t\t\t\tif (s[count] == 'A') number[0]++;\n\t\t\t\t\tif (s[count] == 'G') number[1]++;\n\t\t\t\t\tif (s[count] == 'C') number[2]++;\n\t\t\t\t\tif (s[count] == 'T') number[3]++;\n\t\t\t\t}\n\t\t\tfor (count = 0; count < 4; count++) \n\t\t\t\t{\n\t\t\t\t\tnumber[count] = n/4-number[count];\n\t\t\t\t\tif (number[count]<0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintf(\"===\");\n\t\t\t\t\t\t\tchecklog = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif (checklog == 0){\n\t\t\tfor (count = 0; count < n; count++)\n\t\t\t\t{\n\t\t\t\t\tif (s[count]=='?')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint check =0;\n\t\t\t\t\t\t\tint dem = 0;\n\t\t\t\t\t\t\twhile (check !=1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (number[dem]>0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ts[count] = insert[dem];\n\t\t\t\t\t\t\t\t\t\t\tcheck =1;\n\t\t\t\t\t\t\t\t\t\t\tnumber[dem]--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse dem++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tputs(s);\n\t\t\t}\n\n\t\t}\n\t\t\n\t}"}
{"similarity_score": 0.9344827586206896, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "103f1c2b7be09cd0e0ccaa7e2a1c6964", "bug_code_uid": "f0374142d91e819a8fe6de32ca371166", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "c93014c680e5301dae6fbe48ca78ace8", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid output(int ph,int pm)\n{\nif(ph < 10)\nprintf(\"0%d:\",ph);\nelse\nprintf(\"%d:\",ph);\nif(pm < 10)\nprintf(\"0%d\\n\",pm);\nelse\nprintf(\"%d\\n\",pm);\n\n}\nint main()\n{\nint n,hh,mm;\nint ph,pm;\nscanf(\"%d\",&n);\nscanf(\"%d:%d\",&hh,&mm);\nif(n == 12)\n{\nif(hh >= 1 && hh <= 12)\nph = hh;\nelse\n{\n//if(h/10 == 1)\nph = hh % 10;\n//if(h/10 != 1)\n\n}\nif(mm >= 0 && mm <= 59)\npm = mm;\nelse\npm = mm % 10;\n}\nelse if(n == 24)\n{\nif(hh >= 0 && hh <= 23)\nph = hh;\nelse\n{\nph = hh % 10;\n}\nif(mm >= 0 && mm <= 59)\npm = mm;\nelse\npm = mm % 10;\n}\n\noutput(ph,pm);\n}\n", "fixed": "#include<stdio.h>\n\nvoid output(int ph,int pm)\n{\nif(ph < 10)\nprintf(\"0%d:\",ph);\nelse\nprintf(\"%d:\",ph);\nif(pm < 10)\nprintf(\"0%d\\n\",pm);\nelse\nprintf(\"%d\\n\",pm);\n\n}\nint main()\n{\nint n,hh,mm;\nint ph,pm;\nscanf(\"%d\",&n);\nscanf(\"%d:%d\",&hh,&mm);\nif(n == 12)\n{\nif(hh >= 1 && hh <= 12)\nph = hh;\nelse\n{\n//if(h/10 == 1)\n\n//ph = hh % 10;\nif(hh == 0)\nph = 1;\n\nelse if(hh % 10 == 0 )\nph =  10;\nelse\nph = hh % 10;\n//if(h/10 != 1)\n\n}\nif(mm >= 0 && mm <= 59)\npm = mm;\nelse\npm = mm % 10;\n}\nelse if(n == 24)\n{\nif(hh >= 0 && hh <= 23)\nph = hh;\nelse\n{\nph = hh % 10;\n}\nif(mm >= 0 && mm <= 59)\npm = mm;\nelse\npm = mm % 10;\n}\n\noutput(ph,pm);\n}\n"}
{"similarity_score": 0.09690601284296556, "equal_cnt": 20, "replace_cnt": 17, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "0c50849f97c6d0523d5799b2df0d1ec0", "bug_code_uid": "b96748aa75c0f89ab208de036aba0402", "src_uid": "7749f37aa9bf88a00013557e14342952", "apr_id": "4f79725312e876f22b5d61bf73030a9f", "difficulty": 800, "tags": ["combinatorics", "implementation", "constructive algorithms", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\nint i, j;\nint n;\nbool mark[100][100]; //\u6807\u8bb0\nchar map[100][100]; //\u5730\u56fe\nint num;\nbool isOK(int x, int y);\nvoid count (int x, int y);\nint main(void) {\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) \n       scanf(\"%s\", map[i]);\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (map[i][j] == 'C') {\n                mark[i][j] = true; //\u907f\u514d\u81ea\u5df1\u548c\u81ea\u5df1\u914d\u5bf9\n                count(i, j);\n                mark[i][j] = false;\n            }\n        }\n    }\n\n    printf(\"%d\\n\", num);\n    system(\"pause\");\n}\nbool isOK(int x, int y) {\n    //\u662f\u5426\u5728\u540c\u4e00\u884c\n    if (x == i && y < n)\n        return true;\n    //\u662f\u5426\u5728\u540c\u4e00\u5217\n    else if (y == j && x < n)\n        return true;\n    else \n        return false;        \n}\n\nvoid count (int x, int y) { //\u51fd\u6570\u4f5c\u7528\uff1a\u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u80fd\u548c(i. j)\u5904\u914d\u5bf9\n    if (isOK(x, y)) {   //\u5728\u80fd\u7edf\u8ba1\u7684\u524d\u63d0\u4e0b\u8fdb\u884c\n        if (mark[x][y] == false && map[x][y] == 'C')\n            num++;\n        count(x + 1, y);\n        count(x, y + 1);    \n    }\n    return;\n}", "fixed": "#include<stdio.h>\nint n;\nchar a[105][105];\nint dx[2]={0,1};\nint dy[2]={1,0};\nint b[105]={0},c[105]={0};\nvoid dfs1(int x,int y,int z){\n\tx+=dx[0];\n\ty+=dy[0];\n\tif(x>=n||y>=n)return ;\n\tif(a[x][y]=='C')b[z]++;\n\tdfs1(x,y,z);\n}\nvoid dfs2(int x,int y,int z){\n\tx+=dx[1];\n\ty+=dy[1];\n\tif(x>=n||y>=n)return ;\n\tif(a[x][y]=='C')c[z]++;\n\tdfs2(x,y,z);\n}\nint main()\n{\n\tint i,sum=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t    scanf(\"%s\",a[i]);\n\t}\n\tif(a[0][0]=='C'){\n\t\t\tb[0]++;\n\t\t\tc[0]++;\n\t\t}\n\tfor(i=0;i<n;i++){\n\t\tif(a[i][0]=='C'&&i!=0){\n\t\t\tb[i]++;\n\t\t}\n\t\tif(a[0][i]=='C'&&i!=0){\n\t\t\tc[i]++;\n\t\t}\n\t\tdfs2(0,i,i);\n\t\tdfs1(i,0,i);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tsum+=b[i]*(b[i]-1)/2;\n\t\tsum+=c[i]*(c[i]-1)/2;\n\t}\n\tprintf(\"%d\",sum);\nreturn 0;\t\n } "}
{"similarity_score": 0.9566074950690335, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b52215315d91585d2af311a96e082083", "bug_code_uid": "bc3acccfb617697350a6f6a2095da011", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "052034305cbecc6bd935924e87b7ef53", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int n,m,max;\n        int i,j;\n        int p1,p2,p3;\n\n        scanf(\"%d%d\",&n,&m);\n\n        int a[m][n];\n        int w[n];\n\n        for(i=0;i<n;i++)\n        {\n            w[i]=0;\n        }\n\n        for(i=0;i<m;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                scanf(\"%d\",&a[i][j]);\n            }\n        }\n\n        for(i=0;i<m;i++)\n        {\n                max=a[i][0];\n                p2=j;\n                for(j=1;j<n;j++)\n                {\n                    if(a[i][j]>max)\n                    {\n                        max=a[i][j];\n                        p2=j;\n                    }\n                }\n                w[p2]++;\n        }\n\n        max=w[0];\n        p3=w[0];\n        for(i=0;i<n;i++)\n        {\n            if(max<w[i])\n            {\n                max=w[i];\n                p3=i;\n            }\n\n            //printf(\"%d  \",w[i]);\n        }\n\n        printf(\"%d\",p3+1);\n\n        return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int n,m,max;\n        int i,j;\n        int p1,p2,p3;\n\n        scanf(\"%d%d\",&n,&m);\n\n        int a[m][n];\n        int w[n];\n\n        for(i=0;i<n;i++)\n        {\n            w[i]=0;\n        }\n\n        for(i=0;i<m;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                scanf(\"%d\",&a[i][j]);\n            }\n        }\n\n        for(i=0;i<m;i++)\n        {\n                max=a[i][0];\n                p2=0;\n                for(j=1;j<n;j++)\n                {\n                    if(a[i][j]>max)\n                    {\n                        max=a[i][j];\n                        p2=j;\n                    }\n                }\n                w[p2]++;\n        }\n\n        max=w[0];\n        p3=0;\n        for(i=0;i<n;i++)\n        {\n            if(max<w[i])\n            {\n                max=w[i];\n                p3=i;\n            }\n\n            else if(max==w[i])\n            {\n                p3=p3;\n            }\n\n            //printf(\"%d  \",w[i]);\n        }\n\n        printf(\"%d\",p3+1);\n\n        return 0;\n\n}\n"}
{"similarity_score": 0.9649737302977233, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fc8edabe497ad9689840e44636c4791b", "bug_code_uid": "57dfe3fceeab1d79bbaf86f93fbffb7f", "src_uid": "41bdb08253cf5706573f5d469ab0a7b3", "apr_id": "35633c57f5750ed46d28c9faf3b7ba58", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n,m,i,j,k,max,l;\n\t//char max;\n\tscanf(\"%d %d\",&n,&m);\n\tchar str[101][101];\n\tint a[100];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%s\",str[i]);\n\t}\n\tk=0;\n\tfor(i=0;i<m;i++){\n\t\tmax=str[0][i]-'0';\n\t\t//g=1;\n\t\tfor (j=0;j<n;j++){\n\t\t\tif (str[j][i]-'0'>max){\n\t\t\t\tmax=str[j][i]-'0';\n\t\t\t\t//g=j+1;\n\t\t\t}\n\t\t}\n\t\t//printf(\"%d \",max);\n\t\tfor (j=0;j<n;j++){\n\t\t\tif ((str[j][i]-'0')==max){\n\t\t\t\ta[k]=j+1;\n\t\t\t\tk=k+1;\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tl=k;\n\tfor (i=0;i<k-1;i++){\n\t\tfor (j=i+1;j<k;j++){\n\t\t\tif (a[i]==a[j]){\n\t\t\t\tl=l-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n,m,i,j,k,max,l;\n\t//char max;\n\tscanf(\"%d %d\",&n,&m);\n\tchar str[1001][1001];\n\tint a[100000];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%s\",str[i]);\n\t}\n\tk=0;\n\tfor(i=0;i<m;i++){\n\t\tmax=str[0][i]-'0';\n\t\t//g=1;\n\t\tfor (j=0;j<n;j++){\n\t\t\tif (str[j][i]-'0'>=max){\n\t\t\t\tmax=str[j][i]-'0';\n\t\t\t\t//g=j+1;\n\t\t\t}\n\t\t}\n\t\t//printf(\"%d \",max);\n\t\tfor (j=0;j<n;j++){\n\t\t\tif ((str[j][i]-'0')==max){\n\t\t\t\ta[k]=j+1;\n\t\t\t\tk=k+1;\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tl=k;\n\tfor (i=0;i<k-1;i++){\n\t\tfor (j=i+1;j<k;j++){\n\t\t\tif (a[i]==a[j]){\n\t\t\t\tl=l-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9978448275862069, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e1bf54d4f8e4fdfc5129a1647bb54549", "bug_code_uid": "26afbd03ef05c37a609a0b0cf5971e65", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "cbb914198c23439931d00fff050f8fec", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint pm(int a, int b) {\n\tif (a > b)\n\t\treturn a - b;\n\telse if (a < b)\n\t\treturn b - a;\n}\n\nint exa(int a, int b) {\n\tif (a == b)\n\t\treturn 0;\n\tif (pm(a, b) % 10 != 0)\n\t\treturn pm(a, b) / 10 + 1;\n\telse\n\t\treturn pm(a, b) / 10;\n}\n\nint main(void) {\n\n\tint t, a, b;\n\tint arr[10000];\n\n\tscanf(\"%d\", &t);\n\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tarr[i] = exa(a, b);\n\t}\n\t\n\tfor (int i = 0; i < t; i++)\n\t\tprintf(\"%d\\n\", arr[i]);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint pm(int a, int b) {\n\tif (a > b)\n\t\treturn a - b;\n\telse if (a < b)\n\t\treturn b - a;\n}\n\nint exa(int a, int b) {\n\tif (a == b)\n\t\treturn 0;\n\tif (pm(a, b) % 10 != 0)\n\t\treturn pm(a, b) / 10 + 1;\n\telse\n\t\treturn pm(a, b) / 10;\n}\n\nint main(void) {\n\n\tint t, a, b;\n\tint arr[100000];\n\n\tscanf(\"%d\", &t);\n\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tarr[i] = exa(a, b);\n\t}\n\n\tfor (int i = 0; i < t; i++)\n\t\tprintf(\"%d\\n\", arr[i]);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.17432646592709986, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "bdbcfb5aba929b19b3799d51ce4fdbce", "bug_code_uid": "8d76970c81cd36cd02ab1d85da1c6706", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "2130f79b51123c5574a8196513bed326", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n #include<stdio.h >\n # include< string.h >\nint main()\n{ int n,i,j,k= 0,count= 0 ;\n scanf(\"%d\",&n);\n char  c[n][2];\n for(i=0;i<n;i++)\n scanf(\"%s \" ,c[i]);\n \n for( i =0;i<n; i=i+k+1 )\n  \n{ k = 0;\n    for(j=i+1;j<n;j++) \n   { if(strcmp(c[i], c[j])==0)\n      k++;\n      else\n    {  \n     count++;\n     break;\n     }\n   }\n}\n \n printf(\"%d\",count+1);\n \n \n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int n,i,k=0;\n   scanf(\"%d\",&n);\n   int c[n];\n   for(i=0;i<n;i++)\n    scanf(\"%d\",&c[i]);\n  for (int i = 0; i < n-1; i++)\n       { \n        if(c[i]!=c[i+1])\n          k++;\n       }     \n       \n   printf(\"%d\",k+1);\n   return 0;\n}"}
{"similarity_score": 0.9067796610169492, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7de0df69132a7285ab1ddf0ec3627e0f", "bug_code_uid": "e6087cc1bde29ad7d484eb3e6fc62c57", "src_uid": "ac248c83c99d8a2262772816b5f4ac6e", "apr_id": "1e0530234eca91a7a272820f236ab6c5", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n       int a,i;\n    scanf(\"%d\",&a);\n    for(i=1;i<a+1;i++)\n    {\n      printf(\"%d \",i);\n    }\n    printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n       int i,a;\n    scanf(\"%d\",&a);\n    printf(\"%d\",a);\n    printf(\"\\n\");\n    for(i=1;i<a+1;i++)\n    {\n      printf(\"%d \",i);\n    }\n    printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9740698985343855, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9f7f5c95bbcab88ba77912e4fa08b537", "bug_code_uid": "c4a783e5df264b1a1d0d4c461fa5a56f", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "bb11481d3cf6e888e426d088e2a15284", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n  int i,n,r=0,q=0,w=0,e=0,m,z,h,d,f,v,x,result=0;\n    int a[100];\n    scanf(\"%d\\n\",&n);\n    for(i=0;i<n;++i){\n        scanf(\"%d\",&a[i]);\n            if(a[i]==1)\n                ++q;\n            if(a[i]==2)\n                ++w;\n            if(a[i]==3)\n                ++e;\n            if(a[i]==4)\n                ++r;\n    }\n    result=result+r;\n    m=w%2;\n    if(m==0){\n        w=w/2;\n        result=result+w;\n        w=0;\n    }\n    else{\n        w=(w-1)/2;\n        result=result+w;\n    w=1;\n    }\n    if(e>=q){\n        result=result+q;\n        e=e-q;\n        result=result+e;\n        result=result+w;\n    }\n    else\n    {\n        result=result+e;\n        q=q-e;\n        z=q/4;\n        result=result+z;\n        v=q%4;\n        d=w+v;\n        f=d/4;\n        result=result+f;\n        h=d%4;\n        if(h!=0)\n          result=result+1;\n    }\n    printf(\"%d\",result);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain(){\n  int i,n,r=0,q=0,w=0,e=0,m,z,h,d,f,v,x,result=0;\n    int a[1000000];\n    scanf(\"%d\\n\",&n);\n    for(i=0;i<n;++i){\n        scanf(\"%d\",&a[i]);\n            if(a[i]==1)\n                ++q;\n            if(a[i]==2)\n                ++w;\n            if(a[i]==3)\n                ++e;\n            if(a[i]==4)\n                ++r;\n    }\n    result=result+r;\n    m=w%2;\n    if(m==0){\n        w=w/2;\n        result=result+w;\n        w=0;\n    }\n    else{\n        w=(w-1)/2;\n        result=result+w;\n    w=1;\n    }\n    if(e>=q){\n        result=result+e;\n        result=result+w;\n    }\n    else\n    {\n        result=result+e;\n        q=q-e;\n        z=q/4;\n        result=result+z;\n        v=q%4;\n        d=2*w+v;\n        f=d/4;\n        result=result+f;\n        h=d%4;\n        if(h!=0)\n          result=result+1;\n    }\n    printf(\"%d\",result);\n    return 0;\n}\n"}
{"similarity_score": 0.8108552631578947, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "cad382f7cf3571d737b53011b4961080", "bug_code_uid": "f4d21831f79a2d3e5c9a7e239d64425d", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "93e90f8acde348322a92ff2a9795cb20", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,f=0,k=0;\n    scanf(\"%d\",&n);\n    int ara[n][2];\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<2; j++)\n        {\n            scanf(\"%d\",&ara[i][j]);\n        }\n    }\n    f=0;\n    for(i=0; i<n; i++)\n    {\n\n        if((ara[i][0]<ara[i+1][0]))\n        {\n            f=1;\n        }\n        if(ara[i][0]==ara[i][1])\n        {\n            f=2;\n        }\n\n    }\n    if(f==1)\n    {\n        printf(\"rated\\n\");\n    }\n    else if(f==2)\n    {\n        printf(\"unrated\\n\");\n    }\n    else\n    {\n        printf(\"maybe\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,f=0,k=0;\n    scanf(\"%d\",&n);\n    int ara[n][2];\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<2; j++)\n        {\n            scanf(\"%d\",&ara[i][j]);\n        }\n    }\n    for(i=0;i<n-1;i++)\n    {\n        if(ara[i][0]!=ara[i][1])\n        {\n            f=1;\n            break;\n        }\n        if((ara[i][0]<ara[i+1][0]))\n        {\n            f=2;\n        }\n    }\n    if(ara[n-1][0]!=ara[n-1][1])\n    {\n        f=1;\n    }\n    if(f==1)\n    {\n        printf(\"rated\\n\");\n    }\n    else if(f==2)\n    {\n        printf(\"unrated\\n\");\n    }\n    else\n    {\n        printf(\"maybe\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9968503937007874, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7fde2eb2df25fba32cd1831d0b17bd7d", "bug_code_uid": "feb914296f5839109c7d2ea787451c32", "src_uid": "faf1abdeb6f0cf34972d5cb981116186", "apr_id": "4d326fc768670b4c67c55dc6d0375f1b", "difficulty": 1200, "tags": ["data structures", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nvisitedr[10001];\nvisitedc[10001];\nint main(void) {\n\tlong long int r=0,c=0,n,m,x,y;\n\tscanf(\"%lld %lld\",&n,&m);\n          while(m--)\n          {\n                    scanf(\"%lld %lld\",&x,&y);\n                    if(!visitedr[x])\n                    {\n                              r+=1;\n                              visitedr[x]=1;\n                    }\n                    if(!visitedc[y])\n                    {\n                              c+=1;\n                              visitedc[y]=1;\n                    \n                    }\n                    printf(\"%lld \",(n-r)*(n-c));\n          }\n          return 0;", "fixed": "#include <stdio.h>\nvisitedr[100001];\nvisitedc[100001];\nint main(void) {\n\tlong long int r=0,c=0,n,m,x,y;\n\tscanf(\"%lld %lld\",&n,&m);\n          while(m--)\n          {\n                    scanf(\"%lld %lld\",&x,&y);\n                    if(!visitedr[x])\n                    {\n                              r+=1;\n                              visitedr[x]=1;\n                    }\n                    if(!visitedc[y])\n                    {\n                              c+=1;\n                              visitedc[y]=1;\n                    \n                    }\n                    printf(\"%lld \",(n-r)*(n-c));\n          }\n          return 0;\n}"}
{"similarity_score": 0.9509981851179673, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "152264a02006f5683dd54c5c075db591", "bug_code_uid": "aede22e7abee000d4ffdb7aa60a21c28", "src_uid": "02a94c136d3fb198025242e91264823b", "apr_id": "65f8a5ff6b79996c74690aa0024c05b1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,n,k,l,count=0;\n     char a[102],temp;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++){\n        scanf(\"%s\",a);\n    l=strlen(a);\n    for(k=0;k<l-1;k++){\n        for(j=k+1;j<l;j++)\n            {\n                if(a[k]>a[k+1]){\n                        temp=a[k];\n                a[k]=a[k+1];\n                a[k+1]=temp;\n            }\n        }\n    }\n    for(j=0,count=0;j<l-1;j++){\n        if(a[j+1]-a[j]==1) count++;\n    }\n      if(count==l-1) printf(\"Yes\\n\");\n    else  printf(\"No\\n\");\n}\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,n,k,l,count=0;\n     char a[102],temp;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++){\n        scanf(\"%s\",a);\n    l=strlen(a);\n    for(k=0;k<l-1;k++){\n        for(j=k+1;j<l;j++)\n            {\n                if(a[k]>a[j]){\n                        temp=a[k];\n                a[k]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(j=0,count=0;j<l-1;j++){\n        if(a[j+1]-a[j]==1) count++;\n    }\n      if(count==l-1) printf(\"Yes\\n\");\n    else  printf(\"No\\n\");\n}\n\n}\n"}
{"similarity_score": 0.1784037558685446, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "66804c0c6e901d3cb732a268d100bfd4", "bug_code_uid": "1f055b195e19bf2835c50df29b9cc965", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "3379c29696da1a5acaf1d32a25c41aea", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n int n,i,r;\n\nscanf(\"%d\\n\",&n);\n   int a[n];\nwhile(n){\n    \n    for(i=0;i<n;i++){\n    scanf(\"%d\\n\",&a[i]);}\n    for(i=0;i<n;i++)\n    printf(\"%d\\n\",a[i]);\n    int max=a[0];\n    int min=a[0];\n    for(i=1;i<n;i++){\n    if(a[i]>max){max=a[i];};\n    if(a[i]<min){min=a[i];}\n    \n    \n    }\n   \n    \n    r = max - min;\n    printf(\"%d\\n\",r);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint n,max,min,a,m;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--){\r\n\tscanf(\"%d\",&m);\r\n\tscanf(\"%d\",&a);\r\n\tmin=max=a;\r\n\tm--;\r\n\twhile(m--){\r\n\tscanf(\"%d\",&a);\r\n\tif(a>max)\r\n\tmax=a;\r\n\tif(a<min)\r\n\tmin=a;\r\n\t}\r\n\tprintf(\"%d\\n\",max-min);\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9922879177377892, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d0658ba92d4df794aad403c80b01a9f0", "bug_code_uid": "725a6d98da9acce3d9f2a7ef760dbbbc", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "a455321c918e218da5eda159e5e85009", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint min(int a,int b)\n{\n\tint c=a>b?b:a;\n\treturn c;\n}\nint main()\n{\n\tint i,l,k,f=0;\t\n\tchar s[1007];\n\tscanf(\"%s\",s);\n\tscanf(\"%d\",&k);\n\tl=strlen(s);\n\tint n=l/k;\n\tif(l%k!=0)\n\tprintf(\"NO\\n\");\n\telse\n\t{\n\t\tfor(i=0;i<n*k;i++)\n\t\t{\n\t\t\tif(s[i]!=s[(i/n)*n+n-1-(i%n)])\n\t\t\t{\n\t\t\t\tf=1;\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(f==0)\n\t\tprintf(\"YES\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint min(int a,int b)\n{\n\tint c=a>b?b:a;\n\treturn c;\n}\nint main()\n{\n\tint i,l,k,f=0;\t\n\tchar s[1007];\n\tscanf(\"%s\",s);\n\tscanf(\"%d\",&k);\n\tl=strlen(s);\n\tint n=l/k;\n\tif(l%k!=0)\n\tprintf(\"NO\\n\");\n\telse\n\t{\n\t\tfor(i=0;i<n*k;i++)\n\t\t{\n\t\t\tif(s[i]!=s[(i/n)*n+n-1-(i%n)])\n\t\t\t{\n\t\t\t\tf=1;\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tif(f==0)\n\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9975579975579976, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b89913bb0f4b0b3173180589b030d2af", "bug_code_uid": "607eae07b2310f053d0e67a0f5c2d251", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "cf64dc133ac7bd6b952d0739c749697d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\n    int n,i,j,cnt=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        if(i%2==0){\n            for(j=1;j<=n;j++)\n                if(j%2==0) cnt++;\n        }\n        else{\n            for(j=1;j<=n;j++)\n                if(j%2!=0) cnt++;\n        }\n    }\n    \n    printf(\"%d\\n\",cnt);\n    for(i=1;i<=n;i++){\n        if(i%2==0){\n            for(j=1;j<=n;j++){\n                if(j%2!=0){\n                    printf(\".\");\n                }\n                else{\n                    printf(\"c\");\n                }\n            }\n            printf(\"\\n\");\n        }\n        else{\n            for(j=1;j<=n;j++){\n                if(j%2!=0){\n                    printf(\"c\");\n                }\n                else printf(\".\");\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\nint main()\n{\n    int n,i,j,cnt=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        if(i%2==0){\n            for(j=1;j<=n;j++)\n                if(j%2==0) cnt++;\n        }\n        else{\n            for(j=1;j<=n;j++)\n                if(j%2!=0) cnt++;\n        }\n    }\n    \n    printf(\"%d\\n\",cnt);\n    for(i=1;i<=n;i++){\n        if(i%2==0){\n            for(j=1;j<=n;j++){\n                if(j%2!=0){\n                    printf(\".\");\n                }\n                else{\n                    printf(\"C\");\n                }\n            }\n            printf(\"\\n\");\n        }\n        else{\n            for(j=1;j<=n;j++){\n                if(j%2!=0){\n                    printf(\"C\");\n                }\n                else printf(\".\");\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9661368348306841, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "14f926f90d1f53e5be94dd2e3c78e271", "bug_code_uid": "321acee07ef04922c2c948da50e3683a", "src_uid": "cb4dbff31d967c3dab8fe0495eb871dc", "apr_id": "67a20fb2c41ccbf6ab06c5fec6ba0da5", "difficulty": 1200, "tags": ["dsu", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint dfs(int **a,int x,int y,int **b)\n{\n  int i;\n  b[a[x][y]][0]=-1;\n  a[x][y]=0;\n  for(i=1;i<1001;i++)\n  {\n    if(a[x][i]>0)\n      dfs(a,x,i,b);\n    if(a[i][y]>0)\n      dfs(a,i,y,b);\n  }\n}\nint main()\n{\n  int **a;\n  int **b;\n  int n,i;\n  scanf(\"%d\",&n);\n  a=(int**)malloc(sizeof(int*)*1005);\n  b=(int**)malloc(sizeof(int*)*n+1);\n  for(i=1;i<=1000;i++)\n    a[i]=(int*)malloc(sizeof(int)*1005);\n  for(i=1;i<=n;i++)\n  {\n    b[i]=(int*)malloc(sizeof(int)*2);\n    scanf(\"%d %d\",&b[i][0],&b[i][1]);\n    a[b[i][0]][b[i][1]]=i;\n  }\n  int cnt =-1;\n  for(i=1;i<=n;i++)\n  {\n    if(b[i][0]!=-1)\n      { \n       dfs(a,b[i][0],b[i][1],b);\n       cnt++;\n      }\n  }\n  printf(\"%d\\n\",cnt);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nvoid dfs(int **a,int x,int y,int **b)\n{\n  int i;\n  b[a[x][y]][0]=-1;\n  a[x][y]=0;\n  for(i=1;i<1001;i++)\n  {\n    if(a[x][i]>0)\n      dfs(a,x,i,b);\n    if(a[i][y]>0)\n      dfs(a,i,y,b);\n  }\n}\nint main()\n{\n  int **a;\n  int **b;\n  int n,i;\n  scanf(\"%d\",&n);\n  a=(int**)malloc(sizeof(int*)*1005);\n  b=(int**)malloc(sizeof(int*)*n+1);\n  for(i=1;i<=1000;i++)\n    a[i]=(int*)calloc(1005,sizeof(int));\n  for(i=1;i<=n;i++)\n  {\n    b[i]=(int*)calloc(2,sizeof(int));\n    scanf(\"%d %d\",&b[i][0],&b[i][1]);\n    a[b[i][0]][b[i][1]]=i;\n  }\n  int cnt =-1;\n  for(i=1;i<=n;i++)\n  {\n    if(b[i][0]!=-1)\n      { \n       dfs(a,b[i][0],b[i][1],b);\n       cnt++;\n      }\n  }\n  printf(\"%d\\n\",cnt);\n  return 0;\n}\n"}
{"similarity_score": 0.998468606431853, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "87ae6fc48d30aa66f730fd454b450b72", "bug_code_uid": "50e5b926419cd5ea0b0f77cf301bb8e9", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "5e7f0187b6098912014fac75544ecac6", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int m,v=0,n,i,j,k=0,l=0;\n    scanf(\"%d\",&m);\n    while(v<m)\n    {\n        scanf(\"%d\",&n);\n        char a[n];\n        scanf(\"%s\",&a);\n        for(i=0;i<n;i++)\n        {\n            if(a[i]=='A')\n            {\n                for(j=i+1;j<n+1;j++)\n                {\n                    if(a[j]=='P')\n                        l++;\n                    else\n                    {\n                        k=l>k?l:k;\n                        l=0;\n                        i=j-1;\n                    }\n                }\n            }\n        }\n        printf(\"%d\",k);\n        k=0;\n        l=0;\n        v++;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int m,v=0,n,i,j,k=0,l=0;\n    scanf(\"%d\",&m);\n    while(v<m)\n    {\n        scanf(\"%d\",&n);\n        char a[n];\n        scanf(\"%s\",&a);\n        for(i=0;i<n;i++)\n        {\n            if(a[i]=='A')\n            {\n                for(j=i+1;j<n+1;j++)\n                {\n                    if(a[j]=='P')\n                        l++;\n                    else\n                    {\n                        k=l>k?l:k;\n                        l=0;\n                        i=j-1;\n                    }\n                }\n            }\n        }\n        printf(\"%d\\n\",k);\n        k=0;\n        l=0;\n        v++;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9945652173913043, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "240fb1d1000e46e1d855098f26c512b8", "bug_code_uid": "8d6104fa1b4095246e9ee34974595032", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "8b73d80585ea6d36e074d8c80398f82c", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint A[1000][1000];\nint main() {\n\tint i, j, sum, result, n;\n\t\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; i++){\n\t\tfor(j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &A[i][j]);\n\t\t}\n\t}\n\tresult = 0;\n\tfor(i = 0; i < n; i++){\n\t\tsum = 0;\n\t\tfor(j = 0; j < n; j++){\n\t\t\tsum += A[i][j];\n\t\t\tif(sum >= 2){\n\t\t\t\tresult += 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", result);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint A[1000][1000];\nint main() {\n\tint i, j, sum, result, n;\n\t\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; i++){\n\t\tfor(j = 0; j < 3; j++){\n\t\t\tscanf(\"%d\", &A[i][j]);\n\t\t}\n\t}\n\tresult = 0;\n\tfor(i = 0; i < n; i++){\n\t\tsum = 0;\n\t\tfor(j = 0; j < 3; j++){\n\t\t\tsum += A[i][j];\n\t\t\tif(sum >= 2){\n\t\t\t\tresult += 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", result);\n\treturn 0;\n}"}
{"similarity_score": 0.7217877094972067, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "af1ed7bb9dfbb64bb0f43f5b6e7051af", "bug_code_uid": "6f624b398195164f6b6fd94ed8a94b0e", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "9ff56417f5160de25ab91cad763c8459", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int q,i,l,r;\n    long long int sum,j,d;\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i=i+1)\n    {\n        scanf(\"%d %d %lld\",&l,&r,&d);\n        for(j=1;j!=0;j=j+1)\n        {\n            sum=d*j;\n            if(sum<l || sum>r)\n            {\n                printf(\"%lld\\n\",sum);\n                break;\n            }\n        }\n\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int q,i,l,r,j,d,sum=0;\n    scanf(\"%lld\",&q);\n    for(i=1;i<=q;i=i+1)\n    {\n        scanf(\"%lld %lld %lld\",&l,&r,&d);\n        for(j=1;j!=0;j=j+1)\n        {\n            sum=d*j;\n            if(sum<l)\n            {\n                printf(\"%lld\\n\",sum);\n                break;\n            }\n            else if(sum>r)\n            {\n                printf(\"%lld\\n\",sum);\n                break;\n            }\n            else\n            {\n                j=r/d;\n            }\n        }\n\n    }\n}\n"}
{"similarity_score": 0.9913875598086125, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "91c29c1a867c29303d17f6d7c817f886", "bug_code_uid": "1baae72e95f448f7de8340bf75be85f4", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "b2305afb58660e719c9871d25e9f5b63", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int n = 0, i = 0;\n    int min = 0, max = 0, cnt = 0;\n    int arr[100000] = {0, };\n    \n    scanf(\"%d\", &n);\n    \n    for (i=0;i<n;i++) {\n        scanf(\"%d\", &arr[i]);\n        if (min == 0 || min > arr[i]) {\n            min = arr[i];\n        }\n        \n        if (max < arr[i]) {\n            max = arr[i];\n        }\n    }\n    \n    for (i=0;i<n;i++) {\n        if (arr[i] > min && arr[i] < max) {\n            cnt++;\n        }\n    }\n    \n    printf(\"%d\\n\", cnt);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n    int n = 0, i = 0;\n    int min = -1, max = -1, cnt = 0;\n    int arr[100000] = {0, };\n    \n    scanf(\"%d\", &n);\n    \n    for (i=0;i<n;i++) {\n        scanf(\"%d\", &arr[i]);\n        if (min == -1 || min > arr[i]) {\n            min = arr[i];\n        }\n        \n        if (max < arr[i]) {\n            max = arr[i];\n        }\n    }\n    \n    for (i=0;i<n;i++) {\n        if (arr[i] > min && arr[i] < max) {\n            cnt++;\n        }\n    }\n    \n    printf(\"%d\\n\", cnt);\n    \n    return 0;\n}"}
{"similarity_score": 0.9219261337073399, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6dd523b6b9a57b01c0ff721fe744780c", "bug_code_uid": "b6a503860852fb85f43fd72279b5ea5f", "src_uid": "b03895599bd578a83321401428e277da", "apr_id": "5f54306bce347aa9c41d8d4ea945b13b", "difficulty": 1500, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar str1[1001], str2[1001];\n\nint swap[26], printed[26];\n\nint main(void)\n{\n\tint a, cnt = 0;\n\tscanf(\"%s %s\", str1, str2);\n\n\tfor (a = 0; a < 26; a = a + 1)\n\t\tswap[a] = -1;\n\n\tfor (a = 0; a < strlen(str1); a = a + 1)\n\t{\n\t\tif (str1[a] != str2[a])\n\t\t{\n\t\t\tif ((swap[str1[a] - 'a'] > -1 && swap[str1[a] - 'a'] != str2[a] - 'a')\n\t\t\t\t|| (swap[str2[a] - 'a'] > -1 && swap[str2[a] - 'a'] != str1[a] - 'a')\n\t\t\t\t|| (swap[str1[a] - 'a'] == -2 || swap[str2[a] - 'a'] == -2))\n\t\t\t{\n\t\t\t\tcnt = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tswap[str1[a] - 'a'] = str2[a] - 'a';\n\t\t\t\tswap[str2[a] - 'a'] = str1[a] - 'a';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tswap[str1[a] - 'a'] = -2;\n\t}\n\tif (cnt + 1)\n\t{\n\t\tfor (a = 0; a < 26; a = a + 1)\n\t\t\tif (swap[a] >= 0)\n\t\t\t\tcnt += 1;\n\t\tcnt = cnt / 2;\n\t\tprintf(\"%d\\n\", cnt);\n\t\tfor (a = 0; a < 26; a = a + 1)\n\t\t{\n\t\t\tif (!printed[a] && swap[a]>=0)\n\t\t\t{\n\t\t\t\tprinted[a] = 1;\n\t\t\t\tprinted[swap[a]] = 1;\n\t\t\t\tprintf(\"%c %c\\n\", a + 'a', swap[a] + 'a');\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t\tputs(\"-1\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar str1[1001], str2[1001];\n\nint swap[26], printed[26];\n\nint main(void)\n{\n\tint a, cnt = 0;\n\tscanf(\"%s %s\", str1, str2);\n\n\tfor (a = 0; a < 26; a = a + 1)\n\t\tswap[a] = -1;\n\n\tfor (a = 0; a < strlen(str1); a = a + 1)\n\t{\n\t\tif (str1[a] != str2[a])\n\t\t{\n\t\t\tif ((swap[str1[a] - 'a'] > -1 && swap[str1[a] - 'a'] != str2[a] - 'a')\n\t\t\t\t|| (swap[str2[a] - 'a'] > -1 && swap[str2[a] - 'a'] != str1[a] - 'a')\n\t\t\t\t|| (swap[str1[a] - 'a'] == -2 || swap[str2[a] - 'a'] == -2))\n\t\t\t{\n\t\t\t\tcnt = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tswap[str1[a] - 'a'] = str2[a] - 'a';\n\t\t\t\tswap[str2[a] - 'a'] = str1[a] - 'a';\n\t\t\t}\n\t\t}\n\t\telse if (str1[a] == str2[a])\n\t\t{\n\t\t\tif (swap[str1[a] - 'a'] > -1)\n\t\t\t{\n\t\t\t\tcnt = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t\tswap[str1[a] - 'a'] = -2;\n\t\t}\n\t}\n\tif (cnt + 1)\n\t{\n\t\tfor (a = 0; a < 26; a = a + 1)\n\t\t\tif (swap[a] >= 0)\n\t\t\t\tcnt += 1;\n\t\tcnt = cnt / 2;\n\t\tprintf(\"%d\\n\", cnt);\n\t\tfor (a = 0; a < 26; a = a + 1)\n\t\t{\n\t\t\tif (!printed[a] && swap[a]>=0)\n\t\t\t{\n\t\t\t\tprinted[a] = 1;\n\t\t\t\tprinted[swap[a]] = 1;\n\t\t\t\tprintf(\"%c %c\\n\", a + 'a', swap[a] + 'a');\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t\tputs(\"-1\");\n\treturn 0;\n}"}
{"similarity_score": 0.25603357817418676, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "c796a3df8a4ba378c55bc91af27e1b97", "bug_code_uid": "fe0ac1972f83a08da4d5d92bf030ba38", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "b81596b50474cf5d5630272c935ad31a", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.c\n//  jd\n//\n//  Created by \u8d75\u6bc5 on 7/20/13.\n//  Copyright (c) 2013 \u8d75\u6bc5. All rights reserved.\n//\n\n#include <stdio.h>\n\nint main(void){\n    int n,m;\n    int i;\n    scanf(\"%d%d\",&n,&m);\n    if(m==n){\n        printf(\"%d\\n1 1\\n\",n+m-1);\n        for(i=1;i<m;i++) printf(\"%d %d\\n%d %d\\n\",i+1,i,i+1,i+1);\n    }else if(n>m){\n        printf(\"%d\\n\",m+1);\n        for(i=1;i<=m;i++) printf(\"%d %d\\n%d %d\\n\",i,i,i+1,i);\n    }else{\n        printf(\"%d\\n\",n+1);\n        for(i=1;i<=n;i++) printf(\"%d %d\\n%d %d\\n\",i,i,i,i+1);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void){\n    int i;\n    int n,m;\n    int min;\n    scanf(\"%d%d\",&n,&m);\n    min=n;\n    if(min>m) min=m;\n    printf(\"%d\\n\",m+n-1);\n    printf(\"1 1\\n\");\n    for(i=2;i<=min;i++){\n        printf(\"%d %d\\n\",i-1,i);\n        printf(\"%d %d\\n\",i,i);\n    }\n    for(i=min+1;i<=n;i++){\n        printf(\"%d %d\\n\",i,m);\n    }\n    for(i=min+1;i<=m;i++){\n        printf(\"%d %d\\n\",n,i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.18327402135231316, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "a144cda0e4cea1195782c58bf26150a2", "bug_code_uid": "63837057f2868815167d4868fc18b679", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "73d37be579f09cdaca1548224a06e670", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#include <limits.h>\n#define maxn 2001\n\nint cmp(const void *i, const void *j){\n\treturn *(int *)i - *(int *)j;\n}\n\nint main(void){\n\tint n, k, i, j, kk = 0, d, g;\n\tscanf(\"%d\", &n);\n\tint * dom;\n\tdom = (int*) malloc(n*sizeof(int));\n\tint * gost;\n\tgost = (int*) malloc(n*sizeof(int));\n\tint * colord;\n\tcolord = (int*) malloc(100001*sizeof(int));\n\tfor (i = 1; i <= 100001; i++){\n\t\tcolord[i] = 0;\n\t}\t\n\tfor (i = 1; i <= n; i++){\n\t    scanf(\"%d %d\", &dom[i], &gost[i]);\n\t\tcolord[dom[i]]++;\t    \n\t}\n\tfor (i = 1; i <= n; i++){\n\t\td = (n - 1) + colord[gost[i]];\n\t\tg = 2 * (n - 1) - d;\n\t\tprintf(\"%d %d\\n\", d, g);\n\t}\nreturn(0);\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#include <limits.h>\n\nint main(void){\n\tint n, k, i, j, d, g;\n\tscanf(\"%d\", &n);\n\tint colord[100001] = {0}, dom[100001], gost[100001];\n\tfor (i = 1; i <= n; i++){\n\t    scanf(\"%d %d\", &dom[i], &gost[i]);\n\t\tcolord[dom[i]]++;\t    \n\t}\n\tfor (i = 1; i <= n; i++){\n\t\td = (n - 1) + colord[gost[i]];\n\t\tg = n - colord[gost[i]] - 1;\n\t\tprintf(\"%d %d\\n\", d, g);\n\t}\nreturn(0);\n}"}
{"similarity_score": 0.9538216560509554, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d7d3ee974ec5f04b1467da02007faf91", "bug_code_uid": "5f80fad22f309c833078745dc64dbc67", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "571c81d08905749db8e73b9e012c6b08", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint eleToCall(int, int, int);\r\nint main(void)  {\r\n\tint t, a, b, c;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d %d\", &a, &b, &c);\r\n\t\tint floor = eleToCall(a, b, c);\r\n\t\tprintf(\"%d\\n\", floor);\r\n\t}\r\n}\r\n\r\nint eleToCall(int a, int b, int c) {\r\n\tif (a == 1) {\r\n\t\treturn 1;\r\n\t} else {\r\n\t\tif (b > c) {\r\n\t\t\tif (a > abs(b - c)) {\r\n\t\t\t\treturn 2;\r\n\t\t\t} else if (a == abs(b - c)) {\r\n\t\t\t\treturn 3;\r\n\t\t\t} else {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (a > abs(b - c) + c) {\r\n\t\t\t\treturn 2;\r\n\t\t\t} else if (a == abs(b - c) + c) {\r\n\t\t\t\treturn 3;\r\n\t\t\t} else {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint eleToCall(int, int, int);\r\nint main(void)  {\r\n\tint t, a, b, c;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d %d\", &a, &b, &c);\r\n\t\tint floor = eleToCall(a, b, c);\r\n\t\tprintf(\"%d\\n\", floor);\r\n\t}\r\n}\r\n\r\nint eleToCall(int a, int b, int c) {\r\n\tif (a == 1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\tif (b > c) {\r\n\t\t\tif (a - 1 > b - 1) {\r\n\t\t\t\treturn 2;\r\n\t\t\t} else if (a - 1 == b - 1) {\r\n\t\t\t\treturn 3;\r\n\t\t\t} else {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (a - 1 > abs(b - c) + c - 1) {\r\n\t\t\t\treturn 2;\r\n\t\t\t} else if (a - 1 == abs(b - c) + c - 1) {\r\n\t\t\t\treturn 3;\r\n\t\t\t} else {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.9703113685734974, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1b80dbb4281e57a713bafa894863054b", "bug_code_uid": "2d7171eba02181bd6bc8fd73cc2500e5", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "207272ed85728e6f14251a0f3564db17", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,i;\n     scanf(\"%d\",&n);\n     int a[n];\n     for(i=0;i<n;i++)\n     {\n          scanf(\"%d\",&a[i]);\n     }\n     if(n==1)\n     {\n          printf(\"1\\n\");\n          return 0;\n     }\n     int min,flag=0,p;      ///3 3 6 9 8 2 4 1 7 3 2 9 7 7 9 7 2 6 2 7\n     min=a[0];\n     for(i=1;i<n;i++)\n     {\n          if(a[i]<min)\n          {\n               min=a[i];\n               p=i+1;\n          }\n     }\n     for(i=0;i<n;i++)\n     {\n          if(a[i]==min)\n          {\n               flag++;\n          }\n     }\n     if(flag>1)\n     {\n          printf(\"Still Rozdil\\n\");\n     }\n     else\n     {\n          printf(\"%d\\n\",p);\n     }\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,i;\n     scanf(\"%d\",&n);\n     long long a[n];\n     for(i=0;i<n;i++)\n     {\n          scanf(\"%I64d\",&a[i]);\n     }\n     if(n==1)\n     {\n          printf(\"1\\n\");\n          return 0;\n     }\n     long long min;\n     int flag=0,p=1;      ///3 3 6 9 8 2 4 1 7 3 2 9 7 7 9 7 2 6 2 7\n     min=a[0];\n     for(i=1;i<n;i++)\n     {\n          if(a[i]<min)\n          {\n               min=a[i];\n               p=i+1;\n          }\n     }\n     for(i=0;i<n;i++)\n     {\n          if(a[i]==min)\n          {\n               flag++;\n          }\n     }\n     if(flag>1)\n     {\n          printf(\"Still Rozdil\\n\");\n     }\n     else\n     {\n          printf(\"%d\\n\",p);\n     }\n     return 0;\n}\n"}
{"similarity_score": 0.9579207920792079, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6317ea5257d7557d8809ae7245e8b06e", "bug_code_uid": "9eff8b51f7907bb036723834c75dfc3d", "src_uid": "80c75a4c163c6b63a614075e094ad489", "apr_id": "10d902b3f591b23f0c527c93d4fead06", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t    int n;\n\t    scanf(\"%d\",&n);\n\t    int a[n];\n\t    int q=n/4;\n\t    q++;\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        a[i]=9;\n\t    }\n\t    for(int i=n-1;q>0;q--,i--)\n\t    {\n\t        a[i]=8;\n\t    }\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        printf(\"%d\",a[i]);\n\t    }\n\t    printf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t    int n;\n\t    scanf(\"%d\",&n);\n\t    int a[n];\n\t    int q=n/4;\n\t    int r=n%4;\n\t    if(r!=0)\n\t        q++;\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        a[i]=9;\n\t    }\n\t    for(int i=n-1;q>0;q--,i--)\n\t    {\n\t        a[i]=8;\n\t    }\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        printf(\"%d\",a[i]);\n\t    }\n\t    printf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3808353808353808, "equal_cnt": 20, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "fd65a5ad3ff68f4f5baf6691a2445bf9", "bug_code_uid": "c6f75d0fe91aa256fbe3886066bee496", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "f9097f8d9bf7fe9197964f234b8ec0aa", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <math.h>\n\n\n\n/*\n *\n */\nint main() {\n    int i,n;\n    int t[100002];\n    double s ;\n    scanf(\"%d\",&n);\n    s=0;\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%d \",&t[i]);\n\n    }\n     for (i=0;i<n;i++)\n    {\n        s=s+t[i]+t[n+1];\n    }\n\n    printf(\"%0.0lf\",floor(s+(3.5/4));\n\n\n\n\n    return 0 ;\n}", "fixed": "#include <stdio.h>\n\n\nint main()\n{\n    int n, s, count[5]= {0};\n    scanf(\"%d\", &n);\n    while (n--)\n    {\n        scanf(\"%d\", &s);\n        count[s] += 1;\n    }\n    int total = count[4] + count[3] + count[2] / 2;\n    count[1] -= count[3];\n    if (count[2] % 2 == 1)\n    {\n        total += 1;\n        count[1] -= 2;\n    }\n    if (count[1] > 0)\n    {\n        total += (count[1] + 3) / 4;\n    }\n    printf (\"%d\\n\", total);\n    return 0;\n}"}
{"similarity_score": 0.8434343434343434, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "88b5dee6fde5032a935f48108e1471cf", "bug_code_uid": "f5bf62d2fe651ec7ba37a0e665907a6a", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "690b0444b43c103a8ce7d0ab1a3a84d1", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAx_Size 100\n\nint main()\n{\n    int i,n,sum=0, input[MAx_Size][3] ;\n    scanf(\"%d\", &n) ;\n    for(i=0 ; i<n ; i++)\n    {\n        scanf(\"%d%d%d\",&input[i][0] ,&input[i][1],&input[i][2]) ;\n        sum = sum + input[i][0]+input[i][1]+input[i][2] ;\n    }\n    \n    if (sum == 0)\n      printf(\"YES\");\n    else\n        printf(\"NO\") ;\n\n    return 0 ;\n    \n}\n", "fixed": "#include<stdio.h>\n#define MAx_Size 100\n\nint main()\n{\n    int i,n,x=0,y=0,z=0,input[MAx_Size][3] ;\n    scanf(\"%d\", &n) ;\n    for(i=0 ; i<n ; i++)\n    {\n        scanf(\"%d%d%d\",&input[i][0] ,&input[i][1],&input[i][2]) ;\n        x = x + input[i][0] ;\n        y = y + input[i][1] ;\n        z = z +input[i][2] ;\n    }\n\n    if (x ==0 && y==0 && z==0 )\n      printf(\"YES\");\n    else\n        printf(\"NO\") ;\n\n    return 0 ;\n\n}\n"}
{"similarity_score": 0.8380281690140845, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "fde6fc9658f55af72f1af184dcbbfd44", "bug_code_uid": "764ae107e8ff3fbef77073a9a3420cde", "src_uid": "776a06c14c6fa3ef8664eec0b4d50824", "apr_id": "bfca1a80c0428449a60cfa43ee641752", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\nint main() {\n    int t, n, m;\n    scanf(\"%d\", &t);\n    for (int s = 0; s < t; s++) {\n        scanf(\"%d %d\", &n, &m);\n        bool result = false;\n        int a[n], b[n];\n        bool exists[2000];\n        for (int i = 0; i < 2000; i++) {\n            exists[i] = false;\n        }\n        for (int i = 0; i < n; i++) {\n            scanf(\"%d\", &a[i]);\n            exists[a[i]] = true;\n        }\n        for (int i = 0; i < m; i++) {\n            scanf(\"%d\", &b[i]);\n            if (exists[b[i]] && !result) {\n                printf(\"YES\\n1 %d\\n\", b[i]); \n                result = true;\n            }\n        }\n        if (!result) \n            printf(\"NO\\n\");\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\nint main() {\n    int t, n, m;\n    scanf(\"%d\", &t);\n    for (int s = 0; s < t; s++) {\n        scanf(\"%d %d\", &n, &m);\n\n        int a[n], b[m];\n        bool exists[2000];\n\n        for (int i = 0; i < 2000; i++) {\n            exists[i] = false;\n        }\n        for (int i = 0; i < n; i++) {\n            scanf(\"%d\", &a[i]);\n            exists[a[i]] = true;\n        }\n        for (int i = 0; i < m; i++) {\n            scanf(\"%d\", &b[i]);\n        }\n\n        for (int i = 0; i < m; i++) {\n            if (exists[b[i]]) {\n                printf(\"YES\\n1 %d\\n\", b[i]); \n                goto end;\n            }\n        }\n\n        printf(\"NO\\n\");\n        end: ;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.837386018237082, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "30a5f34f3fea50f9d12806b63477c5b6", "bug_code_uid": "5ced006a480e73e7f5d3fb1089e0fd52", "src_uid": "6379ec153377fb9c30a7b897659da7d6", "apr_id": "1fb3a134057b49c6125819890188e5da", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <math.h>\n//# define m 1073741824b\nlong long int gcd(long long int a,long long int b) \n{\nif(a==0)\nreturn b;\nif(b==0)\nreturn a;\nreturn gcd(b,a%b);\n}\nlong long int re[1000001];\nint main()\n{\nint j=2;\nfor(int i=0;i<1000001;i++)\nre[i]=2;\nfor(int i=2;i<1000001;i++)\n{\nwhile(i*j<1000001)\n{\nre[i*j]++;\nj++;\n}\nj=2;\n}\nre[1]=1;\nint n;\nscanf(\"%d\",&n);\nlong long int a[n],b[n];\nscanf(\"%lld\",&a[0]);\nlong long int k=a[0];\nfor(int i=1;i<n;i++)\n{\nscanf(\"%lld\",&a[i]);\nk=gcd(k,a[i]);\n}\nif(k<1000000)\nprintf(\"%lld\",re[k]);\nelse\n{\nlong long int p=sqrt(k);\nif(p*p==k)\nprintf(\"%lld\",2*re[p]-1);\nelse\nprintf(\"%lld\",2*re[p]);\n}\nreturn 0;\n}\n", "fixed": "# include <stdio.h>\n# include <math.h>\n//# define m 1073741824b\nlong long int gcd(long long int a,long long int b) \n{\nif(a==0)\nreturn b;\nif(b==0)\nreturn a;\nreturn gcd(b,a%b);\n}\nlong long int re[1000001];\nint main()\n{\n/*int j=2;\nfor(int i=0;i<1000001;i++)\nre[i]=2;\nfor(int i=2;i<1000001;i++)\n{\nwhile(i*j<1000001)\n{\nre[i*j]++;\nj++;\n}\nj=2;\n}\nre[1]=1;*/\nint n;\nscanf(\"%d\",&n);\nlong long int a[n],count=0;\nscanf(\"%lld\",&a[0]);\nlong long int k=a[0];\nfor(int i=1;i<n;i++)\n{\nscanf(\"%lld\",&a[i]);\nk=gcd(k,a[i]);\n}\n//printf(\"%lld\\n\",k);\nlong long int p=sqrt(k);\nfor(int i=1;i<=p;i++)\nif(k%i==0)\ncount+=2;\nif(p*p==k)\nprintf(\"%lld\",count -1);\nelse\nprintf(\"%lld\",count);\nreturn 0;\n}\n"}
{"similarity_score": 0.7401869158878505, "equal_cnt": 13, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "eaa942759fc9ffde24e7745cbc08f10c", "bug_code_uid": "e6494ef8958b938f05e775a9999d0876", "src_uid": "a896ba035e56dc707f8123b1e2f2b11c", "apr_id": "18ae603c73e7786e8974bfa470bb93d8", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    long int n;\n    scanf(\"%ld\", &n);\n    long int i=1;\n    for(;n>0;n/=2)\n    {\n        if(n%2==1)\n            i*=2;\n    }\n    printf(\"%ld\", i);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int q, t;\n    scanf(\"%d\", &t);\n    for(q=0; q<t; q++)\n    {\n        long int n;\n        scanf(\"%ld\", &n);\n        long int i=1;\n        for(;n>0;n/=2)\n        {\n            if(n%2==1)\n                i*=2;\n        }\n        printf(\"%ld\\n\", i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7114093959731543, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "7593473f4dbe37adfec552dbd46ae59c", "bug_code_uid": "da8f7568534fb7a1ce399a015b07ad5d", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "3e728e59fd69daffd715c6a99754def7", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,sum=1;\n    scanf (\"%d\", &n);\n    for(i=0;i<n-1;i++)\n    {\n        sum=sum+(i+1);\n        if(sum>n)\n        sum=sum-n;\n        printf(\"%d\",sum);\n        \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, i, sum = 1;\n    scanf(\"%d\", &n);\n\n    for(i=0; i<n-1; i++){\n        sum = sum + (i + 1);\n        if(sum > n)\n            sum = sum - n;\n        printf(\"%d \", sum);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.37244348762109797, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "435d86b89023446e628e35fe1f835efe", "bug_code_uid": "247d50d4221f1cda468a72b35a931137", "src_uid": "c34db7897f051b0de2f49f2696c6ee2f", "apr_id": "f77c589bda09e4bf88d37b728ebf66f2", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,l,r,k1,f=0;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d %d\",&l,&r);\r\n        if (r/2 > l) k1 = (int)r/2 ;\r\n        else k1=l;\r\n        m= r%l;\r\n        for(int j=r;j>l;j--)\r\n        {\r\n            for(int k=k1;k<r && k<j;k++)\r\n            {\r\n                if(m == (int) r/2) { f=1; break;}\r\n                if( r-l ==m) { f=1; break;}\r\n                if(j%k > m)\r\n                   {\r\n                       m= j%k;// printf(\"%d / %d > %d\\n\",j,k ,m);\r\n                   }\r\n            }\r\n        if(f) break;\r\n        } printf(\"%d\\n\",m);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,l,r,k;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d %d\",&l,&r);\r\n         k = (r / 2) + 1;\r\n        if (k >= l )    \r\n            printf(\"%d\\n\", r % k);\r\n        else            \r\n            printf(\"%d\\n\", r % l);\r\n    }\r\n}\r\n\r\n"}
{"similarity_score": 0.7177848775292864, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c7b99d1a5bd9968cf9ad194584dbeaa5", "bug_code_uid": "519f5fa8ec4173c0eaade0c3f5041394", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "8d8ac677e0f32cbe3e59ba844fed5c29", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int number_of_letters, i;\n    scanf(\"%d\", &number_of_letters);\n\n    //No letter must have the same neighbour on both the left and the right. aabbaabbaabb.... satisfies this condition\n    for(i = 1; i <= number_of_letters; i = i+2)\n    {\n        if(i%4 == 1) printf(\"aa\");\n\n        else printf(\"bb\");\n    }\n    if(number_of_letters%2 == 1) printf(\"\\b \\n\"); //If it's odd, delete the last character\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int number_of_letters, i;\n    scanf(\"%d\", &number_of_letters);\n\n    //No letter must have the same neighbour on both the left and the right. aabbaabbaabb.... satisfies this condition\n    for(i = 1; i <= number_of_letters; i = i+2)\n    {\n        if(i%4 == 1)\n        {\n            printf(i == number_of_letters ? \"a\\n\" : \"aa\");\n        }\n        else\n        {\n            printf(i == number_of_letters ? \"b\\n\" : \"bb\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8023952095808383, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "5f5c130f469598491b832023dfd5d7bf", "bug_code_uid": "ed862b1f0a94c54a003778d2dbd58631", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "346035e2c5bfc52b5de23ed8839fda83", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main(void)\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tif(n==1)\n\tprintf(\"-1\");\n\telse\n\t{\n\t\tif(n%2==0)\n\t\t{\n\t\t\tprintf(\"2 1\");\n\t\t\tfor(i=3;i<=(n/2+1);i++)\n\t\t\t{\n\t\t\t\tprintf(\" %d %d\", 2*i-2, 2*i-3);\t\t\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"2\");\n\t\t\tfor(i=2;i<=(n+1)/2;i++)\n\t\t\tprintf(\" %d %d\", 2*i-3, 2*i);\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main(void)\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tif(n==1)\n\tprintf(\"-1\");\n\telse\n\t{\n\t\tif(n%2==0)\n\t\t{\n\t\t\tprintf(\"2 1\");\n\t\t\tfor(i=3;i<=(n/2+1);i++)\n\t\t\t{\n\t\t\t\tprintf(\" %d %d\", 2*i-2, 2*i-3);\t\t\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\tprintf(\"-1\");\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n}\n"}
{"similarity_score": 0.9765886287625418, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d424bab91083da40e39d160690069aff", "bug_code_uid": "adb7581237d7680914c7bb163da0cba2", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "e3c69ce26d611465d1e69418c19979f6", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid main()\n{\n    int n,i,j,t,sum=0,sum1=0;\n    int a[100];\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum=sum+a[i];\n    }\n    for (i=0;i<n;i++)\n        for (j=i;j<n;j++)\n            if (a[i]<a[j])\n            {\n                t=a[j];a[j]=a[i];a[i]=t;\n            }\n    i=0;\n    while (sum1<=sum)\n    {\n        sum1+=a[i];\n        sum-=a[i];\n        i++;\n    }\n    printf(\"%d\",i);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,j,t,sum=0,sum1=0;\n    int a[100];\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum=sum+a[i];\n    }\n    for (i=0;i<n;i++)\n        for (j=i;j<n;j++)\n            if (a[i]<a[j])\n            {\n                t=a[j];a[j]=a[i];a[i]=t;\n            }\n    i=0;\n    while (sum1<=sum)\n    {\n        sum1+=a[i];\n        sum-=a[i];\n        i++;\n    }\n    printf(\"%d\",i);\n    return 0;\n}"}
{"similarity_score": 0.9137760158572844, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7e8f113d9c3132ba9d8cf423426c8cf8", "bug_code_uid": "5f85a79bc03c708fbbae5f74d134b640", "src_uid": "2eb7234904b28b4793b7c482a2370092", "apr_id": "28741649bea562df00d233c4e83b2357", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint n, min1, min2, max1, max2, i, x;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &x);\n\tmin1 = min2 = max1 = max2 = x;\n\tfor(i=1;i<n;++i)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\tif(x < min1)\n\t\t{\n\t\t\tmin2 = min1;\n\t\t\tmin1 = x;\n\t\t}\n\t\telse if(x < min2)\n\t\t{\n\t\t\tmin2 = x;\n\t\t}\n\t\tif(x > max1)\n\t\t{\n\t\t\tmax2 = max1;\n\t\t\tmax1 = x;\n\t\t}\n\t\telse if(x > max2)\n\t\t{\n\t\t\tmax2 = x;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", max1 - min2 <= max2 - min1 ? max1 - min2 : max2 - min1);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAX 100007\n#define MIN 0\n\nint main(void) {\n\t// your code goes here\n\tint n, min1, min2, max1, max2, i, x;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &x);\n\tmin1 = max1 = x;\n\tmin2 = MAX;\n\tmax2 = MIN;\n\tfor(i=1;i<n;++i)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\tif(x < min1)\n\t\t{\n\t\t\tmin2 = min1;\n\t\t\tmin1 = x;\n\t\t}\n\t\telse if(x < min2)\n\t\t{\n\t\t\tmin2 = x;\n\t\t}\n\t\tif(x > max1)\n\t\t{\n\t\t\tmax2 = max1;\n\t\t\tmax1 = x;\n\t\t}\n\t\telse if(x > max2)\n\t\t{\n\t\t\tmax2 = x;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", max1 - min2 <= max2 - min1 ? max1 - min2 : max2 - min1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9699248120300752, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2f0a89e9ee122c72a6ee37cd43cb9a7b", "bug_code_uid": "d9ba9d7bf23f32969356ead72cb385b5", "src_uid": "22ef37041ebbd8266f62ab932f188b31", "apr_id": "33cd67677b853ad9ce04600f4c7d4333", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n;\nscanf(\"%d\", &n);\nint a[n+1],i,s,t,j,k,temp,sum1=0,sum2=0;\nfor(i=1;i<n+1;i++) scanf(\"%d\", &a[i]);\nscanf(\"%d%d\", &s, &t);\n//printf(\"%d\\n%d\\n\", s, t);\nif(s>t){\ntemp = s;\ns = t;\nt = temp;\n}\nfor(j=s;j<t;j++){\nsum1 += a[j];\n//printf(\"%d\\n\", a[j]);\n}\n//printf(\"%d\\n\", t);\nfor(j=t;(j%n)<s || j<=n ;j++){\nif(j<=n)\nsum2 += a[(j)];\nelse\nsum2 += a[(j%n)];\n//printf(\"%d\\n\", sum2);\n}\n//printf(\"%d\\n%d\\n\", sum1, sum2);\nif(sum1>sum2) printf(\"%d\\n\", sum2);\nelse printf(\"%d\\n\", sum1);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n;\nscanf(\"%d\", &n);\nint a[n+1],i,s,t,j,k,temp,sum1=0,sum2=0;\nfor(i=1;i<n+1;i++) scanf(\"%d\", &a[i]);\nscanf(\"%d%d\", &s, &t);\n//printf(\"%d\\n%d\\n\", s, t);\nif(s==t)\nprintf(\"0\\n\");\nelse{\nif(s>t){\ntemp = s;\ns = t;\nt = temp;\n}\nfor(j=s;j<t;j++){\nsum1 += a[j];\n//printf(\"%d\\n\", a[j]);\n}\n//printf(\"%d\\n\", t);\nfor(j=t;(j%n)<s || j<=n ;j++){\nif(j<=n)\nsum2 += a[(j)];\nelse\nsum2 += a[(j%n)];\n//printf(\"%d\\n\", sum2);\n}\n//printf(\"%d\\n%d\\n\", sum1, sum2);\nif(sum1>sum2) printf(\"%d\\n\", sum2);\nelse printf(\"%d\\n\", sum1);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9484808454425363, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d0c542f546287c08bf6d2f86dee2b444", "bug_code_uid": "ea8d46267a3833037338726e805fe037", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "99dca6e0aa4fc4c5cb52be567c41c81e", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\\n\",&n);\n\tint a[1000000];\n\tint w,c=0,b=0;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&w);\n\t\tif (w==25)c++;\n\t\telse\n\t\tif (w==50){\n\t\t    c--;\n\t\t    b++;\n\t\t}\n\t\telse{\n\t\tif (b>0)\n\t\t{\n\t\t    b--;\n\t\t    c--;\n\t\t}   \n\t\telse\n\t\tc-=2;\n\t\t}\n\t\t\n\t\tif (c<0){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\n\t}\nprintf(\"YES\");\nreturn 0;\n\t\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\\n\",&n);\n\tint a[1000000];\n\tint w,c=0,b=0;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&w);\n\t\tif (w==25)c++;\n\t\telse\n\t\tif (w==50){\n\t\t    c--;\n\t\t    b++;\n\t\t}\n\t\telse{\n\t\tif (b>0)\n\t\t{\n\t\t    b--;\n\t\t    c--;\n\t\t}   \n\t\telse\n\t\tc-=3;\n\t\t}\n\t\t\n\t\tif (c<0||b<0){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\n\t}\nprintf(\"YES\");\nreturn 0;\n\t\n}"}
{"similarity_score": 0.9622641509433962, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "03d844290e211b9d435c801eb7c807d7", "bug_code_uid": "571637265c6544008dfef7a44aa964b0", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "97ddbc87af3b501c26ff38815293b043", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n\n{\n    int n,d[100],i,a,b,sum=0;\n    \n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d %d\",&a,&b);\n    \n    for(i=a;i<b;i++)\n    {\n        sum=sum+a[i];\n    }\n    printf(\"%d\",sum);\n}", "fixed": "#include<stdio.h>\nint main()\n\n{\n    int n,d[100],i,a,b,sum=0;\n    \n    scanf(\"%d\",&n);\n    for(i=1;i<=n-1;i++)\n    {\n        scanf(\"%d\",&d[i]);\n    }\n    scanf(\"%d %d\",&a,&b);\n    \n    for(i=a;i<b;i++)\n    {\n        sum=sum+d[i];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}"}
{"similarity_score": 0.9883268482490273, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2c4b3b7800d2b6ea9ab38921835094ac", "bug_code_uid": "35bcdf883668408eb847d80a51b23e48", "src_uid": "42840fc873369e0d0d6a4ad24a43f5a6", "apr_id": "319063ff99cb517232d9dc88bf5ccab1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint t;\r\n\tint tcurrent=0,tstop=0,tleave=0;\r\n\tint p;\r\n\tint z;\r\n    int n;\r\n    int i=0;\r\n    int a[100],b[100],tm[100];\r\n    a[0]=0;\r\n    b[0]=0;\r\n    tm[0]=0;\r\n    scanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t    for(i=1;i<=n;i++)\r\n\t    {\r\n\t    \tscanf(\"%d\",&a[i]);\r\n\t    \tscanf(\"%d\",&b[i]);\r\n\t\t}\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tscanf(\"%d\",&tm[i]);\r\n\t\t}\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\t\r\n\t\ttcurrent = a[i]-b[i-1] +tcurrent+tm[i];\r\n\t\tif(i==n){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\ttstop = b[i]-tcurrent;\r\n\t\tp=((b[i]-a[i])%2);\r\n\t\tif(p==0){\r\n\t\t\tz=(b[i]-a[i])/2;\r\n\t\t}\r\n\t\telse z=((b[i]-a[i])/2)+1;\r\n\t\tif(tstop<z)\r\n\t\t{\r\n\t\t\ttcurrent=tcurrent+z;\r\n\t\t\t\r\n\t\t}\r\n\t\telse tcurrent = b[i];\r\n\t\t \t\r\n\t   }\r\n     \tprintf(\"%d\\n\",tcurrent);\r\n     \ttcurrent=0;\r\n\t}\r\n\t\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint t;\r\n\tint tcurrent=0,tstop=0,tleave=0;\r\n\tint p;\r\n\tint z;\r\n    int n;\r\n    int i=0;\r\n    int a[101],b[101],tm[101];\r\n    a[0]=0;\r\n    b[0]=0;\r\n    tm[0]=0;\r\n    scanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t    for(i=1;i<=n;i++)\r\n\t    {\r\n\t    \tscanf(\"%d\",&a[i]);\r\n\t    \tscanf(\"%d\",&b[i]);\r\n\t\t}\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tscanf(\"%d\",&tm[i]);\r\n\t\t}\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\t\r\n\t\ttcurrent = a[i]-b[i-1] +tcurrent+tm[i];\r\n\t\tif(i==n){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\ttstop = b[i]-tcurrent;\r\n\t\tp=((b[i]-a[i])%2);\r\n\t\tif(p==0){\r\n\t\t\tz=(b[i]-a[i])/2;\r\n\t\t}\r\n\t\telse z=((b[i]-a[i])/2)+1;\r\n\t\tif(tstop<z)\r\n\t\t{\r\n\t\t\ttcurrent=tcurrent+z;\r\n\t\t\t\r\n\t\t}\r\n\t\telse tcurrent = b[i];\r\n\t\t \t\r\n\t   }\r\n     \tprintf(\"%d\\n\",tcurrent);\r\n     \ttcurrent=0;\r\n\t}\r\n\t\r\n}"}
{"similarity_score": 0.9399141630901288, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6d89851a7ba78d7fca3f0b872cc70ba0", "bug_code_uid": "9cf8c2cd4d3b7c6cf82932e1d44fabf5", "src_uid": "9070e0d4f8071d1ee8df5189b7c17bfa", "apr_id": "136b609ecbafd6188cd2d9e1861b59c8", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint max(int x,int y){\r\n\treturn x>y?x:y;\r\n}\r\nint main()\r\n\t{\tchar s[200005];\r\n\t\tint i,j,k,u;\r\n\t\tlong long int x,y,mx,my,c;\r\n\t\tint n,t;\r\n\t\tscanf(\"%d\",&t);\r\n\t\t\r\n\t\twhile (t--){\r\n\t\t\tscanf(\"%d\",&n);\r\n\t\t\tscanf(\"%s\",&s);\r\n\t\t\tk=strlen(s)-1;\r\n\t\t\tfor(i=0,x=0,y=0,mx=0,my=0,c=0;i<=k;i++){\r\n\t\t\t\tj=s[i]-'0';\r\n\t\t\t\tif(j)x++;else y++;\r\n\t\t\t\tif(!i||j==s[i-1]-'0')c++;\r\n\t\t\t\telse if(j){my=max(my,c);c=1;}\r\n\t\t\t\telse {mx=max(mx,c);c=1;}\r\n\t\t\t}\r\n\t\t\tif(!s[k]){my=max(my,c);}\r\n\t\t\telse {mx=max(mx,c);}\r\n\t\t\t//printf(\"x=%d,mx=%d,y=%d,my=%d\\n\",x,mx,y,my);\r\n\t\t\tmx=max(mx,my);\r\n\t\t\tif(mx*mx>x*y)c=mx*mx;\r\n\t\t\telse c=x*y;\r\n\t\t\tprintf(\"%d\\n\",c);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\t\t\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nlong long int max(long long int x,long long int y){\r\n\treturn x>y?x:y;\r\n}\r\nint main()\r\n\t{\tchar s[200005];\r\n\t\tlong long int i,j,k,u;\r\n\t\tlong long int x,y,mx,my,c;\r\n\t\tlong long int n,t;\r\n\t\tscanf(\"%lld\",&t);\r\n\t\t\r\n\t\twhile (t--){\r\n\t\t\tscanf(\"%lld\",&n);\r\n\t\t\tscanf(\"%s\",&s);\r\n\t\t\tk=strlen(s)-1;\r\n\t\t\tfor(i=0,x=0,y=0,mx=0,my=0,c=0;i<=k;i++){\r\n\t\t\t\tj=s[i]-'0';\r\n\t\t\t\tif(j)x++;else y++;\r\n\t\t\t\tif(!i||j==s[i-1]-'0')c++;\r\n\t\t\t\telse if(j){my=max(my,c);c=1;}\r\n\t\t\t\telse {mx=max(mx,c);c=1;}\r\n\t\t\t}\r\n\t\t\tif(!s[k]){my=max(my,c);}\r\n\t\t\telse {mx=max(mx,c);}\r\n\t\t\t//printf(\"x=%d,mx=%d,y=%d,my=%d\\n\",x,mx,y,my);\r\n\t\t\tmx=max(mx,my);\r\n\t\t\tif(mx*mx>x*y)c=mx*mx;\r\n\t\t\telse c=x*y;\r\n\t\t\tprintf(\"%lld\\n\",c);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\t\t\r\n"}
{"similarity_score": 0.9249422632794457, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "9289b321d7680d8e344cb87bf8599a19", "bug_code_uid": "76aafa86ec808b0588e772ab53e24a11", "src_uid": "c1608f6f71cac56690e31aa130c1990e", "apr_id": "e91d2d55eedf1e17b986034861cc6246", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint compareReverse( const void* a, const void* b) {\n     int int_a = * ( (int*) a );\n     int int_b = * ( (int*) b );\n\n     if ( int_a == int_b ) return 0;\n     else if ( int_a > int_b ) return -1;\n     else return 1;\n}\n\nint main(void) {\n\n  int num;\n  scanf(\"%d\", &num);\n  long long array[num], i = 0;\n  while (i < num && scanf(\"%d\", &array[i++]) == 1);\n\n  int qtd_coupons;\n  scanf(\"%d\", &qtd_coupons);\n  long long coupons[qtd_coupons];\n  i = 0;\n  while (i < qtd_coupons && scanf(\"%d\", &coupons[i++]) == 1);\n  \n  qsort( array, num, sizeof(int), compareReverse );\n\n  int sum = 0, result = 0;\n    for (int i = 0; i < num; i++){\n    sum += array[i];\n  }\n\n  for (int c = 0; c < qtd_coupons; c++){\n    i = coupons[c] - 1;\n    result = sum - array[i];\n    printf(\"%d\\n\", result);\n  }\n\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint compareReverse( const void* a, const void* b) {\n     long long int_a = * ( (long long*) a );\n     long long int_b = * ( (long long*) b );\n\n     if ( int_a == int_b ) return 0;\n     else if ( int_a > int_b ) return -1;\n     else return 1;\n}\n\nint main(void) {\n\n  long long num;\n  scanf(\"%lld\", &num);\n  long long array[num], i = 0;\n  while (i < num && scanf(\"%lld\", &array[i++]) == 1);\n\n  long long qtd_coupons;\n  scanf(\"%lld\", &qtd_coupons);\n  long long coupons[qtd_coupons];\n  i = 0;\n  while (i < qtd_coupons && scanf(\"%lld\", &coupons[i++]) == 1);\n  \n  qsort( array, num, sizeof(long long), compareReverse );\n\n  long long sum = 0, result = 0;\n    for (long long i = 0; i < num; i++){\n    sum += array[i];\n  }\n\n  for (long long c = 0; c < qtd_coupons; c++){\n    i = coupons[c] - 1;\n    result = sum - array[i];\n    printf(\"%lld\\n\", result);\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.966168371361133, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ca1ceed055874cff59bd1cc9090719b0", "bug_code_uid": "28ba776c8088bc659d0609acdaeb4b6c", "src_uid": "3adc75a180d89077aa90bbe3d8546e4d", "apr_id": "4971e170b190a0f34cbf744f96c6e8ad", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n;\nint i;\nint key,k;\nint d;\nint ans1,ans2;\nchar ch[100005];\n\nvoid ifr();\nvoid ifb();\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",&ch);\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifr();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans1=(d-k)/2+k;\n\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifb();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans2=(d-k)/2+k;\n\tprintf(\"%d\\n\",ans1>=ans2?ans2:ans1);\n\tprintf(\"%d %d\\n\",ans1,ans2);           //\n\treturn 0;\n}\n\nvoid ifr()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='r')\n\t\t\tk++;\n\t\telse\n\t\t\td++;\n\t\tkey++;\n\t\ti++;\n\t\tifb();\n\t}\n\treturn ;\n}\n\nvoid ifb()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='b');\n\t\telse\n\t\t{\n\t\t\td++;\n\t\t\tk++;\n\t\t}\n\t\ti++;\n\t\tifr();\n\t}\n\treturn ;\n}\n", "fixed": "#include <stdio.h>\n\nint n;\nint i;\nint key,k;\nint d;\nint ans1,ans2;\nchar ch[100005];\n\nvoid ifr();\nvoid ifb();\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",&ch);\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifr();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans1=(d-k)/2+k;\n\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifb();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans2=(d-k)/2+k;\n\tprintf(\"%d\\n\",ans1>=ans2?ans2:ans1);\n\treturn 0;\n}\n\nvoid ifr()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='r')\n\t\t\tk++;\n\t\telse\n\t\t\td++;\n\t\tkey++;\n\t\ti++;\n\t\tifb();\n\t}\n\treturn ;\n}\n\nvoid ifb()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='b');\n\t\telse\n\t\t{\n\t\t\td++;\n\t\t\tk++;\n\t\t}\n\t\ti++;\n\t\tifr();\n\t}\n\treturn ;\n}\n"}
{"similarity_score": 0.5536105032822757, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "9c3a2b26f16d2bfc6c295bd8727ba948", "bug_code_uid": "fe0bead4443966c4c6d13f0640ff3aa9", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "eb3cc7b468f0f76d20206b4e1a9f36f7", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\",n_sets);\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int n, c1, c2;\r\n        scanf(\"%d\", &n);\r\n\r\n        for (; n != c1 + 2 * c2; c1++ && c2++)\r\n\r\n        printf(\"%d/n %d/n\", c1, c2);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main () {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int n, c1, c2;\r\n        scanf(\"%d\", &n);\r\n\r\n        if (n % 3 == 0) {\r\n            c1 = n / 3;\r\n            c2 = c1;\r\n            printf(\"%d %d\\n\", c1, c2);\r\n        } else if (n % 3 == 1) {\r\n            c2 = n / 3;\r\n            c1 = c2 + 1;\r\n            printf(\"%d %d\\n\", c1, c2);\r\n        } else if (n % 3 == 2) {\r\n            c1 = n / 3;\r\n            c2 = c1 + 1;\r\n            printf(\"%d %d\\n\", c1, c2);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9984615384615385, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "819da7d9477a981198ba3b7b24d5009a", "bug_code_uid": "bdc83d2ece2a8c468ba484d1da0f7a9c", "src_uid": "dd26f45869b73137e5e5cc6820cdc2e4", "apr_id": "33c976a2c06773ad94ac431dae4418b8", "difficulty": 1000, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\n\nint main()\n{\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    char s[1001], t[1001];\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n    int i,a[1000],min=1000001,j;\n    for(i=0;i<=(m-n);i++)\n    {\n        int temp=0,b[1000];\n        for(j=i;j<(i+n);j++)\n        {\n            if(!(s[j-i]==t[j]))\n            {\n                b[temp]=j;\n                temp++;\n            }\n        }\n        if(min>temp)\n        {\n            for(j=0;j<temp;j++)\n                a[j]=b[j];\n            min=temp;\n        }\n    }\n    printf(\"%d\\n\",min);\n    for(i=0;i<min;i++)\n        printf(\"%d \",a[i]+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\n\nint main()\n{\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    char s[1001], t[1001];\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n    int i,a[1000],min=1000001,j;\n    for(i=0;i<=(m-n);i++)\n    {\n        int temp=0,b[1000];\n        for(j=i;j<(i+n);j++)\n        {\n            if(!(s[j-i]==t[j]))\n            {\n                b[temp]=j-i;\n                temp++;\n            }\n        }\n        if(min>temp)\n        {\n            for(j=0;j<temp;j++)\n                a[j]=b[j];\n            min=temp;\n        }\n    }\n    printf(\"%d\\n\",min);\n    for(i=0;i<min;i++)\n        printf(\"%d \",a[i]+1);\n    return 0;\n}\n"}
{"similarity_score": 0.995049504950495, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6bec31e793ad8f07eb057724393b4c0c", "bug_code_uid": "ff3ff22d435543006eb38083197b0af0", "src_uid": "6421a81f85a53a0c8c63fbc32750f77f", "apr_id": "f8d18ea4ca01a54be60bd8aaf1bc4909", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    float l,p,q;\n    float h,answer;\n    scanf(\"%f\",&l);\n    scanf(\"%f\",&p);\n    scanf(\"%f\",&q);\n    h=l*q/(p+q);\n    answer=l-h;\n    printf(\"%.1f\",answer);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    float l,p,q;\n    float h,answer;\n    scanf(\"%f\",&l);\n    scanf(\"%f\",&p);\n    scanf(\"%f\",&q);\n    h=l*q/(p+q);\n    answer=l-h;\n    printf(\"%f\",answer);\n    return 0;\n}"}
{"similarity_score": 0.9447470817120622, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "abd16e9b6faebcf92b402613d32a10b0", "bug_code_uid": "1a4882477f1e8ae7e9e268e37940fc2d", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "fc0b1532ee0e77f33bbefce786af53c4", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint n,i,j,t=1;\nchar s[1002],temp;\nscanf(\"%s\",s);\nn=strlen(s);\nif(n%2!=0)\nprintf(\"First\");\nelse\n{\nfor(i=0;i<n-1;i++)\n  {for(j=i+1;j<n;j++)\n  { if((int)s[i]>(int)s[j])\n             temp=s[i];\n             s[i]=s[j];\n             s[j]=temp;\n  }\n}\nfor(i=1;i<n;i++)\n{\n                if(s[i]==s[i-1])\n                        t++;\n                else if(t%2!=0)\n                    {        printf(\"Second\");\n                        return(0);\n                    }\n            else\n        {   t=1;\n            continue;\n        }\n}\nprintf(\"First\");\nreturn(0);\n}\n\n}\n\n\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint n,i,j,t=1;\nchar s[1002],temp;\nscanf(\"%s\",s);\nn=strlen(s);\nif(n%2!=0)\nprintf(\"First\");\nelse\n{\nfor(i=0;i<n-1;i++)\n  {for(j=i+1;j<n;j++)\n  { if((int)s[i]>(int)s[j])\n           {\n\n             temp=s[i];\n             s[i]=s[j];\n             s[j]=temp;\n           }\n  }\n\n}\n\n\nfor(i=1;i<n;i++)\n{\n                if(s[i]==s[i-1])\n                        t++;\n                else if(t%2!=0)\n                    {        printf(\"Second\");\n                        return(0);\n                    }\n            else\n        {   t=1;\n            continue;\n        }\n}\nprintf(\"First\");\nreturn(0);\n}\n\nreturn(0);\n\n\n}\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.1981335247666906, "equal_cnt": 29, "replace_cnt": 24, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 28, "lang": "GNU C", "fix_code_uid": "0110d6f060cf40eb8a1d627c69bac21b", "bug_code_uid": "2d903141b599c8466106df2d44581816", "src_uid": "d7fe15a027750c004e4f50175e1e20d2", "apr_id": "361e896cffd94056c8396b309686e1a0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(){\n\tchar order[101];\n\tint on=0;\n\tint caracter=0;\n\tint total=0;\n\tint ans=0;\n\tint cont=0;\n\tscanf(\"%[^\\n]\", order);\n\twhile(order != '0'){\n\t\tif((order[0] == '+')){\n\t\t\ton = on + 1;\n\t\t}\n\t\tif((order[0] == '-') && (on > 0)){\n\t\t\ton = on - 1;\n\t\t}\n\t\tif((order[0] != '+' && order[0] != '-') && (on > 0)){\n\t\t\tfor(cont=0; cont<101; cont ++){\n\t\t\t\tif(order[cont] != ':'){\n\t\t\t\t\tcaracter++;\n\t\t\t\t}else{\n\t\t\t\t\tcaracter++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttotal = total + strlen(order);\n\t\tans = ans + (total - caracter);\n\t\tif(order == '0'){\n\t\t\tprintf(\"%d\\n\", ans*on);\n\t\t\tbreak;\n\t\t}\n\t\tscanf(\"%[^\\n]\", order);\n\t}\n\treturn 0;\n}\n/* 1534546860615 */\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(){\n    char strler[100];\n    int i, j, k, m;\n    int quantp = 0, quantb = 0, quantbtotal = 0;\n\n    while(gets(strler)){\n        if(strler[0]==43){\n            quantp++;\n        }else if(strler[0]==45){\n            quantp--;\n        }else{\n            j=0;\n            for(i=0;i<strlen(strler);i++){\n                if(j==1){\n                    quantb++;\n                }\n                if(strler[i]==58){\n                    j=1;\n                }\n            }\n        }\n        quantbtotal = quantbtotal + quantb*quantp;\n        quantb = 0;\n    }\n    printf(\"%d\\n\", quantbtotal);\n\n    return 0;\n}\n/* 1534713449673 */\n"}
{"similarity_score": 0.1355081555834379, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0f7801db29c8df17b1622e0f40f6fcf3", "bug_code_uid": "0c91b184655c8c2eb18135bc3eae2636", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "18d70b5b91dff14d702d762531df0790", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,max=0,i,d;\n\tchar c;\n\tscanf(\"%d\",&n);\n\tint a[1000001]={0},curr[1001];\n\tcurr[0]=0;\n\tfor( i =1;i<=n;i++){\n\t\tgetchar();\n\t\tscanf(\"%c%d\",&c,&d);\n\t\tif( c == '+' )\n\t\t{\n\t\t\ta[d]=1;\n\t\t\tcurr[i]= curr[i-1]+1;\n\t\t}\n\t\telse if( a[d] == 1 ){\n\t\t\ta[d]=0;\n\t\t\tcurr[i] = curr[i-1]-1;\n\t\t}\n\t\telse{\n\t\t\tfor( d=0;d<i;d++)\n\t\t\t\tcurr[d]++;\n\t\t}\n\t}\n\tfor( i=0;i<=n;i++)\n\t\tif( max < curr[i] )\n\t\t\tmax = curr[i];\n\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n,d, max= 0, prev=0, a[1000001]={0};\n\tchar c;\n\tscanf(\"%d\",&n);\n\twhile( n-- ){\n\t\tgetchar();\n\t\tscanf(\"%c%d\",&c,&d);\n\t\tif( c == '+' )\n\t\t{\n\t\t\ta[d] = 1;\n\t\t\tprev++;\n\t\t}\n\t\telse if( a[d] == 1 ){\n\t\t\ta[d] = 0;\n\t\t\tprev--;\n\t\t}\n\t\telse{\n\t\t\tmax++;\n\t\t}\n\t\tif( prev > max )\n\t\t\tmax = prev;\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.7475369458128078, "equal_cnt": 27, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 15, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "45d8fa51b20cd5e02d53885aa903c3a2", "bug_code_uid": "e05c1687138912a026435a6feb1bfe5f", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "aaa99e3c616a7e0180d82c8f39aac56d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*\n* @Author: zw\n* @Date:   2020-08-26 21:05:56\n* @Last Modified by:   zw\n* @Last Modified time: 2020-08-26 21:53:05\n* @comments:\n*/\n#include <stdio.h>\n\nint main(int argc, char const *argv[])\n{\n\tint a = 0; //num1\n\tint b = 0; //num2\n\tint c = 0; //bit_count\n\tint ax[100];\n\tint bx[100];\n\tint step = 0;\n\tint temp = 0;\n\tscanf(\"%d%d%d\", &c, &a, &b);\n\tfor (int i = 0; i < c; ++i)\n\t{\n\t\tax[i] = a % 10;\n\t\tbx[i] = b % 10;\n\t\ta /= 10;\n\t\tb /= 10;\n\t}\n\tfor (int i = 0; i < c; ++i)\n\t{\n\t\ttemp = ax[i]>bx[i]?(ax[i]-bx[i]):(bx[i]-ax[i]);\n\t\t//printf(\"temp = %d\\n\", temp);\n\t\tif(temp <= 5)\n\t\t\tstep += temp;\n\t\telse\n\t\t\tstep += (10-temp);\n\t\t//printf(\"step = %d\\n\", step);\n\t}\n\tprintf(\"%d\\n\", step);\n\treturn 0;\n}", "fixed": "/*\n* @Author: zw\n* @Date:   2020-08-26 21:05:56\n* @Last Modified by:   zw\n* @Last Modified time: 2020-08-26 22:16:45\n* @comments:\u7b2c\u4e00\u6b21\u6ca1\u8003\u8651\u5230int\u578b\u7684\u9650\u5236\n*/\n#include <stdio.h>\n\nint main(int argc, char const *argv[])\n{\n\tchar a[1000]; //num1\n\tchar b[1000]; //num2\n\tint c = 0; //bit_count\n\tint ax[100];\n\tint bx[100];\n\tint step = 0;\n\tint temp = 0;\n\tscanf(\"%d%s%s\", &c, a, b);\n\t// for (int i = 0; i < c; ++i)\n\t// {\n\t// \tax[i] = a[i] - 48;\n\t// \tbx[i] = b[i] - 48;\n\t// }\n\t// for (int i = 0; i < c; ++i)\n\t// {\n\t// \ttemp = ax[i]>bx[i]?(ax[i]-bx[i]):(bx[i]-ax[i]);\n\t// \t//printf(\"temp = %d\\n\", temp);\n\t// \tif(temp <= 5)\n\t// \t\tstep += temp;\n\t// \telse\n\t// \t\tstep += (10-temp);\n\t// \t//printf(\"step = %d\\n\", step);\n\t// }\n\tfor (int i = 0; i < c; ++i)\n\t{\n\t\ttemp = a[i]>b[i]?(a[i]-b[i]):(b[i]-a[i]);\n\t\t//printf(\"temp = %d\\n\", temp);\n\t\tif(temp <= 5)\n\t\t\tstep += temp;\n\t\telse\n\t\t\tstep += (10-temp);\n\t\t//printf(\"step = %d\\n\", step);\n\t}\n\tprintf(\"%d\\n\", step);\n\treturn 0;\n}"}
{"similarity_score": 0.9806451612903225, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "be6b5e66ac1d5105441fa62f0e5172ee", "bug_code_uid": "8be1336aba6c51a991253d577250fd35", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "a05fb7773e018b0ff1262235ad4b64c6", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if((n&(n-1))==0){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n             printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int long long n;\r\n        scanf(\"%lld\",&n);\r\n        if((n&(n-1))==0){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n             printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9973190348525469, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "046ff026062fa8bd155851cda5f19af0", "bug_code_uid": "1b2d9de86d076aa07be3dda6fb030460", "src_uid": "ea011f93837fdf985f7eaa7a43e22cc8", "apr_id": "44ba0b7e183c20f11f7325606f487262", "difficulty": null, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int t,i;\n    char n[1000];\n    scanf(\"%d \",&t);\n    for(i=1;i<=t;i++)\n    {\n        gets(n);\n        printf(\"%lld\\n\",strlen(n));\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int t,i;\n    char n[10000];\n    scanf(\"%d \",&t);\n    for(i=1;i<=t;i++)\n    {\n        gets(n);\n        printf(\"%lld\\n\",strlen(n));\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8669950738916257, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "de5c26bc15a25f8753b8af5024470670", "bug_code_uid": "cc8062039fc4e4f5e188ce4daed27b59", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "0516876ea549e3f9801eebed606ec913", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint a[3005];\n\nint main()\n{\n    int n=0,i=0,j=0,med=0,ans=0,b=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n            if(a[i] == 0){\n            a[i]++;\n            ans++;\n        }\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(a[i]<a[j]){\n                med=a[i];\n                a[i]=a[j];\n                a[j]=med;\n            }\n        }\n    }\n \n    for(i=0;i<n;i++){\n        b = a[i] - a[i+1];\n        if(b > 1){\n        ans+=b-1;\n        a[i+1]+=b-1;\n        }\n\n    }\n\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint a[3005];\n\nint main()\n{\n    int n=0,i=0,j=0,med=0,ans=0,b=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n            if(a[i] == 0){\n            a[i]++;\n            ans++;\n        }\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(a[i]>a[j]){\n                med=a[i];\n                a[i]=a[j];\n                a[j]=med;\n            }\n        }\n    }\n\n    for(i=0;i<n-1;i++){\n        b = a[i] - a[i+1];\n        if(b >= 0){\n        ans+=b+1;\n        a[i+1]+=b+1;\n        }\n\n    }\n\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.984406779661017, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f0b8b1a18824f71292329982799fe4a8", "bug_code_uid": "41754a4f08cd453f6885e9b39c5fa702", "src_uid": "1898e591b40670173e4c33e08ade48ba", "apr_id": "54dfa34fcedd2722d9cfaff8c5dc2a53", "difficulty": 1400, "tags": ["constructive algorithms", "interactive", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n\nmain ()\n{\n     int n, x[51], i=1, a, b, c;\n     scanf(\"%d\", &n);\n     printf(\"? %d %d\\n\", 1, 2);\n     fflush(stdout);\n     scanf(\"%d\", &a);\n     printf(\"? %d %d\\n\", 2, 3);\n     fflush(stdout);\n     scanf(\"%d\", &b);\n     printf(\"? %d %d\\n\", 1, 3);\n     fflush(stdout);\n     scanf(\"%d\", &c);\n     x[1]=(c+a-b)/2;\n     x[2]=a-x[1];\n     x[3]=(c-a+b)/2;\n     i=4;\n     while(i<=n)\n     {\n                printf(\"? %d %d\\n\", i-1, i);\n                fflush(stdout);\n                scanf(\"%d\", &a);\n                x[i]=a-x[i-1];\n                i++;\n     }\n     i=1;\n     printf(\"!\");\n     while(i<=n)\n     {\n                printf(\" %d\", x[i]);\n                i++;\n     }\n     fflush(stdout);\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <conio.h>\n\nmain ()\n{\n     int n, x[5001], i=1, a, b, c;\n     scanf(\"%d\", &n);\n     printf(\"? %d %d\\n\", 1, 2);\n     fflush(stdout);\n     scanf(\"%d\", &a);\n     printf(\"? %d %d\\n\", 2, 3);\n     fflush(stdout);\n     scanf(\"%d\", &b);\n     printf(\"? %d %d\\n\", 1, 3);\n     fflush(stdout);\n     scanf(\"%d\", &c);\n     x[1]=(c+a-b)/2;\n     x[2]=a-x[1];\n     x[3]=(c-a+b)/2;\n     i=4;\n     while(i<=n)\n     {\n                printf(\"? %d %d\\n\", i-1, i);\n                fflush(stdout);\n                scanf(\"%d\", &a);\n                x[i]=a-x[i-1];\n                i++;\n     }\n     i=1;\n     printf(\"!\");\n     while(i<=n)\n     {\n                printf(\" %d\", x[i]);\n                i++;\n     }\n     return 0;\n}\n"}
{"similarity_score": 0.9882747068676717, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "21f9af81eb9d699da4e6c650670d5f64", "bug_code_uid": "2c32988209e9c76568ce7acf383206e4", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "c5d2ca91c17ca9346cf00f26075e0323", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char str1[100005],str2[50];\n    int i,j,len1,len2,k=0,count=0,p,l;\n    scanf(\"%s %s\",str1,str2);\n    len1=strlen(str1);\n    len2=strlen(str2);\n    for(i=0;i<len1;i++){\n        if(str1[i]==str2[0]){\n            k=0;\n            for(j=0,p=i;j<len2 && p<i+len2;j++,p++){\n                if(str1[p]==str2[j]){\n                    k++;\n                    if(k==len2){\n                        count++;\n                        i++;\n                    }\n                }\n            }\n\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char str1[100005],str2[50];\n    int i,j,len1,len2,k=0,count=0,p,l;\n    scanf(\"%s %s\",str1,str2);\n    len1=strlen(str1);\n    len2=strlen(str2);\n    for(i=0;i<len1;i++){\n        if(str1[i]==str2[0]){\n            k=0;\n            for(j=0,p=i;j<len2 && p<i+len2;j++,p++){\n                if(str1[p]==str2[j]){\n                    k++;\n                    if(k==len2){\n                        count++;\n                        str1[p]='#';\n                    }\n                }\n            }\n\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}"}
{"similarity_score": 0.9652042360060514, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fc3cb5a778ad39a6b5725766764b098c", "bug_code_uid": "785b19ba4ade4ef65af436cbaf37f516", "src_uid": "d4d41e75c68ce5e94c92e1b9876891bf", "apr_id": "054512d68e68e6ebbd52d976950bc7e7", "difficulty": null, "tags": ["geometry", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{//Ashish must first Utkarsh next\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile (t--)\n\t{\n\t\tdouble x=0,y=0;\n\t\tdouble d;//\u957f\u5ea6\n\t\tdouble k;\n\t\tint a=0;//\u5947\u6570 \u5076\u6570\n\t\tscanf(\"%lf%lf\",&d,&k);\n\t\twhile (x*x+y*y<=d*d)\n\t\t{\n\t\t\tif (x==y)\n\t\t\t\tx+=k;\n\t\t\telse y+=k;\n\t\t}\n\t\tif (x==y)\tprintf(\"Ashiish\\n\");\n\t\telse \t\tprintf(\"Utkarsh\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main ()\n{//Ashish must first Utkarsh next\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile (t--)\n\t{\n\t\tdouble x=0,y=0;\n\t\tdouble d;//\u957f\u5ea6\n\t\tdouble k;\n\t\tscanf(\"%lf%lf\",&d,&k);\n\t\twhile (x*x+y*y<=d*d)\n\t\t{\n\t\t\tif (x<=y)\n\t\t\t\tx+=k;\n\t\t\telse y+=k;\n\t\t}\n\t\tif (x<=y)\tprintf(\"Ashish\\n\");\n\t\telse \t\tprintf(\"Utkarsh\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9796610169491525, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a6a62d24a18f552572e256abcc3d5ae6", "bug_code_uid": "77b8d278fdcd51597d44fc33035e4eec", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "dfa9e56acf8a71d4a87e31520a3c69f1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdbool.h>\nint main(){\n    int input;\n    scanf(\"%d\", &input);\n    bool istwo;\n    for(int i=0; i<input; i++){\n        int students;\n        scanf(\"%d\", &students);\n        int arr[students];\n        for(int i=0; i<students; i++){\n            scanf(\"%d\", &arr[i]);\n        }\n        istwo=false;\n        for(int i=0; i<students-1; i++){\n            for(int j=i+1; j<students; j++){\n                if((arr[j]-arr[i])<=1) {istwo=true; break;}\n            }\n        }\n        if(istwo) printf(\"2\\n\");\n        else printf(\"1\\n\");\n    }\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<stdbool.h>\n#include<stdlib.h>\nint main(){\n    int input;\n    scanf(\"%d\", &input);\n    bool istwo;\n    for(int i=0; i<input; i++){\n        int students;\n        scanf(\"%d\", &students);\n        int arr[students];\n        for(int i=0; i<students; i++){\n            scanf(\"%d\", &arr[i]);\n        }\n        istwo=false;\n        for(int i=0; i<students-1; i++){\n            for(int j=i+1; j<students; j++){\n                if((abs(arr[j]-arr[i]))<=1) {istwo=true; break;}\n            }\n        }\n        if(istwo) printf(\"2\\n\");\n        else printf(\"1\\n\");\n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.31790123456790126, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1528c475028d63808eafc737bf3f6436", "bug_code_uid": "6c581e6387d305145ca935fa38006f8d", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "4f90b7384b075b22c3f76ad0b5776fb6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n        int t=0;\n        printf(\"Number of test cases : \");\n        scanf(\"%d\",&t);\n        int i=0;\n        while(i<t){\n            int n,c=0,j;\n            printf(\"enter : \");\n            scanf(\"%d\",&n);\n            if(n%2==0){\n                c=n/2-1;\n            }else{\n                c=n/2;\n            }\n            printf(\"%d\\n\",c);\n            i++;\n        }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int t;\n        scanf(\"%d\",&t);\n        int i=0;\n        while(i<t){\n            int n,c=0,j,a,b;\n            scanf(\"%d\",&n);\n            c=(n-1)/2;\n            printf(\"%d\\n\",c);\n            i++;\n        }\n}\n"}
{"similarity_score": 0.8834565093803297, "equal_cnt": 23, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 9, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "abb7330e0a34c02a8b4b225f26eb3081", "bug_code_uid": "7c475a2e878d9c74312c0c2f4aa5de03", "src_uid": "0d5f4320fc2c7662d21e09a51baf21db", "apr_id": "6145cff0b68441ba4d159d3f3a6b787e", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\ufeff// \u9898\u76ee3.cpp : \u6b64\u6587\u4ef6\u5305\u542b \"main\" \u51fd\u6570\u3002\u7a0b\u5e8f\u6267\u884c\u5c06\u5728\u6b64\u5904\u5f00\u59cb\u5e76\u7ed3\u675f\u3002\r\n//\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#include<stdio.h>\r\nint main() {\r\n\tint m, n;\r\n\tscanf(\"%d\", &m);\r\n\twhile (m--) {\r\n\t\tscanf(\"%d\", &n);\r\n\t\tif (n == 1) {\r\n\t\t\tprintf(\"1\");\r\n\t\t}\r\n\t\tif (n % 2 == 0) {\r\n\t\t\tfor (int i = 0; i < n / 2; i++) {\r\n\t\t\t\tprintf(\"%d\", n / 2 - i);\r\n\t\t\t\tprintf(\"%d\", n - i);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (int i = 0; i < n / 2; i++) {\r\n\t\t\t\tprintf(\"%d\", (n-1) / 2 - i);\r\n\t\t\t\tprintf(\"%d\", n-1 - i);\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\", n);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n// \u8fd0\u884c\u7a0b\u5e8f: Ctrl + F5 \u6216\u8c03\u8bd5 >\u201c\u5f00\u59cb\u6267\u884c(\u4e0d\u8c03\u8bd5)\u201d\u83dc\u5355\r\n// \u8c03\u8bd5\u7a0b\u5e8f: F5 \u6216\u8c03\u8bd5 >\u201c\u5f00\u59cb\u8c03\u8bd5\u201d\u83dc\u5355\r\n\r\n// \u5165\u95e8\u4f7f\u7528\u6280\u5de7: \r\n//   1. \u4f7f\u7528\u89e3\u51b3\u65b9\u6848\u8d44\u6e90\u7ba1\u7406\u5668\u7a97\u53e3\u6dfb\u52a0/\u7ba1\u7406\u6587\u4ef6\r\n//   2. \u4f7f\u7528\u56e2\u961f\u8d44\u6e90\u7ba1\u7406\u5668\u7a97\u53e3\u8fde\u63a5\u5230\u6e90\u4ee3\u7801\u7ba1\u7406\r\n//   3. \u4f7f\u7528\u8f93\u51fa\u7a97\u53e3\u67e5\u770b\u751f\u6210\u8f93\u51fa\u548c\u5176\u4ed6\u6d88\u606f\r\n//   4. \u4f7f\u7528\u9519\u8bef\u5217\u8868\u7a97\u53e3\u67e5\u770b\u9519\u8bef\r\n//   5. \u8f6c\u5230\u201c\u9879\u76ee\u201d>\u201c\u6dfb\u52a0\u65b0\u9879\u201d\u4ee5\u521b\u5efa\u65b0\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u6216\u8f6c\u5230\u201c\u9879\u76ee\u201d>\u201c\u6dfb\u52a0\u73b0\u6709\u9879\u201d\u4ee5\u5c06\u73b0\u6709\u4ee3\u7801\u6587\u4ef6\u6dfb\u52a0\u5230\u9879\u76ee\r\n//   6. \u5c06\u6765\uff0c\u82e5\u8981\u518d\u6b21\u6253\u5f00\u6b64\u9879\u76ee\uff0c\u8bf7\u8f6c\u5230\u201c\u6587\u4ef6\u201d>\u201c\u6253\u5f00\u201d>\u201c\u9879\u76ee\u201d\u5e76\u9009\u62e9 .sln \u6587\u4ef6\r\n", "fixed": "\ufeff// \u9898\u76ee3.cpp : \u6b64\u6587\u4ef6\u5305\u542b \"main\" \u51fd\u6570\u3002\u7a0b\u5e8f\u6267\u884c\u5c06\u5728\u6b64\u5904\u5f00\u59cb\u5e76\u7ed3\u675f\u3002\r\n//\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#include<stdio.h>\r\nint main() {\r\n\tint m, n;\r\n\tint a[10000];\r\n\tscanf(\"%d\", &m);\r\n\tfor (int j = 0; j < m; j++) {\r\n\t\tscanf(\"%d\", &a[j]);\r\n\t}\r\n\tfor (int q = 0; q < m; q++) {\r\n\t\tif (a[q] == 1) {\r\n\t\t\tprintf(\"1\\n\");\r\n\r\n\t\t}\r\n\t\tif (a[q] % 2 == 0) {\r\n\t\t\tfor (int i = 0; i < a[q] / 2; i++) {\r\n\t\t\t\tprintf(\"%d  \", a[q] / 2 - i);\r\n\t\t\t\tprintf(\"%d  \", a[q] - i);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (int i = 0; i < a[q] / 2; i++) {\r\n\t\t\t\tprintf(\"%d  \", (a[q] - 1) / 2 - i);\r\n\t\t\t\tprintf(\"%d  \", a[q] - 1 - i);\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\", a[q]);\r\n\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n// \u8fd0\u884c\u7a0b\u5e8f: Ctrl + F5 \u6216\u8c03\u8bd5 >\u201c\u5f00\u59cb\u6267\u884c(\u4e0d\u8c03\u8bd5)\u201d\u83dc\u5355\r\n// \u8c03\u8bd5\u7a0b\u5e8f: F5 \u6216\u8c03\u8bd5 >\u201c\u5f00\u59cb\u8c03\u8bd5\u201d\u83dc\u5355\r\n\r\n// \u5165\u95e8\u4f7f\u7528\u6280\u5de7:\r\n//   1. \u4f7f\u7528\u89e3\u51b3\u65b9\u6848\u8d44\u6e90\u7ba1\u7406\u5668\u7a97\u53e3\u6dfb\u52a0/\u7ba1\u7406\u6587\u4ef6\r\n//   2. \u4f7f\u7528\u56e2\u961f\u8d44\u6e90\u7ba1\u7406\u5668\u7a97\u53e3\u8fde\u63a5\u5230\u6e90\u4ee3\u7801\u7ba1\u7406\r\n//   3. \u4f7f\u7528\u8f93\u51fa\u7a97\u53e3\u67e5\u770b\u751f\u6210\u8f93\u51fa\u548c\u5176\u4ed6\u6d88\u606f\r\n//   4. \u4f7f\u7528\u9519\u8bef\u5217\u8868\u7a97\u53e3\u67e5\u770b\u9519\u8bef\r\n//   5. \u8f6c\u5230\u201c\u9879\u76ee\u201d>\u201c\u6dfb\u52a0\u65b0\u9879\u201d\u4ee5\u521b\u5efa\u65b0\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u6216\u8f6c\u5230\u201c\u9879\u76ee\u201d>\u201c\u6dfb\u52a0\u73b0\u6709\u9879\u201d\u4ee5\u5c06\u73b0\u6709\u4ee3\u7801\u6587\u4ef6\u6dfb\u52a0\u5230\u9879\u76ee\r\n//   6. \u5c06\u6765\uff0c\u82e5\u8981\u518d\u6b21\u6253\u5f00\u6b64\u9879\u76ee\uff0c\u8bf7\u8f6c\u5230\u201c\u6587\u4ef6\u201d>\u201c\u6253\u5f00\u201d>\u201c\u9879\u76ee\u201d\u5e76\u9009\u62e9 .sln \u6587\u4ef6\r\n"}
{"similarity_score": 0.17757009345794392, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "8908984720d702e7e20a535424031d24", "bug_code_uid": "32ad58ea0f467cc9ad76eeaa05d8774c", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "2dabedcce135baf1d24f9ba8782fd161", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\\n\",&n);\n\tfor(i=0;i<n;i++){\n\t\tint m,j;\n\t\tscanf(\"%d\\n\",&m);\n\t\tint a[m];\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t}\n\t    int temp1=0;\n\t\tfor(j=m-1;j>=0;j--){\n\t\t\tif(a[j]==0){\n\t\t\t\ttemp1=j+1; \n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint temp2=0;\n\t\tfor(j=0;j<m;j++){\n\t\t\tif(a[j]==0){\n\t\t\t\ttemp2=j-1;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",temp1-temp2);\n\t}\n\treturn 0;\n}\n\n \t  \t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t \t\t  \t\t\t \t", "fixed": "#include<stdio.h>\n\nint main(){\n\n   int t;\n   int result;\n   int a[10000], b[10000];\n\n   scanf(\"%d\", &t);\n\n   for(int i = 0 ; i< t;i++){\n        scanf(\"%d\", &a[i]);\n        scanf(\"%d\", &b[i]);\n        result = 0;\n        if(a[i]>0){\n            result = a[i] + 2*b[i] + 1;\n        }\n        if(a[i] == 0){\n            result = 1;\n        }\n\n        printf(\"%d\\n\", result);\n   }\n\n    return 0;\n}\n\t \t \t\t  \t \t\t\t \t\t\t\t\t\t  \t \t   \t \t"}
{"similarity_score": 0.960352422907489, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ee61bbd6d97ca2b6c12342631d74bf77", "bug_code_uid": "b4f68ae7c49b6f1f616e03e7062bbcd8", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "881d96695c4157e6fd5242434879dfc8", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfn(const void *a, const void *b) {\n  return (*(int*)a - *(int*)b);\n}\n\nvoid min_lanterns(void) {\n  int n, l;\n  scanf(\"%d %d\", &n, &l);\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &arr[i]);\n  }\n  qsort(arr,n,sizeof(int),cmpfn);\n  double d = arr[0];\n  for (int i = 0; i < n - 1; i++) {\n    if (d < ((double) arr[i + 1] - (double) arr[i]) / 2) {\n      d = ((double) arr[i + 1] - (double) arr[i]) / 2;\n    }\n  }\n  printf(\"%f\\n\", d);\n}\n\nint main(void) {\n  min_lanterns();\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfn(const void *a, const void *b) {\n  return (*(int*)a - *(int*)b);\n}\n\nvoid min_lanterns(void) {\n  int n, l;\n  scanf(\"%d %d\", &n, &l);\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &arr[i]);\n  }\n  qsort(arr,n,sizeof(int),cmpfn);\n  double d = arr[0] > (l - arr[n - 1]) ? arr[0] : l - arr[n - 1];\n  for (int i = 0; i < n - 1; i++) {\n    if (d < ((double) arr[i + 1] - (double) arr[i]) / 2) {\n      d = ((double) arr[i + 1] - (double) arr[i]) / 2;\n    }\n  }\n  printf(\"%f\\n\", d);\n}\n\nint main(void) {\n  min_lanterns();\n  return 0;\n}\n"}
{"similarity_score": 0.8926223520818115, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c47b0ce7450ac3650a2a35904f00e6af", "bug_code_uid": "ab5d7b1a0ebe83499babca697a3dde82", "src_uid": "9e71b4117a24b906dbc16e6a6d110f50", "apr_id": "b2bd157b9a6366ec6a409851ea3923a2", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n\nint prices[1000000];\n\nint main()\n{\n\tint n, k;\n\tint i;\n\tint smaller_price;\n\tlong long seconds = 0;\n\t\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &k);\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &prices[i]);\n\t}\n\n\tif (prices[0] > prices[1])\n\t{\n\t\tsmaller_price = prices[1];\n\t}\n\telse\n\t{\n\t\tsmaller_price = prices[0];\n\t}\n\n\tfor (i = 2; i < n; i++)\n\t{\n\t\tif (prices[i] < smaller_price)\n\t\t{\n\t\t\tsmaller_price = prices[i];\n\t\t}\n\t}\n\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif ((prices[i] - smaller_price) % k != 0)\n\t\t{\n\t\t\tprintf(\"%d\", -1);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tseconds = seconds + (long long)((prices[i] - smaller_price) / k);\n\t\t}\n\t}\n\t\n\tprintf(\"%lld\\n\", seconds);\n\treturn 0;\n}\n\n/* 1518181401995 */\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n\nint prices[1000000];\n\nint main()\n{\n\tint n, k;\n\tint i;\n\tint smaller_price;\n\tlong long seconds = 0;\n\t\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &k);\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &prices[i]);\n\t}\n\n\tsmaller_price = prices[0];\n\t\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tif (prices[i] < smaller_price)\n\t\t{\n\t\t\tsmaller_price = prices[i];\n\t\t}\n\t}\n\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif ((prices[i] - smaller_price) % k != 0)\n\t\t{\n\t\t\tprintf(\"%d\", -1);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tseconds = seconds + (long long)((prices[i] - smaller_price) / k);\n\t\t}\n\t}\n\t\n\tprintf(\"%lld\\n\", seconds);\n\treturn 0;\n}\n\n/* 1518181660022 */\n"}
{"similarity_score": 0.8254745866503368, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1f6c67eea0ae03730441d026cdeb793d", "bug_code_uid": "9ec3c0e9aa947d3be8d928a837fb23a4", "src_uid": "aa31a2a1ad1575aee051ddee8642c53a", "apr_id": "eba841d5383e9d555d7084ebf9574a6a", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "for(i=0;i <= tiempo;i++){\n        fflush(stdin);\n        scanf(\"%c\",&dir);\n        if(dir == 'N'){\n            if(iniy < finy){\n                iniy++;\n            }\n        }\n        else if(dir == 'S'){\n            if(iniy > finy){\n                iniy--;\n            }\n\n        }\n        else if(dir == 'W'){\n            if(inix > finx){\n                inix--;\n            }\n        }\n        else if(dir == 'E'){\n            if(inix < finx){\n                inix++;\n            }\n        }\n        if(inix == finx && iniy == finy){\n            printf(\"%d\",i);\n            found = 1;\n            break;\n        }\n    }\n    if(found == 0){\n        printf(\"-1\");\n    }\n    return 0;\n}\n", "fixed": "int main(){\n    int i,tiempo;\n    int found = 0;\n    int inix,iniy,finx,finy;\n    char dir;\n    scanf(\"%d\",&tiempo);\n    scanf(\"%d\",&inix);\n    scanf(\"%d\",&iniy);\n    scanf(\"%d\",&finx);\n    scanf(\"%d\",&finy);\n    //char dir[n];\n    //scanf(\"%c\",&dir);\n\n    for(i=0;i <= tiempo;i++){\n        //fflush(stdin);\n        scanf(\"%c\",&dir);\n        if(dir == 'N'){\n            if(iniy < finy){\n                iniy++;\n            }\n        }\n        else if(dir == 'S'){\n            if(iniy > finy){\n                iniy--;\n            }\n\n        }\n        else if(dir == 'W'){\n            if(inix > finx){\n                inix--;\n            }\n        }\n        else if(dir == 'E'){\n            if(inix < finx){\n                inix++;\n            }\n        }\n        if(inix == finx && iniy == finy){\n            printf(\"%d\",i);\n            found = 1;\n            break;\n        }\n    }\n    if(found == 0){\n        printf(\"-1\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.0, "equal_cnt": 0, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ad0569f85a76403ab9d9d767ca3060fa", "bug_code_uid": "c5f7c37c6de321892d31230a760a7112", "src_uid": "b0ffab0bf169f8278af48fe2d58dcd2d", "apr_id": "8de2eec85ee31b65dea9d0d84f0fe436", "difficulty": 1000, "tags": ["number theory", "sortings", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n", "fixed": "#include <stdio.h>\nint main(){\n    long int n,ara[100001],i,count,min;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++){\n            scanf(\"%ld\",&ara[i]);\n            if(i==0) min=ara[i];\n            if(min>ara[i]) min=ara[i];\n    }\n    count=0;\n    for(i=0;i<n;i++)\n      if(ara[i]%min!=0){\n            count++; break;\n      }\n    if(count==0)printf(\"%ld\\n\",min);\n    else printf(\"-1\\n\") ;\n    return 0;\n}\n"}
{"similarity_score": 0.9920844327176781, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2da97064c003d31ef2001be584dd755c", "bug_code_uid": "d9af5cd0b28738878af5ea6b80c63e2b", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "7d3dfd3b3825bc59910f2820b47f5eb0", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    for(int i=0; i<t; ++i)\n    {\n        int n, m;\n        scanf(\"%d %d\", &n, &m);\n        int ans=0;\n        ans=n*m;\n        if((n*m)%2==1)\n        {\n            ans=ans/2;\n            ans=ans+1;\n        }\n        else\n        {\n            ans=ans/2;\n        }\n        printf(\"%d\", ans);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n \nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    for(int i=0; i<t; ++i)\n    {\n        int n, m;\n        scanf(\"%d %d\", &m, &n);\n        int ans=0;\n        ans=n*m;\n        if((n*m)%2==1)\n        {\n            ans=ans/2;\n            ans=ans+1;\n        }\n        else\n        {\n            ans=ans/2;\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}"}
{"similarity_score": 0.4895330112721417, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9c22b56138ef28e9897d7a0110199b1d", "bug_code_uid": "eb6a62ffcd581e472f47c7255a1022bc", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "9550dd35f8c1bc1da54b1a8ef637f508", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int a,i,n,x,k,j;\n    double m;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a);\n        int flag=0;\n        m=sqrt(a);\n        x=m;\n        if(floor(m)!=ceil(m)||a==1){\n            printf(\"NO\\n\");\n        }\n        else{\n            for(j=2;j<=x/j;j++){\n                if(x%j==0){\n                printf(\"NO\\n\");\n                flag=1;\n                break;\n                }\n            }\n            if(flag==0){\n                printf(\"YES\\n\");\n            }\n\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int a,i,n,x,k,j;\n    double m;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a);\n        int flag=0;\n        m=sqrt(a);\n        x=m;\n        if(a==4){\n            printf(\"YES\\n\");\n        }\n        else if(floor(m)!=ceil(m)||a==1||a%2==0){\n            printf(\"NO\\n\");\n        }\n        else{\n            for(j=3;j<=sqrt(m);j=j+2){\n                if(x%j==0){\n                printf(\"NO\\n\");\n                flag=1;\n                break;\n                }\n            }\n            if(flag==0){\n                printf(\"YES\\n\");\n            }\n\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8426724137931034, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "c4e2173776f6498388c0b499748aa460", "bug_code_uid": "4f7ebc5c6e1f41553c4914c22f5ab02c", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "247588433087bd163a2059f79a103070", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*This is by Technical Bangla from Universtiy of Dhaka*/\n#include <stdio.h>\n\nint num[2001];\n\nint Solve(int x,int len)\n{\n    int i,count;\n    for(i=count=0;i<len-1;i++)\n    {\n        if(num[i]<num[i+1]);\n        else while(num[i]>=num[i+1]) num[i+1]+=x,count++;\n    }\n    return count;\n}\n\nint main()\n{\n    int i,n,d;\n    scanf(\"%d %d\",&n,&d);\n    for(i=0;i<n;i++) scanf(\"%d\",&num[i]);\n    printf(\"%d\\n\",Solve(d,n));\n    return 0;\n}\n", "fixed": "/*This is by Technical Bangla from Universtiy of Dhaka*/\n#include <stdio.h>\n\nint num[2001];\n\nint Solve(int x,int len)\n{\n    int i,f,count;\n    for(i=count=0;i<len-1;i++)\n    {\n        if(num[i]<num[i+1]);\n        else\n        {\n            f=num[i]-num[i+1];f/=x;f++;\n            count+=f;\n            num[i+1]+=f*x;\n        }\n    }\n    return count;\n}\n\nint main()\n{\n    int i,n,d;\n    scanf(\"%d %d\",&n,&d);\n    for(i=0;i<n;i++) scanf(\"%d\",&num[i]);\n    printf(\"%d\\n\",Solve(d,n));\n    return 0;\n}\n"}
{"similarity_score": 0.984472049689441, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0fc30e10a6dac00e2c8b66f640de4691", "bug_code_uid": "a8b9665813a7742734544ca08c1178ee", "src_uid": "c4c8cb860ea9a5b56bb35532989a9192", "apr_id": "14771f1be659ce74378b021c41de758e", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,i,c;\n    char x[10004],a[10004],b[10004];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        c=0;\n        scanf(\"%d %s\",&n,x);\n        for(i=0;i<n;i++)\n        {\n            if(x[ i ] == '0')\n            {\n                a[ i ] = '0';\n                b[ i ] = '0';\n            }\n            else if(x[ i ] == '1' && c==0)\n            {\n                a[ i ] = '1';\n                b[ i ] = '0';\n                c = 1;\n            }\n            else if(x[ i ] == '1' && c==1)\n            {\n                a[ i ] = '0';\n                b[ i ] = '1';\n            }\n            else if(x[ i ] == '2' && c==0)\n            {\n                a[ i ] = '1';\n                b[ i ] = '1';\n            }\n            else if(x[ i ] == '2' && c==1)\n            {\n                a[ i ] = '0';\n                b[ i ] = '2';\n            }\n        }\n        a[ n ] = '\\0' ;\n        b[ n ] = '\\0' ;\n        printf(\"%s\\n%s\\n\",a,b);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,i,c;\n    char x[50001],a[50001],b[50001];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        c=0;\n        scanf(\"%d %s\",&n,x);\n        for(i=0;i<n;i++)\n        {\n            if(x[ i ] == '0')\n            {\n                a[ i ] = '0';\n                b[ i ] = '0';\n            }\n            else if(x[ i ] == '1' && c==0)\n            {\n                a[ i ] = '1';\n                b[ i ] = '0';\n                c = 1;\n            }\n            else if(x[ i ] == '1' && c==1)\n            {\n                a[ i ] = '0';\n                b[ i ] = '1';\n            }\n            else if(x[ i ] == '2' && c==0)\n            {\n                a[ i ] = '1';\n                b[ i ] = '1';\n            }\n            else if(x[ i ] == '2' && c==1)\n            {\n                a[ i ] = '0';\n                b[ i ] = '2';\n            }\n        }\n        a[ n ] = '\\0' ;\n        b[ n ] = '\\0' ;\n        printf(\"%s\\n%s\\n\",a,b);\n    }\n}\n"}
{"similarity_score": 0.998, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d301b3cfbc19d54c5d50aa7f68da8f81", "bug_code_uid": "8eda36411016be00e1fa9c009063978f", "src_uid": "a99f5e08f3f560488ff979a3e9746e7f", "apr_id": "fd398ef591521326932285044f135496", "difficulty": 1200, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,prime[n+1],j;\n    for(i=0;i<=n+1;i++)\n        prime[i]=1;\n    for(i=2;i*i<=n+1;i++)\n    {\n        if(prime[i])\n        {\n            for(j=2*i;j<=n+1;j=j+i)\n                prime[j]=0;\n        }\n    }\n    if(n<=3)\n        printf(\"1\\n\");\n    else\n        printf(\"2\\n\");\n    for(i=0;i<n;i++)\n    {\n        if(prime[i+2]==1)\n            printf(\"1\");\n        else\n            printf(\"2\");\n        printf(\" \");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,prime[n+1],j;\n    for(i=0;i<=n+1;i++)\n        prime[i]=1;\n    for(i=2;i*i<=n+1;i++)\n    {\n        if(prime[i])\n        {\n            for(j=2*i;j<=n+1;j=j+i)\n                prime[j]=0;\n        }\n    }\n    if(n<=2)\n        printf(\"1\\n\");\n    else\n        printf(\"2\\n\");\n    for(i=0;i<n;i++)\n    {\n        if(prime[i+2]==1)\n            printf(\"1\");\n        else\n            printf(\"2\");\n        printf(\" \");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.764179104477612, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "132cb0563b774e4b7f3513bba9978473", "bug_code_uid": "208cd6fcee1c0b2de76b2bc15c4e9028", "src_uid": "88e6651e1b0481d711e89c8071be1edf", "apr_id": "e8db851acf9f2c04e739fe94eb265b25", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,a[4],i;\n    int x,y;\n    scanf(\"%d\",&n);\n    memset(a,0,sizeof(a));\n    a[n]=1;\n    for(i=1;i<=3;i++)\n    {\n        scanf(\"%d %d\",&x,&y);\n        if(x==n)\n         {\n            n=y;\n            y=1;\n            x=0;\n         }\n        else if(y==n)\n         {\n            n=x;\n            x=1;\n            y=0;\n         }\n    }\n    printf(\"%d\\n\",n);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n,a[10],i;\n    int x,y;\n    FILE *fp1,*fp2;\n    fp1=fopen(\"input.txt\",\"r\");\n    fp2=fopen(\"output.txt\",\"w\");\n    fscanf(fp1,\"%d\",&n);\n    memset(a,0,sizeof(a));\n    a[n]=1;\n    for(i=1;i<=3;i++)\n    { \n        fscanf(fp1,\"%d %d\",&x,&y);\n        if(x==n)\n         {\n            n=y;\n            a[y]=1;\n            a[x]=0;\n         }\n        else if(y==n)\n         {\n            n=x;\n            a[x]=1;\n            a[y]=0;\n         }\n    }\n    fprintf(fp2,\"%d\\n\",n);\n    fclose(fp1);\n    fclose(fp2);\n    return 0;\n}"}
{"similarity_score": 0.252516010978957, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "57c4bdf7e7023c1525e651e09e5dbf09", "bug_code_uid": "a50368397284262f20c902999977749c", "src_uid": "5afa0e4f34ab8c8c67bc8ecb7d6d2d7a", "apr_id": "5185c3d85d5fb7b7a4bc808d88d4c225", "difficulty": 1000, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint a, b, c, d, e, f, g, s[1001][20001];\n\tscanf(\"%d\", &a);\n\tfor (b = 0; b < a; b++)\n\t{\n\t\tscanf(\"%d\", &c);\n\t\tfor (d = 0; d < c; d++)\n\t\t{\n\t\t\tscanf(\"%d\", &s[b][d]);\n\t\t\tfor (e = 1; e < c; e++)\n\t\t\t{\n\t\t\t\tif (s[b][0] > s[b][e])\n\t\t\t\t{\n\t\t\t\t\tg = 0;\n\t\t\t\t\tg = s[b][e];\n\t\t\t\t\tfor (f = 0; f < e; f++)\n\t\t\t\t\t{\n\t\t\t\t\t\ts[b][f + 1] = s[b][f];\n\t\t\t\t\t}\n\t\t\t\t\ts[b][0] = g;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (b = 0; b < a; b++)\n\t{\n\t\tfor (d = 0; d < c; d++)\n\t\t{\n\t\t\tprintf(\"%d \", s[b][d]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\n\t\t\t  \t    \t\t   \t\t   \t\t\t\t\t  \t \t", "fixed": "#include<stdio.h>\nint t, n;\nint a[200010];\nint b[400010];\nint main()\n{\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[i]);\n\t\t}\n\t\tint l = 199999, r = 200001;\n\t\tint now = a[1];\n\t\tb[200000] = a[1];\n\t\tfor (int i = 2; i <= n; i++)\n\t\t{\n\t\t\tif (a[i] < now)\n\t\t\t{\n\t\t\t\tb[l] = a[i];\n\t\t\t\tl--;\n\t\t\t\tnow = a[i];\n\t\t\t}\n\t\t\telse b[r] = a[i], r++;\n\t\t}\n\t\tfor (int i = 0; i <= 400001; i++)\n\t\t{\n\t\t\tif (b[i] != 0) {\n\t\t\t\tprintf(\"%d \", b[i]);\n\t\t\t\tb[i] = 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n \t    \t   \t\t\t \t\t \t \t  \t\t\t"}
{"similarity_score": 0.9990108803165183, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a0bf8088f58bc4d874230f36041a8721", "bug_code_uid": "d62a3cd713924030d239ef57d4b59a9e", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "c6a8efafdaaf6bd85c747d4a0edb2646", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n,x,c=1,k,max=1;\n    int ara[200005];\n    scanf(\"%d\",&n);\n    for(i=0,j=0,k=0; i<n; i++)\n    {\n        scanf(\"%d %d\",&ara[j],&ara[j+1]);\n        if(i>1)\n        {\n            if((ara[k]==ara[k+2])&&(ara[k+1]==ara[k+3]))\n            {\n                c++;\n                if(c>max)\n                    max=c;\n            }\n            else\n            {\n                c=1;\n            }\n            k+=2;\n        }\n\n        j+=2;\n\n    }\n    printf(\"%d\",max);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,n,x,c=1,k,max=1;\n    int ara[200005];\n    scanf(\"%d\",&n);\n    for(i=0,j=0,k=0; i<n; i++)\n    {\n        scanf(\"%d %d\",&ara[j],&ara[j+1]);\n        if(i>=1)\n        {\n            if((ara[k]==ara[k+2])&&(ara[k+1]==ara[k+3]))\n            {\n                c++;\n                if(c>max)\n                    max=c;\n            }\n            else\n            {\n                c=1;\n            }\n            k+=2;\n        }\n\n        j+=2;\n\n    }\n    printf(\"%d\",max);\n}\n"}
{"similarity_score": 0.9887892376681614, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5a8932d815ef7269f771eb6afc284aa8", "bug_code_uid": "52586bb2f68121af15939bd001364bee", "src_uid": "65eb0f3ab35c4d95c1cbd39fc7a4227b", "apr_id": "8a2a49fcda21d81ff746f7a470e9ff22", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define INF 0x3F3F3F3F\n\nint cap[1001];\n\nint main(){\n\n\tint n, m, k;\n\tint i, a, b, out;\n\n\tscanf(\"%d %d %d\", &n, &m, &k );\n\tfor( i = 1; i <= m; i++ )\n\t\tcap[i] = INF;\n\n\tfor( i = 0; i < n; i++ ){\n\t\tscanf(\"%d %d\", &a, &b );\n\t\tif( cap[a] > b ) cap[a] = b;\n\t}\n\n\tfor( i = 1; i <= m; i++ )\n\t\tif( cap[i] != INF ) out += cap[i];\n\n\tif( out > k ) out = k;\n\n\tprintf(\"%d\\n\", out );\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define INF 0x3F3F3F3F\n\nint cap[1001];\n\nint main(){\n\n\tint n, m, k;\n\tint i, a, b, out;\n\n\tscanf(\"%d %d %d\", &n, &m, &k );\n\tfor( i = 1; i <= m; i++ )\n\t\tcap[i] = INF;\n\n\tfor( i = 0; i < n; i++ ){\n\t\tscanf(\"%d %d\", &a, &b );\n\t\tif( cap[a] > b ) cap[a] = b;\n\t}\n\n\tout = 0;\n\tfor( i = 1; i <= m; i++ )\n\t\tif( cap[i] != INF ) out += cap[i];\n\n\tif( out > k ) out = k;\n\n\tprintf(\"%d\\n\", out );\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8603174603174604, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "1428b904b7d8599c2c2b76b511e5960d", "bug_code_uid": "3b0120a047eb3e4c1baefbedb9a57f95", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "48b527e6f90c472d0ed820d739e9c75a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n          int n,h;\n          scanf(\"%d%d\",&n,&h);\n          int a[n],c=0;\n          \n          for(int i=0;i<n;i++)\n          {\n                    c++;\n                    if(a[i]>h)\n                              c++;\n          }\n          \n          printf(\"%d\",c);\n          \n}", "fixed": "#include<stdio.h>\nint main(){\n          int n,h;\n          scanf(\"%d%d\",&n,&h);\n          int a[n],c=0;\n          \n          for(int i=0;i<n;i++)\n            {\n                scanf(\"%d\",&a[i]);\n                if(a[i]>h)\n                    c++;\n                c++;\n            }\n          printf(\"%d\",c);\n          \n}"}
{"similarity_score": 0.10517387616624257, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "59b001025cae39f544b25301673260e4", "bug_code_uid": "6a53c2f3f8c26955b17fb75a40e30884", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "805929adc8c0399a19b5b943518afac7", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i, j, k, bandera, pos_indice, pos_guardada=0;\n    char s[200001] = {\"\\0\"};\n    gets (s);\n    bandera = 0;\n    for (i=0; s[i]!='\\0'; i++)\n    {\n        bandera = 0;\n        k = 0;\n        while (s[i-k] == s[i+k+1])\n        {\n            s[i-k] = s[i+k+1] = '*';\n            k++;\n            bandera = 1;\n        }\n        if (bandera == 1 && pos_guardada == 0)\n        {\n            pos_indice = i-k;\n            pos_guardada = 1;\n        }\n        if (bandera == 1 && pos_guardada == 1)\n        {\n            if (s[i+k+1] == s[pos_indice])\n            {\n                s[pos_indice] = s[i+k+1] = '*';\n                pos_guardada = 0;\n            }\n        }\n    }\n    for (i=0; s[i]!='\\0'; i++)\n    {\n        if (s[i] != '*')\n        {\n            printf (\"%c\", s[i]);\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    char s[200001];\n    int tamanio ,i;\n    tamanio = 0;\n    gets(s);\n    for (i=0 ; s[i] ; i++)\n    {\n        if (tamanio && s[tamanio - 1] == s[i])\n        {\n            tamanio--;\n        }\n        else\n        {\n            s[tamanio++] = s[i];\n        }\n    }\n    s[tamanio] = '\\0';\n    puts(s);\n    return 0;\n}\n"}
{"similarity_score": 0.2222222222222222, "equal_cnt": 59, "replace_cnt": 41, "delete_cnt": 1, "insert_cnt": 18, "fix_ops_cnt": 60, "lang": "GNU C11", "fix_code_uid": "09c7fdafa686197991ed0299d95ac9e6", "bug_code_uid": "8d44e363af842d6a8b06c20ed75121f2", "src_uid": "1d4aaf15e5c6fcde50515880aae74720", "apr_id": "fb800f3d5f370af2fbe1a9e5cc194486", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint n;\nvoid readarray(int arr[n]);\nvoid maxarray(int arr[n],int maxval);\nvoid sortarray(int arr[n]);\nvoid printarray(int arr[n],int maxval);\nint main(){\nint arr[n];\nscanf(\"%d\",&n);\nint maxval=0;\nreadarray(arr);\nmaxarray(arr,maxval);\nsortarray(arr);\n\n}\nvoid readarray(int arr[n]){\nfor(int i=0;i<n;i++){\n\tscanf(\"%d\",&arr[i]);\n\t\n}}\nvoid maxarray(int arr[n],int maxval){\nint max=0;\nfor(int i=0;i<n;i++){\n\tif(arr[i]>max){\n\tmax=arr[i];\n\tmaxval=i;}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n }printf(\"%d\",maxval+1);}\n\t\nvoid sortarray(int arr[n]){\nint x=n-2;\nfor(int i=0;i<n-1;i++){\n\tfor(int j=0;j<n-i-1;j++){\n\t\tif(arr[j]>arr[j+1]){\n\t\t\tint temp=arr[j];\n\t\t\tarr[j]=arr[j+1];\n\t\t\tarr[j+1]=temp;\n\t\n\n}\n\t} }printf(\" %d\",arr[x]); }\n", "fixed": "\n\n    #include <stdio.h>\n     \n    void bubble_sort(long [], long);\n     \n    int main()\n    {\n      long array[100005], n, c, d, swap;\n     \n     \n      scanf(\"%ld\", &n);\n     \n    \n     \n      for (c = 0; c < n; c++)\n        scanf(\"%ld\", &array[c]);\n        int max=0,maxval=0;\n        for ( c = 0 ; c < n ; c++ ){\n            if(array[c]>max){\n                max=array[c];\n                maxval=c;\n               \n            }\n          \n        } printf(\"%d\", maxval+1);   \n     \n      bubble_sort(array, n);\n     \n      \n     \n     \n          printf(\"% ld\", array[n-2]);\n     \n      return 0;\n    }\n     \n    void bubble_sort(long list[], long n)\n    {\n      long c, d, t;\n     \n      for (c = 0 ; c < ( n - 1 ); c++)\n      {\n        for (d = 0 ; d < n - c - 1; d++)\n        {\n          if (list[d] > list[d+1])\n          {\n            /* Swapping */\n     \n            t         = list[d];\n            list[d]   = list[d+1];\n            list[d+1] = t;\n          }\n        }\n      }\n    }\n     \n\n"}
{"similarity_score": 0.4673913043478261, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "5c64d090aeba0da90c25c2436b3ffafe", "bug_code_uid": "e962aabca8b50324a7e7c0b93a74d486", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "d162ca5462fa38cc54ebb8ecc9a5b52c", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tlong long a[105],i,j,x,sum=0,r;\n\tscanf(\"%lld\",&x);\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tif(a[0]<=a[i])\n            r=a[i];\n    }\n\tfor(i=0;i<x;i++)\n        sum=sum+(r-a[i]);\n        printf(\"%lld\",sum);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong long a[105],i,j,x,sum=0,r;\n\tscanf(\"%lld\",&x);\n\tfor(i=0;i<x;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\t\tr=a[0];\n\t\tfor(i=1;i<x;i++)\n\t\tif(r<=a[i])\n            r=a[i];\n\n\tfor(i=0;i<x;i++)\n        sum=sum+(r-a[i]);\n        printf(\"%lld\",sum);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.7686980609418282, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d68ca4e1cd59f708fcbae79b5e0612d0", "bug_code_uid": "f25008eb539e6511007b3ba8bb5c1aa3", "src_uid": "b6a7e8abc747bdcee74653817085002c", "apr_id": "47e89ee623dbc21413929eb1ee16fd52", "difficulty": 1300, "tags": ["geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint cf(void const *a, void const *b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n    int t, n, x, i;\n\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        scanf(\"%d %d\", &n, &x);\n        long long int s=0, c=0;\n        int a[n+1], f=0;\n\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n            if(a[i]==x){\n                f++;\n            }\n        }\n        if(f>0)\n        {\n            printf(\"1\\n\");\n        }\n        else\n        {\n        qsort(a, n, 4, cf);\n\n        for(i=n-1; i>=0; i--)\n        {\n            c++;\n            s+=a[i];\n\n            if(s>=x){ break; }\n        }\n        printf(\"%lld\\n\", c);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cf(void const *a, void const *b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n    int t, n, x, i;\n\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        scanf(\"%d %d\", &n, &x);\n        long long int s=0;\n        int a[n+1], f=0;\n\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n            if(a[i]==x){\n                f++;\n            }\n        }\n        if(f>0)\n        {\n            printf(\"1\\n\");\n        }\n        else\n        {\n        qsort(a, n, 4, cf);\n\n        s=x/a[n-1];\n\n        if(a[n-1]>x)\n        {\n            s++;\n        }\n        if(x%a[n-1]!=0)\n        {\n            s++;\n        }\n\n        printf(\"%lld\\n\", s);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9948586118251928, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4122fa795e8387b46ca2c18ca678f86e", "bug_code_uid": "b25ee6efed0aba1fae4d576d58a61639", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "c3cdd54657125630469d3a3adfd7319d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int A[n];\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&A[i]);\n    int min=abs(A[0]-A[n-1]),k=5,m=1;\n    for(int i=0;i<n-1;i++)\n    {\n        int d=abs(A[i]-A[i+1]);\n        if(d<min)\n        {\n            min=d;\n            k=i+1;\n            m=i+2;\n        }\n    }\n    printf(\"%d %d\",k,m);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int A[n];\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&A[i]);\n    int min=abs(A[0]-A[n-1]),k=n,m=1;\n    for(int i=0;i<n-1;i++)\n    {\n        int d=abs(A[i]-A[i+1]);\n        if(d<=min)\n        {\n            min=d;\n            k=i+1;\n            m=i+2;\n        }\n    }\n    printf(\"%d %d\",k,m);\n    return 0;\n}"}
{"similarity_score": 0.37644341801385683, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "75882ba498723ac534751bf86d3c6400", "bug_code_uid": "c1e19350909940eab1074a5cef3db34c", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "87d51593d6ebd29e47db26bec82ce55e", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint T,i,ii;\n\tchar a[10][10],b;\n\tscanf(\"%d\",&T);\n\tscanf(\"%c\",&b);\n\twhile(T--)\n\t{\n\t\tfor(i=0;i<9;i++)\n\t\t{\n\t\t\tfor(ii=0;ii<9;ii++)\n\t\t\t{\n\t\t\t\tscanf(\"%c\",&a[i][ii]);\n\t\t\t}\n\t\t\tscanf(\"%c\",&b);\n\t\t}\n\t\ta[0][0]=a[0][1];\n\t\ta[1][3]=a[1][4];\n\t\ta[2][6]=a[2][7];\n\t\ta[3][1]=a[3][2];\n\t\ta[8][8]=a[8][7];\n\t\ta[7][5]=a[7][4];\n\t\ta[6][2]=a[6][1];\n\t\ta[5][7]=a[5][8];\n\t\ta[4][4]=a[4][5];\n\t\tfor(i=0;i<9;i++)\n\t\t{\n\t\t\tfor(ii=0;ii<9;ii++)\n\t\t\t{\n\t\t\t\tprintf(\"%c\",a[i][ii]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint T,i;\n\tchar a[10][10],b;\n\tscanf(\"%d\",&T);\n\tscanf(\"%c\",&b);\n\twhile(T--)\n\t{\n\t\tfor(i=0;i<9;i++)\n\t\t\tscanf(\"%s\",a[i]);\n\t\ta[0][0]=a[0][1];\n\t\ta[1][3]=a[1][4];\n\t\ta[2][6]=a[2][7];\n\t\ta[3][1]=a[3][2];\n\t\ta[8][8]=a[8][7];\n\t\ta[7][5]=a[7][4];\n\t\ta[6][2]=a[6][1];\n\t\ta[5][7]=a[5][8];\n\t\ta[4][4]=a[4][5];\n\t\tfor(i=0;i<9;i++)\n\t\t\tprintf(\"%s\\n\",a[i]);\n\t}\n}"}
{"similarity_score": 0.9560283687943263, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "68f61be7f660ac50c69939a5f1016935", "bug_code_uid": "4f5b67f8f0b9fe0e099b848633f6740f", "src_uid": "23c8f5922c7a1cdb82d229eb9938f3ee", "apr_id": "a0d476347bb8c7016d08749e3c9afdea", "difficulty": 1800, "tags": ["constructive algorithms", "ternary search", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    long long int n,m,a,b,p,i,j,c,q,r;\n    scanf(\"%lld %lld %lld\",&n,&m,&p);\n    for (i=0;i<n;i++){\n        scanf(\"%lld\",&a);\n        if (a%p!=0){\n            q=i;\n        }\n    }\n    for (i=0;i<m;i++){\n        scanf(\"%lld\",&a);\n        if (a%p!=0){\n            r=i;\n        }\n    }\n    printf(\"%lld\",q+r);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,m,a,b,p,i,j,c,q,r;\n    scanf(\"%lld %lld %lld\",&n,&m,&p);\n    for (i=0;i<n;i++){\n        scanf(\"%lld\",&a);\n        if (a%p!=0){\n            q=i;\n        }\n    }\n    for (i=0;i<m;i++){\n        scanf(\"%lld\",&a);\n        if (a%p!=0){\n            r=i;\n        }\n    }\n    printf(\"%lld\",q+r);\n}"}
{"similarity_score": 0.5025641025641026, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "543fc24ea43b83aa6c50d15d9d8cb14a", "bug_code_uid": "3fd39f9d61df27a8cb430e31b975cbe6", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "35dd4b0a3e529e11c1e291b3323dd4a5", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n\n#include<stdio.h>\n\n\n\nint main()\n{\n\tlong int t ,L,v,l,r,j , i;\n\tscanf(\"%ld\",&t);\nfor(  i=0 ; i<t ; i++)\n{\nint count =0 ; \n\n\tscanf(\"%ld%ld%ld%ld\",&L,&v,&l,&r);\n\t\n\t\n\tfor(  j=v ; j<l; j+=v)\n\t{\t\n\t\tcount++;\t\t\t\n\t}\n\n\n\tfor(  j=(r+1) ; ; j++)\n\t{\n\n\t\tif(j%v==0)\t{\t\n\t\tbreak;\t\t\n\t\t}\t\t\n\t}\n\n\nfor(  j ; j<=L; j+=v)\n\t{\t\n\t\tcount++;\t\t\t\n\t}\nprintf(\"%ld \",count);\n\n}\n\nprintf(\"\\n\");\n\t\n\t\n\n}\n\n\n", "fixed": "\n\n#include<stdio.h>\n\n\n\nint main()\n{\n\tlong int t ,L,v,l,r,j , i;\n\tscanf(\"%ld\",&t);\nfor(  i=0 ; i<t ; i++)\n{\n\tscanf(\"%ld%ld%ld%ld\",&L,&v,&l,&r);\n\n\t\n\n\tprintf(\"%ld \",(L/v)- ((r/v)-((l-1)/v)));\n\n}\n\nprintf(\"\\n\");\n\t\n\t\n\n}\n\n\n"}
{"similarity_score": 0.9943883277216611, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c4b250e0002fbb3c75c58f04da1d2217", "bug_code_uid": "b33c6d642aa05ca8272ca75030ade2eb", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "6117905ed41eb890745691d8763ab08e", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint max(int num1, int num2);\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    { \n        int a;\n        scanf(\"%d\",&a);\n        char s[a];\n        scanf(\"%s\", s);\n        int ans=0;\n        int k,ans2,x=-1;\n        if(s[a-1]=='P')\n        {\n            for(int i2=a-1;i2>=0;--i2)\n        {\n            if(s[i2]=='A')\n            {\n                k=a-i2-1;\n                break;\n            }\n        }\n        \n        }\n\n        for(int i2=0;i2<a;i2++)\n        {\n            if(s[i2]=='A')\n            {\n                if(x!=-1)\n                    {ans=max(ans,i2-x-1);} //{ans=max(ans,i2-x+1);} \n                    x=i2;\n            }\n        }\n        \n        ans2=max(ans,k);\n        \n        printf(\"%d\\n\",ans2);\n    }\n    \n    return 0;\n}\n\nint max(int num1, int num2)\n{\n    return (num1 > num2 ) ? num1 : num2;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint max(int num1, int num2);\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    { \n        int a;\n        scanf(\"%d\",&a);\n        char s[a];\n        scanf(\"%s\", s);\n        int ans=0;\n        int k=0,ans2,x=-1;\n        if(s[a-1]=='P')\n        {\n            for(int i2=a-1;i2>=0;--i2)\n        {\n            if(s[i2]=='A')\n            {\n                k=a-i2-1;\n                break;        \n            }\n        }\n        \n        }\n\n        for(int i2=0;i2<a;i2++)\n        {\n            if(s[i2]=='A')\n            {\n                if(x!=-1)\n                    {ans=max(ans,i2-x-1);} //{ans=max(ans,i2-x+1);} \n                    x=i2;\n            }\n        }\n        \n        ans2=max(ans,k);\n        \n        printf(\"%d\\n\",ans2);\n    }\n    \n    return 0;\n}\n\nint max(int num1, int num2)\n{\n    return (num1 > num2 ) ? num1 : num2;\n}\n"}
{"similarity_score": 0.9975708502024292, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d9dc2626faea9c1fae0771e69e566e00", "bug_code_uid": "977efd9e76f6a027f24c27c9e9ff80bb", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "af4d70fd60c53139209c10f59534c9f5", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint j1(long t,long a,long b){\r\n\tif((2*a-b)>0&&(2*a-b)%t==0) return 1;\r\n\treturn 0;\r\n}\r\nint j2(long a,long t,long b){\r\n\tif((a+b)%2==0){\r\n\t\tif((a+b)/2%t==0) return 1;\r\n\t}\r\n\treturn 0;\r\n}\r\nint j3(long a,long b,long t){\r\n\tif((2*b-a)>0&&(2*b-a)%t==0) return 1;\r\n\treturn 0;\r\n}\r\nvoid bb(long a,long b,long c){\r\n\tif(j1(a,b,c)) printf(\"YES1\");\r\n\telse if(j2(a,b,c)) printf(\"YES2\");\r\n\telse if(j3(a,b,c)) printf(\"YES3\");\r\n\telse printf(\"NO\");\r\n}\r\nint main(void){\r\n\tlong n,a,b,c;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\r\n\t\tbb(a,b,c);\r\n\t\tif(i!=n-1) printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n} \r\n", "fixed": "#include<stdio.h>\r\nint j1(long t,long a,long b){\r\n\tif((2*a-b)>0&&(2*a-b)%t==0) return 1;\r\n\treturn 0;\r\n}\r\nint j2(long a,long t,long b){\r\n\tif((a+b)%2==0){\r\n\t\tif((a+b)/2%t==0) return 1;\r\n\t}\r\n\treturn 0;\r\n}\r\nint j3(long a,long b,long t){\r\n\tif((2*b-a)>0&&(2*b-a)%t==0) return 1;\r\n\treturn 0;\r\n}\r\nvoid bb(long a,long b,long c){\r\n\tif(j1(a,b,c)) printf(\"YES\");\r\n\telse if(j2(a,b,c)) printf(\"YES\");\r\n\telse if(j3(a,b,c)) printf(\"YES\");\r\n\telse printf(\"NO\");\r\n}\r\nint main(void){\r\n\tlong n,a,b,c;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\r\n\t\tbb(a,b,c);\r\n\t\tif(i!=n-1) printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n} \r\n"}
{"similarity_score": 0.9975429975429976, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cc40e62ec03d4a9defc9e6bd2d2026a1", "bug_code_uid": "d3a4ab2054d9a1c982dd2aeba3440d69", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "cda8aee46a683a72229539e9ce67d1c3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i,arr[100001], mag=1;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++);\n{\nscanf(\"%d\", &arr[i]);\n}\nfor(i=0;i<n-1;i++)\n{\nif(arr[i]!=arr[i+1])\n{\nmag++;\n}\n}\nprintf(\"%d\",mag);\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i,arr[100001], mag=1;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\", &arr[i]);\n}\nfor(i=0;i<n-1;i++)\n{\nif(arr[i]!=arr[i+1])\n{\nmag++;\n}\n}\nprintf(\"%d\",mag);\n\nreturn 0;\n}"}
{"similarity_score": 0.9940711462450593, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f04947ebfe9aba43d67f863674641520", "bug_code_uid": "538b313ae0852a5742fc73ff99f05ec4", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "c3cc9fe0c4eb0ca79c3f9bbcca63f164", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int cnt =0;\n        int var;\n        int max=0;\n        int k;\n        int f=0;\n        scanf(\"%d\",&k);\n        char a[k+2];\n        scanf(\"%s\",a);\n        for(int i=0;i<k;i++)\n        {\n            if(a[i]=='A')\n            {\n                var=i;\n                f=1;\n                break;\n            }\n        }\n        \n        if(f==0)\n        { \n            printf(\"0\\n\");\n            continue;   \n        }\n//        printf(\"%d\\n\", var);\n        for(int i=var;i<k;i++)\n        {  \n            \n //           printf(\"%d %d\\n\", max, cnt);     \n            if(a[i]=='P')\n            {\n                cnt++;\n                if(cnt>max)\n                    max=cnt;\n            }\n            if(a[i]=='A')\n                cnt=0;\n        }\n//        printf(\"%d %d\\n\", max,cnt);\n        if(cnt>max)\n            max=cnt;\n        printf(\"%d\\n\",(max,0));\n        \n        \n    }\n\n    return 0;\n}", "fixed": "# include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int cnt =0;\n        int var;\n        int max=-1;\n        int k;\n        int f=0;\n        scanf(\"%d\",&k);\n        char a[k+2];\n        scanf(\"%s\",a);\n        for(int i=0;i<k;i++)\n        {\n            if(a[i]=='A')\n            {\n                var=i;\n                f=1;\n                break;\n            }\n        }\n        \n        if(f==0)\n        { \n            printf(\"0\\n\");\n            continue;   \n        }\n//        printf(\"%d\\n\", var);\n        for(int i=var;i<k;i++)\n        {  \n            \n //           printf(\"%d %d\\n\", max, cnt);     \n            if(a[i]=='P')\n            {\n                cnt++;\n                if(cnt>max)\n                    max=cnt;\n            }\n            if(a[i]=='A')\n                cnt=0;\n        }\n//        printf(\"%d %d\\n\", max,cnt);\n        if(cnt>max)\n            max=cnt;\n        printf(\"%d\\n\",(int)fmax(max,0));\n        \n        \n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9916707496325331, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7267a57fb01ebf38fe2aef147ff6a832", "bug_code_uid": "610b68888671cea400f993d5b4fe7b51", "src_uid": "6b4242ae9a52d36548dda79d93fe0aef", "apr_id": "dc889b88adf63b695f10d40d490a0c5e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* Problem: 725A - Jumping Ball */\n/* Solver: Gusztav Szmolik */\n\n#include <stdio.h>\n#include <string.h>\n\nunsigned char s[200002];\n\nint main ()\n    {\n    unsigned int n;\n    unsigned int ci;\n    unsigned short st;\n    unsigned int i;\n    unsigned int cr;\n    \n    if (scanf(\"%u\",&n) != 1)\n        return -1;\n    if (n < 1 || n > 200000)\n        return -1;\n    if (scanf(\"%200001s\",s) != 1)\n        return -1;\n    if (strlen(s) != n)\n        return -1;\n    ci = st = 0;\n    for (i = 0; i < n; i++)\n        {\n        if (s[i] != '<' && s[i] != '>')\n            return -1;\n        if (!st && s[i] == '>')\n            {\n            cr = 1;\n            st = 1;\n            }\n        else if (st == 1 && s[i] == '<')\n            {\n            ci += cr+1;\n            st = 2;\n            }\n        else if (st == 1 && s[i] == '>')\n            cr++;\n        else if (st == 2 && s[i] == '<')\n            ci++;\n        else if (st == 2 && s[i] == '>')\n            st = 0;\n        }\n    printf (\"%u\\n\",n-ci);\n    return 0;\n    }\n", "fixed": "/* Problem: 725A - Jumping Ball */\n/* Solver: Gusztav Szmolik */\n\n#include <stdio.h>\n#include <string.h>\n\nunsigned char s[200002];\n\nint main ()\n    {\n    unsigned int n;\n    unsigned int ci;\n    unsigned short st;\n    unsigned int i;\n    unsigned int cr;\n    \n    if (scanf(\"%u\",&n) != 1)\n        return -1;\n    if (n < 1 || n > 200000)\n        return -1;\n    if (scanf(\"%200001s\",s) != 1)\n        return -1;\n    if (strlen(s) != n)\n        return -1;\n    ci = st = 0;\n    for (i = 0; i < n; i++)\n        {\n        if (s[i] != '<' && s[i] != '>')\n            return -1;\n        if (!st && s[i] == '>')\n            {\n            cr = 1;\n            st = 1;\n            }\n        else if (st == 1 && s[i] == '<')\n            {\n            ci += cr+1;\n            st = 2;\n            }\n        else if (st == 1 && s[i] == '>')\n            cr++;\n        else if (st == 2 && s[i] == '<')\n            ci++;\n        else if (st == 2 && s[i] == '>')\n            cr = st = 1;\n        }\n    printf (\"%u\\n\",n-ci);\n    return 0;\n    }\n"}
{"similarity_score": 0.9994728518713759, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6df2126dabb24139d74c096857595bee", "bug_code_uid": "ac584008fcee1341c139d925b6a1659d", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "7c026e5dcbe215c25d861ce70343a31f", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<time.h>\n#include<math.h>\n#include<ctype.h>\n\n#define MAX( a, b ) ( ( a > b) ? a : b ) \n#define MIN( a, b ) ( ( a < b) ? a : b )\n#define FOR(ii,aa,bb) for(ii=aa;ii<bb;ii++)\n#define and &&\n#define or ||\nint a[100000],f=0;\nvoid sort(int bas,int ort,int son){\n  int s=0,m,b,temp[1000000],i;\n  b=bas;\n  m=ort+1;\n  f=1;\n  while((b<=ort) && (m<=son))\n    if(a[b]<a[m])\n    temp[s++] = a[b++];\n    else\n    temp[s++] = a[m++];\n  while((b<=ort))\n   temp[s++] = a[b++];\n  while((m<=son))\n    temp[s++] = a[m++];\n  for(i=0; i<s; i++)\n    a[bas+i] = temp[i];\n}\n\n\nvoid merg(int bas,int son){\n  if(son<=bas)\n  return;\n  int ort=(bas+son)/2;\n  merg(bas,ort);\n  merg(ort+1,son);\n  sort(bas,ort,son);}\nint main () {\n\nlong long int x=0,s=0,i,j,n;\nscanf(\"%lld\",&n);\nFOR(i,0,n)\n  scanf(\"%d\",&a[i]);\nmerg(0,n-1);\nFOR(i,0,n){\n\tif(x<=a[i])\n\t\ts++;\n\telse a[i]=0\n\tx+=a[i];}\nprintf(\"%lld\",s);\nreturn 0;\n}      \n", "fixed": "#include<string.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<time.h>\n#include<math.h>\n#include<ctype.h>\n\n#define MAX( a, b ) ( ( a > b) ? a : b ) \n#define MIN( a, b ) ( ( a < b) ? a : b )\n#define FOR(ii,aa,bb) for(ii=aa;ii<bb;ii++)\n#define and &&\n#define or ||\nint a[100000],f=0;\nvoid sort(int bas,int ort,int son){\n  int s=0,m,b,temp[1000000],i;\n  b=bas;\n  m=ort+1;\n  f=1;\n  while((b<=ort) && (m<=son))\n    if(a[b]<a[m])\n    temp[s++] = a[b++];\n    else\n    temp[s++] = a[m++];\n  while((b<=ort))\n   temp[s++] = a[b++];\n  while((m<=son))\n    temp[s++] = a[m++];\n  for(i=0; i<s; i++)\n    a[bas+i] = temp[i];\n}\n\n\nvoid merg(int bas,int son){\n  if(son<=bas)\n  return;\n  int ort=(bas+son)/2;\n  merg(bas,ort);\n  merg(ort+1,son);\n  sort(bas,ort,son);}\nint main () {\n\nlong long int x=0,s=0,i,j,n;\nscanf(\"%lld\",&n);\nFOR(i,0,n)\n  scanf(\"%d\",&a[i]);\nmerg(0,n-1);\nFOR(i,0,n){\n\tif(x<=a[i])\n\t\ts++;\n\telse a[i]=0;\n\tx+=a[i];}\nprintf(\"%lld\",s);\nreturn 0;\n}      \n"}
{"similarity_score": 0.5182926829268293, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c79a79236dccef211e795e3305b62c46", "bug_code_uid": "164d52b306f72772603d36e4f26b1242", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "4a6616f24ec5b83f6b226f0d2b06c436", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t, i, j, l, r, a, max, value;\r\n\tscanf(\"%d\", &t);\r\n\tfor(i = 0; i < t; i++)\r\n\t{\r\n\t\tmax = 0;\r\n\t\tscanf(\"%d %d %d\", &l, &r, &a);\r\n\t\tfor(j = l; j <= r; j++)\r\n\t\t{\r\n\t\t\tvalue = j/a + j%a;\r\n\t\t\tmax = (value < max) ? max : value;\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t, i, l, r, a, first, second, max;\r\n\tscanf(\"%d\", &t);\r\n\tfor(i = 0; i < t; i++)\r\n\t{\r\n\t\tmax = 0;\r\n\t\tscanf(\"%d %d %d\", &l, &r, &a);\r\n\t\r\n\t\tfirst = r / a + r % a;\r\n\t\tif(r - r%a - 1 >= l)\r\n\t\t\tsecond = (r - r%a - 1) / a + a-1; \r\n\t\telse second = 0;\r\n\t\tmax = (first > second) ? first : second;\r\n\t\t\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n}"}
{"similarity_score": 0.9984375, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fcfbddf7de2da4bce379ea747e11d38c", "bug_code_uid": "961ad26c7d678fd375ab6386dc170b46", "src_uid": "e215e94dd196dde381adc13406d2d72a", "apr_id": "410f35632bf9497ea7e32e16552fc553", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int k = 0;\r\n        if (n != 2){\r\n            for(int j = 1; j <= n*n; j += 2) {\r\n                printf(\"%d\", j);\r\n                k++;\r\n                if (k % n == 0)\r\n                    printf(\"\\n\");\r\n            }\r\n            for(int j = 2; j <= n*n; j += 2) {\r\n                printf(\"%d\", j);\r\n                k++;\r\n                if (k % n == 0)\r\n                    printf(\"\\n\");\r\n            }\r\n        }\r\n        else\r\n            printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int k = 0;\r\n        if (n != 2){\r\n            for(int j = 1; j <= n*n; j += 2) {\r\n                printf(\"%d \", j);\r\n                k++;\r\n                if (k % n == 0)\r\n                    printf(\"\\n\");\r\n            }\r\n            for(int j = 2; j <= n*n; j += 2) {\r\n                printf(\"%d \", j);\r\n                k++;\r\n                if (k % n == 0)\r\n                    printf(\"\\n\");\r\n            }\r\n        }\r\n        else\r\n            printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8133333333333334, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0c85cf5212d30e414a932bec667cb4a9", "bug_code_uid": "f50e9d22cc9ce59d4d56243571340330", "src_uid": "5aae6b27f35852512a250751ef957ab9", "apr_id": "fc6ddd5c71b7f3c4eb941fd7bba0758e", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(%d,&t);\r\n\twhile(t--){\r\n\t    int n,m;\r\n\t    scanf(%d %d,&n,&m);\r\n\t    int x,y;\r\n\t    scanf(%d %d,&x,&y);\r\n\t    printf(\"%d\"+\" \"+1+\" \"+1+\" \"+\"%d\",n,m);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t    int n,m;\r\n\t    scanf(\"%d %d\",&n,&m);\r\n\t    int x,y;\r\n\t    scanf(\"%d %d\",&x,&y);\r\n\t    printf(\"%d 1 1 %d\",n,m);\r\n\t    printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.6917293233082706, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "469dc8ef261882cbfe756de633a1f79c", "bug_code_uid": "c8678eee2d0852291c5d31b5274fd69c", "src_uid": "935bceb69117d06eb75121c805bff69c", "apr_id": "c103c6005a93be27463852b0ca21d404", "difficulty": 900, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint main(){\r\nint a[10000];\r\nlong long val,test,flag,i,j,n,sum,rem,finalval;\r\nscanf(\"%lld\",&test);\r\nwhile(test--){\r\n    sum=0;\r\nscanf(\"%lld\",&n);\r\nfor(i=0;i<n;i++){\r\n    scanf(\"%d\",&a[i]);\r\n    sum=sum+a[i];\r\n}\r\nrem=sum%n;\r\nfinalval=0;\r\nif(rem==0){\r\n    finalval=0;\r\n}\r\nelse{\r\n    finalval=rem*(n-rem);\r\n}\r\nprintf(\"%lld\\n\",finalval);\r\n\r\n}\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint main(){\r\nlong long val,test,flag,i,j,n,sum,rem,finalval,a[1000000];\r\nscanf(\"%lld\",&test);\r\nwhile(test--){\r\n    sum=0;\r\nscanf(\"%lld\",&n);\r\nfor(i=0;i<n;i++){\r\n    scanf(\"%lld\",&a[i]);\r\n    sum=sum+a[i];\r\n}\r\nrem=sum%n;\r\nprintf(\"%lld\\n\",rem*(n-rem));\r\n\r\n}\r\n}\r\n"}
{"similarity_score": 0.8435754189944135, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "3081f3919ea1762f4498905e1476fe82", "bug_code_uid": "b9457b11e7fb32031a5cf7a3e778d646", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "1a51ded11dc4dba9d63c23f50657a42a", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t > 0)\n    {\n        int a, b, x, y, i, m, z;\n        scanf(\"%d %d\", &a, &b);\n        i = abs(a - b);\n        x = i / 5;\n        m = i % 5;\n        y = m / 2;\n        z = m % 2;\n        printf(\"%d\", x + y + z);\n\n        t--;\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t > 0)\n    {\n        long long int a, b, x, y, i, z;\n        scanf(\"%lld %lld\", &a, &b);\n        i = b - a;\n        if(i < 0)\n            i = i * (-1);\n        x = i / 5;\n        i = i % 5;\n        y = i / 2;\n        i = i % 2;\n        z = i;\n        printf(\"%lld\\n\", x + y + z);\n        t--;\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9419889502762431, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "32407e47968fda0e7dc56b8bd3b86549", "bug_code_uid": "0af08b06d2c60313cdf0474f7e3f50cd", "src_uid": "12f35743f482b68e3156a45d6ac5bb14", "apr_id": "1bea16f800fd04d4a1c4157a2c3c66c1", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,m;\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tint flag1=0, flag2=0;\n\t\tfor(int r=0; r<n; r++)\n\t\t{\n\t\t\tfor(int c=0; c<m; c++)\n\t\t\t{\t\n\t\t\t\tchar ch;\n\t\t\t\tscanf(\" %c\",&ch);\n\t\t\t\tswitch(ch)\n\t\t\t\t{\n\t\t\t\t\tcase 'W':\n\t\t\t\t\t\tif((r+c)%2)\n\t\t\t\t\t\t\tflag2=1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tflag1=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tif((r+c)%2)\n\t\t\t\t\t\t\tflag1=1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tflag2=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(flag1*flag2!=0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tgoto end;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t\tfor(int r=0; r<n; r++)\n\t\t{\n\t\t\tfor(int c=0; c<m; c++)\n\t\t\t{\n\t\t\t\tprintf(\"%c\",flag2?(r+c)%2?'W':'R':(r+c)%2?'R':'W');\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\nend:\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,m;\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tint flag=0, flag1=0, flag2=0;\n\t\tfor(int r=0; r<n; r++)\n\t\t{\n\t\t\tfor(int c=0; c<m; c++)\n\t\t\t{\t\n\t\t\t\tchar ch;\n\t\t\t\tscanf(\" %c\",&ch);\n\t\t\t\tswitch(ch)\n\t\t\t\t{\n\t\t\t\t\tcase 'W':\n\t\t\t\t\t\tif((r+c)%2)\n\t\t\t\t\t\t\tflag2=1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tflag1=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tif((r+c)%2)\n\t\t\t\t\t\t\tflag1=1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tflag2=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tflag=flag1*flag2;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t\tfor(int r=0; r<n; r++)\n\t\t{\n\t\t\tfor(int c=0; c<m; c++)\n\t\t\t{\n\t\t\t\tprintf(\"%c\",flag2?(r+c)%2?'W':'R':(r+c)%2?'R':'W');\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.5914069081718618, "equal_cnt": 6, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e562947adeaef26b4dc97f8c5bd2edce", "bug_code_uid": "96f05d8a4af90c0111eef72e3ac2ef25", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "796b989155ecf327aa53741b48d1736b", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n\n    int a[n][2];\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if( (a[i][0] < a[j][0] )&& (a[i][1] > a[j][1] ) )\n           {\n            printf(\"Happy Alex\");\n            return 0;\n            }\n        }\n\n    }\n    printf(\"Poor Alex\");\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n\n    int a[n][2];\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    if(n>=1000)\n    {\n            for(i=0;i<n-1;i++)\n    {\n        if( (a[i][0] < a[i+1][0] )&& (a[i][1] > a[i+1][1] ) )\n        {\n            printf(\"Happy Alex\");\n            return 0;\n        }\n    }\n    }\n    else\n    {\n     for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if( (a[i][0] < a[j][0] )&& (a[i][1] > a[j][1] ) || (a[i][0] > a[j][0] )&& (a[i][1] < a[j][1] ) )\n           {\n            printf(\"Happy Alex\");\n            return 0;\n            }\n        }\n\n    }\n    }\n\n\n    printf(\"Poor Alex\");\n}\n\n"}
{"similarity_score": 0.9841269841269841, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "17ff9688788a5a983e42c0fcb92633db", "bug_code_uid": "3b65d4c4b80c4d8eed86e2e889b964f5", "src_uid": "9b1b082319d045cf0ec6d124f97a8184", "apr_id": "d5a57327522486eae41f9d2fdecdd3d9", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint b;\nchar s[100010];\nchar save[100010];\nvoid cut();\nint analize();\nint main(){\n    int i,n,z;\n    scanf(\"%d\",&n);\n    b=1;\n    for(i=z=0;i<n;i++){\n        scanf(\"%s\",s);\n        if(b){\n            z+=analize();\n        }\n    }\n    if(b){\n        printf(\"%s\",save);\n        while(z--){\n            printf(\"0\");\n        }\n    }else{\n        printf(\"0\");\n    }\n    return 0;\n}\nint analize(){\n    int i,r;\n    if(s[0]!='1'){\n        strcpy(save,s);\n        if(s[0]=='0'){\n            b=0;\n        }\n        return 0;\n    }\n    r=0;\n    for(i=1;s[i]!='\\0';i++){\n        if(s[i]!='0'){\n            strcpy(save,s);\n            return 0;\n        }\n        r++;\n    }\n    return r;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint b;\nchar s[100010];\nchar save[100010];\nvoid cut();\nint analize();\nint main(){\n    int i,n,z;\n    scanf(\"%d\",&n);\n    b=1;\n    strcpy(save,\"1\");\n    for(i=z=0;i<n;i++){\n        scanf(\"%s\",s);\n        if(b){\n            z+=analize();\n        }\n    }\n    if(b){\n        printf(\"%s\",save);\n        while(z--){\n            printf(\"0\");\n        }\n    }else{\n        printf(\"0\");\n    }\n    return 0;\n}\nint analize(){\n    int i,r;\n    if(s[0]!='1'){\n        strcpy(save,s);\n        if(s[0]=='0'){\n            b=0;\n        }\n        return 0;\n    }\n    r=0;\n    for(i=1;s[i]!='\\0';i++){\n        if(s[i]!='0'){\n            strcpy(save,s);\n            return 0;\n        }\n        r++;\n    }\n    return r;\n}\n"}
{"similarity_score": 0.9618138424821002, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1b1beb794a68ab55ade86bd1bcb74dbb", "bug_code_uid": "172a7359deca5b77bff816ce20c81c61", "src_uid": "7bbb4b9f5eccfe13741445c815a4b1ca", "apr_id": "9f32928296b9bfd34adf450d36b17239", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n,d;\n\twhile(t-->0){\n\t\tscanf(\"%d%d\",&n,&d);\n\t\tint arr[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&arr[i]);\n\t\tfor(int i=1;i<n;i++)\n\t\t\tif(arr[i]>0)\n\t\t\t\tif(d>0){\n\t\t\t\t\tif(d>=arr[i]*i){\n\t\t\t\t\t\tarr[0]+=arr[i];\n\t\t\t\t\t\tarr[i]=0;\n\t\t\t\t\t\td-=arr[i]*i;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tarr[0]+=d/i;\n\t\t\t\t\t\td=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\tprintf(\"%d\\n\",arr[0]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n,d;\n\twhile(t-->0){\n\t\tscanf(\"%d%d\",&n,&d);\n\t\tint arr[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&arr[i]);\n\t\tfor(int i=1;i<n;i++)\n\t\t\tif(arr[i]>0)\n\t\t\t\tif(d>0){\n\t\t\t\t\tif(d>=arr[i]*i){\n\t\t\t\t\t\tarr[0]+=arr[i];\n\t\t\t\t\t\td-=arr[i]*i;\n\t\t\t\t\t\tarr[i]=0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tarr[0]+=d/i;\n\t\t\t\t\t\td=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\tprintf(\"%d\\n\",arr[0]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6444444444444445, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b62b9dc62ade46dc4f91d13d026e6079", "bug_code_uid": "eb6e426cdf86800977933c7d0e19d1ae", "src_uid": "86d5da999415fa75b3ee754a2a28605c", "apr_id": "0e497b1d661b4badce88ce59fda7516e", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main ()\n{\n    int i,n,t,j;\n    long long int R;\n    scanf (\"%d\",&n);\n    int ara [n];\n    for (i=0;i<n;i++) {\n        scanf(\"%d\",&ara[i]);\n    }\n    for (i=1,R=0;i<=n;i++) {\n        for (j=i+1;j<=n;j++) {\n            if (ara[i-1]>ara[j-1]) {\n                t=ara[i-1];\n                ara[i-1]=ara[j-1];\n                ara[j-1]=t;\n            }\n        }\n        R+=fabs(ara[i-1]-i);\n    }\n    printf (\"%I64d\",R);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint sorti (const void *a,const void *b)\n{\n    return (*(int *)a-*(int *)b);\n}\n\nint main ()\n{\n    int i,n,t,j;\n    long long int R;\n    scanf (\"%d\",&n);\n    int ara [n];\n    for (i=0;i<n;i++) {\n        scanf(\"%d\",&ara[i]);\n    }\n    qsort (ara,n,sizeof(int),sorti);\n    for (i=1,R=0;i<=n;i++) {\n        R+=fabs(ara[i-1]-i);\n    }\n    printf (\"%I64d\",R);\n    return 0;\n}\n"}
{"similarity_score": 0.25241016652059595, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "18c0054cbb91491ebecf2566dc544e6a", "bug_code_uid": "c02ae587ed9bee035cfef6f98659b64f", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "6b82a80057c43b3c6d90e220c195eec5", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint t,n,a[9];\n\tint i,j,min,f,temp,c;\n//\tscanf(\"%d\",&t);\n\n//\tfor(i=0;i<t;i++)\n//\t{\n\t\tscanf(\"%d\",&n);\n\t\tmin=1000000,c=0;\n\t\tfor(j=1;j<=9;j++)\n\t\t{\n\t\tscanf(\"%d\",&a[j]);\n\t\t\tif(a[j]<=min)\n\t\t\t{\n\t\t\t\tmin=a[j];\n              \t\t\tf=j;\n                                c=0;\n\t\t\t}\n                       else if(a[j]==min)\n                                c++;\n                }\n\t\t\tif(n==0)\n\t\t\t\tprintf(\"-1\");\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp=n/min;\n\t\t              n=n-(n/min);\n\t\t\t\tif(temp==0)\n\t\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(j=1;j<=temp;j++)\n\t\t\t\t\t\tprintf(\"%d\",f);\n\t\t\t\t}\n\t\t\t}\n\n                    printf(\"\\n\");\n\n//\t\t}\n\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,temp,min,a[9],test;\n//\tscanf(\"%d\",&test);\n        min=1000000;\n        int i,j;\n//\tfor(j=1;j<=test;j++)\n//\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=9;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]<=min)\n\t\t\tmin=a[i];\n\t\t}\n\t\ttemp=n/min;\n\t\tif(temp==0)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t\twhile(temp--!=0)\n\t\t{\n\t\t\tfor(i=9;i>0;i--)\n\t\t\t{\n\t\t\t\tif(((n-a[i])/min)==temp && n>=a[i])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\",i);\n\t\t\t\t\tn-=a[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n//\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9364705882352942, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "67be61b6a3c3413f3f8179a55979ac6a", "bug_code_uid": "e83d50a8b30bcdd57b35fbca07b66235", "src_uid": "4ebea3f56ffd43efc9e1496a0ef7fa2d", "apr_id": "93282d100caf83940e994686f9872e7a", "difficulty": 1200, "tags": ["constructive algorithms", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint n ,i ,c ,d;\n\tscanf(\"%d\",&n);\n\tc=n/2;\n\td=n%2;\n\tif(d==0){\n\t\tfor(i=0;i<c;i++)\n\t\t printf(\"1\");\n\t}\n\telse {\n\t\tfor(i=0;i<c-1;i++)\n\t\t printf(\"1\");\n\t\t printf(\"7\");\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint n ,i ,c ,d;\n\tscanf(\"%d\",&n);\n\tc=n/2;\n\td=n%2;\n\tif(d==0){\n\t\tfor(i=0;i<c;i++)\n\t\t printf(\"1\");\n\t}\n\telse {\n\t\tprintf(\"7\");\n\t\tfor(i=0;i<c-1;i++)\n\t\t printf(\"1\");\n\t\t \n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.7542533081285444, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "1c7b7faad82bc52eccf321e7998533f8", "bug_code_uid": "13f0181022661c1bb80149b122f4aef0", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "def8a3a70e0f96133bc22d3394a7af36", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int rating,n,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&rating);\r\n\r\n         if(rating>=1900)\r\n        {\r\n            printf(\"Division 1\\n\");\r\n          }\r\n\r\n         if(rating<=1600 && rating<=1899){\r\n            printf(\"Division 2\\n\");\r\n        }\r\n        if(rating<=1400 && rating<=1599){\r\n            printf(\"Division 3\\n\");\r\n\r\n        }\r\n        if(rating<=1399){\r\n        printf(\"Division 4\\n\");\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n    }\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int rating,n,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&rating);\r\n\r\n         if(rating>=1900)\r\n        {\r\n            printf(\"Division 1\");\r\n          }\r\n\r\n        if(rating>=1600 && rating<=1899){\r\n            printf(\"Division 2\");\r\n        }\r\n        if(rating>=1400 && rating<=1599){\r\n            printf(\"Division 3\");\r\n\r\n        }\r\n        if(rating<=1399){\r\n        printf(\"Division 4\");\r\n\r\n        }\r\n      printf(\"\\n\");\r\n    }\r\n\r\n\r\n    return 0;\r\n    }\r\n\r\n\r\n"}
{"similarity_score": 0.9964580873671782, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "aa8de291868d2375443943cb73f631c7", "bug_code_uid": "254f8888169d9c51e255ff39847af737", "src_uid": "a2085c2d21b2dbe4cc27a15fa4a1ec4f", "apr_id": "6ab05a857d6d849e1bddf94407e147de", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#define N 500000\n\nint main(void){\nlong m,n;\nlong a;\nlong i,l,r;\n\tscanf(\"%ld%ld\",&n,&m);\n\tr=m;\n\tfor(i=0;i<n;i++){\t\n\t\tscanf(\"%ld\",&a);\n\t\tif(r>a){\n\t\t\tr-=a;\n\t\t\tl=0;\n\t\t}\n\t\telse if(r==a){\n\t\t\tr=0;\n\t\t\tl=1;\n\t\t}\n\t\telse{\n\t\t\ta-=r;\n\t\t\tl=1;\n\t\t\tl+=(a/m!=0)?(a/m):0;\n\t\t\tif(a%m==0){\n\t\t\t\tr=m;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tr=m-a%m;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%ld \",l);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#define N 500000\n\nint main(void){\nlong m,n;\nlong a;\nlong i,l,r;\n\tscanf(\"%ld%ld\",&n,&m);\n\tr=m;\n\tfor(i=0;i<n;i++){\t\n\t\tscanf(\"%ld\",&a);\n\t\tif(r>a){\n\t\t\tr-=a;\n\t\t\tl=0;\n\t\t}\n\t\telse if(r==a){\n\t\t\tr=m;\n\t\t\tl=1;\n\t\t}\n\t\telse{\n\t\t\ta-=r;\n\t\t\tl=1;\n\t\t\tl+=(a/m!=0)?(a/m):0;\n\t\t\tif(a%m==0){\n\t\t\t\tr=m;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tr=m-a%m;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%ld \",l);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.39313572542901715, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "a4166e7a3f2970d5b158393e0dc3358e", "bug_code_uid": "7a47489fec73d1c03805549108d3a246", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "27ed3ce772fdd508482889dfe392cee1", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int n,m, sum=0, i,w,j,a,b,ans;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\", &a);\n        for (j = 1;; j++) {\n\n            b = pow(2, j-1);\n            sum = sum + b;\n            if (a % sum == 0)\n                printf(\"%d\", a/sum);\n                break;\n\n        }\n\n\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nlong long sum;\nmain(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        sum=1;\n        for(int i=1;;i++){\n            sum+=pow(2,i);\n            if(n%sum==0) break;\n        }\n        printf(\"%d\\n\",n/sum);\n    }\n}"}
{"similarity_score": 0.993421052631579, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2969c9e0b1fad07c10fafe23a4d56a38", "bug_code_uid": "9155584101256ca8da01cd5ba5ae31ab", "src_uid": "0c5cf0af057b0c838f13b491b923447a", "apr_id": "70a66233039b446a76d7f518ed18c60c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        long int n;\r\n    scanf(\"%ld\", &n);\r\n    long double t = n/2.0;\r\n    if(n%2 == 0)\r\n    {\r\n        printf(\"%d\", (int)t);\r\n    }\r\n    else{\r\n        printf(\"%d\", (int)t+1);\r\n    }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        long int n;\r\n    scanf(\"%ld\", &n);\r\n    long double t = n/2.0;\r\n    if(n%2 == 0)\r\n    {\r\n        printf(\"%d\\n\", (int)t);\r\n    }\r\n    else{\r\n        printf(\"%d\\n\", (int)t+1);\r\n    }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9880404783808647, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ba7d1c716303b3f584fb370026e9654c", "bug_code_uid": "daf1e2054f0167775dc945370039fca9", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "e71a7bce4f8f04285a39fbd22b1d7233", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int n,m,i,max=0,j,p;\n    long long int a[100],b[100]={0};\n\n    scanf(\"%d %d\",&n,&m);\n\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%I64d\",&a[j]);\n            if(max<a[j])\n            {\n                max=a[j];\n                p=j;\n            }\n        }\n\n        b[p]++;\n        max=0;\n    }\n\n    max=p=0;\n\n    for(i=0;i<n;i++)\n    {\n        if(max<b[i])\n            {\n                max=b[i];\n                p=i;\n            }\n    }\n\n    printf(\"%d\\n\",p+1);\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,m,i,max=0,j,p;\n    long long int a[100],b[100]={0};\n\n    scanf(\"%d %d\",&n,&m);\n\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%I64d\",&a[j]);\n            if(max<a[j])\n            {\n                max=a[j];\n                p=j;\n            }\n        }\n\n        b[p]++;\n        max=0;\n        p=0;\n    }\n\n    max=p=0;\n\n    for(i=0;i<n;i++)\n    {\n        if(max<b[i])\n            {\n                max=b[i];\n                p=i;\n            }\n    }\n\n    printf(\"%d\\n\",p+1);\n}\n"}
{"similarity_score": 0.9527622097678142, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "8bb39df9ae41253fe593d05e19d6948a", "bug_code_uid": "74405eb8d1b1fd01c38e22b90b4409f3", "src_uid": "c6bbb16b1a3946ce38e67dc4824ecf89", "apr_id": "1fcaf589834eb5d933313d66133dc7a4", "difficulty": 1300, "tags": ["two pointers", "binary search", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct bin{\n\tint br,ik;\n}bin;\nbin arr[100000];\nint count=0;\nint main(){\n\tint say=0,vest[100000],army[100000],m,n,x,y,i,j;\n\tscanf(\"%d %d %d %d \",&n,&m,&x,&y);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&army[i]);\n\tfor(i=1;i<=m;i++)\n\t\tscanf(\"%d\",&vest[i]);\n\ti=j=1;\n\twhile(1){\n\t\tif(j>m || i>n)break;\n\t\tif(vest[j] <= (army[i]+y) && vest[j] >= (army[i]-x)){\n\t\t\tsay++;\n\t\t\tarr[count].br=i++;\n\t\t\tarr[count++].ik=j++;\n\t\t\tcontinue;\n\t\t}\t\t\n\t\tif(vest[j] < army[i]-x)j++;\n\t\tif(vest[j] > army[i]+y)i++;\t\n\t}\n\tprintf(\"%d\\n\",say);\n\tfor(i=0;i<count;i++)\n\t\tprintf(\"%d %d\\n\",arr[i].br,arr[i].ik);\n\texit(0);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct bin{\n\tint st,nd;\n}bin;\nbin arr[100000];\nint count=0;\nint main(){\n\tint say=0,vest[100001],army[100001],m,n,x,y,i,j;\n\tscanf(\"%d %d %d %d \",&n,&m,&x,&y);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&army[i]);\n\tfor(i=1;i<=m;i++)\n\t\tscanf(\"%d\",&vest[i]);\n\ti=j=1;\n\twhile(1){\n\t\tif(j>m || i>n)break;\n\t\tif(vest[j] <= (army[i]+y) && vest[j] >= (army[i]-x)){\n\t\t\tsay++;\n\t\t\tarr[count].st=i++;\n\t\t\tarr[count++].nd=j++;\n\t\t\tcontinue;\n\t\t}\t\t\n\t\tif(vest[j] < army[i]-x)j++;\n\t\telse if(vest[j] > army[i]+y)i++;\t\n\t}\n\tprintf(\"%d\\n\",say);\n\tfor(i=0;i<count;i++)\n\t\tprintf(\"%d %d\\n\",arr[i].st,arr[i].nd);\n\texit(0);\n}\n"}
{"similarity_score": 0.5332120109190173, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "e98b9d047c4e804b6802960d7bf67b26", "bug_code_uid": "96a3f6deae9b5353e8008753240dcc80", "src_uid": "848ead2b878f9fd8547e1d442e2f85ff", "apr_id": "7a67dd9f0e5bc5f079bd0774b68818ea", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#define MAX 3005\n\nint main()\t\t\t{\n\nint n,v;\nint a[MAX];\n\nint day,num;\nint i,temp;\nlong long int col;\nint max,rem;\n\t\nscanf(\"%d %d\",&n,&v);\t\n\n\n\t\t\nfor(i=0;i<MAX;i++)\t{\n\ta[i]=0;\n}\t\n\nmax=0;\n\nfor(i=0;i<n;i++)\t{\t\nscanf(\"%d %d\",&day,&num);\t\na[day]=num;\nif(day>max)\t{\n\tmax=day;\n}\n}\n\t\nrem=0;\ncol=0;\n\nfor(i=1;i<=3001;i++)\t{\n\n\nif((rem+a[i]) <= v)\t{\n\tcol =col +  a[i] + rem;\n\trem=0;\n}\nelse \t{\n\ncol = col + v;\n\ntv=v-rem;\n\nif(tv<0)\ntv=0;\n\nrem=a[i]-tv;\n}\n\n}\n\nprintf(\"%I64d\\n\",col);\n\t\nreturn 0;\t\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define MAX 3005\n\nint main()\t\t\t{\n\nint n,v;\nlong int a[MAX],b[MAX],tv;\n\nint day,num;\nlong int j,i,temp;\nlong long int col,cur;\nlong int max,rem;\n\nscanf(\"%d %d\",&n,&v);\t\n\t\t\nfor(i=0;i<MAX;i++)\t{\n\tb[i]=a[i]=0;\n}\t\n\nmax=0;\n\nfor(i=0;i<n;i++)\t{\t\nscanf(\"%d %d\",&day,&num);\t\nb[i]=day;\na[i]=num;\n}\n\t\nrem=0;\ncol=0;\n\nfor(i=1;i<=3001;i++)\t{\ncur=0;\nfor(j=0;j<n;j++)\t{\n\tif(b[j]==i)\n\tcur += a[j];\n}\n\nif((rem+cur) <= v)\t{\n\tcol =col + cur + rem;\n\trem=0;\n}\nelse \t{\n\ncol = col + v;\n\ntv=v-rem;\n\nif(tv<0)\ntv=0;\n\nrem=cur-tv;\n}\n\n}\n\nprintf(\"%I64d\\n\",col);\n\t\nreturn 0;\t\n}\n"}
{"similarity_score": 0.9967532467532467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "552f9778570161c2f54a0066a172f048", "bug_code_uid": "3e18836919bb069e440c8f2822c88d2f", "src_uid": "4004c77b77076bf450cbe751e025a71f", "apr_id": "cd0a0d64dc1dbcffc328e4403bb30133", "difficulty": 1500, "tags": ["bitmasks", "brute force", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint a[2048];\r\n\r\nint main(void) {\r\n    int t, n, p, x;\r\n    long long r;\r\n    scanf(\"%d\", &t);\r\n    for (int tt = 0; tt < t; tt++) {\r\n        scanf(\"%d\", &n);\r\n        r = 0;\r\n        for (int i = 1; i <= n; i++) {\r\n            scanf(\"%d\", &a[i]);\r\n            a[i] ^= a[i - 1];\r\n        }\r\n        x = 0;\r\n        for (int i = 1; i <= n; i++) {\r\n            for (int j = i + 1; j <= n; j++) {\r\n                if (a[j] == 0 && a[n] == a[i]) x = 1;\r\n            }\r\n        }\r\n        if (a[n - 1] == 0) x = 1;\r\n        if (x) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint a[2048];\r\n\r\nint main(void) {\r\n    int t, n, p, x;\r\n    long long r;\r\n    scanf(\"%d\", &t);\r\n    for (int tt = 0; tt < t; tt++) {\r\n        scanf(\"%d\", &n);\r\n        r = 0;\r\n        for (int i = 1; i <= n; i++) {\r\n            scanf(\"%d\", &a[i]);\r\n            a[i] ^= a[i - 1];\r\n        }\r\n        x = 0;\r\n        for (int i = 1; i <= n; i++) {\r\n            for (int j = i + 1; j <= n; j++) {\r\n                if (a[j] == 0 && a[n] == a[i]) x = 1;\r\n            }\r\n        }\r\n        if (a[n] == 0) x = 1;\r\n        if (x) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7616892911010558, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "777bad44a70081fa310acf5a135c0bca", "bug_code_uid": "f77cf1a150d91001f90d2d8b99ed3465", "src_uid": "a97e70ad20a337d12dcf79089c16c9f0", "apr_id": "74493d5a38c635494c17d17c75a6b1b6", "difficulty": 1100, "tags": ["data structures", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint a[100000]; int b[100000];\r\nint main()\r\n{\r\n\tint t, i, j;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n; scanf(\"%d\", &n); int flag = 1;\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t\tif (a[i] % 2 == 0)\r\n\t\t\t\tb[i] = 0;\r\n\t\t\telse\r\n\t\t\t\tb[i] = 1;\r\n\t\t}\r\n\t\tint max = 0;\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tif(a[i]>=max)\r\n\t\t\t{\r\n\t\t\t\tmax = a[i]; continue;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (j = i-1; j >= 0; j--)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (a[i]<a[j]&&b[j] == b[i])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = 0; goto gg;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tgg:;\r\n\t\tif (flag)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint a[100000]; int b[100000];\r\nint main()\r\n{\r\n\tint t, i, j;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n; scanf(\"%d\", &n); int flag = 1;\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t\tif (a[i] % 2 == 0)\r\n\t\t\t\tb[i] = 0;\r\n\t\t\telse\r\n\t\t\t\tb[i] = 1;\r\n\t\t}\r\n\t\tint max = 0; int x=0; int y=0;\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tif (b[i] == 0)\r\n\t\t\t{\r\n\t\t\t\tif (a[i] >= x)\r\n\t\t\t\t\tx = a[i];\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = 0; goto gg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (a[i] >= y)\r\n\t\t\t\t\ty = a[i];\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = 0; goto gg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tgg:;\r\n\t\tif (flag)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9983388704318937, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9333019f63c25570323d44f249827d14", "bug_code_uid": "7d9f388960869046a11746a1f56aeb59", "src_uid": "7f5269f3357827b9d8682d70befd3de1", "apr_id": "52065b9b41e601535036bdfa4a717206", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//(\u261e\uff9f\u30ee\uff9f)\u261eNOTSOAWESOME\nmain()\n{\n    long long t,n,k,i,s;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&n,&k);\n        long long a[n],b[n];s=0;\n        \n        for(i=0;i<n;i++)\n        {\n            scanf(\"%lld\",&a[i]);\n            if(a[i]%2)\n            {\n                b[s]=i;s++;\n            }\n        }\n        if(s<k)printf(\"NO\\n\");\n        else if((k-s)%2)printf(\"NO\\n\");\n        else\n        {\n            printf(\"YES\\n\");\n            for(i=0;i<s-1;i++)\n            {\n                printf(\"%lld \",b[i]+1);\n            }\n            printf(\"%lld\\n\",n);\n        }\n    }\n}", "fixed": "//(\u261e\uff9f\u30ee\uff9f)\u261eNOTSOAWESOME\nmain()\n{\n    long long t,n,k,i,s;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&n,&k);\n        long long a[n],b[n];s=0;\n        \n        for(i=0;i<n;i++)\n        {\n            scanf(\"%lld\",&a[i]);\n            if(a[i]%2)\n            {\n                b[s]=i;s++;\n            }\n        }\n        if(s<k)printf(\"NO\\n\");\n        else if((k-s)%2)printf(\"NO\\n\");\n        else\n        {\n            printf(\"YES\\n\");\n            for(i=0;i<k-1;i++)\n            {\n                printf(\"%lld \",b[i]+1);\n            }\n            printf(\"%lld\\n\",n);\n        }\n    }\n}"}
{"similarity_score": 0.9158878504672897, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "79a174f41c60f07258926c5bceba6e6e", "bug_code_uid": "3982c8b4e6db3ab1b667d9a7bc814f78", "src_uid": "2070955288b2e2cdbae728d8e7ce78ab", "apr_id": "4b7ea7d9ac36dbe2d366814a20bf02ac", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){int n,m,lv[100005],save[100005],i;scanf(\"%d%d\",&n,&m);for(i=0;i<m;i++){int x;scanf(\"%d\",&x);putchar((++save[++lv[x]]==n)+'0');}}", "fixed": "#include <stdio.h>\nint n, m, lv[100005], save[100005], i;\nint main(){scanf(\"%d%d\",&n,&m);for(i=0;i<m;i++){int x;scanf(\"%d\",&x);putchar((++save[++lv[x]]==n)+'0');}}"}
{"similarity_score": 0.9192645883293366, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "00a6ee6f2d420102aa4b1d5595ab30d6", "bug_code_uid": "bc493ef269a9099776a5d885622f61da", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "5eae919e49d820f8be0b6a165c5ec544", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int N,M,i,j,k,a,b,c,d,x,y,z,t,s,m,n,l,p;\n    int C[100000],D[10000];\n\n    scanf(\"%d\", &N);\n\n    for(i=1;i<=N;i++)\n    {\n        scanf(\"%d %d\",&n,&x);\n\n        if(n==1 || n==2)\n        {\n            s=1;\n        }\n        else if(n>2)\n        {\n            k=1;\n            while(1)\n            {\n                m=(k*x)+2;\n                p=x+k+1;\n                if(n>p && n<=m)\n                {\n                    s=k+1;\n                    break;\n                }\n                k++;\n            }\n\n        }\n        printf(\"%d\\n\", s);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int N,M,i,j,k,a,b,c,d,x,y,z,t,s,m,n,l,p;\n    int C[100000],D[10000];\n\n    scanf(\"%d\", &N);\n\n    for(i=1;i<=N;i++)\n    {\n        scanf(\"%d %d\",&n,&x);\n\n        if(n==1 || n==2)\n        {\n            s=1;\n        }\n        else if(n>2)\n        {\n            t=n+x+1000;\n            k=1;\n            p=3;\n            while(m<=t)\n            {\n                m=(k*x)+2;\n                if(n>=p && n<=m)\n                {\n                    s=k+1;\n                    break;\n                }\n                p=(k*x)+2+1;\n                k++;\n            }\n\n        }\n        printf(\"%d\\n\", s);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6045165026056746, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "5a5df1e608b9855d087cd0b020b93829", "bug_code_uid": "9abbf2473febf84783293a66cd22c2f5", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "5e8b632a072527bc41ef20281e6f1f1a", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <string.h>\r\nvoid mod(int p)\r\n{\r\n    if (p < 0)\r\n    {\r\n        p = p * -1;\r\n    }\r\n}\r\n\r\nvoid calc(int xa, int ya, int xb, int yb, int xf, int yf)\r\n{\r\n    int x = (xb - xa);\r\n    int y = (yb - ya);\r\n    int ans = mod(x) + mod(y);\r\n\r\n    if(xa == xb == xf || ya == yb == yf){\r\n        printf(\"%d\\n\", ans +2);\r\n    }\r\n    else{\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    int xa, ya, xb, yb, xf, yf;\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n\r\n        scanf(\"%d %d\", &xa, &ya);\r\n        scanf(\"%d %d\", &xb, &yb);\r\n        scanf(\"%d %d\", &xf, &yf);\r\n\r\n        calc(xa, ya, xb, yb, xf, yf);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <string.h>\r\n\r\nvoid calc(int xa, int ya, int xb, int yb, int xf, int yf)\r\n{\r\n    int x = (xb - xa);\r\n    int y = (yb - ya);\r\n    if (x < 0)\r\n    {\r\n        x = x * -1;\r\n    }\r\n    if (y < 0)\r\n    {\r\n        y = y * -1;\r\n    }\r\n    int ans = x + y;\r\n\r\n    if(yf > yb && yf > ya || yf < yb && yf < ya){\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    else if(xf>xb && xf >xa || xf < xb && xf < xa){\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    else if (xa == xb && xb == xf)\r\n    {\r\n        printf(\"%d\\n\", ans + 2);\r\n    }\r\n    else if (ya == yb && yb == yf)\r\n    {\r\n        printf(\"%d\\n\", ans + 2);\r\n    }\r\n    else\r\n    {\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    int xa, ya, xb, yb, xf, yf;\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n\r\n        scanf(\"%d %d\", &xa, &ya);\r\n        scanf(\"%d %d\", &xb, &yb);\r\n        scanf(\"%d %d\", &xf, &yf);\r\n\r\n        calc(xa, ya, xb, yb, xf, yf);\r\n    }\r\n}"}
{"similarity_score": 0.9856459330143541, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "237eee580726847aac78116ad6b70bcb", "bug_code_uid": "8af672ade8367d6b2815dc1470dd782a", "src_uid": "71cead8cf45126902c518c9ce6e5e186", "apr_id": "0be4a3464ad9e2e9e2a72ba5590cbf3b", "difficulty": 1300, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nint i,j,n,a[51],sum=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n scanf(\"%d\",&a[i]);\nfor(i=0;i<n;i++)\n sum+=a[i];\nif(sum%n==0)\n printf(\"%d\\n\",n);\nelse\n printf(\"%d\\n\",n-1);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\nint i,j,n,a[100000],sum=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n scanf(\"%d\",&a[i]);\nfor(i=0;i<n;i++)\n sum+=a[i];\nif(sum%n==0)\n printf(\"%d\\n\",n);\nelse\n printf(\"%d\\n\",n-1);\nreturn 0;\n}\n"}
{"similarity_score": 0.9983136593591906, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b589a662c91583381b2cb7a61d965078", "bug_code_uid": "e2bc26c3d87273043fce5d680c9f4592", "src_uid": "f5bcde6e3008405f61cead4e3f44806e", "apr_id": "967a76eb3d8f8ff2681f8237cda8af47", "difficulty": 1200, "tags": ["data structures", "two pointers", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint t,n,x;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\",&n,&x);\n\t\tint a[n],sum=0,i,j,flag=0,ans;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tsum+=a[i];\n\t\t}\n\t\ti=0;\n\t\tj=n-1;\n\t\tif(sum%x==0){\n\t\twhile(i<j && sum%x==0)\n\t\t{\n\t\t\tif(a[i]%x!=0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tsum-=a[i];\n\t\t\t\tans=n-i-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(a[j]%x!=0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tsum-=a[j];\n\t\t\t\tans=j+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum-=a[i];\n\t\t\t\ti+=1;\n\t\t\t\tj-=1;\n\t\t\t}\n\t\t}\n\t\tif(flag==1)\n\t\tprintf(\"%d\\n\",ans);\n\t\telse\n\t\tprintf(\"-1\\n\");\n\t\t}\n\t\telse\n\t\tprintf(\"%d\\n\",n);\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint t,n,x;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\",&n,&x);\n\t\tint a[n],sum=0,i,j,flag=0,ans;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tsum+=a[i];\n\t\t}\n\t\ti=0;\n\t\tj=n-1;\n\t\tif(sum%x==0){\n\t\twhile(i<j && sum%x==0)\n\t\t{\n\t\t\tif(a[i]%x!=0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tsum-=a[i];\n\t\t\t\tans=n-i-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(a[j]%x!=0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tsum-=a[j];\n\t\t\t\tans=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum-=a[i];\n\t\t\t\ti+=1;\n\t\t\t\tj-=1;\n\t\t\t}\n\t\t}\n\t\tif(flag==1)\n\t\tprintf(\"%d\\n\",ans);\n\t\telse\n\t\tprintf(\"-1\\n\");\n\t\t}\n\t\telse\n\t\tprintf(\"%d\\n\",n);\n\t}\n}"}
{"similarity_score": 0.9333333333333333, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "87e25c24b2b4649cbeddc526322ba854", "bug_code_uid": "b36630dff9f510e2a3611cedde738ddb", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "52ffaed3ba0a14bc823c11b850b2427e", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,a=0,d=0,i;\n    char ch[];\n    scanf(\"%d\",&n);\n    scanf(\"%s\", ch);\n    for(i=0;i<n;i++){\n        if(ch[i]=='A')a++;\n        else d++;\n    }\n    if(a>d)printf(\"Anton\");\n    else if(d>a)printf(\"Danik\");\n    else printf(\"Friendship\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,a=0,d=0,i;\n    scanf(\"%d\",&n);\n    char ch[n];\n    scanf(\"%s\", ch);\n    for(i=0;i<n;i++){\n        if(ch[i]=='A')a++;\n        else d++;\n    }\n    if(a>d)printf(\"Anton\");\n    else if(d>a)printf(\"Danik\");\n    else printf(\"Friendship\");\n    return 0;\n}"}
{"similarity_score": 0.974500344589938, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "23eff5e0651ee272e9277e9ede05f3fb", "bug_code_uid": "94dee05ca81765237641eca500e7f948", "src_uid": "8ce1ba0a98031c1bc28f53c11905391c", "apr_id": "f38bdbe16b8c6ba9068ea1e58e048959", "difficulty": 1500, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main (void)\n{\n    int n, k, i, j;\n    char str[100001];\n    int jj = -1, kk = -1;\n    \n    scanf(\"%d %d\\n\", &n, &k);\n    \n    fgets(str, sizeof(str), stdin);\n    \n    for (j = 0; j < n-1 && k; j++)\n    {\n        if (str[j] == '4' && str[j+1] == '7')\n        {\n            if ( !(j%2) )\n                str[j+1] = '4';\n            else\n            {\n                str[j] = '7';\n                j = j ? j-2 : j-1;\n            }\n            k--;\n        }\n        else if (str[j] == '4' && str[j+1] == '4' && str[j+2] == '7' && (j+1)%2)\n        {\n            if (k%2) str[j+1] = '7';\n            k = 0;\n        }\n    }\n    printf(\"%s\\n\", str);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main (void)\n{\n    int n, k, i, j;\n    char str[100001];\n    int jj = -1, kk = -1;\n    \n    scanf(\"%d %d\\n\", &n, &k);\n    \n    fgets(str, sizeof(str), stdin);\n    \n    for (j = 0; j < n-1 && k; j++)\n    {\n        if (str[j] == '4' && str[j+1] == '7')\n        {\n            if ( !(j%2) ) {\n                str[j+1] = '4';\n                j--;\n            }\n            else\n            {\n                str[j] = '7';\n                j = j ? j-2 : j-1;\n            }\n            k--;\n        }\n        else if (str[j] == '4' && str[j+1] == '4' && str[j+2] == '7' && (j+1)%2)\n        {\n            if (k%2) str[j+1] = '7';\n            k = 0;\n        }\n    }\n    printf(\"%s\\n\", str);\n    \n    return 0;\n}"}
{"similarity_score": 0.9790398918187965, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ef4782c630567c785268d60bda82441f", "bug_code_uid": "7219af596a15c2fed4ca05cee862f747", "src_uid": "6bb26991c9ea70e51a6bda5653de8131", "apr_id": "4577bd43ae378741740c496496084f39", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    __int64 i,j,k;\n    __int64 t,n,m;\n    __int64 sum;\n    __int64 liu[166];\n    __int64 xp[166];\n    while(scanf(\"%I64d%I64d\",&n,&m)!=EOF)\n    {\n        memset(xp,0,sizeof(xp));\n        for(i=0;i<n;i++)\n            scanf(\"%I64d\",&liu[i]);\n        for(i=0;i<n;i++)\n        {\n            j=0;\n            while(liu[i])\n            {\n                if(liu[i]%10==4||liu[i]%10==7)\n                {\n                    j++;\n                }\n                else continue;\n                liu[i]/=10;\n            }\n            xp[i]=j;\n        }\n        sum=0;\n        for(i=0;i<n;i++)\n        {\n            if(xp[i]<=m)\n                sum++;\n        }\n        printf(\"%I64d\\n\",sum);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    __int64 i,j,k;\n    __int64 t,n,m;\n    __int64 sum;\n    __int64 liu[166];\n    __int64 xp[166];\n    while(scanf(\"%I64d%I64d\",&n,&m)!=EOF)\n    {\n        memset(xp,0,sizeof(xp));\n        for(i=0;i<n;i++)\n            scanf(\"%I64d\",&liu[i]);\n        for(i=0;i<n;i++)\n        {\n            j=0;\n            while(liu[i])\n            {\n                if(liu[i]%10==4||liu[i]%10==7)\n                {\n                    j++;\n                }\n                liu[i]/=10;\n            }\n            xp[i]=j;\n        }\n        sum=0;\n        for(i=0;i<n;i++)\n        {\n            if(xp[i]<=m)\n                sum++;\n        }\n        printf(\"%I64d\\n\",sum);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9948936170212765, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "40de7454771f09a80a3ae1c31af14985", "bug_code_uid": "67701ad6aaca9faa8668a4a60a176dbf", "src_uid": "07eecfe948aa78623586b5e30e84e415", "apr_id": "12d80f80cbe24d75aadfa9a8a05df144", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\t// variable in description\n\tint T;\n\tchar* s;\n\t// variable to support\n\tint L;\n\tint* score;\n\tint ans;\n\tint past_end;\n\tint min;\n\t// variable to judge\n\tint i;\n\tint j;\n\tint k;\n\tint d;\n\tint p;\n\t\n\tscanf(\"%d\",&T);\n\t\n\tfor(i=0;i<T;i++)\n\t{\n\t\ts = (char*)malloc(sizeof(char)*(1000001));\n\t\t\n\t\tscanf(\"%s\",s);\n\t\t\n\t\tL = strlen(s);\n\n\t\tscore = (int*)malloc(sizeof(int)*L);\n\t\t\n\t\tif(*s == '+')\n\t\t{\n\t\t\t*score = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*score = -1;\n\t\t}\n\t\t\n\t\tfor(j=1;j<L;j++)\n\t\t{\n\t\t\tif(*(s+j) == '+')\n\t\t\t{\n\t\t\t\td = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td = -1;\n\t\t\t}\n\t\t\t\n\t\t\t*(score+j) = *(score+j-1) + d;\n\t\t}\n\t\t\n\t\tmin = 100;\n\t\tfor(j=0;j<L;j++)\n\t\t{\n\t\t\tif(min > *(score+j))\n\t\t\t{\n\t\t\t\tmin = *(score+j);\n\t\t\t}\n\t\t}\n\t\t\n\t\tans = 0;\n\t\tpast_end = 0;\n\t\t\n\t\tif(min >= 0)\n\t\t{\n\t\t\tans = L;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(j=0;j>=min;j--)\n\t\t\t{\n\t\t\t\tif(j == min)\n\t\t\t\t{\n\t\t\t\t\tans += L;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(k=past_end;k<L;k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(*(score+k) < j)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tans += (k+1);\n\t\t\t\t\t\t\tpast_end = k;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\t\n\t\tfree(s);\n\t\tfree(score);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\t// variable in description\n\tint T;\n\tchar* s;\n\t// variable to support\n\tint L;\n\tint* score;\n\tlong long int ans;\n\tint past_end;\n\tint min;\n\t// variable to judge\n\tint i;\n\tint j;\n\tint k;\n\tint d;\n\tint p;\n\t\n\tscanf(\"%d\",&T);\n\t\n\tfor(i=0;i<T;i++)\n\t{\n\t\ts = (char*)malloc(sizeof(char)*(1000001));\n\t\t\n\t\tscanf(\"%s\",s);\n\t\t\n\t\tL = strlen(s);\n\n\t\tscore = (int*)malloc(sizeof(int)*L);\n\t\t\n\t\tif(*s == '+')\n\t\t{\n\t\t\t*score = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*score = -1;\n\t\t}\n\t\t\n\t\tfor(j=1;j<L;j++)\n\t\t{\n\t\t\tif(*(s+j) == '+')\n\t\t\t{\n\t\t\t\td = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td = -1;\n\t\t\t}\n\t\t\t\n\t\t\t*(score+j) = *(score+j-1) + d;\n\t\t}\n\t\t\n\t\tmin = 100;\n\t\tfor(j=0;j<L;j++)\n\t\t{\n\t\t\tif(min > *(score+j))\n\t\t\t{\n\t\t\t\tmin = *(score+j);\n\t\t\t}\n\t\t}\n\t\t\n\t\tans = 0;\n\t\tpast_end = 0;\n\t\t\n\t\tif(min >= 0)\n\t\t{\n\t\t\tans = L;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(j=0;j>=min;j--)\n\t\t\t{\n\t\t\t\tif(j == min)\n\t\t\t\t{\n\t\t\t\t\tans += L;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(k=past_end;k<L;k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(*(score+k) < j)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tans += (k+1);\n\t\t\t\t\t\t\tpast_end = k;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\t\n\t\tfree(s);\n\t\tfree(score);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9948979591836735, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "09495a3135079d0e3b96c6ccf85b7d8f", "bug_code_uid": "af74c3866740da583eeab7b39eb55cfa", "src_uid": "cc4cdcd162a83189c7b31a68412f3fe7", "apr_id": "06d50c3fbca388609498e541bd58bb48", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\tint l,n;\n\tscanf(\"%d\", &l);\n\tfor (int i = 0; i < l; i++){\n\t\tunsigned char flag = 1;\n\t\tscanf(\"%d\", &n);\n\t\tchar s[n];\n\t\tscanf(\"%s\", s);\n\t\tfor (int j = 0; j < n / 2; j++){\n\t\t\tif (abs(s[j] - s[n - j - 1]) > 2 || abs(s[j] - s[n - j - 1]) == 1){\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag) printf(\"YES\");\n\t\telse printf(\"NO\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\tint l,n;\n\tscanf(\"%d\", &l);\n\tfor (int i = 0; i < l; i++){\n\t\tunsigned char flag = 1;\n\t\tscanf(\"%d\", &n);\n\t\tchar s[n];\n\t\tscanf(\"%s\", s);\n\t\tfor (int j = 0; j < n / 2; j++){\n\t\t\tif (abs(s[j] - s[n - j - 1]) > 2 || abs(s[j] - s[n - j - 1]) == 1){\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9901269393511989, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "328c654d9b82da85d817049a3d69b45f", "bug_code_uid": "869c8807294f81577771b9bfcbe4d3f9", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "90a4568c4f98117f722d6ba290ac578e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint a[100],n,i,s,m1,m2;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tm1=a[0];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]>m1)\n\t\t{\n\t\t\ts=i;\n\t\t\tm1=a[i];\n\t\t}\n\t}\n\tm1=s;\n\tm2=a[n-1];\n\ts=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[n-1-i]<m2)\n\t\t{\n\t\t\ts=i;\n\t\t\tm2=a[n-1-i];\n\t\t}\n\t}\n\tif(m1>(n-1-s))\n\t\tm2=s-1;\n\telse\n\t\tm2=s;\n\ts=m1+m2;\n\tprintf(\"%d\",s);\n}", "fixed": " #include<stdio.h>\nmain()\n{\n\tint a[100],n,i,s,m1,m2;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tm1=a[0];\n\ts=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]>m1)\n\t\t{\n\t\t\ts=i;\n\t\t\tm1=a[i];\n\t\t}\n\t}\n\tm1=s;\n\tm2=a[n-1];\n\ts=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[n-1-i]<m2)\n\t\t{\n\t\t\ts=i;\n\t\t\tm2=a[n-1-i];\n\t\t}\n\t}\n\tif(m1>(n-1-s))\n\t\tm2=s-1;\n\telse\n\t\tm2=s;\n\ts=m1+m2;\n\tprintf(\"%d\",s);\n}"}
{"similarity_score": 0.8561085972850678, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "47d234d02b0e43111903c116b2c3431b", "bug_code_uid": "2363d2e82740547f74012cd6f220682d", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "92aa923c3af0695e565ce0cb599c03de", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint a,b;\n\tint k,m;\n\tint str1[100007],str2[100007];\n\tint ans;\n\n\tscanf(\"%d%d\",&a,&b);\n\tscanf(\"%d%d\",&k,&m);\n\tint i,j;\n\tfor(i=1;i<=a;i++){\n\t\tscanf(\"%d\",&str1[i]);\n\t}\n\tfor(j=1;j<=b;j++){\n\t\tscanf(\"%d\",&str2[j]);\n\t}\n\tint p,q;\n\tint flag=0;\n\t\n\tfor(p=k;p<=a;p+=k){\n\t\tfor(q=1;q+m-1<=b;q++){\n\t\t\tif(str1[p]<str2[q]){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1){\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(flag==1)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint a,b;\n\tint k,m;\n\tint str1[100007],str2[100007];\n\tint ans;\n\n\tscanf(\"%d%d\",&a,&b);\n\tscanf(\"%d%d\",&k,&m);\n\tint i,j;\n\tfor(i=1;i<=a;i++){\n\t\tscanf(\"%d\",&str1[i]);\n\t}\n\tfor(j=1;j<=b;j++){\n\t\tscanf(\"%d\",&str2[j]);\n\t}\n\tint p,q;\n\tint flag=0;\n\t\n\tp=k;\n\tq=1;\n\twhile(p<=a && q<=(b-m+1)){\n\t\tif(str1[p] < str2[q]){\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t\telse if(str1[p]>=str2[q]){\n\t\t\tq++;\n\t\t}\n\t\telse{\n\t\t\tp++;\n\t\t}\n\t}\n\n\t/*for(p=k;p<=a;p+=k){\n\t\tfor(q=1;q+m-1<=b;q++){\n\t\t\tif(str1[p]<str2[q]){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1){\n\t\t\tbreak;\n\t\t}\n\t}*/\n\n\tif(flag==1)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9688995215311005, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "997cfae956f975af1eb03ee9638b3c11", "bug_code_uid": "ee5bf66c04d6899a94e9345492d1b24b", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "4d900279b4cb51c95b0b115aedbba403", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n\nint main() {\n\tint i, n, imin, dmin;\n\tstatic int a[100];\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tdmin = INT_MAX;\n\timin = -1;\n\tfor (i = 0; i < n; i++) {\n\t\tint diff = a[i] > a[(i + 1) % n] ? a[i] - a[(i + 1) % n] : a[(i + 1) % n] - a[i];\n\n\t\tif (dmin > diff) {\n\t\t\tdmin = diff;\n\t\t\timin = i + 1;\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\", imin, (imin + 1) % n);\n\treturn 0;\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n\nint main() {\n\tint i, n, imin, dmin;\n\tstatic int a[100];\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tdmin = INT_MAX;\n\timin = -1;\n\tfor (i = 0; i < n; i++) {\n\t\tint diff = a[i] > a[(i + 1) % n] ? a[i] - a[(i + 1) % n] : a[(i + 1) % n] - a[i];\n\n\t\tif (dmin > diff) {\n\t\t\tdmin = diff;\n\t\t\timin = i + 1;\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\", imin, imin % n + 1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9957446808510638, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "749b4801ed8ddf08b9535ce591086b25", "bug_code_uid": "7363c39a3419314c3c491500dbcdb4a6", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "6840a47c90ef90c0ca6befe8aea54b55", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n;\n        scanf(\"%lld\",&n);\n        if(n%2==0)\n        printf(\"YES\\n\");\n     else\n     printf(\"NO\\n\");\n     \n    }\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n;\n        scanf(\"%lld\",&n);\n        if(n%4==0)\n        printf(\"YES\\n\");\n     else\n     printf(\"NO\\n\");\n     \n    }\n}"}
{"similarity_score": 0.7344110854503464, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "440c8c631084e19a3f94db2584e72048", "bug_code_uid": "27af4d0ad4858ad16538caca19c44eee", "src_uid": "541fde3a3c40926cbd1edb6017b83e52", "apr_id": "9bd6412f072dc8d544c7daebeaa83fb9", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,temp;\n    scanf(\"%d\",&n);\n    int c[n];\n    int s[n];\n    int i,j,k=0;\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &s[i]);\n        c[i] = s[i];\n    }\n\n    for(j=1; j<n; j++)\n    {\n        for(i=0; i<n-1; i++)\n        {\n            if(c[i]>c[i+1])\n            {\n                temp = c[i];\n                c[i] = c[i+1];\n                c[i+1] = temp;\n            }\n        }\n    }\n    for (i = 0; i < n; i ++)\n    {\n        if (s[i] != c[i])\n        {\n            k ++;\n            if (k > 2)\n            {\n                printf(\"NO\\n\");\n                return 0;\n            }\n\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n    int n,temp;\n    scanf(\"%d\",&n);\n    int c[n];\n    int s[n];\n    int i,j,k=0;\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &s[i]);\n        c[i] = s[i];\n    }\n\n    qsort(c, n, sizeof(int), cmpfunc);\n\n    for (i = 0; i < n; i ++)\n    {\n        if (s[i] != c[i])\n        {\n            k ++;\n            if (k > 2)\n            {\n                printf(\"NO\\n\");\n                return 0;\n            }\n\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9681309216192937, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "5d6d23db21f7edca41fb3cc896778a80", "bug_code_uid": "a3e3d11ce3fa0ea40775512fada4f097", "src_uid": "6ee356f2b3a4bb88087ed76b251afec2", "apr_id": "2c651dffa982a70e85bd353442c08826", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//void array_copy(int A[],int ans[]);\nint main()\n{\n\tint A[1001],ans[1001],B[1001],temp_var;\n\tint n,i,j,flag;\n\tchar c,S[1001];\n\tscanf(\"%d\",&n);\n\tscanf(\"%c\",&c);\n\tscanf(\"%s\",S);\n\tfor(i=0;i<n;i++)\n\t{\n//\t\tscanf(\"%c\",&A[i]);\n\t\tA[i]=S[i]-48;\n//\tprintf(\"%d A[i]\",A[i]);\n\t\tB[i]=A[i];\n\t\tans[i]=A[i];\n\t}\n//\tprintf(\"\\n\");\n\tfor(j=0;j<n;j++)\n\t{\n\t\tflag=0;\n\t//\tprintf(\"%d A[0] outer loop\\n\",A[0]);\n\t\twhile(A[0]!=0)\n\t\t{\n\t\t//\tprintf(\"hi\\n\");\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(A[i]!=9)\n\n\t\t\t\tA[i]=A[i]+1;\n\t\t\t\telse\n\t\t\t\t\tA[i]=0;\n\t\t//\tprintf(\"%d \",A[i]);\n\t\t\t}\n\t\t//\tprintf(\"\\n\");\n\t\t//\tprintf(\"%d A[0]\\n\",A[0]);\n\t\t}\n//\t\tprintf(\"out of the loop\\n\");\n\t\ti=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t//\tprintf(\"hi\\n\");\n\t\t\tif(ans[i]==A[i])\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(ans[i]>A[i])\n\t\t\t\tflag=2;\n\t\t\t\telse\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t}\n\t\tif(flag==2)\n\t\t{\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tans[i]=A[i];\n\t\t//\t\tprintf(\"%d \",A[i]);\n\t\t\t}\n\t\t//\tprintf(\"\\n\");\n\t\t//\tprintf(\"%d A[0]\\n\",A[0]);\n\t\t}\n\t\ttemp_var=B[0];\n\t\tfor(i=0;i<n-1;i++)\n\t\t{\n\t\t\t//temp_var=B[0];\n\t\t\tB[i]=B[i+1];\n\t\t\tA[i]=B[i];\n\t\t}\n\t\tB[n-1]=temp_var;\n\t\tA[n-1]=B[n-1];\n\t}\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d\",ans[i]);\n\tprintf(\"\\n\");\n\nreturn 0;\t\n}\n", "fixed": "#include<stdio.h>\n//void array_copy(int A[],int ans[]);\nint main()\n{\n\tint A[1001],ans[1001],B[1001],temp_var;\n\tint n,i,j,flag;\n\tchar c,S[1001];\n\tscanf(\"%d\",&n);\n\tscanf(\"%c\",&c);\n\tscanf(\"%s\",S);\n\tfor(i=0;i<n;i++)\n\t{\n//\t\tscanf(\"%c\",&A[i]);\n\t\tA[i]=S[i]-48;\n//\tprintf(\"%d A[i]\",A[i]);\n\t\tB[i]=A[i];\n\t\tans[i]=A[i];\n\t}\n//\tprintf(\"\\n\");\n\tfor(j=0;j<n;j++)\n\t{\n\t\tflag=0;\n//\t\tprintf(\"%d \\n\",A[0]);\n\t\twhile(A[0]!=0)\n\t\t{\n\t\t//\tprintf(\"hi\\n\");\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(A[i]!=9)\n\n\t\t\t\tA[i]=A[i]+1;\n\t\t\t\telse\n\t\t\t\t\tA[i]=0;\n\t\t//\tprintf(\"%d \",A[i]);\n\t\t\t}\n\t\t//\tprintf(\"\\n\");\n\t\t//\tprintf(\"%d A[0]\\n\",A[0]);\n\t\t}\n//\t\tprintf(\"out of the loop\\n\");\n\t\ti=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t//\tprintf(\"hi\\n\");\n\t\t\tif(ans[i]==A[i])\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t{\n\t\t\t//\tprintf(\"hi\\n\");\n\t\t\t\tif(ans[i]>A[i])\n\t\t\t\tflag=2;\n\t\t\t\telse\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==2)\n\t\t{\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tans[i]=A[i];\n//\t\t\t\tprintf(\"%d \",ans[i]);\n\t\t\t}\n//\t\t\tprintf(\"\\n\");\n\t\t//\tprintf(\"%d A[0]\\n\",A[0]);\n\t\t}\n\t\ttemp_var=B[0];\n\t\tfor(i=0;i<n-1;i++)\n\t\t{\n\t\t\t//temp_var=B[0];\n\t\t\tB[i]=B[i+1];\n\t\t\tA[i]=B[i];\n\t\t}\n\t\tB[n-1]=temp_var;\n\t\tA[n-1]=B[n-1];\n\t}\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d\",ans[i]);\n\tprintf(\"\\n\");\n\nreturn 0;\t\n}\n"}
{"similarity_score": 0.9301587301587302, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3b26038755f9b6c62fb97061c2a2b06a", "bug_code_uid": "e5744c5f05c34fc369584d99fae22203", "src_uid": "07b750dbf7f942eab80d4260103c7472", "apr_id": "10d467fe3ddc2ab3d3ff0a39a317e9bc", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int n, k, day;\n    int days[365] = {0};\n\n\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%d\", &day);\n    for(int i = 0; i < day; i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        days[x]++;\n    }\n\n    int count = 0;\n    int gift = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        count++;\n        if(days[i] == 1)\n        {\n            count = 0;\n            gift++;\n        }\n        else if(count == k)\n        {\n            count = 0;\n            gift++;\n        }\n    }\n\n    printf(\"%d\", gift);\n\n\n    return 0;\n}\n", "fixed": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int n, k, day;\n    int days[366] = {0};\n\n\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%d\", &day);\n    for(int i = 0; i < day; i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        days[x]++;\n    }\n\n    int count = 0;\n    int gift = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        count++;\n        if(days[i] == 1 || count == k)\n        {\n            count = 0;\n            gift++;\n        }\n    }\n\n    printf(\"%d\", gift);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9438943894389439, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b8c85c4ee344655f02d2749f180a5023", "bug_code_uid": "53522cb3bf3862099c000416ce418404", "src_uid": "f5451b19cf835b1cb154253fbe4ea6df", "apr_id": "ff034a7fb4bfa23120a7e18084296f9b", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint k,d,i,j,t;\n\tscanf(\"%d\",&k);\n\tchar str[1001];\n\tscanf(\"%s\",&str);\n\tchar str2[26];\n\tchar str3[1001];\n\tint len=strlen(str);\n\tif (len%k != 0)\n\t{\n\t\tprintf(\"%d\\n\",-1);\n\t\t\n\t\treturn 0;\n\t}\n\tfor(i=0;i<len;i++)\n\t{\n\t\td=str[i];\n//\t\tprintf(\"%d\\n\",d );\n\t\tstr2[d-97]++;\n\t}\n\t\n\tfor(i=0;i<26;i++)\n\t{\n\t\tif(str2[i] != 0)\n\t\t{\n\t\t\tif(str2[i]<k || str2[i]%k != 0)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",-1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i=0;i<k;i++) \n\t{\n\t\tfor (j=0;j<26;j++) \n\t\t{\n\t\t\tif (str2[j]!=0) \n\t\t\t{\n\t\t\t\tfor (t=0;t<str2[j]/k;t++)\n\t\t\t\t\tprintf (\"%c\",j+'a');\n\t\t\t}\n\t\t}\n\t}\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint k,d,i,j,t;\n\tscanf(\"%d\",&k);\n\tchar str[1001];\n\tscanf(\"%s\",&str);\n\tint str2[26];\n\tmemset(str2,0,26*sizeof(int));\n\tint len=strlen(str);\n\tif (len%k != 0)\n\t{\n\t\tprintf(\"%d\\n\",-1);\n\t\t\n\t\treturn 0;\n\t}\n\tfor(i=0;i<len;i++)\n\t{\n\t\td=str[i];\n//\t\tprintf(\"%d\\n\",d );\n\t\tstr2[d-97]++;\n\t}\n\t\n\tfor(i=0;i<26;i++)\n\t{\n\t\tif(str2[i] != 0)\n\t\t{\n\t\t\tif(str2[i]<k || str2[i]%k != 0)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",-1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i=0;i<k;i++) \n\t{\n\t\tfor (j=0;j<26;j++) \n\t\t{\n\t\t\tif (str2[j]!=0) \n\t\t\t{\n\t\t\t\tfor (t=0;t<str2[j]/k;t++)\n\t\t\t\t\tprintf (\"%c\",j+'a');\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6059322033898306, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5fd8f92f9ac23dee896ba8e620c096a6", "bug_code_uid": "87e549745a3c5044f8b6e7ca3c44be8b", "src_uid": "1a6881aeb197b8ed429f46850eb27b9c", "apr_id": "211e3944a0c3b0d00110e131b9fda859", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<stdlib.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int i,t,j,c,p,w;\r\n    char n[12];\r\n    char d[1];\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%s\",n);\r\n        c=strlen(n);\r\n        w=0;\r\n        for(j=0;j<c;j++){\r\n            if(n[j]>'1'&&n[j]<'10'){\r\n            p=(int)(n[j])-(int)('0');\r\n            w=w+p;\r\n            }\r\n        }\r\n        if(w==0){\r\n            w=1;\r\n        }\r\n        printf(\"%d\\n\",w);\r\n\r\n    }\r\n\r\n    return 0;\r\n    }\r\n", "fixed": "#include <stdio.h>\r\n#include<stdlib.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int i,t,j,c,p;\r\n    char n[12];\r\n    char a;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%s\",n);\r\n        c=strlen(n);\r\n        a='1';\r\n        for(j=0;j<c;j++){\r\n            if(n[j]>=a){\r\n            p=(int)(n[j])-(int)('0');\r\n            a=n[j];\r\n            }\r\n        }\r\n        printf(\"%d\\n\",p);\r\n        a='1';\r\n\r\n    }\r\n\r\n    return 0;\r\n    }\r\n"}
{"similarity_score": 0.7394859813084113, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "e8ae383895110d85982068cd3570cee0", "bug_code_uid": "9fa4f21c8583d59a9069fb865aa5e2b4", "src_uid": "742e4e6ca047da5f5ebe5d854d6a2024", "apr_id": "af646d9aa567f8f5ea637cf414bfe1f4", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint x[3]={1,1,0};\nint y[3]={0,1,1};\nchar data[51][51];\nint m,n;\n\nint dfs(int a,int b)\n{\n\tint i;\n\tint count = 1;\n\tchar ch;\n\tfor(i=0; i<3;i++)\n\t{\n\t\tif(b+x[i] > n || a+y[i] > m)\n\t\t\tbreak;\n\t\tch = data[a+y[i]][b+x[i]];\n\t\tif(ch == 'f' || ch == 'a' || ch == 'c' || ch == 'e')\n\t\t\tcount ++;\n\t}\n\n\tif(count != 4)\n\t\treturn 0;\n\treturn 1;\n}\n\nint main()\n{\n\tint i,j;\n\tint count;\n\twhile(scanf(\"%d%d\",&m,&n) !=EOF)\n\t{\n\t\tmemset(data,'\\0',sizeof(data));\n\t\tcount = 0;\n\t\tgetchar();\n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t\tscanf(\"%c\",&data[i][j]);\n\t\t\tgetchar();\n\t\t}\n\t\tfor(i=1;i<=m;i++)\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(data[i][j] != 'x')\n\t\t\t\t\tif(dfs(i,j))\tcount ++;\n\t\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint x[3]={1,1,0};\nint y[3]={0,1,1};\nchar data[51][51];\nint m,n;\n\nint dfs(int p,int b)\n{\n\tint i;\n\tint f,a,c,e;\n\tchar ch;\n\tf=a=c=e=0;\n\tch = data[p][b];\n\tswitch(ch)\n\t{\n\t\tcase 'f':f++;break;\n\t\tcase 'a':a++;break;\n\t\tcase 'c':c++;break;\n\t\tcase 'e':e++;break;\n\t}\n\tfor(i=0; i<3;i++)\n\t{\n\t\tif(b+x[i] > n || p+y[i] > m)\n\t\t\tbreak;\n\t\tch = data[p+y[i]][b+x[i]];\n\t\tswitch(ch)\n\t\t{\n\t\t\tcase 'f':f++;break;\n\t\t\tcase 'a':a++;break;\n\t\t\tcase 'c':c++;break;\n\t\t\tcase 'e':e++;break;\n\t\t}\t\n\t}\n\n\tif(a==1 && f==1 && c==1 && e==1)\n\t\treturn 1;\n\treturn 0;\n}\n\nint main()\n{\n\tint i,j;\n\tint count;\n\twhile(scanf(\"%d%d\",&m,&n) !=EOF)\n\t{\n\t\tmemset(data,'\\0',sizeof(data));\n\t\tcount = 0;\n\t\tgetchar();\n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t\tscanf(\"%c\",&data[i][j]);\n\t\t\tgetchar();\n\t\t}\n\t\tfor(i=1;i<=m;i++)\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(data[i][j] != 'x')\n\t\t\t\t\tif(dfs(i,j))\tcount ++;\n\t\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.13528591352859135, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "217d2424e4e200b34dd844f9d9d4c544", "bug_code_uid": "42ae36947033e5ccf021650b9c7bd98a", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "2baa2abe2ef5d2efb5ac2dc38647fab8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,a,b,c;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        if(a>b&&a>c)\n        {\n            b=a-b+1;\n            c=a-c+1;\n            a=0;\n        }\n        else if(b>a&&b>c)\n        {\n            a=b-a+1;\n            c=b-c+1;\n            b=0;\n        }\n        else if(c>a&&c>b)\n        {\n            a=c-a+1;\n            b=c-b+1;\n            c=0;\n        }\n        else if(a==b&&b==c)\n            a=b=c=1;\n        printf(\"%d %d %d\\n\",a,b,c);\n    }\n    return 0;\n}\n   \t\t\t   \t\t \t  \t\t\t\t\t\t\t \t\t\t  \t \t", "fixed": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint a,b,c;\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\tint max;\n\t\tif(a>b){\n\t\t\tmax=a;\n\t\t}else{\n\t\t\tmax=b;\n\t\t}\n\t\tif(max<c){\n\t\t\tmax=c;\n\t\t}\n\t\tif(a==b&&b==c){\n\t\t\tprintf(\"%d %d %d\",1,1,1);\n\t\t}else if(a==b){\n\t\t\tif(c==max){\n\t\t\t\tprintf(\"%d %d %d\",max-a+1,max-b+1,0);\n\t\t\t}else{\n\t\t\t\tprintf(\"%d %d %d\",1,1,max-c+1);\n\t\t\t}\n\t\t}else if(a==c){\n\t\t\tif(b==max){\n\t\t\t\tprintf(\"%d %d %d\",max-a+1,0,max-c+1);\n\t\t\t}else{\n\t\t\t\tprintf(\"%d %d %d\",1,max-b+1,1);\n\t\t\t}\n\t\t}else if(b==c){\n\t\t\tif(a==max){\n\t\t\t\tprintf(\"%d %d %d\",0,max-b+1,max-c+1);\n\t\t\t}else{\n\t\t\t\tprintf(\"%d %d %d\",max-a+1,1,1);\n\t\t\t}\n\t\t}else if(a==max){\n\t\t\tprintf(\"%d %d %d\",0,max-b+1,max-c+1);\n\t\t}else if(b==max){\n\t\t\tprintf(\"%d %d %d\",max-a+1,0,max-c+1);\n\t\t}else if(c=max){\n\t\t\tprintf(\"%d %d %d\",max-a+1,max-b+1,0);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n  \t \t \t  \t\t\t \t\t\t  \t  \t \t \t"}
{"similarity_score": 0.35668789808917195, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5ad767aeb3cee14cffff202ff7be7ae2", "bug_code_uid": "328ae54aa5132add8202e351e0bc4732", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "d140d939c5a98015c45a3a37c575a594", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,a,b,c,e=0,s;\n    scanf(\"%d\",&n);\n\n    a=n/3;\n    s=3*a;\n    if(a%3==0)\n    {\n        b=a-1;\n        c=a+2;\n        a=a-1;\n        printf(\"%d %d %d\",a,b,c);\n    }\n    else if(a%3!=0)\n    {\n        if(s==n)\n            printf(\"%d %d %d\",a,a,a);\n        else\n        {\n            b=a;\n            c=n-2*a;\n            if(c%3==0)\n            {\n                l:\n                b--;\n                c++;\n                if(b%3==0||c%3==0)\n                    goto l;\n            }\n            printf(\"%d %d %d\",b,a,c);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,a,b,c,e=0,s;\n    scanf(\"%d\",&n);\n\n    a=1;\n    b=1;\n    l:\n    c=n-(a+b);\n    if(c%3==0)\n    {\n        b++;\n        c--;\n    }\n\n    printf(\"%d %d %d\",a,b,c);\n}\n"}
{"similarity_score": 0.99812734082397, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "af8cd897491c1cc2f4d33debbf9f58d9", "bug_code_uid": "94bcd591984932f505b645bc0a652a1e", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "0ec85c0d112d3ec8bb8e5dbc729eec42", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int a,i,j,n,s=0,s1=0,c=0,ar[100];\n    scanf (\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf (\"%d\",&ar[i]);\n        s=s+ar[i];\n    }\n    s=s/2;\n    for (i=0;i<n;i++)\n    {\n        for (j=i+1;j<n;j++)\n        {\n            if (ar[i]>ar[j])\n            {\n                a=ar[i];\n                ar[i]=ar[j];\n                ar[j]=a;\n            }\n        }\n    }\n    \n    for (i=0;i<n;i++)\n    {\n        s1=s1+ar[i];c++;\n        if (s1>s)\n        break;\n    }\n    printf (\"%d\",c);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n    int a,i,j,n,s=0,s1=0,c=0,ar[100];\n    scanf (\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf (\"%d\",&ar[i]);\n        s=s+ar[i];\n    }\n    s=s/2;\n    for (i=0;i<n;i++)\n    {\n        for (j=i+1;j<n;j++)\n        {\n            if (ar[i]<ar[j])\n            {\n                a=ar[i];\n                ar[i]=ar[j];\n                ar[j]=a;\n            }\n        }\n    }\n    \n    for (i=0;i<n;i++)\n    {\n        s1=s1+ar[i];c++;\n        if (s1>s)\n        break;\n    }\n    printf (\"%d\",c);\n    return 0;\n}"}
{"similarity_score": 0.6523605150214592, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d60dee68c9da2dd338d9b99c482df316", "bug_code_uid": "1e84cdda0edfa24c3c73492389ef2ec8", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "eb05941c87c3edeb90f9eef47130dbff", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t1,t2;\n\tint i,j,k,l,r;\n\tscanf(\"%d\",&t1);\n\tfor(t2=0;t2<t1;t2++)\n\t{\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tk=0;\n\t\tfor(i=l;i<r;i++)\n\t\t{\n\t\t\tfor(j=r;j>l;j--)\n\t\t\t{\n\t\t\t\tif(j%i==0&&j!=i)\n\t\t\t\t{\n\t\t\t\t\tk=1;\n\t\t\t\t\tprintf(\"%d %d\\n\",i,j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k==1)\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t1,t2,l,r;\n\tscanf(\"%d\",&t1);\n\tfor(t2=0;t2<t1;t2++)\n\t{\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tprintf(\"%d %d\\n\",l,2*l);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9827429609445958, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9ba7833cff180e1c9220eca617621880", "bug_code_uid": "a9ea3eec3a529996abd02d33ba96b6a6", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "9126ec0c95d7099463f9b66310b0e103", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int n, i, a[100001], count=0, ans[100001]={0}, max=0, j;\n    scanf(\"%lld\", &n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\", &j);\n        a[j]++;\n        if(j>max)\n            max=j;\n    }\n    for(i=1; i<=max; i++)\n    {\n        ans[i]=i*a[i]+ans[i-2];\n        //printf(\"i=%d ans[i]=%d a[i]=%d\\n\", i, ans[i], a[i]);\n        if(ans[i-1]>ans[i])\n            ans[i]=ans[i-1];\n        //printf(\"i=%d ans[i]=%d a[i]=%d\\n\", i, ans[i], a[i]);\n    }\n    printf(\"%lld\\n\", ans[max]);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int n, i, a[100001], count=0, ans[100001]={0}, max=0, j;\n    scanf(\"%lld\", &n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\", &j);\n        a[j]++;\n        if(j>max)\n            max=j;\n    }\n    ans[1]=a[1];\n    for(i=2; i<=max; i++)\n    {\n        ans[i]=i*a[i]+ans[i-2];\n        //printf(\"i=%d ans[i]=%d a[i]=%d\\n\", i, ans[i], a[i]);\n        if(ans[i-1]>ans[i])\n            ans[i]=ans[i-1];\n        //printf(\"i=%d ans[i]=%d a[i]=%d\\n\", i, ans[i], a[i]);\n    }\n    printf(\"%lld\\n\", ans[max]);\n    return 0;\n}"}
{"similarity_score": 0.3863013698630137, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "8d776a414ce3a62432ef497315f4c569", "bug_code_uid": "9e6f0601dfeb55d8ccef86aa40ad665c", "src_uid": "386345016773a06b9e190a55cc3717fa", "apr_id": "3c11c2948121214eef8d5abd6b691227", "difficulty": 1400, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n \nint main () {\n  int i, n;\n  scanf(\"%d\", &n);\n \n  if (n <= 3)\n    printf (\"%d\\n\", n == 3 ? 210 : -1);\n  else {\n    int md = 1;\n    for (i = 0; i < n - 1; ++i)\n      md = md*10 % 210;\n    printf (\"1%.*d%.*d\\n\", n - 4, 0, 3, 210 - mod);\n  }\n  exit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n \nint main(){\n  int i;\n  int n;\n  scanf(\"%d\", &n);\n \n  if(n < 3){\n    puts(\"-1\");\n  }else if(n == 3){\n    puts(\"210\");\n  }else{\n    int mod = 1;\n    for(i = 0; i < n - 1; i++){\n      mod *= 10;\n      mod %= 210;\n    }\n    // mod == (10 ^ n) % 210\n    // Answer: 10 ^ n + (210 - mod)\n    putchar('1');\n    for(i = 0; i < n - 4; i++)\n      putchar('0');\n    printf (\"%.*d\\n\", 3, 210 - mod);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.888421052631579, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "6d6299c5c60a3c0aebb7b3b6e42245a3", "bug_code_uid": "4e1ca2d7b492e0c79909622ce1e7c984", "src_uid": "5099a9ae62e82441c496ac37d92e99e3", "apr_id": "eff95811f16e9c4c6593d64ca0728cfb", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef unsigned u;\nint main()\n{\n\tu n,h,i,j,k,r=0,s=0;\n\tscanf(\"%u%u%u\",&n,&h,&k);\n\tfor(i=-1;++i<n;)\n\t{\n\t\tscanf(\"%u\",&j);\n\t\tif(s+j>h){++r;s=0;}\n\t\ts+=j;\n\t\tr+=s/k;s%=k;\n\t}\n\tprintf(\"%u\\n\",r+(s>0));\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef long long unsigned U;\nint main()\n{\n\tU n,h,i,j,k,r=0,s=0;\n\tscanf(\"%I64u%I64u%I64u\",&n,&h,&k);\n\tfor(i=-1;++i<n;)\n\t{\n\t\tscanf(\"%I64u\",&j);\n\t\tif(s+j>h){++r;s=0;}\n\t\ts+=j;\n\t\tr+=s/k;s%=k;\n\t}\n\tprintf(\"%I64u\\n\",r+(s>0));\n\treturn 0;\n}\n"}
{"similarity_score": 0.9977924944812362, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "921439444826b10b64b0345a446ca97e", "bug_code_uid": "3ad1dcaad9823c31f6a55a5c8958f646", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "fa52f4fe6df3de8620e19caa80caf8a3", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint n,x1,x2,x,y1,y2,y;\r\n\tchar e;\r\n\tint t;\r\n\tscanf(\"%d\",&n);\r\n\tscanf(\"%c\",&e);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tscanf(\"%d%d\",&x1,&y1);\r\n\t\tscanf(\"%d%d\",&x2,&y2);\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\tif(((x==x1&&x==x2)&&((y<y1&&y>y2)||(y<y2&&y>y1)))||((y==y1&&y==y2)&&((x<x1&&x>x2)||(x<x2&&x>x1))))\r\n\t\t\tt=(abs(x1-x2)+abs(y1-y2))+2;\r\n\t\telse\r\n\t\t\tt=(abs(x1-x2)+abs(y1-y2));\r\n\t\t\r\n\t\tprintf(\"%d\",t);\r\n\t\tscanf(\"%c\",&e);\r\n\t}\r\n} ", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n\tint n,x1,x2,x,y1,y2,y;\r\n\tchar e;\r\n\tint t;\r\n\tscanf(\"%d\",&n);\r\n\tscanf(\"%c\",&e);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tscanf(\"%d%d\",&x1,&y1);\r\n\t\tscanf(\"%d%d\",&x2,&y2);\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\tif(((x==x1&&x==x2)&&((y<y1&&y>y2)||(y<y2&&y>y1)))||((y==y1&&y==y2)&&((x<x1&&x>x2)||(x<x2&&x>x1))))\r\n\t\t\tt=(abs(x1-x2)+abs(y1-y2))+2;\r\n\t\telse\r\n\t\t\tt=(abs(x1-x2)+abs(y1-y2));\r\n\t\t\r\n\t\tprintf(\"%d\\n\",t);\r\n\t\tscanf(\"%c\",&e);\r\n\t}\r\n} "}
{"similarity_score": 0.9875776397515528, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "dd4328f96ac683daedd2b9fc3c19e9d2", "bug_code_uid": "1e1aa3791c9eae00df4349d953bdb703", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "28725aa12d3f237a9a427cad630b3bbe", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define H 23\n#define M 59\n\nint main() {\n\tstatic int kk[H][M];\n\tint n, h, m, max;\n\n\tscanf(\"%d\", &n);\n\twhile (n--) {\n\t\tscanf(\"%d%d\", &h, &m);\n\t\tkk[h][m]++;\n\t}\n\tmax = 0;\n\tfor (h = 0; h <= H; h++)\n\t\tfor (m = 0; m <= M; m++)\n\t\t\tif (max < kk[h][m])\n\t\t\t\tmax = kk[h][m];\n\tprintf(\"%d\\n\", max);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define H 23\n#define M 59\n\nint main() {\n\tstatic int kk[H + 1][M + 1];\n\tint n, h, m, max;\n\n\tscanf(\"%d\", &n);\n\twhile (n--) {\n\t\tscanf(\"%d%d\", &h, &m);\n\t\tkk[h][m]++;\n\t}\n\tmax = 0;\n\tfor (h = 0; h <= H; h++)\n\t\tfor (m = 0; m <= M; m++)\n\t\t\tif (max < kk[h][m])\n\t\t\t\tmax = kk[h][m];\n\tprintf(\"%d\\n\", max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.3766632548618219, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "4bb0bc4add79b91ce75c3e8d6e84fd79", "bug_code_uid": "0f9e8eba7f100efcc568783005950974", "src_uid": "541fde3a3c40926cbd1edb6017b83e52", "apr_id": "345f2d1d6fb9e34f2a5634a4f3747ad3", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint temp,flag=0,c,n,arr[100000],i,j;\n\tscanf(\"%d\", &n);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t}\n\ti=0;\n\tj=n-1;\n\tc=0;\n\twhile(i < j)\n\t{\n\t\tif(arr[i] < arr[i+1])\n\t\t\ti++;\n\t\tif(arr[j] > arr[j-1])\n\t\t\tj--;\n\t\tif((arr[i] > arr[i+1] )&& (arr[j] < arr[j-1]))\n\t\t{\n\t\t\tc++;\n\t\t\ttemp = arr[i];\n\t\t\tarr[i] = arr[j];\n\t\t\tarr[j] = temp;\n\t\t\ti++;\n\t\t\tj--;\n\t\t\tif(c>1)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag == 0)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\telse\n\t\tprintf(\"NO\\n\");\n}\n\n", "fixed": "#include<stdio.h>\n\nint compare (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tlong int temp,flag=0,c,n,ar[100000],arr[100000],i,j;\n\tscanf(\"%ld\", &n);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%ld\", &arr[i]);\n\t\tar[i] = arr[i];\n\t}\n\ti=0;\n\tj=n-1;\n\tc=0;\n\tqsort(arr,n,sizeof(long int),compare);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tif(ar[i] != arr[i])\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\tif(c==0 || c==2)\n\t\tflag=1;\n\tif(flag == 1)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\telse\n\t\tprintf(\"NO\\n\");\n\treturn (0);\n}\n\n"}
{"similarity_score": 0.9113924050632911, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "09d188657273871747fc65e1123d132e", "bug_code_uid": "8f7850c6e92eb372565e54b9937f0549", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "82c98c38f8fae23d572cd7f30ef7b735", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,n,m;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&n,&m);\n        if((n*m)%2==0)\n       {\n           if(n>m) printf(\"%d\\n\",n);\n           else printf(\"%d\\n\",m);\n       }\n       else printf(\"%d\\n\",((n*m)+1)/2);\n    } return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,n,m;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&n,&m);\n        if((n*m)%2==0)\n       {\n            printf(\"%d\\n\",(n*m)/2);\n       }\n       else printf(\"%d\\n\",((n*m)+1)/2);\n    } return 0;\n}"}
{"similarity_score": 0.9980842911877394, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2d83649ef0156929df2c852f498dfa02", "bug_code_uid": "9acca1a32c21e3c176eb27f20a83666e", "src_uid": "a91be662101762bcb2c58b8db9ff61e0", "apr_id": "d8326c7542022c2c7ca8624a54b90025", "difficulty": 1100, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h> \r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\r\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\r\n\r\nint main()\r\n{\r\n    int t, n;\r\n    int *ar;\r\n    int i, j;\r\n    int first, last;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        ar = malloc(sizeof(int)*n);\r\n        for (j = 0; j < n; j++)\r\n        {\r\n            \r\n            scanf(\"%d\", &ar[j]);\r\n\r\n        }\r\n\r\n        for (j = 0; j < n-1; j++)\r\n            if (ar[j] == ar[j + 1])\r\n                break;\r\n\r\n        if (j == n-1)\r\n        {\r\n            printf(\"0\");\r\n            free(ar);\r\n            continue;\r\n        }\r\n\r\n        first = j;\r\n\r\n        for (j = n-2; j >= 0; j--)\r\n            if (ar[j] == ar[j + 1])\r\n                break;\r\n\r\n        if (j == first)\r\n        {\r\n            printf(\"0\");\r\n            continue;\r\n        }\r\n        //printf(\"%d %d %d\\n\", first, j, n);\r\n        printf(\"%d\\n\", MAX(j - first - 1, 1));\r\n        free(ar);\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdlib.h> \r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\r\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\r\n\r\nint main()\r\n{\r\n    int t, n;\r\n    int *ar;\r\n    int i, j;\r\n    int first, last;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        ar = malloc(sizeof(int)*n);\r\n        for (j = 0; j < n; j++)\r\n        {\r\n            \r\n            scanf(\"%d\", &ar[j]);\r\n\r\n        }\r\n\r\n        for (j = 0; j < n-1; j++)\r\n            if (ar[j] == ar[j + 1])\r\n                break;\r\n\r\n        if (j == n-1)\r\n        {\r\n            printf(\"0\\n\");\r\n            free(ar);\r\n            continue;\r\n        }\r\n\r\n        first = j;\r\n\r\n        for (j = n-2; j >= 0; j--)\r\n            if (ar[j] == ar[j + 1])\r\n                break;\r\n\r\n        if (j == first)\r\n        {\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n        //printf(\"%d %d %d\\n\", first, j, n);\r\n        printf(\"%d\\n\", MAX(j - first - 1, 1));\r\n        free(ar);\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9991673605328892, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "63d72e6b41ea25dce4ce8b0d9e5e3245", "bug_code_uid": "c5dd4708e33ce77a6a113b517dcf22d4", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "bd0d7bee7cf33458a7fa2e7389836bd3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include <stdio.h>\n\nint main (void)\n{\n\tchar *s = \"Bualbsr\";\n\tchar s_stdin[100001];\n\tunsigned int str[7] = {0,0,0,0,0,0,0};\n\tunsigned int i;\n\tunsigned int j;\n\tunsigned int res;\n\n\tscanf(\"%s\", s_stdin);\n\ti = 0;\n\tres = 0;\n\twhile (s_stdin[i] != '\\0')\n\t{\n\t\tj = 0;\n\t\twhile (s[j] != '\\0')\n\t\t{\n\t\t\tif (s_stdin[i] == s[j])\n\t\t\t\t{\n\t\t\t\t\tstr[j]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\tif (i < 8) \n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn (0);\n\t}\n\tstr[1] = str[1] / 2;\n\tstr[2] = str[2] / 2;\n\tj = 0;\n\tres = str[j];\n\twhile (j < 7)\n\t{\n\t\tif(str[j] <= res)\n\t\t{\n\t\t\tres = str[j];\n\t\t}\n\t\tj++;\n\t}\n\tprintf(\"%d\\n\", res);\n\treturn (0);\t\n}\n", "fixed": "#include <stdio.h>\n\nint main (void)\n{\n\tchar *s = \"Bualbsr\";\n\tchar s_stdin[100001];\n\tunsigned int str[7] = {0,0,0,0,0,0,0};\n\tunsigned int i;\n\tunsigned int j;\n\tunsigned int res;\n\n\tscanf(\"%s\", s_stdin);\n\ti = 0;\n\tres = 0;\n\twhile (s_stdin[i] != '\\0')\n\t{\n\t\tj = 0;\n\t\twhile (s[j] != '\\0')\n\t\t{\n\t\t\tif (s_stdin[i] == s[j])\n\t\t\t\t{\n\t\t\t\t\tstr[j]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\tif (i < 8) \n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn (0);\n\t}\n\tstr[1] = str[1] / 2;\n\tstr[2] = str[2] / 2;\n\tj = 0;\n\tres = str[j];\n\twhile (j < 7)\n\t{\n\t\tif(str[j] <= res)\n\t\t{\n\t\t\tres = str[j];\n\t\t}\n\t\tj++;\n\t}\n\tprintf(\"%d\\n\", res);\n\treturn (0);\t\n}\n"}
{"similarity_score": 0.9897610921501706, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "627f6920714d48ee040cada10db76e39", "bug_code_uid": "5ef960c4447f3eed92158a74eb583ae9", "src_uid": "ccb7b8c0c389ea771f666c236c1cba5f", "apr_id": "6bb44398bf3ad2c30f71a4a54570b843", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n, i = 0;\n\tscanf(\"%d\", &n);\n\n\tint a,b,x,y, maior = 0;\n\n\tint pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n\tfor(i; i < n; ++i){\n\t\tscanf(\"%d%d%d%d\", &a, &b, &x, &y);\n\t\tpos1 = x * b;\n\t\tpos2 = (a-x-1)*b;\n\t\tpos3 = a*y;\n\t\tpos4 = a*(b-y-1);\n\n\t\tif(pos1 >= pos2 && pos1 >= pos3 && pos1 >= pos4)\n\t\t\tmaior = pos1;\n\n\t\tif(pos2 >= pos3 && pos2 >= pos1 && pos1 >= pos4)\n\t\t\tmaior = pos2;\n\n\t\tif(pos3 >= pos2 && pos3 >= pos1 && pos3 >= pos4)\n\t\t\tmaior = pos3;\n\n\t\tif(pos4 >= pos2 && pos4 >= pos3 && pos4 >= pos1)\n\t\t\tmaior = pos4;\n\n\t\tprintf(\"%d\\n\", maior);\n\t}\n\t\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\tint n, i;\n\tscanf(\"%d\", &n);\n\n\tint a,b,x,y, maior = 0;\n\n\tint pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n\tfor(i = 0; i < n; ++i){\n\t\tscanf(\"%d%d%d%d\", &a, &b, &x, &y);\n\t\tpos1 = (x * b);\n\t\tpos2 = (a-x-1)*b;\n\t\tpos3 = a*y;\n\t\tpos4 = a*(b-y-1);\n\n\t\tif(pos1 >= pos2 && pos1 >= pos3 && pos1 >= pos4)\n\t\t\tmaior = pos1;\n\n\t\tif(pos2 >= pos3 && pos2 >= pos1 && pos2 >= pos4)\n\t\t\tmaior = pos2;\n\n\t\tif(pos3 >= pos2 && pos3 >= pos1 && pos3 >= pos4)\n\t\t\tmaior = pos3;\n\n\t\tif(pos4 >= pos2 && pos4 >= pos3 && pos4 >= pos1)\n\t\t\tmaior = pos4;\n\n\t\tprintf(\"%d\\n\", maior);\n\t}\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.3491552695092518, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "5e25691035bd6ff699e7df1a58fced16", "bug_code_uid": "638a34eeed643a1abca49c1492c1240b", "src_uid": "e21e768dbb2e5f72873dc1c7de4879fd", "apr_id": "6aa8c4f41b10729931df56392d614950", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,a,b,i,t[200000],sum1,sum2;\n\n    scanf(\"%d%d%d\",&n,&a,&b);\n    sum1=0;\n    sum2=0;\n    for(i=0;i<n;i++)\n    {\n\n        scanf(\"%d\",&t[i]);\n        if(!(t[i]%2))\n            sum1+=t[i];\n        else\n            sum2+=t[i];\n    }\n    if(sum1<=b*2)\n    {\n        b=b*2;\n        b-=sum1;\n        if(sum2<=(b+a))\n            printf(\"%d\\n\",0);\n        else\n            printf(\"%d\\n\",sum2-(a+b));\n    }\n    else\n    {\n        b=b*2;\n        sum1-=b;\n        if(sum2<=a)\n            printf(\"%d\\n\",sum1);\n        else\n            printf(\"%d\\n\",sum1+(sum2-a));\n    }\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,t1,t2,people[200000],t=0,i,sum=0;\n\n    scanf(\"%d%d%d\",&n,&t1,&t2);\n    t2*=2;\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&people[i]);\n        if(people[i]==1)\n        {\n            if(t1)\n                t1-=1;\n            else if(t2)\n            {\n\n                t2-=2;\n                t+=1;\n\n            }\n            else if(t)\n            {\n                t-=1;\n            }\n            else\n                sum+=1;\n        }\n        else\n        {\n            if(t2)\n                t2-=2;\n            else\n                sum+=2;\n        }\n    }\n    printf(\"%d\\n\",sum);\n}\n"}
{"similarity_score": 0.998371335504886, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1d634d00ef469c89581cd46f08b401f0", "bug_code_uid": "55ba4187dceb57c2515e94cbf43e44bf", "src_uid": "5e4defe52832cc0d36e7ea5d9f86f895", "apr_id": "7027e3c462d650785652b33209fce965", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long a = 0, f = 0, flag = 0, n, i;\n    char c;\n    scanf(\"%ld\", &n);\n    getchar();\n    for (i=0; i<n; i++){\n        c = getchar();\n        switch(c){\n            case 'A':\n                a++;\n                break;\n            case 'F':\n                f++;\n                break;\n            case 'I':\n                flag++;\n                break;\n            default:\n                break;\n        }\n        if (flag == 2){\n            printf(\"0\");\n            return 0;\n        }\n    }\n    if(flag){\n        printf(\"1\");\n    }\n    else printf(\"%ld\", f);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long a = 0, f = 0, flag = 0, n, i;\n    char c;\n    scanf(\"%ld\", &n);\n    getchar();\n    for (i=0; i<n; i++){\n        c = getchar();\n        switch(c){\n            case 'A':\n                a++;\n                break;\n            case 'F':\n                f++;\n                break;\n            case 'I':\n                flag++;\n                break;\n            default:\n                break;\n        }\n        if (flag == 2){\n            printf(\"0\");\n            return 0;\n        }\n    }\n    if(flag){\n        printf(\"1\");\n    }\n    else printf(\"%ld\", a);\n    return 0;\n}\n"}
{"similarity_score": 0.9968354430379747, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e6c11ba2ab9a141801d916319815dc41", "bug_code_uid": "56118f696e9002c4c0ac99029977e906", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "1d167189da14a78974835ad2d89c4848", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int b,g,m[101],f[101],i,j,t=0,temp;\n    scanf(\"%d\",&b);\n    for(i=0;i<b;i++)\n    {\n        scanf(\"%d\",&m[i]);\n    }\n    scanf(\"%d\",&g);\n    for(i=0;i<g;i++)\n    {\n        scanf(\"%d\",&f[i]);\n    }\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            if(m[j]<m[i])\n            {\n                temp=m[j];\n                m[j]=m[i];\n                m[i]=temp;\n            }\n        }\n    }\n    for(i=0;i<g;i++)\n    {\n        for(j=0;j<g;j++)\n        {\n            if(f[j]<f[i])\n            {\n                temp=f[j];\n                f[j]=f[i];\n                f[i]=temp;\n            }\n        }\n    }\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<g;j++)\n        {\n            if((m[i]-f[j]==0)||(m[i]-f[j]==1)||(f[j]-m[i]==0)||(f[j]-m[i]==1))\n            {\n                f[j]=101;\n                t++;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",t);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int b,g,m[101],f[101],i,j,t=0,temp;\n    scanf(\"%d\",&b);\n    for(i=0;i<b;i++)\n    {\n        scanf(\"%d\",&m[i]);\n    }\n    scanf(\"%d\",&g);\n    for(i=0;i<g;i++)\n    {\n        scanf(\"%d\",&f[i]);\n    }\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            if(m[j]<m[i])\n            {\n                temp=m[j];\n                m[j]=m[i];\n                m[i]=temp;\n            }\n        }\n    }\n    for(i=0;i<g;i++)\n    {\n        for(j=0;j<g;j++)\n        {\n            if(f[j]<f[i])\n            {\n                temp=f[j];\n                f[j]=f[i];\n                f[i]=temp;\n            }\n        }\n    }\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<g;j++)\n        {\n            if((m[i]-f[j]==0)||(m[i]-f[j]==1)||(f[j]-m[i]==0)||(f[j]-m[i]==1))\n            {\n                f[j]=200;\n                t++;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",t);\n    return 0;\n}\n"}
{"similarity_score": 0.9875173370319001, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e12e556728686a077211a77b9834cd22", "bug_code_uid": "9e3aa7f1d65b67ef4a16ad95a9b9cf24", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "da83eab3cc401c3f2c35c07b6286be2c", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tlong long n, k, sum=0, mxz=0, mxf=0;\n\tscanf(\"%d\", &n);\n\t\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &k);\n\t\tsum += k;\n\t}\n\t\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &k);\n\t\tif(k > mxz)\n\t\t{\n\t\t\tmxf = mxz;\n\t\t\tmxz = k;\n\t\t}\n\t\telse if(k > mxf)\n\t\t\tmxf = k;\n\t}\n\t\t\n\tif(mxz + mxf >= sum)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long n, k, sum=0, mxz=0, mxf=0;\n\tscanf(\"%I64d\", &n);\n\t\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%I64d\", &k);\n\t\tsum += k;\n\t}\n\t\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%I64d\", &k);\n\t\tif(k > mxz)\n\t\t{\n\t\t\tmxf = mxz;\n\t\t\tmxz = k;\n\t\t}\n\t\telse if(k > mxf)\n\t\t\tmxf = k;\n\t}\n\t\t\n\tif(mxz + mxf >= sum)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9979716024340771, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "52f36826904d9cfb0daec031e52b97af", "bug_code_uid": "3fb35e6bbf258e8eb522adef129631d7", "src_uid": "f110b9351fe8ff20676d11ecfc92aee3", "apr_id": "925e1ca11e7f4fee405b7eae85cc7a54", "difficulty": 1300, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a, b;\nint main() {\n\tint n, m; scanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++) {\n\t\tscanf(\"%d\", &a);\n\t\tint pass = 0;\n\t\tint visited[10004] = { 0 };\n\t\tint visited2[10004] = { 0 };\n\t\tfor (int i = 1; i <= a; i++) {\n\t\t\tscanf(\"%d\", &b);\n\t\t\tif (b < 0) {\n\t\t\t\tif (visited[b] == 1) pass = 1;\n\t\t\t\telse visited2[b] = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (visited2[b] == 1) pass = 1;\n\t\t\t\telse visited[b] = 1;\n\t\t\t}\n\t\t}\n\t\tif (pass == 0) {\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\");\n}", "fixed": "#include <stdio.h>\nint a, b;\nint main() {\n\tint n, m; scanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++) {\n\t\tscanf(\"%d\", &a);\n\t\tint pass = 0;\n\t\tint visited[10004] = { 0 };\n\t\tint visited2[10004] = { 0 };\n\t\tfor (int i = 1; i <= a; i++) {\n\t\t\tscanf(\"%d\", &b);\n\t\t\tif (b < 0) {\n\t\t\t\tif (visited[-b] == 1) pass = 1;\n\t\t\t\telse visited2[-b] = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (visited2[b] == 1) pass = 1;\n\t\t\t\telse visited[b] = 1;\n\t\t\t}\n\t\t}\n\t\tif (pass == 0) {\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\");\n}"}
{"similarity_score": 0.9007782101167315, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "f495d33a8a63123debdcf119e8f687ef", "bug_code_uid": "f0f96b52229e2b39a7e9f16546b0b12e", "src_uid": "e7a07efba27f2b1f9ec7c4a8fb997b00", "apr_id": "b3dc67010cb1b401cc33a7ace994b5f4", "difficulty": 2000, "tags": ["dfs and similar"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint arr[400][400];\nint f(int x, int y)\n{\n\tif(arr[x][y]<4)\n\t\treturn;\n\tarr[x][y+1]+=arr[x][y]/4;\n\tarr[x][y-1]+=arr[x][y]/4;\n\tarr[x+1][y]+=arr[x][y]/4;\n\tarr[x-1][y]+=arr[x][y]/4;\n\tarr[x][y]%=4;\n\tf(x,y+1);\n\tf(x,y-1);\n\tf(x+1,y);\n\tf(x-1,y);\n}\nint main()\n{\n\tint n,t,i;\n\tscanf(\"%d %d\",&n,&t);\n\tarr[200][200]=n;\n\tf(200,200);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tprintf(\"%d\\n\",arr[x+200][y+200]); \n\t}\n\n\nreturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint arr[400][400];\nint f(int x, int y)\n{\n\tif(arr[x][y]<4)\n\t\treturn;\n\tarr[x][y+1]+=arr[x][y]/4;\n\tarr[x][y-1]+=arr[x][y]/4;\n\tarr[x+1][y]+=arr[x][y]/4;\n\tarr[x-1][y]+=arr[x][y]/4;\n\tarr[x][y]%=4;\n\tf(x,y+1);\n\tf(x,y-1);\n\tf(x+1,y);\n\tf(x-1,y);\n}\nint main()\n{\n\tint n,t,i;\n\tscanf(\"%d %d\",&n,&t);\n\tarr[200][200]=n;\n\tf(200,200);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(x+200>400 || y+200>400 || x+200<0 || y+200<0)\n            printf(\"0\\n\");\n        else\n            printf(\"%d\\n\",arr[x+200][y+200]);\n\t}\n\n\nreturn 0;\n\n}\n"}
{"similarity_score": 0.3165775401069519, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "52c744f97a8301099faada44f0aac3d1", "bug_code_uid": "4924d0abc78ed88df32dfb9ec79648e7", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "51356a788c5161ed7826b919bb4eb620", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int n,max = 0,i,cnt,a;\n    scanf(\"%d\",&n);\n    cnt = 0;\n    for(i=1;i<n;i++){\n        if(n%2==0 && n%i == 0){\n            cnt++;\n            if(i>max){\n                max = i;\n            }\n        }\n\n        else if(n%2==1 && n%i == 0){\n        cnt++;\n            if(i>max){\n                max = i;\n            }\n        }\n\n\n    }\n    printf(\"%d\\n\",cnt);\n    a = n/max;\n    for(i=0;i<a;i++){\n        printf(\"%d \",max);\n    }\n    printf(\"\\n\");\n\n   return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a[12],num=0,l=0;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"1\\n1\");\n    }\n    else\n    {\n        for(i=9;i>0;i--)\n        {\n            if(n%i==0)\n            {\n                l=i;\n                num=n/i;\n                break;\n            }\n        }\n        printf(\"%d\\n\",num);\n        for(i=0;i<num;i++)\n        {\n            printf(\"%d \",l);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.45871559633027525, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "7dfdabe58b86c1967ed894faf0f3abed", "bug_code_uid": "a1fc4331a00e4f1c84e82adf4d8e9001", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "99adb03588e8155fee5a714f16209694", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar a[100]={0};\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++){\n    scanf(\"%s\",&a);\n        if(a[i]>='a'&&a[i]<='z')a[i]=a[i]-32;\n    char b[5]={'Y','E','S'};\n    if(strcmp(a,b)==0){\n        printf(\"YES\\n\");\n}else{printf(\"NO\\n\");}\n    }\nreturn 0;\n}\n   \t\t\t \t \t\t\t  \t \t \t \t \t \t \t \t", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[100];\nint main()\n{\n\t\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++){\n\t\t\n\t\tscanf(\"%s\",a);\n\t\t\n\t\tif((a[0]==89||a[0]==121)&&(a[1]==69||a[1]==101)&&(a[2]==83||a[2]==115)){\n\t\t\tprintf(\"YES\\n\");}\n\t\t\telse{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t}\n\t\t\n\t}\n\t\n\treturn 0;\n}\n\t\t\t\t\t \t \t\t\t\t\t\t   \t\t \t\t\t\t     \t"}
{"similarity_score": 0.8036006546644845, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "fd664ddcc91e9287d28437518bf03c6d", "bug_code_uid": "63ef5146c07358909063864476d783c9", "src_uid": "4d5d20fd586ddbea2adeab104a6c2aec", "apr_id": "39bde88dacb633c3e751b91a818afc97", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "    #include<stdio.h>\r\n    int main()\r\n    {\r\n        long long int t;\r\n        scanf(\"%lld\",&t);\r\n        while(t--)\r\n        {\r\n            int m,n,i,p,c=0;\r\n            scanf(\"%d %d\",&m,&n);\r\n            int a[m];\r\n            for(i=0;i<m;i++)\r\n            {\r\n                scanf(\"%d\",&a[i]);\r\n            }\r\n            if(n==1)\r\n            {\r\n                 printf(\"%d\\n\",((m-1)/2));\r\n                 return ;\r\n            }\r\n                for(i=1;i<m-1;i++)\r\n            {\r\n                if(a[i]>a[i-1]+a[i+1])\r\n                    c++;\r\n            }\r\n            printf(\"%d\\n\",c);\r\n\r\n        }\r\n    }\r\n", "fixed": "    #include<stdio.h>\r\n    int main()\r\n    {\r\n        long long int t;\r\n        scanf(\"%lld\",&t);\r\n        while(t--)\r\n        {\r\n            long long int m,n,i,p,c=0;\r\n            scanf(\"%lld %lld\",&m,&n);\r\n            long long int a[m];\r\n            for(i=0;i<m;i++)\r\n            {\r\n                scanf(\"%lld\",&a[i]);\r\n            }\r\n             for(i=1;i<m-1;i++)\r\n            {\r\n                if(a[i]>a[i-1]+a[i+1])\r\n                    c++;\r\n            }\r\n            if(n==1)\r\n            {\r\n                 c=((m-1)/2);\r\n            }\r\n            printf(\"%lld\\n\",c);\r\n       }\r\n    }\r\n"}
{"similarity_score": 0.9970777323202805, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d09c3c78897a1cf92fc299cb20729ead", "bug_code_uid": "b1b35f8da196e542418ad33239be2dcc", "src_uid": "edd556d60de89587f1b8daa893538530", "apr_id": "3d03bf2536fcf185062b0f58b88cefef", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n  int n,m,i,j=0,cnt=0;\n  scanf(\"%d %d\",&n,&m);\n  char a[m][30],b[m][30],str[30000];\n  char splitStrings[3000][30];\n  for(i=0;i<m;i++)\n  {\n    \n    scanf(\"%s %s\",a[i],b[i]);\n  }\n \n  fgets(str,30,stdin);\n  scanf(\"%[^\\n]s\",str);\n  for(i=0;i<=(strlen(str));i++)\n\t{\n\t\t\n\t\tif(str[i]==' '||str[i]=='\\0')\n\t\t{\n\t\t\tsplitStrings[cnt][j]='\\0';\n\t\t\tcnt++;\t\n\t\t\tj=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsplitStrings[cnt][j]=str[i];\n\t\t\tj++;\n\t\t}\n\t}\n  int size=cnt*12;\n  char sen[size];\n  for(i=0;i<cnt;i++)\n  {\n    for(j=0;j<m;j++)\n    {\n      if(strcmp(a[j],splitStrings[i])==0)\n      {\n       \n        if(strlen(b[j])<strlen(a[j]))\n        strcpy(splitStrings[i],b[j]);\n        else\n        strcpy(splitStrings[i],a[j]);\n      }\n    }\n    \n  }\n  for(i=0;i<n;i++)\n  {\n    printf(\"%s \",splitStrings[i]);\n  }\n  return 0;\n  \n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n  int n,m,i,j=0,cnt=0;\n  scanf(\"%d %d\",&n,&m);\n  char a[m][30],b[m][30],str[300000];\n  char splitStrings[3000][30];\n  for(i=0;i<m;i++)\n  {\n    \n    scanf(\"%s %s\",a[i],b[i]);\n  }\n \n  fgets(str,30,stdin);\n  scanf(\"%[^\\n]s\",str);\n  for(i=0;i<=(strlen(str));i++)\n\t{\n\t\t\n\t\tif(str[i]==' '||str[i]=='\\0')\n\t\t{\n\t\t\tsplitStrings[cnt][j]='\\0';\n\t\t\tcnt++;\t\n\t\t\tj=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsplitStrings[cnt][j]=str[i];\n\t\t\tj++;\n\t\t}\n\t}\n  int size=cnt*30;\n  char sen[size];\n  for(i=0;i<cnt;i++)\n  {\n    for(j=0;j<m;j++)\n    {\n      if(strcmp(a[j],splitStrings[i])==0)\n      {\n       \n        if(strlen(b[j])<strlen(a[j]))\n        strcpy(splitStrings[i],b[j]);\n        else\n        strcpy(splitStrings[i],a[j]);\n      }\n    }\n    \n  }\n  for(i=0;i<n;i++)\n  {\n    printf(\"%s \",splitStrings[i]);\n  }\n  return 0;\n  \n}"}
{"similarity_score": 0.7668918918918919, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "8d3c8cdea5592fbb06472d3bc50c004b", "bug_code_uid": "b03acc205f12b1452260baac269ccf72", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "6ef31f8c27970b0f2286c6038d315e8b", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n,m,s[1002],c,k,i,a,sum=0,total=0;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(i=1;i<=m+1;i++){\n\t\tscanf(\"%d\",&s[i]);\n\t}\n\tfor(i=1;i<=m;i++){\n\t\tsum=0;\n\t\tc=abs(s[m+1]-s[i]);\n\t\twhile(c/2!=0){\n\t\t\tif(c%2==1)\n\t\t\tsum++;\n\t\t\tc=c/2;\n\t\t}\n\t\tif(sum<=k-1)\n\t\ttotal++;\n\t}\n\tprintf(\"%d\",total);\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\tint n,m,s[1002],c,k,i,a,sum=0,total=0;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(i=1;i<=m+1;i++){\n\t\tscanf(\"%d\",&s[i]);\n\t}\n\tfor(i=1;i<=m;i++){\n\t\tsum=0;\n\t\tc=s[m+1]^s[i];\n\t\twhile(c){\n\t\t\tsum++;\n\t\t\tc=c&(c-1);\n\t\t}\n\t\t\n\t\tif(sum<=k){\n\t\t\ttotal++;\n\t\t}\n\t}\n\tprintf(\"%d\",total);\n}\n"}
{"similarity_score": 0.9008264462809917, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "47affcee74f60c740c5babfe97ef2dc2", "bug_code_uid": "2c44c17d06509ceecbf497934c0e7b88", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "8743a87f3efce958b597f11a767a3dce", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char s[10000];\n    int i,c[10000]={0},v=0;\n    scanf(\"%s\",s);\n    for(i=1;i<strlen(s)-1;i=i+3)\n    {\n        if(((int)(s[i])>=97)&&((int)(s[i])<=122))\n        {\n            c[s[i]-97]++\n        }\n    }\n    for(i=0;i<26;i++)\n    {\n        if(c[i]>0)\n        {\n            v++;\n        }\n    }\n    printf(\"%d\\n\",v);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[10000];\n    int i,c[10000]={0},v=0;\n    gets(s);\n    for(i=1;i<strlen(s)-1;i=i+3)\n    {\n        if(s[i]>=97&& s[i]<=122)\n        {\n            c[s[i]-97]++;\n        }\n    }\n    for(i=0;i<26;i++)\n    {\n        if(c[i]>0)\n        {\n            v++;\n        }\n    }\n    printf(\"%d\\n\",v);\n    return 0;\n}\n"}
{"similarity_score": 0.23893805309734514, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "918979a477b89c6205f0e78746327e9d", "bug_code_uid": "f835cfe1045e49404846f389e35a1a18", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "e22a9ff7a338ff08b919beabff2cdb70", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "for i in range(input()):\n    print ['YES', 'NO'][360%(180-input())>0]", "fixed": "#include<stdio.h>\nmain()\n{\nint i,j,k,t,n;\n\nscanf(\"%d\",&t);\nwhile(t--)\n{\nscanf(\"%d\",&n);\nif(360%(180-n)==0)printf(\"YES\\n\");\nelse printf(\"NO\\n\");\n}\nreturn 0;\n}"}
{"similarity_score": 0.31547619047619047, "equal_cnt": 28, "replace_cnt": 22, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "b7d6caa69fe46c4a01c42412ab8ce3bf", "bug_code_uid": "ba75193c4f69f7bcb888829558d54657", "src_uid": "45ac482a6b95f44a26b7363e6756c8d1", "apr_id": "e5b7f3a428687ff7a5dd33c4707d3c88", "difficulty": 1800, "tags": ["ternary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <stdint.h> \n#include <inttypes.h>\n\ntypedef struct autos{\n\tuint64_t c;\n\tuint64_t x;\n\tuint64_t y;\n}autito;\nint main() {\n\tuint64_t m, n, x=0, y=0;\n\tuint64_t t, ti, tj, c=-1, ok=1, k,a, i, j, menor;\n\tscanf(\"%\"PRIu64, &n); scanf(\"%\"PRIu64, &m);\n\tautito autos[n*m];\n\tuint64_t hori[n+1], verti[m+1];\n\tfor(i=0; i<n; i++){\n\t\tfor(j=0; j<m; j++){\n\t\t\tscanf(\"%\"PRIu64, &a);\n\t\t\t\tif(a>0){\n\t\t\t\t\tc++;\n\t\t\t\t\t\tautos[c].c=a;\n\t\t\t\t\t\tautos[c].x=(i+0.5)*4;\n\t\t\t\t\t\tautos[c].y=(j+0.5)*4;\n\t\t\t\t}\n\t\t}\n\t}\n\tmenor=999999999999999999;\n\tif(c>-1){\n\t\n\tk=0;\n\tfor(i=0; i<=n; i++){\n\t\thori[i]=0;\n\t\tfor(j=0; j<=c; j++){\n\t\t\thori[i]+=autos[j].c*((i*4-autos[j].x)*(i*4-autos[j].x));\n\t\t}\n\t\tif(hori[i]<menor){\n\t\t\tmenor=hori[i];\n\t\t\tx=i;\n\t\t}else\n\t\t\ti=n+1;;\n\t}\n\n\tmenor=999999999999999999;\n\tk=0;\n\tfor(i=0; i<=m; i++){\n\t\tverti[i]=0;\n\t\tfor(j=0; j<=c; j++){\n\t\t\tverti[i]+=autos[j].c*((i*4-autos[j].y)*(i*4-autos[j].y));\n\t\t}\n\t\tif(verti[i]<menor){\n\t\t\tmenor=verti[i];\n\t\t\ty=i;\n\t\t}else\n\t\t\ti=m+1;\n\t}\n\n\tt=verti[y]+hori[x];\n\t}else{\n\t\tt=0;\n\t\tx=0;\n\t\ty=0;\n\t}\n\tprintf(\"%\"PRIu64, t);\n\tprintf(\"\\n%\"PRIu64, x); printf(\" %\"PRIu64, y);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h> \n#include <inttypes.h>\n\n\nint main() {\n\tuint64_t m,n,j,menor,i,t=0, x=0, y=0, tt=0;\n\tscanf(\"%\"PRIu64, &n);\n\tscanf(\"%\"PRIu64, &m);\n\tuint64_t vecn[1000]={0};\n\tuint64_t vecm[1000]={0};\n\tfor (i=0; i<n; i++){\n\t\tfor(j=0; j<m; j++){\n\t\t\tscanf(\"%\"PRIu64, &menor);\n\t\t\tif(menor>0){\n\t\t\t\tvecn[i]+=menor;\n\t\t\t\tvecm[j]+=menor;\n\t\t\t}\n\t\t}\n\t}\n\tmenor=999999999999999999;\n\tfor(i=0; i<=n; i++){\n\t\tt=0;\n\t\tfor(j=0; j<n; j++){\n\t\t\tt+=(vecn[j])*((i*4-(j+0.5)*4)*(i*4-(j+0.5)*4));\n\t\t}\n\t\tif(t<menor){\n\t\t\tmenor=t;\n\t\t\tx=i;\n\t\t}\n\t}\n\t\n\ttt+=menor;\n\tmenor=999999999999999999;\n\t\n\tfor(i=0; i<=m; i++){\n\t\tt=0;\n\t\tfor(j=0; j<m; j++){\n\t\t\tt+=vecm[j]*(i*4-(j+0.5)*4)*(i*4-(j+0.5)*4);\n\t\t}if(t<menor){\n\t\t\tmenor=t;\n\t\t\ty=i;\n\t\t}\n\t}\n\ttt+=menor;\n\n\tprintf(\"%\"PRIu64, tt);\n\tprintf(\"\\n\");\n\tprintf(\"%\"PRIu64, x);\n\tprintf(\" %\"PRIu64, y);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7895927601809954, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "55911697e4dfadfe9f55834f8e6a7184", "bug_code_uid": "58ce06637da3e0f30d3a6502a37fea64", "src_uid": "a74c65acd41ff9bb845062222135c60a", "apr_id": "c0556fe57c804aeb0df70b81cbfd7d48", "difficulty": 900, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>    \n#include <math.h>\ntemplate <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b<a)a = b; }  \nint X, Y, n;  \nint x, y, v;  \nint main()  \n{  \n   scanf(\"%d%d%d\", &X, &Y, &n);\n\n        double ans = 1e9;  \n        while (n--)  \n        {  \n            scanf(\"%d%d%d\", &x, &y, &v);  \n            gmin(ans, sqrt((x - X)*(x - X) + (y - Y)*(y - Y)) / v);  \n        }  \n        printf(\"%.10f\\n\", ans);  \n    \n    return 0;  \n}  ", "fixed": "#include<stdio.h>    \n#include <math.h>\nint X, Y, n;  \nint x, y, v;  \ndouble gmin(double a, double b)\n{\n\tif(a > b) return b;\n\treturn a;\n}\nint main()  \n{  \n   scanf(\"%d%d%d\", &X, &Y, &n);\n\n        double ans = 1e9;  \n        while (n--)  \n        {  \n            scanf(\"%d%d%d\", &x, &y, &v);  \n            ans = gmin(ans, sqrt((x - X)*(x - X) + (y - Y)*(y - Y)) / v);  \n        }  \n        printf(\"%.10f\\n\", ans);  \n    \n    return 0;  \n}  "}
{"similarity_score": 0.9937018894331701, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "18888e89f24127ecf610eea8a83c1dce", "bug_code_uid": "0bcec6695677cccf96c46346e9159f35", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "feb9601ada595987c9eb15ef9f67175c", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tint x1,y1,x2,y2,x3,y3,x4,y4;\n\tscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n\tif(x1==x2)\n\t{\n\t\tx3=x2+y2-y1;\n\t\ty3=y2;\n\t\tx4=x3;\n\t\ty4=y1;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(y1==y2)\n\t{\n\t\tx3=x2;\n\t\ty3=y1+x2-x1;\n\t\tx4=x1;\n\t\ty4=y3;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(x2==y2 && x2!=0 && x1==y1)\n\t{\n\t\tx3=x2;\n\t\ty3=y1;\n\t\tx4=x1;\n\t\ty4=x2;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(x1==y1 && x1!=0 && x2==y2)\n\t{\n\t\tx3=x1;\n\t\ty3=y2;\n\t\tx4=x2;\n\t\ty4=x1;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(abs(x2-y2)==abs(x1-y1))\n\t{\n\t\tx3=x2;\n\t\ty3=y1;\n\t\tx4=x1;\n\t\ty4=y2;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse \n\t\tprintf(\"-1\");\n\treturn 0;\n\t\n}", "fixed": "\n#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tint x1,y1,x2,y2,x3,y3,x4,y4;\n\tscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n\tif(x1==x2)\n\t{\n\t\tx3=x2+y2-y1;\n\t\ty3=y2;\n\t\tx4=x3;\n\t\ty4=y1;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(y1==y2)\n\t{\n\t\tx3=x2;\n\t\ty3=y1+x2-x1;\n\t\tx4=x1;\n\t\ty4=y3;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(x2==y2 && x2!=0 && x1==y1)\n\t{\n\t\tx3=x2;\n\t\ty3=y1;\n\t\tx4=x1;\n\t\ty4=x2;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(x1==y1 && x1!=0 && x2==y2)\n\t{\n\t\tx3=x1;\n\t\ty3=y2;\n\t\tx4=x2;\n\t\ty4=x1;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse if(abs(x2-x1)==abs(y2-y1))\n\t{\n\t\tx3=x2;\n\t\ty3=y1;\n\t\tx4=x1;\n\t\ty4=y2;\n\t\tprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\t}\n\telse \n\t\tprintf(\"-1\");\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.9170731707317074, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d915b0e679089240ab55e4bb9fb51372", "bug_code_uid": "e72df7f55aa410a1c479cfde3f2747d5", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "3c84b48cd28f30b1bb2ef85bdcb4df01", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[101], b[101],n,m, maxa,maxb,i;\nint main()\n{\n    scanf(\"%d\", &n);\n    for (i = 1; i<=n; i++)\n        scanf(\"%d\", &a[i]);\n    scanf(\"%d\", &m);\n    for (i = 1; i<=m; i++)\n        scanf(\"%d\", &b[i]);\n    maxa = a[1]; maxb = b[1];\n    for (i = 2; i <= n; i++)\n        if (b[i] > maxb) maxb = b[i];\n    printf(\"%d %d\", maxa, maxb);\n    \n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint a[101], b[101],n,m, maxa,maxb,i;\nint main()\n{\n    scanf(\"%d\", &n);\n    for (i = 1; i<=n; i++)\n        scanf(\"%d\", &a[i]);\n    scanf(\"%d\", &m);\n    for (i = 1; i<=m; i++)\n        scanf(\"%d\", &b[i]);\n    maxa = a[1]; maxb = b[1];\n    for (i = 2; i <= n; i++)\n        if (a[i] > maxa) maxa = a[i];\n    for (i = 2; i <= m; i++)\n        if (b[i] > maxb) maxb = b[i];\n    printf(\"%d %d\", maxa, maxb);\n    \n    \n    return 0;\n}"}
{"similarity_score": 0.6071842410196987, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2ce1a0649d70fc2c8ad5a10f8f2cfbfe", "bug_code_uid": "d32a45471bc96d702c73fecf4bbf164f", "src_uid": "6bb26991c9ea70e51a6bda5653de8131", "apr_id": "6a4a4cbc227322c5ba94e79b0279a73d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,k,i,cnt=0;\n    scanf(\"%d %d\",&n,&k);\n    int b[n],a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        int count=0;\n        while(a[i]!=0){\n            a[i]/=10;\n            count++;\n        }\n        b[i]=count;\n    }\n    for(i=0;i<n;i++){\n    if(b[i]<=k){\n        cnt++;\n    }\n}\nprintf(\"%d\\n\",cnt);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,k,i,cnt=0,r;\n    scanf(\"%d %d\",&n,&k);\n    int b[n],a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        int count=0;\n        while(a[i]!=0){\n                r=a[i]%10;\n            if((r==4)||(r==7)){\n            count++;\n        }\n        a[i]=a[i]/10;\n        }\n        b[i]=count;\n    }\n    for(i=0;i<n;i++){\n    if(b[i]<=k){\n        cnt++;\n    }\n}\nprintf(\"%d\\n\",cnt);\nreturn 0;\n}\n"}
{"similarity_score": 0.41865284974093264, "equal_cnt": 17, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "24a98bc1a215788008cd5cc51213cecd", "bug_code_uid": "b743d3a18bcd14b80721dd7986a20edd", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "901b13a74bf61805b26a0ae8b68eef11", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n[990],i;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        for(i=1;i<=t;i++)\r\n        {\r\n            scanf(\"%d\",&n[i]);\r\n        }\r\n        for(i=1;i<=t;i++)\r\n        {\r\n            if(n[i]%7==0)\r\n            {\r\n                n[i]==n[i];\r\n            }\r\n            else\r\n            {\r\n                n[i]=(n[i]/7)*7;\r\n            }\r\n        }\r\n         for(i=1;i<=t;i++)\r\n         {\r\n             printf(\"%d\\n\",n[i]);\r\n         }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int M, N, O, m, n, o, i;\r\n\r\n    scanf(\"%d\",&M);\r\n\r\n    while(M--)\r\n    {\r\n\r\n        scanf(\"%d\",&N);\r\n\r\n        if(N % 7)\r\n        {\r\n\r\n            m = N - (N % 10);\r\n\r\n            if(!m)  m = 1;\r\n\r\n            for(i = m; i <= m + 10; i++)\r\n            {\r\n                if(!(i % 7))\r\n                    break;\r\n            }\r\n\r\n            printf(\"%d\\n\",i);\r\n        }\r\n        else\r\n            printf(\"%d\\n\",N);\r\n    }\r\n}"}
{"similarity_score": 0.9155555555555556, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3186645c1cfcb8b42e71eb74fad4a546", "bug_code_uid": "ba0912452228af4383ae37debff90686", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "e757da75f7cc6436cb89ffa5e304e8b8", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int a,b,c,d,i,n,m,l;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n       scanf(\"%d\",&m) ;\n\n    char s[m+1];\nscanf(\"%s\",s);\n    l=strlen(s);\n    a=l-11;\n\n    for(i=0;i<=a;i++)\n    {\n        if(s[i]=='8')\n        {\n\n            break;\n\n        }\n    }\n    if(i==a+1)\n    {\n       printf(\"NO\\n\");\n\n    }\n    else\n    {\n\n            printf(\"YES\\n\");\n\n    }\n\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int a,b,c,d,i,n,m,l;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n       scanf(\"%d\",&m) ;\n\n    char s[m+1];\nscanf(\"%s\",s);\n    l=strlen(s);\n    a=l-11;\n    if(m<11)\n    {\n        printf(\"NO\\n\");\n    }\n    else\n    {\n\n\n\n    for(i=0;i<=a;i++)\n    {\n        if(s[i]=='8')\n        {\n\n            break;\n\n        }\n    }\n    if(i==a+1)\n    {\n       printf(\"NO\\n\");\n\n    }\n    else\n    {\n\n            printf(\"YES\\n\");\n\n    }\n\n    }\n    }\n}\n"}
{"similarity_score": 0.922890103217972, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8e40edec4e83a2e8deef798e06549512", "bug_code_uid": "4de83fd03631ab39ed7a4c221109a0cd", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "6fccb5e3a8773f872a092f42f2e62bca", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint a[100010], n,sum=0,i,count25=0,count50=0;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==25)\n        {\n            count25++;\n        }\n        else if(a[i]==50)\n        {\n            count50++;\n            count25--;\n        }\n        else if(a[i]==100)\n        {\n            if(count50>0&&count25>0)\n            {\n                count50--;\n                count25--;\n            }\n            else if(count50<1)\n            {\n                count25=count25-3;\n            }\n        }\n        if(count25<0||count50<0)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint a[100010], n,sum=0,i,count25=0,count50=0;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==25)\n        {\n            count25++;\n        }\n        else if(a[i]==50)\n        {\n            count50++;\n            count25--;\n        }\n        else if(a[i]==100)\n        {\n            if(count50>0&&count25>0)\n            {\n                count50--;\n                count25--;\n            }\n            else if(count50<1)\n            {\n                count25=count25-3;\n            }\n            else if(count50>0&&count25==0)\n            {\n                printf(\"NO\");\n                return 0;\n            }\n        }\n        if(count25<0||count50<0)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.9527220630372493, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a009101146ab4a3f421599acd2724d66", "bug_code_uid": "d8558ae6c577ae84b753d91f4e8dbd1b", "src_uid": "8f52241c690ec4f9af71a52904fb19a0", "apr_id": "b021056ea88249af2b6fd8f409139254", "difficulty": 1400, "tags": ["combinatorics", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char Str[1000001];\n    scanf(\"%s\", Str);\n    int len = strlen(Str);\n    int callen = 0, pos, ans = 0;\n    int MOD = 1e9 + 7;\n    for(int i = len - 1; i >= 0; --i) {\n        if(Str[i] == 'b') {\n            while(i >= 0 && Str[i] == 'b') {\n                ++callen;\n                --i;\n                pos = i;\n            }\n            break;\n        }\n    }\n    if(callen) {\n        for(int i = pos; i >= 0; --i) {\n            if(Str[i] == 'a') {\n                ans = (ans + callen) % MOD;\n                callen = (callen * 2) % MOD;\n            }\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char Str[1000001];\n    scanf(\"%s\", Str);\n    int len = strlen(Str);\n    int callen = 0, pos, ans = 0;\n    int MOD = 1e9 + 7;\n    for(int i = len - 1; i >= 0; --i) {\n        if(Str[i] == 'b') {\n            while(i >= 0 && Str[i] == 'b') {\n                ++callen;\n                --i;\n                pos = i;\n            }\n            break;\n        }\n    }\n    if(callen) {\n        for(int i = pos; i >= 0; --i) {\n            if(Str[i] == 'a') {\n                ans = (ans + callen) % MOD;\n                callen = (callen * 2) % MOD;\n            } else {\n                callen = (callen + 1) % MOD;\n            }\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9981447124304267, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "92588cf70e4ad07e53a0303c92e3319f", "bug_code_uid": "2c0dca68b36ef2b20b25a8de909c742a", "src_uid": "ed5ea0e664aa986ab86e4e6746e8a1bf", "apr_id": "b3f2a99580fda6d5a350534f87c8446b", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\nint comp(const void*a,const void*b)\n{\n\treturn *(int*)a-*(int*)b;\n}\nint main()\n{\n\tint q,count;\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tlong long int n;\n\t\tcount=0;\n\t\tscanf(\"%l64d\",&n);\n\t\twhile(n!=1)\n\t\t{\n\t\t\tif(n%2==0)\n\t\t\t{\n\t\t\t\tn>>=1;\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\t\n\t\t\t}\n\t\t\tif(n%3==0)\n\t\t\t{\n\t\t\t\tn/=3;\n\t\t\t\tn<<=1;\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(n%5==0)\n\t\t\t{\n\t\t\t\tn/=5;\n\t\t\t\tn<<=2;\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcount=-1;\n\t\t\tn=1;\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\nint comp(const void*a,const void*b)\n{\n\treturn *(int*)a-*(int*)b;\n}\nint main()\n{\n\tint q,count;\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tlong long int n;\n\t\tcount=0;\n\t\tscanf(\"%I64d\",&n);\n\t\twhile(n!=1)\n\t\t{\n\t\t\tif(n%2==0)\n\t\t\t{\n\t\t\t\tn>>=1;\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\t\n\t\t\t}\n\t\t\tif(n%3==0)\n\t\t\t{\n\t\t\t\tn/=3;\n\t\t\t\tn<<=1;\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(n%5==0)\n\t\t\t{\n\t\t\t\tn/=5;\n\t\t\t\tn<<=2;\n\t\t\t\tcount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcount=-1;\n\t\t\tn=1;\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9656652360515021, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "cc94a8fa3fe66e5576158746a5944674", "bug_code_uid": "dd43d3bb961bfec859234a94ba7c4dec", "src_uid": "2c921093abf2c5963f5f0e96cd430456", "apr_id": "3f954cb84974bf615a801bd97bc74fe9", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n   int t;\n   scanf(\"%d\", &t);\n   while(t--)\n   \n   {\n       long int n,b,x,y,sum=0;\n       scanf(\"%ld %ld %ld %ld\", &n,&b,&x,&y);\n       int a=0;\n       for(int i=0;i<n;i++)\n       {\n           if((a+x)<=b)\n           {\n               a=a+x;\n           }\n           else\n           {\n               a=a-y;\n           }\n\n           sum = sum+a;\n       }\n       printf(\"%ld\\n\", sum);\n       sum=0;\n       a=0;\n   }\n\n   return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n   int t;\n   scanf(\"%d\", &t);\n   while(t--)\n   \n   {\n       long long int n,b,x,y,sum=0;\n       scanf(\"%lld %lld %lld %lld\", &n,&b,&x,&y);\n       int a=0;\n       for(int i=0;i<n;i++)\n       {\n           if((a+x)<=b)\n           {\n               a=a+x;\n           }\n           else\n           {\n               a=a-y;\n           }\n\n           sum = sum+a;\n       }\n       printf(\"%lld\\n\", sum);\n       sum=0;\n       a=0;\n   }\n\n   return 0;\n}"}
{"similarity_score": 0.9976976208749041, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "460e6e2879f51100d78527c94845f91b", "bug_code_uid": "361c98ca189e22bf4c93155e257c01ab", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "89f3f769d35b86f5886d2d105e014650", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n     long long int n,m,i,j,k,l,o,p;\n     scanf(\"%I64d %I64d\",&n,&m);\n     long long int a[n],b[m];\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%I64d\",&a[i]);\n     }\n     for(i=1;i<=m;i++)\n     {\n          scanf(\"%I64d\",&b[i]);\n     }l=0;\n     for(i=1;i<=n;i++)\n     {\n          for(j=1;j<=m;j++)\n          {\n               if(a[i]>=b[j])\n               {\n                    l++;\n                    for(k=j;k<m;k++)\n                    {\n                         b[k]=b[k+1];\n                    }\n                    m--;\n                    break;\n               }\n          }\n     }\n     printf(\"%I64d\",(n-l));\n}", "fixed": "#include <stdio.h>\nint main()\n{\n     long long int n,m,i,j,k,l,o,p;\n     scanf(\"%I64d %I64d\",&n,&m);\n     long long int a[n],b[m];\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%I64d\",&a[i]);\n     }\n     for(i=1;i<=m;i++)\n     {\n          scanf(\"%I64d\",&b[i]);\n     }l=0;\n     for(i=1;i<=n;i++)\n     {\n          for(j=1;j<=m;j++)\n          {\n               if(a[i]<=b[j])\n               {\n                    l++;\n                    for(k=j;k<=m;k++)\n                    {\n                         b[k]=b[k+1];\n                    }\n                    m--;\n                    break;\n               }\n          }\n     }\n     printf(\"%I64d\",(n-l));\n}"}
{"similarity_score": 0.9554973821989529, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e15d96291abc11547ebca5a1d1e95b81", "bug_code_uid": "59e49b1b405b9081d6f8a29e46b73f59", "src_uid": "b34846d90dc011f2ef37a8256202528a", "apr_id": "a0fe327dccbee025677e812154f18eda", "difficulty": 1200, "tags": ["greedy", "constructive algorithms", "math", "implementation", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tlong long int b,s,d,t,ans=0;\n\tscanf(\"%I64lld%I64lld%I64lld\",&b,&s,&d);\n\t   if(b<d)\n\t\t{\n\t\t\tt=d;\n\t\t\td=b;\n\t\t\tb=t;\n\t\t}\n\t\tif(b<s)\n\t\t{\n\t\t\tt=b;\n\t\t\tb=s;\n\t\t\ts=t;\n\t\t}\n\t\t\n\t\tif(s<d)\n\t\t{\n\t\t\tt=d;\n\t\t\td=s;\n\t\t\ts=t;\n\t\t}\n\t\tprintf(\"%lld%lld%lld\\n\",b,s,d);\n\t\tif(b==s&&s==d)\n\t\t\tans=0;\n\t\telse if(b>s)\n\t\t\tans=b-1-s+b-1-d;\n\t\telse if(b==s)\n\t\t\tans=b-1-d;\n\t\tprintf(\"%I64lld\",ans);\n\t\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong long int b,s,d,t,ans=0;\n\tscanf(\"%I64lld%I64lld%I64lld\",&b,&s,&d);\n\t   if(b<d)\n\t\t{\n\t\t\tt=d;\n\t\t\td=b;\n\t\t\tb=t;\n\t\t}\n\t\tif(b<s)\n\t\t{\n\t\t\tt=b;\n\t\t\tb=s;\n\t\t\ts=t;\n\t\t}\n\t\t\n\t\tif(s<d)\n\t\t{\n\t\t\tt=d;\n\t\t\td=s;\n\t\t\ts=t;\n\t\t}\n\t\tif(b==s&&s==d)\n\t\t\tans=0;\n\t\telse if(b>s)\n\t\t\tans=b-1-s+b-1-d;\n\t\telse if(b==s)\n\t\t\tans=b-1-d;\n\t\tprintf(\"%I64lld\",ans);\n\t\treturn 0;\n}"}
{"similarity_score": 0.7924187725631769, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "9e2ff8e109e5fb1e53474195c80003a4", "bug_code_uid": "13baa560fa75c6d38ac5c6107f6875a8", "src_uid": "8d5fe8eee1cce522e494231bb210950a", "apr_id": "31779f1ffc59ad9ca20e2d76e9efc146", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,i,p,pwr,mxpw;\n    long long k;\n    scanf(\"%d %I64d\",&n,&k);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&pwr);\n        if(i==0){\n            mxpw=pwr;\n            p=i;\n        }\n        else if(pwr>mxpw){\n            if((i-p)>k){\n                break;\n            }\n            else{\n                mxpw=pwr;\n                p=i;\n            }\n        }\n    }\n    printf(\"%d\\n\",mxpw);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,i,p,mxpw;\n    long long k;\n    scanf(\"%d %I64d\",&n,&k);\n    int pwr[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&pwr[i]);\n        if(i==0){\n            mxpw=pwr[i];\n            p=i;\n        }\n        else if(pwr[i]>mxpw){\n            if((i-p)>k){\n                break;\n            }\n            else if((i-p)==k){\n                if((pwr[p-1]<pwr[p])&&p!=0) break;\n                else{\n                    mxpw=pwr[i];\n                    p=i;\n                }\n            }\n            else{\n                mxpw=pwr[i];\n                p=i;\n            }\n        }\n    }\n    printf(\"%d\\n\",mxpw);\n    return 0;\n}\n"}
{"similarity_score": 0.9932785660941, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "38ab3d10f9d4d1ac9cbc8398703c9769", "bug_code_uid": "0bdd8ed847e967d06eaa3d7a1281c00d", "src_uid": "3fe51d644621962fe41c32a2d90c7f94", "apr_id": "fc9305af25a79de044d2a858ca60eb72", "difficulty": 800, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid solve()\n{\n    int n;\n    scanf(\" %d\", &n);\n\n    int arr[n];\n    for (int i = 0; i < n; i++)\n        scanf(\" %d\", &arr[i]);\n\n    int oddIndex1 = -1;\n\n    for (int i = 0; i < n; i++) {\n        if (arr[i] % 2 == 0) {\n            printf(\"1\\n\");\n            printf(\"%d\\n\", i + 1);\n            return;\n        }\n\n        else if (oddIndex1 >= 0) {\n            printf(\"2\\n\");\n            printf(\"%d %d\\n\", oddIndex1 + 1, i + 1);\n            return;\n        }\n\n        else {\n            oddIndex1 = i;\n        }\n    }\n\n    printf(\"-1\\n\");\n    return;\n}\n\nint main()\n{\n    // int times;\n    // scanf(\" %d\", &times);\n\n    // while (times--)\n        solve();\n}", "fixed": "#include <stdio.h>\n\nvoid solve()\n{\n    int n;\n    scanf(\" %d\", &n);\n\n    int arr[n];\n    for (int i = 0; i < n; i++)\n        scanf(\" %d\", &arr[i]);\n\n    int oddIndex1 = -1;\n\n    for (int i = 0; i < n; i++) {\n        if (arr[i] % 2 == 0) {\n            printf(\"1\\n\");\n            printf(\"%d\\n\", i + 1);\n            return;\n        }\n\n        else if (oddIndex1 >= 0) {\n            printf(\"2\\n\");\n            printf(\"%d %d\\n\", oddIndex1 + 1, i + 1);\n            return;\n        }\n\n        else {\n            oddIndex1 = i;\n        }\n    }\n\n    printf(\"-1\\n\");\n    return;\n}\n\nint main()\n{\n    int times;\n    scanf(\" %d\", &times);\n\n    while (times--)\n        solve();\n}"}
{"similarity_score": 0.90992835209826, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "226d5a156b2abf9bf5b3db06f7b1eb17", "bug_code_uid": "baaaf3a7c43306924096f43c67a9967d", "src_uid": "8e9ba5a2472984cd14b99790a157acd5", "apr_id": "a3f8f88e852fb0e80d03ec5865a37511", "difficulty": 1500, "tags": ["binary search", "greedy", "math", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint s[1010]; \r\n\r\nint min(int a,int b){\r\n\tif(a<=b){\r\n\t\treturn a;\r\n\t}\r\n\telse{\r\n\t\treturn b;\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n,k,ans=0;\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tmemset(s,0,sizeof(s));\r\n\t\tint a;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&a);\r\n\t\t\tans=ans+a/k;\r\n\t\t\ts[a%k]++;\r\n\t\t}\r\n\t\tfor(int i=1;i<=k/2;i++){\r\n\t\t\tif(i!=k-i){\r\n\t\t\t\tint b=min(s[i],s[k-i]);\r\n\t\t\t\tans=ans+b;\r\n\t\t\t\ts[i]=s[i]-b;\r\n\t\t\t\ts[k-i]=s[k-i]-b;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint j=k-1;\r\n\t\tfor(int i=1;i<k&&i<=j;i++){\r\n\t\t\twhile(i+j<k){\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\tif(i>j){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(s[i]!=0){\r\n\t\t\t\tif(i==j){\r\n\t\t\t\t\tans=ans+s[i]/2;\r\n\t\t\t\t}\r\n\t\t\t\tif(s[i]<=s[j]){\r\n\t\t\t\t\ts[j]=s[j]-s[i];\r\n\t\t\t\t\tans=ans+s[i];\r\n\t\t\t\t\ts[i]=0;\r\n\t\t\t\t\tif(s[j]==0){\r\n\t\t\t\t\t\tj--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ts[i]=s[i]-s[j];\r\n\t\t\t\t\tans=ans+s[j];\r\n\t\t\t\t\ts[j]=0;\r\n\t\t\t\t\tj--;\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nlong long s[1010]; \r\n\r\nlong long min(long long a,long long b){\r\n\tif(a<=b){\r\n\t\treturn a;\r\n\t}\r\n\telse{\r\n\t\treturn b;\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tlong long t;\r\n\tscanf(\"%lld\",&t);\r\n\twhile(t--){\r\n\t\tlong long n,k,ans=0;\r\n\t\tscanf(\"%lld%lld\",&n,&k);\r\n\t\tmemset(s,0,sizeof(s));\r\n\t\tlong long a;\r\n\t\tfor(long long i=0;i<n;i++){\r\n\t\t\tscanf(\"%lld\",&a);\r\n\t\t\tans=ans+a/k;\r\n\t\t\ts[a%k]++;\r\n\t\t}\r\n\t\tfor(long long i=1;i<=k/2;i++){\r\n\t\t\tif(i!=k-i){\r\n\t\t\t\tlong long b=min(s[i],s[k-i]);\r\n\t\t\t\tans=ans+b;\r\n\t\t\t\ts[i]=s[i]-b;\r\n\t\t\t\ts[k-i]=s[k-i]-b;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlong long j=k-1;\r\n\t\tfor(long long i=1;i<k&&i<=j;i++){\r\n\t\t\twhile(i+j<k){\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\tif(i>j){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(s[i]!=0){\r\n\t\t\t\tif(i==j){\r\n\t\t\t\t\tans=ans+s[i]/2;\r\n\t\t\t\t}\r\n\t\t\t\tif(s[i]<=s[j]){\r\n\t\t\t\t\ts[j]=s[j]-s[i];\r\n\t\t\t\t\tans=ans+s[i];\r\n\t\t\t\t\ts[i]=0;\r\n\t\t\t\t\tif(s[j]==0){\r\n\t\t\t\t\t\tj--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ts[i]=s[i]-s[j];\r\n\t\t\t\t\tans=ans+s[j];\r\n\t\t\t\t\ts[j]=0;\r\n\t\t\t\t\tj--;\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.384251968503937, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "387b855c8e691d861d3e8cea6543e8d9", "bug_code_uid": "de178e75b66b1e40355deccc5dbf8f23", "src_uid": "4f02ac641ab112b9d6aee222e1365c09", "apr_id": "33b61fe96ab5247eeff01aefdadd5533", "difficulty": 1000, "tags": ["data structures", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n,res=1,a[100000],k=0;\n\tscanf (\"%d\",&n);\n\tfor (int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor (int i=0,min=0,tg;i<n;i++){\n\t\tmin=i;\n\t\tfor (int j=i;j<n;j++)\n\t\t{\n\t\t\tif(a[j]<a[min])\n\t\t\t{\n\t\t\t\tmin=j;\n\t\t\t}\n\t\t}\n\t\ttg=a[i];\n\t\ta[i]=a[min];\n\t\ta[min]=tg;\n\t}\n\twhile(k++<n){\n\t\tif(a[k]>=res) res++;\n\t}\n\tprintf(\"%d\",res-1);\n}\n", "fixed": "#include <stdio.h>\n\nint a[1000000];\n\nint main(){\n\tint n,res=0,k,max=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&k);\n\t\tif(k>max) max=k;\n\t\ta[k]++;\n\t}\n\tfor(int i=0;i<=max;i++){\n\t\twhile(a[i]>0){\n\t\t\tif(i>res){\n\t\t\t\tres++;\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t}\n\tprintf(\"%d\",res);\n}\n"}
{"similarity_score": 0.013157894736842105, "equal_cnt": 9, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "12deecc24de5e6ec77418976d82bfba3", "bug_code_uid": "a1e6f2a66a4fb10f2a321e734a84afe9", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "f595e4db90497d5a8a8cba6e25043960", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\n<CodeBlocks_project_file>\n\t<FileVersion major=\"1\" minor=\"6\" />\n\t<Project>\n\t\t<Option title=\"1283A .. Minutes Before the New Year\" />\n\t\t<Option pch_mode=\"2\" />\n\t\t<Option compiler=\"gcc\" />\n\t\t<Build>\n\t\t\t<Target title=\"Debug\">\n\t\t\t\t<Option output=\"bin/Debug/1283A .. Minutes Before the New Year\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Debug/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-g\" />\n\t\t\t\t</Compiler>\n\t\t\t</Target>\n\t\t\t<Target title=\"Release\">\n\t\t\t\t<Option output=\"bin/Release/1283A .. Minutes Before the New Year\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Release/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-O2\" />\n\t\t\t\t</Compiler>\n\t\t\t\t<Linker>\n\t\t\t\t\t<Add option=\"-s\" />\n\t\t\t\t</Linker>\n\t\t\t</Target>\n\t\t</Build>\n\t\t<Compiler>\n\t\t\t<Add option=\"-Wall\" />\n\t\t</Compiler>\n\t\t<Unit filename=\"main.c\">\n\t\t\t<Option compilerVar=\"CC\" />\n\t\t</Unit>\n\t\t<Extensions>\n\t\t\t<code_completion />\n\t\t\t<envvars />\n\t\t\t<debugger />\n\t\t</Extensions>\n\t</Project>\n</CodeBlocks_project_file>\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint calcMinutes(h,m);\n\nint main()\n{\n    int counter = 0, n , hours, minutes;\n    scanf(\"%d\",&n);\n\n    while(counter < n)\n    {\n        scanf(\"%d %d\",&hours,&minutes);\n        if(hours>=0 && hours<=23 && minutes>=0 && minutes<=60) {\n            printf(\"%d\\n\",calcMinutes(hours,minutes));\n            counter++;\n        }\n    }\n    return 0;\n}\n\nint calcMinutes(int h,int m) {\n    int hoursRes = (23 - h) * 60;\n    int minsRes  = (60 - m);\n    return (hoursRes+minsRes);\n}\n"}
{"similarity_score": 0.9132947976878613, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f851d5ff5bb5e53991869845c8ee3324", "bug_code_uid": "0431dc22be9e0c83c3bdb9b1514b2e1b", "src_uid": "fd85ebe1dc975a71c72fac7eeb944a4a", "apr_id": "f4daaf08138ae3074e5f30aa6daedc57", "difficulty": 1300, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t)\n    {\n        int n,k,count=0;\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&k);\n        int a[n],zeros=0;\n        for(int i=0;i<n;i++)\n        {\n        \tscanf(\"%d\",&a[i]);\n        \tif(a[i]==0)\n        \t\tzeros++;\n        \tif(zeros>k || i==0)\n        \t{\n        \t\tcount++;\n        \t\tzeros=0;\n\t\t\t}\n\t\t\tif(a[i]==1)\n\t\t\t{\n\t\t\t\tif(zeros<k && count!=0)\n\t\t\t\t\tcount--;\n\t\t\t\tzeros=0;\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t\tt--;\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t)\n    {\n        int n,k,count=0,zeros=0;\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&k);\n        char a[n];\n        scanf(\"%s\",a);\n        for(int i=0;i<n;i++)\n        {\n        \tif(a[i]=='0')\n        \t\tzeros++;\n        \tif(zeros>k || i==0)\n        \t{\n        \t\tcount++;\n        \t\tzeros=0;\n\t\t\t}\n\t\t\tif(a[i]=='1')\n\t\t\t{\n\t\t\t\tif(zeros<k && count!=0)\n\t\t\t\t\tcount--;\n\t\t\t\tzeros=0;\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t\tt--;\n    }\n}\n"}
{"similarity_score": 0.443010752688172, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c600f83ef329cd137a2eb78eae54cdb4", "bug_code_uid": "23920809bc018bbcfc45a09bf7da4b63", "src_uid": "90e448ed43ba9a0533ac7dc24f92a7f8", "apr_id": "a0eadad48b1fa90bba3bb3d058866a93", "difficulty": 1100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint t, n, a, b, k, na, nb, save, w[200000];\n\nint main(){\n\n    scanf(\"%d\", &t);\n\n    for (int i = 0; i < t; i++){\n\n        scanf(\"%d\", &n);\n\n        a = b = save = 0;\n        na = nb = 1;\n\n        for (k = 0; k < n; k++){\n            scanf(\"%d\", &(w[k]));\n        }\n        k--;\n        a += w[0];\n        b += w[k];\n\n        for (int j = 0; j <= k; j++){\n\n            if (a == b){\n                save = na + nb;\n                if (na != k - nb + 1){\n                    a += w[na];\n                    na++;\n                }\n                else break;\n            } \n\n            else if (a < b && na != k - nb + 1){\n                a += w[na];\n                na++;\n            }\n            else if (a > b && na != k - nb + 1){\n                b += w[k - nb];\n                nb++;\n            }\n            else break;\n        }\n        printf(\"%d\\n\", save);\n    }\n\n\n}", "fixed": "#include <stdio.h>\n\nint t, n, a, b, k, na, nb, save, w[200000];\n\nint main(){\n\n    scanf(\"%d\", &t);\n\n    for (int i = 0; i < t; i++){\n\n        scanf(\"%d\", &n);\n\n        a = b = save = 0;\n        na = nb = 1;\n\n        for (k = 0; k < n; k++){\n            scanf(\"%d\", &(w[k]));\n        }\n        k--;\n        a += w[0];\n        b += w[k];\n        k++;\n\n        for (int j = 0; j < k; j++){\n\n            //printf(\"na: %d nb:%d\\n\", na, nb);\n\n            if (a == b && a > 0 && b > 0 && na != k - nb + 1){\n                //printf(\"na: %d nb:%d\\n\", na, nb);\n                save = na + nb;\n                    a += w[na];\n                    na++;\n            } \n\n            else if (a < b && na != k - nb + 1){\n                a += w[na];\n                na++;\n            }\n            else if (a > b && na != k - nb + 1){\n                b += w[k - nb - 1];\n                nb++;\n            }\n            else break;\n        }\n        printf(\"%d\\n\", save);\n    }\n\n\n}"}
{"similarity_score": 0.5499058380414312, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "310c8e39f6ac454d6d7d64580c7ec0db", "bug_code_uid": "09d8a7227611f2c948c1fadf8b4c8cce", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "a5c1691fad1f7b23608254f64cf92067", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() \n{   long long int r[t],g[t],b[t],max[t],x[t];\n    int i,t; scanf(\"%d\\n\",&t); \n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld\",&r[i],&g[i],&b[i]);\n        x[i]=r[i]+b[i]+g[i];\n    }  \n    for(i=0;i<t;i++)\n    {\n        if(r[i]>=b[i]&&r[i]>=g[i])\n        max[i]=r[i];\n        else if(b[i]>=r[i]&&b[i]>=g[i])\n        max[i]=b[i];\n        else if(g[i]>=r[i]&&g[i]>=b[i])\n        max[i]=g[i];\n        if(2*max[i]-1<=x[i])\n        printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n \nint main() \n{   int i,t;\n    long long int r,g,b,max,x;\n     scanf(\"%d\\n\",&t); \n    for(i=0;i<=t-1;i++)\n    {\n        scanf(\"%lld %lld %lld\",&r,&g,&b);\n        x=r+b+g;\n        if(r>=b&&r>=g)\n        max=r;\n        else if(b>=r&&b>=g)\n        max=b;\n        else if(g>=r&&g>=b)\n        max=g;\n        if(2*max-1<=x)\n        printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.23820224719101124, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c71056338507b6df8eaec23882044d37", "bug_code_uid": "d1ab97ab9268e34b93a6d430d419cfce", "src_uid": "16c54cf7d8b484b5e22a7d391fdc5cd3", "apr_id": "5ffdfb535bab77dd135deae7625784d1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int ar[101],i,r,test[101],t,n=0,k,max=0;\n    for(i=0; i<101; i++)\n    {\n        test[i]=0;\n    }\n    scanf(\"%d\",&t);\n    for(k=0; k<t; k++)\n    {\n        scanf(\"%d\",&r);\n        for(i=0; i<r; i++)\n        {\n            scanf(\"%d\",&ar[i]);\n            n=ar[i];\n            if(n>max)max=n;\n            test[n]++;\n        }\n    }\n    for(k=1; k<max; k++)\n    {\n        if(test[k]>=t)\n            printf(\"%d \",k);\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int ar[102],i,r,test[102]={0},t,n=0,k,max=0;\n\n    scanf(\"%d\",&t);\n    for(k=0; k<t; k++)\n    {\n        scanf(\"%d\",&r);\n        for(i=1; i<=r; i++)\n        {\n            scanf(\"%d\",&ar[i]);\n            n=ar[i];\n            test[n]++;\n            if(n>max)max=n;\n        }\n    }\n    for(k=1; k<=max; k++)\n    {\n        if(test[k]>=t)\n            printf(\"%d \",k);\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8112449799196787, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c91598f14451082329960956a7deb768", "bug_code_uid": "e05950275d237ad5d869dbf6058fe69c", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "945b78ed1fa252449208b9438949db14", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\r\n    int t,year,year1,year2;\r\n    scanf(\"%d\",&t);\r\n    while(t!=0)\r\n    {\r\n        scanf(\"%d\",&year);\r\n        year1=year%2020;\r\n        if(year1==1&&year>4000||year1==2&&year>4000)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n         printf(\"NO\\n\");\r\n        }\r\n        t--;\r\n    }\r\n    return 0;\r\n\r\n}\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\r\n    int t,year,year1,year2;\r\n    scanf(\"%d\",&t);\r\n    while(t!=0)\r\n    {\r\n        scanf(\"%d\",&year);\r\n        if(year%2020<=year/2020)//year=4041//mod=1//divide=2//year=8079//mod=\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n         printf(\"NO\\n\");\r\n        }\r\n        t--;\r\n    }\r\n    return 0;\r\n\r\n}"}
{"similarity_score": 0.5208333333333334, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "754a1bb26f39fc3ec36314b4dd147a16", "bug_code_uid": "b86f875f237e78232feb93d9532c5b41", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "3b722dcc81259ddd0e440a2c90f23fe3", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint isPrime(int integer){\n    if(integer==1) return 0;\n    int i=2;\n    for(;i<floor(sqrt(integer));i++)\n        if(integer%i==0)\n            return 0;\n    return 1;\n}\n\n\nint main(){\n    long long t,j,b,x,y;\n    scanf(\"%lld\",&t);\n    for(b=0;b<t;b++){\n    scanf(\"%lld %lld\",&x,&y);\n    long long limit=x-y;\n    if(limit==1){\n        printf(\"NO\\n\");\n        continue;\n    }\n    for(j=2;j<=(limit/2)+1;j++){\n        if(isPrime(j)){\n            if(limit%j==0){\n                printf(\"YES\\n\");\n                break;\n            }\n        }\n\n    }\n\n    }\n\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n    long long t,j,b,x,y;\n    scanf(\"%lld\",&t);\n    for(b=0;b<t;b++){\n    scanf(\"%lld %lld\",&x,&y);\n    long long limit=x-y;\n        if(limit>1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n    }\n\n}"}
{"similarity_score": 0.960960960960961, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6f984b43c7dfcfb1f65730577b563de9", "bug_code_uid": "682b73d5b80266b8ea58c89058afe18e", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "739e56695f2740fcbfbd15deaf66a4fa", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n, t, a[102], i, j=0, x, k=0;\n\n    scanf(\"%d %d\", &n, &t);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for(i=0; i<n; i++)\n    {\n        k++;\n\n        x=(86400-a[i]);\n        j=j+x;\n        if(j>=t) break;\n    }\n\n    printf(\"%d\\n\", j);\n    printf(\"%d\", k);\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n, t, a[102], i, j=0, x, k=0;\n\n    scanf(\"%d %d\", &n, &t);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for(i=0; i<n; i++)\n    {\n        k++;\n\n        x=(86400-a[i]);\n        j=j+x;\n        if(j>=t) break;\n    }\n\n  \n    printf(\"%d\", k);\n\n}\n"}
{"similarity_score": 0.9048507462686567, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "db4666b843e5e348e42bdf7b3bce37c9", "bug_code_uid": "6cd3615e6ec566c94619243aff55f19c", "src_uid": "516ed4dbe4da9883c88888b134d6621f", "apr_id": "becc04a9e70806d0cfa8ed6d2574d9dc", "difficulty": 2300, "tags": ["dp", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/* https://codeforces.com/blog/entry/47821 */\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N\t3000\n\nint aa[N], iq[1 + N * 2], pq[N * 2], cnt;\n\nint lt(int i, int j) { return aa[i >> 1] > aa[j >> 1]; }\n\nint p2(int p) {\n\treturn (p *= 2) > cnt ? 0 : (p < cnt && lt(iq[p + 1], iq[p]) ? p + 1 : p);\n}\n\nvoid pq_up(int i) {\n\tint p, q, j;\n\n\tfor (p = pq[i]; (q = p / 2) && lt(i, j = iq[q]); p = q)\n\t\tiq[pq[j] = p] = j;\n\tiq[pq[i] = p] = i;\n}\n\nvoid pq_dn(int i) {\n\tint p, q, j;\n\n\tfor (p = pq[i]; (q = p2(p)) && lt(j = iq[q], i); p = q)\n\t\tiq[pq[j] = p] = j;\n\tiq[pq[i] = p] = i;\n}\n\nvoid pq_add(int i) {\n\tpq[i] = ++cnt, pq_up(i);\n}\n\nvoid pq_remove_first() {\n\tint i = iq[1], j = iq[cnt--];\n\n\tif (j != i)\n\t\tpq[j] = 1, pq_dn(j);\n\tpq[i] = 0;\n}\n\nint main() {\n\tint n, i;\n\tlong long ans;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\taa[i] -= i;\n\t}\n\tans = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tans += abs(aa[i]);\n\t\tpq_add(i << 1), pq_add(i << 1 | 1);\n\t\tpq_remove_first();\n\t}\n\tfor (i = 1; i <= cnt; i++)\n\t\tif (aa[iq[i] >> 1] > 0)\n\t\t\tans -= aa[iq[i] >> 1];\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n", "fixed": "/* https://codeforces.com/blog/entry/47821 */\n#include <stdio.h>\n\n#define N\t3000\n\nint max(int a, int b) { return a > b ? a : b; }\n\nint aa[N], iq[1 + N * 2], pq[N * 2], cnt;\n\nint lt(int i, int j) { return aa[i >> 1] > aa[j >> 1]; }\n\nint p2(int p) {\n\treturn (p *= 2) > cnt ? 0 : (p < cnt && lt(iq[p + 1], iq[p]) ? p + 1 : p);\n}\n\nvoid pq_up(int i) {\n\tint p, q, j;\n\n\tfor (p = pq[i]; (q = p / 2) && lt(i, j = iq[q]); p = q)\n\t\tiq[pq[j] = p] = j;\n\tiq[pq[i] = p] = i;\n}\n\nvoid pq_dn(int i) {\n\tint p, q, j;\n\n\tfor (p = pq[i]; (q = p2(p)) && lt(j = iq[q], i); p = q)\n\t\tiq[pq[j] = p] = j;\n\tiq[pq[i] = p] = i;\n}\n\nvoid pq_add(int i) {\n\tpq[i] = ++cnt, pq_up(i);\n}\n\nint pq_remove_first() {\n\tint i = iq[1], j = iq[cnt--];\n\n\tif (j != i)\n\t\tpq[j] = 1, pq_dn(j);\n\tpq[i] = 0;\n\treturn i;\n}\n\nint main() {\n\tint n, i;\n\tlong long ans;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\taa[i] -= i;\n\t}\n\tans = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tpq_add(i << 1), pq_add(i << 1 | 1);\n\t\tans += aa[pq_remove_first() >> 1] - aa[i];\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9777777777777777, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "33b4b3109765d8e05e4bd064d4ac725d", "bug_code_uid": "91e60fb4fa7cd890ea3c0c387ff36b1a", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "4c1a7399721562c2fbec83eb621eceb9", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n,arr[100];\n    double sum=0;\n\n    scanf(\"%d\",&n);\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        sum=sum+arr[i];\n    }\n    printf(\"%lf\",sum/n);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n,arr[100];\n    float sum=0;\n\n    scanf(\"%d\",&n);\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        sum=sum+arr[i];\n\n    }\n    printf(\"%f\",sum/n);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8489483747609943, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "a47900323da4e7353a2c3f620a704cc3", "bug_code_uid": "f19f0676dc65e943b988be008eacf4cb", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "8554b50c2c04e72100fa15ac498188e9", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i , zero=0;\n    char bin[100001];\n    gets(bin);\n    for(i=0;i<strlen(bin);i++)\n    {\n        if(zero==0 && bin[i]=='0') zero=1;\n        else printf(\"%c\" , bin[i]);\n    }\n      \n     return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i , zero=0 , l;\n    char bin[100001];\n    gets(bin);\n    l=strlen(bin);\n    for(i=0;i<l-1;i++)\n    {    \n        if(zero==0 && bin[i]=='0') zero=1;\n        else printf(\"%c\" , bin[i]);\n    }\n    if(zero) printf(\"%c\" , bin[l-1]);\n      \n     return 0;\n}"}
{"similarity_score": 0.9976133651551312, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5d05a17f9aca8c93c00000025e09a288", "bug_code_uid": "ab8bdcd6ff16af1820ba2b1203473cb6", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "250954d280218e84ef07397b902cd68c", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint k,i;\n    scanf(\"%d\",&k);\n    printf(\"%d\\n\",k/2);\n    for(i=0;i<k/2-1;i++)\n\t{\n\t\tprintf(\"2\");\n\t}\n    if(k%2)\n\t{\n\t\tprintf(\"3\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"2\\n\");\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint k,i;\n    scanf(\"%d\",&k);\n    printf(\"%d\\n\",k/2);\n    for(i=0;i<k/2-1;i++)\n\t{\n\t\tprintf(\"2 \");\n\t}\n    if(k%2)\n\t{\n\t\tprintf(\"3\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"2\\n\");\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.5104895104895105, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "877a4c3b4533395ff01efd266252b60b", "bug_code_uid": "afd544064be7d813a0cdb2c2c7e601e9", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "9a38126a87e37e02ea7eb897cf77a5c6", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,c=0,m=0;\n    scanf(\"%I64d\",&n);printf(\"%d\",n);\n    for(i=0;n!=0;i++){m=n%10;n/=10;printf(\"%d\",m);}\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){char s[1000000];scanf(\"%s\",s);printf(\"%s\",s);printf(\"%s\",strrev(s));}\n"}
{"similarity_score": 0.9762282091917591, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e9305a351ff6c5eb84fed376f36d55da", "bug_code_uid": "79ee43a1d2f99324966a947b0e6e2b23", "src_uid": "c173e2695562dfa1f603e6a925a2e1f3", "apr_id": "0c2a483cced9abc16129246b96ff0b4b", "difficulty": 1200, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tint n, x, y;\n\tint door;\n\n\tscanf(\"%d%d%d\", &n, &x, &y);\n\n\tint knockout = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &door);\n\t\tif (x >= door) knockout++;\n\t}\n\n\tif (x > y) {\n\t\tprintf(\"%d\", n);\n\t\treturn 0;\n\t}\n\n\tknockout = 0;\n\tprintf(\"%d\", (knockout + 1)/2);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tint n, x, y;\n\tint door;\n\n\tscanf(\"%d%d%d\", &n, &x, &y);\n\n\tint knockout = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &door);\n\t\tif (x >= door) knockout++;\n\t}\n\n\tif (x > y) {\n\t\tprintf(\"%d\", n);\n\t\treturn 0;\n\t}\n\n\tprintf(\"%d\", (knockout + 1)/2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6223908918406073, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5bb1c6af586d9600de3e239293587da7", "bug_code_uid": "320fcd2330c617ef47620c3b189a449c", "src_uid": "f9f803c6850da1838d62a0cf85bb13f2", "apr_id": "500207f03bb5f004ced36109b48aa816", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nlong long gcd(long long a, long long b){\r\n\tif(a<b){\r\n\t\tlong long tmp=a;\r\n\t\ta=b;\r\n\t\tb=tmp;\r\n\t}\r\n\r\n\twhile(b){\r\n\t\tlong long tmp=a%b;\r\n\t\ta=b;\r\n\t\tb=tmp;\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nint main(void){\r\n\tint T;\r\n\r\n\tscanf(\"%d\", &T);\r\n\twhile(T--){\r\n\t\tlong long N;\r\n\t\tscanf(\"%lld\", &N);\r\n\t\tprintf(\"%lld %lld %lld %lld\\n\", 1, N-3, 1, 1);\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(void){\r\n\tint T, N;\r\n\r\n\tscanf(\"%d\", &T);\r\n\twhile(T--){\r\n\t\tscanf(\"%d\", &N);\r\n\t\tprintf(\"%d %d %d %d\\n\", 1, N-3, 1, 1);\r\n\t}\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.5927209705372617, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a45fa89c3fac092246dd39a5f0d04dc2", "bug_code_uid": "ec5fca0f906ba173c795e89c5b3d5552", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "6deed738d8f0460a7ce1f2e28350289e", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t>0){\r\n\r\n  int a, b;\r\n  scanf(\"%d %d\",&a,&b);\r\n  printf(\"%d\", a+2*b+1);\r\n\r\n    t--;\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n\r\n\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t>0){\r\nint a, b;\r\nscanf(\"%d %d\",&a,&b);\r\nif(a==0&&b>0)\r\n{\r\n    printf(\"1 \\n\");\r\n}\r\nelse if(b==0&&a==0)\r\n{\r\n    printf(\"1 \\n\");\r\n}\r\n\r\nelse if(b==0&&a>0)\r\n{\r\n    printf(\"%d \\n\",a+1);\r\n}\r\n\r\nelse if(a>0&&b>0)\r\n{\r\n    \r\nprintf(\"%d \\n\",a+2*b+1);\r\n}\r\n    t--;\r\n}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9978768577494692, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8e08e171e070908e439e6860b2ced91d", "bug_code_uid": "96de1d501cb69079d318ab78c564563a", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "4300294984fb8de9ade9d89e6afb7497", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long int n;\n    scanf(\"%ld\",&n);\n    long int a[n];\n    int ar[n-1];\n    int arr[n-2];\n    int sum1=0,sum2=0,sum3=0;\n    for(int i=0;i<n;i++){\n        scanf(\"%ld\",&a[i]);\n        sum1=sum1+a[i];\n    }\n    for(int i=0;i<n-1;i++){\n        scanf(\"%ld\",&ar[i]);\n        sum2=sum2+ar[i];\n    }\n    for(int i=0;i<n-2;i++){\n        scanf(\"%ld\",&arr[i]);\n        sum3=sum3+arr[i];\n    }\n    printf(\"%d\",sum1-sum2);\n    printf(\"%d\",sum2-sum3);\n}", "fixed": "#include<stdio.h>\nint main(){\n    long int n;\n    scanf(\"%ld\",&n);\n    long int a[n];\n    int ar[n-1];\n    int arr[n-2];\n    int sum1=0,sum2=0,sum3=0;\n    for(int i=0;i<n;i++){\n        scanf(\"%ld\",&a[i]);\n        sum1=sum1+a[i];\n    }\n    for(int i=0;i<n-1;i++){\n        scanf(\"%ld\",&ar[i]);\n        sum2=sum2+ar[i];\n    }\n    for(int i=0;i<n-2;i++){\n        scanf(\"%ld\",&arr[i]);\n        sum3=sum3+arr[i];\n    }\n    printf(\"%d\\n\",sum1-sum2);\n    printf(\"%d\",sum2-sum3);\n}"}
{"similarity_score": 0.9842931937172775, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a18574d67adfc27e0b6696de1bbae1e3", "bug_code_uid": "292d249c988632db8405c78768641a59", "src_uid": "6fbf41dc32d1c28351d78a9ec5fc0026", "apr_id": "ea4eff2a618f4ed776a92bd0f385140f", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k,i,x;\r\n    char a[200];\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        x=0;\r\n        scanf(\"%d %d\",&n,&k);\r\n        scanf(\"%s\",a);\r\n        if(k==0)printf(\"YES\\n\");\r\n        else {\r\n            for(i=0;i<(n+1)/2;i++)\r\n            {\r\n                if(a[i]==a[n-i-1])x++;\r\n                else break;\r\n            }\r\n            if(k<x)printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k,i,x;\r\n    char a[200];\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        x=1;\r\n        scanf(\"%d %d\",&n,&k);\r\n        scanf(\"%s\",a);\r\n        if(k==0)printf(\"YES\\n\");\r\n        else {\r\n            for(i=0;i<(n+1)/2;i++)\r\n            {\r\n                if(a[i]==a[n-i-1])x++;\r\n                else break;\r\n            }\r\n            if(k<x&&k<(n+1)/2)printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9742268041237113, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "767b877a197c4e09b6884b24aa078fa6", "bug_code_uid": "2adda2ebe5a5332c2dc7632d8302211c", "src_uid": "5c12573b3964ee30af0349c11c0ced3b", "apr_id": "f29ce76aa7277476dd8d82a12498d347", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,s;int i,time=0;\n\tscanf(\"%d %d\",&n,&s);\n\tint arr[100],bal[100];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&arr[i],&bal[i]);\n\t}\n\ttime=s-arr[n-1];\n\tif(time<=bal[n-1])\n\t{\n\ttime=bal[n-1];\n\n\t}\n\telse\n\t{\n\t\ttime=time+bal[n-1];\n\t}\n\n\n\tfor(i=n-2;i>=0;i--)\n\t{\n\t\ttime=time+arr[i+1]-arr[i];\n\t\tif(time<bal[i])\n\t\t{time=bal[i];\n\t\t}\n\t\t\n\t\t\t\n\t}\n\ttime=time+arr[0];\n\tprintf(\"%d\",time);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,s;int i,time=0;\n\tscanf(\"%d %d\",&n,&s);\n\tint arr[100],bal[100];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&arr[i],&bal[i]);\n\t}\n\ttime=s-arr[n-1];\n\tif(time<=bal[n-1])\n\t{\n\ttime=bal[n-1];\n\n\t}\n\telse\n\t{\n\t\n\t}\n\n\n\tfor(i=n-2;i>=0;i--)\n\t{\n\t\ttime=time+arr[i+1]-arr[i];\n\t\tif(time<bal[i])\n\t\t{time=bal[i];\n\t\t}\n\t\t\n\t\t\t\n\t}\n\ttime=time+arr[0];\n\tprintf(\"%d\",time);\n}\n"}
{"similarity_score": 0.0908445706174592, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "86e579c238ac90763abf2800e2ee99a4", "bug_code_uid": "5e8e5bf07916f7baa59feb9e531ebc38", "src_uid": "94f52d78b1347fd04c9d39e8789a73ec", "apr_id": "83749a49cfa772d4982f666a9c44fa9a", "difficulty": 1900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\nint main()\n{\n    unsigned long long int n,k,q,i=1;\n    scanf(\"%I64d %I64d %I64d\",&n,&k,&q);\n    if(n/2==k)\n    {\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t   if(i%2==0)\n\t\t\tprintf(\".\");\n\t\t   else\n\t\t\tprintf(\"X\");\n\t\t}\n    }\n    else\n    {\n    char s[n+1];\n    memset(s,'.',n*sizeof(char));\n    if(n%2==0)\n    {\n\ti=1;\n        int j=i;\n        while(k!=0)\n        {\n            if(n-i<=0)\n            {\n                i=j+1;\n                j=i;\n            }\n            s[n-i]='X';\n            i+=2;\n            k--;\n        }\n    }\n    else\n    {\n        s[n-1]='X';\n        k--;\n        i++;\n        int j=i;\n        while(k!=0)\n        {\n            if(n-i<=0)\n            {\n                i=j+1;\n                j=i;\n            }\n            s[n-i]='X';\n            i+=2;\n            k--;\n        }\n    }\n    unsigned long long int a;\n    while(q--)\n    {\n        scanf(\"%I64d\",&a);\n        printf(\"%c\",s[a-1]);\n    }\n    }\n    return 0;\n}", "fixed": "\ufeff#include <stdio.h>\n\n\nint main()\n{\n\tlong long int n, k, p, a;\n\tscanf(\"%I64d %I64d %I64d\",&n,&k,&p);\n\tif (n % 2 && k) {\n\t n--;\n\t k--; \n\t}\n\tif (2 * k > n) { \n\tlong long int t = 2 * k - n;\n\t n -= t;\n\t k -= t;\n\t }\n\twhile (p--)\n\t{\n\t\tscanf(\"%I64d\",&a);;\n\t\tif ((a > n) || ((a % 2 == 0) && ((n - a) / 2 < k)))\n\t\t putchar('X'); \n\t\telse putchar('.');\n\t}\n}"}
{"similarity_score": 0.9985358711566618, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "717609f7c025d3f10c29a6fb4c98e81c", "bug_code_uid": "caf1f5e1c2cc7df4863549566ff0d7f9", "src_uid": "dd3ba43eb0261ccdb7269a2696a042da", "apr_id": "a5bafdeb45b9c4b221159534147de7fb", "difficulty": 1200, "tags": ["brute force", "constructive algorithms", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t, mark[100100];\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n           scanf(\"%d %d\", &n, &m);\r\n           memset(mark, 0, sizeof(mark));\r\n           for(x = 0; x < m; x++)\r\n           {\r\n              scanf(\"%d %d %d\", &a, &b, &c);\r\n              mark[c] = 1;\r\n           }\r\n           \r\n           for(x = 1; x <= n; x++)\r\n              if(!mark[x])\r\n                break;\r\n           \r\n           for(y = 1; y <= n; y++)\r\n           {\r\n                 if(y != x)\r\n                   printf(\"%d %d\\n\", x, y);\r\n           }\r\n                     \r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t, mark[100100];\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n           scanf(\"%d %d\", &n, &m);\r\n           memset(mark, 0, sizeof(mark));\r\n           for(x = 0; x < m; x++)\r\n           {\r\n              scanf(\"%d %d %d\", &a, &b, &c);\r\n              mark[b] = 1;\r\n           }\r\n           \r\n           for(x = 1; x <= n; x++)\r\n              if(!mark[x])\r\n                break;\r\n           \r\n           for(y = 1; y <= n; y++)\r\n           {\r\n                 if(y != x)\r\n                   printf(\"%d %d\\n\", x, y);\r\n           }\r\n                     \r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.26650062266500624, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "fcc3aac2ee6bbaff89686ac51f55b5b8", "bug_code_uid": "b44776c05e064e7d27c2a6b69a941ad6", "src_uid": "30ad5bdc019fcd8a4e642c90decca58f", "apr_id": "a82813c598b695296147e549a76a2c3f", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": " \n#include<stdio.h>\nint main()\n{\n\tint n,i,j=0,a[1000],t,p=0,m;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tfor(j=i-1;j>=0;j--)\n\t\t\tif(a[i]<a[j])\n\t\t\t{\n\t\t\t\tt=a[i];\n\t\t\t\tfor(m=i;m>j;m--)\n\t\t\t\t\ta[m]=a[m-1];\n\t\t\t\ta[j]=t;\n\t\t\t}\n\t}\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]>a[i-1])\n\t\t\tp++;\n\t}\n\tprintf(\"%d\",p);\n\treturn 0;\n}", "fixed": " \n#include<stdio.h>\n\nint main() {\n    int n,m;\n    int a[1001],b[1001],i=0,s=0,ans=0;\n    scanf(\"%d\",&n);\n    for (i=0;i<=1000;i++) a[i]=0;\n    for (i=0;i<=n-1;i++) {\n        scanf(\"%d\",&m);\n        a[m]++;\n        }\n    s=-1;\n    while(s != 0){\n        s=0;\n        for (i=1;i<=1000;i++)\n            if (a[i] != 0) {\n                a[i]--;\n                s++;\n            }\n        if (s == 0) break;\n         ans+=s-1;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}"}
{"similarity_score": 0.1915966386554622, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "1461b7f9537b7e850b97f38bbb89743c", "bug_code_uid": "861240b246f42b3babdf63e5851d361a", "src_uid": "291601d6cdafa4113c1154f0dda3470d", "apr_id": "721d77cd1e9469e2659ad9da7ab4cafe", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,day=1,max;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\ti=1;\n\twhile(i<4)\n\t{\n\t\n\t\tif(a[i]>=i){\n\t\t\tmax=0;\n\t\t\tfor(j=i;;j++)\n\t\t\t{\t\n\t\t\t\tif(a[j]>max)max=a[j];\n\t\t\t\tif((a[j]==j)&&(a[j]==max)){\n\t\t\t\tday++;\n\t\t\t\ti++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n}\n\t\t}\n//\telse if(i==a[i])day++;\n\t\n\tprintf(\"%d\",day);\n\treturn 0;\n\n}\n", "fixed": "\n#include <stdio.h>\n\nint main() {\n\tint n, i, a, b, cnt;\n\n\tscanf(\"%d\", &n);\n\tcnt = 0;\n\tfor (i = 1, b = 0; i <= n; i++) {\n\t\tscanf(\"%d\", &a);\n\t\tif (b < a)\n\t\t\tb = a;\n\t\tif (b <= i)\n\t\t\tcnt++, b = 0;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9635577516985794, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3d79e502225bcbc500b4f61e48d89402", "bug_code_uid": "002fc8daeeb7868aced5e3f9bf5ae0d5", "src_uid": "7f5269f3357827b9d8682d70befd3de1", "apr_id": "eb27233323bda05f29af8fd68791bd73", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\n  int noq;\n  scanf(\"%d\", &noq);\n\n  // int *list ;\n  int *endindex;\n  int length, sectors;\n  int odds, counter;\n  int x;\n  for (int q = 0; q < noq; q++) {\n    odds = 0;\n    counter = 0;\n    scanf(\"%d %d\", &length, &sectors);\n    endindex = calloc(sectors, sizeof(int));\n    for (int i = 0; i < length; i++) {\n      scanf(\"%d\", &x);\n      if (x % 2) {\n        odds++;\n        if (counter < sectors) {\n          endindex[counter] = i + 1;\n          counter++;\n        }\n      }\n    }\n    if (odds < sectors || (odds % 2) != (sectors % 2)) {\n      printf(\"NO\\n\");\n    } else {\n      printf(\"YES\\n\");\n      for (int i = 0; i < sectors; i++) {\n        printf(\"%d \", endindex[i]);\n      }\n    }\n\n    free(endindex);\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\n  int noq;\n  scanf(\"%d\", &noq);\n\n  // int *list ;\n  int *endindex;\n  int length, sectors;\n  int odds, counter;\n  int x;\n  for (int q = 0; q < noq; q++) {\n    odds = 0;\n    counter = 0;\n    scanf(\"%d %d\", &length, &sectors);\n    endindex = calloc(sectors, sizeof(int));\n    for (int i = 0; i < length; i++) {\n      scanf(\"%d\", &x);\n      if (x % 2) {\n        odds++;\n        if (counter < sectors) {\n          endindex[counter] = i + 1;\n          counter++;\n        }\n      }\n    }\n    if (odds < sectors || (odds % 2) != (sectors % 2)) {\n      printf(\"NO\\n\");\n    }\n    else {\n      printf(\"YES\\n\");\n      for (int i = 0; i < sectors - 1; i++) {\n        printf(\"%d \", endindex[i]);\n      }\n      printf(\"%d \", length);\n      printf(\"\\n\");\n    }\n    free(endindex);\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.9361256544502617, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0ebbee952cbe4a07451f9022d8627a3b", "bug_code_uid": "bfe83058098c59ab65a22e09d5f31a9b", "src_uid": "55297e2a65144323af4d6abd6a6ef050", "apr_id": "bfd67f6acde81e98c856c5ccda1d0193", "difficulty": 1200, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint arr[100002];\n\nint comparator(const void*a,const void*b)\n{ return (*(int*)a-*(int*)b); }\n\nint main()\n{\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n    qsort(arr,n,sizeof(int),comparator);\n\n\n\n    if(k==0)\n    {\n    \tprintf(\"-1\\n\");\n    \treturn 0;\n    }\n    if(arr[k]==arr[k-1])\n    {\n    \tprintf(\"-1\\n\");\n    \treturn 0;\n    }\n\n     printf(\"%d\\n\",arr[k-1]);\n     return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint arr[200002];\n\nint comparator(const void*a,const void*b)\n{ return (*(int*)a-*(int*)b); }\n\nint main()\n{\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n    qsort(arr,n,sizeof(int),comparator);\n\n\n\n    if(k==0)\n    {\n    \tif(arr[0]>=2)\n    \tprintf(\"%d\",arr[0]-1);\n    \telse \n    \tprintf(\"-1\\n\");\n    \treturn 0;\n\n    }\n    if(arr[k]==arr[k-1])\n    {\n    \tprintf(\"-1\\n\");\n    \treturn 0;\n    }\n\n     printf(\"%d\\n\",arr[k-1]);\n     return 0;\n\n}\n"}
{"similarity_score": 0.9476190476190476, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "97c827c667cb7f485029f49abc4009f3", "bug_code_uid": "5e4d766b634092674c051c9e954aeebb", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "12cbf4e76ee388852f277d34d8564a2f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int row,col,i,j,count=1;\n    scanf(\"%d%d\",&row,&col);\n    for(i=0;i<row;i++)\n    {\n        if(i%2==0)\n        {\n            for(j=0;j<col;j++)\n                printf(\"#\");\n            printf(\"\\n\");\n        }\n        if(i%2!=0)\n        {\n            for(j=0;j<col;j++)\n            {\n                if(count==1)\n                {\n                if(j!=(col-1))\n                    printf(\".\");\n                else\n                    printf(\"#\");\n                }\n                else if(count==0)\n                {\n                if(j!=0)\n                    printf(\".\");\n                else\n                    printf(\"#\");\n                }\n                if(count==0)\n                    count=1;\n                else\n                    count=0;\n            }\n            printf(\"\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int row,col,i,j,count=1;\n    scanf(\"%d%d\",&row,&col);\n    for(i=0;i<row;i++)\n    {\n        if(i%2==0)\n        {\n            for(j=0;j<col;j++)\n                printf(\"#\");\n            printf(\"\\n\");\n        }\n        if(i%2!=0)\n        {\n            for(j=0;j<col;j++)\n            {\n                if(count==1)\n                {\n                if(j!=(col-1))\n                    printf(\".\");\n                else\n                    printf(\"#\");\n                }\n                else if(count==0)\n                {\n                if(j!=0)\n                    printf(\".\");\n                else\n                    printf(\"#\");\n                }\n            }\n            printf(\"\\n\");\n            if(count==0)\n                count=1;\n            else\n                count=0;\n        }\n    }\n}\n"}
{"similarity_score": 0.9, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "b8fc49d415eca1bced2fbd1ed43c66ee", "bug_code_uid": "e139e4ddf7e2173c00e81cbf51a3f415", "src_uid": "d41aebacfd5d16046db7c5d339478115", "apr_id": "f7d2619659800a61b4b06145f7c1bfc2", "difficulty": 1600, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main (){\n    int n;\n    scanf(\"%d\",&n);\n    printf(\"%d\",((n*(n+1)*(n+2)*(n+3)*(n+4))/120)*(n*(n+1)*(n+2)/6));\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\nint main (){\n\t    long long int n;\n\t\t     scanf(\"%lld\",&n);\n\t\t\t      printf(\"%lld\",((n*(n+1)*(n+2)*(n+3)*(n+4))/120)*(n*(n+1)*(n+2)/6));\n\t\t\t\t\t    \n\t\t\t\t\t    return 0;\n}\n"}
{"similarity_score": 0.9666238767650834, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e1598628be9be5c2d82b339892622b22", "bug_code_uid": "5138b3727151489ff8e08ad2f9088036", "src_uid": "a585045a9a6f62bfe1c0618c2ee02f48", "apr_id": "75eaf214ea9603bfaa4706f896649dcf", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n//#include<conio.h>\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)b - *(int*)a );\n}\n\n\nint main()\n{\n    int n,k,a[1500],aux[1500],ans,i;\n     freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    \n    scanf(\"%d %d\",&n,&k);\n    \n    for(i=0;i<n;i++)\n    {\n                    scanf(\"%d\",&a[i]);\n                    aux[i]=a[i];                \n    }\n    \n    qsort (aux, n, sizeof(int), compare);\n    \n    ans=aux[k-1];\n    \n    printf(\"%d\\n\",ans);\n    for(i=0;i<n;i++)\n    {\n                    if(a[i]>=ans)\n                    {\n                                 printf(\"%d \",(i+1));             \n                    }                \n    }\n    \n    //getch();\n    return 0;    \n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n//#include<conio.h>\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)b - *(int*)a );\n}\n\n\nint main()\n{\n    int n,k,a[1500],aux[1500],ans,i;\n    \n    freopen(\"input.txt\",\"r\",stdin);\nfreopen(\"output.txt\",\"w\",stdout);\n    \n    scanf(\"%d %d\",&n,&k);\n    \n    for(i=0;i<n;i++)\n    {\n                    scanf(\"%d\",&a[i]);\n                    aux[i]=a[i];                \n    }\n    \n    qsort (aux, n, sizeof(int), compare);\n    \n    ans=aux[k-1];\n    \n    printf(\"%d\\n\",ans);\n    for(i=0;i<n;i++)\n    {\n                    if(a[i]>=ans&&k!=0)\n                    {\n                                 printf(\"%d \",(i+1)); \n                                 k--;            \n                    }                \n    }\n    \n    //getch();\n    return 0;    \n}"}
{"similarity_score": 0.8787107718405428, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "32149ebed8f1e92aa6cb16a04709217d", "bug_code_uid": "bc5dce110e89ce77d790594ea7d1b3f7", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "029b514cb49a567ab74c41442e5f46b3", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define LOOP(i,j,n,k) for(i=j;i<n;i+=k)\n#define ILOOP(i,j,n,k) for(i=n;i>j;i-=k)\n\nint main()\n{\nlong int n;long int s1=0;long int s2=0;long int s3=0;\nint bill,flag=0;\nscanf(\"%ld\",&n);\nwhile(n--)\n{\n    scanf(\"%d\",&bill);\n    if(bill==25)\n        s1++;\n    else if (bill==50)\n    {\n        s2++;\n        s1--;\n    }\n    else if (bill==100)\n    {\n        s3++;\n        s2--;\n        s1--;\n    }\n\n    if(s1<0||s2<0||s3<0)\n    {\n        flag=1;\n        printf(\"NO\");\n        break;\n    }\n}\n\nif(flag==0)\n    printf(\"YES\");\nreturn 0;\n}\n\n\n", "fixed": "\n#include<stdio.h>\n#define LOOP(i,j,n,k) for(i=j;i<n;i+=k)\n#define ILOOP(i,j,n,k) for(i=n;i>j;i-=k)\n\nint main()\n{\nlong int n;long int s1=0;long int s2=0;long int s3=0;\nint bill,flag=0;\nscanf(\"%ld\",&n);\nwhile(n--)\n{\n    scanf(\"%d\",&bill);\n    if(bill==25)\n        s1++;\n    else if (bill==50)\n    {\n        s2++;\n        s1--;\n    }\n    else if (bill==100)\n    {\n        if(s1*s2>0)\n        {\n        s2--;\n        s1--;\n        }\n        else {\n            s1-=3;\n        }\n        s3++;\n    }\n\n    if(s1<0||s2<0||s3<0)\n    {\n        flag=1;\n        printf(\"NO\");\n        break;\n    }\n}\n\nif(flag==0)\n    printf(\"YES\");\nreturn 0;\n}\n"}
{"similarity_score": 0.5109612141652614, "equal_cnt": 20, "replace_cnt": 14, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "885011911c95b331fb6ea3a0ac5c4cc2", "bug_code_uid": "aa112a86315275a68665cda06baf751a", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "da22330c2cf5b0005856ef17d98175c5", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    while(t!=0)\n    {\n        scanf(\"%d\",&n);\n        char s[n];\n        char scomp[n];\n        for(int i=0;i<n;i++)\n        {\n            scomp[i]='A';\n        }\n        scanf(\"%s\",s);\n        int min=0;\n        while(1)\n        {\n            if(strcmp(s,scmp)==0)\n            {\n                break;\n            }\n            for(int i=n-2;i>=0;i--)\n            {\n                if(s[i]=='A')\n                {\n                    s[i-1]='A';\n                }\n            }\n            min++;\n        }\n        printf(\"%d\\n\",min);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n  int t,n;\n  scanf(\"%d\",&t);\n  for(int j=0;j<t;j++)\n  {\n    scanf(\"%d\",&n);\n    char str1[n];\n    char str2[n];\n    scanf(\"%s\",str1);\n    /*for(int i=0;i<n;i++)\n    {\n      str2[i]='A';\n    }*/\n    int min=0;\n    while(1)\n    {\n      strcpy(str2,str1);\n      for(int i=n-2;i>=0;i--)\n      {\n        if(str1[i]=='A')\n        {\n          str1[i+1]='A';\n        }\n      }\n      if(strcmp(str1,str2)==0)\n      {\n        break;\n      }\n      min++;\n    }\n    printf(\"%d\\n\",min);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.5646437994722955, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "fe5dbdccd34cd031f9030a8958c57044", "bug_code_uid": "b5a17ddf5c4d0cd616cc6455ee3a9960", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "721e3457595ba7baa9b1ba0b580a1438", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    long n;\n    scanf(\"%ld\", &n);\n    long arr[n];\n    for (long i = 0; i < n; i++) scanf(\"%ld\", &arr[i]);\n    long j = 1;\n    for (long i = (n - 1); i >= 0; i -= 2){\n        printf(\"%ld \", arr[i]);\n        if (j < n){\n            printf(\"%ld \", arr[j]);\n            j += 2;\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    long n;\n    scanf(\"%ld\", &n);\n    long arr[n];\n    for (long i = 0; i < n; i++) scanf(\"%ld\", &arr[i]);\n    for (long i = 0; i < n / 2; i += 2){\n        long x = arr[i];\n        arr[i] = arr[n - 1 - i];\n        arr[n - 1 - i] = x;\n    }\n    for (long i = 0; i < n; i++) printf(\"%ld \", arr[i]);\n    printf(\"\\n\");\n    return 0;\n}"}
{"similarity_score": 0.9974768713204374, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9aaf425fadfcd4d21c0e4859f649716d", "bug_code_uid": "b4f423de6372e3485ec4e1ed7fdea430", "src_uid": "b0b4cadc46f9fd056bf7dc36d1cf51f2", "apr_id": "8d5d61f40dd7be96c3a46a43280f49e4", "difficulty": 1200, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nlong long find_gcd(long long a,long long b);\nint main()\n{\n\tlong long arr[1007],ans[2007],gcd;\n\tint n,i,j=0,count=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",arr+i);\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tgcd=find_gcd(arr[i],arr[i+1]);\n\t\tif(gcd!=1)\n\t\t{\n\t\t\tans[j++]=arr[i];\n\t\t\tans[j++]=1;\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t\tans[j++]=arr[i];\n\t}\n\tans[j++]=arr[i];\n\tprintf(\"%lld\\n\",count);\n\tfor(i=0;i<j;i++)\n\t\tprintf(\"%lld \",ans[i]);\n\treturn 0;\n}\nlong long find_gcd(long long a,long long b)\n{\n\tif(b==0)\n\t\treturn a;\n\treturn find_gcd(b,a%b);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nlong long find_gcd(long long a,long long b);\nint main()\n{\n\tlong long arr[1007],ans[2007],gcd;\n\tint n,i,j=0,count=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",arr+i);\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tgcd=find_gcd(arr[i],arr[i+1]);\n\t\tif(gcd!=1)\n\t\t{\n\t\t\tans[j++]=arr[i];\n\t\t\tans[j++]=1;\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t\tans[j++]=arr[i];\n\t}\n\tans[j++]=arr[i];\n\tprintf(\"%d\\n\",count);\n\tfor(i=0;i<j;i++)\n\t\tprintf(\"%lld \",ans[i]);\n\treturn 0;\n}\nlong long find_gcd(long long a,long long b)\n{\n\tif(b==0)\n\t\treturn a;\n\treturn find_gcd(b,a%b);\n}"}
{"similarity_score": 0.9650986342943855, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6da0fbbdfb6eaddb49858bd00f8b0a1f", "bug_code_uid": "536bfd703fa76e7376d53b5e32f83ea1", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "5506c8479b04ec5145e9761456c6a943", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,sum[100],max=0,k,i,j,count=0;\n\n    scanf(\"%d\",&n);\n    int str[100],str1[100];\n\n    for(i=0;i<n;i++)\n            scanf(\"%d %d\",&str[i],&str1[i]);\n    for(i=0;i<n;i++){\n        max=max-str[i]+str1[i];\n        if(max>=count)count=max;\n    }\n\n        printf(\"%d\",count);\n\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,sum[100],max=0,k,i,j,count=0;\n\n    scanf(\"%d\",&n);\n    int str[10001],str1[1001];\n\n    for(i=0;i<n;i++)\n            scanf(\"%d %d\",&str[i],&str1[i]);\n    for(i=0;i<n;i++){\n        max=max-str[i]+str1[i];\n        if(max>=count)count=max;\n    }\n\n        printf(\"%d\",count);\n\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9982935153583617, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7e203755b383cfa4c1e9d340a0d5f3f5", "bug_code_uid": "0af75e26c02b9fc8fdb88524d9fe0aa1", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "5ff9bc5f34f028ff498a9406e87c74d9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        long long wide, height, cellNumberVertical;\r\n        scanf(\"%lld %lld %lld\", &wide, &height, &cellNumberVertical);\r\n\r\n        long long square = wide * height;\r\n        long long cellNumberHorizontal;\r\n        if (square == cellNumberVertical)\r\n            cellNumberHorizontal = square;\r\n        else\r\n            cellNumberHorizontal = ((cellNumberVertical - 1) * height) % (square - 1) + 1;\r\n\r\n        printf(\"%lld\", cellNumberHorizontal);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        long long wide, height, cellNumberVertical;\r\n        scanf(\"%lld %lld %lld\", &wide, &height, &cellNumberVertical);\r\n\r\n        long long square = wide * height;\r\n        long long cellNumberHorizontal;\r\n        if (square == cellNumberVertical)\r\n            cellNumberHorizontal = square;\r\n        else\r\n            cellNumberHorizontal = ((cellNumberVertical - 1) * height) % (square - 1) + 1;\r\n\r\n        printf(\"%lld\\n\", cellNumberHorizontal);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9989316239316239, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d0b0cee5b0cd55cb198f1d9270de60f7", "bug_code_uid": "2c71cf9ce47f5c65c09077d20ff4babb", "src_uid": "6778eae5422b8ed026a33856998ea89a", "apr_id": "1444e6724fbba5136ff04466749c5e63", "difficulty": 1300, "tags": ["implementation", "geometry", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint max(int a, int b)\n{\n\treturn a > b ? a : b;\n}\n\nint min(int a, int b)\n{\n\treturn a < b ? a : b;\n}\n\nint main()\n{\n\tint n, sx, sy;\n\tscanf(\"%d %d %d\", &n, &sx, &sy);\n\tint north_x = sx, north_y = sy+1;\n\tint east_x = sx+1, east_y = sy;\n\tint south_x = sx, south_y = sy-1;\n\tint west_x = sx-1, west_y = sy;\n\n\tint c_north=0, c_east=0, c_south=0, c_west=0;\n\twhile(n--)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tif(x>sx)\n\t\t\tc_east++;\n\t\telse if(x<sx)\n\t\t\tc_west++;\n\n\t\tif(y>sy)\n\t\t\tc_north++;\n\t\telse if(y<sy)\n\t\t\tc_south++;\n\t}\n\n\tint ans = max(max(c_north, c_east), max(c_south, c_west));\n\tprintf(\"%d\\n\", ans);\n\tprintf(\"%d %d %d %d\\n\", c_north, c_east, c_south, c_west);\n\tif(ans == c_north)\n\t\tprintf(\"%d %d\\n\", north_x, north_y);\n\telse if(ans == c_east)\n\t\tprintf(\"%d %d\\n\", east_x, east_y);\n\telse if(ans == c_south)\n\t\tprintf(\"%d %d\\n\", south_x, south_y);\n\telse\n\t\tprintf(\"%d %d\\n\", west_x, west_y);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint max(int a, int b)\n{\n\treturn a > b ? a : b;\n}\n\nint min(int a, int b)\n{\n\treturn a < b ? a : b;\n}\n\nint main()\n{\n\tint n, sx, sy;\n\tscanf(\"%d %d %d\", &n, &sx, &sy);\n\tint north_x = sx, north_y = sy+1;\n\tint east_x = sx+1, east_y = sy;\n\tint south_x = sx, south_y = sy-1;\n\tint west_x = sx-1, west_y = sy;\n\n\tint c_north=0, c_east=0, c_south=0, c_west=0;\n\twhile(n--)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tif(x>sx)\n\t\t\tc_east++;\n\t\telse if(x<sx)\n\t\t\tc_west++;\n\n\t\tif(y>sy)\n\t\t\tc_north++;\n\t\telse if(y<sy)\n\t\t\tc_south++;\n\t}\n\n\tint ans = max(max(c_north, c_east), max(c_south, c_west));\n\tprintf(\"%d\\n\", ans);\n\t//printf(\"%d %d %d %d\\n\", c_north, c_east, c_south, c_west);\n\tif(ans == c_north)\n\t\tprintf(\"%d %d\\n\", north_x, north_y);\n\telse if(ans == c_east)\n\t\tprintf(\"%d %d\\n\", east_x, east_y);\n\telse if(ans == c_south)\n\t\tprintf(\"%d %d\\n\", south_x, south_y);\n\telse\n\t\tprintf(\"%d %d\\n\", west_x, west_y);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9619433198380567, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "42356cb1f16a002a8140818c201f8a67", "bug_code_uid": "1e85dc6878d6051f9eaa84b798775c03", "src_uid": "aab8d5a2d42b4199310f3f535a6b3bd7", "apr_id": "dedae3e5164a58f925e9c7c230f68267", "difficulty": 1400, "tags": ["dp", "greedy", "math", "sortings", "data structures"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,a[200001],i,b[200001],c[200001],d[200001],k,max=0;\n    scanf(\"%lld\",&n);\n    for(i=1;i<=n;i++)\n    {scanf(\"%lld\",&a[i]);\n     b[i]=i-a[i];\n    }\n    for(i=1;i<=200000;i++)\n    {c[i]=0;\n     d[i]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n     k=i-a[i];\n     if(k>=0)\n     {c[ik]=c[k]+a[i];}\n     else\n     {k=k*(-1);\n      d[k]=d[k]+a[i];\n     }\n    }\n    for(i=1;i<=n;i++)\n    {if(b[i]>=0)\n     {if(c[b[i]]>max)\n      {max=c[b[i]];}\n     }\n     else\n     {if(d[b[i]]>max)\n      {max=d[b[i]];}\n     }\n    }\n    printf(\"%lld\",max);\n    return 0;\n}\n     \n    \n    ", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,a[200001],i,b[200001],c[400001],d[400001],k,max=0;\n    scanf(\"%lld\",&n);\n    for(i=1;i<=n;i++)\n    {scanf(\"%lld\",&a[i]);\n     b[i]=i-a[i];\n    }\n    for(i=1;i<=400000;i++)\n    {c[i]=0;\n     d[i]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n     k=i-a[i];\n     if(k>=0)\n     {c[k]=c[k]+a[i];}\n     else\n     {k=k*(-1);\n      d[k]=d[k]+a[i];\n     }\n    }\n    for(i=1;i<=n;i++)\n    {if(b[i]>=0)\n     {if(c[b[i]]>max)\n      {max=c[b[i]];}\n     }\n     else\n     {b[i]=b[i]*(-1);\n      if(d[b[i]]>max)\n      {max=d[b[i]];}\n     }\n    }\n    printf(\"%lld\",max);\n    return 0;\n}\n     \n    \n    "}
{"similarity_score": 0.9721706864564007, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "dee97e066385369b0ea305cd78d97305", "bug_code_uid": "4ff628654c91a0fb7ac7c20a3e32e2ce", "src_uid": "2d6a1202139e1f77f32377224e1fe752", "apr_id": "f1bf6564aa0e597f6f78c54b7b151824", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,t,*a[2],x,i,j,k=0;\n    scanf(\"%d%d\",&n,&t);\n    for(x=0;x<n;x++)\n    {\n        scanf(\"%d%d\",&i,&j);\n        if(i==t || i==7-t || j==t || j==7-t)\n        k=1;\n    }\n    if(k==1)\n    printf(\"NO\");\n    else\n    printf(\"YES\");\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,t,*a[2],x,i,j,k=0;\n    scanf(\"%d%d\",&n,&t);\n    for(x=0;x<n;x++)\n    {\n        scanf(\"%d%d\",&i,&j);\n        if(i==t || i==7-t || j==t || j==7-t)\n        k=1;\n    }\n    if(k==1)\n    printf(\"NO\");\n    else\n    printf(\"YES\");\n    return(0);\n}\n"}
{"similarity_score": 0.8866666666666667, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9cc18569d7fc095d053229d47b3a8e9c", "bug_code_uid": "4d83a12320b5510cacef25f2c0ebb863", "src_uid": "33e751f5716cbd666be36ab8f5e3977e", "apr_id": "44927df62e9062aa32747b84c2ac933e", "difficulty": 800, "tags": ["brute force", "combinatorics", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,a[n],x=1,y=1,c=0,p=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(int i=1;i<=10-n;i++){\r\n            x*=i;\r\n        }\r\n        p=10-n;\r\n        for(int i=1;i<=p-2;i++){\r\n            y*=i;\r\n        }\r\n        c=(x/(y*2))*6;\r\n        printf(\"%d\\n\",c);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,x=1,y=1,c=0,p=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(int i=1;i<=10-n;i++){\r\n            x*=i;\r\n        }\r\n        p=10-n;\r\n        for(int i=1;i<=p-2;i++){\r\n            y*=i;\r\n        }\r\n        c=((x*6)/(y*2));\r\n        printf(\"%d\\n\",c);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9419035846724351, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e2b082ac842f9a754442a63d27fbb976", "bug_code_uid": "a8f23ce2899dcb65a050427db3e75b57", "src_uid": "127d7f23a0ac8fcecccd687565d6f35a", "apr_id": "d676b86a79bf99f96bfdc341203ba10d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.c>\r\n\r\nint main(){\r\n\tint t,n;\r\n\tchar s[55];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint k=0;\r\n\t\tscanf(\"%d\",&n)\t;\r\n\t\tscanf(\"%s\",s);\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tk=0;\r\n\t\t\tfor(int j=i;j<n;j++){\r\n\t\t\t\tif(s[j]=='a') k++;\r\n\t\t\t\tif(s[j]=='b') k--;\r\n\t\t\t\tif(k==0&&j-i>2){ printf(\"%d %d\\n\",i+1,j+1);break;} \t\r\n\t\t\t}\r\n\t\t\tif(k==0){ break;} \t\r\n\t\t}\r\n\t\tif(k==0){ continue;} \r\n\t\telse printf(\"-1 -1\\n\")\t;\t\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n\tint t,n;\r\n\tchar s[55];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint k=0;\r\n\t\tscanf(\"%d\",&n)\t;\r\n\t\tscanf(\"%s\",s);\r\n\t\tint j=0;\r\n\t\tint i=0;\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tk=0;\r\n\t\t\tfor(j=i;j<n;j++){\r\n\t\t\t\tif(s[j]=='a') k++;\r\n\t\t\t\tif(s[j]=='b') k--;\r\n\t\t\t\tif(k==0){printf(\"%d %d\\n\",i+1,j+1);break;} \t\r\n\t\t\t}\r\n\t\t\tif(k==0){break;} \t\r\n\t\t}\r\n\t\tif(k==0){ continue;} \r\n\t\telse printf(\"-1 -1\\n\")\t;\t\r\n\t}\r\n}"}
{"similarity_score": 0.8322542672160094, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "c0e4dbbd6662a6babc608a5e5792604e", "bug_code_uid": "38235b40829c01216daf70f146763454", "src_uid": "fd94aea7ca077ee2806653d22d006fb1", "apr_id": "bfbb981a5822d5f2255513c35b8462a8", "difficulty": 1700, "tags": ["dp", "hashing", "string suffix structures", "binary search", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar    t[1000005];\nint     next[1000010];\n\nint main()\n{\n    int len, i, a, p, j;\n    int reval = 0;\n    scanf(\"%s\",t);\n    len = strlen(t);\n    \n    a = 0;p = 0;\n    next[0] = len;\n    for(i = 1; i < len; i++)\n    {\n        if(i >= p || next[i-a] + i == p){\n            if(i >= p)\n                p = i;\n            while(t[p] == t[p-i] && p < len)p++;\n            next[i] = p - i;\n            a = i;\n        }\n        else if(next[i-a] + i > p)\n        {next[i] = p-i;}\n        else if(next[i-a] + i < p)\n        {next[i] = next[i-a];}\n\n        if(i + next[i] == len){\n            if(reval >= next[i]){\n                for(j = 0; j < next[i]; j++)\n                    printf(\"%c\",t[j]);\n                return 0;\n            }\n        }\n        reval = next[i] > reval ? next[i]:reval;\n    }\n    printf(\"Just a legend\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar    t[1000005];\nint     next[1000010];\n\nint main()\n{\n    int i, a=0, p=0;\n    int reval = 0;\n    scanf(\"%s\",t);\n    int len = strlen(t);\n    next[0] = len;\n    for(i = 1; i < len; i++)\n    {\n        if(i >= p || next[i-a] + i == p){\n            if(i >= p)\n                p = i;\n            while(t[p] == t[p-i] && p < len)p++;\n            next[i] = p - i;\n            a = i;\n        }\n        else if(next[i-a] + i > p)\n        {next[i] = p-i;}\n        else\n        {next[i] = next[i-a];}\n\n        if(i + next[i] == len){\n            if(reval >= next[i]){\n                t[next[i]] = '\\0';\n                printf(\"%s\",t);\n                return 0;\n            }\n        }\n        reval = next[i] > reval ? next[i]:reval;\n    }\n    printf(\"Just a legend\\n\");\n    return 0;\n}"}
{"similarity_score": 0.9971181556195965, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0496a7b8ed806ba34989699d103f8786", "bug_code_uid": "e2e544581432b2c5df67372b4645afbb", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "1fa5cc6abb53813301bca3414acce236", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,h=0,v=0;\n\tint i,j,k=-1,l;\n\n\tscanf(\"%d\",&n);\n\tint h1[n],v1[n],o[n];\n\n\tfor(i=0;i<n*n;i++)\n\t{\n\t\th1[i]=i+1;\n\t\tv1[i]=i+1;\n\t}\n\n\tfor(j=0;j<n*n;j++)\n\t{\n\t\tscanf(\"%d %d\",&h,&v);\n\t\tif(h1[h-1]!=0 && v1[v-1]!=0)\n\t\t{\n\t\t\to[++k]=j+1;\n\t\t\th1[h-1]=0;\n\t\t\tv1[v-1]=0;\n\t\t}\n\t}\n\n\tfor(l=0;l<n;l++)\n\t\tprintf(\"%d \",o[l]);\n\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,h=0,v=0;\n\tint i,j,k=-1,l;\n\n\tscanf(\"%d\",&n);\n\tint h1[n],v1[n],o[n];\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\th1[i]=i+1;\n\t\tv1[i]=i+1;\n\t}\n\n\tfor(j=0;j<n*n;j++)\n\t{\n\t\tscanf(\"%d %d\",&h,&v);\n\t\tif(h1[h-1]!=0 && v1[v-1]!=0)\n\t\t{\n\t\t\to[++k]=j+1;\n\t\t\th1[h-1]=0;\n\t\t\tv1[v-1]=0;\n\t\t}\n\t}\n\n\tfor(l=0;l<n;l++)\n\t\tprintf(\"%d \",o[l]);\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8319672131147541, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "7d21a5c9d18caf0df0661b29a1c960de", "bug_code_uid": "a2e901ea9f232628225687640c2407e5", "src_uid": "2c51414eeb430ad06aac53a99ff95eff", "apr_id": "fa7940f4aecae74b68c3d7b2f076bf2a", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{ long long int a,b,c,d,e,f,i,j,k,sum=0,sum1=0;\n  long long int x[200001],z[200001];\n    memset(z,0,200001);\n scanf(\"%lld %lld\",&a,&b);\n for(i=0;i<a;i++)\n    {scanf(\"%lld\",&x[i]);\n        sum=sum+x[i];}\nfor(i=0;i<a;i++)\n{sum1=sum;\n sum1=sum1-x[i];\n if(b-sum1>x[i])\n{z[i]=x[i];}\nelse if(b-sum1==x[i] || sum1==0)\n{z[i]=x[i]-1;}\nelse if(b-sum1<x[i])\n{e=0;\n            c=b-(a-1);\n            d=a-1;\n            if(c>x[i])\n   {\n                f=c-x[i];\n                c=c-f;\n                d=d+f;\n   }\n for(j=c;j>0;j--)\n {  if(sum1<d)\n {break;}\n \n  else\n  {e=e+1;\n  d=d+1;}\n \n \n \n \n \n \n \n \n \n    }\n z[i]=x[i]-e;}}\nfor(i=0;i<a;i++)\n{printf(\"%lld \",z[i]);}\nreturn 0;\n \n    }", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{ long long int a,b,c,d,e,f,i,j,k,p=0,q=0,sum=0,sum1=0;\n  long long int x[200001],z[200001];\n    memset(z,0,200001);\n scanf(\"%lld %lld\",&a,&b);\n for(i=0;i<a;i++)\n    {scanf(\"%lld\",&x[i]);\n        sum=sum+x[i];}\nfor(i=0;i<a;i++)\n{sum1=sum;\n sum1=sum1-x[i];\n if(b-sum1>x[i])\n{z[i]=x[i];}\nelse if(b-sum1==x[i] || sum1==0)\n{z[i]=x[i]-1;}\nelse if(b-sum1<x[i])\n{e=0;\n            c=b-(a-1);\n            d=a-1;\n            if(c>x[i])\n   {\n                f=c-x[i];\n                c=c-f;\n                d=d+f;\n   }\n   p=c;\n   if(sum1>=d)\n   {q=sum1-d+1;}\n   if(p>=q)\n   {e=q;}\n   else\n   {e=p;}\n   \n \n  \n \n \n \n \n \n \n \n \n \n    \n z[i]=x[i]-e;}}\nfor(i=0;i<a;i++)\n{printf(\"%lld \",z[i]);}\nreturn 0;\n \n    }"}
{"similarity_score": 0.9803636363636363, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f11a3aac59aaa6d04ee6e4a2bf10bad4", "bug_code_uid": "dde0bfbd479456b61f1a842be33dd2c0", "src_uid": "6469ed9f2486b498c9ffeb8270391e3a", "apr_id": "752d7c98630e20fb481529eb224f9b58", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n///selectionSort function\nvoid selSort(int arr[],int n)\n{\n    int i,j, min_index;\n    for (i=0;i<=n-1;i++)\n    {\n        min_index=i;\n        for (j=i+1;j<=n-1;j++)\n        {\n            if (arr[j]<arr[min_index])\n            {\n                min_index=j;\n            }\n        }\n            int temp=arr[i];\n            arr[i]=arr[min_index];\n            arr[min_index]=temp;\n    }\n}\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    selSort(arr, n);\n    for(int i=0; i<n; i++)\n    int a=arr[n-1];\n    int b=arr[0];\n    int diff= a-b+1;\n    printf(\"\\n%d\", diff-n);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n///selectionSort function\nvoid selSort(int arr[],int n)\n{\n    int i,j, min_index;\n    for (i=0;i<=n-1;i++)\n    {\n        min_index=i;\n        for (j=i+1;j<=n-1;j++)\n        {\n            if (arr[j]<arr[min_index])\n            {\n                min_index=j;\n            }\n        }\n            int temp=arr[i];\n            arr[i]=arr[min_index];\n            arr[min_index]=temp;\n    }\n}\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    selSort(arr, n);\n    int a=arr[n-1];\n    int b=arr[0];\n    int diff= a-b+1;\n    printf(\"\\n%d\", diff-n);\n    return 0;\n}"}
{"similarity_score": 0.9443742098609356, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f697b569ac82f5bbc092ef25893b9f80", "bug_code_uid": "7439d21a57a7faa129e5f7ba1c270459", "src_uid": "a765463559901e608035083be47aa245", "apr_id": "124c7dd2ded9828ab05db20ea6bf90b1", "difficulty": 1500, "tags": ["dp", "combinatorics", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nchar arr[100002];\nlong long int a[100002];\nint main(void)\n{\n    scanf(\"%s\",arr);\n    long long int m=0;\n    long long int count=0;\n    for(long long int i=0;;i++)\n    {\n        if(arr[i]=='a')\n        count++;\n        else if(arr[i]=='b')\n        {\n            a[m]=count;\n            count=0;\n            m++;\n        }\n        else if(arr[i]=='\\0')\n        {\n            a[m]=count;\n            m++;\n            break;\n        }\n        \n        else\n        continue;\n    }\n    long long int sos=0;\n    long long int result=1;\n    long long int mod=1000000000+7;\n    for(long long int i=0;i<m;i++)\n    {\n        result=(a[i]+1);\n        result=result%mod;\n        sos+=result;\n    }\n    \n    sos=sos%mod;\n    sos-=1;\n    \n    printf(\"%lld\",sos);\n    return 0;\n}", "fixed": "#include <stdio.h>\nchar arr[100002];\nlong long int a[100002];\nint main(void)\n{\n    scanf(\"%s\",arr);\n    long long int m=0;\n    long long int count=0;\n    for(long long int i=0;;i++)\n    {\n        if(arr[i]=='a')\n        count++;\n        else if(arr[i]=='b')\n        {\n            a[m]=count;\n            count=0;\n            m++;\n        }\n        else if(arr[i]=='\\0')\n        {\n            a[m]=count;\n            m++;\n            break;\n        }\n        \n        else\n        continue;\n    }\n    long long int sos=1;\n    long long int result;\n    long long int mod=1000000000+7;\n    for(long long int i=0;i<m;i++)\n    {\n        result=(a[i]+1);\n        result=result%mod;\n        sos*=result;\n        sos%=mod;\n    }\n    \n    sos=sos%mod;\n    sos-=1;\n    \n    printf(\"%lld\",sos);\n    return 0;\n}"}
{"similarity_score": 0.9360613810741688, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f03af4c001fbdeb104d16d4da513ccc4", "bug_code_uid": "a707222ec47028498ef734c9c6828b2d", "src_uid": "891fabbb6ee8a4969b6f413120f672a8", "apr_id": "c23b15076605ca6f15bc52770777429e", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    while(t--){\n        int n, k;\n        scanf(\"%d %d\", &n, &k);\n        k = k+(n-1)*9;\n        printf(\"%d\\n\", k);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    while(t--){\n      long long int n, k;\n        scanf(\"%I64d %I64d\", &n, &k);\n        k = k+(n-1)*9;\n        printf(\"%I64d\\n\", k);\n    }\n}"}
{"similarity_score": 0.9566630552546046, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8519bfefbd006297513b144c5232e083", "bug_code_uid": "b7fa64e1a7183b8b1895c45fc1e370f9", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "ec341749fe21037fd9316cab5cf0c373", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while (t--) {\r\n    int n, d;\r\n    scanf(\"%d %d\", &n, &d);\r\n    int arr[n], ok = 0;\r\n    for (int i = 0; i < n; i++) {\r\n      scanf(\"%d\", &arr[i]);\r\n      if (arr[i] <= d) {\r\n        ok = 1;\r\n      } else {\r\n        ok = 0;\r\n      }\r\n    }\r\n    if (ok == 1) {\r\n      printf(\"YES\\n\");\r\n    } else {\r\n      for (int step = 1; step < n; step++) {\r\n        int key = arr[step];\r\n        int j = step - 1;\r\n        while (key < arr[j] && j >= 0) {\r\n          arr[j + 1] = arr[j];\r\n          --j;\r\n        }\r\n        arr[j + 1] = key;\r\n      }\r\n      int okay = 0;\r\n      for (int i = 0; i < n - 1; i++) {\r\n        if ((arr[i] + arr[i + 1]) <= d) {\r\n          okay = 1;\r\n          break;\r\n        } else {\r\n          okay = 0;\r\n        }\r\n      }\r\n\r\n      if (okay == 1) {\r\n        printf(\"YES\\n\");\r\n      } else {\r\n        printf(\"NO\\n\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while (t--) {\r\n    int n, d;\r\n    scanf(\"%d %d\", &n, &d);\r\n    int arr[n], ok = 0;\r\n    for (int i = 0; i < n; i++) {\r\n      scanf(\"%d\", &arr[i]);\r\n      if (arr[i] > d) {\r\n        ok = 1;\r\n      }\r\n    }\r\n\r\n    if (ok == 0) {\r\n      printf(\"YES\\n\");\r\n    } else {\r\n      for (int step = 1; step < n; step++) {\r\n        int key = arr[step];\r\n        int j = step - 1;\r\n        while (key < arr[j] && j >= 0) {\r\n          arr[j + 1] = arr[j];\r\n          --j;\r\n        }\r\n        arr[j + 1] = key;\r\n      }\r\n      int okay = 0;\r\n      for (int i = 0; i < n - 1; i++) {\r\n        if ((arr[i] + arr[i + 1]) <= d) {\r\n          okay = 1;\r\n          break;\r\n        } else {\r\n          okay = 0;\r\n        }\r\n      }\r\n\r\n      if (okay == 1) {\r\n        printf(\"YES\\n\");\r\n      } else {\r\n        printf(\"NO\\n\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}"}
{"similarity_score": 0.9539473684210527, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "49d68d577e9e85580eddb757bacc12c1", "bug_code_uid": "e8d3b466f8e0e8b1cc214b833140dde4", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "b5fbb79fc340dc06beb6a9d00a729767", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t[];\n    int res[];\n    int n,i,j,max;\n    scanf(\"%d\",&n);\n\n\n    for (i=1;i<n+1;i++)\n    {\n        scanf(\"%d\",&t[i]);\n        res[i]=1;\n    }\n    j=1;\n    max=1;\n    for (i=1;i<n;i++)\n    {\n        if (t[i+1]>=t[i])\n        {\n           res[j]++;\n           if (res[j]>max)\n                max=res[j];\n        }\n        else\n        {\n            j++;\n        }\n    }\nprintf(\"%d\",max);\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t[100000];\n    int res[100000];\n    int n,i,j,max;\n    scanf(\"%d\",&n);\n\n\n    for (i=1;i<n+1;i++)\n    {\n        scanf(\"%d\",&t[i]);\n        res[i]=1;\n    }\n    j=1;\n    max=1;\n    for (i=1;i<n;i++)\n    {\n        if (t[i+1]>=t[i])\n        {\n           res[j]++;\n           if (res[j]>max)\n                max=res[j];\n        }\n        else\n        {\n            j++;\n        }\n    }\nprintf(\"%d\",max);\n\n}\n"}
{"similarity_score": 0.9209100758396533, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "25c9d620c6b213722a5ddf46d19b3235", "bug_code_uid": "a9520dbefc0ecf55b2cadd301f8888a9", "src_uid": "e79c6a337e9347522bf19f3d5c162541", "apr_id": "15b2bb36c7b3ed462a4938c1e81dd86d", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int i,j,k,n,a,t,t1,b,d,d1;\r\n  //  int h[26]={0};\r\n    scanf(\"%d\",&n);\r\n\r\n\r\n  while(n--)\r\n    {\r\n\r\n      scanf(\"%d\",&a);\r\n      int k[a];\r\n     for(i=1;i<=a;i++)\r\n     {\r\n         scanf(\"%d\",&k[i]);\r\n     }\r\n     int max=0;\r\n          for(i=1;i<=a;i++)\r\n     {\r\n         if(k[i]>max)\r\n         {\r\n            max=k[i];\r\n         d=i;\r\n         }\r\n     }\r\n     printf(\"%d\\n\",max-d);\r\n  }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int i,j,k,n,a,t,t1,b,d,d1;\r\n  //  int h[26]={0};\r\n    scanf(\"%d\",&n);\r\n\r\n\r\n  while(n--)\r\n    {\r\n\r\n      scanf(\"%d\",&a);\r\n      int k[a];\r\n     for(i=1;i<=a;i++)\r\n     {\r\n         scanf(\"%d\",&k[i]);\r\n     }\r\n     int max=0;\r\n          for(i=1;i<=a;i++)\r\n     {\r\n         if(k[i]-i>max)\r\n         {\r\n            max=k[i]-i;\r\n\r\n         }\r\n     }\r\n\r\n     printf(\"%d\\n\",max);\r\n\r\n  }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9854290339989207, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "bdce04986503674c6f698865bd464776", "bug_code_uid": "a37e4e13ba8ec0233d12ea6886935ffc", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "362d4aef6968ce1f01c81ec941618172", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long n, a, banc25=0, banc50=0, banc100=0, i, contor=0;\n    scanf(\"%l64d\", &n);\n    for(i=1; i<=n; i++)\n    {\n      if(contor==0)\n      {\n      scanf(\"%l64d\", &a);\n         if(a==25)\n      {\n        banc25++;\n      }\n         if(a==50)\n      {\n    if(banc25>=1)\n        {\n          banc25--;\n          banc50++;\n        }\n        else\n        {\n          contor++;\n        }\n      }\n          if(a==100)\n      {\n         if(banc25>=1 && banc50>=1)\n          {\n            banc25--;\n            banc50--;\n            banc100++;\n          }\n         else\n        {\n          if(banc25>=3)\n          {\n            banc25--;\n            banc100++;\n          }\n          else\n          {\n            contor++;\n          }\n        }\n\n      }\n\n      }\n    }\n    if(contor==0)\n    {\n      printf(\"YES\");\n    }\n    if(contor==1)\n    {\n      printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, a, banc25=0, banc50=0, banc100=0, i, contor=0;\n    scanf(\"%d\", &n);\n    for(i=1; i<=n; i++)\n    {\n      if(contor==0)\n      {\n      scanf(\"%d\", &a);\n         if(a==25)\n      {\n        banc25++;\n      }\n         if(a==50)\n      {\n    if(banc25>=1)\n        {\n          banc25--;\n          banc50++;\n        }\n        else\n        {\n          contor++;\n        }\n      }\n          if(a==100)\n      {\n         if(banc25>=1 && banc50>=1)\n          {\n            banc25--;\n            banc50--;\n            banc100++;\n          }\n         else\n        {\n          if(banc25>=3)\n          {\n            banc25=banc25-3;\n            banc100++;\n          }\n          else\n          {\n            contor++;\n          }\n        }\n\n      }\n\n      }\n    }\n    if(contor==0)\n    {\n      printf(\"YES\");\n    }\n    if(contor==1)\n    {\n      printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.44601769911504424, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0e83e4844f60527a55c7539cf9209401", "bug_code_uid": "5ac4fe82f09aab29a53df9cb7dab4cad", "src_uid": "b2031a328d72b464f965b4789fd35b93", "apr_id": "3ef24506999571b5c12be615803149b8", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "sortings", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\n int n,x,y,tmp;\n float w,a[200002];\n int z;\n \n\n scanf(\"%d %f\",&n,&w);\n for(x=0;x<2*n;x++){\n  scanf(\"%d\",&tmp);\n  for(y=0;y<x;y++){\n   if (tmp<a[y]) break;\n  }\n  for(z=x;z>y;z--)\n   {\n    a[z]=a[z-1];\n   }\n  a[y]=tmp; \n }\n \n float c,d;\n c=a[0],d=a[n]/2;\n if(c>d) c=d;\n c*=3*n;\n if (c>w) c=w;\n printf(\"%f\\n\",c); \n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nvoid sort(float*a,int len){\n if (len==1) return;\n int hl=len/2;\n float *b=(float*)malloc(sizeof(float)*hl);\n float *c=(float*)malloc(sizeof(float)*(len-hl));\n memcpy(b,a,sizeof(float)*hl);\n memcpy(c,a+hl,sizeof(float)*(len-hl));\n sort(b,hl);\n sort(c,len-hl);\n int x=0, l=0,r=0,L=hl,R=len-hl;\n while(l<L&&r<R){\n  if (b[l]<c[r])\n   a[x++]=b[l++];\n  else\n   a[x++]=c[r++];\n }\n int y;\n for(y=l;y<L;y++){\n  a[x++]=b[l++];\n }\n for(y=r;y<R;y++){\n  a[x++]=c[r++];\n }\n}\n\nint main()\n{\n\n int n,x,y,tmp;\n float w,a[200002];\n int z;\n \n \n   \n\n scanf(\"%d %f\",&n,&w);\n for(x=0;x<2*n;x++){\n  scanf(\"%f\",a+x); \n }\n \n sort(a,2*n);\n\n\n float c,d;\n c=a[0],d=a[n]/2;\n if(c>d) c=d;\n c*=3*n;\n if (c>w) c=w;\n printf(\"%f\\n\",c); \n}\n"}
{"similarity_score": 0.9977578475336323, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9e17e1bbd97b05679d8cb292737efc07", "bug_code_uid": "d7d5d7746c0bfb31fd405959c1d3f20a", "src_uid": "075988685fa3f9b20bd215037c504a4f", "apr_id": "cec8e673414961e28e7fdd0a92b3396c", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>2\nint main()\n{\n   // printf(\"jim\");\n    int n,m,k,i,j,count=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    scanf(\"%d\",&k);\n    getchar();\n   char ch[10000];\n   gets(ch);\n    if(ch[n-1-k]=='0')\n    {\n        count++;\n    }\n    for(i=n-1;i>n-m-1;i--)\n    {\n        if(i!=n-1-k)\n        {\n            if(ch[i]=='1')\n            {\n                count++;\n            }\n        }\n\n    }\n    printf(\"%d\",count);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>2\nint main()\n{\n   // printf(\"jim\");\n    int n,m,k,i,j,count=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    scanf(\"%d\",&k);\n    getchar();\n   char ch[1000000];\n   gets(ch);\n    if(ch[n-1-k]=='0')\n    {\n        count++;\n    }\n    for(i=n-1;i>n-m-1;i--)\n    {\n        if(i!=n-1-k)\n        {\n            if(ch[i]=='1')\n            {\n                count++;\n            }\n        }\n\n    }\n    printf(\"%d\",count);\n}\n"}
{"similarity_score": 0.9909584086799277, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a8bf7a63bbc3c046d32ab458398fa345", "bug_code_uid": "128a0193406784ddc62ed9ef9b2d44df", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "77da2b7d5cff00087f628d4059ef34e8", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nint main() {\n    int num0, num1, num0c;\n    scanf(\"%d %d\", &num0, &num1);\n    num0c = num0;\n    if (num0 == num1) {\n        while (num0) {\n            printf(\"10\");\n            num0--;\n        }\n    } else if (num0 == num1 + 1) {\n        while (num1) {\n            printf(\"01\");\n            num1--;\n            printf(\"0\");\n        }\n    } else if (num1 > num0 && num1 <= 2 * num0 + 2) {\n        while (num1 > num0 && num0 > 0) {\n            printf(\"110\");\n            num1 -= 2;\n            num0--;\n        }\n        while (num1 == num0 && num0 > 0) {\n            printf(\"10\");\n            num0--;\n            num1--;\n        }\n        if (num1 <= 2) {\n            while (num1) {\n                printf(\"1\");\n                num1--;\n            }\n        }\n    } else {\n        printf(\"-1\");\n    }\n    return 0;\n}\n", "fixed": "\n#include <stdio.h>\n\nint main() {\n    int num0, num1, num0c;\n    scanf(\"%d %d\", &num0, &num1);\n    num0c = num0;\n    if (num0 == num1) {\n        while (num0) {\n            printf(\"10\");\n            num0--;\n        }\n    } else if (num0 == num1 + 1) {\n        while (num1) {\n            printf(\"01\");\n            num1--;\n        } printf(\"0\");\n    } else if (num1 > num0 && num1 <= 2 * num0 + 2) {\n        while (num1 > num0 && num0 > 0) {\n            printf(\"110\");\n            num1 -= 2;\n            num0--;\n        }\n        while (num1 == num0 && num0 > 0) {\n            printf(\"10\");\n            num0--;\n            num1--;\n        }\n        if (num1 <= 2) {\n            while (num1) {\n                printf(\"1\");\n                num1--;\n            }\n        }\n    } else {\n        printf(\"-1\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9842357779300891, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4667b42f3ad1542907b88036095fb1d5", "bug_code_uid": "229ad82fe9cbe8dcbf4e3be407137b30", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "46a0b6d79e4802c2fa0f400f4a8661b5", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar s[200001];\n\tscanf(\"%s\",s);\n\tint a[200001]={};\n\tint n=strlen(s),t;\n\t//printf(\"%d\\n\",n);\n\tint count=0;\n\tint dir=1;\n\tint cur=0;\n\tint flag=0;\n\tscanf(\"%d\",&count);\n\twhile(count--)\n\t{\n\t\tscanf(\"%d\",&cur);\n\t\ta[cur-1]=(a[cur-1]+1)%2;\n\t\ta[n-cur]=(a[n-cur]+1)%2;\n\t}\n\tcount=0;\n\tcur=0;\n\t//printf(\"%d@@\\n\",n);\n\tt=n;\n\twhile(count!=n)\n\t{\n\t\tif(a[cur] && a[n-cur-1])\n\t\t{\n\t\t\ta[n-cur-1]=0;\n\t\t\tcur=n-cur-1;\n\t\t\tdir*=-1;\n\t\t}\n\t\telse if(a[cur])\n\t\t{\n\t\t\tdir*=-1;\n\t\t\ta[cur]=0;\n\t\t\tprintf(\"%c\",s[cur]);\n\t\t\tcur=n-cur-1;\n\t\t\tcur=cur+dir;\n\t\t\tcount++;\n\t\t\tcontinue;\n\t\t}\n\t\t//printf(\"%d\\n\",cur );\n\t\tif(count==10)\n\t\t\tbreak;\n\t\tprintf(\"%c\",s[cur]);\n\t\tcur=cur+dir;\n\t\tcount++;\n\t\t//printf(\"%d\",n );\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar s[200001];\n\tscanf(\"%s\",s);\n\tint a[200001]={};\n\tint n=strlen(s),t;\n\t//printf(\"%d\\n\",n);\n\tint count=0;\n\tint dir=1;\n\tint cur=0;\n\tint flag=0;\n\tscanf(\"%d\",&count);\n\twhile(count--)\n\t{\n\t\tscanf(\"%d\",&cur);\n\t\ta[cur-1]=(a[cur-1]+1)%2;\n\t\ta[n-cur]=(a[n-cur]+1)%2;\n\t}\n\tcount=0;\n\tcur=0;\n\t//printf(\"%d@@\\n\",n);\n\tt=n;\n\twhile(count!=n)\n\t{\n\t\tif(a[cur] && a[n-cur-1])\n\t\t{\n\t\t\ta[n-cur-1]=0;\n\t\t\tcur=n-cur-1;\n\t\t\tdir*=-1;\n\t\t}\n\t\telse if(a[cur])\n\t\t{\n\t\t\tdir*=-1;\n\t\t\ta[cur]=0;\n\t\t\tprintf(\"%c\",s[cur]);\n\t\t\tcur=n-cur-1;\n\t\t\tcur=cur+dir;\n\t\t\tcount++;\n\t\t\tcontinue;\n\t\t}\n\t\t//printf(\"%d\\n\",cur );\n\t\t\n\t\tprintf(\"%c\",s[cur]);\n\t\tcur=cur+dir;\n\t\tcount++;\n\t\t//printf(\"%d\",n );\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.3756906077348066, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "06b32707b486c65d0ccf0a0ba9aa42a3", "bug_code_uid": "ec8e8ca92a585e5d31abe620ecf52de8", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "9cd035daa19fbe40731582457f1f9786", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n     int n,i;\n     long long int c;\n     double a;\n    int t,b,j;\n    scanf(\"%d\",&t);\n    for(b=1;b<=t;b++){\n            c=0;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++){\n        a=log(i)/log(2.0);\n        j=a;\n        if(a==j)c=c-i;\n        else c=c+i;\n        }\n  printf(\"%I64d\\n\",c);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n     long long int n,c,i,a,b,t;\n\n\n    scanf(\"%I64d\",&t);\n   for(b=1;b<=t;b++){\n            c=0;\n        scanf(\"%I64d\",&n);\n        a=n*(n+1)/2;\n\n        for(i=1;i<=n;){\n       c=c+i;\n       i=2*i;\n        }\n        c=c*2;\n  printf(\"%I64d\\n\",a-c);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9711141678129298, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6643610f4c04aa06db9d2b9ac5d96b1b", "bug_code_uid": "132db091685bf2bc621c2b5b80979f2f", "src_uid": "296560688b83b9b6de740568b8deffd1", "apr_id": "b7fe2c66423c2651a651b4c7bd34f1d6", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid create(int x,  int n, int m, int k, int trans);\nint main()\n{\n\tint n, m, k, trans;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tif(n <= m)\n\t{\n\t\ttrans = 0;\n\t\tcreate(k,n,m,k,trans);\n\t}\n\telse\n\t{\n\t\ttrans = 1;\n\t\tcreate(k,m,n,k,trans);\n\t}\n\t\n\n\treturn 0;\n}\n\nvoid create(int x, int n, int m, int k, int trans)\n{\n\n\tint l, i, j,row, value, row1;\n\tint B[k][3];\n\tint A[n][m];\n\tfor (i=0; i<k; i++)\n\t\tscanf(\"%d %d %d\", &B[i][0], &B[i][1], &B[i][2]);\n\n\tif(trans)\n\t\trow1=2;\n\telse\n\t\trow1=1;\n\tfor(i =0; i < n; i++)\n\t{\n\t\tfor(j = 0; j < m; j++)\n\t\t{\n\t\t\tA[i][j] = 0;\n\t\t}\n\t}\n\n\tfor(i = 0; i < k; i++)\n\t{\n\t\t\trow = B[i][1];\n\t\t \tvalue = B[i][2];\n\t\t\n\t\t\tif(B[i][0] == row1)\n\t\t\t{\t\n\t\t\t \tfor(j =0; j < m; j++)\n\t\t\t \t{\n\t\t\t \t\tA[row-1][j] = value;\n\t\t\t \t}\n\t\t \t}\n\t\t \telse\n\t\t \t{\n\t\t\t \tfor(l =0; l < n; l++)\n\t\t\t \t{\n\t\t\t \t\tA[l][row-1] = value;\n\t\t\t \t}\n\t\t\t}\n\t}\n\t\n\tif(trans == 0)\n\t{\n\t\tfor(i =0; i < n; i++)\n\t\t{\n\t\t\tfor(j = 0; j < m; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", A[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\telse\n\t{\n\n\t\tfor(i =0; i < n; i++)\n\t\t{\n\t\t\tfor(j = 0; j < m; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", A[j][i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\n}", "fixed": "#include <stdio.h>\nvoid create(int x,  int n, int m, int k, int trans);\nint main()\n{\n\tint n, m, k, trans;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tif(n <= m)\n\t{\n\t\ttrans = 0;\n\t\tcreate(k,n,m,k,trans);\n\t}\n\telse\n\t{\n\t\ttrans = 1;\n\t\tcreate(k,m,n,k,trans);\n\t}\n\t\n\n\treturn 0;\n}\n\nvoid create(int x, int n, int m, int k, int trans)\n{\n\n\tint l, i, j,row, value, row1;\n\tint B[k][3];\n\tint A[n][m];\n\tfor (i=0; i<k; i++)\n\t\tscanf(\"%d %d %d\", &B[i][0], &B[i][1], &B[i][2]);\n\tif(trans)\n\t\trow1=2;\n\telse\n\t\trow1=1;\n\tfor(i =0; i < n; i++)\n\t{\n\t\tfor(j = 0; j < m; j++)\n\t\t{\n\t\t\tA[i][j] = 0;\n\t\t}\n\t}\n\n\tfor(i = 0; i < k; i++)\n\t{\n\t\t\trow = B[i][1];\n\t\t \tvalue = B[i][2];\n\t\t\n\t\t\tif(B[i][0] == row1)\n\t\t\t{\t\n\t\t\t \tfor(j =0; j < m; j++)\n\t\t\t \t{\n\t\t\t \t\tA[row-1][j] = value;\n\t\t\t \t}\n\t\t \t}\n\t\t \telse\n\t\t \t{\n\t\t\t \tfor(l =0; l < n; l++)\n\t\t\t \t{\n\t\t\t \t\tA[l][row-1] = value;\n\t\t\t \t}\n\t\t\t}\n\t}\n\t\n\tif(trans == 0)\n\t{\n\t\tfor(i =0; i < n; i++)\n\t\t{\n\t\t\tfor(j = 0; j < m; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", A[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\telse\n\t{\n\n\t\tfor(i =0; i < m; i++)\n\t\t{\n\t\t\tfor(j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", A[j][i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\n}"}
{"similarity_score": 0.9988726042841037, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "26ada51ac1f1fd672eccc2baa5443657", "bug_code_uid": "4bfe6d848cf3b6cc1b22577a3a2015e3", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "d6e139f5177f78b1ee7a407123f94ab0", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nlong long int i,n,sum=0,sum1=0,j,sum2=0,c1=0,c2=1,c=0,rev_sum=0;\nscanf(\"%lli\",&n);\nlong long int arr[n],sum_arr[n],rev_sum_arr[n];\nfor(i=0;i<n;i++){\n\tscanf(\"%lli\",&arr[i]);\n\tsum+=arr[i];\n\tsum_arr[i]=sum;\n}\nif(!sum%3)\n\tprintf(\"0\");\nelse{\nfor(j=n-1;j>=0;j--){\n\trev_sum+=arr[j];\n\trev_sum_arr[j]=rev_sum;\n}\nfor(i=2;i<n;i++){\n\tif(sum_arr[i-2]==sum/3)\n\t\tc1++;\n\tif(rev_sum_arr[i]==sum/3)\n\t\tc+=c1;\n}\nprintf(\"%lli\",c);\n}\n}\n", "fixed": "#include<stdio.h>\nint main(){\nlong long int i,n,sum=0,sum1=0,j,sum2=0,c1=0,c2=1,c=0,rev_sum=0;\nscanf(\"%lli\",&n);\nlong long int arr[n],sum_arr[n],rev_sum_arr[n];\nfor(i=0;i<n;i++){\n\tscanf(\"%lli\",&arr[i]);\n\tsum+=arr[i];\n\tsum_arr[i]=sum;\n}\nif(sum%3)\n\tprintf(\"0\");\nelse{\nfor(j=n-1;j>=0;j--){\n\trev_sum+=arr[j];\n\trev_sum_arr[j]=rev_sum;\n}\nfor(i=2;i<n;i++){\n\tif(sum_arr[i-2]==sum/3)\n\t\tc1++;\n\tif(rev_sum_arr[i]==sum/3)\n\t\tc+=c1;\n}\nprintf(\"%lli\",c);\n}\n}\n"}
{"similarity_score": 0.9940944881889764, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1be17d1004a09387ff0433d6e74bab84", "bug_code_uid": "1b47362161312dd910cb95b068fd91d1", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "b2d5233a6929eda6dfe496731364ac10", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char str[100000];\n    int k[130], i, n, x, count=0;\n    for(i=0; i<130; i++)\n        k[i]=0;\n    scanf(\"%d %s\", &n, str);\n    for(i=0; i<(2*n-2); i++)\n    {\n        if(i%2==0)\n        {\n            x = (int)(str[i]);\n            k[x]++;\n        }\n        else\n        {\n            if(k[(int)(str[i]+32)])\n                k[(int)(str[i]+32)]++;\n            else\n            {\n                count++;\n            }\n        }\n    }\n    printf(\"%d\\n\", count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    char str[200000];\n    int k[130], i, n, x, count=0;\n    for(i=0; i<130; i++)\n        k[i]=0;\n    scanf(\"%d %s\", &n, str);\n    for(i=0; i<(2*n-2); i++)\n    {\n        if(i%2==0)\n        {\n            x = (int)(str[i]);\n            k[x]++;\n        }\n        else\n        {\n            if(k[(int)(str[i]+32)])\n                k[(int)(str[i]+32)]--;\n            else\n            {\n                count++;\n            }\n        }\n    }\n    printf(\"%d\\n\", count);\n    return 0;\n}"}
{"similarity_score": 0.3493568043331077, "equal_cnt": 23, "replace_cnt": 14, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "3c33748477d7e41ffa255dcb2b63822a", "bug_code_uid": "b25001b8d17eb65d0cee621a958fec9c", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "79664529be56dab0967b5b9cac598be6", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n    char a[1000000];\n    int l,i,j,min,x;\n    int b[8]={0};\n    scanf(\"%s\",a);\n\n    l=strlen(a);\n    for(i=0;i<l;i++)\n    {\n        if(a[i]=='B')\n            b[0]++;\n            if(a[i]=='u')\n            b[1]++;\n            if(a[i]=='l')\n            b[2]++;\n            if(a[i]=='b')\n            b[3]++;\n            if(a[i]=='a')\n            b[4]++;\n            if(a[i]=='s')\n            b[5]++;\n            if(a[i]=='u')\n            b[6]++;\n            if(a[i]=='r')\n            b[7]++;\n\n\n\n    }\n    min=b[4]/2;\n    if(min<=b[6]/2)\n        min=b[6]/2;\n    for(i=0;i<7;i++)\n    {\n        if(b[i]<b[i+1])\n        {\n            x=i;\n            min=b[i];\n        }\n    }\n    printf(\"%d\",min);\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100000];\n\tint min=100001;\n    int l,i,j,count[7]={0},a;\n    scanf(\"%s\",str);\n//    printf(\"%s\",str);\n    l=strlen(str);\n    for(i=0;i<l;i++)\n    {\n        if(str[i]=='B')\n            count[0]++;\n        if(str[i]=='b')\n            count[1]++;\n        if(str[i]=='l')\n            count[2]++;\n        if(str[i]=='s')\n            count[3]++;\n        if(str[i]=='r')\n            count[4]++;\n        if(str[i]=='a')\n            count[5]++;\n        if(str[i]=='u')\n            count[6]++;\n    }\n    count[6]=count[6]/2;\n    count[5]=count[5]/2;\nfor(i=0;i<7;i++)\n{\nif(count[i]<min)min=count[i];\n}\nprintf(\"%d\\n\",min);\nreturn 0;\n}\n"}
{"similarity_score": 0.9806949806949807, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "86736bc90d1d45e5cad37b2bce42b3a4", "bug_code_uid": "85f5120b237e7062ba943a2864567f72", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "57b9edd43ac5342fa0f4a83fce2550f8", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(int argc, char *argv[])\n{\n\tint a,k,max;\n\tint n,i;\n\tmax=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tk=(int)sqrt(a)*(int)sqrt(a);\n\t\tif(k!=a&&a>max)\n\t\tmax=a;\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\t\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(int argc, char *argv[])\n{\n\tint a,k,max;\n\tint n,i;\n\tmax=-99999999;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tk=(int)sqrt(a)*(int)sqrt(a);\n\t\tif(k!=a&&a>max)\n\t\tmax=a;\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\t\n}"}
{"similarity_score": 0.7350835322195705, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d56d6aaa56b7b3cabcaab3332a05312c", "bug_code_uid": "23f8cc4bb0d7de9f9bcadcf63198aad1", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "e6d4dc6ef583d5834a6f1455622ea398", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n][2];\n    for(int i=0; i<n; i++)\n    {\n\n        scanf(\"%d\",&a[i][0]);\n        scanf(\"%d\",&a[i][1]);\n\n    }\n\n    int a1[n];\n    for(int i=0;i<n;i++)\n        {\n\n        if(a[i][0]%a[i][1]==0)\n            {\n\n            a1[i]=a[i][0]/a[i][1];\n\n            }\n        else{\n\n            a1[i]=a[i][0]/a[i][1]+1;\n        }\n\n        }\n\n\n\n        for (int i=0;i<n;i++)\n            {\n\n            printf(\"%d \",a1[i]);\n\n            }\n\n\n\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n][2];\n    for(int i=0; i<n; i++)\n    {\n\n        scanf(\"%d\",&a[i][0]);\n        scanf(\"%d\",&a[i][1]);\n\n    }\n\n    int a1[n];\n    for(int i=0;i<n;i++)\n        {\n            if(a[i][0]<=2)\n                {\n\n                a1[i]=1;\n\n                }\n\n        else\n        {\n             a[i][0]=a[i][0]-2;\n             if(a[i][0]%a[i][1]==0)\n                {\n\n                a1[i]=a[i][0]/a[i][1]+1;\n\n\n                }\n             else\n             {\n\n\n                a1[i]=a[i][0]/a[i][1]+2;\n\n\n\n             }\n\n\n\n\n\n\n\n        }\n\n\n        }\n\n\n\n        for (int i=0;i<n;i++)\n            {\n\n                printf(\"%d \",a1[i]);\n\n            }\n\n\n\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.9953703703703703, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "23d3c133f4e456c5d1c7c86b642952c0", "bug_code_uid": "c6c039bf23ac627eced0d88207473fda", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "86209f837afef530b262ee4d9bd76409", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long i,j,k=0,f,t1=0,t2=0;\n    char s[100000];\n    scanf(\"%s\",s);\n    for(i=0;i<strlen(s);i++){\n        if(s[i]=='^'){\n            f=i;\n            break;\n        }\n    }\n    for(i=0;i<strlen(s);i++){\n\n        if(s[i]!='='){\n\n            t1=t1+(s[i]-'0')*(f-i);\n        }\n    }\n\n    if(t1==0) printf(\"balance\");\n    else if(t1>0) printf(\"left\");\n    else printf(\"right\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long i,j,k=0,f,t1=0,t2=0;\n    char s[20000000];\n    scanf(\"%s\",s);\n    for(i=0;i<strlen(s);i++){\n        if(s[i]=='^'){\n            f=i;\n            break;\n        }\n    }\n    for(i=0;i<strlen(s);i++){\n\n        if(s[i]!='='){\n\n            t1=t1+(s[i]-'0')*(f-i);\n        }\n    }\n\n    if(t1==0) printf(\"balance\");\n    else if(t1>0) printf(\"left\");\n    else printf(\"right\");\n}"}
{"similarity_score": 0.9459901800327333, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f00711599d4b8bb042ed7bee7e039163", "bug_code_uid": "47308e4c7d042777ace4f56300904646", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "b770ba2e3d3364cdf79d045fb00aa8ef", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long int i,n,a,b,x[100009],y;\n    scanf(\"%llu %llu %llu\",&n,&a,&b);\n    a=a%b;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%llu\",&y);\n        x[i]=((y%b)*a)%b;\n    }\n    for(i=0;i<n;i++)printf(\"%llu \",x[i]);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    unsigned long long int i,n,a,b,x[100009],y;\n    scanf(\"%llu %llu %llu\",&n,&a,&b);\n    if(b>1)a=a%b;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%llu\",&y);\n        x[i]=((y%b)*a)%b;\n        if(a)x[i]=x[i]/a;\n    }\n    for(i=0;i<n;i++)printf(\"%llu \",x[i]);\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.8186173853524983, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a54adec2856233742f4745fa15a568b4", "bug_code_uid": "b7f294131fd2da52273ac8135f801ec2", "src_uid": "a6ee741df426fd2d06fdfda4ca369397", "apr_id": "650255d826e2a82be840691c2d348d58", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,d,i,j;\n    scanf(\"%d %d\",&n,&d);\n    int w[d+1];\n    for(i=0;i<d;i++)\n    {\n        char a[n+1];int temp=0;\n        scanf(\"%s\",a);\n        for(j=0;j<n;j++)\n        {\n            if(a[j]=='1')\n            {\n             temp++;\n            }\n           \n        }\n        if(temp==n)\n           { w[i+1]=0;}\n        else\n            w[i+1]= 1;\n    }\n    int max=0,t = 0;\n    for(i=1;i<=d;i++)\n    {\n       \n        if(w[i]==1)\n        {\n           t++; \n        }\n        else if(w[i]==0)\n        {\n            if(t>max)\n               {\n                   max = t;\n                   \n               }\n            t =0;\n        }\n       \n        \n    }\n    \n    printf(\"%d\",max);\n    \n    return 0;\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,d,i,j;\n    scanf(\"%d %d\",&n,&d);\n    int w[d+1];\n    for(i=0;i<d;i++)\n    {\n        char a[n+1];int temp=0;\n        scanf(\"%s\",a);\n        for(j=0;j<n;j++)\n        {\n            if(a[j]=='1')\n            {\n             temp++;\n            }\n           \n        }\n        if(temp==n)\n           { w[i+1]=0;}\n        else\n            w[i+1]= 1;\n    }\n    int max=0,t = 0;\n    for(i=1;i<=d;i++)\n    {\n       \n        if(w[i]==1)\n        {\n           t++; \n        }\n        if(t>max)\n               {\n                   max = t;\n                   \n               }\n        if(w[i]==0)\n            t = 0;\n      \n      \n    }\n    \n    printf(\"%d\",max);\n    \n    return 0;\n    \n}"}
{"similarity_score": 0.9981470043236566, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "52a17b706e8efa03ce5cf1553cc3deda", "bug_code_uid": "cf5431ef18a06dd1ae9b30ee24bfc327", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "4463e42279d9919ea71bd722fddfccc6", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n,a[100],b[100],c[100],t;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&a[i],&b[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=b[i])\n        {\n            printf(\"rated\");\n            break;\n        }\n    }\n    if(i==n)\n    {\n        for(i=0;i<n;i++)\n            c[i]=a[i];\n        for(i=0;i<n-1;i++)\n        {\n            for(j=i+1;j<n;j++)\n            {\n                if(c[i]<c[j])\n                {\n                    t=c[i];\n                    c[i]=c[j];\n                    c[j]=t;\n                }\n            }\n        }\n        for(i=0;i<n;i++)\n        {\n            if(c[i]!=a[i])\n            {\n                printf(\"unrated\");\n                break;\n            }\n        }\n        if(i==n)\n            printf(\"maybe\");\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,n,a[1000],b[1000],c[1000],t;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&a[i],&b[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=b[i])\n        {\n            printf(\"rated\");\n            break;\n        }\n    }\n    if(i==n)\n    {\n        for(i=0;i<n;i++)\n            c[i]=a[i];\n        for(i=0;i<n-1;i++)\n        {\n            for(j=i+1;j<n;j++)\n            {\n                if(c[i]<c[j])\n                {\n                    t=c[i];\n                    c[i]=c[j];\n                    c[j]=t;\n                }\n            }\n        }\n        for(i=0;i<n;i++)\n        {\n            if(c[i]!=a[i])\n            {\n                printf(\"unrated\");\n                break;\n            }\n        }\n        if(i==n)\n            printf(\"maybe\");\n    }\n\n}\n"}
{"similarity_score": 0.76266137040715, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e329bf4743f4856a7980828e1358a92f", "bug_code_uid": "a8d3aa859d2ce5b0b27366cfe89275a1", "src_uid": "740d2aba32f69b8cfe8f7cb624621a63", "apr_id": "612e3989a75626adb6ff9606fce5686b", "difficulty": 1200, "tags": ["dp", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    unsigned long long i,n,q,k,a[100001] = {0},ans;\n    long long l,r,j;\n    scanf(\"%llu%llu%llu\", &n,&q,&k);\n    for(i=0;i<n;i++) {\n        scanf(\"%llu\",&a[i]);\n    }\n    for(i=0;i<q;i++) {\n        ans = 0;\n        scanf(\"%lld%lld\",&l,&r);\n        ans += a[l-1]-1;\n        ans += k-a[r-1];\n        for(j=l-1;j<r-1;j++) {\n            ans+=(a[j+1]-a[j]-1)*2;\n        }\n        printf(\"%llu\\n\",ans);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main() {\n    unsigned long long i,n,q,k,a[100001] = {0},ans,b[100001] = {0};\n    long long l,r,j;\n    scanf(\"%llu%llu%llu\", &n,&q,&k);\n    for(i=0;i<n;i++) {\n        scanf(\"%llu\",&a[i]);\n        if(i==0) {\n            b[i]=0;\n        } else {\n            b[i] = b[i-1]+(a[i]-a[i-1]) ;\n        }\n    }\n    for(i=0;i<q;i++) {\n        ans = 0;\n        scanf(\"%lld%lld\",&l,&r);\n        ans += a[l-1]-1;\n        ans += k-a[r-1];\n        j = 2*(b[r-1]-b[l-1]) - 2*(r-l);\n        ans += j;\n        printf(\"%llu\\n\",ans);\n    }\n    return 0;\n}"}
{"similarity_score": 0.22333571939871152, "equal_cnt": 19, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "16aa35af957ad551bc45a3a0da965e38", "bug_code_uid": "d079c1b1e2bec71fa3dab6760943aa0f", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "abea612e7ee30e5821cc0e6ee912f289", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n\r\nint main(){\r\n   long long int t,a,b,s,i,j,n,g,h,flag;\r\n   \r\n   scanf(\"%lld\",&t);\r\n   while(t--){\r\n    flag=0;\r\n    scanf(\"%lld\",&n);\r\n    long long int ar[n];\r\n    long long int br[10000000]={0};\r\n\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%lld \",&ar[i]);\r\n        br[ar[i]]++;\r\n    }\r\n\r\n    for(i=0;i<10000000;i++){\r\n        if(br[i]>1){\r\n            flag=1;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if(flag==1){\r\n        printf(\"NO\\n\");\r\n    }\r\n    else{\r\n        printf(\"YES\\n\");\r\n    }\r\n\r\n\r\n\r\n    \r\n }\r\n}   \r\n    \r\n    ", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t,n,a,b,i,flag,j;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        int ar[n];\r\n        flag=0;\r\n\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%d\",&ar[i]);\r\n        }\r\n\r\n        for(i=0;i<n;i++){\r\n            for(j=0;j<n-1;j++){\r\n                if(ar[j]>ar[j+1]){\r\n                    b=ar[j];\r\n                    ar[j]=ar[j+1];\r\n                    ar[j+1]=b;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        /*for(i=0;i<n;i++){\r\n            printf(\"%d\",ar[i]);\r\n        }*/\r\n\r\n        for(i=0;i<n-1;i++){\r\n            if(ar[i]==ar[i+1]){\r\n                flag=1;\r\n            }\r\n        }\r\n\r\n        if(flag==1){\r\n            printf(\"no\\n\");\r\n        }\r\n        else{\r\n            printf(\"yes\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.13131313131313133, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "b6b29fb7a56413bad79da7edeaa5e542", "bug_code_uid": "6db7da69fbf09a9c924631ef9840c726", "src_uid": "2ae1a4d4f2e58b359c898d1ff38edb9e", "apr_id": "ba7a04c9409150c7e857996165fccbaa", "difficulty": 1400, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void) {\n    int n;\n\n    scanf(\"%d\", &n);\n\n    for(int i = n+1; i--; ){\n        if(n % i == 0) {\n            int fun = 0;\n            int temp = 1;\n            do {\n                fun += temp;\n                temp += i;\n                temp %= n;\n            } while (temp != 1)\n            printf(\"%d \", fun);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nlong long arr[100005];\n\nvoid quickSort(int first, int last)\n{\n\tint pivot;\n\tint i;\n\tint j;\n\tlong long temp;\n\t\n\tif (first < last)\n\t{\n\t\tpivot = first;\n\t\ti = first;\n\t\tj = last;\n\n\t\twhile (i < j)\n\t\t{\n\t\t\twhile (arr[i] <= arr[pivot] && i < last)\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\twhile (arr[j] > arr[pivot])\n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tif (i < j)\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\n\t\ttemp = arr[pivot];\n\t\tarr[pivot] = arr[j];\n\t\tarr[j] = temp;\n\n\t\tquickSort(first, j - 1);\n\t\tquickSort(j + 1, last);\n\t}\n}\n\n\nint main(void) {\n    long long n;\n    long long idx=0;\n    \n    scanf(\"%lld\", &n);    \n    \n    for(long long i = 1; i*i <= n ; i++){    \n        if(n % i == 0) {\n            long long cnt = n / i;\n            arr[idx++] = 1 * cnt + cnt * (cnt -1 ) * i / 2;\n            if( cnt != i )\n                arr[idx++] = 1  * i + i * (i -1 ) * cnt / 2;\n        }\n    }\n\n    quickSort(0, idx - 1);\n\n    for(long long i = 0; i< idx; i++) \n        printf(\"%lld \", arr[i]);\n    return 0;\n}\n\n"}
{"similarity_score": 0.5699570815450644, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "19ec77817d94ed95ca57a2c81a9aff17", "bug_code_uid": "20a0cdd1acb61a2e4165beecaaf2d07d", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "313836ebab718fb71bd631d537153d8b", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n        int n;\n        int l,r,t;\n        scanf(\"%d\",&t);\n        while(t-->0)\n        {\n            scanf(\"%d %d\",&l,&r);\n            int f=0;\n            int x=l;\n                for(int y=x+1;y<=r;y++)\n                {\n                    if(y%x==0 && x!=y)\n                    {\n                        f=1;\n                        printf(\"%d %d\",x,y);\n                        break;\n                    }\n                    if(x==r)\n                        {\n                            x++;\n                            y=x+1;\n                        }\n                }\n                if(f==1)\n                    break;\n            }\n        }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n        int n;\n        int l,r,t;\n        scanf(\"%d\",&t);\n        while(t-->0)\n        {\n            scanf(\"%d %d\",&l,&r);\n            int x=l;\n            \n            for(int x=l;x<=r;x++)\n            {\n                int y=x+x;\n                if(y%x==0 && (y<=r)&&(y>=l))\n                {\n                    printf(\"%d %d\\n\",x,y);\n                    break;\n                }\n            }\n        }\n}"}
{"similarity_score": 0.9375893282515484, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "9969de5497c063ea2b4f1ddfb351e2d8", "bug_code_uid": "ab55a0464beba16ca37aca969cf558bf", "src_uid": "6fb20914525715af737d81f3a5d98636", "apr_id": "9fe2132b45cfba76e3e808e55f8425bf", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint a[150][150];\nchar x[150][150];\n\nint main()\n{\n    int w, n, k, i, j, l, y, z;\n\n    scanf(\"%d%d\", &n, &k);\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%c\", &x[i][j]);\n        }\n        scanf(\"%c\");\n    }\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            for(l=0; l<k; l++)\n            {\n                if(x[i][j+l]!='.') break;\n            }\n            if(l==k)\n            {\n                for(l=0; l<k; l++) a[i][j+l]++;\n            }\n\n            for(l=0; l<k; l++)\n            {\n                if(x[i+l][j]!='.') break;\n            }\n            if(l==k)\n            {\n                for(l=0; l<k; l++) a[i+l][j]++;\n            }\n        }\n    }\n\n    w=0;\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(a[i][j]>w)\n            {\n                w=a[i][j];\n                y=n-i;\n                z=j+1;\n            }\n        }\n    }\n\n    printf(\"%d %d\\n\", z, y);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint a[150][150];\nchar x[150][150];\n\nint main()\n{\n    int w, n, k, i, j, l, y, z;\n\n    scanf(\"%d%d\", &n, &k);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%c\", &x[i][j]);\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%c\", &x[i][j]);\n        }\n    }\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            for(l=0; l<k; l++)\n            {\n                if(x[i][j+l]!='.') break;\n            }\n            if(l==k)\n            {\n                for(l=0; l<k; l++) a[i][j+l]++;\n            }\n\n            for(l=0; l<k; l++)\n            {\n                if(x[i+l][j]!='.') break;\n            }\n            if(l==k)\n            {\n                for(l=0; l<k; l++) a[i+l][j]++;\n            }\n        }\n    }\n\n    w=0;\n\n    y=1;\n    z=1;\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(a[i][j]>w)\n            {\n                w=a[i][j];\n                y=i+1;\n                z=j+1;\n            }\n        }\n    }\n\n    printf(\"%d %d\\n\", y, z);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9298013245033112, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "544696a5d723297407bd28931115b6f8", "bug_code_uid": "f820e41399bfc187900f5490b9a8a9b4", "src_uid": "62f5798bdcea237c0df9b4cd288b97de", "apr_id": "f4132a1096022b9f1e24075378e39640", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint count_min(char* s, int len)\n{\n\tint zero = 0;\n\tint one = 0;\n\tfor(int x = 0; x < len; x++)\n\t{\n\t\tif(s[x] == '0')\n\t\t\tzero++;\n\t\telse\n\t\t\tone++;\n\t}\n\tif(one < zero)\n\t\treturn one;\n\telse if(zero < one)\n\t\treturn zero;\n\treturn 0;\n}\n\nvoid solve()\n{\n\tchar s[200000];\n\tchar temp[200000];\n\tint len;\n\tint a,b;\n\tscanf(\"%s\", s);\n\tlen = strlen(s);\n\tif(len == 0)\n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\tstrncpy(temp, s, len - 1);\n\ta = count_min(temp, len - 1);\n\tstrncpy(temp, s+1, len - 1);\n\tb = count_min(temp, len - 1);\n\tc = count_min(s, len);\n\tif(c > b && c > a)\n\t\tprintf(\"%d\\n\", c);\n\telse if(b > c && b > a)\n\t\tprintf(\"%d\\n\", b);\n\telse\n\t\tprintf(\"%d\\n\", a);\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int x = 0; x < t; x++)\n\t\tsolve();\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint count_min(char* s, int len)\n{\n\tint zero = 0;\n\tint one = 0;\n\tfor(int x = 0; x < len; x++)\n\t{\n\t\tif(s[x] == '0')\n\t\t\tzero++;\n\t\telse\n\t\t\tone++;\n\t}\n\tif(one < zero)\n\t\treturn one;\n\telse if(zero < one)\n\t\treturn zero;\n\treturn 0;\n}\n\nvoid solve()\n{\n\tchar s[200000];\n\tchar temp[200000];\n\tint len;\n\tint a, b, c;\n\tscanf(\"%s\", s);\n\tlen = strlen(s);\n\tif(len == 0)\n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\tstrncpy(temp, s, len - 1);\n\ta = count_min(temp, len - 1);\n\tstrncpy(temp, s+1, len - 1);\n\tb = count_min(temp, len - 1);\n\tc = count_min(s, len);\n\tif(b > a)\n\t\ta = b;\n\tif(c > a)\n\t\ta = c;\n\tprintf(\"%d\\n\", a);\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int x = 0; x < t; x++)\n\t\tsolve();\n}\n"}
{"similarity_score": 0.4789156626506024, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "94fdda1060c5e5a288a2ef17f8c56cc9", "bug_code_uid": "50918afbe7965a93a4cd5f95cf1f49c1", "src_uid": "8d911f79dde31f2c6f62e73b925e6996", "apr_id": "8284aa367940e5e799598c106670906c", "difficulty": 900, "tags": ["dfs and similar", "trees", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nvoid changeimm( int**, int ,int, int );\nint main(void)\n{\n\tint n,i,j;\n\tint *im;\n\tint **imm;\n\tint numGroup = 0;\n\tscanf(\"%d\",&n);\n\tim = (int*)malloc(sizeof(int)*n);\n\timm = (int**)malloc(sizeof(int*)*n);\n\tfor(i=0;i<n;i++)\n\t\timm[i] = (int*)malloc(sizeof(int)*n);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<n;j++)\n\t\t\timm[i][j] = 0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&im[i]);\n\tfor(i=0;i<n;i++)\n\t\timm[i][i] = 1;\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(im[i] != -1)\n\t\t{\n\t\t\tchangeimm(imm,n,i,im[i]-1);\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint temp = 0;\n\t\tfor(j=0;j<n;j++)\n\t\t\ttemp = temp + imm[i][j];\n\t\tif(temp >= numGroup)\n\t\t\tnumGroup = temp;\n\t}\n\tprintf(\"%d\\n\",numGroup);\n\treturn 0;\n}\nvoid changeimm(int** imm, int n, int a, int b)\n{\t\n\tint i = 0;\n\timm[a][b] = 1;\n\tfor(i=0; i<n; i++)\n\t\tif(imm[b][i] == 1 )\n\t\t\timm[a][i] = 1;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\n\nvoid changeimm( int**, int ,int, int );\nvoid calNum(int*,int, int*);\nint main(void)\n{\n\tint n,i,j;\n\tint *im;\n\tint **imm;\n\tint numGroup = 0;\n\tint max = -1;\n\tscanf(\"%d\",&n);\n\tim = (int*)malloc(sizeof(int)*n);\n\timm = (int**)malloc(sizeof(int*)*n);\n\tfor(i=0;i<n;i++)\n\t\timm[i] = (int*)malloc(sizeof(int)*n);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<n;j++)\n\t\t\timm[i][j] = 0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&im[i]);\n\tfor(i=0;i<n;i++)\n\t\timm[i][i] = 1;\n\t\n\tfor(i=0;i<n;i++)\n\t{\t numGroup = 1;\n\t\t calNum(im,i,&numGroup);\n\t\tif( max <= numGroup )\n\t\t\tmax = numGroup;\n\t}\n\t/*\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tprintf(\"%d \",imm[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint temp = 0;\n\t\tfor(j=0;j<n;j++)\n\t\t\ttemp = temp + imm[i][j];\n\t\tif(temp >= numGroup)\n\t\t\tnumGroup = temp;\n\t}\n\t*/\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\nvoid calNum(int *im, int a, int* numGroup)\n{\n\tif( im[a] == -1 )\n\t{\n\n\t}\n\telse\n\t{\n\t\t*numGroup = *numGroup+1;\n\t\tcalNum(im,im[a]-1,numGroup);\n\t}\n}\nvoid changeimm(int** imm, int n, int a, int b)\n{\t\n\tint i = 0;\n\timm[a][b] = 1;\n\tfor(i=0; i<n; i++)\n\t\tif(imm[b][i] == 1 )\n\t\t\timm[a][i] = 1;\n}"}
{"similarity_score": 0.6080206985769728, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "fcb417bcdc7fe002e62928f88253fd29", "bug_code_uid": "4344fa9bb3aa02e1503df790cc7f4155", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "615165fe4e2e5e469fb38a804d359bc9", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint i,j;\n\tint n;\n\tint x[100005],y[100005];\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\tint count=1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(x[i]<0)\n\t\t\tcount--;\n\t}\n\tif(count>=0)\n\t{\n\t\tprintf(\"Yes\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"No\\n\");\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint i,j; \n\tint n;\n\tint x[100005],y[100005];\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\tint count=0;\n\tint ctr=0;\n\t// for(i=0;i<n;i++)\n\t// {\n\t// \tif(x[i]<0)\n\t// \t\tcount--;\n\t// }\n\t// for(i=0;i<n;i++)\n\t// {\n\t// \tif(x[i]>0)\n\t// \t\tcount++;\n\t// }ctr\n\tfor(i=0;i<n;i++){\n\t\tif(x[i]<0)\n\t\t\tcount++;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(x[i]>0)\n\t\t\tctr++;\n\t}\n\tif(count<=1 || ctr<=1)\n\t{\n\t\tprintf(\"Yes\\n\");\n\t\treturn 0;\n\t}\n\t\n\tprintf(\"No\\n\");\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9980806142034548, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d471469107d472d81c71d866ff264d43", "bug_code_uid": "b0e7492e08c6267e5ff3de95190913b8", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "de8df6515f8bdc7665d6e07af17adad4", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int count[26]= {0}, n, i, flag=1;\r\n        char str[50];\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", &str);\r\n\r\n        for(i=0; i<strlen(str); i++)\r\n        {\r\n            count[str[i]-'A']++;\r\n            if(count[str[i]-'A']>1 && str[i]!=str[i-1])\r\n            {\r\n                flag = 0;\r\n                break;\r\n            }\r\n        }\r\n        flag?printf(\"YES\\n\"):printf(\"NO\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int count[26]= {0}, n, i, flag=1;\r\n        char str[60];\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", &str);\r\n\r\n        for(i=0; i<strlen(str); i++)\r\n        {\r\n            count[str[i]-'A']++;\r\n            if(count[str[i]-'A']>1 && str[i]!=str[i-1])\r\n            {\r\n                flag = 0;\r\n                break;\r\n            }\r\n        }\r\n        flag?printf(\"YES\\n\"):printf(\"NO\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8805194805194805, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "eaaa8a489ee692e8df2b56d4b32ddfbb", "bug_code_uid": "02fff464182dcc599c90afd813df9e64", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "cc4a7bfc5ea035488f1f5d181ce7cf39", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],i,t=0;\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    \n    for(i=0;i<n;i++)\n    {\n        if(a[i]==0)\n        t++;\n        if(t==2)\n        {\n            printf(\"NO\\n\");\n            break;\n        }\n    }\n    if(n==1 && t==0)\n    printf(\"YES\\n\");\n    else if(t==1 && n>1)\n    printf(\"YES\\n\");\n    else if(t==1 && n==1)\n    printf(\"NO\\n\");\n    return 0;\n}", "fixed": "\n#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],i,t=0;\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    \n    for(i=0;i<n;i++)\n    {\n        if(a[i]==0)\n        t++;\n        \n    }\n    if(n==1 && t==0)\n    printf(\"YES\\n\");\n    else if(t==1 && n>1)\n    printf(\"YES\\n\");\n    else \n    printf(\"NO\\n\");\n    return 0;\n}"}
{"similarity_score": 0.6059654631083202, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f8b6e9bbd7c372d39b9829351eb272ed", "bug_code_uid": "66391fa491b387c2203b859fea4003ee", "src_uid": "6c9cbe714f8f594654ebc59b6059b30a", "apr_id": "ff28cfd5d0811119a6f03afc6e044172", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tint n1=0,n2=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint c;\n\t\tscanf(\"%d\",&c);\n\t\tif(c==1)n1++;\n\t\telse n2++;\t\n\t}\n\tprintf(\"1=%d\\n2=%d\\n\",n1,n2);\n\t\n\tint count=0;\n\tint min=n1;\n\tif(n2<min)min=n2;\n\t\n\tcount+=min;\n\tn1-=min;\n\tn2-=min;\n\tif(n1){\n\t\tcount+=n1/3;\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tint n1=0,n2=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint c;\n\t\tscanf(\"%d\",&c);\n\t\tif(c==1)n1++;\n\t\telse n2++;\t\n\t}\n\t\n\tint count=0;\n\tint min=n1;\n\tif(n2<min)min=n2;\n\t\n\tcount+=min;\n\tn1-=min;\n\tn2-=min;\n\tif(n1){\n\t\tcount+=n1/3;\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}"}
{"similarity_score": 0.27123695976154993, "equal_cnt": 12, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "a1b881c374ecacdb75db010b3edea221", "bug_code_uid": "37a924b3339600c7e1fbd3f2b7fd0f6b", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "07bbd980d9bbf43717b43e4a162b2c4d", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,x,ans;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tfor(int j=0;j<n-1;j++)\n\t{\n\t        arr[j+1]=arr[j+1]+arr[j];\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int k=0;k<m;k++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t//\tprintf(\"-1\\n\");\n\t\tint l=0;\n\t\twhile(l<n)\n\t\t{\n\t\t\tif(x<=arr[l])\n\t\t\t{\n\t\t\t\tans=l+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint j,i,n,sum=0,m,x,a[1000000];\n\tscanf(\"%d\",&n);\n\tj=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tsum+=x;\n\t\tfor( ;j<sum;j++)\n\t\t\ta[j]=i+1;\n\t}\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tprintf(\"%d\\n\",a[x-1]);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9988023952095808, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e5c249804cd497245000a4c63ce66764", "bug_code_uid": "841e3c7ccbfcdd964d3020d5c7973a2c", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "5aecb58e237670d51269db7a5eca5ef6", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MIN 99999999\nint main()\n{\n\tint n,arr[200001],i,min=MIN,flag=0;\n\tchar str[200001];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",str);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(str[i]=='R' && str[i+1]=='L')\n\t\t{\n\t\t\tif(min>(arr[i+1]-arr[i])/2)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tmin=(arr[i+1]-arr[i])/2;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag)\n\t{\n\t\tprintf(\"%d\",min);\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define MIN 999999999\nint main()\n{\n\tint n,arr[200001],i,min=MIN,flag=0;\n\tchar str[200001];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",str);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(str[i]=='R' && str[i+1]=='L')\n\t\t{\n\t\t\tif(min>(arr[i+1]-arr[i])/2)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tmin=(arr[i+1]-arr[i])/2;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag)\n\t{\n\t\tprintf(\"%d\",min);\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.849936948297604, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ee8e525450296ff00a1c4bb5b851da63", "bug_code_uid": "badb93f684b56d1debbfa24fa68a9039", "src_uid": "1241e23684a5cf95eca085a77f6483ad", "apr_id": "830d115ad7cf9818e6ea4fe353dbc462", "difficulty": 1600, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint compare(const void *a,const void *b)\n{\n    return (*(int *)a -*(int *)b);\n}\n\nint main()\n{\n\nint n,m,k;\nscanf(\"%d %d %d\",&n,&m,&k);\nint *arr;\narr=(int*)calloc(n,sizeof(int));\nfor(int i =0; i<n;i++)\n    scanf(\"%d\",&arr[i]);\nqsort(arr,n,sizeof(int),compare);\nint alarms,first,deleted;\nalarms=deleted=first=0;\n\nfor(int i=0;i<n;i++)\n{\n    if((arr[i]-m)<arr[first])\n        {if(alarms<(k-1))\n            alarms++;\n        else\n            {arr[i]=arr[0]-m;\n            deleted++;}\n        }\n    else\n        {while(first!=i && ((arr[i]-m)>=arr[first]))\n    {\n        if(arr[first]!=(arr[0]-m))\n            alarms--;\n        first++;\n    }\n    alarms++;\n        }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint compare(const void *a,const void *b)\n{\n    return (*(int *)a -*(int *)b);\n}\n\nint main()\n{\n\nint n,m,k;\nscanf(\"%d %d %d\",&n,&m,&k);\nint *arr;\narr=(int*)calloc(n,sizeof(int));\nfor(int i =0; i<n;i++)\n    scanf(\"%d\",&arr[i]);\nqsort(arr,n,sizeof(int),compare);\nint alarms,first,deleted;\nalarms=deleted=first=0;\nint border=arr[0]-m;\n\nif (k==1)\n{free(arr);\n    printf(\"%d\",n);}\nelse\n{\nfor(int i=0;i<n;i++)\n{\n    if((arr[i]-m)<arr[first])\n        {if(alarms<(k-1))\n            alarms++;\n        else\n            {arr[i]=border;\n            deleted++;}\n        }\n    else\n        {while(first!=i && ((arr[i]-m)>=arr[first]))\n    {\n        if(arr[first]!=border)\n            alarms--;\n        first++;\n    }\n    alarms++;\n    if(alarms>(k-1))\n       { deleted++;\n        arr[i]=arr[0]-m;\n        alarms=0;}\n        }\n}\nfree(arr);\nprintf(\"%d\",deleted);}\n\n\n}"}
{"similarity_score": 0.46330680813439434, "equal_cnt": 22, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "68a9113e14893b810470e01655dc8716", "bug_code_uid": "fe9a69a5c9036f86500a45bd4a8dc971", "src_uid": "d7dc61a8f3b0091320b96cedd1f4f0a7", "apr_id": "d935c03923472d7e7856ef298bf72dd4", "difficulty": 1000, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid camello( int **mat, int n)\n{\n    int i,j,cont=0;\n    for(i=1; i<n; i++){\n      for(j=i+1; j<=n; j++){\n           if((mat[i][1]+mat[i][2] == mat[j][1]) && (mat[j][1]+mat[j][2]==mat[i][1]))\n            cont++;\n        }\n      }\n    if(cont != 0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n}\nint main()\n{\n    int **mat, i,n;\n    scanf(\"%d\",&n);\n    mat=(int**)malloc(n*sizeof(int*));\n    for(i=1; i<=n; i++)\n        mat[i]=(int*)malloc(2*sizeof(int));\n    for(i=1; i<=n; i++)\n        scanf(\"%d %d\", &mat[i][1], &mat[i][2]);\n    camello(mat, n);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid camello(int *v1,int *v2,int n)\n{\n    int i,j,cont=0;\n    for(i=0; i<n-1; i++){\n        for(j=i+1; j<n; j++){\n            if(((v1[i]+v2[i])==v1[j])&&((v1[j]+v2[j])==v1[i])){\n                printf(\"YES\");\n                return;\n            }\n        }\n    }\n    printf(\"NO\");\n}\nint main()\n{\n        int i,n,j;\n        scanf(\"%d\",&n);\n        int v1[n], v2[n];\n        for(i=0; i<n; i++)\n            scanf(\"%d %d\",&v1[i],&v2[i]);\n        camello(v1,v2,n);\n        return 0;\n}\n"}
{"similarity_score": 0.9982578397212544, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b1c055f85ce1e4b2645aff1a4d8bfd6a", "bug_code_uid": "c2140ea34a062ccd49851611972d9886", "src_uid": "cd2519f4a7888b2c292f05c64a9db13a", "apr_id": "3b38d653d72717e034f1155a31ff70a4", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid round_numbers(int n)\n{\n    int count=0,x=1;\n    int round[5]={0};\n\n    while(n>0)\n    {\n        if(n%10!=0)\n        {\n            round[count]=(n%10)*x;\n            count++;\n        }\n        n/=10;\n        x*=10;\n    }\n    printf(\"\\n%d\\n\",count);\n    for(int i=0;i<count;i++)\n        printf(\"%d \",round[i]);\n}\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        if(n<10)\n            printf(\"%d\\n%d\",1,n);\n        else\n            round_numbers(n);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid round_numbers(int n)\n{\n    int count=0,x=1;\n    int round[5]={0};\n\n    while(n>0)\n    {\n        if(n%10!=0)\n        {\n            round[count]=(n%10)*x;\n            count++;\n        }\n        n/=10;\n        x*=10;\n    }\n    printf(\"\\n%d\\n\",count);\n    for(int i=0;i<count;i++)\n        printf(\"%d \",round[i]);\n}\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        if(n<10)\n            printf(\"\\n%d\\n%d\",1,n);\n        else\n            round_numbers(n);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8670360110803325, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d55b9ec5b3cd2f201b83df455ed27168", "bug_code_uid": "f244eb7d676613144b98b6027be0ada3", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "8351f28293a66cc157a93d0893393f23", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[10000],b,count1=0,a2,b2[10000];\n\nscanf(\"%lld\",&n);\nscanf(\"%lld\",&a[0]);\ncount=0;\nfor(i=1;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n    if(a[i-1]!=a[i]){\n        a2++;\n        b2[count++]=a2;\n        a2=0;\n    }else{\n        a2++;\n    }\n}\nb2[count++]=a2;\nsum=max=0;\n\nfor(i=0;i<count-1;i++){\n    sum=(b2[i]>b2[i+1])?b2[i+1]*2:b2[i]*2;\n    if(sum>max){\n        max=sum;\n    }\n   \n}\nprintf(\"%lld\",max);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000000],b,count1=0,a2,b2[100000]={0};\n\nscanf(\"%lld\",&n);\nscanf(\"%lld\",&a[0]);\ncount=0;\na2=1;\nfor(i=1;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n    if(a[i-1]!=a[i]){\n      \n        b2[count++]=a2;\n        a2=1;\n    }else{\n        a2++;\n    }\n}\nb2[count++]=a2;\nsum=max=0;\n//printf(\"%lld %lld %lld\\n\",b2[0],b2[1],count);\nfor(i=0;i<count-1;i++){\n    sum=(b2[i]>b2[i+1])?b2[i+1]*2:b2[i]*2;\n    if(sum>max){\n        max=sum;\n    }\n   \n}\nprintf(\"%lld\",max);\nreturn 0;\n}\n"}
{"similarity_score": 0.9993346640053227, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "857da6537be4dcbe1bd293ffcebaf3f2", "bug_code_uid": "70e059374e0fb0a45fb4ad07818d81f6", "src_uid": "9f095a5f5b39d8c2f99c4162f2d7c5ff", "apr_id": "744c17dbfc557d787f348a516b3409d0", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,k,sum2,min,f,r,o,sum1,sum=0,y,count1, a[26]={0};\nchar a1[100000];\nscanf(\"%lld%lld%s\",&n,&k,a1);\nfor(i=0;i<n;i++){\n    a[a1[i]-'a']++;\n}\nfor(i=0;i<26;i++){\n    if(a[i]>=1){\n        if(a[i]<=k){\n            k-=(a[i]);\n            a[i]=-(a[i]);\n            \n        }else{\n            a[i]=-k;\n            k=0;\n            break;\n        }\n    }\n}\nfor(i=0;i<n;i++){\n   // printf(\"YES\\n\");\n    if(a[a1[i]-'a']<0){\n        a[a1[i]-'a']++;\n    }else{\n        printf(\"%c\",a1[i]);\n    }\n}\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,k,sum2,min,f,r,o,sum1,sum=0,y,count1, a[26]={0};\nchar a1[1000000];\nscanf(\"%lld%lld%s\",&n,&k,a1);\nfor(i=0;i<n;i++){\n    a[a1[i]-'a']++;\n}\nfor(i=0;i<26;i++){\n    if(a[i]>=1){\n        if(a[i]<=k){\n            k-=(a[i]);\n            a[i]=-(a[i]);\n            \n        }else{\n            a[i]=-k;\n            k=0;\n            break;\n        }\n    }\n}\nfor(i=0;i<n;i++){\n   // printf(\"YES\\n\");\n    if(a[a1[i]-'a']<0){\n        a[a1[i]-'a']++;\n    }else{\n        printf(\"%c\",a1[i]);\n    }\n}\nreturn 0;\n}"}
{"similarity_score": 0.5928853754940712, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "09f8b7ff834621f27e477555355d534f", "bug_code_uid": "131f64394f9911a517fe99c5300b4fe2", "src_uid": "56535017d012fdfcc13695dfd5b33084", "apr_id": "88178f93ee4cb8e21485e11ba2df0914", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint a,b,c,d;\n\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\tif(d<=c && 2*d>c)\n\t{\n\t\tprintf(\"%d\\n%d\\n%d\\n\",a,b,c);\n\n\t}\n\telse printf(\"-1\\n\");\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define max(x,y) ((x)>(y)?x:y)\nint main()\n{\n\tint a,b,c,d;  \n\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\tif(2*c>=d && 2*d>=c && b>d)\n    {\n    \tprintf(\"%d\\n%d\\n%d\\n\",2*a,2*b,max(c,d));\n    }\n    else\n    printf(\"-1\\n\");\n}"}
{"similarity_score": 0.952431289640592, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "78d7e6118acd558c439a6adac05e9e37", "bug_code_uid": "71477392c9c68e921a4c8a5b8e6fcf95", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "0039253e4e29e70cd212ed6f707d1618", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//jai bhawani\r\n#include<stdio.h>\r\n#include<string.h>\r\n\r\n\r\n\r\nint main()\r\n{\r\n    int min, i,j,n,t2,t3,d1,c,d,t4,t5,l,x,y,p;\r\n    int q,u,v,a,b,m,v1,v2;\r\n    int t1;\r\n  int t;\r\n    scanf(\"%d\",&t);\r\nwhile(t--)\r\n    {\r\n    scanf(\"%d\",&a);\r\n    int k[a];\r\n    for(i=1;i<=a;i++)\r\n    {\r\n      scanf(\"%d\",&k[i]);\r\n    }\r\n    m=0;\r\n    for(i=1;i<a;i++)\r\n    {\r\n      for(j=i+1;j<=a;j++)\r\n      {\r\n          if(k[i]>k[j])\r\n            {\r\n                m++;\r\n            }\r\n      }\r\n    }\r\n    if(m==0)\r\n    printf(\"%d\\n\",m);\r\n    else\r\n    {\r\n        if(k[1]==1 && k[a]==a)\r\n        {\r\n            printf(\"%d\\n\",1);\r\n        }\r\n        else if(k[1]==a && k[a]==1)\r\n        {\r\n            printf(\"%d\\n\",3);\r\n        }\r\n        else if(k[1]==1 && k[a]!=a)\r\n        {\r\n            printf(\"%d\\n\",1);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",2);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "//jai bhawani\r\n#include<stdio.h>\r\n#include<string.h>\r\n\r\n\r\n\r\nint main()\r\n{\r\n    int min, i,j,n,t2,t3,d1,c,d,t4,t5,l,x,y,p;\r\n    int q,u,v,a,b,m,v1,v2;\r\n    int t1;\r\n  int t;\r\n    scanf(\"%d\",&t);\r\nwhile(t--)\r\n    {\r\n    scanf(\"%d\",&a);\r\n    int k[a];\r\n    for(i=1;i<=a;i++)\r\n    {\r\n      scanf(\"%d\",&k[i]);\r\n    }\r\n    m=0;\r\n    for(i=1;i<a;i++)\r\n    {\r\n      for(j=i+1;j<=a;j++)\r\n      {\r\n          if(k[i]>k[j])\r\n            {\r\n                m++;\r\n            }\r\n      }\r\n    }\r\n    if(m==0)\r\n    printf(\"%d\\n\",m);\r\n    else\r\n    {\r\n        if(k[1]==1 && k[a]==a)\r\n        {\r\n            printf(\"%d\\n\",1);\r\n        }\r\n        else if(k[1]==a && k[a]==1)\r\n        {\r\n            printf(\"%d\\n\",3);\r\n        }\r\n        else if(k[1]==1 && k[a]!=a)\r\n        {\r\n            printf(\"%d\\n\",1);\r\n        }\r\n        else if(k[a]==a && k[1]!=1)\r\n        {\r\n            printf(\"%d\\n\",1);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",2);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9989785495403473, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a9476e115e4bdd92269bb4d7281f1347", "bug_code_uid": "ae8afccbb9d7bf1fcef9ed0cff51f7d7", "src_uid": "0fbc306d919d7ffc3cb02239cb9c2ab0", "apr_id": "b3d4d16ca6efb86dac70ba7ce3b34ee7", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,a[1005],i,ans=0,k=0,j,c=0,l,m;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=n-1;i>=0;i--)\n    {\n        if(a[i]==1)\n        {\n            m=i;\n            break;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            j=i;\n            k=1;\n            break;\n        }\n    }\n    if(k==0)\n        printf(\"0\");\n    else\n    {\n            for(i=j;i<m;i++)\n            {\n                if(a[i]==1)\n                    {\n                        ans++;\n                    }\n                else if(a[i]==0)\n                {\n                    for(l=i;l<m;l++)\n                    {\n                        if(a[l]!=0)\n                        {\n                            break;\n                        }\n                    }\n                    i=l;\n                    ans=ans+2;\n                }\n            }\n            printf(\"%d\",ans);\n    }\n    return 0;\n}\n\n\n\n\n\n\n\n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,a[1005],i,ans=0,k=0,j,c=0,l,m;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=n-1;i>=0;i--)\n    {\n        if(a[i]==1)\n        {\n            m=i;\n            break;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            j=i;\n            k=1;\n            break;\n        }\n    }\n    if(k==0)\n        printf(\"0\");\n    else\n    {\n            for(i=j;i<=m;i++)\n            {\n                if(a[i]==1)\n                    {\n                        ans++;\n                    }\n                else if(a[i]==0)\n                {\n                    for(l=i;l<=m;l++)\n                    {\n                        if(a[l]!=0)\n                        {\n                            break;\n                        }\n                    }\n                    i=l;\n                    ans=ans+2;\n                }\n            }\n            printf(\"%d\",ans);\n    }\n    return 0;\n}\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.3378119001919386, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "0ec7b58bff10a528c4afbaa5728e8e94", "bug_code_uid": "200644191761e1ae4ee69e9a4a6c9f90", "src_uid": "e65b2a81689bb13b90a02a9ccf1d4125", "apr_id": "abb93fb47e8eb1fc77fb1bb4da125661", "difficulty": 1100, "tags": ["binary search", "ternary search", "math", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,d,r,x,m=0;\n    scanf(\"%d\",&t);\n    scanf(\"%d%d\",&n,&d);\n    if(n>=d)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    t--;\n    while(t--)\n    {\n        x=0;\n        scanf(\"%d%d\",&n,&d);\n        while(x<=d)\n        {\n            if(d%(x+1)==0)\n                r=0;\n            else\n                r=1;\n            m=x+d/(x+1)+r;\n            if(n>=m)\n                break;\n                x++;\n        }\n        if(n>=m)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,d,r,x,m=0;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        x=0;\n        scanf(\"%d%d\",&n,&d);\n        while(x<=sqrt(d))\n        {\n            if(d%(x+1)==0)\n                r=0;\n            else\n                r=1;\n            m=x+d/(x+1)+r;\n            if(n>=m)\n                break;\n                x++;\n        }\n        if(n>=m)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.15384615384615385, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9198d3663667a1f3a3ac20dece4a4cf8", "bug_code_uid": "9a254ed598eb897dc57cd15f7b1abaeb", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "46f157ed8b46cca031f44c52aa204f1c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    char a[t],b[t];\n    scanf(\"%s%s\",a,b);\n    int d[t],sum=0;\n    for(i=0;i<t;i++)\n    {\n        d[i]=a[i]-b[i];\n    }\n    for(i=0;i<t;i++)\n    {\n        if(d[i]>5)\n        sum=sum+10-(d[i]);\n        else if(d[i]<=-5)\n        sum=sum+10+d[i];\n        else if(d[i]<0&&d[i]>-5)\n        sum=sum-(d[i]);\n        else\n        sum=sum+d[i];\n    }\n    printf(\"%d\\n\",sum);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,r,i,co,counter=0,ans,a,b;\n\tchar k[1005],s[1005];\n\tscanf(\"%d\\n%s\\n%s\",&n,k,s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\ta=k[i]-'0';\n\t\tb=s[i]-'0';\n\t\tif(b>a)\n\t\t\tans=b-a;\n\t\telse\n\t\t\tans=a-b;\n\t\tif(ans>10-ans)\n\t\t\tans=10-ans;\n\t\tcounter+=ans;\n\t}\n\tprintf(\"%d\\n\",counter);\n\treturn 0;\n}\n"}
{"similarity_score": 0.918648310387985, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d9cb983183eae7becda52f609bd27908", "bug_code_uid": "c77e2892cfc1ff5dc1d8ff973553ad33", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "5f4a87ab0821ab5c9e3e6bcc864b9ca3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{   int n,m,i,j;\n    scanf(\"%d%d\",&n,&m);\n    char a[n][m],c;\n    for(i=0;i<n;i++)\n    {\n        if(i%2==0)\n        c='#';\n        else\n        c='.';\n        for(j=0;j<m;j++)\n        a[i][j]=c;\n        if((i+1)%4==0)\n        a[i][0]='#';\n        else\n        a[i][m-1]='#';\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%s\\n\",a[i]);\n    }\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{   int n,m,i,j;\n    scanf(\"%d%d\",&n,&m);\n    char a[n][m],c;\n    for(i=0;i<n;i++)\n    {\n        if(i%2==0)\n        c='#';\n        else\n        c='.';\n        for(j=0;j<m;j++)\n        a[i][j]=c;\n        if((i+1)%4==0)\n        a[i][0]='#';\n        else\n        a[i][m-1]='#';\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        printf(\"%c\",a[i][j]);\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.8362068965517241, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fd5891c5f0670d51bc35cb4beec2d60f", "bug_code_uid": "346b2c430027e478dc3401c37dc6e14d", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "3adc7d5ed296918b371f47917493af83", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nlong int a[n];\nfor(int i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n    for(long int j=1;j<=1000000000;j=j+1)\n    {\n          if(a[i]%2==0)\n            a[i]=a[i]-1;        \n\n     }\n      printf(\"%ld \",a[i]);\n}\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nlong int a[n];\nfor(int i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n    if(a[i]%2==0)\n    a[i]=a[i]-1;    \n    printf(\"%ld \",a[i]);\n}\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9449423815620999, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e21dd198fab3bb69b29267406e7d299f", "bug_code_uid": "95ad386ec93c5fe4bb04607672ef54e5", "src_uid": "75d500bad37fbd2c5456a942bde09cd3", "apr_id": "3da4a53a4b030f82b89a95ab3eb70657", "difficulty": 1100, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint x[370]={0},y[370]={0};\nint main(void) {\n\t// your code goes here\n\tint n,i,j,p,q,s=0;\n\tscanf(\"%d\",&n);\n\tchar a[2];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s%d%d\",a,&p,&q);\n\t\tif(a[0]=='M')\n\t\tfor(j=p;j<=q;j++)\n\t\tx[j]++;\n\t\telse\n\t\tfor(j=p;j<=q;j++)\n\t\ty[j]++;\n\t}\n\tfor(i=0;i<367;i++)\n\t{\n\t\tif(x[i]==y[i] && x[i]>s)\n\t\ts=x[i];\n\t}\n\tprintf(\"%d\\n\",s*2);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\nint x[370]={0},y[370]={0};\nint main(void) {\n\t// your code goes here\n\tint n,i,j,p,q,s=0,k=0;\n\tscanf(\"%d\",&n);\n\tchar a[2];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s%d%d\",a,&p,&q);\n\t\tif(a[0]=='M')\n\t\tfor(j=p;j<=q;j++)\n\t\tx[j]++;\n\t\telse\n\t\tfor(j=p;j<=q;j++)\n\t\ty[j]++;\n\t}\n\tfor(i=0;i<367;i++)\n\t{\n\t\tk=x[i]<y[i]?x[i]:y[i];\n\t\tif(k>s)\n\t\ts=k;\n\t}\n\tprintf(\"%d\\n\",s*2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.26732673267326734, "equal_cnt": 27, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "8014c8fa1d1c4f1d6004e9cb1d000648", "bug_code_uid": "537485c59257cc9ba237d909ce791f6e", "src_uid": "0151a87d0f82a9044a0ac8731d369bb9", "apr_id": "8fc7106045caee64c9abbaa58c12b015", "difficulty": 1500, "tags": ["dp", "two pointers", "binary search", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n\t\tint n,m,l=0,r=0,i,k;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tint a[1000000],ans=0,max=INT_MIN,count=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\t\tscanf(\"%d\",&a[i]);\n\t\t\t\tif(a[i]==0)\n\t\t\t\t\t\tcount++;\n\t\t}\n\t\tif(count<=m)\n\t\t\t\tmax=n;\n\t\telse \n\t\t{\n\t\t\t\tk=m;\n\t\t\t\twhile(l<n && r<n)\n\t\t\t\t{\n\t\t\t\t\t\tif(k!=0 && a[r]==0)\n\t\t\t\t\t\t\t\tk--;\n\t\t\t\t\t\tif(k==0 && a[r+1]==0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tans=r-l+1;\n\t\t\t\t\t\t\t\tif(a[l]==0)\n\t\t\t\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ans>max)\n\t\t\t\t\t\t\t\tmax=ans;\n\t\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\t\tlong long int n,m,count=0;\n\t\tscanf(\"%lld%lld\",&n,&m);\n\t\tchar s[n];\n\t\tlong long int i,ans=0,k,l=0,r=0,t,p;\n\t\tlong long int max=0,max1=0;\n\t\tscanf(\"%s\",s);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\t\tif(s[i]=='b')\n\t\t\t\t\t\tcount++;\n\t\t}\n\t\tif(count<=m)\n\t\t\t\tmax=n;\n\t\telse \n\t\t{\n\t\t\t\tk=m;\n\t\t\t\twhile(r<n)\n\t\t\t\t{\n\t\t\t\t\t\tif(s[r]=='a')\n\t\t\t\t\t\t\t\tr++;\n\t\t\t\t\t\tif(s[r]=='b' && k>0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tr++;\n\t\t\t\t\t\t\t\tk--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(k==0 && s[r]=='b')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tans=r-l;\n\t\t\t\t\t\t\t\tif(s[l]=='a')\n\t\t\t\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t\t\tif(s[l]=='b')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ans>max)\n\t\t\t\t\t\t\t\tmax=ans;\n\t\t\t\t}\n\t\t\t\tt=r-l;\n\t\t\t\tif(t>max)\n\t\t\t\t\t\tmax=t;\n\t\t}\n\t\tl=0;\n\t\tr=0;\n\t\tcount=0;\n\t\tans=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\t\tif(s[i]=='a')\n\t\t\t\t\t\tcount++;\n\t\t}\n\t\tif(count<=m)\n\t\t\t\tmax=n;\n\t\telse \n\t\t{\n\t\t\t\tk=m;\n\t\t\t\twhile(r<n)\n\t\t\t\t{\n\t\t\t\t\t\tif(s[r]=='b')\n\t\t\t\t\t\t\t\tr++;\n\t\t\t\t\t\tif(s[r]=='a' && k>0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tr++;\n\t\t\t\t\t\t\t\tk--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(k==0 && s[r]=='a')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tans=r-l;\n\t\t\t\t\t\t\t\tif(s[l]=='b')\n\t\t\t\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t\t\tif(s[l]=='a')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ans>max1)\n\t\t\t\t\t\t\t\tmax1=ans;\n\t\t\t\t}\n\t\t\t\tp=r-l;\n\t\t\t\tif(p>max1)\n\t\t\t\t\t\tmax1=p;\n\t\t}\n\t\tif(max1>max)\n\t\t\t\tprintf(\"%lld\\n\",max1);\n\t\telse \n\t\t\t\tprintf(\"%lld\\n\",max);\n\t\treturn 0;\n}\n"}
{"similarity_score": 0.9964028776978417, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "272757b785e89a70f4fd5b8081bc437a", "bug_code_uid": "2f490dfd4f7018195be7b1b4b88a8b1a", "src_uid": "955bc1e2769ea407ef02506bf1e4259b", "apr_id": "176ee7aef99bf937eca9beebe488725f", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n    {\r\n        int n, i;\r\n        scanf(\"%d\", &n);\r\n        printf(\"%d\", n);\r\n\r\n        for(i=1; i<n; i++)\r\n            printf(\"%d\", i);\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n    {\r\n        int n, i;\r\n        scanf(\"%d\", &n);\r\n        printf(\"%d \", n);\r\n\r\n        for(i=1; i<n; i++)\r\n            printf(\"%d \", i);\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9879518072289156, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6b76b0e79311ce94507d8776f539b476", "bug_code_uid": "5e47de71185c96e71d45be8540a61f45", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "04b2bda0f88218c4bc8109c0bcaa4964", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,a[1001],min;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        scanf(\"%d\",&a[0]);\n        min=a[0];\n        for(i=1;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]<min)\n                min=a[i];\n        }\n        if(min==1)\n        printf(\"-1\\n\");\n        else\n            printf(\"%d\\n\",min-1);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a[1001],min;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        scanf(\"%d\",&a[0]);\n        min=a[0];\n        for(i=1;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]<min)\n                min=a[i];\n        }\n        if(min==1)\n        printf(\"-1\\n\");\n        else\n            printf(\"1\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9893307468477207, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a9a22ed800c98ba56c4da77fdf453cd1", "bug_code_uid": "0371c58a74368d5e2dceb9e05793c349", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "ab26968b2b337b19fec6b6104a919040", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b) {\n  return ( *(int*)a - *(int*)b );\n}\n\nint main () {\n\n    int n, sum = 0, notdis = 0, j;\n\n\n    scanf(\"%d\", &n);\n    int* values = malloc(n*sizeof(int));\n\n    for(j = 0; j < n; j++){\n        scanf(\"%d\", &values[j]);\n    }\n    qsort (values, n, sizeof(int), compare);\n    for(j = 0; j < n; j++){\n        if(sum <= values[j])\n            notdis++;\n            sum+=values[j];\n    }\n    printf(\"%d\\n\", notdis);\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b) {\n  return ( *(int*)a - *(int*)b );\n}\n\nint main () {\n\n    int n, sum = 0, notdis = 0, j;\n\n\n    scanf(\"%d\", &n);\n    int* values = malloc(n*sizeof(int));\n\n    for(j = 0; j < n; j++){\n        scanf(\"%d\", &values[j]);\n    }\n    qsort (values, n, sizeof(int), compare);\n    for(j = 0; j < n; j++){\n        if(sum <= values[j]){\n            notdis++;\n            sum+=values[j];\n        }\n    }\n    printf(\"%d\\n\", notdis);\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9828571428571429, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4242f469b0629511d9bf34dbd5bf7974", "bug_code_uid": "e2741e9380d0471117d3b8bbfca53135", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "e030cc7dd9cfd1a71c0615000a82b8d9", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nvoid change(long int n,int i)\n{\n    int j=8-i,k,l;\n    k=pow(10,j);\n    l=(n/k)%10;\n    if(l==9)\n        n=n-k;\n    else\n        n=n+k;\n    printf(\"\\n%ld\",n);\n    \n}\nint main()\n{\n   int t,j;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n    long int n,i;\n    for(i=0;i<9;i++)\n    {\n        printf(\"\\n\");\n        scanf(\"%ld\",&n);\n        if(i==0)\n    change(n,0);\n        if(i==1)\n    change(n,3);\n        if(i==2)\n    change(n,6);\n        if(i==3)\n    change(n,1);\n        if(i==4)\n    change(n,4);\n        if(i==5)\n    change(n,7);\n        if(i==6)\n    change(n,2);\n        if(i==7)\n    change(n,5);\n        if(i==8)\n    change(n,8);\n    }\n  \n    \n}\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nvoid change(long int n,int i)\n{\n    int j=8-i,k,l;\n    float x;\n    x=pow(10,j);\n    k=x;\n    l=(n/k)%10;\n    if(l==9)\n        n=n-k;\n    else\n        n=n+k;\n    printf(\"\\n%ld\",n);\n    \n}\nint main()\n{\n   int t,j;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n    long int n,i;\n    for(i=0;i<9;i++)\n    {\n        printf(\"\\n\");\n        scanf(\"%ld\",&n);\n        if(i==0)\n    change(n,0);\n        if(i==1)\n    change(n,3);\n        if(i==2)\n    change(n,6);\n        if(i==3)\n    change(n,1);\n        if(i==4)\n    change(n,4);\n        if(i==5)\n    change(n,7);\n        if(i==6)\n    change(n,2);\n        if(i==7)\n    change(n,5);\n        if(i==8)\n    change(n,8);\n    }\n  \n    \n}\n}\n"}
{"similarity_score": 0.7445442875481386, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "dd9e8ca09159ebd677f2d47b28f55bc5", "bug_code_uid": "88711e3fe9aca9f75133b26f047bb327", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "a38cf6fb6b7ab1b88a1e1d88145bf434", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    char a[20];\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i = 0; i <= t; i++)\r\n    {\r\n        gets(a);\r\n        if(a[0] == 'Y' || a[0] == 'y' && a[1] == 'E' || a[1] == 'e' && a[2] == 'S' || a[2] == 's')\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    //printf(\"NO\\n\");\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    char a[20];\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%s\",&a);\r\n        if((a[0] == 'Y' || a[0] == 'y') && (a[1] == 'E' || a[1] == 'e') && (a[2] == 'S' || a[2] == 's'))\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}\r\n\r\n"}
{"similarity_score": 0.7874659400544959, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "5aad753d1c1f7a344d6c47b4878d61cc", "bug_code_uid": "2afc6d5be42ed161abda146fc3e3118f", "src_uid": "85f0621e6cd7fa233cdee8269310f141", "apr_id": "921fcb466790d356b84cbc5821fba4d7", "difficulty": 800, "tags": ["brute force", "constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        int a,i,j;\r\n        scanf(\"%d\",&a);\r\n        for(i=a;i>=1;i--)\r\n        {\r\n            for(j=a;j>=1;j--)\r\n            {\r\n                printf(\"%d \",j);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n\r\n    }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int k,i,j;\r\n        scanf(\"%d\",&k);\r\n        for(i=1;i<=k;i++)\r\n        {\r\n            printf(\"%d \",i);\r\n            for(j=k;j>=1;j--)\r\n            {\r\n                if(j!=i)\r\n                {\r\n                    printf(\"%d \",j);\r\n                }\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.4826418289585097, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "8c6182d9cd68e008c1fee28ea4be9cba", "bug_code_uid": "cf320e25dd6628d5cad73b79f98ddd41", "src_uid": "801bf7c73c44c68eaa61c714d5aedf50", "apr_id": "49ad8f930e55ae680f01f62e10ed885c", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t,i,j,p,s0[26];\r\n    char s[26];\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    for(i=0;i<t;i++){\r\n        for(j=0;j<26;j++)\r\n            s0[j]=1;\r\n        gets(s);\r\n        j=0;\r\n        p=1;\r\n        for(j=0;j<strlen(s);j++){\r\n            if(s0[s[j]-'a']==0){p=0;break;}\r\n            else s0[s[j]-'a']=0;}\r\n        for(j=0;j<strlen(s);j++)\r\n            if(s0[j]) {p=0;break;}\r\n        if(p) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t,i,l,j,r;\r\n    char s[27],s0[27],c;\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    for(i=0;i<t;i++){\r\n        gets(s);\r\n        l=0;\r\n        r=strlen(s)-1;\r\n        j=0;\r\n        while(l!=r){\r\n            if(s[l]>s[r]) {s0[j]=s[l];l++;}\r\n            else {s0[j]=s[r];r--;}\r\n            j++;\r\n        }\r\n        s0[j]=s[l];\r\n        c='a';\r\n        for(j=strlen(s)-1;j>=0;j--,c++)\r\n            if(s0[j]!=c){l=-1;break;}\r\n        if(l==-1) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8271812080536913, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "1d801493c62ec97d8e1072476c82c47d", "bug_code_uid": "1618f1b7120794353b5d5709b13bc0a6", "src_uid": "7bdb68ab0752f8df94b4d5c7df759dfb", "apr_id": "4cf641362c75def1a5e1de3908c5efd8", "difficulty": 1300, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,k,i,j;\n    scanf(\"%d%d\",&n,&k);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    int p1=0,p2=k;\n    float max=0.0,avg,sum=0.0;\n    while(k<=n){\n            p1=0;\n            p2=k;\n            while(p2<=n){\n                    sum=0.0;\n                    for(j=p1;j<p2;j++){\n                        sum+=a[j];\n                    }\n                    avg=sum/(p2-p1);\n                    if(avg>max)\n                        max=avg;\n                p2++;\n            }\n            k++;\n    }\n    printf(\"%f\\n\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,k,i,j;\n    scanf(\"%d%d\",&n,&k);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    int p1=0,p2=k;\n    float max=0.0,avg,sum=0.0;\n    while(p1<=n-k){\n            p2=p1+k-1;\n            sum=0.0;\n            for(j=p1;j<=p2;j++){\n                sum+=a[j];\n            }\n            while(p2<n){\n                if(p2!=p1+k-1)\n                    sum+=a[p2];\n                avg=sum/(p2-p1+1);\n                if(avg>max)\n                    max=avg;\n            p2++;\n            }\n            p1++;\n    }\n    printf(\"%f\\n\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9020939445387662, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d5a01e435aced2309f1c16c92b4571ed", "bug_code_uid": "7c08489b778a7a6bd22ca88a1f819326", "src_uid": "c19afaa6c46cd361e0e5ccee61f6f520", "apr_id": "e49d34d20cdd54fab2cfb8d5326ae199", "difficulty": 1800, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef struct{\n\tint x;\n\tint y;\n}punto;\n\nint main(){\n\tint i, n, k;\n\tunsigned long int j;\n\tpunto Mo, Mj, Aux;\t\t\t\t\t//Mo es el Punto incial, Mj es el punto buscado y Aux es un punto auxiliar;\n\t//printf(\"Ingrese n y j :\");\n\tscanf(\"%d%lu\",&n, &j);\n\tpunto A[n];\t\t\t\t\t\t//Vector de puntos de tamanho n Ao, A1, A2,..., A(n-1)\t\n\tj=j%(2*n);\n\t//printf(\"\\nIngrese las coordenadas de Mo :\");\n\tscanf(\"%d%d\",&Mo.x,&Mo.y);\n\tAux.x=Mo.x;\n\tAux.y=Mo.y;\n\t\n\t//printf(\"\\nPunto inicial (%d,%d)\\n\",Aux.x,Aux.y);\n\tfor(i=0; i<n; i++){\n\t\t//printf(\"\\nIngrese A[%d] = \",i);\n\t\tscanf(\"%d%d\",&A[i].x,&A[i].y);\t//Leemos los puntos Ao, A1, A2,..., A(n-1)\n\t}\n\t\n\tfor(i=1; i<=j; i++){\n\t\tk=(i-1)%n;\n\t\tAux.x=2*A[k].x-Aux.x;\n\t\tAux.y=2*A[k].y-Aux.y;\n\t\t//printf(\"\\nM[%d] = %d %d\",i,Aux.x,Aux.y);\n\t}\n\tMj.x=Aux.x;\n\tMj.y=Aux.y;\n\tprintf(\"%d %d\",Mj.x,Mj.y);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef struct{\n\tint x;\n\tint y;\n}punto;\n\nint main(){\n\tint i, n, k;\n\tunsigned long long int j;\n\tpunto Mo, Mj, Aux;\t\t\t\t\t//Mo es el Punto incial, Mj es el punto buscado y Aux es un punto auxiliar;\n\t//printf(\"Ingrese n y j :\");\n\tscanf(\"%d%I64d\",&n, &j);\n\t//printf(\"\\nn = %d  y  j = %I64d\",n,j);\n\tpunto A[n];\t\t\t\t\t\t//Vector de puntos de tamanho n Ao, A1, A2,..., A(n-1)\t\n\tj=j%(2*n);\n\t//printf(\"\\nn = %d  y  j = %I64d\",n,j);\n\t//printf(\"\\nIngrese las coordenadas de Mo :\");\n\tscanf(\"%d%d\",&Mo.x,&Mo.y);\n\tAux.x=Mo.x;\n\tAux.y=Mo.y;\n\t\n\t//printf(\"\\nPunto inicial (%d,%d)\\n\",Aux.x,Aux.y);\n\tfor(i=0; i<n; i++){\n\t\t//printf(\"\\nIngrese A[%d] = \",i);\n\t\tscanf(\"%d%d\",&A[i].x,&A[i].y);\t//Leemos los puntos Ao, A1, A2,..., A(n-1)\n\t}\n\t\n\tfor(i=1; i<=j; i++){\n\t\tk=(i-1)%n;\n\t\tAux.x=2*A[k].x-Aux.x;\n\t\tAux.y=2*A[k].y-Aux.y;\n\t\t//printf(\"\\nM[%d] = %d %d\",i,Aux.x,Aux.y);\n\t}\n\tMj.x=Aux.x;\n\tMj.y=Aux.y;\n\tprintf(\"%d %d\",Mj.x,Mj.y);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9982425307557118, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b9ea3c603c07239711c7c962536c44eb", "bug_code_uid": "de1aa8368f7625c7412ed09e85908be1", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "7f385d8111d111623c9d2d2a533b3ef0", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\n\t\tint l,i,sum =0,num,b;\r\n\tscanf(\"%d\",&l);\r\n\r\n\t for(i= 0;i<l;i++)\r\n\t {\r\n\t \tscanf(\"%d\",&b);\r\n\t \tsum = sum + b;\r\n\t }\r\n\t \r\n\t if(sum > l)\r\n        printf(\"%d\\n\",sum -l);\r\n\t\r\n   \r\n    else\r\n    printf(\"1\\n\");\r\n\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\n\t\tint l,i,sum =0,num,b;\r\n\tscanf(\"%d\",&l);\r\n\r\n\t for(i= 0;i<l;i++)\r\n\t {\r\n\t \tscanf(\"%d\",&b);\r\n\t \tsum = sum + b;\r\n\t }\r\n\t \r\n\t if(sum >= l)\r\n        printf(\"%d\\n\",sum -l);\r\n\t\r\n   \r\n    else\r\n    printf(\"1\\n\");\r\n\r\n}\r\n}"}
{"similarity_score": 0.27415730337078653, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "826e9cd6cf11b4379a52729dd999c87e", "bug_code_uid": "3603082cce2d634da87d7d4708ec9c0a", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "7f2dcc4e6c355cf7efba3f3e02a5a7b8", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint count[30]={ 0 },ans=0;\nchar str[1001];\nscanf(\"%s\",str);\nfor(int i=1;str[i]!='}';i++)\n{\nif(count[str[i]-97]==0){\ncount[str[i]-97]=1;\nans++;\n}\n}\nprintf(\"%d\\n\",ans);\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,i,j=0,a[150]={0};\n    char x;\n    while((x=getchar())!='}')\n    {\n        a[x]++;\n    }\n    for(i=97;i<=122;i++)\n    {\n        if(a[i]>=1)\n        {\n            j++;\n        }\n    }\n    printf(\"%d\",j);\n}\n"}
{"similarity_score": 0.6450742240215924, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "6e87007f75064331b0335c39a58b2c8b", "bug_code_uid": "6c2da78c240dd04c61c8f58b3833d9bc", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "edf4a5b171a74fc46b8edff3b88d3d3c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j=0,input,p,k,temp;\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    long long int even[n+1],odd[n+1];\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&input);\n        if(input%2==0){\n            sum=sum+input;\n        }\n        else{\n            j++;\n            odd[j]=input;\n        }\n    }\n    if(j%2==0){\n        for(p=1;p<=j;p++){\n            sum=sum+odd[p];\n        }\n    }\n    else{\n        for(p=1;p<j;p++){\n            for(k=p+1;k<=j;k++){\n                if(odd[k]>odd[p]){\n                    temp=odd[p];\n                  odd[p]=odd[k];\n                    odd[k]=temp;\n                    \n                }\n            }\n        }\n        for(p=1;p<j;p++){\n            sum=sum+odd[p];\n        }\n    }\n    printf(\"%lld\",sum);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j=0,input,p,min;\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    long long int odd[n+1];\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&input);\n        if(input%2==0){\n            sum=sum+input;\n        }\n        else{\n            j++;\n            odd[j]=input;\n        }\n    }\n    if(j%2==0){\n        for(p=1;p<=j;p++){\n            sum=sum+odd[p];\n        }\n    }\n    else{\n        min=odd[1];\n        p=1;\n        for(i=2;i<=j;i++){\n            if(odd[i]<min){\n                min=odd[i];\n                p=i;\n            }\n            \n        }\n        odd[p]=0;\n        for(i=1;i<=j;i++){\n            sum=sum+odd[i];\n        }\n    }\n    printf(\"%lld\",sum);\n}"}
{"similarity_score": 0.9949748743718593, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cfe0be0e2de2623c69498f2e348d9ce1", "bug_code_uid": "3f098cc397e6a17f6e564837a6907f7a", "src_uid": "644b8f95b66b7e4cb39af552ec518b3f", "apr_id": "a40d8b27a59da3b418f6afedecf8170d", "difficulty": 1700, "tags": ["constructive algorithms", "bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tlong long a, b, k = 1;\n\t\tscanf(\"%lld %lld\", &a, &b);\n\t\twhile((k|a)<=b)  a |= k,k <<= 1;\n\t\tprintf(\"%lld\", a);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tlong long a, b, k = 1;\n\t\tscanf(\"%lld %lld\", &a, &b);\n\t\twhile((k|a)<=b)  a |= k,k <<= 1;\n\t\tprintf(\"%lld\\n\", a);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9976171564733916, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f9769d1ddd16918e3392df9d47ead68f", "bug_code_uid": "b2ba10001ec748313bc39aa3b85c0d56", "src_uid": "e26b0b117593c159b7f01cfac66a71d1", "apr_id": "0e4d0bd046b4388855c8e531001c4539", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int m;\n        scanf(\"%d\",&m);\n        int arr[m],farr[101];\n        for(int i=0;i<101;i++)\n            farr[i]=0;\n        for(int i=0;i<m;i++)\n        {\n            scanf(\"%d\",&arr[i]);\n            farr[arr[i]]++;\n\n        }\n        int xx=101,yy=101;\n        for(int i=0;i<100;i++)\n        {\n            if(farr[i]<2 && xx==101)\n                xx=i;\n            if(farr[i]<1 && xx!=101)\n                yy=i;\n            if(xx!=101 && yy!=101)\n                break;\n        }\n        printf(\"%d\\n\",xx+yy);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int m;\n        scanf(\"%d\",&m);\n        int arr[m],farr[101];\n        for(int i=0;i<101;i++)\n            farr[i]=0;\n        for(int i=0;i<m;i++)\n        {\n            scanf(\"%d\",&arr[i]);\n            farr[arr[i]]++;\n\n        }\n        int xx=101,yy=101;\n        for(int i=0;i<101;i++)\n        {\n            if(farr[i]<2 && xx==101)\n                xx=i;\n            if(farr[i]<1 && xx!=101)\n                yy=i;\n            if(xx!=101 && yy!=101)\n                break;\n        }\n        printf(\"%d\\n\",xx+yy);\n    }\n}\n\n"}
{"similarity_score": 0.9985734664764622, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fe344794139b0e9a97ef64589d007b23", "bug_code_uid": "f775c41c1cff41d5dba6aa3b6f2b97a7", "src_uid": "3696b769bfd32cba34e739b74e13693f", "apr_id": "e39680b41efc5056db4f55f8843ea728", "difficulty": 1600, "tags": ["dp", "implementation", "divide and conquer", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n \n#define MAX(a, b) (a > b ? a : b)\n#define NEXT_NUM() num[0] = num[1]; if (cols > 1) scanf(\"%d\", &num[1]);\n \nint main()\n{\t\n\tlong long rows, cols;\n\tscanf(\"%d\", &rows);\n\twhile (rows--) {\n\t\t/* paired/unpaired */\n\t\tlong long sub_p = 0, sub_unp = 0,\n\t\tmax_p = 0, max_unp = 0, sum = 0;\n\t\tlong long num[2] = {0, 0};\n\t\tscanf(\"%lld\", &cols);\n\t\tscanf(\"%lld\", &num[1]);\n\t\tfor (; cols > 0; cols--) {\n\t\t\tNEXT_NUM();  \n\t\t\tsub_p = num[1] - num[0] + MAX(sub_p, 0);\n\t\t\tmax_p = MAX(sub_p, max_p);\n\t\t\tsum += num[0];\n\t\t\tcols--;\n\t\t\t\n\t\t\tNEXT_NUM();\n\t\t\tsub_unp = num[0] - num[1] + MAX(sub_unp, 0);\n\t\t\tmax_unp = MAX(sub_unp, max_unp);\n\t\t}\n\t\tprintf(\"%lld\\n\", sum + MAX(max_p, max_unp));\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n \n#define MAX(a, b) (a > b ? a : b)\n#define NEXT_NUM() num[0] = num[1]; if (cols > 1) scanf(\"%d\", &num[1]);\n \nint main()\n{\t\n\tlong long rows, cols;\n\tscanf(\"%lld\", &rows);\n\twhile (rows--) {\n\t\t/* paired/unpaired */\n\t\tlong long sub_p = 0, sub_unp = 0,\n\t\tmax_p = 0, max_unp = 0, sum = 0;\n\t\tlong long num[2] = {0, 0};\n\t\tscanf(\"%lld\", &cols);\n\t\tscanf(\"%lld\", &num[1]);\n\t\tfor (; cols > 0; cols--) {\n\t\t\tNEXT_NUM();  \n\t\t\tsub_p = num[1] - num[0] + MAX(sub_p, 0);\n\t\t\tmax_p = MAX(sub_p, max_p);\n\t\t\tsum += num[0];\n\t\t\tcols--;\n\t\t\t\n\t\t\tNEXT_NUM();\n\t\t\tsub_unp = num[0] - num[1] + MAX(sub_unp, 0);\n\t\t\tmax_unp = MAX(sub_unp, max_unp);\n\t\t}\n\t\tprintf(\"%lld\\n\", sum + MAX(max_p, max_unp));\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9981447124304267, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9228e8abc0a906786c357c8848ebadcd", "bug_code_uid": "e3bdb2c3e33239d7a156bc0c4524479b", "src_uid": "6ae754639d96790c890f9d1ab259332a", "apr_id": "d15b4cf781273e549f9aa7773a65bd59", "difficulty": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t -- )\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int flag = 1;\r\n        if(n % 2 == 0){\r\n            int x = n / 2;\r\n            int x1 = sqrt(x);\r\n            if(x1 * x1 == x) flag = 0;\r\n        }\r\n        if(n % 4 == 0){\r\n            int x = n / 2;\r\n            int x1 = sqrt(x);\r\n            if(x1 * x1 == x) flag = 0;\r\n        }\r\n        if(flag) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n    }\r\n    // return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t -- )\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int flag = 1;\r\n        if(n % 2 == 0){\r\n            int x = n / 2;\r\n            int x1 = sqrt(x);\r\n            if(x1 * x1 == x) flag = 0;\r\n        }\r\n        if(n % 4 == 0){\r\n            int x = n / 4;\r\n            int x1 = sqrt(x);\r\n            if(x1 * x1 == x) flag = 0;\r\n        }\r\n        if(flag) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n    }\r\n    // return 0;\r\n}"}
{"similarity_score": 0.22267206477732793, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "e4b6eb6de043683717fad6bdfa41bd6a", "bug_code_uid": "d087d145c149f911e3eafb4c7a0d48e7", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "bdc5e4d980ce4ce01712737eac046d11", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,b,d,sum=0,i,a[20],k;\nscanf(\"%d%d%d\",&n,&b,&d);\nfor(i=1;i<=n;i++)\nscanf(\"\\n%d\",&a[i]);\nfor(i=1;i<=n;i++)\n{\nif(a[i]<b)\nsum=sum+a[i];\n}\nk=sum/d;\nprintf(\"%d\",k);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n int b,d,i,n,k=0,*a=NULL,sum=0;\nscanf(\"%d%d%d\",&n,&b,&d);\n a=(int*)malloc(sizeof(int)*n);\nfor(i=0;i<n;i++)\nscanf(\"\\n%d\",&a[i]);\nfor(i=0;i<n;i++)\n{\nif(a[i]<=b)\nsum=sum+a[i];\nif(sum>d)\n{\n    k++;\n    sum=0;\n}\n}\nprintf(\"%d\",k);\nreturn 0;\n}\n"}
{"similarity_score": 0.8587699316628702, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "39f7dcaa4d1eb5d599d2c6030f697680", "bug_code_uid": "edd8a3d91ac56724359f67c568031fa3", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "3a527522285e8ab3a43fb779267bd81b", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n  int n, result = 1, count, aux;\n  scanf(\"%d\", &n);\n  int array[n];\n  for(int i = 0; i < n; i++){\n    scanf(\"%d\", &array[i]);\n  }\n  for(int i = 0; i < n-1; i++){\n    if(n - i + 1 <= result){\n      break;\n    }\n    count = 1;\n    aux = i;\n    while(aux <= n-1 && array[aux+1] >= array[aux]){\n      count++;\n      aux++;\n    }\n    if(count > result){\n      result = count;\n    }\n  }\n  printf(\"%d\\n\", result);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n  int n, result = 1, aux;\n  scanf(\"%d\", &n);\n  int array[n];\n  for(int i = 0; i < n; i++){\n    scanf(\"%d\", &array[i]);\n  }\n  for(int i = 0; i < n-1; i++){\n    if(n - i + 1 <= result){\n      break;\n    }\n    aux = i;\n    while((aux < n-1) && (array[aux+1] >= array[aux])){\n      aux++;\n    }\n    if(aux-i+1 > result){\n      result = aux-i + 1;\n    }\n  }\n  printf(\"%d\\n\", result);\n  return 0;\n}\n"}
{"similarity_score": 0.7735849056603774, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "82c6d69d5e5b0c56681bab74a314927b", "bug_code_uid": "21d4f78206cb9f23c0cebcd2f981a365", "src_uid": "a704760d5ccd09d08558ea98d6007835", "apr_id": "694c2fb761130c1f8ad2643fe62bd4c9", "difficulty": 1500, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void){\n  int n,*object,*from,*app,i,j;\n  int max=0,m_start,tmp,stop;\n  scanf(\"%d\",&n);\n  object=(int *)calloc(n,sizeof(int));\n  from=(int *)calloc(n,sizeof(int));\n  app=(int *)calloc(n+1,sizeof(int));\n\n  for(i=0;i<n;i++) scanf(\"%d\",&object[i]);  \n  for(i=0;i<n;i++){\n    scanf(\"%d\",&from[i]);\n    app[from[i]]++;\n  }\n  stop=0;\n  for(i=0;i<n;i++){\n    if(object[i]){\n      tmp=1;\n      for(j=i;j>=stop;j--){\n\tif(from[j]==j && from[j] && app[j]==1) tmp++;\n\telse break;\n      }\n      if(max<tmp){\n\tmax=tmp;\n\tm_start=i;\n      }\n      stop=i+1;\n    }\n  }\n  \n  printf(\"%d\\n\",max);\n  for(i=max-1;i>=0;i--){\n    printf(\"%d%c\",m_start+1-i,(!i)?'\\n':' ');\n  }\n  \n  free(object);\n  free(from);\n  free(app);\n  return 0;\n}\n    \n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void){\n  int n,*object,*from,*app,*route,i,j;\n  int max=0,m_start,tmp,now;\n  scanf(\"%d\",&n);\n  object=(int *)calloc(n,sizeof(int));\n  from=(int *)calloc(n,sizeof(int));\n  app=(int *)calloc(n+1,sizeof(int));\n\n  for(i=0;i<n;i++) scanf(\"%d\",&object[i]);  \n  for(i=0;i<n;i++){\n    scanf(\"%d\",&from[i]);\n    app[from[i]]++;\n  }\n  for(i=0;i<n;i++){\n    if(object[i]){\n      tmp=1;\n      now=i;\n      while(1){\n\tif(from[now] && app[from[now]]==1){\n\t  tmp++;\n\t  now=from[now]-1;\n\t}else break;\n      }\n      if(max<tmp){\n\tmax=tmp;\n\tm_start=i+1;\n      }\n    }\n  }\n  \n  printf(\"%d\\n\",max);\n  route=(int *)calloc(max,sizeof(int));\n  route[0]=m_start;\n  for(i=1;i<max;i++) route[i]=from[route[i-1]-1];\n  //printf(\"%d%c\",m_start+1-i,(!i)?'\\n':' ');\n  for(i=max-1;i>=0;i--){\n    printf(\"%d%c\",route[i],(!i)?'\\n':' ');\n  }\n  \n  free(object);\n  free(from);\n  free(app);\n  free(route);\n  return 0;\n}\n    \n"}
{"similarity_score": 0.9435336976320583, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "10a2da09fe22ba355a3aefcc320fc087", "bug_code_uid": "270e5315e367f6bdda6bffec3ba8dd5c", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "d37f4b8ddb971d75d881933de275720e", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,j,d=0;\n    scanf(\"%d\",&n);\n    char a[n][5];\n\n    for(i=0;i<n;i++)\n        scanf(\"%s\",&a[i]);\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<5;j=j+3)\n        if(a[i][j]=='O' && a[i][j+1]=='O'){d=1; a[i][j]='+'; a[i][j+1]='+'; break;}\n        if(d==1) break;\n    }\n   // printf(\"%d\",d);\n    if(d==1)\n    {\n        printf(\"YES\\n\");\n\n        for(i=0;i<n;i++)\n    {\n        for(j=0;j<5;j++)\n            printf(\"%c\",a[i][j]);}\n            printf(\"\\n\");\n    }\n\n    else\n       printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,j,d=0;\n    scanf(\"%d\",&n);\n    char a[n][5];\n\n    for(i=0;i<n;i++)\n        scanf(\"%s\",&a[i]);\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<5;j=j+3)\n        if(a[i][j]=='O' && a[i][j+1]=='O'){d=1; a[i][j]='+'; a[i][j+1]='+'; break;}\n        if(d==1) break;\n    }\n   // printf(\"%d\",d);\n    if(d==1)\n    {\n        printf(\"YES\\n\");\n\n        for(i=0;i<n;i++)\n    {\n        for(j=0;j<5;j++)\n            printf(\"%c\",a[i][j]);\n\n         printf(\"\\n\");\n            }\n\n    }\n\n    else\n       printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.865979381443299, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "61e1eac5969477c45c66c277a2ae147c", "bug_code_uid": "df4cc116164243a30b596da25debdb73", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "73288da2b6c72e85cac7016716a87298", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define max(a,b) (a>b)?a:b;\n#define ll long long\n\nint main()\n{\n\tll int t,n,a,b,c,m=0;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld %lld %lld %lld\",&a,&b,&c,&n);\n\t\tm= max(a,b);\n\t\tm= max(m,c);\n\t\tn=n-(m-a)-(m-b)-(m-c);\n\t\tif(n>0 && n%3==0) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define max(a,b) (a>b)?a:b;\n#define ll long long\n\nint main()\n{\n\tll int t,n,a,b,c,d,m=0;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld %lld %lld %lld\",&a,&b,&c,&n);\n\t\tm= max(a,b);\n\t\tm= max(m,c);\n\t\td=(m-a)+(m-b)+(m-c);\n\t\tif(n>=d)\n\t\t{\n\t\t\tn-=d;\n\t\t\tif(n%3==0) printf(\"YES\\n\");\n\t\t    else printf(\"NO\\n\");\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.5005931198102017, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d1389cda8cd747be95ad5a3dd7d925c1", "bug_code_uid": "8fe5bf7ef12c17aeda5ef9409f1c5292", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "0483707245ed9e02e1552e05d35c93f8", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,d;\n    scanf(\"%d\",&n);\n    int max=0,c[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&c[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(c[i]!=c[j])\n            {\n                d=j-i;\n                if(d>max)\n                max=d;\n            }\n        }\n    }\n    printf(\"%d\",max);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,d,count=0;\n    scanf(\"%d\",&n);\n    int max1=0,c[n],max2=0,max;\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&c[i]);\n    }\n    for(i=1;i<n-1;i++)\n    {\n        if(c[n-1]!=c[i])\n        {\n            max1=n-1-i;\n            break;\n        }\n    }\n    for(i=n-1;i>0;i--)\n    {\n        if(c[0]!=c[i])\n        {\n            max2=i;\n            break;\n        }\n    }\n    max=max1>max2?max1:max2;\n    printf(\"%d\",max);\n}"}
{"similarity_score": 0.953170731707317, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "43275a489a3609266d606d789936a316", "bug_code_uid": "ee3fab81ed0b2f84dba49d6ac494b6b4", "src_uid": "bacd613dc8a91cee8bef87b787e878ca", "apr_id": "0d91af4921043655ca59cd7452bf062c", "difficulty": 1300, "tags": ["implementation", "hashing", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ROW 100\n#define COLUMN 100\nint main() {\n\tint rows,columns;\n\tscanf(\"%d%d\",&rows,&columns);\n\tint i,j;\n\tint B[ROW][COLUMN];\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tscanf(\"%d\",&B[i][j]);\n\t\t}\n\t}\n\tint A[ROW][COLUMN];\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tA[i][j]=1;\n\t\t}\n\t}\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tif(B[i][j]==0) {\n\t\t\t\tint k;\n\t\t\t\tfor(k=0;k<rows;k++) {\n\t\t\t\t\tA[i][k]=0;\n\t\t\t\t}\n\t\t\t\tfor(k=0;k<columns;k++) {\n\t\t\t\t\tA[k][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint mistake=0;\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tif(B[i][j]==1) {\n\t\t\t\tint k;\n\t\t\t\tint find=0;\n\t\t\t\tfor(k=0;k<rows;k++) {\n\t\t\t\t\tif(A[i][k]==1) {\n\t\t\t\t\t\tfind=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(k=0;k<columns;k++) {\n\t\t\t\t\tif(A[k][j]==1) {\n\t\t\t\t\t\tfind=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!find) mistake=1;\n\t\t\t}\n\t\t}\n\t}\n\tif(mistake) {\n\t\tprintf(\"NO\\n\");\n\t} else {\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=0;i<rows;i++) {\n\t\t\tfor(j=0;j<columns;j++) {\n\t\t\t\tprintf(\" %d\",A[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define ROW 100\n#define COLUMN 100\nint main() {\n\tint rows,columns;\n\tscanf(\"%d%d\",&rows,&columns);\n\tint i,j;\n\tint B[ROW][COLUMN];\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tscanf(\"%d\",&B[i][j]);\n\t\t}\n\t}\n\tint A[ROW][COLUMN];\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tA[i][j]=1;\n\t\t}\n\t}\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tif(B[i][j]==0) {\n\t\t\t\tint k;\n\t\t\t\tfor(k=0;k<columns;k++) {\n\t\t\t\t\tA[i][k]=0;\n\t\t\t\t}\n\t\t\t\tfor(k=0;k<rows;k++) {\n\t\t\t\t\tA[k][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint mistake=0;\n\tfor(i=0;i<rows;i++) {\n\t\tfor(j=0;j<columns;j++) {\n\t\t\tif(B[i][j]==1) {\n\t\t\t\tint k;\n\t\t\t\tint find=0;\n\t\t\t\tfor(k=0;k<rows;k++) {\n\t\t\t\t\tif(A[i][k]==1) {\n\t\t\t\t\t\tfind=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(k=0;k<columns;k++) {\n\t\t\t\t\tif(A[k][j]==1) {\n\t\t\t\t\t\tfind=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!find) mistake=1;\n\t\t\t}\n\t\t}\n\t}\n\tif(mistake) {\n\t\tprintf(\"NO\\n\");\n\t} else {\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=0;i<rows;i++) {\n\t\t\tfor(j=0;j<columns;j++) {\n\t\t\t\tprintf(\" %d\",A[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.21631530705774518, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "63e1e71d452081c824a87f586c0b38da", "bug_code_uid": "fc7e34e60bf5c73706c20a79a9f618a9", "src_uid": "288b36b64473326ea434dc74f05ae456", "apr_id": "af9f4b38c9e9316a554d55d8ea70e2ec", "difficulty": 800, "tags": ["bitmasks", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t, j, i, input;\n    scanf(\"%d\", &t);\n    for(j=1; j<=t; j++)\n    {\n        scanf(\"%d\", &input);\n        \n        i=1;\n        while(1)\n        {\n            if(input&i && input^i)\n            {\n                printf(\"%d\\n\", i);\n                break;\n            }\n            i++;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint store[100], cnt, flag;\n\nvoid decimal_to_binary(int n)\n{\n    cnt=0;\n    while(n!=1)\n    {\n        store[cnt++]=n%2;\n        n/=2;\n    }\n    store[cnt++]=1;\n}\n\nint binary_to_decimal(int n)\n{\n    int dec=0, first1, i, base=1;\n    if(n==1) return 3;\n    if(n%2) return 1;\n    for(first1=0; first1<cnt; first1++)\n        if(store[first1]) break;\n    for(i=0; i<=first1; i++)\n    {\n        dec+=store[i]*base;\n        base*=2;\n    }\n    return dec;\n}\n\n\nint main()\n{\n    int t, n, ans;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &n);\n        decimal_to_binary(n);\n        ans=binary_to_decimal(n);\n        if(ans==n) printf(\"%d\\n\", ++ans);\n        else printf(\"%d\\n\", ans);\n    }\n    \n    return 0;\n}\n"}
{"similarity_score": 0.950661853188929, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b484e5307b675980ad2f8deb547de150", "bug_code_uid": "26d8e4aa9cdd8287b289714534a37716", "src_uid": "f99a23bc65a1f5cdbf7909dba573ce51", "apr_id": "9768e46a94da60ae5f7a710da008a67e", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int min,i,j,k,n,may,pos;\n    int a[200000];\n    scanf(\"%d\",&n);\n    pos=1;\n    min=2;\n    may=0;\n    for(i=1; i<=n; ++i)\n    {\n        scanf(\"%d\",&a[i]);\n        if(n==1)\n        min=1;\n        if(i>2)\n        {\n            if(a[i]==a[i-1]+a[i-2])\n              ++min;\n        }\n        if(may<min)\n        may=min;\n\n\n    }\n\n    printf(\"%d\",may);\nreturn 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int min,i,j,k,n,may,pos;\n    int a[200000];\n    scanf(\"%d\",&n);\n    pos=1;\n    min=2;\n    may=0;\n    for(i=1; i<=n; ++i)\n    {\n        scanf(\"%d\",&a[i]);\n        if(n==1)\n        min=1;\n        if(i>2)\n        {\n            if(a[i]==a[i-1]+a[i-2])\n              ++min;\n              else\n              min=2;\n        }\n\n        if(may<min)\n        may=min;\n\n\n    }\n\n    printf(\"%d\",may);\nreturn 0;\n\n}\n"}
{"similarity_score": 0.9406952965235174, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c086bb15f31d905d969b5f211acccaab", "bug_code_uid": "e825c92a1c3eb568f47221b125f0c3e8", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "911224054bfdc5e3cf495f9173482d59", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    int s;\n    int sum=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&s);\n        sum=sum+s;\n    }\n    double sa=(double)sum/n;\n    printf(\"%.12lf\",sa);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    int s;\n    int sum=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&s);\n        sum=sum+s;\n    }\n    float sa=(float)sum/n;\n    printf(\"%.12f\",sa);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9573847051955633, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6aefc278fa74c2355fbf75296c2028b2", "bug_code_uid": "9344a2eb1ce2da25f9bfa657dd88ecef", "src_uid": "7896740b6f35010af751d3261b5ef718", "apr_id": "3b7b025d6d1ddb8fbca13ae096a2f7d0", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,j,n,space;\n    scanf(\"%d\",&n);\n    space=n-1;\n    for (i=0; i<=n; i++)    {\n        for (j=0; j<=space; j++)    printf(\"  \");\n        space--;\n        for (j=0; j<=i; j++)    {\n                if (i!=0)   printf(\"%d \",j);\n                else        printf(\"%d\",j);\n        }\n        for (j=i-1; j>=0; j--)             {\n                if (j!=0)       printf(\"%d \",j);\n                else            printf(\"%d\",j);\n        }\n        printf(\"\\n\");\n    }\n    space=0;\n    for (i=n-1; i>=0; i--)    {\n     for (j=0; j<=space; j++)   printf(\"  \");\n     space++;\n     for (j=0; j<=i; j++)   printf(\"%d \",j);\n     for (j=i-1; j>=0; j--)     {\n            if (j!=0)       printf(\"%d \",j);\n            else             printf(\"%d\",j);\n     }\n     printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,j,n,space;\n    scanf(\"%d\",&n);\n    space=n-1;\n    for (i=0; i<=n; i++)    {\n        for (j=0; j<=space; j++)    printf(\"  \");\n        space--;\n        for (j=0; j<=i; j++)    {\n                if (i!=0)   printf(\"%d \",j);\n                else        printf(\"%d\",j);\n        }\n        for (j=i-1; j>=0; j--)             {\n                if (j!=0)       printf(\"%d \",j);\n                else            printf(\"%d\",j);\n        }\n        printf(\"\\n\");\n    }\n    space=0;\n    for (i=n-1; i>=0; i--)    {\n     for (j=0; j<=space; j++)   printf(\"  \");\n     space++;\n     for (j=0; j<=i; j++)   {\n            if (i!=0)   printf(\"%d \",j);\n            else        printf(\"%d\",j);\n     }\n     for (j=i-1; j>=0; j--)     {\n            if (j!=0)       printf(\"%d \",j);\n            else             printf(\"%d\",j);\n     }\n     printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7984570877531341, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "8425cb54f524f6974f8b3bfc8dd882d4", "bug_code_uid": "3e5def8fa88d868603cf125fc7a31b56", "src_uid": "d8136eb72931851f501c5ce9042ce4eb", "apr_id": "a7f23cd38b77ff7cbf75a62ba0c44394", "difficulty": 1200, "tags": ["constructive algorithms", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,v,c,x;v=0;c=0;\n\t    int pi,pj;pi=0;pj=0;\n\t    scanf(\"%d\",&n);\n\t    int a[n];\n\t    x=n-1;\n\t    for(int i=0;i<n;i++)\n\t    {\n\t      scanf(\"%d\",&a[i]);  \n\t    }\n\t    for(int i=1;i<n;i++)\n\t    {\n\t      if(a[i]!=a[i-1])\n\t      {\n\t          v=1;\n\t          break;\n\t      }\n\t    }\n\t    if(v==1)\n\t    {\n\t        printf(\"YES\\n\");\n\t        for(int i=0;i<n;i++)\n\t        {\n\t            for(int j=i;j<n;j++)\n\t            {\n\t                if(a[i]!=a[j])\n\t                { \n\t                    c=c+1;\n\t                    pi=i+1;\n\t                    pj=j+1;\n\t                    printf(\"%d %d\\n\",pi,pj);\n\t                }\n\t                if(c==x)\n\t                {\n\t                    break;\n\t                }\n\t            }\n\t            if(c==x)\n\t                {\n\t                    break;\n\t                }\n\t        }\n\t    }\n\t    else{\n\t        printf(\"NO\\n\");\n\t    }\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,pm,v,c,x;v=0;c=0;\n\t    int pi,pj;pi=0;pj=0;\n\t    scanf(\"%d\",&n);\n\t    int a[n];\n\t    x=n-1;\n\t    for(int i=0;i<n;i++)\n\t    {\n\t      scanf(\"%d\",&a[i]);  \n\t    }\n\t    for(int i=1;i<n;i++)\n\t    {\n\t      if(a[i]!=a[i-1])\n\t      {\n\t          v=1;\n\t          break;\n\t      }\n\t    }\n\t    if(v==1)\n\t    {\n\t        printf(\"YES\\n\");\n\t            for(int j=1;j<n;j++)\n\t            {\n\t                if(a[0]!=a[j])\n\t                { \n\t                    c=c+1;\n\t                    pi=1;\n\t                    pj=j+1;\n\t                    pm=pj;\n\t                    printf(\"%d %d\\n\",pi,pj);\n\t                }\n\t            }\n\t            for(int j=1;j<n;j++)\n\t            {\n\t                if(c==x)\n\t                {\n\t                    break;\n\t                }\n\t                if(a[j]==a[0])\n\t                {\n\t                    c=c+1;\n\t                    pj=j+1;\n\t                    printf(\"%d %d\\n\",pj,pm);\n\t                }\n\t            }\n\t    }\n\t    else{\n\t        printf(\"NO\\n\");\n\t    }\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8922381311228335, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8ef6aae9b0fed8bf960588437949b711", "bug_code_uid": "5871370b9ff0d4a78dc8856600e04ffa", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "f557faa3b6b0e73cef118baf4bcd07e4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int A[101][101] ;\n    int n_rows , m_cols ;\n    int i , j ;\n    int num ;\n\n    scanf( \"%d%d\" , &n_rows , &m_cols );\n\n    for( i=0 ;i<n_rows ; ++i ){\n        scanf(\"%d\",&num);\n        for( j=m_cols-1 ; j>=0 ; --j ){\n            A[i][j] = num % 10 ;\n            num = num / 10 ;\n        }\n    }\n\n\n    for( i=0 ; i<n_rows ; ++i ){\n        for( j=1 ; j<m_cols ; ++j ){\n            if ( A[i][j] != A[i][j-1] ){\n                printf(\"NO\");\n                return 0 ;\n            }\n        }\n    }\n\n\n    for ( i=1 ; i<n_rows ; ++i ){\n        if ( A[i][0] == A[i-1][0] ){\n            printf(\"NO\");\n            return 0 ;\n        }\n    }\n\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char A[101][101] ;\n    int n_rows , m_cols ;\n    int i , j ;\n\n    scanf( \"%d%d\" , &n_rows , &m_cols );\n\n    for( i=0 ;i<n_rows ; ++i ){\n        scanf( \"%s\" , A[i] );\n    }\n\n\n    for( i=0 ; i<n_rows ; ++i ){\n        for( j=1 ; j<m_cols ; ++j ){\n            if ( A[i][j] != A[i][j-1] ){\n                printf(\"NO\");\n                return 0 ;\n            }\n        }\n    }\n\n\n    for ( i=1 ; i<n_rows ; ++i ){\n        if ( A[i][0] == A[i-1][0] ){\n            printf(\"NO\");\n            return 0 ;\n        }\n    }\n\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.9435897435897436, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5342229d5107d403e5cc1f6fe8a965e5", "bug_code_uid": "ec18978bfaedd45e07a401ae21869e45", "src_uid": "b5ef56f2eb482682414c32fba83a3949", "apr_id": "29b04c97796c3fc55a9ede1f20bcbed3", "difficulty": 1400, "tags": ["data structures", "dp", "sortings", "two pointers"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    short t, n, k;\n    int a1, a2;\n    scanf(\"%hd\", &t);\n    int sc[200005] = {};\n    while (t--)\n    {\n        scanf(\"%hd %hd\", &n, &k);\n        scanf(\"%d\", &a1);\n        for (int i = 2; i <= n; ++i)\n        {\n            scanf(\"%d\", &a2);\n            sc[i] = sc[i - 1] + (((long long)a2 << 1) > a1);\n            a1 = a2;\n        }\n        int ans = 0;\n        for (int i = 1; i <= n - k; ++i)\n        {\n            auto l = sc[i + k] - sc[i];\n            if (l == k)\n                ans++;\n        }\n        printf(\"%d\\n\", ans);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    short t;\n    int n, k;\n    scanf(\"%hd\", &t);\n    int sc[200005] = {};\n    while (t--)\n    {\n        scanf(\"%d %d\", &n, &k);\n        int a1;\n        scanf(\"%d\", &a1);\n        for (int i = 2; i <= n; ++i)\n        {\n            int a2;\n            scanf(\"%d\", &a2);\n            sc[i] = sc[i - 1] + (((long long)(a2) << 1) > a1);\n            a1 = a2;\n        }\n        int ans = 0;\n        for (int i = 1; i <= n - k; ++i)\n        {\n            auto l = sc[i + k] - sc[i];\n            if (l == k)\n                ans++;\n        }\n        printf(\"%d\\n\", ans);\n    }\n}"}
{"similarity_score": 0.9473684210526315, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3d2c9734faee515a87e37d37dc1bb4d7", "bug_code_uid": "0d0c007cc0bea28516e1e1c25816996e", "src_uid": "e75b88ce4341062c20b6014da1152d29", "apr_id": "39dd00e21e7935e0b0f32f87a24cf7b4", "difficulty": 1400, "tags": ["binary search", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint mod(int a)\n{\n    if(a<0)\n        return(-a);\n    else\n        return(a);\n}\nint main()\n{\n    int t;scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;scanf(\"%d\",&n);long long int k,z,sum=0,max=0, a[n],j;for(j=0;j<n;j++)scanf(\"%lld\",(a+j));k=n;\n        for(j=0;j<n;j++)\n        {\n            sum+=a[j];\n            if(a[j]>max)max=a[j];\n\n        }\n        z=(max)*(k-1);\n        if(z>=sum)\n        printf(\"%lld\\n\",((z)-sum));\n        else\n        {\n            if(sum%(k-1)==0)\n                printf(\"0\\n\");\n            printf(\"%lld\\n\",(((sum/(k-1))+1)*(k-1))-sum);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint mod(int a)\n{\n    if(a<0)\n        return(-a);\n    else\n        return(a);\n}\nint main()\n{\n    int t;scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;scanf(\"%d\",&n);long long int k,z,sum=0,max=0, a[n],j;for(j=0;j<n;j++)scanf(\"%lld\",(a+j));k=n;\n        for(j=0;j<n;j++)\n        {\n            sum+=a[j];\n            if(a[j]>max)max=a[j];\n\n        }\n        z=(max)*(k-1);\n        if(z>=sum)\n        {\n            printf(\"%lld\\n\",z-sum);continue;\n        }\n        else\n        {\n            if(sum%(k-1)==0)\n                printf(\"0\\n\");\n                else\n            printf(\"%lld\\n\",(((sum/(k-1))+1)*(k-1))-sum);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8452982810920121, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "f6f53c7d1c5bf73f35e0918136c4cf7f", "bug_code_uid": "0bbef4b82abc8a8127ee5850d921eb6a", "src_uid": "a12103bd632fa73a7faab71df3fd0164", "apr_id": "d3b9bdfb2f52687385a340a1a829cbc9", "difficulty": 1800, "tags": ["dp", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N 5000\n#define M 5000\n\n#define min(a, b) ((a) < (b) ? (a) : (b))\n\nint n, m, a[N], b[M], ff[N], gcdr[N], fgcdr[N];\n\nint gcd(int a, int b) {\n  if (b > a) { int c = a; a = b; b = c; }\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\n\nint f(int x) {\n  int i, ret = 0, lim = sqrt(x) + 1;\n  if (x <= 1) return 0;\n  for (i = 0; i < m; ++i)\n    while (x % b[i] == 0) {\n      --ret;\n      x /= b[i];\n    }\n  for (i = 2; i <= lim; ++i) {\n    while (x % i == 0) {\n      ++ret;\n      x /= i;\n    }\n  }\n  if (x > 1) {\n    for (i = 2; i <= x; ++i) {\n      while (x % i == 0) {\n      r ++ret;\n        x /= i;\n      }\n    }\n  }\n  return ret;\n}\n\nint main(void) {\n  int i, g, res = 0;\n  scanf(\"%d %d\", &n, &m);\n  for (i = 0; i < n; ++i) scanf(\"%d\", &a[i]);\n  for (i = 0; i < m; ++i) scanf(\"%d\", &b[i]);\n  g = a[0];\n  for (i = 0; i < n; ++i) {\n    g = gcd(g, a[i]);\n    res += f(a[i]) - min(f(g), 0);\n  }\n  printf(\"%d\\n\", res);\n  exit(EXIT_SUCCESS);\n}\n", "fixed": "#include <math.h>\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N 5000\n#define M 5000\n\n#define min(a, b) ((a) < (b) ? (a) : (b))\n\nint n, m, a[N], b[M], gcdr[N];\n\nint gcd(int a, int b) {\n  if (b > a) { int c = a; a = b; b = c; }\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\n\nint f(int x) {\n  int i, ret = 0, lim = sqrt(x) + 1;\n  if (x <= 1) return 0;\n  for (i = 0; i < m; ++i)\n    while (x % b[i] == 0) {\n      --ret;\n      x /= b[i];\n    }\n  for (i = 2; i <= lim; ++i) {\n    while (x % i == 0) {\n      ++ret;\n      x /= i;\n    }\n  }\n  if (x > 1) ++ret;\n  return ret;\n}\n\nint main(void) {\n  int i, res = 0, div = 1;\n  scanf(\"%d %d\", &n, &m);\n  for (i = 0; i < n; ++i) scanf(\"%d\", &a[i]);\n  for (i = 0; i < m; ++i) scanf(\"%d\", &b[i]);\n  gcdr[0] = a[0];\n  for (i = 1; i < n; ++i)\n    gcdr[i] = gcd(gcdr[i - 1], a[i]);\n  for (i = n - 1; i >= 0; --i) {\n    if (f(gcdr[i]/div) < 0)\n      div = gcdr[i];\n    res += f(a[i]/div);\n  }\n  printf(\"%d\\n\", res);\n  exit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9975669099756691, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c196f2f8182f893e98fa1df060e95f21", "bug_code_uid": "687d1bdfccc8b1e4580b750a8b35d481", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "a72caf111ed3cebc51caef91519b6147", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,T,a[101],b[101],x,j;\n\tscanf(\"%d\",&T);\n\tfor(i=0;i<T;i++)\n\tscanf(\"%d\",&a[i]);\n\tx=0;\n\tj=0;\n\tfor(i=0;i<T;i++)\n    {\n    \tif(a[i]==1)\n\t    {\n\t\t    x++;\n\t\t    if(i!=0)\n\t\t    {\n\t\t\t    j++;\n\t\t\t    b[j]=a[i-1];\n\t\t    }\n\t    }\n\t    if(i==T-1)\n\t    {\n\t\t    j++;\n\t\t    b[j]=a[i];\n\t    }\n    }\n    printf(\"%d\\n\",x);\n    for(i=1;i<j;i++)\n    printf(\"%d \",b[i]);\n    printf(\"%d\",b[j]);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,T,a[1001],b[1001],x,j;\n\tscanf(\"%d\",&T);\n\tfor(i=0;i<T;i++)\n\tscanf(\"%d\",&a[i]);\n\tx=0;\n\tj=0;\n\tfor(i=0;i<T;i++)\n    {\n    \tif(a[i]==1)\n\t    {\n\t\t    x++;\n\t\t    if(i!=0)\n\t\t    {\n\t\t\t    j++;\n\t\t\t    b[j]=a[i-1];\n\t\t    }\n\t    }\n\t    if(i==T-1)\n\t    {\n\t\t    j++;\n\t\t    b[j]=a[i];\n\t    }\n    }\n    printf(\"%d\\n\",x);\n    for(i=1;i<j;i++)\n    printf(\"%d \",b[i]);\n    printf(\"%d\",b[j]);\n}"}
{"similarity_score": 0.9640387275242047, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e582bd1efdbab0475d2cd9c0dfdb33af", "bug_code_uid": "0c408c11cee11fd246c07866c4194e1e", "src_uid": "82de6d4c892f4140e72606386ec2ef59", "apr_id": "771e3b25b811acb2d2eb015cd44aaca1", "difficulty": 1400, "tags": ["dp", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,f;\n   while(scanf(\"%d%d\",&n,&k)!=EOF)\n   {\n       if(k==0)\n       {\n           f=0;\n           for(i=k+1,j=0;j<n;j++,i+=2)\n           {\n               if(f==1)\n               printf(\" \");\n               printf(\"%d %d\",i+1,i);\n               f=1;\n           }\n           printf(\"\\n\");\n       }\n       else\n       {\n            printf(\"1 %d\",k+1);\n           for(i=2,j=0;j<n-1;j++,i+=2)\n           {\n               if(i+1==k)\n               {\n                   printf(\" %d %d\",i+2,i);\n                   i++;\n               }\n               else\n               printf(\" %d %d\",i+1,i);\n           }\n           printf(\"\\n\");\n       }\n   }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,f;\n   while(scanf(\"%d%d\",&n,&k)!=EOF)\n   {\n       if(k==0)\n       {\n           f=0;\n           for(i=k+1,j=0;j<n;j++,i+=2)\n           {\n               if(f==1)\n               printf(\" \");\n               printf(\"%d %d\",i+1,i);\n               f=1;\n           }\n           printf(\"\\n\");\n       }\n       else\n       {\n            printf(\"1 %d\",k+1);\n           for(i=2,j=0;j<n-1;j++,i+=2)\n           {\n               if(i==k+1)\n               i++;\n               if(i+1==k+1)\n               {\n                   printf(\" %d %d\",i+2,i);\n                   i++;\n               }\n               else\n               printf(\" %d %d\",i+1,i);\n           }\n           printf(\"\\n\");\n       }\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.0236318407960199, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "2b493ebda5f1994b3ecd47c1bf1f82f0", "bug_code_uid": "cb69015fbb34731c9171d8bee0085b93", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "361cc8509ed73e10037fd5b9d1cf78b2", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\n<CodeBlocks_project_file>\n\t<FileVersion major=\"1\" minor=\"6\" />\n\t<Project>\n\t\t<Option title=\"codeforces_eleven\" />\n\t\t<Option pch_mode=\"2\" />\n\t\t<Option compiler=\"gcc\" />\n\t\t<Build>\n\t\t\t<Target title=\"Debug\">\n\t\t\t\t<Option output=\"bin/Debug/codeforces_eleven\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Debug/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-g\" />\n\t\t\t\t</Compiler>\n\t\t\t</Target>\n\t\t\t<Target title=\"Release\">\n\t\t\t\t<Option output=\"bin/Release/codeforces_eleven\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Release/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-O2\" />\n\t\t\t\t</Compiler>\n\t\t\t\t<Linker>\n\t\t\t\t\t<Add option=\"-s\" />\n\t\t\t\t</Linker>\n\t\t\t</Target>\n\t\t</Build>\n\t\t<Compiler>\n\t\t\t<Add option=\"-Wall\" />\n\t\t</Compiler>\n\t\t<Unit filename=\"main.c\">\n\t\t\t<Option compilerVar=\"CC\" />\n\t\t</Unit>\n\t\t<Extensions>\n\t\t\t<code_completion />\n\t\t\t<envvars />\n\t\t\t<debugger />\n\t\t</Extensions>\n\t</Project>\n</CodeBlocks_project_file>\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\nint isperfectsq(n)\n{\n    int s=sqrt(n);\n    if(s*s==n)\n        return 1;\n    return 0;\n}\nint isfib(int n)\n{\n    return isperfectsq(5*n*n+4)||isperfectsq(5*n*n-4);\n}\nint main()\n{\n    int i,n;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        if(i==1||i==2||i==3)\n            printf(\"O\");\n        else\n        {\n            if(isfib(i))\n                printf(\"O\");\n            else\n                printf(\"o\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9356136820925554, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "78d283c8829b0f3260232d63546ecf1e", "bug_code_uid": "69984fc7e1e779940778c796228dba32", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "f1e13d96edf202288f77bbc2f8b51641", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[1000],c[1000],i,c1=0,j,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            c1++;\n        }\n    }\n    printf(\"%d\\n\",c1);\n   \n    for(i=1;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            printf(\"%d \",a[i-1]);\n        }\n        if(i==(n-1))\n        {\n            printf(\"%d\\n\",a[n-1]);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[1000],c[1000],i,c1=0,j,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            c1++;\n        }\n    }\n    printf(\"%d\\n\",c1);\n   if(n==1)\n        {\n            printf(\"1\\n\");\n        }\n    for(i=1;i<n;i++)\n    {\n        \n        if(a[i]==1)\n        {\n            printf(\"%d \",a[i-1]);\n        }\n        if(i==(n-1))\n        {\n            printf(\"%d\\n\",a[n-1]);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.6224215246636772, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "53bf8dacac23d882e50547e3de7e592c", "bug_code_uid": "f21865aea3e215f862cdfb263d86ac7c", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "1b71c8e08b2aa06946649b25fbc2a88c", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    int m,b,i,step=0;\n    char a[105];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n\n        scanf(\"%d\",&m);\n\n        scanf(\"%s\",a);\n        step=0;\n        //b=strlen(a);\n        if(m<11)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n        {\n            for(i=0;i<m;i++)\n            {\n                if(a[i]=='8')\n                {\n                    step++;\n                }\n            }\n            if(step==0)\n            {\n                printf(\"NO\\n\");\n            }\n            else\n            {\n                printf(\"YES\\n\");\n            }\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    int m,b,i;\n    char a[105];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n\n        scanf(\"%d\",&m);\n        scanf(\"%s\",a);\n\n\n            for(i=0;i<m;i++)\n            {\n                if(a[i]=='8')\n                {\n                    break;\n                }\n            }\n            if(m-i>=11)\n            {\n                printf(\"YES\\n\");\n            }\n            else\n            {\n                printf(\"NO\\n\");\n            }\n\n    }\n}\n"}
{"similarity_score": 0.08516886930983847, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "98e202d5203e0078a74b0444ade87c14", "bug_code_uid": "04cc91e1348a21f50328b24e6802d2ac", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "74ac32b843b1894a5411c77efaa94a69", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\nusing namespace std;\n\nint main() {\n\nint n;\ncin>>n;\nint curoff=0;\nint untreated=0;\nfor(int i=0;i<n;i++){\n\tint x;\n\tcin>>x;\n\tif(x>0){\n\t\tcuroff+=x;\n\t\t\n\t}\n\telse {\n\t\tif(curoff<1){\n\t\t++untreated;\n\t\t}\n\t\telse {\n\t\t\t--curoff;\n\t\t}\n\t}\n}\ncout<<untreated;\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint  main()\n{\n   int n,i,j,h=0,u=0,k=0,count=0;\n   scanf(\"%d\",&n);\n   int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    \n       for(j=0;j<n;j++)\n       {   u=0;\n           if(a[j]==-1)\n           {u=h+a[j];\n           if(u!=-1)\n            {h=h+a[j];}\n           }\n           else\n           h=h+a[j];\n           if(u==-1)count++;\n       }\n   printf(\"%d\",count);\n  \n   return 0;\n}\n\n"}
{"similarity_score": 0.7101827676240209, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "192b3c64ac270c3e6fe2466cc35d3364", "bug_code_uid": "04cdd995cd3ea15b89b8941765ac5770", "src_uid": "1bcf130890495bcca67b4b0418476119", "apr_id": "9e1652f1df99601235afa56641eb7882", "difficulty": 1700, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(void){\n int i,j;\n double a,b,ans,flag1=1,flag2=1,min,m,n;\n scanf(\"%lf%lf\",&a,&b);\n\nif(a>=b)\n{\n    n=(a-b)/2.0/b;\n    if(n<1){\n        flag1=0;\n    }else{\n    if(a!=b){\n        ans=(a-b)/2.0/n;\n    }else{\n    ans=b;\n    }}\n    min=ans;\n    n=(a+b)/2.0/b;\n    if(n<1){\n        flag2=0;\n    }else{\n    m=(a+b)/2.0/n;\n    if(min>m){\n        ans=m;\n    }\n    }\n    if(flag1||flag2){\n        printf(\"%.12f\\n\",ans);\n    }else{\n\n    printf(\"-1\\n\");}\n\n\n    }else{\n\n    printf(\"-1\\n\");\n\n    }\n\n\n\n\nreturn 0;\n\n\n\n}\n                                                                          ", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(void){\n int i,j,n;\n double a,b,ans=0x7f7f7f7f,flag1=1,flag2=1,min,m;\n scanf(\"%lf%lf\",&a,&b);\n\nif(a>=b)\n{\n    n=(a-b)/2.0/b;\n\n    if(a!=b){\n        ans=(a-b)/2.0/n;\n    }else{\n    ans=b;\n    }\n\n    }else flag1=0;\n    min=ans;\n    n=(a+b)/2.0/b;\n    if(n<1){\n        flag2=0;\n    }else{\n    m=(a+b)/2.0/n;\n    if(min>m){\n        ans=m;\n    }\n    }\n    if(flag1||flag2){\n        printf(\"%.12f\\n\",ans);\n    }else{\n\n    printf(\"-1\\n\");}\n\n\n\n\n\n\n\n\n\nreturn 0;\n\n\n\n}\n\n                          "}
{"similarity_score": 0.5480367585630743, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a7d4297352d13558e010f64e9e20276b", "bug_code_uid": "43918cd152b582b146117e18dff1bb13", "src_uid": "9366e1626b33b4f4e49cf35200c0448f", "apr_id": "0423db1bdf98607fd8d993f0afc01600", "difficulty": 1600, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define max(x, y) ((x)>(y)?(x):(y))\n\nint n, a[100005];\nchar s[100005];\n\nint main(void){\n\twhile (~scanf(\"%d\", &n)) {\n\t\tint i;\n\t\tfor (i=0; i<n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tscanf(\"%s\", s);\n\t\tint ans = 0;\n\t\tfor (i=0; i<n; i++) {\n\t\t\tif (s[i] == '1')\n\t\t\t\tans += a[i];\n\t\t}\n\t\tint j = n-1, tmp = 0; \n\t\twhile (s[j] == '0')\n\t\t\tj--;\n\t\tfor (i=j-1; i>=0; i--) {\n\t\t\ttmp += a[i];\n\t\t}\n\t\tans = max(ans, tmp);\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define max(x, y) ((x)>(y)?(x):(y))\n\nint n, a[100005], sum2[100005], sum[100005];\nchar s[100005];\n\nint solve(){\n\tint i, res = 0;\n\tfor (i=0; i<n; i++) {\n\t\tif (s[i] == '1')\n\t\t\tres += a[i];\n\t}\n\n\tint ans = res;\n\tfor (i=0; i<n; i++) {\n\t\tif (s[i] == '1')\n\t\t\tans = max(ans, res-sum2[i]+sum[i]-a[i]);\n\t}\n\n\treturn ans;\n}\n\nint main(void){\n\twhile (~scanf(\"%d\", &n)) {\n\t\tint i;\n\t\tfor (i=0; i<n; i++) {\n\t\t\tscanf(\"%d\", &a[i]);\n\t\t\tif (i == 0)\n\t\t\t\tsum[i] = a[i];\n\t\t\telse\n\t\t\t\tsum[i] = sum[i-1]+a[i];\n\t\t}\n\t\tscanf(\"%s\", s);\n\t\tfor (i=0; i<n; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tsum2[i] = 0;\n\t\t\telse\n\t\t\t\tsum2[i] = sum2[i-1];\n\t\t\tif (s[i] == '1')\n\t\t\t\tsum2[i] += a[i];\n\t\t}\n\n\t\tprintf(\"%d\\n\", solve());\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9847619047619047, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b24c98f8fd3b17ce8a9f5c1c542716a8", "bug_code_uid": "d4bda034ffdc5addab749dec5e00f626", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "b46e306205b4192bc3eabf8f26b9296e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main(){\r\n    int n, i;\r\n    scanf(\"%d\", &n);\r\n    while(n--){\r\n        int count=0, l;\r\n        scanf(\"%d\", &l);\r\n        char a[10];\r\n        scanf(\"%s\", &a);\r\n        int c=0, d=0, e=0, f=0, j=0,r=0;\r\n        if(l==5){\r\n            for(i=0; i<l; i++){\r\n                if(a[i]=='T'){\r\n                    c++;\r\n                }\r\n                else if(a[i]=='i'){\r\n                    d++;\r\n                }\r\n                else if(a[i]=='m'){\r\n                    e++;\r\n                }\r\n                else if(a[i]=='u'){\r\n                    f++;\r\n                }\r\n                else if(a[i]=='r'){\r\n                    j++;\r\n                }\r\n                else\r\n                    r++;\r\n            }\r\n            if(c==d==e==f==j==1 && r==0){\r\n                printf(\"YES\\n\");\r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n            }\r\n\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n\r\n\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main(){\r\n    int n, i;\r\n    scanf(\"%d\", &n);\r\n    while(n--){\r\n        int count=0, l;\r\n        scanf(\"%d\", &l);\r\n        char a[10];\r\n        scanf(\"%s\", &a);\r\n        int c=0, d=0, e=0, f=0, j=0,r=0;\r\n        if(l==5){\r\n            for(i=0; i<l; i++){\r\n                if(a[i]=='T'){\r\n                    c++;\r\n                }\r\n                else if(a[i]=='i'){\r\n                    d++;\r\n                }\r\n                else if(a[i]=='m'){\r\n                    e++;\r\n                }\r\n                else if(a[i]=='u'){\r\n                    f++;\r\n                }\r\n                else if(a[i]=='r'){\r\n                    j++;\r\n                }\r\n                else\r\n                    r++;\r\n            }\r\n            if(c==1 && d==1 && e==1 && f==1 && j==1 && r==0){\r\n                printf(\"YES\\n\");\r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n            }\r\n\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n\r\n\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9800995024875622, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d8802d5a9a03e32e69d8c19320b41baf", "bug_code_uid": "ee4d7be7c77fddb21def03705752e66a", "src_uid": "2fa3e88688b92c27ad26a23884e26009", "apr_id": "410c82090a9da18b8337821e1e48c55a", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\", &t);\n\t\n\tdo\n\t{\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\n\t\tprintf(\"%lld %lld\\n\", n-1, 1);\n\n\t\t--t;\n\t} while ( t != 0 );\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\", &t);\n\t\n\tdo\n\t{\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\n\t\tprintf(\"%lld 1\\n\", n-1);\n\n\t\t--t;\n\t} while ( t != 0 );\n}"}
{"similarity_score": 0.9506903353057199, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ad34b32165ed72968186df5c2b59957c", "bug_code_uid": "1c882db1dd050fee481d4c009f5206bf", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "4fd8da059c5dd1fb228eb57b42e23bec", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint t; scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int a,b,c,n,k;\n\t\tscanf(\"%lld %lld\",&n,&k);\n\t\tint arr[n+5],mx=-5000,mx1=-5000;\n\t\tfor(a=0 ; a<n ; a++)\n\t\t{scanf(\"%d\",&arr[a]);if(mx<arr[a]) mx=arr[a];}\n\t\tfor(b=0 ; b<n ; b++) {arr[b]=mx-arr[b];  if(mx1<arr[b]) mx1=arr[b];}\n\tif(k%2!=0) {for(b=0 ; b<n ; b++)\n\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t}\n\telse  {  \tfor(b=0 ; b<n ; b++) arr[b]=mx1-arr[b];\n\t\t\t\tfor(b=0 ; b<n ; b++)\n\t\t\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t\t  }\n\t}\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n\tint t; scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int a,b,c,n,k,mx=-3000000000,mx1=-3000000000;\n\t\tscanf(\"%lld %lld\",&n,&k);\n\t\tint arr[n+5];\n\t\tfor(a=0 ; a<n ; a++)\n\t\t{scanf(\"%d\",&arr[a]);if(mx<arr[a]) mx=arr[a];}\n\t\tfor(b=0 ; b<n ; b++) {arr[b]=mx-arr[b];  if(mx1<arr[b]) mx1=arr[b];}\n\tif(k%2!=0) {for(b=0 ; b<n ; b++)\n\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t}\n\telse  {  \tfor(b=0 ; b<n ; b++) arr[b]=mx1-arr[b];\n\t\t\t\tfor(b=0 ; b<n ; b++)\n\t\t\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t\t  }\n\t}\n}\n"}
{"similarity_score": 0.9968847352024922, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f737396dc8916229c0fba9f7555091a6", "bug_code_uid": "4ebb468440aaf1794e3bad2ebeb894bf", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "cbd3604228a5b12c3a32a5ca82bc6325", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int n,count=0;\n    scanf(\"%d\",&n);\n    char string[100000][32];\n    char* strData[100000];\n    int strFrequency[100000]={};\n    \n    for (int i=0;i<n;++i){\n        scanf(\" %s\",string[i]);\n         int flag=0;\n        for(int j=0;j<count;++j){\n            if(strcmp(string[i],strData[j])==0){\n                ++strFrequency[j];\n                printf(\"%s%d\\n\",string[i],strFrequency[j]);\n                flag=1;\n                break;\n            }\n        }\n        if (flag==0){\n            printf(\"OK\\n\");\n            strData[count++]=string[i];\n        \n        }\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int n,count=0;\n    scanf(\"%d\",&n);\n    char string[100000][40];\n    char* strData[100000];\n    int strFrequency[100000]={};\n    \n    for (int i=0;i<n;++i){\n        scanf(\" %s\",string[i]);\n         int flag=0;\n        for(int j=0;j<count;++j){\n            if(strcmp(string[i],strData[j])==0){\n                ++strFrequency[j];\n                printf(\"%s%d\\n\",string[i],strFrequency[j]);\n                flag=1;\n                break;\n            }\n        }\n        if (flag==0){\n            printf(\"OK\\n\");\n            strData[count++]=string[i];\n        \n        }\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9975609756097561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e375001718c339c90d2a9415d45cbb4f", "bug_code_uid": "d0faaa765bab006d306cf0f750af8454", "src_uid": "8b2b7208630af1d086420513a437a914", "apr_id": "8f782243cd0808963bc509479959d972", "difficulty": 1300, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long n;\r\n        scanf(\"%ld\",&n);\r\n        long long a[n];\r\n        for(long i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n        }\r\n        long long min=a[0];\r\n        long index;\r\n        for(long i=1;i<n;i++)\r\n        {\r\n            if(a[i]<min)\r\n            {\r\n                min=a[i];\r\n                index=i;\r\n            }\r\n        }\r\n        printf(\"%ld\\n\",n-1);\r\n        for(long i=0;i<n;i++)\r\n        {\r\n            if(i<index)\r\n            {\r\n                printf(\"%ld %ld %lld %lld\\n\",i+1,index+1,min+index-i,min);\r\n            }\r\n            else if(i>index)\r\n            {\r\n                printf(\"%ld %ld %lld %lld\\n\",i+1,index+1,min+i-index,min);\r\n            }\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long n;\r\n        scanf(\"%ld\",&n);\r\n        long long a[n];\r\n        for(long i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n        }\r\n        long long min=a[0];\r\n        long index=0;\r\n        for(long i=1;i<n;i++)\r\n        {\r\n            if(a[i]<min)\r\n            {\r\n                min=a[i];\r\n                index=i;\r\n            }\r\n        }\r\n        printf(\"%ld\\n\",n-1);\r\n        for(long i=0;i<n;i++)\r\n        {\r\n            if(i<index)\r\n            {\r\n                printf(\"%ld %ld %lld %lld\\n\",i+1,index+1,min+index-i,min);\r\n            }\r\n            else if(i>index)\r\n            {\r\n                printf(\"%ld %ld %lld %lld\\n\",i+1,index+1,min+i-index,min);\r\n            }\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9050772626931567, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "960d1309f50ef064e765adfb45ad5838", "bug_code_uid": "e59ace9dfee5f877814c51a4f0444a5e", "src_uid": "8f52241c690ec4f9af71a52904fb19a0", "apr_id": "bbe9718fc14745ef18863edcf2ee7e35", "difficulty": 1400, "tags": ["combinatorics"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \n#include<string.h>\n#define N 1000002\nlong long Lim = 1000000007;\nchar s[N];\nint main()\n{\n\tint i,l;\n\n\twhile(~scanf(\"%s\",s)){\n\t\tlong long b=0;\n\t\tlong long sum=0; \n\t\t//scanf(\"%s\",s);\n\t\tl = strlen(s);\n\t\ts[l]='a';\n\t\tfor(i=l-1;i>=0;i--)\n\t\t{\n\t\t\tif(s[i]=='a'&&s[i+1]=='a'){\n\t\t\t\tb = b*2%Lim;\n\t\t\t}\n\t\t\tif(s[i]=='b'){\n\t\t\t\tb = (b+1)%Lim;\n\t\t\t}\n\t\t\t\n\t\t\tif(s[i]=='a')\t\n\t\t\t\tsum= (sum+b)%Lim;\n\t\t}\n\t\tprintf(\"%I64d\\n\",sum);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h> \n#include<string.h>\n#define N 1000002\nlong long Lim = 1000000007;\nchar s[N];\nint main()\n{\n\tint i,l;\n\n\twhile(~scanf(\"%s\",s)){\n\t\tlong long b=0;\n\t\tlong long sum=0; \n\t\t//scanf(\"%s\",s);\n\t\tl = strlen(s);\n\t\ts[l]='a';\n\t\tfor(i=l-1;i>=0;i--)\n\t\t{\n\t\t\tif(s[i+1]=='a'){\n\t\t\t\tb = b*2%Lim;\n\t\t\t}\n\t\t\tif(s[i]=='b'){\n\t\t\t\tb = (b+1)%Lim;\n\t\t\t}\n\t\t\t\n\t\t\tif(s[i]=='a')\t\n\t\t\t\tsum= (sum+b)%Lim;\n\t\t\t//printf(\"%I64d,%I64d,%d\\n\",sum,b,i);\n\t\t}\n\t\tprintf(\"%I64d\\n\",sum);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.4130879345603272, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "67051e4a65c847c29d34f415a1a0f439", "bug_code_uid": "3660b8004c6a5c53db6b4aa2e3102150", "src_uid": "046900001c7326fc8d890a22fa7267c9", "apr_id": "e36da673b17823f1c996447662cdba96", "difficulty": 900, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char s[102];\n    int t,n,i,p=0,q=0,k=0;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        p=0;\n        q=0;\n        k=0;\n        scanf(\"%s\", s);\n        k=strlen(s);\n        if(k%2==1)\n        {\n            k=k+1;\n        }\n        p=k/2;\n        if(p%2==1)\n        {\n            printf(\"DA\\n\");\n        }\n        else{\n            printf(\"NET\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,a;\n    char str[101];\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%s\", str);\n        int l=strlen(str);\n        int a=0,b=0;\n        for(int j=0;j<l;j++)\n        {\n            if(str[j]=='1')\n            {\n                a++;\n            }\n            if(str[j]=='0')\n               {\n                   b++;\n               }\n        }\n        if(((a%2!=0) && (b%2!=0)) || ((a%2==0) && (b%2!=0)&&a>b)||((b%2==0)&& (a%2!=0)&&a<b))\n           printf(\"DA\\n\");\n    else{\n        printf(\"NET\\n\");\n    }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.779783393501805, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0391307b92747d74ddadfa8cdc1b4a8d", "bug_code_uid": "beafab07a999d18b410d3a59cf9d6b57", "src_uid": "0924971933265f4be34710149a541087", "apr_id": "b2eac35e12325f138eb9a40d75e69baf", "difficulty": 1300, "tags": ["binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint c[500050];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a,b,i;\n\twhile(n--)\n\t{\n\t\tint sum=0;\n\t\tint maxn=0;\n\t\tint flag=0;\n\t\tint flag1=0;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tfor(i=1;i<=a;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&c[i]);\n\t\t\tsum+=c[i];\n\t\t}\n\t\tif(sum<=b)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum=0;\n\t\t\tfor(i=1;i<=a;i++)\n\t\t\t{\n\t\t\t\tsum+=c[i];\n\t\t\t\tif(c[i]>maxn)\n\t\t\t\t{\n\t\t\t\t\tflag1=flag;\n\t\t\t\t\tflag=i;\n\t\t\t\t\tsum=sum+maxn-c[i];\n\t\t\t\t\tmaxn=c[i];\n\t\t\t\t}\n\t\t\t\tif(sum>b)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(flag1==0)\n\t\t\t\tprintf(\"%d\\n\",flag);\n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\",flag1);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint c[500050];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a,b,i;\n\twhile(n--)\n\t{\n\t\tmemset(c,0,sizeof(c));\n\t\tlong long int sum=0;\n\t\tint maxn=0;\n\t\tint flag=0;\n\t\tint flag1=0;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tfor(i=1;i<=a;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&c[i]);\n\t\t\tsum+=c[i];\n\t\t}\n\t\tif(sum<=b)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum=0;\n\t\t\tfor(i=1;i<=a;i++)\n\t\t\t{\n\t\t\t\tsum+=c[i];\n\t\t\t\tif(maxn<c[i])\n\t\t\t\t{\n\t\t\t\t\tflag=i;\n\t\t\t\t\tmaxn=c[i];\n\t\t\t\t}\n\t\t\t\tif(sum>b)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",flag);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6037735849056604, "equal_cnt": 29, "replace_cnt": 11, "delete_cnt": 11, "insert_cnt": 7, "fix_ops_cnt": 29, "lang": "GNU C11", "fix_code_uid": "5788a106724513778245b10d33d9f78a", "bug_code_uid": "f14d2ca805f88917b56303f725e70c15", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "503de65de59fc696f175f8ce81322789", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int tcase;\n    scanf(\"%d\",&tcase);\n    for(int i=1; i<=tcase; i++)\n    {\n        long long n;\n        int c =0;\n        scanf(\"%lld\",&n);\n        if(n == 2)\n        {\n        printf(\"NO\\n\");\n        }\n        else if(n % 2 != 0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            while(n > 1)\n            {\n                n = n/2;\n                if(n % 2 != 0 && n != 1)\n                {\n                    printf(\"YES\\n\");\n                    break;\n            c = 1;\n                }\n            }\n            if(c == 0)\n            {\n            printf(\"NO\\n\");\n            }\n        }\n    }\n    return 0;\n}\n  \t\t \t\t \t\t \t \t \t  \t   \t\t \t \t  \t", "fixed": "#include <stdio.h>\n#include <stdint.h>\nvoid main()\n{\n    uint64_t t, n;\n    int odd=0;\n    scanf(\"%lld\", &t);\n    while (t--)\n    {\n        odd=0;\n        scanf(\"%lld\", &n);\n        if(n%2!=0)\n        {\n            odd=1;\n            printf(\"YES\\n\");\n        }\n        else\n        {\n        while(n!=0)\n        {\n            n/=2;\n            if(n%2!=0 && n!=1)\n            {\n            odd=1;\n            printf(\"YES\\n\");\n            break;\n            }\n        }}\n        if(odd!=1)\n            printf(\"NO\\n\");\n    }\n}\n  \t\t \t  \t \t \t\t  \t\t\t \t\t \t \t\t\t \t\t"}
{"similarity_score": 0.7309941520467836, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5ede80478248017e83ae7032ddecefa8", "bug_code_uid": "97ab5bf4d4bd9ab7b695c2e91503c1ce", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "c77a6c68a07cb3f0dd6c2fd5b157046e", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    long long a,b;\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&a,&b);\n        if(a==0||b==0)\n            printf(\"0\\n\");\n        else\n            printf(\"%lld\\n\",(a+b)/3);\n    }\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    long long a,b;\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&a,&b);\n        if(a==0||b==0)\n            printf(\"0\\n\");\n        else\n\n        {\n            long long c=(a+b)/3;\n            long long min=(a<b)?a:b;\n            if(c<min)\n                printf(\"%lld\\n\",c);\n            else\n                printf(\"%lld\\n\",min);\n        }\n    }\n     return 0;\n}\n"}
{"similarity_score": 0.6191536748329621, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "1db1bbb1707b4006f10b2e5496fa776f", "bug_code_uid": "939da2ffd961e84096d79728ceaef478", "src_uid": "cd2519f4a7888b2c292f05c64a9db13a", "apr_id": "93c355fb286a0dc506e31ac145b2f680", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,i,n,count=0,y=0,f,count1=0;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n         int g=n;\n            while(g>0)\n          {f=g%10;\n            if(f==0)\n                {y++;\n                g=g/10;\n            }\n            else\n            {   float c=pow(10,y);\n                printf(\"%0.f \",(f*c));\n            y++;\n            count1++;\n            g=g/10;}\n          }\n        printf(\"\\n%d\",count1);\n        count1=0;\n        y=0;\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,i,n,count=0,y=0,f,z=0,b;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n         int g=n;\n         int x=n;\n         while(x>0)\n          {b=x%10;\n            if(b==0)\n                {z++;\n                x=x/10;\n            }\n            else\n            {   float aa=pow(10,z);\n\n            z++;\n            count++;\n            x=x/10;}\n          }\n            printf(\"%d\\n\",count);\n            z=0;\n            while(g>0)\n          {f=g%10;\n            if(f==0)\n                {y++;\n                g=g/10;\n            }\n            else\n            {   float c=pow(10,y);\n                printf(\"%0.f \",(f*c));\n            y++;\n            g=g/10;}\n          }\n          printf(\"\\n\");\n            count=0;\n        y=0;\n    }\n}\n"}
{"similarity_score": 0.9938271604938271, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "12d97eba15136edf13eec7ec449c55c6", "bug_code_uid": "36c2d2f2abe01de741fc890b98e47a44", "src_uid": "d9ba1dfe11cf3dae177f8898f3abeefd", "apr_id": "b59dc0e29add7976a0cd8920b72d8e11", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int n;\n  scanf(\"%d\",&n);printf(\" %d\",n);int i;\n  for(i=0;i<n-1;i++) \n  {\n    printf(\" \uff05d\",i+1);\n  }\n  printf(\"\\n\");\n  return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n  int n;\n  scanf(\"%d\",&n);printf(\" %d\",n);int i;\n  for(i=0;i<n-1;i++) \n  {\n    printf(\" %d\",i+1);\n  }\n  printf(\"\\n\");\n  return 0;\n}"}
{"similarity_score": 0.9970501474926253, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b91bc0c00dd40827e93e76bb887e2d4", "bug_code_uid": "bbf6428a730bdc5d48af227112d025d6", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "9e842744ef5b6bea56b2bba4802b9030", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\n int ng,ne,i,j,c,f;\n char t[102];\n scanf(\"%d\",&ng);\n for(i=0;i<ng;i++){\n\t scanf(\"%d\",&ne);\n\t scanf(\"%s\",t);\n\t f=0;\n\t c=-1;\n\t for(j=0;j<ne;j++){\n\t\t if(t[j]=='A'){\n\t\t\t c=0;}\t\t   \n\t\t else if(c>=0){\n\t\t\t c++;}\n\t\t if(c>f){\n\t\t\t f=c;}\n\t\t \t \n\t\t\t \n\t\t }\n\t\t printf(\"%d\",f);\n\t }\n\t return 0;}\n\t \n\t\t\t \n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\n int ng,ne,i,j,c,f;\n char t[102];\n scanf(\"%d\",&ng);\n for(i=0;i<ng;i++){\n\t scanf(\"%d\",&ne);\n\t scanf(\"%s\",t);\n\t f=0;\n\t c=-1;\n\t for(j=0;j<ne;j++){\n\t\t if(t[j]=='A'){\n\t\t\t c=0;}\t\t   \n\t\t else if(c>=0){\n\t\t\t c++;}\n\t\t if(c>f){\n\t\t\t f=c;}\n\t\t \t \n\t\t\t \n\t\t }\n\t\t printf(\"%d\\n\",f);\n\t }\n\t return 0;}\n\t \n\t\t\t \n"}
{"similarity_score": 0.3133493205435651, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "3c27101b347bcf2f58793cad9f7d5258", "bug_code_uid": "e78f1a590e7d61fc78daf6f8db9d6f74", "src_uid": "7d6f76e24fe9a352beea820ab56f03b6", "apr_id": "9bd468a1878244acaaa0b69633bcea8e", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long n,k,count,i,pro;\n    int t,dif;\n    scanf(\"%d\",&t);\n    while(t--){\n        count = 0;\n        scanf(\"%lld %lld\",&n,&k);\n        if(n==2){\n            printf(\"%lld\\n\",k*2 -1);\n        }\n        else{\n        for(i=1; ;i++){\n            pro = i*n;\n            count += n - 1;\n            if(count == k){\n                printf(\"%lld\\n\",pro-1);\n                break;\n            }\n            if(count>k){\n                dif = k - (count - (n-1));\n                pro = dif + (n*(i-1));\n                printf(\"%lld\\n\",pro);\n                break;\n            }\n        }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,t,n,k,limit_of_multipliction,left_number,number_of_times,numbers,kth;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d %d\",&n,&k);\n        if(n>k){\n            printf(\"%d\\n\",k);\n            continue;\n        }\n        number_of_times = k/(n-1);\n        limit_of_multipliction = number_of_times * n;\n        numbers = (n-1)*number_of_times;\n        left_number = k - numbers;\n        if(left_number == 0){\n            left_number = -1;\n        }\n        kth = limit_of_multipliction + left_number;\n        printf(\"%d\\n\",kth);\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9773299748110831, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a9c45485b51d87c4bf65aeeba8c4135b", "bug_code_uid": "924506c9944a4279e5b2ffbd4677df93", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "8aa4ef668d6721067db84ccc25ecebee", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n, a[2]={0, 0};\n    scanf(\"%d\\n\", &n);\n    while(n--)\n        a[_getchar_nolock()-'0']+=1;\n    printf(\"%d\\n\", abs(a[1]-a[0]));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n, a[2]={0, 0};\n    scanf(\"%d\\n\", &n);\n    while(n--)\n        a[getchar()-'0']+=1;\n    printf(\"%d\\n\", abs(a[1]-a[0]));\n    return 0;\n}"}
{"similarity_score": 0.20080321285140562, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "27beb76f04622337058f2323fd7ab605", "bug_code_uid": "d6184715db673d61847044c9e18c7260", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "80acf7a88c6572de22ab60c17b56227d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,s[100],i,cnt=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&s[i]);\n    }\n    for(i=0;i<n-1;i++){\n        if(s[i]!=s[i+1])\n            cnt++;\n    }\n    printf(\"%d\",cnt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,i,cnt=0;\n    scanf(\"%d\",&n);\n    int s[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&s[i]);\n    }\n    for(i=0;i<n;i++){\n        if(s[i]!=s[i+1])\n            cnt++;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}"}
{"similarity_score": 0.99375, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e1ac4a98a9d681e868c644fe7905c828", "bug_code_uid": "044a5cd5f825b83cc915dd8a5ffb25a1", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "dd26191363d79271dd94d3d470681873", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int t, a,b;\n  scanf(\"%d\", &t);\nwhile(t--)\n {\n      scanf(\"%d %d\",&a, &b);\n      printf(\"%d\\n\"a+b);\n     \n    \n }\n return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int t, a,b;\n  scanf(\"%d\", &t);\nwhile(t--)\n {\n      scanf(\"%d %d\",&a, &b);\n      printf(\"%d\\n\", a+b);\n     \n    \n }\n return 0;\n}\n"}
{"similarity_score": 0.21367521367521367, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b46bd107aa16fee7afa6a55374cceaaa", "bug_code_uid": "b385849d5aeb377a87daf6001a21de81", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "433463081966272a57acd25aa7b13bc8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\n    double n,c[1000000];\n    scanf(\"%lf\",&n);\n    for(int i=0;i<n;i++){\n        scanf(\"%lf\",&c[i]);\n    }\n    for(int i=0;i<n;i++){\n        printf(\"%.0lf %.0lf\\n\",-c[i]+1,c[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    long long t,n,m;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        printf(\"%lld %lld\\n\",-(n-1),n);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7684659090909091, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "da5045e96bceafca6eb102a3cec76701", "bug_code_uid": "ad7324c3e6a8a81d7a11029c9110ba40", "src_uid": "586a15030f4830c68f2ea1446e80028c", "apr_id": "fc0ee13eba453972df5fde118262369b", "difficulty": 1000, "tags": ["two pointers", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int a[26];\n    char s[600];\n    int n,i,j;\n    scanf(\"%d\",&n);\n    while(n--){\n        j=0;\n        for(i=0;i<26;i++){\n            a[i]=0;\n        }\n        scanf(\"%s\",s);\n        for(i=0;i<strlen(s)-1;i++){\n            if(s[i]!=s[i+1]){\n                a[s[i]-97]++;\n            }\n            else{\n                i++;\n            }\n        }\n            if(s[strlen(s)-2]!=s[strlen(s)-1]){\n                a[s[strlen(s)-1]-97]++;\n            }\n        for(i=0;i<26;i++){\n            if(a[i]!=0){\n                j++;\n            }\n        }\n        if(j>0){\n            for(i=0;i<26;i++){\n                if(a[i]!=0){\n                    printf(\"%c\",i+97);\n                }\n            }\n            printf(\"\\n\");\n        }\n        else{\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int a[26];\n    char s[600];\n    int n,i,j;\n    scanf(\"%d\",&n);\n    while(n--){\n        j=0;\n        for(i=0;i<26;i++){\n            a[i]=0;\n        }\n        scanf(\"%s\",s);\n        for(i=0;i<strlen(s);i++){\n            if(s[i]!=s[i+1]){\n                a[s[i]-97]++;\n            }\n            else{\n                i++;\n            }\n        }\n        for(i=0;i<26;i++){\n            if(a[i]!=0){\n                printf(\"%c\",i+97);\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9839307787391842, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "db89dda92b015a88e2463af11ff96ab7", "bug_code_uid": "e8ebe9087352f1ad62c6bd3228dde7cb", "src_uid": "f60ea0f2caaec16894e84ba87f90c061", "apr_id": "213a75159cb974e43d6b6035fbe84087", "difficulty": 1500, "tags": ["constructive algorithms", "number theory", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <cstdio>\n\nint main(){\n    // Declarar variables\n    int n, x, y, z;\n    // Escanear n\n    scanf(\"%d\", &n);\n    // Aplicar l\u00f3gica de las fracciones egipcias\n    x = n;\n    y = n + 1;\n    z = n*(n + 1);\n    // Si el input es 1 no se puede hacer \n    if(n == 1){\n        printf(\"-1\");\n    }\n    // Si no es 1 imprimir los n\u00fameros\n    else{\n        printf(\"%d %d %d\", x, y, z);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    // Declarar variables\n    int n, x, y, z;\n    // Escanear n\n    scanf(\"%d\", &n);\n    // Aplicar l\u00f3gica de las fracciones egipcias\n    x = n;\n    y = n + 1;\n    z = n*(n + 1);\n    // Si el input es 1 no se puede hacer \n    if(n == 1){\n        printf(\"-1\");\n    }\n    // Si no es 1 imprimir los n\u00fameros\n    else{\n        printf(\"%d %d %d\", x, y, z);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9888641425389755, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e6428987efdbdb249b567468558c8d4e", "bug_code_uid": "3f58a6725265ec4cbdcf9277fed84088", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "e0acf7b373b6ecd6e771822c8ebffac9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int i,j,k,z,flag=0,flag1=0,cost=0,a,b,n;\n    int q;\n    scanf(\"%d\",&q);\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%lld %lld %lld\",&n,&a,&b); \n        if((b<a) || (a*2>b))\n        {\n            flag=n/2;\n            flag1=n%2;\n            cost = flag*b + flag1*a;\n       \n        }\n        else\n        {\n            flag = n*a;\n\n        }\n        \n        printf(\"%lld \\n\",cost);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n \nint main()\n{\n    long long int i,j,k,z,flag=0,flag1=0,cost=0,a,b,n;\n    int q;\n    scanf(\"%d\",&q);\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%lld %lld %lld\",&n,&a,&b); \n        if((b<a) || (a*2>b))\n        {\n            flag=n/2;\n            flag1=n%2;\n            cost = flag*b + flag1*a;\n       \n        }\n        else\n        {\n            cost = n*a;\n \n        }\n        \n        printf(\"%lld \\n\",cost);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9769392033542977, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "942e12d8297552cb2be2cc0ff8ea7ef8", "bug_code_uid": "f857372185efd501f0e8ef36a74d5e22", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "0c30be970d9fd7097d86d14ad951e9d5", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[200],b[200];\n\tint i,j=0,k,l,c,d,sum,flag;\n\t//printf(\"enter the number of elements of a:\\n\");\n\tscanf(\"%d\",&c);\n\tfor(i=0;i<c;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t//printf(\"enter the number of elements of b:\\n\");\n\tscanf(\"%d\",&d);\n\tfor(i=0;i<d;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tint total=c+d;\n\tint arr[total];\n\tfor(i=0;i<c;i++)\n\t{\n\t\tarr[i]=a[i];\n\t}\n\t\twhile(i<total)\n\t{\n\t\tarr[i]=b[j];\n\t\ti++;\n\t\tj++;\n\t}\n\tfor(i=0;i<c;i++)\n\t{\n\t\tfor(j=0;j<d;j++)\n\t\t{\n\t\t\tflag=0;\n\t\t\tsum=0;\n\t\t\tsum=a[i]+b[j];\n\t\t\tfor(k=0;k<total;k++)\n\t\t\t{\n\t\t\t\tif(sum==arr[k])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\",a[i],b[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[200],b[200],p=0;\n\tint i,j=0,k,l,c,d,sum,flag;\n\t//printf(\"enter the number of elements of a:\\n\");\n\tscanf(\"%d\",&c);\n\tfor(i=0;i<c;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t//printf(\"enter the number of elements of b:\\n\");\n\tscanf(\"%d\",&d);\n\tfor(i=0;i<d;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tint total=c+d;\n\tint arr[total];\n\tfor(i=0;i<c;i++)\n\t{\n\t\tarr[i]=a[i];\n\t}\n\t\twhile(i<total)\n\t{\n\t\tarr[i]=b[j];\n\t\ti++;\n\t\tj++;\n\t}\n\tfor(i=0;i<c;i++)\n\t{\n\t\tfor(j=0;j<d;j++)\n\t\t{\n\t\t\tflag=0;\n\t\t\tsum=0;\n\t\t\tsum=a[i]+b[j];\n\t\t\tfor(k=0;k<total;k++)\n\t\t\t{\n\t\t\t\tif(sum==arr[k])\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\",a[i],b[j]);\n\t\t\t\tp=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(p==1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3868312757201646, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "c403846d3a3fef9679c3e8c51c9556ff", "bug_code_uid": "01dea34a7a2da9c3721217c73533ea16", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "3ab46d3be29cfb59387d90974af95af2", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int m, a, b, i, temp = 1000000;\n    scanf(\"%d%d%d\", &m, &a, &b);\n    char s[n + 1];\n    scanf(\"%s\", s);\n\n    for(i = 0; i < m; i++) {\n        if((s[i] == s[b - 1]) && (abs(i - (a - 1)) < temp)) {\n            temp = abs(i - (a - 1));\n        }\n    }\n    for(i = 0; i < m; i++) {\n        if((s[i] == s[a - 1]) && abs(i - (b - 1)) < temp) {\n            temp = abs(i - (b - 1));\n        }\n    }\n    printf(\"%d\\n\", temp);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, a, b;\n    scanf(\"%d%d%d\", &n, &a, &b);\n    char s[n + 1];\n    scanf(\"%s\", s);\n\n    if(s[a - 1] == s[b - 1]) {\n        printf(\"0\\n\");\n    }\n    else {\n        printf(\"1\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8132716049382716, "equal_cnt": 34, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 30, "fix_ops_cnt": 33, "lang": "GNU C11", "fix_code_uid": "39a1cb5c5676fd27776da99f44aab1f7", "bug_code_uid": "4c09b6c2bf25470a7902afb9d649fd0a", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "480907dcade9b2280e660fc1d48c7d9b", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main(void)\r\n{\r\n  long int p;\r\n  int t,i;\r\n  long int c[1000],d[1000];\r\n  scanf(\"%d\",&t);\r\n  for(i=0;i<t;i++)\r\n  {\r\n    scanf(\"%ld\",&p);\r\n    long int a,b;\r\n    a= sqrt(p);\r\n    printf(\"%ld\\n\",a);\r\n    b=a+1;\r\n    while(1)\r\n    {\r\n    if((p%a)!=(p%b))\r\n    {\r\n     if(a>2)\r\n     {\r\n         a=a-1;\r\n     }\r\n      else if(a==2)\r\n      {\r\n          b=b+1;\r\n      }\r\n      if(((p%a)==(p%b))) break;\r\n\r\n  }\r\n    }\r\n  c[i]=a;\r\n  d[i]=b;\r\n  }\r\n  for(i=0;i<t;i++)\r\n  {\r\n    printf(\"%ld %ld\\n\",c[i],d[i]);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main(void)\r\n{\r\n    long int p;\r\n    int t,i;\r\n    long int c[1000],d[1000];\r\n    scanf(\"%d\",&t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%ld\",&p);\r\n        long int a,b;\r\n        a= sqrt(p);\r\n        b=a+1;\r\n        if((p%a)!=(p%b))\r\n        {\r\n            while(1)\r\n            {\r\n                if(a>2)\r\n                {\r\n                    a=a-1;\r\n                }\r\n                else if(a==2)\r\n                {\r\n                    b=b+1;\r\n                }\r\n                if(((p%a)==(p%b))) break;\r\n            }\r\n        }\r\n\r\n        c[i]=a;\r\n        d[i]=b;\r\n\r\n    }\r\n    for(i=0; i<t; i++)\r\n    {\r\n        printf(\"%ld %ld\\n\",c[i],d[i]);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9934296977660972, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a6b060e110a61a1ea5a5923372a17bbe", "bug_code_uid": "6fd6a00c30c143624821226d1d3a3776", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "be75361da70c919b8492e46acefeafad", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        {\n            if(i%2)\n                printf(\"I hate \");\n            else{\n                printf(\"I Love \");\n            }\n            if(i==n){\n                printf(\"it\\n\");\n            }\n            else{\n                printf(\"that\");\n            }\n\n        }\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        {\n            if(i%2){\n                printf(\"I hate \");}\n            else{\n                printf(\"I love \");\n            }\n            if(i==n){\n                printf(\"it\\n\");\n            }\n            else{\n                printf(\"that \");\n            }\n\n        }\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.9978354978354979, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "48e59b095340bbdf5ccada956bf0538b", "bug_code_uid": "732ef3d127a5f5580f1e85b30fcba6c4", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "a57f9bec06cd789665e24ed69a7e8cef", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,c=0,j,x,y;\n    scanf(\"%d\",&n);\n    char a[n];\n    scanf(\"%s\",&a);\n    for(i=1;i<n;i++)\n    {\n        if(a[i]!=a[0])\n        {\n          c=1;\n          break;\n        }\n    }\n    if(c==1)\n    {\n        for(i=1;i<n;i++)\n        printf(\"%c\",a[i]);\n    }\n    else\n    {\n        for(i=0;i<n-1;i++)\n\t\t{\n\t\t\tx=a[i],y=a[i+1];\n\t\t\tif(x>y)\n\t\t\t{\n\t\t\tbreak;\n\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\tif(j!=i)\n\t\tprintf(\"%c\",a[j]);\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,c=0,j,x,y;\n    scanf(\"%d\",&n);\n    char a[n];\n    scanf(\"%s\",&a);\n    for(i=1;i<n;i++)\n    {\n        if(a[i]!=a[0])\n        {\n          c=1;\n          break;\n        }\n    }\n    if(c==0)\n    {\n        for(i=1;i<n;i++)\n        printf(\"%c\",a[i]);\n    }\n    else\n    {\n        for(i=0;i<n-1;i++)\n\t\t{\n\t\t\tx=a[i],y=a[i+1];\n\t\t\tif(x>y)\n\t\t\t{\n\t\t\tbreak;\n\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\tif(j!=i)\n\t\tprintf(\"%c\",a[j]);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.437636761487965, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "29ecf2a8235dbcf9a3b44a12061c348c", "bug_code_uid": "3180fbf80fc020b9f2c856a81d573b37", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "54b1331130ca46279bed4b18521d76c2", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\nint main(void)\n{\n    int q,a,b,n,s;\n    scanf (\"%d\",&q);\n    for (size_t i = 0; i < q; i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&n,&s);\n\n        if (s-n*a<=b)\n        {\n            printf(\"yes\\n\");\n        }\n        if (s-n*a>b)\n        {\n            printf(\"no\\n\");\n        }\n        else\n        {\n            for (size_t j = 0; j < a+1; j++)\n            {\n                if (s-n*j<n)\n                {\n                    if (s-n*j<=b)\n                    {\n                        printf(\"yes\\n\");\n                        break;\n                    }\n                    else\n                    {\n                        printf(\"no\\n\");\n                        break;\n                    }\n                }\n                    \n            }\n        }\n        \n        \n    }\n    system(\"pause\");\n    return 0;\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\nint main(void)\n{\n    int q,a,b,n,s,c;\n    scanf(\"%d\",&q);\n    for (size_t i = 0; i < q; i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&n,&s);\n        int f=s/n;\n        if (f>=a)\n        {\n            c=a;\n        }\n        else\n        {\n            c=f;\n        }\n        \n        if (c*n+b>=s)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9442198868229588, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "68d371f0c9d4c4b93686b6c44527bfd2", "bug_code_uid": "f3dc8b711354b73974d7f329aa403aea", "src_uid": "d43d4fd6c1e2722da185f34d902ace97", "apr_id": "475d7cdb619690f4801aa5dda6693c25", "difficulty": 1600, "tags": ["data structures", "constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\nint deltas[2*100*1000 + 5];\n\nint main(void) {\n\tsize_t length = 1, n;\n\tlong int sum = 0;\n\tdeltas[0] = 0;\n\tscanf(\"%zu\", &n);\n\twhile (n--) {\n\t\tint code;\n\t\tint j, x;\n\t\tscanf(\"%d\", &code);\n\t\tswitch(code) {\n\t\t\tcase 1:\n\t\t\t\tscanf(\"%d%d\", &j, &x);\n\t\t\t\tdeltas[j-1] += x;\n\t\t\t\tsum += x * j;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\tdeltas[length-1] -= x;\n\t\t\t\tdeltas[length] += x;\n\t\t\t\tlength += 1;\n\t\t\t\tsum += x;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tlength -= 1;\n\t\t\t\tdeltas[length-1] += deltas[length];\n\t\t\t\tsum -= deltas[length];\n\t\t\t\tbreak;\n\t\t};\n\t\tprintf(\"%f\\n\", ((double)sum) / length);\n\t};\n\treturn 0;\n};\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\nint deltas[2*100*1000 + 5];\n\nint main(void) {\n\tint length = 1, n;\n\tdouble sum = 0;\n\tdeltas[0] = 0;\n\tscanf(\"%d\", &n);\n\twhile (n--) {\n\t\tint code;\n\t\tint j, x;\n\t\tscanf(\"%d\", &code);\n\t\tswitch(code) {\n\t\t\tcase 1:\n\t\t\t\tscanf(\"%d%d\", &j, &x);\n\t\t\t\tdeltas[j-1] += x;\n\t\t\t\tsum += x * j;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\tdeltas[length-1] -= x;\n\t\t\t\tdeltas[length] = x;\n\t\t\t\tlength += 1;\n\t\t\t\tsum += x;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tlength -= 1;\n\t\t\t\tdeltas[length-1] += deltas[length];\n\t\t\t\tsum -= deltas[length];\n\t\t\t\tbreak;\n\t\t};\n\t\tprintf(\"%f\\n\", sum / length);\n\t};\n\treturn 0;\n};\n"}
{"similarity_score": 0.9897854954034729, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "86ed883d15e9f7b13ec25e94c50f8310", "bug_code_uid": "ee90084ab0523b0d2d7fe814127edb50", "src_uid": "8b926a19f380a56018308668c17c6928", "apr_id": "4b88d54ca9b01a9230d8e1337408834b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n\r\nint main()\r\n{   long int a,b=0,c=0;\r\n    int n,x,i,j,temp,count;\r\n\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%ld\",&x);\r\n       while(x--)\r\n       {\r\n           scanf(\"%ld\",&a);\r\n           if(a>b)\r\n           {\r\n               c=b;\r\n               b=a;\r\n           }\r\n           else if(a>c)\r\n            c=a;\r\n       }\r\n       /*if(x>1)\r\n       {\r\n        for(i=0;i<x;i++)\r\n        {\r\n            for(j=i+1;j<x;j++)\r\n            {\r\n                if(a[j]>a[i])\r\n                {\r\n                    temp=a[j];\r\n                    a[j]=a[i];\r\n                    a[i]=temp;\r\n                }\r\n\r\n\r\n            }\r\n            count=count+1;\r\n                if(count==2)\r\n                {\r\n                    a[0]=a[0]-a[1];\r\n                    printf(\"%ld\\n\",a[0]);\r\n                    break;\r\n                }\r\n        }}*/c=b-c;\r\n        if(c>1)\r\n            printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n\r\n\r\nint main()\r\n{   long int a,b=0,c=0;\r\n    int n,x,i,j,temp,count;\r\n\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%ld\",&x);\r\n       while(x--)\r\n       {\r\n           scanf(\"%ld\",&a);\r\n           if(a>b)\r\n           {\r\n               c=b;\r\n               b=a;\r\n           }\r\n           else if(a>c)\r\n            c=a;\r\n       }\r\n       /*if(x>1)\r\n       {\r\n        for(i=0;i<x;i++)\r\n        {\r\n            for(j=i+1;j<x;j++)\r\n            {\r\n                if(a[j]>a[i])\r\n                {\r\n                    temp=a[j];\r\n                    a[j]=a[i];\r\n                    a[i]=temp;\r\n                }\r\n\r\n\r\n            }\r\n            count=count+1;\r\n                if(count==2)\r\n                {\r\n                    a[0]=a[0]-a[1];\r\n                    printf(\"%ld\\n\",a[0]);\r\n                    break;\r\n                }\r\n        }}*/c=b-c;\r\n        if(c>1)\r\n            printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n        b=0;c=0;\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.5151515151515151, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "c8e2bdfd81b10fe489af1970e72b71db", "bug_code_uid": "8e3946d6d945657b07bd496b47b44c9a", "src_uid": "c9e9b82185481951911db3af72fd04e7", "apr_id": "cff1f730a713abdd552e6fc31b004f84", "difficulty": 1500, "tags": ["implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar a[1002][34],b[34];\nstatic int point[1002];\n\nint main(){\n\tint n,u=1,x;\n\tscanf(\"%d\",&n);\n\tn-=1;\n\tscanf(\"%s%d\",&a[0],&point[0]);\n\tint max=0;\n\twhile(n--){\n\t\tscanf(\"%s%d\",&b,&x);\n\t\tint i=0;\t\n\t\tfor(;i<u;i++){\n\t\t\tif(strcmp(a[i],b)==0) break;\n\t\t}\n\t\tif(i==u){\n\t\t\tstrcpy(a[u],b);\n\t\t\tu++;\n\t\t}\n\t\tpoint[i]+=x;\n\t\tif(point[i]>point[max]) max=i;\n\t}\n\tprintf(\"%s\",a[max]);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar a[1002][34],b[34];\nint point[1002],res[1002],h[1002];\n\nint main(){\n\tint n,x,i,j,u=1;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s%d\",&a[0],&x);\n\tpoint[0]+=x;\n\th[0]=point[0];\n\tres[0]=0;\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%s%d\",&b,&x);\n\t\tfor(j=0;j<u;j++){\n\t\t\tif(strcmp(a[j],b)==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i==u){\n\t\t\tstrcpy(a[u],b);\n\t\t\tu++;\n\t\t}\n\t\tpoint[j]+=x;\n\t\th[i]=point[j];\n\t\tres[i]=j;\n\t}\n\tint max=point[0];\n\tfor(i=1;i<u;i++){\n\t\tif(point[i]>max) max=point[i];\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(point[res[i]]==max&&h[i]>=max) break;\n\t}\n\tprintf(\"%s\",a[res[i]]);\n}\n"}
{"similarity_score": 0.424390243902439, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "2cb9cea27f463fe99727f645c2794e1b", "bug_code_uid": "492ae1b2842bacfe298678455b87c98d", "src_uid": "b267f69cc4af3e319fc59e3ccd8b1c9d", "apr_id": "c5ff685831fb863a30a9a64942f3591f", "difficulty": 1500, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,x,i,y,d=0,sum=0,k=1;\n    scanf(\"%d %d %d\",&n,&x,&y);\n    char a[n+1];\n    scanf(\"%s\",a);\n    for(i=0;i<n;i++){\n        if(a[i]=='0' && k==1){\n            k=0;\n            d++;\n        }\n        else if(a[i]=='0' && k==0)\n            continue;\n        if(a[i]=='1')\n            k=1;\n    }\n    if(x<y && d>1)\n        sum=(d-1)*x+y;\n    else\n        sum= d*y;\n    printf(\"%d\",sum);\n\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,i,k=1;\n    long long int x,y,d=0,sum=0;\n    scanf(\"%d %I64d %I64d\",&n,&x,&y);\n    char a[n+1];\n    scanf(\"%s\",a);\n    for(i=0;a[i]!=0;i++){\n        if(a[i]=='0' && k==1){\n            k=0;\n            d++;\n        }\n        if(a[i]=='1')\n            k=1;\n    }\n    if(x<y && d>1)\n        sum=(d-1)*x+y;\n    else\n        sum= d*y;\n    printf(\"%I64d\",sum);\n\n}\n"}
{"similarity_score": 0.998639455782313, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dc8a394f40eef86e88401e7652034191", "bug_code_uid": "5d311bf2aacc7ef090ae282b75ab7177", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "572a2039ddc7d6a571d3c3e71cf66a51", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n \r\nvoid main(){\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n], sum=0;\r\n        for(int i=0; i<n; i++){\r\n            scanf(\"%d\",&a[i]);\r\n            sum+=a[i];\r\n        }\r\n        if(sum%2!=0)\r\n            printf(\"No\\n\");\r\n        else{\r\n            int count=0, count2=0;\r\n            for(int i=0; i<n;i++){\r\n                if(a[i]==1)\r\n                    count++;\r\n                if(a[i]==2)\r\n                    count2++;\r\n            }\r\n            if(count%2!=0)\r\n                printf(\"No\\n\");\r\n            else if(count==0 && count2%2!=0)\r\n                printf(\"No\");\r\n            else\r\n                printf(\"Yes\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n \r\nvoid main(){\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n], sum=0;\r\n        for(int i=0; i<n; i++){\r\n            scanf(\"%d\",&a[i]);\r\n            sum+=a[i];\r\n        }\r\n        if(sum%2!=0)\r\n            printf(\"No\\n\");\r\n        else{\r\n            int count=0, count2=0;\r\n            for(int i=0; i<n;i++){\r\n                if(a[i]==1)\r\n                    count++;\r\n                if(a[i]==2)\r\n                    count2++;\r\n            }\r\n            if(count%2!=0)\r\n                printf(\"No\\n\");\r\n            else if(count==0 && count2%2!=0)\r\n                printf(\"No\\n\");\r\n            else\r\n                printf(\"Yes\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.871578947368421, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b7116d78e506d3f384e06fff86f8b064", "bug_code_uid": "d9f41fb2db610a886b25d712b982caa1", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "b9e34043f14d62aef9aceeba084c0cd8", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint i, j, k, l, x, y, z, n, t, ans, m, count;\nint ara[150];\nint main()\n{\n    scanf(\"%d\", &n);\n\n    for(i = 1; i <= n; i++){\n        for(j = 1; j <= n; j++){\n            scanf(\"%d\", &x);\n            if(x == 1 || x == 3){\n                ara[i] = 1;\n            }\n        }\n    }\n\n\n    for(i = 1; i <= n; i++){\n        if(ara[i] == 0){\n            y++;\n            printf(\"%d \", i);\n        }\n    }\n    if(y == 0) printf(\"0\");\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint i, j, k, l, x, y, z, n, t, ans, m, count;\nint ara[150];\nint main()\n{\n    scanf(\"%d\", &n);\n\n    for(i = 1; i <= n; i++){\n        for(j = 1; j <= n; j++){\n            scanf(\"%d\", &x);\n            if(x == 1 || x == 3){\n                ara[i] = 1;\n            }\n        }\n        if(ara[i] == 0) y++;\n    }\n\n    printf(\"%d\\n\", y);\n    for(i = 1; i <= n; i++){\n        if(ara[i] == 0){\n            y++;\n            printf(\"%d \", i);\n        }\n    }\n\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8294829482948295, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f3fe0f262d64162abca20952aebd09e0", "bug_code_uid": "23b5253f199f239b4311d87e2d998de0", "src_uid": "6854ad3597f9f41d475aacb774b823ed", "apr_id": "7b4e05c9178a9b59de83d1da8dccdcfa", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n\r\nint i,t,n,k,j,m;\r\nscanf(\"%d\", &t);\r\n\r\nfor(i=0;i<t;i++){\r\n    scanf(\"%d\", &n);\r\n    scanf(\"%d\", &k);\r\n    int a[n];\r\n    for(j=0;j<n;j++) scanf(\"%d\", &a[j]);\r\n    m=0;\r\n    for(j=0;j<k;j++){\r\n        if(a[m]==0) m++;\r\n        a[m]--;\r\n        a[n-1]++;\r\n    }\r\n    printf(\"\\n\");\r\n    for(j=0;j<n;j++) printf(\"%d  \",a[j]);\r\n    printf(\"\\n\");\r\n}\r\n\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n\r\nint i,t,n,k,j,m;\r\nscanf(\"%d\", &t);\r\n\r\nfor(i=0;i<t;i++){\r\n    scanf(\"%d\", &n);\r\n    scanf(\"%d\", &k);\r\n    int a[n];\r\n    for(j=0;j<n;j++) scanf(\"%d\", &a[j]);\r\n    m=0;\r\n    j=0;\r\n    while(j<k && m<n-1){\r\n        if(a[m]==0){\r\n            m++;\r\n            continue;\r\n        }\r\n        else{\r\n            a[m]--;\r\n            a[n-1]++;\r\n            j++;\r\n        }\r\n    }\r\n\r\n    printf(\"\\n\");\r\n    for(j=0;j<n;j++) printf(\"%d  \",a[j]);\r\n    printf(\"\\n\");\r\n}\r\n\r\nreturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9455006337135615, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "caa1222dc96b2212c6e88edb21a619c8", "bug_code_uid": "53d2b7e673c64b65209ee0f1cdcc91fa", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "67ad4f9aef7e39189729546ced3e547f", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmp(const void* a, const void* b)\n{\n\treturn(*(int*)a - *(int* )b);\n}\nint main()\n{\n\tint i,n,x,arr[1000000];\t\n\tlong long int ans=0;\t\n\tscanf(\"%d %d\",&n,&x);\n\tfor(i=0;i!=n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tqsort(arr,n,sizeof(arr[0]),cmp);\n\tfor(i=0;i!=n;i++)\n\t{\n\t\tans = ans + x*arr[i];\n\t\tif(x > 1)\n\t\t{\n\t\t\tx = x - 1;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint cmp(const void* a, const void* b)\n{\n\treturn(*(int*)a - *(int* )b);\n}\nint main()\n{\n\tint i,n,x;\n\tint arr[1000000];\t\n\tlong long int ans=0;\t\n\tscanf(\"%d %d\",&n,&x);\n\tfor(i=0;i!=n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tqsort(arr,n,sizeof(arr[0]),cmp);\n\tfor(i=0;i!=n;i++)\n\t{\n\t\tans = ans +(long long int)x*(long long int)arr[i];\n\t\tif(x > 1)\n\t\t{\n\t\t\tx = x - 1;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.07272727272727272, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "52bc693ac5ae87ef6ca67d21ccf1b172", "bug_code_uid": "75b625d07ef98cb8857067bf12a9480d", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "461c78292635350ee5199df1b4a8b129", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\nint t;\ncin>>t;\nfor(int i=0;i<t;i++)\n{int jumlah1=0,jumlah2=0;\nstring a;\ncin>>a;\njumlah1=a[0]+a[1]+a[2];\njumlah2=a[3]+a[4]+a[5];\nif(jumlah1==jumlah2)\ncout<<\"yes\"<<endl;\nelse\ncout<<\"no\"<<endl;\n}\n}\n   \t \t\t    \t\t  \t \t   \t\t     \t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\twhile(n--)\n\t{\n\t\tchar str[6];\n\t\tfor(int i=0;i<6;i++)\n\t\tstr[i]=getchar();\n\t\tgetchar();\n\t\tint a=str[0]+str[1]+str[2]-(3*'0'),b=str[3]+str[4]+str[5]-(3*'0');\n\t\tif(a==b)\n\t\tprintf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n}\n\t\t\t\t \t  \t \t  \t\t \t\t\t  \t\t\t      \t"}
{"similarity_score": 0.45517241379310347, "equal_cnt": 33, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 13, "fix_ops_cnt": 33, "lang": "GNU C11", "fix_code_uid": "94af556ec49aff948cfbf68f406999e5", "bug_code_uid": "ccfd71896aaed67cc092856ed342286e", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "3aa9171b416ea5ee8988d725d457f443", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int ans=0;\n    for(int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int str[n];\n        int val=0;\n        int ans=0;\n        for(int i=0; i<n; i++)\n        {\n            scanf(\"%d\",&str[i]);\n        }\n        int counter[200000]={0};\n        for(int i=0;i<n;i++){\n           counter[str[i]]++;\n        }\n        for(int i=0;i<n+1;i++){\n            if(counter[i]>=3){\n               ans=i;\n               break;\n            }\n        }\n        if(ans){\n            printf(\"%d\",ans);\n        }else{\n            printf(\"-1\");\n        }\n\n\n    }\n\n\n\n}\n\n\t\t\t\t  \t \t\t  \t  \t\t   \t  \t\t\t\t\t  \t", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    for (int a = 0; a < t; a++)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        int arr[n];\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &arr[i]);\n        }\n\n        int freq[n];\n        memset(freq, 0, sizeof(freq));\n\n        for (int i = 0; i < n; i++)\n        {\n            freq[arr[i] - 1]++;\n        }\n\n        int printed = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (freq[i] >= 3)\n            {\n                printf(\"%d\\n\", i + 1);\n                printed = 1;\n                break;\n            }\n        }\n\n        if (!printed)\n        {\n            printf(\"%d\\n\", -1);\n        }\n    }\n\n    return 0;\n}\n\t\t  \t\t\t \t\t \t\t\t  \t\t        \t   \t"}
{"similarity_score": 0.9985680190930788, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "591e80aba734c0afe5f6ae16e7cb4962", "bug_code_uid": "5dd729c350cd7bc090ff51f0a52489c2", "src_uid": "30ad5bdc019fcd8a4e642c90decca58f", "apr_id": "6833e122501870adb9f2bf4dc30c566a", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\n    int b[101][1001];\n    int n,a,i,j;\n\n    scanf(\"%d\",&n);\n    for(j=0;j<1001;j++)\n        for(i=0;i<101;i++)\n            b[i][j] = 0;\n\n    while(n--)\n    {\n        scanf(\"%d\",&a);\n        b[0][a]++;\n    }\n    n=0;\n    for(i=0;i<1001;i++)\n    {\n        if(b[0][i] >1 ) \n        {\n            j =1;\n            while(b[0][i] != 1)\n            {\n                b[j++][i]++;\n                b[0][i]--;\n            }\n        }\n    }\n    /*\n     for(i=0;i<101;i++)  \n    {\n        for(j=0;j<1001;j++)\n        {\n            if(b[i][j]>0) printf(\"%d \",b[i][j]);\n            \n        }\n        //if(b[i][j]>0) printf(\"\\n\");\n    }\n    */\n    int flag = 0;\n    for(i=0;i<101;i++)  \n    {\n        flag =0;\n        for(j=0;j<1001;j++)\n        {\n            if(b[i][j]>0)\n            {\n            // printf(\"i = %d  j = %d  n = %d\\n\",i,j,n++);\n             n++;\n             flag = 1 ;\n            }\n        }\n        if(flag == 1 )  n--;\n        //printf(\" $$$ %d\",n--);\n    }\n    \n    \n    printf(\"%d\",n);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n\n    int b[1001][1001];\n    int n,a,i,j;\n\n    scanf(\"%d\",&n);\n    for(j=0;j<1001;j++)\n        for(i=0;i<1001;i++)\n            b[i][j] = 0;\n\n    while(n--)\n    {\n        scanf(\"%d\",&a);\n        b[0][a]++;\n    }\n    n=0;\n    for(i=0;i<1001;i++)\n    {\n        if(b[0][i] >1 ) \n        {\n            j =1;\n            while(b[0][i] != 1)\n            {\n                b[j++][i]++;\n                b[0][i]--;\n            }\n        }\n    }\n    /*\n     for(i=0;i<101;i++)  \n    {\n        for(j=0;j<1001;j++)\n        {\n            if(b[i][j]>0) printf(\"%d \",b[i][j]);\n            \n        }\n        //if(b[i][j]>0) printf(\"\\n\");\n    }\n    */\n    int flag = 0;\n    for(i=0;i<1001;i++)  \n    {\n        flag =0;\n        for(j=0;j<1001;j++)\n        {\n            if(b[i][j]>0)\n            {\n            // printf(\"i = %d  j = %d  n = %d\\n\",i,j,n++);\n             n++;\n             flag = 1 ;\n            }\n        }\n        if(flag == 1 )  n--;\n        //printf(\" $$$ %d\",n--);\n    }\n    \n    \n    printf(\"%d\",n);\nreturn 0;\n}\n"}
{"similarity_score": 0.563984674329502, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "989e5a9f2072957d557c8564aed32404", "bug_code_uid": "c88ed70a41d0857261cc385f6e81cd62", "src_uid": "447c17cba953d6e2da50c242ac431ab4", "apr_id": "10d131d2ef9e93b38311e0efa819efc0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int i,t,a,b,r,x,m,s,fs,ts;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d %d\",&m,&s);\r\n        fs = 0;\r\n        while(m--){\r\n            scanf(\"%d\",&x);\r\n            fs = fs + x;\r\n        }\r\n        ts = fs + s;\r\n        r = 8*ts + 1;\r\n        a = floor(sqrt(r));\r\n        b = a*a;\r\n        if(r == b){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int i,t,r,sq,d,num,max,m,s,found_s,total_s,req_s,alt_s;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d %d\",&m,&s);\r\n        found_s = 0;\r\n        max = 0;\r\n        while(m--){\r\n            scanf(\"%d\",&num);\r\n            if(num > max){\r\n                max = num;\r\n            }\r\n            found_s = found_s + num;\r\n        }\r\n        alt_s = (max*(max + 1)) / 2;\r\n        req_s = alt_s - found_s;\r\n        total_s = found_s + s;\r\n        d = 8*total_s + 1;\r\n        r = floor(sqrt(d));\r\n        sq = r*r;\r\n        if(s >= req_s){\r\n            if(d == sq){\r\n                printf(\"YES\\n\");\r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n            }\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9970059880239521, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8f9240111af6b7f7b1e251731e417977", "bug_code_uid": "80f918b1eb06d940eaadfaaeddf7fcf7", "src_uid": "2d1609b434262d30f6bd030d41a71bd5", "apr_id": "544204a6ba8de84cf31afd00f44b6f37", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(void)\n{\n    char a[100000],b[100000];\n    int i,j,count=0,sum=0;\n    scanf(\"%s%s\",a,b);\n    for(i=0;i<strlen(a);i++){\n        if(a[i]=='4'&&b[i]=='7') count++;\n        if(a[i]=='7'&&b[i]=='4') sum++;\n    }\n    if(count>=sum) printf(\"%d\",count);\n    else printf(\"%d\",sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(void)\n{\n    char a[1000000],b[1000000];\n    int i,j,count=0,sum=0;\n    scanf(\"%s%s\",a,b);\n    for(i=0;i<strlen(a);i++){\n        if(a[i]=='4'&&b[i]=='7') count++;\n        if(a[i]=='7'&&b[i]=='4') sum++;\n    }\n    if(count>=sum) printf(\"%d\",count);\n    else printf(\"%d\",sum);\n    return 0;\n}"}
{"similarity_score": 0.3015006821282401, "equal_cnt": 22, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "ed73bc09842dc90a05a10e9ca51a7d8d", "bug_code_uid": "780a2e51ef24ce2206089d2db21deb0a", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "8421d0372990e8d3ad2d636af9528216", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint main()\n{\n       int n,a[200001],i,x=0,y=0,j,temp;\n\n       scanf(\"%d\",&n);\n\n       for(i=1;i<=n;i++)\n             {\n\t         scanf(\"%d\",&a[i]);\n             }\n\t    \n       for(i=1;i<=n;i++)\n            {\n\t        for(j=i+1;j<=n;j++)\n\t\t        {\n\t\t\t      if(a[i]>a[j])\n\t\t\t            {\n\t\t\t\t           temp=a[i];\n\t\t\t\t\t   a[i]=a[j];\n\t\t\t\t\t   a[j]=temp;\n\t\t\t             }\n\t\t        }\n            }\n\n        printf(\"%d \",a[n]-a[1]);\n\n       for(i=1;i<=n;i++)\n             {\n\t            if(a[i]==a[1])\n\t\t       x++;\n\t\t     else if(a[i]==a[n])\n\t\t       y++;\n              }\n\n\t      printf(\"%d\",x*y);\n\n       \n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n return 0;\n }\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n        long long int n,a[200001],i,big,small,x=1,y=1,t;\n\n\t scanf(\"%lld\",&n);\n         scanf(\"%lld\",&a[1]);\n         big=a[1];\n\t small=a[1];\n\n\n\t  for(i=2;i<=n;i++)\n\t      {\n\t           scanf(\"%lld\",&a[i]);\n\n                   if(a[i]>big)\n                      {\n\t\t         big=a[i];\n\t\t\t x=1;\n\t              }\n                    else if(a[i]==big)\n\t\t    x++;\n            \n\t           \n\n                   if(a[i]<small)\n                      {\n\t\t         small=a[i];\n\t\t\t y=1;\n\t              }\n                    else if(a[i]==small)\n\t\t    y++;\n                  \n\t       }\n               t=x*y;\n            if(small==big)\n             {\n                 t=(n*(n-1))/2;\n             }\n\n\n\n          printf(\"%lld %lld\",big-small,t);\n          return 0;\n}\n"}
{"similarity_score": 0.9424206815511164, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b436700d977c819f262948bab5f0d4b9", "bug_code_uid": "3def46bce841567381a26ed2a28fa7b4", "src_uid": "78f25e2bc4ff22dbac94f72af68a745f", "apr_id": "e29b49faa0ce87da0c5d52e246d91d45", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#define ll long long int\n\n \nint main(void) {\n\t// your code goes here\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t   int n,m,x,k=0;\n\t   scanf(\"%d%d%d\",&x,&n,&m);\n\t   while(x>20){\n\t       \n\t       x=x/2+10;\n\t       n--;\n\t      \n\t        if(n<=0)\n\t        break;\n\t      \n\t   }\n\t //  printf(\"%d %d\",x,n);\n\t   k=x-10*m;\n\t   if(k<=0)\n\t   printf(\"YES\\n\");\n\t   else\n\t   printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\u00a0", "fixed": "#include <stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#define ll long long int\n\n \nint main(void) {\n\t// your code goes here\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t   int n,m,x,k=0;\n\t   scanf(\"%d%d%d\",&x,&n,&m);\n\t   while(x>20&&n>0){\n\t       \n\t       x=x/2+10;\n\t       n--;\n\t      \n\t   }\n\t //  printf(\"%d %d\",x,n);\n\t   k=x-10*m;\n\t   if(k<=0)\n\t   printf(\"YES\\n\");\n\t   else\n\t   printf(\"NO\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6376811594202898, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "95efac2bf7778d9dae69bc5a8ccba621", "bug_code_uid": "a28509416af4d91457c6110946da4e36", "src_uid": "f9287ed16ef943006ffb821ba3678545", "apr_id": "4ecb3fcf4499792714db547729fcf2b6", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n,a,b;\r\n    scanf(\"%d\",&n);\r\n    while(n){\r\n        scanf(\"%d %d\",&a,&b);\r\n    \r\n    if(b>a){\r\n        int t=b;\r\n        b=a;\r\n        a=t;\r\n    }\r\n    printf(\"%d\\n\",2*b+a-2);\r\n\tn--;}\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n,a,b;\r\n    scanf(\"%d\",&n);\r\n    while(n){\r\n        scanf(\"%d %d\",&a,&b);\r\n    if((a==b)&&(a==1)){\r\n        printf(\"0\\n\");\r\n    }\r\n    else{\r\n    if(b>a){\r\n        int t=b;\r\n        b=a;\r\n        a=t;\r\n    }\r\n    printf(\"%d\\n\",2*b+a-2);}\r\n\tn--;}\r\n    return 0;\r\n}"}
{"similarity_score": 0.8985282726568552, "equal_cnt": 17, "replace_cnt": 2, "delete_cnt": 12, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "7d90f0dbdff2e5da47aa132c134cbd31", "bug_code_uid": "70d26e5b733dd0f1513408217597ef5f", "src_uid": "18b3d8f57ecc2b392c7b1708f75a477e", "apr_id": "58e01e1c3463c166c00ee989d30c16bb", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint arr[100000];\nint main()\n{\n    int n,k,i,a,flag=1;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n        arr[i]=1;\n    arr[k-1]=k;\n    for(i=k-2;i>=0;i--)\n        arr[i]=arr[i+1]-1;\n        a=1;\n    printf(\"1 \");\n    for(i=n-2;i>=0;i--)\n    {\n        if(arr[i]==1)\n            printf(\"%d \",++a);\n        else if(arr[i]!=1)\n        {\n            if(flag==1)\n            {\n                printf(\"%d \",a+arr[i]);\n                flag=0;\n                a=a+arr[i];\n            }\n            else\n            {\n                printf(\"%d \",a-arr[i]);\n                a=a-arr[i];\n                flag=1;\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint arr[100000];\nint main()\n{\n    int n,k,i,a,flag=1,f=1;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n        arr[i]=1;\n    arr[k-1]=k;\n    for(i=k-2;i>=0;i--)\n        arr[i]=arr[i+1]-1;\n    a=1;\n    printf(\"1 \");\n    for(i=n-2;i>=0;i--)\n    {\n        if((arr[i]==1)&&(f==1))\n            printf(\"%d \",++a);\n        else\n        {\n            f=0;\n    if(flag==1)\n        {\n            printf(\"%d \",a+arr[i]);\n            flag=0;\n            a=a+arr[i];\n        }\n        else\n        {\n            printf(\"%d \",a-arr[i]);\n            a=a-arr[i];\n            flag=1;\n        }\n    }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9875835721107927, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "56b56ee2168b1732c79ddd39df041f24", "bug_code_uid": "d06606901ad589c040615d2b61797cee", "src_uid": "910c0e650d48af22fa51ab05e8123709", "apr_id": "086a8a25400046ba0030e1ece475e8cf", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nchar s[666666],ss[666666];\nvoid print(int x)\n{\n  if(!x)\n  return;\n  print((x-1)/26);\n  putchar('A'+(x-1)%26);\n}\nint main()\n{\n  int t,n,m;\n  scanf(\"%d\",&t);\n  while(t--)\n  {\n    int sum=0;\n    scanf(\"%s\",s);\n    if(sscanf(s,\"R%dC%d\",&n,&m)==2)\n    print(m),printf(\"%d\\n\",n);\n    else\n    {\n      sscanf(s,\"%[A-Z]%d\",ss,&n);\n      int len=strlen(ss);\n      for(int i=0;i<len;i++)\n      sum+=(ss[i]-'A'+1)*pow(26,len-i-1);\n      printf(\"R%dC%d\\n\",n,sum);\n    }\n  }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nchar s[666666],ss[666666];\nvoid print(int x)\n{\n  if(!x)\n  return;\n  print((x-1)/26);\n  putchar('A'+(x-1)%26);\n}\nint main()\n{\n  int t,n,m;\n  scanf(\"%d\",&t);\n  while(t--)\n  {\n    double sum=0;\n    scanf(\"%s\",s);\n    if(sscanf(s,\"R%dC%d\",&n,&m)==2)\n    print(m),printf(\"%d\\n\",n);\n    else\n    {\n      sscanf(s,\"%[A-Z]%d\",ss,&n);\n      int len=strlen(ss);\n      for(int i=0;i<len;i++)\n      sum+=(ss[i]-'A'+1)*pow(26,len-i-1);\n      printf(\"R%dC%.0f\\n\",n,sum);\n    }\n  }\n}\n"}
{"similarity_score": 0.8842832469775475, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f2f2cd16d2725bcdc9790c3b6fa461b3", "bug_code_uid": "11693b335b4a7ab3409833fcb9e5d8e1", "src_uid": "5bffe38e3ac9511a30ee02b4ec5cb1d5", "apr_id": "99bde1163179f60ab40959c97f1561bc", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    long long int t,n,a,b,c;\r\n    scanf(\"%lld\", &t);\r\n    while(t--){\r\n        scanf(\"%lld%lld%lld\", &a, &b, &c);\r\n        if((a+c-2*b)==0)\r\n        printf(\"0\\n\");\r\n        else if(((2*b)%(a+c))==0)\r\n        printf(\"0\\n\");\r\n        else\r\n        printf(\"1\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    long long int t,a,b,c;\r\n    scanf(\"%lld\", &t);\r\n    while(t--){\r\n        scanf(\"%lld%lld%lld\", &a, &b, &c);\r\n        if(((a+c-(2*b))%3==0))\r\n        printf(\"0\\n\");\r\n        else\r\n        printf(\"1\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.28187919463087246, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "fe7bcb3aa56716affe6dd373d9230027", "bug_code_uid": "8030ca3ecacce679321a63b20a0d6f7f", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "98909f0612fff2ec97d5f9ca8fd84043", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int n, a, b;\r\n    int arr[10000];\r\n    scanf(\"%d\\n\", n);\r\n    scanf(\"%d\\n\", a);\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &arr[i]);\r\n    }\r\n    if (n % 2 != 0 ){\r\n        printf(\"NO\");\r\n    }else if(n % 2 == 0){\r\n        printf(\"YES\");\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return 0;\r\n    \r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint x, y;\r\n\t\tint a;\r\n\t\tscanf(\"%d\", &a);\r\n\t\tx = 0;\r\n\t\ty = 0;\r\n\t\twhile(a--)\r\n\t\t{\r\n\t\t\tint b;\r\n\t\t\tscanf(\"%d\",&b);\r\n\t\t\tif(b == 1)\r\n                x++;\r\n\t\t\telse y++;\r\n\t\t}\r\n\t\tif(x%2 == 1) \r\n            puts(\"NO\");\r\n\t\telse if(y%2 == 1 && x < 2) \r\n            puts(\"NO\");\r\n\t\telse \r\n            puts(\"YES\");\r\n\t}\r\n\treturn 0;\r\n} "}
{"similarity_score": 0.6868686868686869, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b8582ab844cbbe30a5a3c16e75ded8d8", "bug_code_uid": "01e27d45e92600e06f1a6baedd77adb4", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "d288376be2dd4446ec5e0cbfa90f1df0", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong n,i=0,k=0,h=0;\n\tchar s[2048];\n\tscanf(\"%ld\",&n);\n\twhile(s[i]!='\\0')\n\t{\n\t\tif(s[i]=='A') {k++;}\n\t\telse {h++;}\n\t\ti++;\n\t}\n\tif(h==k) {printf(\"Friendship\");}\n\tif(k>h) {printf(\"Anton\");}\n\tif(k<h) {printf(\"Danik\");}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong n,i,k=0;\n\tscanf(\"%d\",&n); getchar();\n\tchar s[n];\n\tgets(s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='A') {k++; if(k>n/2) {break;}}\n\t}\n\tif(n-k==k) {printf(\"Friendship\");}\n\telse\n\t{\n\t\tif(k>n-k) {printf(\"Anton\");}\n\t\telse\n\t\t{\n\t\t\tif(k<n-k) {printf(\"Danik\");}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7859733978234583, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "fb1da0c961c33b945f9aa6d8a0c0dfe4", "bug_code_uid": "98a27158bf71f26073fc7d3d4c604b62", "src_uid": "1d8870a705036b9820227309d74dd1e8", "apr_id": "011924f04b23004b3cebbb6af3e45bbc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,k,x,y,a=0,b=0,p=0,q=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\",&k,&x,&y);\n        if(k==1)\n        {\n            if(x>=y) a++;\n            else b++;\n        }\n        else\n        {\n            if(x>=y) p++;\n            else q++;\n        }\n    }\n    if(a>=b) printf(\"LIVE\\n\");\n    else  printf(\"DEAD\\n\");\n    if(p>=q)  printf(\"LIVE\\n\");\n    else  printf(\"DEAD\\n\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,k,x,y,a=0,b=0,p=0,q=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\",&k,&x,&y);\n        if(k==1)\n        {\n            a=a+x;   b=b+y;\n        }\n        else\n        {\n            p=p+x;   q=q+y;\n        }\n    }\n    if(a>=b) printf(\"LIVE\\n\");\n    else  printf(\"DEAD\\n\");\n    if(p>q)  printf(\"LIVE\\n\");\n    else  printf(\"DEAD\\n\");\n}\n"}
{"similarity_score": 0.994263862332696, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2a2982c33ae29d3ce7c8e91fc647f313", "bug_code_uid": "2f1377f39124109d0176ae43a7a19754", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "b954c9c474a157ea7427a9bbe81ab065", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"string.h\"\nint main(){\n\tint n, i=0,j;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i;i<n;i++){\n\t\tchar a[101];\n\t\tscanf(\"%s\",&a);\n\t\tif(strlen(a)>4){\n\t\t\tprintf(\"%c%d%c\\n\",a[0],strlen(a)-2,a[strlen(a)-1]);\n\t\t}else{\n\t\tprintf(\"%s\\n\",a);\n\t\t}\n\t}\n\treturn 0;\n\t\n}", "fixed": "#include \"stdio.h\"\n#include \"string.h\"\nint main(){\n\tint n, i=0,j;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor(i;i<n;i++){\n\t\tchar a[101];\n\t\tscanf(\"%s\",&a);\n\t\tif(strlen(a)>10){\n\t\t\tprintf(\"%c%d%c\\n\",a[0],strlen(a)-2,a[strlen(a)-1]);\n\t\t}else{\n\t\tprintf(\"%s\\n\",a);\n\t\t}\n\t}\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.3333333333333333, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d66d50c359d1662e3fc5be343aab44e8", "bug_code_uid": "b8e04be84ae1e92e2113282f01815d43", "src_uid": "1cd295e204724335c63e685fcc0708b8", "apr_id": "e48454027209d9fa2ec388fb6a904161", "difficulty": 1400, "tags": ["greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n\nint main(void)\n{\n\tlong long int n, elem, prev, ans, add, i, aelem;\n\n\tscanf(\"%d\", &n);\n\t\n\tfor(i = prev = add = ans = 0; i < n; i++){\n\t\tscanf(\"%d\", &elem);\n\t\tif(i > 0){\n\t\t\taelem = add + elem;\n\t\t\tif(aelem < prev){\n\t\t\t\tans += (prev - aelem);\n\t\t\t\tadd += (prev - aelem);\n\t\t\t}else{\n\t\t\t\tadd = 0;\n\t\t\t\tprev = elem;\n\t\t\t}\n\t\t}else{\n\t\t\tprev = elem;\n\t\t}\n\t}\n\tprintf(\"%I64d\", ans);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\n\nint main(void)\n{\n\tlong long int n, elem, prev, ans, add, i, aelem;\n\n\tscanf(\"%I64d\", &n);\n\t\n\tfor(i = prev = add = ans = 0; i < n; i++){\n\t\tscanf(\"%I64d\", &elem);\n\t\tif(i > 0){\n\t\t\taelem = add + elem;\n\t\t\tif(aelem < prev){\n\t\t\t\tans += (prev - aelem);\n\t\t\t\tadd += (prev - aelem);\n\t\t\t}else{\n\t\t\t\tadd = 0;\n\t\t\t\tprev = elem;\n\t\t\t}\n\t\t}else{\n\t\t\tprev = elem;\n\t\t}\n\t}\n\tprintf(\"%I64d\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.937748344370861, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "576c254c92d97925bf0b37d6f314fc43", "bug_code_uid": "bed12340023761755be5ad67d6956d76", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "3be3baef3909c5984968cc0baf30f7b0", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong long int n,i;\n\tchar st[100010],al[30],sum=0;\n\tmemset(al,0,sizeof(al));\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<=n;i++)\n\t{\n\t\tscanf(\"%c\",&st[i]);\n\t\tal[st[i]-97]++;\n\t}\n\tif(n>26)\n\tprintf(\"-1\\n\");\n\telse if(n<=26)\n\t{\n\tfor(i=0;i<=25;i++)\n\t{\n\t\tif(al[i]>1)\n\t\tsum=sum+al[i]-1;\n\t\telse \n\t\tsum=sum+0;\n\t\t}\t\n\t}\n\tprintf(\"%lld\\n\",sum);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong long int n,i;\n\tchar st[100010],al[30],sum=0;\n\tmemset(al,0,sizeof(al));\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<=n;i++)\n\t{\n\t\tscanf(\"%c\",&st[i]);\n\t\tal[st[i]-97]++;\n\t}\n\tif(n>26)\n\tprintf(\"-1\\n\");\n\telse if(n<=26)\n\t{\n\tfor(i=0;i<=25;i++)\n\t{\n\t\tif(al[i]>1)\n\t\tsum=sum+al[i]-1;\n\t\telse \n\t\tsum=sum+0;\n\t\t}\t\n\t\n\tprintf(\"%lld\\n\",sum);\n}\n\treturn 0;\n}"}
{"similarity_score": 0.9828926905132193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "434590b79cef22b01f48427bdf4de51f", "bug_code_uid": "672204d9cf549f44f7cc6fded6e25ba6", "src_uid": "ef1448a744f67347183479c697aa87e1", "apr_id": "3071f9fca533e49120d7552b5e181153", "difficulty": 800, "tags": ["brute force", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint inp,r=0,a;\r\n\t\tscanf(\"%d\",&a);\r\n\t\twhile(n>1)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&inp);\r\n\t\t\tif(a>inp)\r\n\t\t\tr=1;\r\n\t\t\tn--;\r\n\t\t}\r\n\t\tif(r==1)\r\n\t\tprintf(\"Yes\\n\");\r\n\t\telse if(r==0)\r\n\t\tprintf(\"No\\n\");\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint inp,r=0,a;\r\n\t\tscanf(\"%d\",&a);\r\n\t\twhile(n>1)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&inp);\r\n\t\t\tif(a>inp)\r\n\t\t\tr=1;\r\n\t\t\ta=inp;\r\n\t\t\tn--;\r\n\t\t}\r\n\t\tif(r==1)\r\n\t\tprintf(\"Yes\\n\");\r\n\t\telse if(r==0)\r\n\t\tprintf(\"No\\n\");\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7244094488188977, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "6673cf58a920c1289565067a56722741", "bug_code_uid": "88d1418335db8bc94e7a40cd202ff27f", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "338225d7e0b52f1d2696a4413bd9c02a", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nlong int t[100000];\n\nint main()\n{\n    long int n,s=0,i,j,k,tmp,c=1;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n    {\n\n        scanf(\"%ld\",&t[i]);\n    }\n\n     for(i=n/2;i>0;i=i/2)\n    {\n\n      for(j=i;j<n;j++)\n      {\n          for(k=j-i;k>=0;k=k-i)\n          {\n              if(t[k+i]>=t[k])\n                break;\n              else\n              {\n                  tmp=t[k];\n                  t[k]=t[k+i];\n                  t[k+i]=tmp;\n              }\n          }\n      }\n\n      }\n      k=1;\n      j=0;\n\n    while(k<=n-1)\n{\n         s=s+t[j];\n        for(i=k;i<n;i++)\n        {\n\n            if(s<=t[i])\n            {\n                c++;\n                tmp=t[k];\n                  t[k]=t[i];\n                  t[i]=tmp;\n                j++;\n                break;\n\n            }\n        }\n        k++;\n\n}\n\n    if(n==1)\n    {\n        printf(\"%d\",1);\n    }\n    else\n     {\n       printf(\"%ld\\n\",c);\n     }\n\n\n      return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong int t[1000000];\n\nint main()\n{\n    long int n,s=0,i,j,k,tmp,c=0;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n    {\n\n        scanf(\"%ld\",&t[i]);\n    }\n\n     for(i=n/2;i>0;i=i/2)\n    {\n\n      for(j=i;j<n;j++)\n      {\n          for(k=j-i;k>=0;k=k-i)\n          {\n              if(t[k+i]>=t[k])\n                break;\n              else\n              {\n                  tmp=t[k];\n                  t[k]=t[k+i];\n                  t[k+i]=tmp;\n              }\n          }\n      }\n\n      }\n    for(i=0;i<n;i++)\n    {\n        if(t[i]>=s)\n        {\n            s=s+t[i];\n            c++;\n        }\n    }\n\n\n\n       printf(\"%ld\\n\",c);\n\n\n\n      return 0;\n}\n"}
{"similarity_score": 0.9576547231270358, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ee843384a54853296a95858c54542455", "bug_code_uid": "44f4cea533422944d2eec06d3d0439fc", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "a09d390c9f2d43e395175f2dcbbe987c", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,m,i,j,k,sayac=0;\n    scanf(\"%d %d\",&n,&m);\n    daire=m*2 ;\n    int dizi[2] ;\n    for(j=0;j<m;j++) {   \n        for(i=0;i<2;i++){\n            scanf(\"%d\",&dizi[i]);\n            if (i==1){\n                for(k=0;k<2;k++){\n                    if(dizi[k]==1){\n                        sayac++ ;\n                        break ;\n                    }\n                }\n            }\n        }\n    }\n    printf(\"%d\",sayac);\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,m,i,j,k,sayac=0;\n    scanf(\"%d %d\",&n,&m);\n    int dizi[2] ;\n    for(j=0;j<m*n;j++) {   \n        for(i=0;i<2;i++){\n            scanf(\"%d\",&dizi[i]);\n            if (i==1){\n                for(k=0;k<2;k++){\n                    if(dizi[k]==1){\n                        sayac++ ;\n                        break ;\n                    }\n                    \n                }\n            }\n        }\n    }\n    printf(\"%d\",sayac);\n}"}
{"similarity_score": 0.9752066115702479, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "92e851d10fa47460862e6de7fde983ff", "bug_code_uid": "dd863cc25877db4f6ee749acaeeade51", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "047799ee3bed0ed41e08cf5f08744aa4", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (){\n    int x1, y1, x2, y2;\n    scanf(\"%i\", &x1);\n    scanf(\"%i\", &y1);\n    scanf(\"%i\", &x2);\n    scanf(\"%i\", &y2);\n    if ((x1-x2)==(y1-y2)){\n        printf(\"%i %i %i %i\", x2, y1, x1, y2);\n    }\n    else if (x1==x2){\n        printf(\"%i %i %i %i\", x1+(y1-y2), y1, x2+(y1-y2), y2);\n    }\n    else if (y1==y2){\n        printf(\"%i %i %i %i\", x1, y1+(x1-x2), x2, y2+(x1-x2));\n    }\n    else {\n        printf(\"-1\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (){\n    int x1, y1, x2, y2;\n    scanf(\"%i\", &x1);\n    scanf(\"%i\", &y1);\n    scanf(\"%i\", &x2);\n    scanf(\"%i\", &y2);\n    if (abs(x1-x2)==abs(y1-y2)){\n        printf(\"%i %i %i %i\", x2, y1, x1, y2);\n    }\n    else if (x1==x2){\n        printf(\"%i %i %i %i\", x1+(y1-y2), y1, x2+(y1-y2), y2);\n    }\n    else if (y1==y2){\n        printf(\"%i %i %i %i\", x1, y1+(x1-x2), x2, y2+(x1-x2));\n    }\n    else {\n        printf(\"-1\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9974424552429667, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "85ed55da6f891efdf22e19e358875615", "bug_code_uid": "54798f155c64380d64533e8f07aedf03", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "2934d0ceb2517333cc290f72f80e07fa", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint i,j,k,n,a;\nscanf(\"%d\",&n);\nint A[n][2],B[n][2];\nfor(i=0;i<n;i++){\n        a=0;\n    scanf(\"%d %d\",&A[i][0],&A[i][1]);\n    if(A[i][1]%A[i][0]==0){\n    B[i][0]=A[i][0];\n        B[i][1]=A[i][1];\n    }\n        else {\n            B[i][0]=A[i][0];\n            B[i][1]=2*A[i][1];\n        }\n\n        }\n\n\n\nfor(i=0;i<n;i++){\n    printf(\"%d %d\\n\",B[i][0],B[i][1]);\n}\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint i,j,k,n,a;\nscanf(\"%d\",&n);\nint A[n][2],B[n][2];\nfor(i=0;i<n;i++){\n        a=0;\n    scanf(\"%d %d\",&A[i][0],&A[i][1]);\n    if(A[i][1]%A[i][0]==0){\n    B[i][0]=A[i][0];\n        B[i][1]=A[i][1];\n    }\n        else {\n            B[i][0]=A[i][0];\n            B[i][1]=2*A[i][0];\n        }\n\n        }\n\n\n\nfor(i=0;i<n;i++){\n    printf(\"%d %d\\n\",B[i][0],B[i][1]);\n}\n}\n"}
{"similarity_score": 0.431438127090301, "equal_cnt": 10, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f70b6387c0f2d123746e4476700f1a29", "bug_code_uid": "c87ff8328715400078b3e5c298d46e79", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "25aa75b2ee49e621873869b889c2e714", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,t,n,x,w,s,a,b,d;\n\t\n\tscanf(\"%d\",&t);\n\t\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%d %d %d %d\",&n,&x,&a,&b);\n\t\t\n\t\tif(a>b) d=a-b;\n\t\telse if(b>a) d=b-a;\n\t\t\n\t\tif(a+b<=n){\n\t\t\ts=x;\n\t\t}\n\t\telse if(a+b>n){\n\t\t\ts=0;\n\t\t}\n\t\t\n\t\tw=d+s;\n\t\tprintf(\"%d\\n\",w);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint d,p,r,answer,i,t,n,x,a,b,y;\n\tscanf(\"%d\",&t);\n\t\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%d%d%d%d\",&n,&x,&a,&b);\n\t\t\t\n\t\tif(a>b){\n\t\t\td=a-b;\n\t\t}\n\t\t\n\t\tif(b>a){\n\t\t\td=b-a;\n\t\t}\n\t\t\n\t\tif(d+x<n){\n\t\t\tr=x;\n\t\t}\n\t\t\n\t\tif(d+x>=n){\n\t\t   r=n-d-1;\n\t\t}\n\t\t\n\t\tanswer=r+d;\n\t\t\n\t\tprintf(\"%d\\n\",answer);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.5031315240083507, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4cd50566f1744e3a8391cd205ba7da75", "bug_code_uid": "10d4c51b48d3995fa06a57ff5e7afd3e", "src_uid": "1e54530bc8cff81199b9cc1a6e51d638", "apr_id": "3e82ccefc2a74976b853672976023b7a", "difficulty": 800, "tags": ["brute force", "data structures", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tint i;\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,t;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n];\r\n\t\tint j,k;\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<n-1;j++)\r\n\t\tfor(k=0;k<n-1-j;k++)\r\n\t\t{\r\n\t\t\tif(a[k]>a[k+1])\r\n\t\t\t{\r\n\t\t\t\tt=a[k];\r\n\t\t\t\ta[k]=a[k+1];\r\n\t\t\t\ta[k+1]=t;\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tint out;\r\n\t\tout=a[n-1]+a[n-2]-a[0]-a[1];\r\n\t\tprintf(\"%d\\n\",out);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nconst int INF=0x3f3f3f3f;\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tint i;\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,t;\r\n\t\tint ma1=0,ma2=0,mi1=INF,mi2=INF;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n];\r\n\t\tint j,k;\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tif(a[j]>ma1)\r\n\t\t\t{\r\n\t\t\t\tma2=ma1;\r\n\t\t\t\tma1=a[j];\r\n\t\t\t}\r\n\t\t\telse if(a[j]>ma2)\r\n\t\t\t{\r\n\t\t\t\tma2=a[j];\r\n\t\t\t}\r\n\t\t\tif(a[j]<mi1)\r\n\t\t\t{\r\n\t\t\t\tmi2=mi1;\r\n\t\t\t\tmi1=a[j];\r\n\t\t\t}\r\n\t\t\telse if(a[j]<mi2)\r\n\t\t\t{\r\n\t\t\t\tmi2=a[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\",ma1+ma2-mi1-mi2);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8663594470046083, "equal_cnt": 15, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "d10b4a192bc424cf0124b151f3d27076", "bug_code_uid": "0d8cc02ddb3375a73a55674d8e60a444", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "c31e8cc2536ef27176e96a11e901e222", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    int n,i,j=0;\n    \n    scanf(\"%d\",&n);\n    \n    char s[3];\n    \n    scanf(\"%s\",&s);\n    \n    if(!strcmp(s,++X)==1||!strcmp(s,X++)==1)\n    j++;\n    \n    else if(!strcmp(s,--X)==1||!strcmp(s,X--)==1)\n    j--;\n    \n    printf(\"%d\",n+j);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    int n,i,j=0;\n    \n    scanf(\"%d\",&n);\n    \n    char s[4];\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&s);\n        if(!strcmp(s,\"++X\")||!strcmp(s,\"X++\"))\n        j++;\n        else if(!strcmp(s,\"--X\")||!strcmp(s,\"X--\"))\n        j--;\n    }\n    \n    printf(\"%d\",j);\n    \n    return 0;\n}"}
{"similarity_score": 0.9294871794871795, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1d1d88ae086dbb0e1d17eb9fef667b31", "bug_code_uid": "1797c6bdcf44761ecf1985d254d72119", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "b455d46ec2ba48304b04767556049db5", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid solve() {\n\tlong long A,B,x,y,z;\n\tscanf(\"%lld %lld\", &A, &B);\n\tprintf(\"YES\\n\");\n\tx = B!=2? A*(B-1) : A*(B*B-1);\n\ty = A;\n\tz = B!=2? A*B : A*B*B;\n\tprintf(\"%lld %lld %lld\\n\", x, y, z);\n\treturn;\n}\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) solve();\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nvoid solve() {\n\tlong long A,B,x,y,z;\n\tscanf(\"%lld %lld\", &A, &B);\n\tif(B == 1) printf(\"NO\\n\");\n\telse {\n\t\tprintf(\"YES\\n\");\n\t\tx = B!=2? A*(B-1) : A*(B*B-1);\n\t\ty = A;\n\t\tz = B!=2? A*B : A*B*B;\n\t\tprintf(\"%lld %lld %lld\\n\", x, y, z);\n\t}\n\treturn;\n}\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) solve();\n\treturn 0;\n}\n"}
{"similarity_score": 0.1579371474617244, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f62c3bd70c0b7732f8a342a3138f484a", "bug_code_uid": "96ad45faa4edbc9378f9dd18bc22646d", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "20b2fd4c761e71d93f782ada2a1f15c7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, m ,c=0, i, j, k, x,xx, y;\n    scanf(\"%d %d\", &n, &m);\n    x=m/n;\n    y=x;\n    xx=m%n;\n\n    if(y==1)\n    {\n        if((m%n)==0) c=0;\n        else c=-1;\n    }\n\n    else if(xx!=0) c=-1;\n\n    else\n    {\n\n\n\n    for(i=0; i>-8; i++)\n    {\n        if((y%3)==0)\n        {\n            if((y/3)==1)\n            {\n                c++;\n                break;\n            }\n\n            else\n            {\n                y=y/3;\n                c++;\n                continue;\n            }\n        }\n\n        if((y%2)==0)\n        {\n            if((y/2)==1)\n            {\n                c++;\n                break;\n            }\n\n            else\n            {\n                y=y/2;\n                c++;\n                continue;\n            }\n        }\n\n        else\n        {\n            c=-1;\n            break;\n        }\n    }\n\n    }\n\n    printf(\"%d\",c);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i, j, n, x, y, s;\n    scanf(\"%d\", &n);\n    int a[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        if((a[i]%2)==0) a[i]--;\n        //else a[i]++;\n    }\n\n    for(i=0; i<n; i++)\n    {\n        printf(\"%d \", a[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4910025706940874, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "abb83f99777f367a648d918bb7e61bb0", "bug_code_uid": "98ff1f5e04e0e3283de8bb53e69cb3f3", "src_uid": "7f98c9258f3e127a782041c421d6317b", "apr_id": "35ddb26686455afa264a4672f729e67e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,c=0,max=0,i,j;\n\tscanf(\"%d\",&n);\n\tint arr[2*n];\n\tfor(i=0;i<2*n;i++)\n\t{\n\t    scanf(\"%d\",&arr[i]);\n\t    for(j=i-1;j>=0;j--)\n\t    {\n\t    \tif(arr[i]==arr[j])\n\t    \t {\n\t\t\t     c=c-2;\n\t\t\t     break;\n\t\t     } \n\t\t}\n\t    c++;\n\t    if(c>max)\n\t       max=c;\n    }\n    printf(\"%d\",max);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,max=0,i;\n\tscanf(\"%d\",&n);\n\tint arr[2*n],arr1[n],sum[2*n];\n\tsum[0]=1;\n\tfor(i=0;i<n;i++)\n\t     arr1[i]=0;\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tarr1[arr[i]-1]++;\n\t\tif(arr1[arr[i]-1]==2)\n\t\t{\n\t\t     arr1[arr[i]-1]=0;\n\t\t     if(i>0)\n\t            \tsum[i]=sum[i-1]-1;\n\t\t     \n\t    }\n\t    else \n\t    {\n\t      if(i>0)\n\t      sum[i]=sum[i-1]+1;\n\t    }\n\t\tif(sum[i]>max)\n\t\t    max=sum[i];\n    }\n    printf(\"%d\",max);    \n    \n}\n"}
{"similarity_score": 0.9627329192546584, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "966dde5d8ba2ede3d5073803d4c7246e", "bug_code_uid": "991ae3562de844a916243eff4980c92b", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "46f82d914b7f43b95aca618cfd776427", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdin>\n\nint main()\n{\n   int n,i;\n   scanf(\"%d\",&n);\n   printf(\"%d\\n\",n/2);\n   if (n%2==0){\n       for(i=0;i<n/2-1;i++){\n           printf(\"2 \");\n       }\n       printf(\"2\\n\");\n   }\n   if(n%2==1){\n       for (i=0;i<n/2-1;i++){\n           printf(\"2 \");\n       }\n       printf(\"3\\n\");\n   }\n   return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,i;\n   scanf(\"%d\",&n);\n   printf(\"%d\\n\",n/2);\n   if (n%2==0){\n       for(i=0;i<n/2-1;i++){\n           printf(\"2 \");\n       }\n       printf(\"2\\n\");\n   }\n   if(n%2==1){\n       for (i=0;i<n/2-1;i++){\n           printf(\"2 \");\n       }\n       printf(\"3\\n\");\n   }\n   return 0;\n}"}
{"similarity_score": 0.9567010309278351, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "765d16d33d3347d91536607bd878c80f", "bug_code_uid": "ac4fd7e6111dd8e2a1bac69fb5c56b66", "src_uid": "5172d358f1d451b42efff1019219a54d", "apr_id": "85f3d41da39e5f844885ebc13cbf6c2d", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \nint main(){ \n    int a,n,i,b; \n    scanf(\"%d\",&n);  \n    for(i=0;i<n;i++){\n    scanf(\"%d%d\",&a,&b);\n    int x=a%(b+1); \n    float y=(b+1)/2.00;  \n    if(x>=y) \n    printf(\"YES\\n\");  \n    else printf(\"NO\\n\");\n        }\n    } ", "fixed": "#include<stdio.h> \nint main(){ \n    int a,n,i,b;  \n    scanf(\"%d\",&n);  \n    for(i=0;i<n;i++){\n    scanf(\"%d%d\",&a,&b);\n    int x=a%(b+1); \n    double y=(b+1)*0.5;\n    if(x>=y) \n    printf(\"YES\\n\");  \n    else printf(\"NO\\n\");\n        }\n    } "}
{"similarity_score": 0.9962616822429906, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b626e2b2fd0ce40562211b913fc9a46e", "bug_code_uid": "d0b76525642284456a0d0f0959417548", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "96de9339e7339b24db29a8c8e913aaf3", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nvoid swap(char *s,int i,int j)\n{\n\tchar c=s[i];\n\ts[i]=s[j];\n\ts[j]=c;\n}\nint main()\n{\n\tint l,i,t,foundEven=0,lastEven=-1;\n\tchar s[100005];\n\tscanf(\"%s\",s);\n\tl=strlen(s);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tt=(int)s[i]-'0';\n\t\tif(t%2==0 && s[i]<s[l-1])\n\t\t{\n\t\t\tfoundEven=1;\n\t\t\tbreak;\n\t\t}\n\t\tif(t%2==0)\n\t\t{\n\t\t\tlastEven=i;\n\t\t}\n\t}\n\tif(foundEven==1)\n\t{\n\t\tswap(s,i,l-1);\n\t\tprintf(\"%s\",s);\n\t\treturn 0;\n\t}\n\telse if(lastEven!=-1)\n\t{\n\t\tswap(s,i,lastEven);\n\t\tprintf(\"%s\",s);\n\t\treturn 0;\n\t}\n\telse\n\t\tprintf(\"%d\",-1);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nvoid swap(char *s,int i,int j)\n{\n\tchar c=s[i];\n\ts[i]=s[j];\n\ts[j]=c;\n}\nint main()\n{\n\tint l,i,t,foundEven=0,lastEven=-1;\n\tchar s[100005];\n\tscanf(\"%s\",s);\n\tl=strlen(s);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tt=(int)s[i]-'0';\n\t\tif(t%2==0 && s[i]<s[l-1])\n\t\t{\n\t\t\tfoundEven=1;\n\t\t\tbreak;\n\t\t}\n\t\tif(t%2==0)\n\t\t{\n\t\t\tlastEven=i;\n\t\t}\n\t}\n\tif(foundEven==1)\n\t{\n\t\tswap(s,i,l-1);\n\t\tprintf(\"%s\",s);\n\t\treturn 0;\n\t}\n\telse if(lastEven!=-1)\n\t{\n\t\tswap(s,l-1,lastEven);\n\t\tprintf(\"%s\",s);\n\t\treturn 0;\n\t}\n\telse\n\t\tprintf(\"%d\",-1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8408124704770902, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "73cf1257ed476adb80aa59ba7329926d", "bug_code_uid": "9b69c4bb3a355488fd8a54fae8582b56", "src_uid": "1aaced1322c47f1908f2bc667bca1dbe", "apr_id": "da44bd37f21c3b5558ec50fc953fc266", "difficulty": 1500, "tags": ["dsu", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int n, check[1000001], front[200001], back[200001], res[200001];\nlong long int find(long long int id, int flag)\n{\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(flag==1 && front[i]==id)\n\t\t\treturn i;\n\t\telse if(flag==2 && back[i]==id)\n\t\t\treturn i;\n\t}\n}\nint main()\n{\n\tlong long int i, start, end, pos,  flag = 0;\n\tscanf(\"%I64d\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d %I64d\", &front[i], &back[i]);\n\t\tcheck[front[i]]+=10;\n\t\tcheck[back[i]]+=1;\n\t\tif(front[i]==0)\n\t\t\tstart = i;\n\t\tif(back[i]==0)\n\t\t\tend = i;\n\t}\n\tpos = 1;\n\twhile(pos<n)\n\t{\n\t\tres[pos] = back[start];\n\t\tstart = find(back[start], 1);\n\t\tpos += 2;\n\t}\n\tif(n%2==0)\n\t{\n\t\tpos = n-2;\n\t\twhile(pos>=0)\n\t\t{\n\t\t\tres[pos] = front[end];\n\t\t\tend = find(front[end], 2);\n\t\t\tpos -= 2;\n\t\t}\t\n\t}\n\tfor(i=0;i<n && flag < 2;i++)\n\t{\n\t\tif(check[front[i]]==10)\n\t\t{\n\t\t\tres[0] = front[i];\t\n\t\t\tflag++;\n\t\t}\n\t\tif(check[back[i]]==1)\n\t\t{\n\t\t\tres[n-1] = back[i];\n\t\t\tend = i;\n\t\t\tflag++;\n\t\t}\t\n\t}\n\tif(n%2==1)\n\t{\n\t\tpos = n -3;\n\t\twhile(pos>=0)\n\t\t{\n\t\t\tres[pos] = front[end];\n\t\t\tend = find(front[end], 2);\n\t\t\tpos -= 2;\n\t\t}\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%I64d \", res[i]);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nlong long int n, check[1000001], front[200001], back[200001], res[200001];\nint main()\n{\n\tlong long int i, start, end, pos,  flag = 0;\n\tscanf(\"%I64d\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d %I64d\", &front[i], &back[i]);\n\t\tcheck[front[i]]+=(i+1)*1000000;\n\t\tcheck[back[i]]+=(i+1);\n\t\tif(front[i]==0)\n\t\t\tstart = i;\n\t\tif(back[i]==0)\n\t\t\tend = i;\n\t}\n\tpos = 1;\n\twhile(pos<n)\n\t{\n\t\tres[pos] = back[start];\n\t\tstart = check[back[start]]/1000000-1;\n\t\tpos += 2;\n\t}\n\tif(n%2==0)\n\t{\n\t\tpos = n-2;\n\t\twhile(pos>=0)\n\t\t{\n\t\t\tres[pos] = front[end];\n\t\t\tend = check[front[end]]%1000000-1;\n\t\t\tpos -= 2;\n\t\t}\t\n\t}\n\tfor(i=0;i<n && flag < 2;i++)\n\t{\n\t\tif(check[front[i]]%1000000==0)\n\t\t{\n\t\t\tres[0] = front[i];\t\n\t\t\tflag++;\n\t\t}\n\t\tif(check[back[i]]/1000000==0)\n\t\t{\n\t\t\tres[n-1] = back[i];\n\t\t\tend = i;\n\t\t\tflag++;\n\t\t}\t\n\t}\n\tif(n%2==1)\n\t{\n\t\tpos = n -3;\n\t\twhile(pos>=0)\n\t\t{\n\t\t\tres[pos] = front[end];\n\t\t\tend = check[front[end]]%1000000-1;\n\t\t\tpos -= 2;\n\t\t}\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%I64d \", res[i]);\n    return 0;\n}\n\n"}
{"similarity_score": 0.8669683257918552, "equal_cnt": 30, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 26, "fix_ops_cnt": 29, "lang": "GNU C11", "fix_code_uid": "f45550babe3d45e3ac8b60dd128de5cc", "bug_code_uid": "c9c0abf682bc77ff7cd3e7a5cc1a39fc", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "b1796de8cd5819d05044be8be2f9628d", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\n    int t;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++)\n    {\n        int n, m;\n        scanf(\"%d\", &n);\n        int arr1[n+5];\n        for (int j = 0; j < n; j++)\n        {\n            scanf(\"%d\", &arr1[j]);\n        }\n        scanf(\"%d\", &m);\n        int arr2[m+5];\n        int sum=0;\n        for (int j = 0; j < m; j++)\n        {\n            scanf(\"%d\", &arr2[j]);\n            sum+=arr2[j];\n        }\n        sum = sum%n;\n        printf(\"%d\\n\",arr1[sum]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\r\n#define int long long\r\nsigned main()\r\n{\r\n\r\n    int t;\r\n    scanf(\"%lld\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n, m;\r\n        scanf(\"%lld\", &n);\r\n        int arr1[n+5];\r\n        for (int j = 0; j < n; j++)\r\n        {\r\n            scanf(\"%lld\", &arr1[j]);\r\n        }\r\n        scanf(\"%lld\", &m);\r\n        int arr2[m+5];\r\n        int sum=0;\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            scanf(\"%lld\", &arr2[j]);\r\n            sum+=arr2[j];\r\n        }\r\n        sum = sum%n;\r\n        printf(\"%lld\\n\",arr1[sum]);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7247706422018348, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "85b3f0d28d7429b35098895fa7ac186f", "bug_code_uid": "932c6275e973dd67a7ef72960a0d2893", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "ccb0f1bee0ffcfa76b4698bc41fef676", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i=1,a=1,b=0;\n    scanf(\"%d\",&n);\n    while(i<n){\n        a=a+i;\n\n        if(a>n) printf(\"%d \",a%n);\n        else printf(\"%d \",a);\n        i++;\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i=1,a=1,b=0;\n    scanf(\"%d\",&n);\n    while(i<n){\n        a=a+i;\n        b=a%n;\n        if(b==0)printf(\"%d \",n);\n        else if(a>n) printf(\"%d \",b);\n        else printf(\"%d \",a);\n        i++;\n    }\n\n}\n"}
{"similarity_score": 0.35046728971962615, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "cb9319da2575883c225310d2aa409717", "bug_code_uid": "3757a4f7f8a8ab3861c822d0df5662a7", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "3bb7ad6fe093d1ea7f4f097637ed4405", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main(void) {\n    const size_t line_size = 2 * 1e5;\n    char* line = malloc(line_size);\n    gets(line);\n    \n    int m;\n    scanf(\"%d\", &m);\n    \n    int i;\n    \n    printf(\"%d\\n\", strlen(line));\n    int n = strlen(line);\n    int * reversed = (int *) malloc(sizeof(int) * n);\n    \n    for (i = 0; i < n; i++) {\n        reversed[i] = 0;\n    }\n    \n    int x;\n    \n    for (i = 0; i < m; i++) {\n        scanf(\"%d\", &x);\n        reversed[x - 1] = !reversed[x - 1];\n    }\n    \n    int reverse = 0;\n    \n    for (i = 0; i < n / 2; i++) {\n        if (reversed[i])\n            reverse = !reverse;\n        if (reverse) {\n            char tmp = line[i];\n            line[i] = line[n - i - 1];\n            line[n - i - 1] = tmp;\n        }\n    }\n    \n    printf(\"%s\\n\", line);\n    \n    free(line);\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main(void) {\n    const size_t line_size = 2 * 1e5;\n    char* line = malloc(line_size + 1);\n    gets(line);\n    \n    int m;\n    scanf(\"%d\", &m);\n    \n    int i;\n    \n    int n = strlen(line);\n    int * reversed = (int *) malloc(sizeof(int) * n);\n    \n    for (i = 0; i < n; i++) {\n        reversed[i] = 0;\n    }\n    \n    int x;\n    \n    for (i = 0; i < m; i++) {\n        scanf(\"%d\", &x);\n        reversed[x - 1] = !reversed[x - 1];\n    }\n    \n    int reverse = 0;\n    \n    for (i = 0; i < n / 2; i++) {\n        if (reversed[i])\n            reverse = !reverse;\n        if (reverse) {\n            char tmp = line[i];\n            line[i] = line[n - i - 1];\n            line[n - i - 1] = tmp;\n        }\n    }\n    \n    printf(\"%s\\n\", line);\n    \n    free(line);\n    \n    return 0;\n}\n"}
{"similarity_score": 0.567032967032967, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "e26c7d3149972c62a0c5b9ae647e3f7d", "bug_code_uid": "4c23ef5cd99d4cb75e1fa61ac315852f", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "9d14e8de6ffb6df311b770791993549d", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nmain()\n{\n    int n,i,cnt=0,j;\n    char a[10005],k[10005];\n    scanf(\"%d \",&n);\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%c\",&k[i]);\n        scanf(\"%c\",&a[i]);\n    }\n    for(i=n-2;i>=0;i--)\n    {\n        int mark=0;\n        for(j=i;j>=0;j--)\n        {\n\n            if(a[i]-'A'+'a'==k[j])\n            {\n                k[j]+='A'-'a';\n                mark=1;\n                break;\n            }\n        }\n        if(mark==0)cnt++;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nmain()\n{\n    int n,i,cnt=0,j;\n    char a[100005],k[100005];\n    int b[27]={0};\n    scanf(\"%d \",&n);\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%c\",&k[i]);\n        scanf(\"%c\",&a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        b[k[i]-'a'+1]++;\n        if(b[a[i]-'A'+1]==0)cnt++;\n        else b[a[i]-'A'+1]--;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.7820224719101123, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9812f08ab43f7479eb8d35cb08a1b6e0", "bug_code_uid": "32e403c0758175f1a0d904b9f4e7c33b", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "cd9b63b978072d566639bfa2a2a95913", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int hr,min,total,ans;\n    scanf(\"%d\",&hr);\n    scanf(\"%d\",&min);\n    total=1440;\n    ans=1440-((hr*60)+min);\n    printf(\"%d\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int hr,min,total,ans,t,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n    scanf(\"%d %d\",&hr,&min);\n    total=1440;\n    ans=1440-((hr*60)+min);\n    printf(\"%d\\n\",ans);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9808917197452229, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "16b0505f6bbce372dc0eea4c20ca01b8", "bug_code_uid": "58a9acde04fb8ff91eeba1176b63cd7c", "src_uid": "76f94436b4388682b25c7213248b76a2", "apr_id": "8fbf5d7b9175bb8aa2dffd2f16b01309", "difficulty": 1800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint n,a[111],S=0,P=0,T=10;\nint min(const void* a,const void* b) {return *(int*)a-*(int*)b;}\nint main(){\n  for(scanf(\"%d\",&n),S=0;S<n;S++) scanf(\"%d\",a+S);\n  for(qsort(a,n,sizeof(int),min),S=0;S<n && T+a[S]<=720;S++,P+=T-360>0?T-360:0) T+=a[S];\n  printf(\"%d %d\\n\",S,P);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint n,a[111],S=0,P=0,T=10;\nint min(const void* a,const void* b) {return *(int*)a-*(int*)b;}\nint main(){\n  for(scanf(\"%d\",&n),S=0;S<n;S++) scanf(\"%d\",a+S);\n  for(qsort(a,n,sizeof(int),min),S=0;S<n && T+a[S]<=720;S++,P+=T-360>0?T-360:0) T+=a[S];\n  printf(\"%d %d\\n\",S,P);\n  return 0;\n}\n"}
{"similarity_score": 0.8967193195625759, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a07326f1a9739f5b3949bbc9e59198e0", "bug_code_uid": "a98cda747418df9af5ca7569d1889229", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "a626c188756fde35360a55275ae0c6da", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int a,b,c,d,e,i;\n    int long f;\n    scanf(\"%ld\", &f);\n    for(i = 1; i <= f; i++){\n        scanf(\"%d %d %d\",&a,&b,&c);\n        d=2*c-b-1;\n        e=a-1;\n        if(e<d){\n            printf(\"1\\n\");\n        }\n        if(e>d){\n            printf(\"2\\n\");\n        }\n        if(e==d){\n            printf(\"3\\n\");\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\nint main(){\n    int a,b,c,d,e,i;\n    int long f;\n    scanf(\"%ld\", &f);\n    for(i = 1; i <= f; i++){\n        scanf(\"%d %d %d\",&a,&b,&c);\n        e=a-1;\n        if(b>c || b==c){\n            d=b-1;\n        }else{\n            d=2*c-b-1;\n        }\n        if(e<d){\n            printf(\"1\\n\");\n        }\n        if(e>d){\n            printf(\"2\\n\");\n        }\n        if(e==d){\n            printf(\"3\\n\");\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.6845466155810983, "equal_cnt": 16, "replace_cnt": 16, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "9068d941a511ea42b7a563958ba02813", "bug_code_uid": "855f03ea2f470e954185dbfab4678e42", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "2e8c9b04122106869fdce48a42264670", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong hash[2005]={0};\n\nint main()\n{\n long n,x,i,j;\n long max=0;\n \n scanf(\"%ld\",&n);\n for(;n;n--)\n   {\n    scanf(\"%ld\",&x);\n    hash[x]++;\n   }\n for(i=1000;i>=1;i--)\n   {\n    for(j=1000;j>=1;j--)\n      if(hash[j]==i)\n       {\n        max++;\n       }\n    if(max)\n     {\n      printf(\"%ld %ld\\n\",i,max);\n      return 0;\n     }\n   }\n \n return 0;\n}", "fixed": "#include <stdio.h>  \nlong hash[2005]={0};  int main() {  long n,x,i,j;  long max=0;  long s=0;    scanf(\"%ld\",&n);  for(;n;n--)    {     scanf(\"%ld\",&x);     hash[x]++;    }   for(i=1;i<=1000;i++)     if(hash[i])      s++;  for(i=1000;i>=1;i--)    {     for(j=1000;j>=1;j--)       if(hash[j]==i)        {         max++;        }     if(max)      {       printf(\"%ld %ld\\n\",i,s);       return 0;      }    }    return 0; }"}
{"similarity_score": 0.9932157394843962, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e1d64af96da7fe2481daec70ec6875b8", "bug_code_uid": "c58a492ba8a449b4ecf15f29480199e7", "src_uid": "f2142bc2f44e5d8b77f8561c29038a73", "apr_id": "0d00d242134e28ad374cfa3dd7766813", "difficulty": 1000, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint x,y,i,j,min=1;\n\tscanf(\"%d%d\",&x,&y);\n\tint a[x][y];\n\tfor(i=0;i<x;i++)\n\t\tfor(j=0;j<y;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\tfor(i=0;i<x;i++)\n\t\t{\n\t\t\tint flag=1,p=10000;\n\t\t\tfor(j=0;j<y;j++)\n\t\t\t{\n\t\t\t\tif(a[i][j]<=min)\n\t\t\t\t\tflag=0;\n\t\t\t\telse if (p>a[i][j])\n\t\t\t\t\tp=a[i][j];\n\t\t\t}\n\t\t\tif(flag==1)\n\t\t\t\tmin=p;\n\t\t}\n\t\tprintf(\"%d\\n\",min);\n\t\treturn 0;\n\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint x,y,i,j,min=1;\n\tscanf(\"%d%d\",&x,&y);\n\tint a[x][y];\n\tfor(i=0;i<x;i++)\n\t\tfor(j=0;j<y;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\tfor(i=0;i<x;i++)\n\t\t{\n\t\t\tint flag=1,p=1000000000;\n\t\t\tfor(j=0;j<y;j++)\n\t\t\t{\n\t\t\t\tif(a[i][j]<=min)\n\t\t\t\t\tflag=0;\n\t\t\t\telse if (p>a[i][j])\n\t\t\t\t\tp=a[i][j];\n\t\t\t}\n\t\t\tif(flag==1)\n\t\t\t\tmin=p;\n\t\t}\n\t\tprintf(\"%d\\n\",min);\n\t\treturn 0;\n\n}"}
{"similarity_score": 0.9950035688793719, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "bcbac7bd2727b053465be2eeaf7a3206", "bug_code_uid": "4e9ce9d2ee1901bc8395a07e45cb4afc", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "45421cf3b6163bedcbdaf5f7fff97da9", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,i,a,count1=0,count2=0,count3=0;\n    scanf(\"%ld\",&n);\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%ld\",&a);\n        if(a==1)\n            count1++;\n        else if(a==2)\n            count2++;\n        else if(a==3)\n            count3++;\n    }\n    if(count1>count2 && count1>count3)\n        printf(\"%ld\",n-count1);\n    else if(count2>count1 && count2>count3)\n        printf(\"%ld\",n-count2);\n    else if(count3>count1 && count3>count2)\n        printf(\"%ld\",n-count3);\n    else if(count1==count2 && count2==count3 && count3==count1)\n        printf(\"%ld\",n-count1);\n    else if(count1==count2 || count2==count3 || count3==count1)\n        printf(\"%ld\",n-1);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long int n,i,a,count1=0,count2=0,count3=0;\n    scanf(\"%ld\",&n);\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%ld\",&a);\n        if(a==1)\n            count1++;\n        else if(a==2)\n            count2++;\n        else if(a==3)\n            count3++;\n    }\n    if(count1>=count2 && count1>=count3)\n        printf(\"%ld\",n-count1);\n    else if(count2>=count1 && count2>=count3)\n        printf(\"%ld\",n-count2);\n    else if(count3>=count1 && count3>=count2)\n        printf(\"%ld\",n-count3);\n    else if(count1==count2 && count2==count3 && count3==count1)\n        printf(\"%ld\",n-count1);\n    else if(count1==count2 || count2==count3 || count3==count1)\n        printf(\"%ld\",n-1);\n}\n"}
{"similarity_score": 0.9473684210526315, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "94de08f2fd4b2c7372d2caa6f071e4be", "bug_code_uid": "6e14fc4910084b96f9e2ceab8b424d8e", "src_uid": "b9dacff0cab78595296d697d22dce5d9", "apr_id": "9765f5d9d6c39c99a95674e25bc19c77", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar name[21];\nchar lead[21];\nint plus,minus,a,b,c,d,e,pts=0;\nint max(int a,int b)\n{\n\treturn a>b?a:b;\n}\nint main()\n{\n\tint n,M=-1,i;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tpts=0;\n\t\tscanf(\"%s\",name);\n\t\tscanf(\"%d%d%d%d%d%d%d\",&plus,&minus,&a,&b,&c,&d,&e);\n\t\tpts=(plus*100)-(minus*50)+a+b+c+d+e;\n\t\t\n\t\tif(pts>M)\n\t\t{\n\t\t\tfor(i=0;i<21;i++)\n\t\t\tlead[i]=0;\n\t\t\tstrcpy(lead,name);\n\t\t\tM=pts;\n\t\t}\n\t}\n\tprintf(\"%s\\n\",lead);\n\treturn 0;\n}\t\t\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar name[21];\nchar lead[21];\nint plus,minus,a,b,c,d,e,pts=0;\n\nint main()\n{\n\tint n,M=-100000,i;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tpts=0;\n\t\tscanf(\"%s\",name);\n\t\tscanf(\"%d%d%d%d%d%d%d\",&plus,&minus,&a,&b,&c,&d,&e);\n\t\tpts=(plus*100)-(minus*50)+a+b+c+d+e;\n\t\t\n\t\tif(pts>M)\n\t\t{\n\t\t\tfor(i=0;i<21;i++)\n\t\t\tlead[i]=0;\n\t\t\tstrcpy(lead,name);\n\t\t\tM=pts;\n\t\t}\n\t}\n\tprintf(\"%s\\n\",lead);\n\treturn 0;\n}\t\t\t\n"}
{"similarity_score": 0.9101978691019786, "equal_cnt": 14, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 9, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "8897a8292c44c48ebfa2d290086b1c0f", "bug_code_uid": "e8703380bd9f3ba475aa30c3fb3a2016", "src_uid": "59154ca15716f0c1c91a37d34c5bbf1d", "apr_id": "1f8b60abf6f49615eb8209991f809209", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\u81f3\u5c11l,\u6700\u591ar\n//l<= ai <= r\n//a1+a2+...+an=sall\n//amax1+amax2+...+amaxk=sk\n//\u5206\u6210\u4e24\u4e2a\u6570\u7ec4\u6765\u5904\u7406\n//amax1+amax2+...+amaxk=sk\n//l<= ai <= r\n//amaxk+1...+amaxn=sn-sk\n//l<= ai <= r\n#include<stdio.h>\n#define N 1000\nint main() {\n    int n,k,l,r,sn,sk;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sn,&sk);\n    int a[N];\n    //\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u6700\u5927\u503c\u95ee\u9898\uff01\n    int average=(sn-sk)/(n-k);\n    int remain=sn-sk-average*(n-k);\n    int i;\n    for(i=0;i<n-k;i++){\n        a[i]=average;\n    }\n    //\u524dn-k\u4e2a\u662f\u8f83\u5c0f\u7684\u6570\n    for(i=0;i<n-k;i++){\n        if(remain>0){\n            a[i]++;\n            remain--;\n        }else{\n            break;\n        }\n    }\n    average=sk/k;\n    remain=sk-average*k;\n    for(i=n-k;i<n;i++){\n        a[i]=average;\n    }\n    //\u524dn-k\u4e2a\u662f\u8f83\u5c0f\u7684\u6570\n    for(i=n-k;i<n;i++){\n        if(remain>0){\n            a[i]++;\n            remain--;\n        }else{\n            break;\n        }\n    }\n    for(i=0;i<n;i++){\n        printf(\" %d\",a[i]);\n    }\n    printf(\"\\n\");\n\n\treturn 0;\n}\n", "fixed": "//\u81f3\u5c11l,\u6700\u591ar\n//l<= ai <= r\n//a1+a2+...+an=sall\n//amax1+amax2+...+amaxk=sk\n//\u5206\u6210\u4e24\u4e2a\u6570\u7ec4\u6765\u5904\u7406\n//amax1+amax2+...+amaxk=sk\n//l<= ai <= r\n//amaxk+1...+amaxn=sn-sk\n//l<= ai <= r\n#include<stdio.h>\n#define N 1000\nint main() {\n    int n,k,l,r,sn,sk;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sn,&sk);\n    int a[N];\n    //\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u6700\u5927\u503c\u95ee\u9898\uff01\n    int average;\n    int remain;\n    int i;\n    if(n!=k){\n        average=(sn-sk)/(n-k);\n        remain=sn-sk-average*(n-k);\n        for(i=0;i<n-k;i++){\n            a[i]=average;\n        }\n        //\u524dn-k\u4e2a\u662f\u8f83\u5c0f\u7684\u6570\n        for(i=0;i<n-k;i++){\n            if(remain>0){\n                a[i]++;\n                remain--;\n            }else{\n                break;\n            }\n        }\n    }\n    average=sk/k;\n    remain=sk-average*k;\n    for(i=n-k;i<n;i++){\n        a[i]=average;\n    }\n    //\u524dn-k\u4e2a\u662f\u8f83\u5c0f\u7684\u6570\n    for(i=n-k;i<n;i++){\n        if(remain>0){\n            a[i]++;\n            remain--;\n        }else{\n            break;\n        }\n    }\n    for(i=0;i<n;i++){\n        printf(\" %d\",a[i]);\n    }\n    printf(\"\\n\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9778672032193159, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "92e0df70ae95d536c04042d429e0ab1a", "bug_code_uid": "af182102419cc730bfa042855dc1f1cb", "src_uid": "1cfd0e6504bba7db9ec79e2f243b99b4", "apr_id": "c01cd627633d82fbbf4f761fbab293a2", "difficulty": 1200, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long a[100001];\n    char b[100001];\n    long n,i,j=1;\n    scanf(\"%li\",&n);\n    for(i=1;i<n+1;i++)\n    {\n        scanf(\"%li\", (a+i));\n        b[a[i]]=1;\n    }\n    for(i=1;i<n+1;i++)\n    {\n        if(b[a[i]]==2)\n        {\n            while(b[j]!=0) j++;\n            if(b[j]) break;\n            a[i]=j;\n        }\n        b[a[i]]=2;\n        printf(\"%li \", a[i]);\n    }\n\n\n                      //printf(\"%d\",b[a[2]]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long a[100001];\n    char b[100001];\n    long n,i,j=1;\n    scanf(\"%li\",&n);\n    for(i=1;i<n+1;i++)\n    {\n        scanf(\"%li\", (a+i));\n        b[a[i]]=1;\n    }\n    for(i=1;i<n+1;i++)\n    {\n        if((b[a[i]]==2)||(a[i]>n)||(a[i]<1))\n        {\n            while(b[j]!=0) j++;\n            if(b[j]) break;\n            a[i]=j;\n        }\n        b[a[i]]=2;\n        printf(\"%li \", a[i]);\n    }\n\n\n                      //printf(\"%d\",b[a[2]]);\n    return 0;\n}\n"}
{"similarity_score": 0.8451668092386655, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a2f86f08bfc21639bb54273625d242d7", "bug_code_uid": "0efc5bffe3f9645c81e2de17ee3b4904", "src_uid": "32855bb8ba33973178fde7c3d0beb2ce", "apr_id": "0cb20f1251eabd7fde902a96b147e4c9", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint dp[200];\r\nint main()\r\n{\r\n\tint t,n,k;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tmemset(dp,0,sizeof(dp));\r\n\t\tint i,j;\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&dp[i]);\r\n\t\t}\r\n\t\tfor(i=1;i<k;i++)\r\n\t\t{\r\n\t\t\tfor(j=1;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tif(dp[j]>=dp[j+1])\r\n\t\t\t\tcontinue;\r\n\t\t\t\telse if(dp[j]<dp[j+1])\r\n\t\t\t\t{\r\n\t\t\t\t\tdp[j]=dp[j]+1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tif(dp[i]>=dp[i+1])\r\n\t\t\tcontinue;\r\n\t\t\telse break;\r\n\t\t}\r\n\t\tif(i==n) printf(\"-1\\n\");\r\n\t\telse printf(\"%d\\n\",i);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint dp[200];\r\nint main()\r\n{\r\n\tint t,n;\r\n\tlong long k;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tmemset(dp,0,sizeof(dp));\r\n\t\tint i,j;\r\n\t\tscanf(\"%d%lld\",&n,&k);\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&dp[i]);\r\n\t\t}\r\n\t\tfor(i=1;i<k;i++)\r\n\t\t{\r\n\t\t\tfor(j=1;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tif(dp[j]>=dp[j+1])\r\n\t\t\t\tcontinue;\r\n\t\t\t\telse if(dp[j]<dp[j+1])\r\n\t\t\t\t{\r\n\t\t\t\t\tdp[j]=dp[j]+1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(j==n) break;\r\n\t\t}\r\n\t\tfor(i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tif(dp[i]>=dp[i+1])\r\n\t\t\tcontinue;\r\n\t\t\telse break;\r\n\t\t}\r\n\t\tif(i==n) printf(\"-1\\n\");\r\n\t\telse printf(\"%d\\n\",i);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9959016393442623, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a3968e413637b70d26fae90581a40c60", "bug_code_uid": "7f487295014f22c34d1741d034eaa2fc", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "b73c7fe8844f06f2c797079d9ced529d", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nvoid f1()\r\n{\r\n    int p;\r\n    scanf(\"%d\",&p);\r\n    printf(\"%d %d\",2,p-1);\r\n    return 0;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        f1();\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nvoid f1()\r\n{\r\n    int p;\r\n    scanf(\"%d\",&p);\r\n    printf(\"%d %d\\n\",2,p-1);\r\n    return 0;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        f1();\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9913151364764268, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5e84eca77e3c83b4d28ecd680e12950a", "bug_code_uid": "59f25fcb8226ed4cf8d2a580cd560f21", "src_uid": "5b99775142b4a28b6b1069367602448f", "apr_id": "bf5adae182c4b6c7876662601bcaa129", "difficulty": 1200, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    while(t>0){\n        int n;\n        scanf(\"%d\", &n);\n        int arr[n];\n        for(int i=0;i<n;i++){\n        scanf(\"%d\", &arr[i]);    \n        }\n        if(n==3 && arr[1]%2 !=0){\n            printf(\"-1\\n\");\n            t--;\n            continue;\n        }\n        int sum=0;\n        int case_count=0;\n        for(int i=1;i<n-1;i++){\n            if(arr[i]==1){\n               case_count++;\n            }\n        }\n        if(case_count == n-2){\n             printf(\"-1\\n\");\n                t--;\n                continue;\n        }\n        for(int i=1;i<n-1;i++){\n            if(arr[i]%2!=0){\n                arr[i] = arr[i]+1;\n            }\n            sum = sum+arr[i];\n        }\n        printf(\"%d\\n\", sum/2);\n        t=t-1;\n    }\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    while(t>0){\n        int n;\n        scanf(\"%d\", &n);\n        int arr[n];\n        for(int i=0;i<n;i++){\n        scanf(\"%d\", &arr[i]);    \n        }\n        if(n==3 && arr[1]%2 !=0){\n            printf(\"-1\\n\");\n            t--;\n            continue;\n        }\n        long long sum=0;\n        int case_count=0;\n        for(int i=1;i<n-1;i++){\n            if(arr[i]==1){\n               case_count++;\n            }\n        }\n        if(case_count == n-2){\n             printf(\"-1\\n\");\n                t--;\n                continue;\n        }\n        for(int i=1;i<n-1;i++){\n            if(arr[i]%2!=0){\n                arr[i] = arr[i]+1;\n            }\n            sum = sum+arr[i];\n        }\n        printf(\"%lld\\n\", sum/2);\n        t=t-1;\n    }\n}"}
{"similarity_score": 0.940959409594096, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7c73c0e9f133ec6feb5d42dc6bc6a35a", "bug_code_uid": "cf754224a4ed51ed297481b9a7a2ffd9", "src_uid": "c783eaf1bf7e4e7321406431030d5aab", "apr_id": "994c04174f56917833a7f0e1f822d910", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MIN(a,b) (((a)<(b))?(a):(b))\n#define MAX(a,b) (((a)>(b))?(a):(b))\n#include <stdlib.h>\n#include <stdint.h>\n#include <inttypes.h>\n#define UF64 SCNu64\n#define UF32 SCNu32\n#define UF16 SCNu16\n#define UF8 SCNu8\nint solve (int l1, int r1, int l2, int r2){\n\tif(l1 == l2) return l1;\n\tif(r1 > l2 && l2>l1){\n\t\treturn MAX(l1,l2);\n\t}\n\treturn l1+l2;\n}\nint main(){\n\tint count;\n\tscanf(\"%d\", &count);\n\twhile(count--){\n\t\tint l1,l2,r1,r2,ans=0;\n\t\tscanf(\"%d%d%d%d\", &l1,&r1,&l2,&r2);\n\t\tprintf(\"%d\\n\", solve(l1, r1, l2, r2));\n\t}\n}\n", "fixed": "#include <stdio.h>\n#define MIN(a,b) (((a)<(b))?(a):(b))\n#define MAX(a,b) (((a)>(b))?(a):(b))\n#include <stdlib.h>\n#include <stdint.h>\n#include <inttypes.h>\n#define UF64 SCNu64\n#define UF32 SCNu32\n#define UF16 SCNu16\n#define UF8 SCNu8\nint solve (int l1, int r1, int l2, int r2){\n\tif(l1 == l2) return l1;\n\tif(MAX(l1,l2) <= MIN(r1,r2)){\n\t\treturn MAX(l1,l2);\n\t}\n\treturn l1+l2;\n}\nint main(){\n\tint count;\n\tscanf(\"%d\", &count);\n\twhile(count--){\n\t\tint l1,l2,r1,r2,ans=0;\n\t\tscanf(\"%d%d%d%d\", &l1,&r1,&l2,&r2);\n\t\tprintf(\"%d\\n\", solve(l1, r1, l2, r2));\n\t}\n}\n"}
{"similarity_score": 0.9505347593582888, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "71cf782f9fbc719404588faea6014b9a", "bug_code_uid": "69c248397f533949289a2edada42898e", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "d12c51727903f6a3f1e0c5da153fdf15", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar str[100][10],string[100][10];\n\tint i,n,c[100],len=1,j,max=0,pos,pos1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<2;i++)\n\tc[i]=1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",str[i]);\n\t}\n\t/*for(i=0;i<n;i++)\n\tprintf(\"%s \",str[i]);*/\n\tstrcpy(string[0],str[0]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tint flag=0;\n\t\tfor(j=0;j<len;j++)\n\t\t{\n\t\t\tif(strcmp(str[i],string[j])==0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tc[j]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\tpos1=j;\n\t\t}\n\t\tif(flag==0)\n\t\t{\n\t\t\tstrcpy(string[pos1+1],str[i]);\n\t\t\tlen++;\n\t\t}\n\t}\n\t/*for(i=0;i<len;i++)\n\tprintf(\"%s \",string[i]);\n\tprintf(\"\\n\");\n\tfor(i=0;i<len;i++)\n\tprintf(\"%d \",c[i]);*/\n\tfor(i=0;i<len;i++)\n\t{\n\t\t //max=0;\n\t\tif(c[i]>max)\n\t\t{\n\t\tmax=c[i];\n\t\tpos=i;\n\t\t}\n\t}\n\tprintf(\"%s\\n\",string[pos]);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar str[101][11],string[101][11];\n\tint i,n,c[4],len=1,j,max=0,pos,pos1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<2;i++)\n\tc[i]=1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",str[i]);\n\t}\n\t/*for(i=0;i<n;i++)\n\tprintf(\"%s \",str[i]);*/\n\tstrcpy(string[0],str[0]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tint flag=0;\n\t\tfor(j=0;j<len;j++)\n\t\t{\n\t\t\tif(strcmp(str[i],string[j])==0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tc[j]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\tpos1=j;\n\t\t}\n\t\tif(flag==0)\n\t\t{\n\t\t\tstrcpy(string[pos1+1],str[i]);\n\t\t\tlen++;\n\t\t}\n\t}\n\t/*for(i=0;i<len;i++)\n\tprintf(\"%s \",string[i]);\n\tprintf(\"\\n\");\n\tfor(i=0;i<len;i++)\n\tprintf(\"%d \",c[i]);*/\n\tfor(i=0;i<len;i++)\n\t{\n\t\t //max=0;\n\t\tif(c[i]>max)\n\t\t{\n\t\tmax=c[i];\n\t\tpos=i;\n\t\t}\n\t}\n\tprintf(\"%s\\n\",string[pos]);\n\treturn 0;\n}"}
{"similarity_score": 0.9118541033434651, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "db392345e2dd70a036c8c2e027da9d02", "bug_code_uid": "3fce2b42c14f8cc78744c7736c7db6c1", "src_uid": "7785ed6f41dbd45f1a9432c2fb07d713", "apr_id": "71c55c0a732a090db339eecf256acb1f", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,m,a,sum,sun;\r\n    float x,y;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        int w[m];\r\n        sum=0;\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            scanf(\"%d\",w[j]);\r\n            sum=sum+w[j];\r\n        }\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            sun=sum;\r\n            x=1.00*(sun-w[j])/(m-1);\r\n            y=w[j]*1.00;\r\n            if(x==y)\r\n            {\r\n                a=1;\r\n                break;\r\n            }\r\n            else a=0;\r\n        }\r\n        if(a==1) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,a,b,sum,sun,x,y;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        int w[m];\r\n        sum=0;\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            scanf(\"%d\",&w[j]);\r\n            sum=sum+w[j];\r\n        }\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            sun=sum;\r\n            b=w[j];\r\n            x=(sun-w[j])/(m-1);\r\n            y=(sun-w[j])%(m-1);\r\n            if(y==0&&x==b)\r\n            {\r\n                a=1;\r\n                break;\r\n            }\r\n            else a=0;\r\n        }\r\n        if(a==1) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6406743940990516, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d20822c38fe80f57e041de31f85b758e", "bug_code_uid": "1af42b5e042ef71ac0929eade75575e2", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "0d860e45e565afbebacf66333713fff4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,i,j,n,k,f,c=0,sum;\n    scanf(\"%lld\\n\",&t);\n    for(f=0;f<t;f++)\n    {\n        scanf(\"%lld %lld\\n\",&n,&k);\n        sum=n;\n        for(j=0;j<k;j++)\n        {\n            c=0;\n        for(i=2;i<=n;i++)\n        {\n            if(n%i==0)\n               {\n                c++;\n               }\n\n            if(c==1)\n             {\n             n=n+i;\n             break;\n             }\n        }\n        }\n       printf(\"%lld\\n\",n);\n    }\n    return 0;\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,n,k,f,c=0;\n    scanf(\"%d\\n\",&t);\n    for(f=0;f<t;f++)\n    {\n        scanf(\"%d %d\\n\",&n,&k);\n        c=0;\n        for(i=2;i<=n;i++)\n        {\n            if(n%i==0)\n               {\n                c++;\n               }\n\n            if(c==1)\n             {\n             n=n+i;\n             break;\n             }\n        }\n       // n=n+((k-1)*2);\n       printf(\"%d\\n\",(n+((k-1)*2)));\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.9798488664987406, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d6dcce2b578c33d71c46f63dc2951278", "bug_code_uid": "4c7ba916b9cac3450bc0f88363fff8af", "src_uid": "64b597a47106d0f08fcfad155e0495c3", "apr_id": "aee1a5b72cf888c870d7d9656bb938c0", "difficulty": 900, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, s;\n\tint bob = 1;\n\tscanf(\"%d\", &n);\n    scanf(\"%d\", &s);\n\n    if (s == 1)\n    {\n        printf(\"YES\");\n        return 0;\n    }\n\n\tint a[n];\n\tint b[n];\n\n    int temp;\n\n\tfor (int i = 0; i < n; i++)\n\t{\n        scanf(\"%d\", &temp);\n\t\ta[i] = temp;\n\t}\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &temp);\n\t\tb[i] = temp;\n\t}\n\n    if (a[0] == 0) \n    {\n        printf(\"NO\");\n        return 0;\n    }\n\n    if (a[s-1] == 0 && b[s-1] == 0)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n    \n    if (a[s-1] == 1)\n    {\n        printf(\"YES\");\n        return 0;\n    }\n\n    for (int i = s; i < n; i++)\n    {\n        if (a[i] == 1 && b[i] == 1 && b[s-1] == 1)\n        {\n            printf(\"YES\");\n            return 0;\n        }\n    }\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n\nint main()\n{\n\tint n, s;\n\tint bob = 1;\n\tscanf(\"%d\", &n);\n    scanf(\"%d\", &s);\n\n    if (s == 1)\n    {\n        printf(\"YES\\n\");\n        return 0;\n    }\n\n\tint a[n];\n\tint b[n];\n\n    int temp;\n\n\tfor (int i = 0; i < n; i++)\n\t{\n        scanf(\"%d\", &temp);\n\t\ta[i] = temp;\n\t}\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &temp);\n\t\tb[i] = temp;\n\t}\n\n    if (a[0] == 0) \n    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n\n    if (a[s-1] == 0 && b[s-1] == 0)\n    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    \n    if (a[s-1] == 1)\n    {\n        printf(\"YES\\n\");\n        return 0;\n    }\n\n    for (int i = s; i < n; i++)\n    {\n        if (a[i] == 1 && b[i] == 1 && b[s-1] == 1)\n        {\n            printf(\"YES\\n\");\n            return 0;\n        }\n    }\n\n    printf(\"NO\\n\");\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9979296066252588, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e9c3bf90b70b85546b944a9291977c6e", "bug_code_uid": "d2a22bac3cf22ff17240a3969ab687d1", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "3382c7ce0116d5456203262d16990042", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h> \n\nmain (){\n\tint n,k,i,j,num;\n\tj = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i = 1; j <= k ;++i){\n\t\tj += i;\n\t};\n\t--i;\n\tj -= i;\n\tnum = k - j;\t\n\tfor (i = 1; i != (num + 1) ;++i){\n\t\tscanf(\"%d\", &j);\n\t};\n\tprintf(\"%d\",j);\n\treturn (0);\n}\n", "fixed": "#include <stdio.h> \n\nmain (){\n\tint n,k,i,j,num;\n\tj = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i = 1; j < k ;++i){\n\t\tj += i;\n\t};\n\t--i;\n\tj -= i;\n\tnum = k - j;\t\n\tfor (i = 1; i != (num + 1) ;++i){\n\t\tscanf(\"%d\", &j);\n\t};\n\tprintf(\"%d\",j);\n\treturn (0);\n}\n"}
{"similarity_score": 0.9523809523809523, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e6da3fccbbb761ea7c745e561f367de4", "bug_code_uid": "435b091c092102d232b4a0191be92c9e", "src_uid": "ca9d97e731e86cf8223520f39ef5d945", "apr_id": "b077e3a26ee40c336a6dda30dcdf4667", "difficulty": 1200, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint t,n,x,y,ar[55];\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint m=0,d;\n\t\tscanf(\"%d%d%d\",&n,&x,&y);\n\t\tm=n;\n\t\tif(n==2)\n\t\t\tprintf(\"%d %d\\n\",x,y);\n\t\telse\n\t\t{\n\t\t\tint i;\n\t\t\tfor( i=m-1;i>=2;i--)\n\t\t\t\tif((y-x)%i==0)\n\t\t\t\t{\n\t\t\t\t\td=(y-x)/i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(i<2)\n\t\t\t\td=y-x;\n\t\t\tint\tk=y/d;\n\t\t\tif(k>n-1) k=n-1;\n\t\t\tint a1=y-k*d;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tprintf(\"%d \",a1+i*d);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint t,n,x,y,ar[55];\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint m=0,d;\n\t\tscanf(\"%d%d%d\",&n,&x,&y);\n\t\tm=n;\n\t\tif(n==2)\n\t\t\tprintf(\"%d %d\\n\",x,y);\n\t\telse\n\t\t{\n\t\t\tint i;\n\t\t\tfor( i=m-1;i>=2;i--)\n\t\t\t\tif((y-x)%i==0)\n\t\t\t\t{\n\t\t\t\t\td=(y-x)/i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(i<2)\n\t\t\t\td=y-x;//\u7b49\u5dee\u6570\u5217\u516c\u5dee \n\t\t\tint\tk=y/d;\n\t\t\tif(k>n-1) k=n-1;\n\t\t\tint a1=y-k*d;\n\t\t\tif(!a1) a1=d;\n\t\t\t//else   a1=\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tprintf(\"%d \",a1+i*d);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}"}
{"similarity_score": 0.937037037037037, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "40c04273397d32cebf04d08b226ed46d", "bug_code_uid": "89edfc2686f9a8661aa909267999e420", "src_uid": "3aba4a129e24ca2f06f5f3ef13415b8b", "apr_id": "bbd9811cddb98a515c3a4b81c08c66a3", "difficulty": 1600, "tags": ["dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint x,y,n,m,z,i,j,sayac,bx,by,flag;\nchar B[10000][10000],A[10000][10000];\nvoid f(int x,int y)\n{\n\t\n\tif (flag==1) return;\n\tif (B[x][y]=='>') return;\n\tif (x<1 || x>n || y<1 || y>m) return;\n\tif (A[x][y]!='.') return;\n\tA[x][y]='1';\n\tB[x][y]='>';\n\tsayac--;\n\tif (sayac==z)\n\t{\n\t\tfor (i = 1; i <=n ; i++)\n\t\t{\n\t\t\tfor (j = 1; j <=m ; j++)\n\t\t\t{\n\t\t\t\tif (A[i][j]=='#')\n\t\t\t\t\tprintf(\"#\");\n\t\t\t\telse if (A[i][j]=='.')\n\t\t\t\t\tprintf(\"X\");\n\t\t\t\telse if (A[i][j]=='1')\n\t\t\t\t\tprintf(\".\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\t\n\t\tflag=1;\n\t\treturn;\n\t}\n\tf(x+1,y);\n\tf(x-1,y);\n\tf(x,y+1);\n\tf(x,y-1);\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&z);\n\tfor (i = 1; i <=n ; i++)\n\t\tfor (j = 1; j <=m ; j++)\n\t\t{\n\t\t\tscanf(\" %c\",&A[i][j]);\n\t\t\tif (A[i][j]=='.')\n\t\t\t{\n\t\t\t\tif (i==1)\n\t\t\t\t{\n\t\t\t\t\tbx=i;\n\t\t\t\t\tby=j;\n\t\t\t\t}\t\n\t\t\t\tsayac++;\n\t\t\t}\n\t\t}\n\tf(bx,by);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint x,y,n,m,z,i,j,sayac,bx,by,flag;\nchar B[10000][10000],A[10000][10000];\nvoid f(int x,int y)\n{\n\t\n\tif (flag==1) return;\n\tif (B[x][y]=='>') return;\n\tif (x<1 || x>n || y<1 || y>m) return;\n\tif (A[x][y]!='.') return;\n\tA[x][y]='1';\n\tB[x][y]='>';\n\tsayac--;\n\tif (sayac==z)\n\t{\n\t\tfor (i = 1; i <=n ; i++)\n\t\t{\n\t\t\tfor (j = 1; j <=m ; j++)\n\t\t\t{\n\t\t\t\tif (A[i][j]=='#')\n\t\t\t\t\tprintf(\"#\");\n\t\t\t\telse if (A[i][j]=='.')\n\t\t\t\t\tprintf(\"X\");\n\t\t\t\telse if (A[i][j]=='1')\n\t\t\t\t\tprintf(\".\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\t\n\t\tflag=1;\n\t\treturn;\n\t}\n\tf(x+1,y);\n\tf(x-1,y);\n\tf(x,y+1);\n\tf(x,y-1);\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&z);\n\tfor (i = 1; i <=n ; i++)\n\t\tfor (j = 1; j <=m ; j++)\n\t\t{\n\t\t\tscanf(\" %c\",&A[i][j]);\n\t\t\tif (A[i][j]=='.')\n\t\t\t{\n\t\t\t\tbx=i;\n\t\t\t\tby=j;\t\n\t\t\t\tsayac++;\n\t\t\t}\n\t\t}\n\tf(bx,by);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9982300884955753, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "50e24dbbe4ba2ac36496906667f72de1", "bug_code_uid": "113659a6b1a9c0e3b6aff2d3dbd2b136", "src_uid": "753113fa5130a67423f2e205c97f8017", "apr_id": "452d0ea737b1b7be5fb9a5ea1c7cf772", "difficulty": 900, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar a[n][10],b[n][10];\n\t\tfor(int j=0;j<n;j++){\n\t\t\tscanf(\"%s%s\",a[j],b[j]);\n\t\t}\n\tfor(int i=0;i<4;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tif(i==0){\n\t\t\t\tif(b[j][0]=='r'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i==1){\n\t\t\t\tif(b[j][0]=='w'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t\t\tif(b[j][0]=='c'&&b[j][1]=='h'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i==2){\n\t\t\t\tif(b[j][0]=='m'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i==3){\n\t\t\t\tif(b[j][0]=='c'&&b[j][1]=='a'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar a[n][20],b[n][10];\n\t\tfor(int j=0;j<n;j++){\n\t\t\tscanf(\"%s%s\",a[j],b[j]);\n\t\t}\n\tfor(int i=0;i<4;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tif(i==0){\n\t\t\t\tif(b[j][0]=='r'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i==1){\n\t\t\t\tif(b[j][0]=='w'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t\t\tif(b[j][0]=='c'&&b[j][1]=='h'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i==2){\n\t\t\t\tif(b[j][0]=='m'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i==3){\n\t\t\t\tif(b[j][0]=='c'&&b[j][1]=='a'){\n\t\t\t\t\tprintf(\"%s\\n\",a[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}"}
{"similarity_score": 0.9786476868327402, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7cc9e4e2e64d9a74f45fd47ffbee6784", "bug_code_uid": "4706b10a197b79eabcb83aadf16d5090", "src_uid": "0c7a476716445c535a61f4e81edc7f75", "apr_id": "3657f7e2a1152545ede0911644a8b4ed", "difficulty": 1400, "tags": ["binary search", "geometry", "ternary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n;\n    float s,y,b;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        y=(float)(n);\n        b=tan(3.1416/(2*y));\n        s=((2*y)/(4*b))/(0.5*y);\n        printf(\"%f\\n\",s);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n;\n    float s,y,b;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        y=(float)(n);\n        b=(float)tan(3.141592654/(2*y));\n        s=((2*y)/(4*b))/(0.5*y);\n        printf(\"%f\\n\",s);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9042709867452136, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "1f173e1521be60e52d474edb42a26eef", "bug_code_uid": "844dc068c56f817c7658cbf588d69c34", "src_uid": "3a767b3040f44e3e2148cdafcb14a241", "apr_id": "f5689466e22feb94e50e87d6de39a7a3", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,i,j,a[100000];\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tif(a[1]%2==0){\n\t\tj=1;\n\t\tprintf(\"1\");\n\t}\n\telse{\n\t\tj=2;\n\t\tprintf(\"2\");\n\t}\n\tfor(i=2;i<=n;i++){\n\t\tif(a[i]%2==0){\n\t\t\tj++;\n\t\t\tj=j%2;\n\t\t\tif(j==0){\n\t\t\t\tj=2;\n\t\t\t}\n\t\t\tprintf(\"%d\",j);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%d\",j);\n\t\t}\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n,i,j,a[100000];\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tif(a[1]%2==0){\n\t\tj=1;\n\t\tprintf(\"1\\n\");\n\t}\n\telse{\n\t\tj=2;\n\t\tprintf(\"2\\n\");\n\t}\n\tfor(i=2;i<=n;i++){\n\t\tif(a[i]%2==0){\n\t\t\tj++;\n\t\t\tj=j%2;\n\t\t\tif(j==0){\n\t\t\t\tj=2;\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",j);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%lld\\n\",j);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.7677543186180422, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9b40e6743eb576e6c21639be1d75cd60", "bug_code_uid": "587d3a239ce364080efc049632d98abe", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "afec2a0c7638a1eb9ac4b6e1037249c9", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n\tint n,l,i,j,m;\n\tint a[1000];\n\tint b[1000];\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tscanf(\"%d\",&m);\n\tfor (i=0;i<m;i++){\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tl=0;\n\tfor (i=0;i<n;i++){\n\t\tfor (j=0;j<m;j++){\n\t\t\tif (a[i]!=0 && b[j]!=0 && abs(a[i]-b[j])<=1){\n\t\t\t\ta[i]=0;\n\t\t\t\tb[j]=0;\n\t\t\t\tl=l+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n\tint n,l,i,j,m,t;\n\tint a[1000];\n\tint b[1000];\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tscanf(\"%d\",&m);\n\tfor (i=0;i<m;i++){\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tfor (i=n-1;i>=0;i--){\n\t\tfor (j=0;j<i;j++){\n\t\t\tif (a[j]>a[j+1]){\n\t\t\t\tt=a[j];\n\t\t\t\ta[j]=a[j+1];\n\t\t\t\ta[j+1]=t;\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=m-1;i>=0;i--){\n\t\tfor (j=0;j<i;j++){\n\t\t\tif (b[j]>b[j+1]){\n\t\t\t\tt=b[j];\n\t\t\t\tb[j]=b[j+1];\n\t\t\t\tb[j+1]=t;\n\t\t\t}\n\t\t}\n\t}\n\tl=0;\n\tfor (i=0;i<n;i++){\n\t\tfor (j=0;j<m;j++){\n\t\t\tif (a[i]!=0 && b[j]!=0 && abs(a[i]-b[j])<=1){\n\t\t\t\ta[i]=0;\n\t\t\t\tb[j]=0;\n\t\t\t\tl=l+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7927461139896373, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c150e0e583ad14227b685e4de384c5c3", "bug_code_uid": "c893eb1625c1f18f7182c218a751f76d", "src_uid": "2bb893703cbffe9aeaa0bed02f42a05c", "apr_id": "a4750fc01b06fd400fcc4932706b1c46", "difficulty": 1300, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int i,j,n;\n\tscanf(\"%lld\",&n);\n\tlong long int a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n        while(a[i]%2==0)\n        {\n            a[i]=s[i]/2;\n        }\n        while(s[i]%3==0)\n        {\n            s[i]=s[i]/3;\n        }\n\t}\n\tfor(i=1;i<n;i++)\n\t\tif(s[i]!=s[0]){\n\t\t\tprintf(\"No\");\n\t\t\treturn 0;\n\t\t}\n        printf(\"Yes\\n\");\n\t\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int i,j,n;\n\tscanf(\"%lld\",&n);\n\tlong long int a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n        while(a[i]%2==0)\n        {\n            a[i]=a[i]/2;\n        }\n        while(a[i]%3==0)\n        {\n            a[i]=a[i]/3;\n        }\n\t}\n\tfor(i=1;i<n;i++)\n\t\tif(a[i]!=a[0]){\n\t\t\tprintf(\"No\");\n\t\t\treturn 0;\n\t\t}\n        printf(\"Yes\");\n\t\treturn 0;\n}\n"}
{"similarity_score": 0.6493055555555556, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9b87e532fb0136d37eb3f1956a1d7b8f", "bug_code_uid": "bcde3bada86c91597811e1517ce250a2", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "6a3346f1e10cb7b3b9d62850e6cf81ea", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a,b,i,d,sum;\n    sum=0;\n    scanf(\"%d %d\",&a,&b);\n    int ara[1000];\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n\n    for(i=0; i<a; i++)\n    {\n        sum=sum+ara[i];\n    }\n    if(sum==0)\n    {\n        printf(\"%d\",sum);\n        return 0;\n    }\n    {\n        for(i=b; i>0; i--)\n        {\n            d=sum/i;\n             if(d<0){\n                    d=-1*(d);\n                }\n            if(sum%i==0)\n            {\n\n                printf(\"%d\",d);\n                return 0;\n            }\n\n        }\n\n\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a,b,i,d,sum,count,j,k;    sum=0;\n    count=0;\n\n    scanf(\"%d %d\",&a,&b);\n    int ara[1000];\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }{\n\n    for(i=0; i<a; i++)\n    {\n        sum=sum+ara[i];\n    }\n    if(sum==0)\n    {\n        printf(\"%d\",sum);\n        return 0;\n    }\n    for(i=b;i>0;i--){\n    k=sum/i;\n    sum=sum%i;\n\ncount=count+k;\nif(sum==0){\n    break;\n}\nelse{\n    continue;\n}\n\n    }\n}\nif(count<0){\n    count=-1*count;\n    printf(\"%d\",count);\n}\nelse{\nprintf(\"%d\",count);\n}\n}\n"}
{"similarity_score": 0.44885945548197204, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "97b6ff7bc31c410b249a3e1e70ef49da", "bug_code_uid": "1991418fd30754238679b78f66d83ff8", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "33796c1664b30e19dc7a8bf8b2528b09", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n   int total=0,sumofdigit=0,times=0,i;\n   char num[100100];\n   \n   while(scanf(\" %c\",&num[total]) == 1)/*\u8f38\u5165\u6578\u5b57\u7684\u5b57\u4e32,total\u6700\u5f8c\u70ba\u5b57\u4e32\u9577\u5ea6*/\n      total++;\n   num[total]=0;\n   if(total == 1)\n      printf(\"0\");\n   else\n   {\n      do\n      {\n         for(i=0;i<total;i++)\n         {\n            sumofdigit+=num[total]-'0';\n         }\n         times++;\n      }\n      while(sumofdigit>9);\n      printf(\"%d\",times);\n   }\n}\n/****** PCCA -Tue Oct 18 12:00:35 GMT 2011 *******/", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n   int total=0,sumofdigit1=0,sumofdigit2=0,times=0,i;\n   char num[100100];\n   \n   scanf(\" %s\",num);/*\u8f38\u5165\u6578\u5b57\u7684\u5b57\u4e32,total\u6700\u5f8c\u70ba\u5b57\u4e32\u9577\u5ea6*/\n   total=strlen(num);\n   \n   if(total == 1)\n      printf(\"0\");\n   else\n   {\n      do\n      {\n         if(times == 0)\n         {\n            for(i=0;i<total;i++)\n            {\n               sumofdigit1+=num[i]-'0';\n               /*printf(\"%d\\n\",sumofdigit);*/\n            }\n         }\n         else\n         {\n            while(sumofdigit1 != 0)\n            {\n               sumofdigit2+=sumofdigit1%10;\n               sumofdigit1/=10;\n            }\n            sumofdigit1=sumofdigit2;\n            sumofdigit2=0;\n         }\n         times++;\n      }\n      while(sumofdigit1>9);\n      printf(\"%d\",times);\n   }\n   \n   /*system(\"pause\");*/\n   return 0;\n}\n/****** PCCA -Tue Oct 18 12:19:18 GMT 2011 *******/"}
{"similarity_score": 0.7302100161550888, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "f0d52e8993b69c64740bb28edd1a603b", "bug_code_uid": "d6ee1bf68ffe9c236eec82ee965a3ce9", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "e4730e4dac19062c04b9390edc0e0a33", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,n,str[100001],temp=0,total=0,a1=1,a2=0,a3=0;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tint temp=0,a1=1,a2=0,a3=0,t=1;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&str[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(str[0]==50||str[0]==100)\n\t\t\t{\n\t\t\t\ttemp=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(str[i+1]==25)\n\t\t\t\t{\n\t\t\t\t\t++a1;\n\t\t\t\t}\n\t\t\t\telse if(str[i+1]==50)\n\t\t\t\t{\n\t\t\t\t\t++a2;\n\t\t\t\t}\n\t\t\t\telse if(str[i+1]==100)\n\t\t\t\t{\n\t\t\t\t\t++a3;\n\t\t\t\t}\n\t\t\t\tif((a1-a2<0))\n\t\t\t\t{\n\t\t\t\t\ttemp=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(a1<=3*t&&a3>=t)\n\t\t\t\t{\n\t\t\t\t\ttemp=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(temp==-1)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,str[100001];\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tint a1=0,a2=0,a3=0,i,temp=0;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&str[i]);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(str[0]==50||str[0]==100)\n\t\t\t{\n\t\t\t\ttemp=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(str[i]==25)\n\t\t\t\t\t++a1;\n\t\t\t\telse if(str[i]==50)\n\t\t\t\t{\n\t\t\t\t\t++a2;\n\t\t\t\t\t--a1;\n\t\t\t\t}\n\t\t\t\telse if(str[i]==100)\n\t\t\t\t{\n\t\t\t\t\tif(a2==0)\n\t\t\t\t\t\ta1-=3;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t--a1;\n\t\t\t\t\t\t--a2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(a1<0)\n\t\t\t\t{\n\t\t\t\t\ttemp=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(temp==-1)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9669771380186283, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "dbe5ea3b97f14464231bf705adc14209", "bug_code_uid": "9efabb5023ac1675597bbaf77aafc1c2", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "28af16141b1644ae6c1965b3c0649219", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n   printf(\" Enter the number of forces \");\n   int n;\n    do{\n    scanf(\"%d\",&n);\n    }while (n<1 || n>100);\n   int arr[n][3];\n   int i,j;\n   for(i=0;i<=n-1;i++){\n    for(j=0;j<=2;j++){\n            do{\n        scanf(\"%d\\t\",&arr[i][j]);\n            }while(arr[i][j]<-100 || arr[i][j]>100);\n    }\n   }\n   int sumx=0;\n   int sumy=0;\n   int sumz=0;\n   for(i=0;i<=n-1;i++){\n    sumx+=arr[i][0];\n    sumy+=arr[i][1];\n    sumz+=arr[i][2];\n   }\n   if (sumx==0 && sumy==0 && sumz==0)\n    printf(\"YES\");\n   else\n    printf(\"NO\");\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n   \n   int n;\n    do{\n    scanf(\"%d\",&n);\n    }while (n<1 || n>100);\n   int arr[n][3];\n   int i,j;\n   for(i=0;i<=n-1;i++){\n    for(j=0;j<=2;j++){\n            do{\n        scanf(\"%d\\t\",&arr[i][j]);\n            }while(arr[i][j]<-100 || arr[i][j]>100);\n    }\n   }\n   int sumx=0;\n   int sumy=0;\n   int sumz=0;\n   for(i=0;i<=n-1;i++){\n    sumx+=arr[i][0];\n    sumy+=arr[i][1];\n    sumz+=arr[i][2];\n   }\n   if (sumx==0 && sumy==0 && sumz==0)\n    printf(\"YES\");\n   else\n    printf(\"NO\");\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.7879464285714286, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "79ee8a8d7f25396c596545a2fdc71ab5", "bug_code_uid": "04f34d02531b154e1c010359677319b2", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "c7b6f8c008c041d1486af8a1a2365a54", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong cl[200000];\nint main()\n{\n    long n,m,a[100000],b[100000],i,l;\n    __int64 v=0,p=0;\n    scanf(\"%ld\",&n);\n    for (i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n    scanf(\"%ld\",&m);\n    for (i=0;i<m;i++)\n    {\n        scanf(\"%ld\",&b[i]);\n        if (!cl[b[i]])\n        {\n            for (l=0;l<n;l++)\n                if (a[l]==b[i])\n                    break;\n            cl[b[i]]=l;\n        }\n        v+=cl[b[i]]+1;\n        p+=n-cl[b[i]];\n    }\n    printf(\"%I64d %I64d\",v,p);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nlong cl[200000];\nint main()\n{\n    long n,m,a[100000],b[100000],i;\n    __int64 v=0,p=0;\n    scanf(\"%ld\",&n);\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        cl[a[i]]=i;\n    }\n    scanf(\"%ld\",&m);\n    for (i=0;i<m;i++)\n    {\n        scanf(\"%ld\",&b[i]);\n        v+=cl[b[i]]+1;\n        p+=n-cl[b[i]];\n    }\n    printf(\"%I64d %I64d\",v,p);\n    return 0;\n}\n"}
{"similarity_score": 0.5853658536585366, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "29bb4c935787c812402a418511629244", "bug_code_uid": "4e2b08a4af79bbe5eae25b07789da760", "src_uid": "0ff4ac859403db4e29554ca7870f5490", "apr_id": "593070bdb8756b52fa5ad4f8bd1901c2", "difficulty": 1300, "tags": ["number theory", "*special", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,p=0,k=0,m=0,x=0;\n    scanf(\"%I64D\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n        p=p+a[i];\n    for(i=0;i<n;i=i+2)\n        k=k+a[i];\n m=p-k;\nx= k>=m?(k>p?k:p):(m>p?m:p);\nif(n>=6)\n        printf(\"%d\",x);\nelse\n    printf(\"%d\",p);\nreturn(0);\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,j,i,p=0,k=0,m=0;\n    scanf(\"%I64D\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n        p=p+a[i];\n    for(i=0;i<n;i=i++)\n       {\n\n        if(n/(i+1)>=3&&n%(i+1)==0)\n            for(j=0;j<i+1;j++)\n           {\n\n            for(k=j;k<n;k=k+i+1)\n            m=m+a[k];\n        if(m>p)\n            p=m;\n            m=0;}}\nprintf(\"%d\",p);\n\nreturn(0);\n}\n\n"}
{"similarity_score": 0.9990029910269193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "061f62f77d7231a421179ba0da05b975", "bug_code_uid": "b963912dc63f91ca2c74463bc7f5a636", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "c468dc4a6baf15354068e0b336124491", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint a1[100001];\nchar b[100001];\nint main()\n{\n    int f;\n    int i=0;\n    int j=0;\n    scanf(\"%s\",b);\n    int l=strlen(b);\n    int g=0;\n    j=1;\n   for(g=1;g<l;g++)\n    {\n\n        if(b[g]==b[g-1])\n        {\n            a1[j]=a1[j-1]+1;\n\n        }\n        else\n        {\n        a1[j]=a1[j-1];\n        }\n        j++;\n    }\n    int t;\n    int t1;\n    int t2;\nscanf(\"%d\",&t);\nfor(i=0;i<=t;i++)\n{\n   scanf(\"%d %d\",&t1,&t2);\n    printf(\"%d\\n\",a1[t2-1]-a1[t1-1]);\n}\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint a1[100001];\nchar b[100001];\nint main()\n{\n    int f;\n    int i=0;\n    int j=0;\n    scanf(\"%s\",b);\n    int l=strlen(b);\n    int g=0;\n    j=1;\n   for(g=1;g<l;g++)\n    {\n\n        if(b[g]==b[g-1])\n        {\n            a1[j]=a1[j-1]+1;\n\n        }\n        else\n        {\n        a1[j]=a1[j-1];\n        }\n        j++;\n    }\n    int t;\n    int t1;\n    int t2;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{\n   scanf(\"%d %d\",&t1,&t2);\n    printf(\"%d\\n\",a1[t2-1]-a1[t1-1]);\n}\n}\n\n\n"}
{"similarity_score": 0.9842829076620825, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b06829804cc2085f53061a23335ece5c", "bug_code_uid": "7f995efed86d9cdadd7113c0c3f99b8b", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "748f25eb7def6fde961c68147216fdab", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char a[1005];\n    scanf(\"%s\",a);\n    int k,n,i,x,j,y;\n    scanf(\"%d\",&k);\n    n=strlen(a);x=n%k;y=n/k;\n    if(x!=0)\n    {\n        printf(\"NO\");return 0;\n    }\n    j=0;\n    while(k!=0)\n    {\n        for(i=j;i<j+(y/2);i++)\n        {\n            if(a[i]!=a[j+(y)-1-i])\n            {\n                printf(\"NO\");\n                return 0;\n            }\n        }\n        j=j+y;\n    }\n    printf(\"YES\");\n\n\n\n\n\n\n\n\n\n   return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char a[1005];\n    scanf(\"%s\",a);\n    int k,n,i,x,j,y;\n    scanf(\"%d\",&k);\n    n=strlen(a);x=n%k;y=n/k;\n    if(x!=0)\n    {\n        printf(\"NO\");return 0;\n    }\n    j=0;\n    while(k!=0)\n    {\n        for(i=j;i<j+(y/2);i++)\n        {\n            if(a[i]!=a[j+(y)-1-i+j])\n            {\n                printf(\"NO\");\n                return 0;\n            }\n        }\n        k--;\n        j=j+y;\n    }\n    printf(\"YES\");\n\n\n\n\n\n\n\n\n\n   return 0;\n\n}"}
{"similarity_score": 0.9693023255813954, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f00f2ddc7b4902cc57718c62731a82a5", "bug_code_uid": "41c59713cd413733fda3760947d57397", "src_uid": "c0ad2a6d14b0c9e09af2221d88a34d52", "apr_id": "57ba6eadeb68695f54ee9a9d8e0fa7a8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int r, b, d;\r\n        scanf(\"%d\", &r);\r\n        scanf(\"%d\", &b);\r\n        scanf(\"%d\", &d);\r\n        if (r == b)\r\n            printf(\"Yes\\n\");\r\n        if (r > b)\r\n        {\r\n            int diff = 0;\r\n            if(r%b==0)\r\n            diff = r / b - 1;\r\n            else\r\n            diff = r / b;\r\n            // printf(\"%f\",diff);\r\n            // diff = ceil(diff) - 1;\r\n            // printf(\"%f\",diff);\r\n            if (diff > d)\r\n                printf(\"No\\n\");\r\n            else\r\n                printf(\"Yes\\n\");\r\n        }\r\n         if (r < b)\r\n        {\r\n            int diff = 0;\r\n            if(r%b==0)\r\n            diff = b / r - 1;\r\n            else\r\n            diff = b / r;\r\n            // printf(\"%f\",diff);\r\n            // diff = ceil(diff) - 1;\r\n            // printf(\"%f\",diff);\r\n            if (diff > d)\r\n                printf(\"No\\n\");\r\n            else\r\n                printf(\"Yes\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int r, b, d;\r\n        scanf(\"%d\", &r);\r\n        scanf(\"%d\", &b);\r\n        scanf(\"%d\", &d);\r\n        if (r == b)\r\n            printf(\"Yes\\n\");\r\n        if (r > b)\r\n        {\r\n            int diff = 0;\r\n            if(r%b==0)\r\n            diff = (r / b) - 1;\r\n            else\r\n            diff = r / b;\r\n            // printf(\"%f\",diff);\r\n            // diff = ceil(diff) - 1;\r\n            // printf(\"%f\",diff);\r\n            if (diff > d)\r\n                printf(\"No\\n\");\r\n            else\r\n                printf(\"Yes\\n\");\r\n        }\r\n         if (r < b)\r\n        {\r\n            int diff = 0;\r\n            if(b%r==0)\r\n            diff = (b / r) - 1;\r\n            else\r\n            diff = b / r;\r\n            // printf(\"%f\",diff);\r\n            // diff = ceil(diff) - 1;\r\n            // printf(\"%f\",diff);\r\n            if (diff > d)\r\n                printf(\"No\\n\");\r\n            else\r\n                printf(\"Yes\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.996039603960396, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "bbc3dceeb0a4d53a99c85bb72b6041d4", "bug_code_uid": "b15fe9017172a5826d2d6187627fbf02", "src_uid": "04fd1a55027cce56a491b984ce3a1d6d", "apr_id": "d97d6594abb6c94186401bd64a86a0d7", "difficulty": 1700, "tags": ["greedy", "graphs", "constructive algorithms", "dsu", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n#define min(A, B) ((A)<(B)?(A):(B))\n#define max(A, B) ((A)>(B)?(A):(B))\n\nint p[200000], low[200000], high[200000], size[200000];\n\nint get_p(int a){\n\tif(p[a]==a) return a;\n\treturn p[a]=get_p(p[a]);\n}\n\nint main(){\n\tint n, m, i, u, v, st=0, j;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(i=0;i<n;++i){\n\t\tlow[i]=high[i]=p[i]=i;\n\t\tsize[i]=1;\n\t}\n\tfor(i=0;i<m;++i){\n\t\tscanf(\"%d %d\", &u, &v);\n\t\t--u; --v;\n\t\tif(get_p(u)!=get_p(v)){\n\t\t\tsize[get_p(u)]+=size[get_p(v)];\n\t\t\tlow[get_p(u)]=min(low[get_p(v)], low[get_p(u)]);\n\t\t\thigh[get_p(u)]=max(high[get_p(v)], high[get_p(u)]);\n\t\t\tp[get_p(v)]=p[get_p(u)];\n\t\t}\n\t}\n\tfor(i=0;i<n;++i){\n\t\tif(size[get_p(i)]!=high[get_p(i)]-low[get_p(i)]+1){\n\t\t\tfor(j=1;i+j<high[get_p(i)];++j){\n\t\t\t\tif(get_p(i)!=get_p(i+j)){\n\t\t\t\t\t++st;\n\t\t\t\t\tsize[get_p(i)]+=size[get_p(j)];\n\t\t\t\t\tlow[get_p(i)]=min(low[get_p(j)], low[get_p(i)]);\n\t\t\t\t\thigh[get_p(i)]=max(high[get_p(j)], high[get_p(i)]);\n\t\t\t\t\tp[get_p(j)]=p[get_p(i)];\n\t\t\t\t}\n\t\t\t}\n\t\t\ti=high[get_p(i)];\n\t\t}\n\t}\n\tprintf(\"%d\\n\", st);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\n#define min(A, B) ((A)<(B)?(A):(B))\n#define max(A, B) ((A)>(B)?(A):(B))\n\nint p[200000], low[200000], high[200000], size[200000];\n\nint get_p(int a){\n\tif(p[a]==a) return a;\n\treturn p[a]=get_p(p[a]);\n}\n\nint main(){\n\tint n, m, i, u, v, st=0, j;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(i=0;i<n;++i){\n\t\tlow[i]=high[i]=p[i]=i;\n\t\tsize[i]=1;\n\t}\n\tfor(i=0;i<m;++i){\n\t\tscanf(\"%d %d\", &u, &v);\n\t\t--u; --v;\n\t\tif(get_p(u)!=get_p(v)){\n\t\t\tsize[get_p(u)]+=size[get_p(v)];\n\t\t\tlow[get_p(u)]=min(low[get_p(v)], low[get_p(u)]);\n\t\t\thigh[get_p(u)]=max(high[get_p(v)], high[get_p(u)]);\n\t\t\tp[get_p(v)]=p[get_p(u)];\n\t\t}\n\t}\n\tfor(i=0;i<n;++i){\n\t\tif(size[get_p(i)]!=high[get_p(i)]-low[get_p(i)]+1){\n\t\t\tfor(j=1;i+j<high[get_p(i)];++j){\n\t\t\t\tif(get_p(i)!=get_p(i+j)){\n\t\t\t\t\t++st;\n\t\t\t\t\tsize[get_p(i)]+=size[get_p(i+j)];\n\t\t\t\t\tlow[get_p(i)]=min(low[get_p(i+j)], low[get_p(i)]);\n\t\t\t\t\thigh[get_p(i)]=max(high[get_p(i+j)], high[get_p(i)]);\n\t\t\t\t\tp[get_p(i+j)]=p[get_p(i)];\n\t\t\t\t}\n\t\t\t}\n\t\t\ti=high[get_p(i)];\n\t\t}\n\t}\n\tprintf(\"%d\\n\", st);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9961389961389961, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d6b5ce33e539358e9ecaa40ce41f620f", "bug_code_uid": "2efd84e9d89e7b0a0be167fbd0594311", "src_uid": "b4b69320c6040d2d264ac32e9ba5196f", "apr_id": "d26625f8ee13a20851787c54ac18b774", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint dist(int,int,int);\nint main()\n{\n   int n;\n    double k;\n    double a;\n    double b=0;\n   double i=0;\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        scanf(\"%lf\",&a);\n        if(a==499993)\n        {\n            printf(\"41664916690999888\\n\");\n            n--;\n            continue;\n        }\n        k=(a+1)/2;\n        i=(k-1)*(k-1)*k;\n        i=i/2;\n        b=b+i;\n        i=(k-2)*(k-1)*(2*k-3);\n        i=i/12;\n        b=b+i;\n        i=(k-2)*(k-1);\n        i=i/4;\n        b=b+i;\n        i=(k-1)*k;\n        i=i/2;\n        b=b+i;\n        printf(\"%lf\\n\",4*b);\n        b=0;\n        n--;\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint dist(int,int,int);\nint main()\n{\n   int n;\n    double k;\n    double a;\n    double b=0;\n   double i=0;\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        scanf(\"%lf\",&a);\n        if(a==499993)\n        {\n            printf(\"41664916690999888\\n\");\n            n--;\n            continue;\n        }\n        k=(a+1)/2;\n        i=(k-1)*(k-1)*k;\n        i=i/2;\n        b=b+i;\n        i=(k-2)*(k-1)*(2*k-3);\n        i=i/12;\n        b=b+i;\n        i=(k-2)*(k-1);\n        i=i/4;\n        b=b+i;\n        i=(k-1)*k;\n        i=i/2;\n        b=b+i;\n        printf(\"%0.0f\\n\",4*b);\n        b=0;\n        n--;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8548644338118022, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "95bc678b78a572cb7fbd9840bacff232", "bug_code_uid": "eb627dbb5a9275cd80aeae2b2f48a827", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "4c032129ef7cf992a751ac37a6a97fb4", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n    int q, a, b, c;\n    scanf(\"%d\", &q);\n\n    for (int i=0; i<q; i++){\n      long long a, b, c;\n      scanf(\"%lld %lld %lld\", &a, &b, &c);\n\n      if (c>=abs(b-a)) printf(\"%lld\", (a+b+c)/2);\n      else if(a>b)printf(\"%lld\", b +c);\n      else printf(\"%lld\", a +c);\n\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n    int q, a, b, c;\n    scanf(\"%d\", &q);\n\n    for (int i=0; i<q; i++){\n      long long a, b, c;\n      scanf(\"%lld %lld %lld\", &a, &b, &c);\n\n       printf(\"%lld\\n\", (a+b+c)/2);\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.43756243756243757, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c5750c951cb95ba5084785b7c257b901", "bug_code_uid": "05aaea787c6a80799b81a47c680c48eb", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "4ff34275440a614b2a53cdd2fe024524", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int m[n],c[n],ml=0,cl=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&m[i],&c[i]);\n    }\n    for(i=0;i<n;i++){\n        if(m[i]>c[i]){\n            ml=ml+1;\n        }else if(c[i]>m[i]){\n            cl=cl+1;\n        }else{\n            ml=ml+1;\n            cl=cl+1;\n        }\n    }\n    if(ml > cl){\n        printf(\"Mishka\");\n    }else if(cl>ml){\n        printf(\"Chris\");\n    }else{\n        printf(\"Fiendship is magic!\"^^);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n],b[n],m=0,c=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]>b[i]){\n            m=m+1;\n        }else if(b[i]>a[i]){\n            c=c+1;\n        }else{\n            m=m+1;\n            c=c+1;\n        }\n    }\n    if(m > c){\n        printf(\"Mishka\");\n    }else if(c>m){\n        printf(\"Chris\");\n    }else{\n        printf(\"Friendship is magic!^^\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9066666666666666, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1fddfd99ec9beb5272eb29b5a9f580d1", "bug_code_uid": "7e75a237944ac1820df3b24865caddf9", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "ed8ecd2ba75e61d8df56cf85179860f9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid main (void)\n{\n\tint n,p,q;\n\tint y=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=0 ; i<n ;i++)\n\t{\n\t\tscanf(\"%d %d\",&p,&q);\n\t\tif (q-p>=2)\n\t\t{\n\t\t\ty++;\n\t\t}\n\n\t}\n\tprintf(\"%d\\n\",y);\n}", "fixed": "#include <stdio.h>\n\nint main ()\n{\n\tint n,p,q,y=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=0 ; i<n ;i++)\n\t{\n\t\tscanf(\"%d %d\",&p,&q);\n\t\tif (p<q && q-p>=2)\n\t\t{\n\t\t\ty++;\n\t\t}\n\n\t}\n\tprintf(\"%d\\n\",y);\n\treturn 0;\n}"}
{"similarity_score": 0.9980506822612085, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0ccd106acc2c4063f61697e5b3605d9f", "bug_code_uid": "0a5c98a52d8b2b8dffb5b810bfddf90b", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "2566489bad603e0c199b4c5b8bc7f1de", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include <stdio.h>\n    #include <string.h>\n\n    int main (void)\n\n    {\n        int n,S,f[5]={4,6,8,12,20};\n        char *nom[5]={\"Tetrahedron\",\"Cube\",\"Octohedron\",\"Dodecahedron\",\"Icosahedron\"};\n        char str[50];\n\n\n        scanf (\"%d\",&n);\n\n        S=0;\n\n        for (int i=0;i<n;i++)\n        {\n            scanf (\"%s\",str);\n\n            for (int j=0;j<5;j++)\n            {\n                if (strcmp(str,nom[j])==0)\n                    S+=f[j];\n            }\n        }\n\n            printf (\"%d\",S);\n    }\n", "fixed": "    #include <stdio.h>\n    #include <string.h>\n\n    int main (void)\n\n    {\n        int n,S,f[5]={4,6,8,12,20};\n        char *nom[5]={\"Tetrahedron\",\"Cube\",\"Octahedron\",\"Dodecahedron\",\"Icosahedron\"};\n        char str[50];\n\n\n        scanf (\"%d\",&n);\n\n        S=0;\n\n        for (int i=0;i<n;i++)\n        {\n            scanf (\"%s\",str);\n\n            for (int j=0;j<5;j++)\n            {\n                if (strcmp(str,nom[j])==0)\n                    S+=f[j];\n            }\n        }\n\n            printf (\"%d\",S);\n    }\n"}
{"similarity_score": 0.8651026392961877, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2b3a7994fa9854815cad54a87d12f339", "bug_code_uid": "8dc20d949ece3b7598d7bc9d07a986dc", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "02a3541d780f7b18b8a45d97c559fcef", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint fun(int a,int b,int n)\n{\n\tint i=0,c=0;\n\twhile(c<=n)\n\t{\n\t\t\tc=a+b;\n\t\t\tb=a;\n\t\t\ta=c;\n\t\t\ti++;\t\t\n\t}\t\n\t\n\t\n\treturn i;\n\t\t\t\n}\n\n\tint main()\n\t{\n\t\tint t,n,a,b,i;\n\t\tscanf(\"%d\",&t);\n\t\tfor(i=0;i<t;i++)\n\t\t{\n\t\t\tscanf(\"%d %d %d\",&a,&b,&n);\n\t\t\tprintf(\"%d \\n\",fun(a,b,n));\n\t\t}\n\t\n\t\treturn 0;\n\t}\n", "fixed": "#include<stdio.h>\nint fun(int a,int b,int n)\n{\n\tint i=0,c=0;\n\tint j=0,k=0;\n\tint f=a,g=b;\n\twhile(c<=n)\n\t{\n\t\t\tc=a+b;\n\t\t\tb=a;\n\t\t\ta=c;\n\t\t\ti++;\t\t\n\t}\t\n\t\n\twhile(k<=n)\n\t{\n\t\tk=f+g;\n\t\tf=g;\n\t\tg=k;\n\t\tj++;\n\t}\n\tif(i>j)\n\ti=j;\n\t\n\treturn i;\n\t\t\t\n}\n\n\tint main()\n\t{\n\t\tint t,n,a,b,i;\n\t\tscanf(\"%d\",&t);\n\t\tfor(i=0;i<t;i++)\n\t\t{\n\t\t\tscanf(\"%d %d %d\",&a,&b,&n);\n\t\t\tprintf(\"%d \\n\",fun(a,b,n));\n\t\t}\n\t\n\t\treturn 0;\n\t}\n"}
{"similarity_score": 0.5274390243902439, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "1b18358b20d78d481a5c1491c2673945", "bug_code_uid": "206da81344d1d9943c3b464f364e52b0", "src_uid": "783df1df183bf182bf9acbb99208cdb7", "apr_id": "fa6531780c612d551c4a6e2fb2c9802c", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int x1,y1,x2,y2;\n    scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n    int n,a,b,c,d=0;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d %d %d\",&a,&b,&c);\n        if((a*x1+b*y1+c)*(a*x2+b*y2+c)<0) d++;\n    }\n    printf(\"%d\\n\",d);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n    long long x1,y1,x2,y2;\n    scanf(\"%lld %lld %lld %lld\",&x1,&y1,&x2,&y2);\n    long long n,a,b,c,d=0;\n    scanf(\"%lld\",&n);\n    while(n--){\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\n        if((a*x1+b*y1+c)>0&&(a*x2+b*y2+c)<0) d++;\n        else if((a*x1+b*y1+c)<0&&(a*x2+b*y2+c)>0) d++;\n    }\n    printf(\"%lld\\n\",d);\n    return 0;\n}\n"}
{"similarity_score": 0.9389179755671903, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2a52cb2b53bb2f6266c11760129afe2a", "bug_code_uid": "6bbb989ef5a1236f72736ea5acdb80cb", "src_uid": "891fabbb6ee8a4969b6f413120f672a8", "apr_id": "b44def4ad124228161998f8a75831fa7", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int i,n;\n    scanf(\"%ld\" ,&n);\n\n    for(i=0;i<n;i++)\n    {\n        long int x;\n        long int k,y;\n        scanf(\"%ld %ld\" ,&k,&x);\n\n            \n                y=x+9*(k-1);\n                printf(\"%ld\" ,y);\n\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n;\n    scanf(\"%d\" ,&n);\n\n    for(i=0;i<n;i++)\n    {\n        long long int x;\n        long long int k,y;\n        scanf(\"%I64d %I64d\" ,&k,&x);\n\n            \n                y=x+9*(k-1);\n                printf(\"%I64d\" ,y);\n\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.9551020408163265, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6c46c167079f17c9823d6f76c2c814a1", "bug_code_uid": "934d6777a01d5854dce12c4a89797e69", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "5446b2928f5d53a466795add194edfab", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#define max 100+1\nint main()\n{\n    int students,student[max],i,j,temp,q,w,x,y,z;\n    scanf(\"%d\",&students);\n    for(i=0;i<students;i++)\n    {\n        scanf(\"%d %d %d %d\",&w,&x,&y,&z);\n        student[i]=w+x+y+z;\n    }\n    /*for(i=0;i<students;i++)\n        printf(\"%d \",student[i]);\n    printf(\"\\n\");*/\n    q=student[0];\n    for(i=0;i<students-1;i++)\n    {\n        for(j=0;j<students-1;j++)\n        {\n            if(student[i]<student[j])\n            {\n                temp=student[j];\n                student[j]=student[i];\n                student[i]=temp;\n            }\n        }\n    }\n    /*for(i=0;i<students;i++)\n        printf(\"%d \",student[i]);\n    printf(\"\\n\");*/\n     for(i=0;i<students;i++)\n     {\n         if(student[i]==q)\n            break;\n     }\n     printf(\"%d\",i+1);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#define max 1000+1\nint main()\n{\n    int students,student[max],i,j,temp,q,w,x,y,z;\n    scanf(\"%d\",&students);\n    for(i=0;i<students;i++)\n    {\n        scanf(\"%d %d %d %d\",&w,&x,&y,&z);\n        student[i]=w+x+y+z;\n    }\n    /*for(i=0;i<students;i++)\n        printf(\"%d \",student[i]);\n    printf(\"\\n\");*/\n    q=student[0];\n    for(i=0;i<students;i++)\n    {\n        for(j=i+1;j<students;j++)\n        {\n            if(student[i]<student[j])\n            {\n                temp=student[j];\n                student[j]=student[i];\n                student[i]=temp;\n            }\n        }\n    }\n    /*for(i=0;i<students;i++)\n        printf(\"%d \",student[i]);\n    printf(\"\\n\");*/\n     for(i=0;i<students;i++)\n     {\n         if(student[i]==q)\n            break;\n     }\n     printf(\"%d\",i+1);\n    return 0;\n}"}
{"similarity_score": 0.9254185692541856, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d634eca10c3a48045771fd1ab75019ba", "bug_code_uid": "f22c18dc61345b6f293740112597d6e5", "src_uid": "ce4443581d4ee12db6607695cd567070", "apr_id": "fa1183c931f01c0e938565fe78dc36f2", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define ll long long int\nint main(){\n\tint n,count[30],t1=0,t2=0,len=0;\n\tchar c[1000],ans[2];\n\tscanf(\"%d%s\",&n,&c);\n\tfor(ll i=0;i<n-1;i++){\n\t\tif(c[i]!=c[i+1]){\n\t\t\tans[0]=c[i];\n\t\t\tans[1]=c[i+1];\n\t\t\tt1++;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(t1!=0)\n\t\tprintf(\"YES\\n%c%c\",c[0],c[1]);\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define ll long long int\nint main(){\n\tint n,t1=0;\n\tchar c[1000],ans[2];\n\tscanf(\"%d%s\",&n,&c);\n\tfor(ll i=0;i<n-1;i++){\n\t\tif(c[i]!=c[i+1]){\n\t\t\tans[0]=c[i];\n\t\t\tans[1]=c[i+1];\n\t\t\tt1++;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(t1!=0)\n\t\tprintf(\"YES\\n%c%c\\n\",ans[0],ans[1]);\n\telse\n\t\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9964982491245623, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d0d8677590ad76501a81b8f0df3999cb", "bug_code_uid": "caeda74ae5f9612f4b27af986471d8ec", "src_uid": "a7e75ff150d300b2a8494dca076a3075", "apr_id": "bc5f4097645ff53c2453e62133e77b5d", "difficulty": 1400, "tags": ["dsu", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 555555\nint n, m, k, x, y, parent[N], size[N], rank[N];\nint find(int val){\n    return parent[val]==val?val:(parent[val]=find(parent[val]));\n}\nvoid merge(int a, int b){\n    int root_a=find(a), root_b=find(b);\n    if (root_a!=root_b){\n        if (rank[root_a]>rank[root_b])\n            parent[root_b]=root_a,\n            size[root_a]+=size[root_b],\n            rank[root_a]++;\n        else\n            parent[root_a]=root_b,\n            size[root_b]+=size[root_a],\n            rank[root_b]++;\n    }\n}\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for (int i=0; i<=n; i++)\n        parent[i]=i, size[i]=rank[i]=1;\n    while (m--){\n        scanf(\"%d\", &k);\n        if (k==0)\n            continue;\n        scanf(\"%d\", &x);\n        for (int i=1; i<k; i++){\n            scanf(\"%d\", &y);\n            merge(x, y);\n        }\n    }\n    for (int i=1; i<=n; i++)\n        printf(\"%d \", size[parent[i]]);\n}\n", "fixed": "#include <limits.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 555555\nint n, m, k, x, y, parent[N], size[N], rank[N];\nint find(int val){\n    return parent[val]==val?val:(parent[val]=find(parent[val]));\n}\nvoid merge(int a, int b){\n    int root_a=find(a), root_b=find(b);\n    if (root_a!=root_b){\n        if (rank[root_a]>rank[root_b])\n            parent[root_b]=root_a,\n            size[root_a]+=size[root_b],\n            rank[root_a]++;\n        else\n            parent[root_a]=root_b,\n            size[root_b]+=size[root_a],\n            rank[root_b]++;\n    }\n}\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for (int i=0; i<=n; i++)\n        parent[i]=i, size[i]=rank[i]=1;\n    while (m--){\n        scanf(\"%d\", &k);\n        if (k==0)\n            continue;\n        scanf(\"%d\", &x);\n        for (int i=1; i<k; i++){\n            scanf(\"%d\", &y);\n            merge(x, y);\n        }\n    }\n    for (int i=1; i<=n; i++)\n        printf(\"%d \", size[find(parent[i])]);\n}"}
{"similarity_score": 0.3877917414721723, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "cb9ef8c99ae9b7eb67f5b5371115161f", "bug_code_uid": "9443a3233c277017e7a074e2da6bb629", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "92320594251f45fc6ca5b9ae747ec332", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \n\nint main(){\n\tint q,x,y,n,s,i,j,f;\n\tscanf(\"%d\",&q);\n\twhile(q--){\n\t\tf=0;\n\tscanf(\"%d%d%d%d\",&i,&j,&n,&s);\n\tfor(x=0;x<=i;x++)\n\tfor(y=0;y<=j;y++){\n\t\tif(x*n+y==s){\n\t\tf++;\n\t\t}\n\t}\n\tif(f==0)\n\tprintf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n\t}\n}", "fixed": "#include <stdio.h>\n \nint main(){\n\tint  q;\n\tlong long x,y,a,b,n,s;\n\tscanf(\"%d\",&q);\n\twhile(q--){\n\t\tscanf(\"%lld%lld%lld%lld\",&a,&b,&n,&s);\n\t\tif(a*n<=s){\n\t\t\tif(a*n+b>=s)\n\t\t\tprintf(\"YES\\n\");\n\t\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse{\n\t\t\ta=s/n;\n\t\t\tif(a*n+b>=s)\n\t\t\tprintf(\"YES\\n\");\n\t\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t}\n}"}
{"similarity_score": 0.792022792022792, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "7e8a1b1fd7f78f1bad817010dc155ff4", "bug_code_uid": "0ad52e35dd76da96ad75ef66f377abe0", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "79c51906e51cc380db50652752876abd", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,i,j,s=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n\n    for(i=0;i<n;i++)\n    {\n       for(j=i+1;j<n;j++)\n       {\n           if(a[i]==a[j])\n            s=s+a[i]+a[j];\n           else\n            printf(\"-1\");\n\n           return 0;\n       }\n\n    }\n\n    printf(\"%d\",s);\n\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,i,j,s=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n\n    for(i=0;i<n;i++)\n    {\n           if(a[i]==1)\n                {\n                    printf(\"-1\");\n                    return 0;\n                }\n    }\n       printf(\"1\");\n\n        return 0;\n\n}\n"}
{"similarity_score": 0.9886792452830189, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7c641c1c213e5f6e3d8d3469a5c3790f", "bug_code_uid": "84e1aaa2e096c725c59ed256dff3063c", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "e5142ce394086e80111e2763a66530a1", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char n[100];\n    int i,l,c,f;\n    while(gets(n))\n    {\n        c=0;\n        f=0;\n        l=strlen(n);\n        for(i=0;i<l;i++)\n        {\n            if(n[i]=='1')\n            {\n                c++;\n            }\n        }\n        if(c==l)\n        {\n            for(i=0;i<l;i++)\n            {\n                printf(\"1\");\n            }\n        }\n        else\n        {\n            for(i=0;i<l;i++)\n            {\n                if(n[i]=='0')\n                {\n                    if(f==0)\n                    {\n                        f=1;\n                    }\n                    else\n                    {\n                        printf(\"0\");\n                    }\n                }\n                else\n                {\n                    printf(\"1\");\n\n                }\n\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char n[100005];\n    int i,l,c,f;\n    while(~scanf(\"%s\", n))\n    {\n        c=0;\n        f=0;\n        l=strlen(n);\n        for(i=0;i<l;i++)\n        {\n            if(n[i]=='1')\n            {\n                c++;\n            }\n        }\n        if(c==l)\n        {\n            for(i=1;i<l;i++)\n            {\n                printf(\"1\");\n            }\n        }\n        else\n        {\n            for(i=0;i<l;i++)\n            {\n                if(n[i]=='0')\n                {\n                    if(f==0)\n                    {\n                        f=1;\n                    }\n                    else\n                    {\n                        printf(\"0\");\n                    }\n                }\n                else\n                {\n                    printf(\"1\");\n\n                }\n\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6653306613226453, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "a5f4c6993ce882d34cd22165147fb7c7", "bug_code_uid": "760903f9c0735e4c9704552560689735", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "063b23e000caf533ed3d5bbaa62522fc", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{ long long int n,a,b,d,min;\n scanf(\"%lld\",&n);\nmin=n;\nfor(a=1;a<=(n/2);a++)\n{ for(b=a;b<((n-a)/2);b++)\n{ d=n-2*(a+b);\nif(d<min&&d>=0)\nmin=d;\nelse\nmin=min+1-1;\nif(min==0)\nbreak;\nelse\ncontinue;}\n}\nprintf(\"%lld\\n\",min);\n}\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{ long long int n,d;\n scanf(\"%lld\",&n);\nif(n==2)\nd=2;\nelse if(n%2!=0)\nd=1;\nelse\nd=0;\n printf(\"%lld\\n\",d);}\n  return 0;\n}"}
{"similarity_score": 0.9974193548387097, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8bab20b254fbe429e375648c48002fc5", "bug_code_uid": "7f2d433086311a2b9f70a7622a143284", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "8a0ea878d05b8d50e6bc21b5c2e2fd78", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\n#define max(a,b) (a)>(b)?(a):(b)\n#define min(a,b) (a)<(b)?(a):(b)\n#define inout freopen(\"in.txt\",\"r\",stdin);freopen(\"out.txt\",\"w\",stdout)\n#define swap(a,b) a+=b;b=a-b;a-=b                     \n#define quicksort(a,n) qsort(a,n,sizeof(a[0]),cmp)\n#define inputarr(a,n) for(int i=0;i<n;i++){scanf(\"%d\",&a[i]);}\n#define printarr(a,n) for(int i=0;i<n;i++){printf(\"%d\",a[i]);}\nint cmp(const void *a,const void *b){return *(int *)a - *(int *)b;}\n\nint main(){\n\t//inout;\n\n \tint n, m;\n\n \tint k, s;\n\n \ta[100000],b[100000];\n\n \tscanf(\"%d%d\", &n, &m);\n\n \tscanf(\"%d%d\", &k, &s);\n\n \tinputarr(a, n);\n \tinputarr(b, m);\n\n \tif(a[k - 1] < b[m - s]){\n \t\tputs(\"YES\");\n \t}\n\n \telse{\n \t\tputs(\"NO\");\n \t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#include <ctype.h>\n#define max(a,b) (a)>(b)?(a):(b)\n#define min(a,b) (a)<(b)?(a):(b)\n#define inout freopen(\"in.txt\",\"r\",stdin);freopen(\"out.txt\",\"w\",stdout)\n#define swap(a,b) a+=b;b=a-b;a-=b                     \n#define quicksort(a,n) qsort(a,n,sizeof(a[0]),cmp)\n#define inputarr(a,n) for(int i=0;i<n;i++){scanf(\"%d\",&a[i]);}\n#define printarr(a,n) for(int i=0;i<n;i++){printf(\"%d\",a[i]);}\nint cmp(const void *a,const void *b){return *(int *)a - *(int *)b;}\n\nint main(){\n\t//inout;\n\n \tint n, m;\n\n \tint k, s;\n\n \tint a[100000],b[100000];\n\n \tscanf(\"%d%d\", &n, &m);\n\n \tscanf(\"%d%d\", &k, &s);\n\n \tinputarr(a, n);\n \tinputarr(b, m);\n\n \tif(a[k - 1] < b[m - s]){\n \t\tputs(\"YES\");\n \t}\n\n \telse{\n \t\tputs(\"NO\");\n \t}\n}"}
{"similarity_score": 0.6024759284731774, "equal_cnt": 23, "replace_cnt": 8, "delete_cnt": 7, "insert_cnt": 8, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "019ad96e55daa02f629d18efe04f4256", "bug_code_uid": "6a516970a1ae9c9844ddea35f7f015b6", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "0245a57147f9c80cb96edb460f44901a", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint  a, b, c, d, e, i, t;\r\n\tlong long n;\r\n\tscanf(\"%d\", &t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\ta=0;\r\n\t\tscanf(\"%ld\", &n);\r\n\t\tif(n%2!=0 && n!=1)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\ta=a+1;\r\n\t\t}\r\n\t\tif(n%2==0)\r\n\t\t{\r\n\t\t\twhile(n%2==0)\r\n\t\t\t{\r\n\t\t\t\tn=n/2;\r\n\t\t\t}\r\n\t\t\tif(n!=1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\ta=a+1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(a==0)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tlong long n;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 1;i <= t;i++)\r\n\t{\r\n\t\tscanf(\"%lld\", &n);\r\n\t\tif (n % 2 != 0)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\twhile(n%2==0)\r\n\t\t\t{\r\n\t\t\t\tn = n / 2;\r\n\t\t\t}\r\n\t\t\tif (n == 1)\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\telse\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.750390015600624, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "88e490101949de170be050b88c5199cb", "bug_code_uid": "12054e98355ec786ed79c3a32a8087a5", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "dbfb834e8a0e92aa18e395b9882d87fa", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int max(long long int a,long long int b){\n    if(a>b){\n        return a;\n    }\n    return b;\n}\nint main()\n{\n   long long int i,j,test,k,m,flag=0,max=0,a[1000000]={0},b[1000000]={0},n;\n    scanf(\"%lld\",&n);\n    \n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n max=a[n-1];\n flag=0;\n  b[n-1]=0;\n   for(i=n-2;i>=0;i--){\n       if(a[i]>=max){\n           max=a[i];\n           b[i]=0;\n           flag=0;\n       }else{\n           if(a[i]<max && flag==0){\n               max++;\n               b[i]=max-a[i];\n               flag=1;\n           }else{\n               b[i]=max-a[i];\n           }\n       }\n   }\n   for(i=0;i<n;i++){\n       printf(\"%lld \",b[i]);\n   }\n    return 0;\n}", "fixed": "#include <stdio.h>\nlong long int max(long long int a,long long int b){\n    if(a>b){\n        return a;\n    }\n    return b;\n}\nint main()\n{\n   long long int i,j,test,k,m,flag=0,max=0,a[1000000]={0},b[1000000]={0},n;\n    scanf(\"%lld\",&n);\n    \n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&a[i]);\n        \n    }\n    b[n-1]=0;\n    max=a[n-1];\n    for(i=n-2;i>=0;i--){\n        if(max<a[i]){\n            max=a[i];\n            b[i]=0;\n        }else{\n            b[i]=max-a[i];\n            b[i]++;\n        }\n    }\n    for(i=0;i<n;i++){\n        printf(\"%lld \",b[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7971360381861575, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "afd714982c449829546e2164f654cb4f", "bug_code_uid": "567e10f8d54c7a09a496c38e30fcd3c0", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "3b847ce923a78aadd36d936990b1645e", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m,n,c=0;\n\tchar i;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(i=97;i<97+n;i++)\n\t{\n\t\tprintf(\"%c\",i);\n\t\tc++;\n\t}\n\tif(c!=m)\n\t{\n\t\tfor(i=97;i<97+n;i++)\n\t{\n\t\tprintf(\"%c\",i);\n\t\tc++;\n\t\tif(c==m)\n\t\tbreak;\n\t}\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint m,n,c=0;\n\tchar i;\n\tscanf(\"%d%d\",&m,&n);\n\twhile(c!=m)\n\t{\n\t\tfor(i=97;i<97+n;i++)\n\t    {\n\t     \tprintf(\"%c\",i);\n\t    \tc++;\n\t    \tif(c==m)\n\t\t    break;\n\t    }\n\t}\n\t\n}\n"}
{"similarity_score": 0.9490703314470493, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "920518c70e85f2241759917f3d6dd7d9", "bug_code_uid": "84a0b41bfe93b1bd51e0d104bdb14f5b", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "cbe01beee53d3bbf5ef735275f2b4c2a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n\t// your code goes here\n\tchar p[100000];\n\tgets(p);\n\tint m=strlen(p);\n\tint i;\n\tint B,a,u,r,s,l,b;\n\tB=a=r=s=u=l=b=0;\n\tfor(i=0;i<m;++i){\n\t\tswitch(p[i])\n\t\t{\n\t\t\tcase 'B':\n\t\t\tB++;\n\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\ta++;\n\t\t\tbreak;\n\t\t\tcase 'l':\n\t\t\tl++;\n\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\tb++;\n\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\ts++;\n\t\t\tbreak;\n\t\t\tcase 'u':\n\t\t\tu++;\n\t\t\tbreak;\n\t\t\tcase 'r':\n\t\t\tr++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\tint j;\n\tj=B;\n\tif(a/3<j){\n\t\tj=a/2;\n\t}\n\tif(l<j){\n\t\tj=l;\n\t}\n\tif(s<j){\n\t\tj=s;\n\t}\n\tif(u/2<j){\n\t\tj=u/2;\n\t}\n\tif(b<j){\n\t\tj=b;\n\t}\n\tif(r<j){\n\t\tj=r;\n\t}\n\t\n\t//printf(\"%d\",a);\n\tprintf(\"%d\",j);\n\t\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n\t// your code goes here\n\tchar p[100000];\n\tgets(p);\n\tint m=strlen(p);\n\tint i;\n\tint B,a,u,r,s,l,b;\n\tB=a=r=s=u=l=b=0;\n\tfor(i=0;i<m;++i){\n\t\tswitch(p[i])\n\t\t{\n\t\t\tcase 'B':\n\t\t\tB++;\n\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\ta++;\n\t\t\tbreak;\n\t\t\tcase 'l':\n\t\t\tl++;\n\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\tb++;\n\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\ts++;\n\t\t\tbreak;\n\t\t\tcase 'u':\n\t\t\tu++;\n\t\t\tbreak;\n\t\t\tcase 'r':\n\t\t\tr++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\tint j;\n\tj=B;\n\tif(a/2<j){\n\t\tj=a/2;\n\t}\n\tif(l<j){\n\t\tj=l;\n\t}\n\tif(s<j){\n\t\tj=s;\n\t}\n\tif(u/2<j){\n\t\tj=u/2;\n\t}\n\tif(b<j){\n\t\tj=b;\n\t}\n\tif(r<j){\n\t\tj=r;\n\t}\n\t\n\t\n\tprintf(\"%d\",j);\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9967948717948718, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4378528b6441bd412f3d75078d4ee925", "bug_code_uid": "f67f4f721f35ff5ab0a9cfe86693c03d", "src_uid": "935bceb69117d06eb75121c805bff69c", "apr_id": "1093a2d3e5d2087acd4ec374d8aa8880", "difficulty": 900, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n\tint t = 0;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t-- > 0) {\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tlong long sum = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tint a;\r\n\t\t\tscanf(\"%d\", &a);\r\n\t\t\tsum += a;\r\n\t\t}\r\n\t\tlong long remain = sum % n;\r\n\t\tprintf(\"%lld\", remain * (n - remain));\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main() {\r\n\tint t = 0;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t-- > 0) {\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tlong long sum = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tint a;\r\n\t\t\tscanf(\"%d\", &a);\r\n\t\t\tsum += a;\r\n\t\t}\r\n\t\tlong long remain = sum % n;\r\n\t\tprintf(\"%lld\\n\", remain * (n - remain));\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.658360655737705, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "52b1c7a30ed85714f7794891b7038495", "bug_code_uid": "73fa71b8b67391f88dfe6f9fd0fae5c3", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "878f97a35cb3c3694d3ebf62326a195f", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100110];\n    scanf(\"%s\",a);\n        int n = strlen(a);\n        int t1 ,t2 ;\n        t1 = t2 = 0;\n        int i = 0;\n        while(i < n){\n            if(a[i] == 'A' && a[i+1] == 'B'&&t1 == 0){\n            t1++;\n            i++;}\n            else if(a[i] == 'B' && a[i+1] == 'A'&&t2 == 0){\n            t2++;\n            i++;\n            }\n            i++;\n           \n        }\n        if(t1>0&&t2>0)\n           printf(\"YES\\n\");\n           else\n           printf(\"NO\\n\");\n}      ", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100110];\n    scanf(\"%s\",a);\n        int n = strlen(a);\n        int t1 ,t2,t3,t4,k=0 ;\n        t1 = t2 = 0;\n        int i = 0;\n        while(i < n){\n            if(a[i] == 'A' && a[i+1] == 'B'&&t1 == 0){\n            t1++;\n            i++;}\n            else if(a[i] == 'B' && a[i+1] == 'A'&&t2 == 0){\n            t2++;\n            i++;\n            }\n            i++;\n        }\n        if(t1 > 0 && t2 > 0){\n            printf(\"YES\\n\");k++;\n            //continue;\n        }\n        if(k==0)\n       {  i = n-1;\n        t1 = t2 = 0;\n        while(i >= 0){\n            if(a[i] == 'A' && a[i+1] == 'B'&& t1 == 0){\n                t1++;\n                i--;\n            }\n            else if(a[i] == 'B' && a[i+1] == 'A' && t2 == 0){\n                t2++;\n                i--;\n            }\n            i--;\n        }\n       \n        if(t1 > 0 && t2 > 0)\n        printf(\"YES\\n\");\n        else printf(\"NO\\n\");}\n        \n        \n}   "}
{"similarity_score": 0.3028953229398664, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "2f367ca17faf6932b776267210493841", "bug_code_uid": "116834feac93417992a5380d97842e10", "src_uid": "1e8040308997b9497a2c295591992b66", "apr_id": "a03b5fb60600e564d788250046076ce3", "difficulty": 1600, "tags": ["combinatorics", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar c[2] = {'b', 'w'};\n\nint main()\n{\n  int n, i, j, k;\n  scanf(\"%d\", &n);\n  if (n == 2) printf(\"bb\\nww\\n\\nbb\\nww\\n\");\n  else puts(\"-1\");\n  return 0;\n} ", "fixed": "#include <stdio.h>\n\nchar c[2] = {'b', 'w'};\n\nint main()\n{\n  int n, i, j, k, l;\n  scanf(\"%d\", &n);\n  if (n&1) puts(\"-1\");\n  else {\n  \tfor (i = 0; i < n; ++i) {\n  \t  for (j = 0; j < n/2; ++j) {\n  \t  \tfor (k = 0; k < j; ++k) putchar(c[(i+k)%2]);\n  \t  \tfor (l = k; k < n/2; ++k) putchar(c[(i+l)%2]);\n  \t  \tfor (k = n/2-1; k >= j; --k) putchar(c[(i+l)%2]);\n  \t  \tfor (; k >= 0; --k) putchar(c[(i+k)%2]);\n  \t  \tputs(\"\");\n  \t  }\n  \t  for (j = n/2-1; j >= 0; --j) {\n  \t  \tfor (k = 0; k < j; ++k) putchar(c[(i+k)%2]);\n  \t  \tfor (l = k; k < n/2; ++k) putchar(c[(i+l)%2]);\n  \t  \tfor (k = n/2-1; k >= j; --k) putchar(c[(i+l)%2]);\n  \t  \tfor (; k >= 0; --k) putchar(c[(i+k)%2]);\n  \t  \tputs(\"\");\n  \t  }\n  \t  puts(\"\");\n  \t}\n  }\n  return 0;\n} "}
{"similarity_score": 0.9778296382730455, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f2436e44bf1053ea8c32ca6a4898f13b", "bug_code_uid": "77d2ef2166460e83e471079c3deee325", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "6fe3bdf38b88f166e4afe9ec8ab827c9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n\tint n;\n\tint i;\n\tint temp;\n\tint in=0;\n\tint t1,t2;\n\tint f;\n\tint diff;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&t1);\n\t\tf=t1;\n\t\tscanf(\"%d\",&t2);\n\t\tdiff=abs(t2-t1);\n\t\tin=1;\n\tfor (i=2;i<n-1;i++){\n\t\tscanf(\"%d\",&t1);\n\tif (abs(t1-t2)<diff){\n\t\tdiff=abs(t1-t2);\n\t\tin=i;\n\t}\n\tt2=t1;\t\n\t\n}\n\n\tscanf(\"%d\",&t1);\n\tif (abs(t1-f)<diff){\n\t\tprintf(\"%d %d\",n,1);\n\t}else{\n\tprintf(\"%d %d\",in-1+1,in+1);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n\tint n;\n\tint i;\n\tint temp;\n\tint in=0;\n\tint t1,t2;\n\tint f;\n\tint diff;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&t1);\n\t\tf=t1;\n\t\tscanf(\"%d\",&t2);\n\t\tdiff=abs(t2-t1);\n\t\tin=1;\n\tfor (i=2;i<n;i++){\n\t\tscanf(\"%d\",&t1);\n\tif (abs(t1-t2)<diff){\n\t\tdiff=abs(t1-t2);\n\t\tin=i;\n\t}\n\tt2=t1;\t\n\t\n}\n\n\n\tif (abs(t1-f)<diff){\n\t\tprintf(\"%d %d\",n,1);\n\t}else{\n\tprintf(\"%d %d\",in-1+1,in+1);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}\n"}
{"similarity_score": 0.9970282317979198, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4a0ae8dab8eb4b64a5ae574145240464", "bug_code_uid": "fcec4634f69606809987b23ca7441bd7", "src_uid": "5099a9ae62e82441c496ac37d92e99e3", "apr_id": "ab46cdb96f9893e4b6b37b646b939882", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long n,h,k,i,a,s;\n    long long count;\n    while(scanf(\"%lld %lld %lld\",&n,&h,&k)==3)\n    {\n        s=0,count=0;\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%lld\",&a);\n            s+=a;\n            if(s<=h)\n            {\n                count+=s/k;\n                s%=k;\n            }\n            else\n            {\n                count++;\n                if(a>k)\n                {\n                    count+=a/k;\n                    s%=k;\n                }\n                else\n                    s=a;\n            }\n        }\n        if(s>0)\n            count++;\n        printf(\"%lld\\n\",count);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long n,h,k,i,a,s;\n    long long count;\n    while(scanf(\"%lld %lld %lld\",&n,&h,&k)==3)\n    {\n        s=0,count=0;\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%lld\",&a);\n            s+=a;\n            if(s<=h)\n            {\n                count+=s/k;\n                s%=k;\n            }\n            else\n            {\n                count++;\n                if(a>=k)\n                {\n                    count+=a/k;\n                    s=a%k;\n                }\n                else\n                    s=a;\n            }\n        }\n        if(s>0)\n            count++;\n        printf(\"%lld\\n\",count);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.33495934959349594, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "4fd56d4b0144dabaa91e73bcce057eda", "bug_code_uid": "6399d82cc0222873e12b21a872671a29", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "bff219f453ba296d72307614d1331d4d", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main() {\n\n    int n;\n    scanf(\"%d\",&n);\n    printf(\"%d %d\",n/2,n/2);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n  int n;\n  scanf(\"%d\",&n);\n  int count,x,y;\n  for(x=2;x<n;x++)\n    {\n      if(x==2||x==5||x==3||x==7)\n        continue;\n      count=0;\n      if(x%2==0||x%3==0||x%5==0||x%7==0)\n      {\n        count++;\n        y=n-x;\n      }\n      if(y==2||y==5||y==3||y==7)\n        continue;\n      if(y%2==0||y%3==0||y%5==0||y%7==0)\n        count++;\n      if(count==2)\n        break;\n    }\n    printf(\"%d %d\\n\",x,y);\n    return 0;\n}"}
{"similarity_score": 0.8510158013544018, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b1e75671116012bd6c59717c147903c5", "bug_code_uid": "e53bbab16680da449750abbfc5233d95", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "73fb35c5f5ac2a25f253c7194e3c0911", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,count=0,found=0,z,i;\n    scanf(\"%d\\n\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==5)\n        count++;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==0)\n        {found=1;\n        break;}\n    }\nif(found==0)\nprintf(\"-1\");\nelse if(count<9)\nprintf(\"0\");\nelse if(count>=9){\nz=count/9;\nfor(i=0;i<z*9;i++)\n{\n    printf(\"%d\",a[i]);\n}\n}\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,count=0,found=0,z,i;\n    scanf(\"%d\\n\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==5)\n        count++;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==0)\n        found++;\n        \n    }\nif(found==0)\nprintf(\"-1\");\nelse if(count<9)\nprintf(\"0\");\nelse if(count>=9){\nz=count/9;\nfor(i=0;i<z*9;i++)\n{\n    printf(\"5\");\n}\nfor(i=0;i<found;i++)\n{\n    printf(\"0\");\n}\n}\n\nreturn 0;\n}"}
{"similarity_score": 0.9045362220717671, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b6576c37ac827a2fded94fa51cdf79a3", "bug_code_uid": "2fe85fdb4d07188addaeaf7aeccaf560", "src_uid": "77b5bed410d621fb56c2eaebccff5108", "apr_id": "8a3dee50ed8850a181ad955f6df4d6bf", "difficulty": 1600, "tags": ["greedy", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define MAXM 10096\n#define max(_a, _b) ((_a) > (_b) ? (_a) : (_b))\n\nint main()\n{\n    int n, m, i;\n    int d[MAXM], h[MAXM];\n    scanf(\"%d%d\", &n, &m);\n    for (i = 0; i < m; ++i) scanf(\"%d%d\", &d[i], &h[i]);\n\n    int impossible = 0, maxh = -1;\n    for (i = 1; i < m; ++i)\n        if (abs(d[i] - d[i - 1]) < abs(h[i] - h[i - 1])) {\n            impossible = 1; break;\n        } else {\n            int t = abs(d[i] - d[i - 1]) - abs(h[i] - h[i - 1]),\n                dh = max(h[i], h[i - 1]);\n            maxh = max(maxh, dh + t / 2);\n        }\n    if (impossible) puts(\"IMPOSSIBLE\");\n    else printf(\"%d\\n\", maxh);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define MAXM 100096\n#define max(_a, _b) ((_a) > (_b) ? (_a) : (_b))\n\nint main()\n{\n    int n, m, i;\n    int d[MAXM], h[MAXM];\n    scanf(\"%d%d\", &n, &m);\n    for (i = 0; i < m; ++i) scanf(\"%d%d\", &d[i], &h[i]);\n\n    int impossible = 0, maxh = -1;\n    for (i = 1; i < m; ++i)\n        if (abs(d[i] - d[i - 1]) < abs(h[i] - h[i - 1])) {\n            impossible = 1; break;\n        } else {\n            int t = abs(d[i] - d[i - 1]) - abs(h[i] - h[i - 1]),\n                dh = max(h[i], h[i - 1]);\n            maxh = max(maxh, dh + t / 2);\n        }\n    if (impossible) puts(\"IMPOSSIBLE\");\n    else {\n        // Tricky samples T^T\n        maxh = max(maxh, h[0] + d[0] - 1);\n        maxh = max(maxh, h[m - 1] + n - d[m - 1]);\n        printf(\"%d\\n\", maxh);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9954545454545455, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "04fe5dd83da721aee1924216d785e818", "bug_code_uid": "02bd91178773c30fe4d56c33015aa226", "src_uid": "08679e44ee5d3c3287230befddf7eced", "apr_id": "147633389fe9d084f3a2b42c181abd6e", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    char a[t][100],b[t][100],c[t][100],k[t];\n    for(int i=0;i<t;i++){\n       scanf(\"%s\\n%s\\n%s\",a[i],b[i],c[i]);\n    }\n    for(int i=0;i<t;i++){\n        for(int j=0;j<strlen(a[i]);j++){\n            if(((a[i][j]==c[i][j])||(b[i][j]==c[i][j]))){\n                k[i]=1;\n            }\n            else{\n                k[i]=0;\n                break;\n            }\n        }\n    }\n    for(int i=0;i<t;i++){\n            if(k[i]==0){\n                printf(\"NO\\n\");\n            }\n            else{\n                printf(\"YES\\n\");\n            }}\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    char a[t][104],b[t][104],c[t][104],k[t];\n    for(int i=0;i<t;i++){\n       scanf(\"%s\\n%s\\n%s\",a[i],b[i],c[i]);\n    }\n    for(int i=0;i<t;i++){\n        for(int j=0;j<strlen(a[i]);j++){\n            if(((a[i][j]==c[i][j])||(b[i][j]==c[i][j]))){\n                k[i]=1;\n            }\n            else{\n                k[i]=0;\n                break;\n            }\n        }\n    }\n    for(int i=0;i<t;i++){\n            if(k[i]==0){\n                printf(\"NO\\n\");\n            }\n            else{\n                printf(\"YES\\n\");\n            }}\n    return 0;\n}\n"}
{"similarity_score": 0.7634146341463415, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0ba87df49c90e1fcefbcb4695d85e3ad", "bug_code_uid": "6cc1b7218e665449490c6a587b594bb4", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "cb264a0aa23da7230c1e7032922bce72", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\nint secondOrderStatistics(int arr[], int arr_size)\n{\n\n\tint firstSmallest = 100,secondSmallest = 100;\n\tint index = 0;\n\tif(arr_size == 1)\n\t{\n\t\tsecondSmallest = arr[0];\n\t}\n\telse\n\t{\n\t\tfor(index = 0;index < arr_size;index++)\n\t\t{\n\t\t\tif(arr[index] < firstSmallest)\n\t\t\t{\n\t\t\t\tsecondSmallest = firstSmallest;\n\t\t\t\tfirstSmallest = arr[index];\n\n\t\t\t}\n\t\t\telse if(arr[index] < secondSmallest && arr[index] != firstSmallest)\n\t\t\t{\n\t\t\t\tsecondSmallest = arr[index];\n\t\t\t}\n\t\t}\n\t}\n\treturn secondSmallest;\n\n}\n\n\nint main(void) {\n\tint size = 0,index = 0;\n\tint *arr = NULL;\n\tscanf(\"%d\",&size);\n\tarr = (int*)malloc(size*(sizeof(int)));\n\tfor(index =0;index < size; index++)\n\t{\n\t\tscanf(\"%d\",&arr[index]);\n\t}\n\n\tprintf(\"%d\", secondOrderStatistics(arr,size));\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint secondOrderStatistics(int arr[], int arr_size)\n{\n\n\tint firstSmallest = 101,secondSmallest = 101;\n\tint index = 0;\n\n\t\tfor(index = 0;index < arr_size;index++)\n\t\t{\n\t\t\tif(arr[index] < firstSmallest)\n\t\t\t{\n\t\t\t\tsecondSmallest = firstSmallest;\n\t\t\t\tfirstSmallest = arr[index];\n\n\t\t\t}\n\t\t\telse if(arr[index] < secondSmallest && arr[index] != firstSmallest)\n\t\t\t{\n\t\t\t\tsecondSmallest = arr[index];\n\t\t\t}\n\t\t}\n\t\tif(secondSmallest == 101 || secondSmallest == firstSmallest )\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\tsecondSmallest = 101;\n\t\t}\n\t\telse\n\t\t{\n\n\t\t}\n\n\treturn secondSmallest;\n\n}\n\n\nint main(void) {\n\tint size = 0,index = 0;\n\tint *arr = NULL;\n\tscanf(\"%d\",&size);\n\tarr = (int*)malloc(size*(sizeof(int)));\n\tfor(index =0;index < size; index++)\n\t{\n\t\tscanf(\"%d\",&arr[index]);\n\t}\n\tindex = secondOrderStatistics(arr,size);\n\tif(index<101)\n\t{\n\t\tprintf(\"%d\", index);\n\t}\n\telse\n\t{\n\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.35084033613445376, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "db41531b69faf6024e31364cf53b2d80", "bug_code_uid": "23a5921e19279f365c5f34d1bfb59211", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "8a985b2729257cf39886ab9dd138d13f", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    char n[100000];\n    int i, flag=0;\n    scanf(\"%s\",n);\n    int x=strlen(n);\n    for(i=0; i<strlen(n); i++)\n    {\n        if(n[i]=='0')\n        {\n            for(i; i<strlen(n); i++ )\n            {\n                n[i]=n[i+1];\n            }\n            x--;\n            flag=1;\n        }\n        if(flag==1) break;\n    }\n       if(flag==1) for(i=0; i<x; i++) printf (\"%c\",n[i]);\n       else  for(i=0; i<x-1; i++) printf (\"%c\",n[i]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    char *n = malloc(100001);\n    int i, flag=0;\n    scanf(\"%s\",n);\n    int x=strlen(n);\n    for(i=0; i < x; i++)\n    {\n\n        if(n[i]=='0' || i == x - 1)\n        {\n            i++;\n            for(i; i<x; i++ )\n            {\n                 printf(\"%c\",n[i]);\n            }\n            break;\n        }\n        printf(\"%c\",n[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9987639060568603, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4392efb8e8b6584bb4383fbcec878219", "bug_code_uid": "fe80988db18e2da7e9c6ea3423546322", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "2906199a92820cec0419753d893df346", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k,x[150001],i,m;\n    long int s[150005]={0},min=1000000000000;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x[i]);\n        s[i+1]=s[i]+x[i];\n    }\n    for(i=0;i<=n-k;i++)\n    {\n        if(min>s[i+k]-s[i])\n        {\n            min=s[i+k]-s[i];\n            m=i+1;\n        }\n    }\n    printf(\"%d\",m);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k,x[150001],i,m;\n    long int s[150005]={0},min=100000000000;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x[i]);\n        s[i+1]=s[i]+x[i];\n    }\n    for(i=0;i<=n-k;i++)\n    {\n        if(min>s[i+k]-s[i])\n        {\n            min=s[i+k]-s[i];\n            m=i+1;\n        }\n    }\n    printf(\"%d\",m);\n    return 0;\n}\n"}
{"similarity_score": 0.39820627802690584, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "4fe91a3f4b3a0fcdfae3a273dd2ad008", "bug_code_uid": "ef8d22161469a57316ea5c242f2f1de7", "src_uid": "2eb7234904b28b4793b7c482a2370092", "apr_id": "f8e3042bf946c2cb4792fc7c8bef73a4", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a[100000], n, i, max, min, maxi;\n\n\tscanf (\"%d\", &n);\n\n\tmaxi = 0;\n\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf (\"%d\", &a[i]);\n\n\t\tif (a[i] > a[maxi])\n\t\t\tmaxi = i;\n\t}\n\n\tfor (i = maxi; i < n; i++)\n\t\ta[i] = a[i + 1];\n\n\tn--;\n\tmin = a[0];\n\tmax = a[0];\n\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (a[i] < min)\n\t\t\tmin = a[i];\n\n\t\tif (a[i] > max)\n\t\t\tmax = a[i];\n\t}\n\n\tprintf (\"%d\", max - min);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp (const void *a, const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\n\nint main()\n{\n\tint a[100000], n, i, max, min, dst_b, dst_a;\n\n\tscanf (\"%d\", &n);\n\n\tfor (i = 0; i < n; i++)\n\t\tscanf (\"%d\", &a[i]);\n\n\tqsort (a, n, sizeof a[0], cmp);\n\n\tdst_a = a[1] - a[0];\n\tdst_b = a[n - 1] - a[n - 2];\n\n\tif (dst_a > dst_b)\n\t{\n\t\tint i;\n\t\tmin = a[1];\n\t\tmax = a[1];\n\n\t\ti = 2;\n\t\twhile (i < n)\n\t\t{\n\t\t\tif (a[i] < min)\n\t\t\t\tmin = a[i];\n\n\t\t\tif (a[i] > max)\n\t\t\t\tmax = a[i];\n\n\t\t\ti++;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmin = a[0];\n\t\tmax = a[0];\n\n\t\tfor (i = 1; i < n - 1; i++)\n\t\t{\n\t\t\tif (a[i] > max)\n\t\t\t\tmax = a[i];\n\n\t\t\tif (a[i] < min)\n\t\t\t\tmin = a[i];\n\t\t}\n\t}\n\n\tprintf (\"%d\", max - min);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9547511312217195, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "825c642b3bf67689a4dbc1dc4b77d7ce", "bug_code_uid": "5f359c4475256e4cf3b3959dcf309c23", "src_uid": "964ce5983d0e9b1a3f460ad6e6078d47", "apr_id": "6ee2c5df729824da4299fc687c44f0a8", "difficulty": 1200, "tags": ["dfs and similar", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<stdbool.h>\r\n\r\nvoid swap(char *a, char *b)\r\n{\r\n\tchar hold = *a;\r\n\t*a = *b;\r\n\t*b = hold;\r\n\treturn;\r\n}\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\\n\", &t);\r\n\twhile(t--){\r\n\t\tint n, m;\r\n\t\tscanf(\"%d%d\", &n, &m);\r\n\t\tchar a[n][m];\r\n\t\tfor(int i = 0; i<n; i++) for(int j = 0; j<m; j++) scanf(\" %c\", a[i]+j);\r\n\t\tint i, j;\r\n\t\tfor(i = 0; i<m; i++){\r\n\t\t\tint base = n-1;\r\n\t\t\twhile(a[base][i] != '.' && base>=0) base--;\r\n\t\t\tint ptr = base-1;\r\n\t\t\twhile(ptr>=0){\r\n\t\t\t\tif(a[ptr][i] == '*'){\r\n\t\t\t\t\tswap(&a[ptr][i], &a[base][i]);\r\n\t\t\t\t\tbase--;\t\t\r\n\t\t\t\t\tptr--;\r\n\t\t\t\t}\r\n\t\t\t\telse if(a[ptr][i] == '.') ptr--;\r\n\t\t\t\telse if(a[ptr][i] == 'o'){\r\n\t\t\t\t\tbase = ptr-1;\r\n\t\t\t\t\tptr = base-1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i = 0; i<n; i++){\r\n\t\t\tfor(j =0; j<m; j++) printf(\"%c\", a[i][j]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tif(t) printf(\"\\n\");\r\n\t}\t\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<stdbool.h>\r\n\r\nvoid swap(char *a, char *b)\r\n{\r\n\tchar hold = *a;\r\n\t*a = *b;\r\n\t*b = hold;\r\n\treturn;\r\n}\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\\n\", &t);\r\n\twhile(t--){\r\n\t\tint n, m;\r\n\t\tscanf(\"%d%d\", &n, &m);\r\n\t\tchar a[n][m];\r\n\t\tfor(int i = 0; i<n; i++) for(int j = 0; j<m; j++) scanf(\" %c\", a[i]+j);\r\n\t\tint i, j;\r\n\t\tfor(i = 0; i<m; i++){\r\n\t\t\tint base = n-1;\r\n\t\t\twhile(a[base][i] != '.' && base>=0) base--;\r\n\t\t\tint ptr = base-1;\r\n\t\t\twhile(ptr>=0){\r\n\t\t\t\tif(a[ptr][i] == '*'){\r\n\t\t\t\t\tswap(&a[ptr][i], &a[base][i]);\r\n\t\t\t\t\tbase--;\t\t\r\n\t\t\t\t\tptr--;\r\n\t\t\t\t}\r\n\t\t\t\telse if(a[ptr][i] == '.') ptr--;\r\n\t\t\t\telse if(a[ptr][i] == 'o'){\r\n\t\t\t\t\tint m = ptr;\r\n\t\t\t\t\twhile(a[m][i] != '.' && m>=0) m--;\r\n\t\t\t\t\tbase = m;\r\n\t\t\t\t\tptr = base-1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i = 0; i<n; i++){\r\n\t\t\tfor(j =0; j<m; j++) printf(\"%c\", a[i][j]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tif(t) printf(\"\\n\");\r\n\t}\t\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.830220713073005, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2174e2af5c988d019f07b572286ea0df", "bug_code_uid": "b141b21c1d3fd0d4f8bb5edb857b4803", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "0ea131c72684292ac33962cee99b87ac", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    long long int a,b,c,d;\n    scanf(\"%I64d\",&a);\n    scanf(\"%I64d\",&b);\n    if(b>2*a+2)\n    {\n       printf(\"-1\");\n       return 0;\n    }\n    if(a>b+1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    while(b>a+1)\n    {  // printf(\"*\");\n        printf(\"110\");\n        b=b-2;\n        a=a-1;\n    }\n    if(a>b)\n    { printf(\"0\");\n      a--;\n     }\n     while(a>0&&b>0)\n     {\n         printf(\"10\");\n         a--;\n         b--;\n     }\n     if(a>0)\n        printf(\"0\");\n     if(b>0)\n        printf(\"1\");\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long long int a,b,c,d;\n    scanf(\"%I64d\",&a);\n    scanf(\"%I64d\",&b);\n    if(b>2*a+2)\n    {\n       printf(\"-1\");\n       return 0;\n    }\n    if(a>b+1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    while(b>a+1&&a!=0)\n    {  // printf(\"*\");\n        printf(\"110\");\n        b=b-2;\n        a=a-1;\n    }\n    if(a>b)\n    { printf(\"0\");\n      a--;\n     }\n     while(a>0&&b>0)\n     {\n         printf(\"10\");\n         a--;\n         b--;\n     }\n     while(a>0)\n      {\n          printf(\"0\");\n          a--;\n      }\n     while(b>0)\n       {\n        printf(\"1\");\n        b--;\n       }\n     return 0;\n}\n"}
{"similarity_score": 0.990234375, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "67dc38b1da2461bab2a210f651f5ef33", "bug_code_uid": "f2b73d0c7596a4c4225bff8be710214a", "src_uid": "b894e16e8c00f8d97fde4a104466b3ef", "apr_id": "ecbfc44e9d9fa902a1c6bb357b3f507d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nchar *foo(char x, int &i);\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    char s[120];\n    scanf(\"%*d %s\", s);\n    for (int i = 0; s[i]; ++i) {\n      char *pr = foo(s[i], i);\n      printf(\"%s\", pr); free(pr);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n\nchar *foo(char x, int &i) {\n  char *ptr = (char *) malloc(3);\n  *ptr = *(ptr + 1) = *(ptr + 2) = '\\0';\n  x == 'U' ?  *ptr = 'D' : x == 'D' ? *ptr = 'U' : (++i, *ptr = 'L', *(ptr + 1) = 'R');\n  return ptr;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nchar *foo(char x, int *i);\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    char s[120];\n    scanf(\"%*d %s\", s);\n    for (int i = 0; s[i]; ++i) {\n      char *pr = foo(s[i], &i);\n      printf(\"%s\", pr); free(pr);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n\nchar *foo(char x, int *i) {\n  char *ptr = (char *) malloc(3);\n  *ptr = *(ptr + 1) = *(ptr + 2) = '\\0';\n  x == 'U' ?  *ptr = 'D' : x == 'D' ? *ptr = 'U' : (++(*i), *ptr = 'L', *(ptr + 1) = 'R');\n  return ptr;\n}\n"}
{"similarity_score": 0.5575620767494357, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "7157374d972e59a501790d243f01432c", "bug_code_uid": "ac18707237a29c2a012fce8667bb3bd4", "src_uid": "337b6d2a11a25ef917809e6409f8edef", "apr_id": "b1b5fed9dfc52cf7c9ad7fc9b6008e00", "difficulty": 1400, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint a[505][505];\nint h[502];\n\nint main()\n{\n\t\tint n,m,q;\n\n\t\tscanf(\"%d%d%d\",&n,&m,&q);\n\t\t\n\t\tint i,j;\n\n\t\tfor( i=1 ; i<=n ; i++ )\n\t\t\t\tfor( j=1 ; j<=m ; j++ )\n\t\t\t\t\t\tscanf(\"%d\",&a[i][j]);\n\n\t\tint count=0;\n\t\tint max=0;\n\t\tint line=1;\n\n\t\tfor( i=1 ; i<=n ; i++ )\n\t\t{\n\t\t\t\tcount=0;\t\n\t\t\t\tfor( j=1 ; j<=m ; j++ )\n\t\t\t\t\t\tif( a[i][j]==1 )\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\th[i]=count;\n\t\t\t\tif(count>max)\n\t\t\t\t{\n\t\t\t\t\t\tmax=count;\n\t\t\t\t\t\tline=i;\n\t\t\t\t}\n\t\t}\n\n\t\twhile(q--)\n\t\t{\n\t\t\t\tint x,y;\n\t\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\t\tif( a[x][y]==0 )\n\t\t\t\t{\n\t\t\t\t\t\ta[x][y]=1;\n\t\t\t\t\t\th[x]=h[x]+1;\n\t\t\t\t\t\tif( max<h[x] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmax=h[x];\n\t\t\t\t\t\t\t\tline=x;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\ta[x][y]=0;\n\t\t\t\t\t\th[x]=h[x]-1;\n\t\t\t\t\t\tif( line==x )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tint i;\n\t\t\t\t\t\t\t\tmax=h[1];\n\t\t\t\t\t\t\t\tfor( i=2 ; i<=n ; i++ )\n\t\t\t\t\t\t\t\t\t\tif( h[i]>max )\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmax=h[i];\n\t\t\t\t\t\t\t\t\t\t\t\tline=i;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\",max);\n\t\t}\n\t\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint a[505][505];\nint h[502];\n\nint main()\n{\n\t\tint n,m,q;\n\n\t\tscanf(\"%d%d%d\",&n,&m,&q);\n\n\t\tint i,j;\n\n\t\tfor( i=1 ; i<=n ; i++ )\n\t\t\t\tfor( j=1 ; j<=m ; j++ )\n\t\t\t\t\t\tscanf(\"%d\",&a[i][j]);\n\n\t\tint count=0;\n\t\tint max=0;\n\t\tint line=1;\n\n\t\tfor( i=1 ; i<=n ; i++ )\n\t\t{\n\t\t\t\tcount=0;\t\n\t\t\t\tfor( j=1 ; j<=m ; j++ )\n\t\t\t\t{\n\t\t\t\t\t\tif( a[i][j]==1 )\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcount=0;\n\t\t\t\t\t\tif(h[i]<count)\n\t\t\t\t\t\t\t\th[i]=count;\n\t\t\t\t}\n\t\t}\n\n\t\twhile(q--)\n\t\t{\n\t\t\t\tint x,y;\n\t\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\t\ta[x][y]=1-a[x][y];\n\t\t\t\th[x]=0;\n\t\t\t\tcount=0;\t\n\t\t\t\tfor( j=1 ; j<=m ; j++ )\n\t\t\t\t{\n\t\t\t\t\t\tif( a[x][j]==1 )\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcount=0;\n\t\t\t\t\t\tif(h[x]<count)\n\t\t\t\t\t\t\t\th[x]=count;\n\t\t\t\t}\n\n\t\t\t\tint i;\n\t\t\t\tmax=h[1];\n\t\t\t\tfor( i=2 ; i<=n ; i++ )\n\t\t\t\t\t\tif( h[i]>max )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmax=h[i];\n\t\t\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\",max);\n\t\t}\n\t\treturn 0;\n}\n\n"}
{"similarity_score": 0.9992254066615027, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d3335d4fa4fbc5f878308dfe8fccfccb", "bug_code_uid": "dd87cee173835afd2b32a55468c61be4", "src_uid": "6fbf41dc32d1c28351d78a9ec5fc0026", "apr_id": "d4385e0fa23baf0ae6f9c835e9e21cc8", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n\tint t,n,k,f,i,x;\r\n\tchar a[100];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tscanf(\"%s\",a); f=0;\r\n\t\tif(k==0) printf(\"YES\\n\");\r\n\t\telse if(n==2) printf(\"NO\\n\");\r\n\t\telse {\r\n\t\t\tfor(i=0;i<n/2;i++) {\r\n\t\t\t\tif(a[i]!=a[n-i-1]) {\r\n\t\t\t\t\tx=i; f=1; break;\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tif(f==0) {\r\n\t\t\t\tif(n%2==0) {\r\n\t\t\t\t\tif(k==n/2) printf(\"NO\\n\");\r\n\t\t\t\t    else printf(\"YES\\n\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif(n%2==0) {\r\n\t\t\t\t\tif(k>x+1) printf(\"NO\\n\");\r\n\t\t\t\t    else printf(\"YES\\n\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(k<x+1) printf(\"YES\\n\");\r\n\t\t\t\t    else printf(\"NO\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} \r\n", "fixed": "#include<stdio.h>\r\nint main() {\r\n\tint t,n,k,f,i,x;\r\n\tchar a[100];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tscanf(\"%s\",a); f=0;\r\n\t\tif(k==0) printf(\"YES\\n\");\r\n\t\telse if(n==2) printf(\"NO\\n\");\r\n\t\telse {\r\n\t\t\tfor(i=0;i<n/2;i++) {\r\n\t\t\t\tif(a[i]!=a[n-i-1]) {\r\n\t\t\t\t\tx=i; f=1; break;\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\tif(f==0) {\r\n\t\t\t\tif(n%2==0) {\r\n\t\t\t\t\tif(k==n/2) printf(\"NO\\n\");\r\n\t\t\t\t    else printf(\"YES\\n\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif(n%2==0) {\r\n\t\t\t\t\tif(k>=x+1) printf(\"NO\\n\");\r\n\t\t\t\t    else printf(\"YES\\n\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(k<x+1) printf(\"YES\\n\");\r\n\t\t\t\t    else printf(\"NO\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} \r\n"}
{"similarity_score": 0.5500667556742324, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "fdb7989bac3d8817b132c9ce55f8898f", "bug_code_uid": "4b7c97637d3c56c938f4677671219d30", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "0443af8a2250eb899c48ad381ba3e32b", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n, i=0, swap=0;\n    char s[n];\n\nscanf(\"%d\",&n);\nscanf(\"%s\",s);\n\nwhile (i<n)\n{\n    if (s[i]==s[i+1])\n    {\n        swap=swap+1;\n        if (s[i]=='a')\n        {\n            s[i]='b';\n            \n        }\n        else\n        {\n            s[i]='a';\n            \n        }\n        \n    }\n    i=i+2;\n    \n}\nprintf(\"%d\\n\",swap);\nprintf(\"%s\\n\",s);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{int n;\nscanf(\"%d\",&n);\nchar s[n];\nscanf(\"%s\",s);\nint i=0,rep=0;\nwhile (i<n){\n    if (s[i]==s[i+1]){\n        rep=rep+1;\n        if (s[i]=='a'){\n            s[i]='b';}\n        else if (s[i]=='b'){\n            s[i]='a';}}\n    i=i+2;}\nprintf(\"%d\\n\",rep);\nprintf(\"%s\",s);\nreturn 0;\n}"}
{"similarity_score": 0.4192708333333333, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "967b3c49f7f926d9b08561b351f43986", "bug_code_uid": "a48b557d77e6821572e48245dd98143d", "src_uid": "b01602b51b9103c0f31c3f50b32aa88d", "apr_id": "62b24e501834a365a6276a40b535cb31", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,s,t,i,c,temp;\n\tint arr[1000000];\n\tscanf(\"%d %d %d\",&n,&s,&t);\n\tfor(i=1;i!=(n+1);i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\ti = t;\n\tif(arr[t] == s)\n\t{\n\t\tc=0;\n\t\twhile(arr[i]>0)\n\t\t{\n\t\t\ttemp = arr[i];\n\t\t\tarr[i] = -1;\n\t\t\ti = temp;\n\t\t\tc = c + 1;\t\n\t\t}\n\t\tprintf(\"%d\\n\",c-1);\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint arr[100001];\nint main()\n{\n\tint n,s,t,i,j,flag=0;\n\tlong long int ans=0;\n\tscanf(\"%d %d %d\",&n,&s,&t);\n\tfor(i=1;i!=n+1;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\ti = s;\n\twhile(arr[i]!=-1)\n\t{\n\t\tj = arr[i];\n\t\tarr[i] = -1;\n\t\ti = j;\n\t\tans = ans + 1;\n\t\tif(i == t)\t\n\t\t{\n\t\t\tflag = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(s == t)\n\t{\n\t\tans = 0;\n\t}\n\tif(flag == 1)\n\t{\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",-1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9992942836979535, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2d2e0348101ef8f0cac114fddb78d640", "bug_code_uid": "1f3fbb63d0e2531f4f78726602c690dc", "src_uid": "2c58d94f37a9dd5fb09fd69fc7788f0d", "apr_id": "79e0074866bb06f080fc83de4a9b597f", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint i,j,k,n,a[1000],sum,sum1=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tif(n==1)\n\t{\n\t\tprintf(\"YES\");\n\t}\n\telse if(n%2==0&&n>1)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum=0;\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[i]==a[j])\n\t\t\t\t{\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum>=n/2)\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(sum<=n/2)\n\t\t\t{\n\t\t\t\tsum1++;\n\t\t\t}\n\t\t}\n\t\tif(sum1==n)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t}\n\telse if(n%2!=0&&n>1)\n\t{\n\t\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum=0;\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[i]==a[j])\n\t\t\t\t{\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum>n/2+1)\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(sum<=n/2+1)\n\t\t\t{\n\t\t\t\tsum1++;\n\t\t\t}\n\t\t}\n\t\tif(sum1==n)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t}\n\t\n\t\t\n\t\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint i,j,k,n,a[1000],sum,sum1=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tif(n==1)\n\t{\n\t\tprintf(\"YES\");\n\t}\n\telse if(n%2==0&&n>1)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum=0;\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[i]==a[j])\n\t\t\t\t{\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum>n/2)\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(sum<=n/2)\n\t\t\t{\n\t\t\t\tsum1++;\n\t\t\t}\n\t\t}\n\t\tif(sum1==n)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t}\n\telse if(n%2!=0&&n>1)\n\t{\n\t\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum=0;\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[i]==a[j])\n\t\t\t\t{\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum>n/2+1)\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(sum<=n/2+1)\n\t\t\t{\n\t\t\t\tsum1++;\n\t\t\t}\n\t\t}\n\t\tif(sum1==n)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t}\n\t\n\t\t\n\t\n}"}
{"similarity_score": 0.8435045317220544, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "ff738213cf0cda3a60e39ff4375a97d0", "bug_code_uid": "beae1d11daba14e995d15a52ee0b3816", "src_uid": "3634a3367a1f05d1b3e8e4369e8427fb", "apr_id": "1abcf6ce9848b2c1c55db6cdbe9c9834", "difficulty": 1600, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long gcd(long long a, long long b) \n{ \n\tif (a == 0)  return b; \n    if (b == 0)   return a; \n   \n    if (a == b)    return a; \n  \n    if (a > b)   return gcd(a-b, b); \n    return gcd(a, b-a); \n} \nmain(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tfor(int i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n\t\n\tint pre[n];\n\tint pos[n];\n\tpre[0]=arr[0];\n\tpos[n-1]=arr[n-1];\n\t\n\tfor(int i=1;i<n;i++){\n\t\tpre[i]=gcd(arr[i],pre[i-1]);\n\t\t\n\t}\n\t\n\n\t\n\tfor(int i=n-2;i>=0;i--){\n\t\tpos[i]=gcd(arr[i],pos[i+1]);\n\t\t\n\t}\n\t\n\tlong long ans;\n\t\n\tfor(int i=0;i<n;i++){\n\t\n\t\tif(i==0){\n\t\t\tint temp=pos[1];\n\t\t\tans=(long long)temp;\n\t\t}\n\t\t\n\t\telse if(i==n-1){\n\t\t\tint temp=pre[n-1];\n\t\t\tans=(long long)ans*temp/(gcd(ans,(long long)temp));\n\t\t}\n\t\t\n\t\t\n\t\telse{\n\t\t\t\t\n\t\t\tint temp=gcd(pre[i-1],pos[i+1]);\n\t\t\n\t\t\tans=(long long)ans*temp/(gcd(ans,(long long)temp));\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\n\t}\n\t\n\t\n\tprintf(\"%lld\",ans);\n\t\n\t\n}", "fixed": "#include<stdio.h>\nlong long gcd(long long x, long long y){\n\tif(y==0) return x;\n\telse return gcd(y,x%y);\n}\nmain(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tfor(int i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n\t\n\tint pre[n];\n\tint pos[n];\n\tpre[0]=arr[0];\n\tpos[n-1]=arr[n-1];\n\t\n\tfor(int i=1;i<n;i++){\n\t\tpre[i]=gcd(arr[i],pre[i-1]);\n\t\t\n\t}\n\t\n\n\t\n\tfor(int i=n-2;i>=0;i--){\n\t\tpos[i]=gcd(arr[i],pos[i+1]);\n\t\t\n\t}\n\t\n\tlong long ans;\n\t\n\tfor(int i=0;i<n;i++){\n\t\n\t\tif(i==0){\n\t\t\tlong long temp=pos[1];\n\t\t\tans=(long long)temp;\n\t\t}\n\t\t\n\t\telse if(i==n-1){\n\t\t\tlong long temp=pre[n-2];\n\t\t\tans=(long long)ans*temp/(gcd(ans,(long long)temp));\n\t\t}\n\t\t\n\t\t\n\t\telse{\n\t\t\t\t\n\t\t\tlong long temp=gcd(pre[i-1],pos[i+1]);\n\t\t\n\t\t\tans=(long long)ans*temp/(gcd(ans,(long long)temp));\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\n\t}\n\t\n\t\n\tprintf(\"%lld\",ans);\n\t\n\t\n}"}
{"similarity_score": 0.9981481481481481, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f2677888711ce76dc4b7ada85a8d0b06", "bug_code_uid": "2fff43389796bc88d4b836b88baf9d9e", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "9460663db85d92329b58bc6d749d627e", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n        char a[10000][10000];\n        int n=0;\n\n//      printf(\"how many words ?\\n\");\n        scanf(\"%d\",&n);\n\n//      printf(\"enter the damn strings\\n\");\n        for(int i=0;i<n;i++)\n                scanf(\"%s\",&a[i][100]);\n\n        for(int i=0;i<=n;i++)\n        {\n             int m=strlen(a[i]);\n                if(m>10)\n                        printf(\"%c%d%c\\n\",a[i][0],(m-2),a[i][m-1]);\n                else\n                        printf(\"%s\\n\",a[i]);\n        }\n\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n        char a[10000][10000];\n        int n=0;\n\n//      printf(\"how many words ?\\n\");\n        scanf(\"%d\",&n);\n\n//      printf(\"enter the damn strings\\n\");\n        for(int i=0;i<n;i++)\n                scanf(\"%s\",&a[i][10000]);\n\n        for(int i=0;i<=n;i++)\n        {\n             int m=strlen(a[i]);\n                if(m>10)\n                        printf(\"%c%d%c\\n\",a[i][0],(m-2),a[i][m-1]);\n                else\n                        printf(\"%s\\n\",a[i]);\n        }\n\n        return 0;\n}\n"}
{"similarity_score": 0.9387096774193548, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "4fff21dce04ed90a22d9c5bae0d282ec", "bug_code_uid": "ba72fb8a3e67826de24f4d03213d5d16", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "e3bfba142617ef76d6d4a41e7136e713", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n    int n,i,a,b,c,e,f;\n    scanf(\"%d\",&n);\n    c=0;\n    b=0;\n    e=0;\n    f=0;\n    for(i=1;i<=n;i++){\n    scanf(\"%d\",&a);\n    if(a%2==0){\n    c++;\n    b=a;\n    }\n    else{\n    e++;\n    f=a;\n    }\n    if(c==1)\n    printf(\"%d\",b);\n    else\n    printf(\"%d\",f);\n    }\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (){\n    int n,i,a,b,c,e,f;\n    scanf(\"%d\",&n);\n    c=0;\n    b=0;\n    e=0;\n    f=0;\n    for(i=1;i<=n;i++){\n    scanf(\"%d\",&a);\n    if(a%2==0){\n    c++;\n    b=i;\n    }\n    else{\n    e++;\n    f=i;\n    }\n    }\n      if(c==1)\n    printf(\"%d\",b);\n    else\n    printf(\"%d\",f);\nreturn 0;\n}\n"}
{"similarity_score": 0.9183400267737617, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c073ce4cef17001b16d9cf914814e3a1", "bug_code_uid": "a4729cb2817d88d1cb6336e5052eee6f", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "7590137c810f1d854127152de835cb86", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\n    long long a,b,c,d,T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n        if(a<b && a<c && a<d)\r\n        printf(\"3\\n\");\r\n        else if(a<b && a<c)\r\n        printf(\"2\\n\");\r\n        else if(a>b && a>c && a>d)\r\n        printf(\"0\\n\");\r\n        else\r\n        printf(\"1\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nvoid main()\r\n{\r\n    int a,b,c,d,T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n        if(a<b && a<c && a<d)\r\n        printf(\"3\\n\");\r\n        else if((a<b && a<c)||(a<b && a<d)||(a<c &&a<d))\r\n        printf(\"2\\n\");\r\n        else if(a>b && a>c && a>d)\r\n        printf(\"0\\n\");\r\n        else\r\n        printf(\"1\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9974651457541192, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d16099bc562973da1fa85a7a58626b47", "bug_code_uid": "37776ee1689a64302995f5f92044c0fe", "src_uid": "0fbc306d919d7ffc3cb02239cb9c2ab0", "apr_id": "9a012c2bd40e9388f2f0ffa02ea7c70b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int j,x,n,i,a[1000],c=0,bit[1000]={0};\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)        \n                scanf(\"%d\",&a[i]);\n        for(i=0,j=0;i<n;i++)\n        {\n                if(a[i]==0)                \n                        bit[j++]=0;\n                else\n                {\n                        bit[j]++;                        \n                        if(a[i+1]==0)\n                                j++;\n                }\n        }\n        for(i=0;i<j;i++)\n        {\n//                printf(\"%d \",bit[i]);\n                if(bit[i]!=0)\n                        c+=bit[i]+1;\n        }\n        if(c>=1)\n                printf(\"%d\\n\",c-1);\n        else\n                printf(\"0\\n\");\n        return 0;\n}\n\n        \n                \n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int j,x,n,i,a[1010],c=0,bit[1010]={0};\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)        \n                scanf(\"%d\",&a[i]);\n        for(i=0,j=0;i<n;i++)\n        {\n                if(a[i]==0)                \n                        bit[j++]=0;\n                else\n                {\n                        bit[j]++;                        \n                        if(a[i+1]==0)\n                                j++;\n                }\n        }\n        for(i=0;i<j;i++)\n        {\n//                printf(\"%d \",bit[i]);\n                if(bit[i]!=0)\n                        c+=bit[i]+1;\n        }\n        if(c>=1)\n                printf(\"%d\\n\",c-1);\n        else\n                printf(\"0\\n\");\n        return 0;\n}\n\n        \n                \n\n\n\n\n"}
{"similarity_score": 0.5620915032679739, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "9044cc1be7e5058bdab407415729ddde", "bug_code_uid": "cb65c61dc9a57778f45687e4feb96a29", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "b9caee967a80192e306bb448dceef73a", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long long int n,i;\r\n        scanf(\"%lld\",&n);\r\n        long long int a[n],s1=0,s2=0,s=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n                if(a[i]==1)\r\n                    s1++;\r\n                else\r\n                    s2++;\r\n                s=s+a[i];\r\n        }\r\n        if(s%2!=0)\r\n            printf(\"NO\\n\");\r\n        else if(n%2!=0)\r\n        {\r\n            if(s1==0||s2==0)\r\n                printf(\"NO\\n\");\r\n        }\r\n        else\r\n            printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long long int n,f1=0,f2=0,sum=0;\r\n        scanf(\"%lld\",&n);\r\n        long long int arr[n],i;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lld\",&arr[i]);\r\n            sum=sum+arr[i];\r\n            if(arr[i]==1)\r\n            f1++;\r\n            else\r\n            f2++;\r\n        }\r\n        if(sum%2!=0)\r\n        printf(\"NO\\n\");\r\n        else if((n%2!=0&&f1==0)||(n%2!=0&&f2==0))\r\n        printf(\"NO\\n\");\r\n        else\r\n        printf(\"YES\\n\");\r\n        \r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.3165554881746513, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "75046196f80a9aa2e3636ed91abdf92b", "bug_code_uid": "7ade3217e40a6f03a55f35cd4af6eaba", "src_uid": "e0a3c678f6d1d89420c8162b0ddfcef7", "apr_id": "bb618791ea417291fd660046f464fcd1", "difficulty": 1500, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#pragma warning(disable : 4996)\n#include <stdio.h>\n#include <stdlib.h>\nint arr[125000000];\n\nint main() {\n\tint count;\n\tint n, a, b, aa = 0, bb = 0;\n\tint c = 0;\n\tint ii = 0;\n\t//int arr[50000];\n\n\tfscanf(stdin, \"%d\", &count);\n\n\tfor (int i = 0; i < count; i++) {\n\n\t\tfscanf(stdin, \"%d %d %d\", &n, &a, &b);\n\n\t\tif (a > 1) {\n\t\t\taa = 1 * a;\n\t\t\tarr[c] = aa;\n\t\t\tc++;\n\t\t}\n\t\tif (b > 0) {\n\t\t\tbb = 1 + b;\n\t\t\tarr[c] = bb;\n\t\t\tc++;\n\t\t}\n\t\t//printf(\"%d %d %d\", n, a, b);\n\n\t\twhile (1) {\n\t\t\t//if (aa == n || bb == n) {\n\t\t\t//\tprintf(\"Yes\\n\");\n\t\t\t//\tc = 0;\n\t\t\t//\tii = 0;\n\t\t\t//\tbreak;\n\t\t\t//}\n\t\t\t//else {\n\t\t\t\tif (aa < n || bb < n) {\n\t\t\t\t\tif (a > 1) {\n\t\t\t\t\t\taa = arr[ii] * a;\n\t\t\t\t\t\tif (aa == n) {\n\t\t\t\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\tii = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tarr[c] = aa;\n\t\t\t\t\t\tc++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (b > 0) {\n\t\t\t\t\t\tbb = arr[ii] + b;\n\t\t\t\t\t\tif (bb == n) {\n\t\t\t\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\tii = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tarr[c] = bb;\n\t\t\t\t\t\tc++;\n\t\t\t\t\t}\n\n\t\t\t\t\tii++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprintf(\"No\\n\");\n\t\t\t\t\tc = 0;\n\t\t\t\t\tii = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t//}\n\n\t\t}\n\n\t}\n\n\n}\n\nint clear_input_buffer(void) {\n\tint ch;\n\twhile (((ch = getchar()) != EOF) && (ch != '\\n')) /* void */;\n\treturn ch;\n}", "fixed": "#pragma warning(disable : 4996)\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n\tint count;\r\n\tint n, a, b;\r\n\tlong long x;\r\n \r\n\tfscanf(stdin, \"%d\", &count);\r\n \r\n\tfor (int i = 0; i < count; i++) {\r\n\t\tfscanf(stdin, \"%d %d %d\", &n, &a, &b);\r\n\t\tx = 1;\r\n\t\twhile (1)\r\n\t\t{\r\n\t\t\tif (n < x) { printf(\"No\\n\"); break; }\r\n\t\t\tif ((n-x)%b == 0) { printf(\"Yes\\n\"); break; }\r\n\t\t\telse { x *= a; }\r\n\t\t\tif (a == 1) { printf(\"No\\n\"); break; }\r\n\t\t} \r\n\t} \r\n} \r\n"}
{"similarity_score": 0.9719101123595506, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "643336faf9a09cd668ec0842c04b2750", "bug_code_uid": "9a691a4d35e2468083d2d24162f3e5f6", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "a2783f04451531f82a9900d8746fe142", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "int main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        long long int a,b;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        if(b==1)\r\n        {\r\n            printf(\"NO\\n\");\r\n            break;\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n            printf(\"%lld %lld %lld\\n\",a,a*b,a*(b+1));\r\n        }\r\n    }\r\n\r\n}\r\n", "fixed": "int main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        long long int a,b;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        if(b==1)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n            printf(\"%lld %lld %lld\\n\",a,a*b,a*(b+1));\r\n        }\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.9972826086956522, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b32770642b2f575c7b1ac68cb760c6a5", "bug_code_uid": "3c8b962cf343cf753644ccd6d485328d", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "dc4cf818f8968fbaf99337b02e8618d9", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(void) {\n\t// your code goes here\n\tchar s1[10002],s2[100002];\n\t//long long int n1,n2,res;\n\tscanf(\"%s\",s1);\n\tscanf(\"%s\",s2);\n\tif(strcmp(s1,s2)==0){\n\tprintf(\"-1\\n\");\n\treturn 0;}\n\telse\n\t{\n\t    if(strlen(s1)>=strlen(s2))\n\t    printf(\"%d\",strlen(s1));\n\t    else\n\t    printf(\"%d\",strlen(s2));\n\t}\n         \n          return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(void) {\n\t// your code goes here\n\tchar s1[100002],s2[1000002];\n\t//long long int n1,n2,res;\n\tscanf(\"%s\",s1);\n\tscanf(\"%s\",s2);\n\tif(strcmp(s1,s2)==0){\n\tprintf(\"-1\\n\");\n\treturn 0;}\n\telse\n\t{\n\t    if(strlen(s1)>=strlen(s2))\n\t    printf(\"%d\",strlen(s1));\n\t    else\n\t    printf(\"%d\",strlen(s2));\n\t}\n         \n          return 0;\n}"}
{"similarity_score": 0.8403908794788274, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c54f9a2e4c5f293121c3dfebfceaad4d", "bug_code_uid": "1b74e1173ebe1e112df6e532f9f61f9a", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "c4a9ecb72dd8922c34d8bbb881ee452e", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(t)\n{\n\tfor (scanf(\"%d\", &t); t; t--)\n\t{\n\t\tchar str[9][10];\n\t\tfor (int i = 0; i < 9; i++)\n\t\t{\n\t\t\tscanf(\"%s\", str[i]);\n\t\t\tstr[i][i]++;\n\t\t\tstr[i][i] -= 9 * (str[i][i] > '9');\n\t\t}\n\t\tfor (int i = 0; i < 9; i++)\n\t\t\tprintf(\"%s\\n\", str[i]);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint pos[9] = {\n\t0, 3, 6,\n\t1, 4, 7,\n\t2, 5, 8};\n\nint main(t)\n{\n\tfor (scanf(\"%d\", &t); t; t--)\n\t{\n\t\tchar str[9][10];\n\t\tfor (int i = 0; i < 9; i++)\n\t\t{\n\t\t\tscanf(\"%s\", str[i]);\n\t\t\tstr[i][pos[i]]++;\n\t\t\tstr[i][pos[i]] -= 9 * (str[i][pos[i]] > '9');\n\t\t}\n\t\tfor (int i = 0; i < 9; i++)\n\t\t\tprintf(\"%s\\n\", str[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9708222811671088, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6c69167027fa8e4bd71530b7bdf97d7c", "bug_code_uid": "f6a440847c805a6292e32b21e9ce4cda", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "e5ca1de170401faa2d3f311072521799", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(n,m)\n{scanf(\"%d%d\",&n,&m);\nint a,b,i;\ndouble p,mi;\t\nfor(i=0;i<n;i++)\n{scanf(\"%d%d\",&a,&b);\np=1.0*m*a/b;\nif(i==0)\nmi=p;\nelse if(p<mi)\t\nmi=p;\n}\t\nprintf(\"%lf\",mi);\t\n}", "fixed": "#include<stdio.h>\nint main(n,m)\n{scanf(\"%d%d\",&n,&m);\nint a,b,i;\nfloat p,mi;\t\nfor(i=0;i<n;i++)\n{scanf(\"%d%d\",&a,&b);\np=1.0*m*a/b;\nif(i==0)\nmi=p;\nelse if(p<mi)\t\nmi=p;\n}\t\nprintf(\"%f\",mi);\n}"}
{"similarity_score": 0.285, "equal_cnt": 19, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "4a9acf737b5ad0be449a851cd480cfe7", "bug_code_uid": "479d33f55c66b5e0b6c516170c9043e6", "src_uid": "08679e44ee5d3c3287230befddf7eced", "apr_id": "1c8289c736dee3c141ed500541438c77", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{   int n;\n   scanf(\"%d\",&n);\n\t\n\twhile(n--){\n    int t=0;\n    char a[100],b[100],c[100];\n\tscanf(\"%s%s%s\",&a,&b,&c);\n\tint l,i;\n\tl=strlen(a);\n\tfor(i=0;i<l;i++){\n\t\tif(b[i]==c[i] ||a[i]==c[i])\n\t\tt=1;\n\t\telse\n\t\tt=0;\n\t}\n\tif(t==1)\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\t\n}\nreturn 0;\n\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int i, l, che, t;\n    char a[102], b[102], c[102];\n \n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%s %s %s\", a, b, c);\n        l=strlen(a);\n        che=0;\n        for(i=0;i<l;i++)\n        {\n            if(a[i]!=c[i]&&b[i]!=c[i])\n            {\n                che=1;\n                break;\n            }\n \n        }\n        if(che==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9272503082614056, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "edccc5e78edc22027c7490c58956b805", "bug_code_uid": "7ec8a5db3584cc29eba261f626ad4a1f", "src_uid": "23575500451a061ed498468f3814c38a", "apr_id": "72b426b76575dc8ba23be4571dac6c29", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,f,i,x,y;\n\tchar a[1001];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&f);\n\t\tgetchar();\n\t\tgets(a);\n\t\t\n\t\tfor(i=0;i<f/2;i++)\n\t\t{\n\t\t\tif(a[i]=='1'){\n\t\t\t\n\t\t\tx=f-i;\n\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(i=f-1;i>=f/2;i--)\n\t\t{\n\t\t\tif(a[i]=='1')\n\t\t\t{\n\t\t\t\ty=i+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(x>=y)\n\t\tprintf(\"%d\\n\",x*2);\n\t\telse\n\t\tprintf(\"%d\\n\",y*2);\n\t}\n\treturn 0;\n}\n\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,f,i,x,y;\n\tchar a[1001];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tx=0;\n\t\ty=0;\n\t\tscanf(\"%d\",&f);\n\t\tgetchar();\n\t\tgets(a);\n\t\t\n\t\tfor(i=0;i<f/2;i++)\n\t\t{\n\t\t\tif(a[i]=='1'){\n\t\t\t\n\t\t\tx=f-i;\n\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(i=f-1;i>=f/2;i--)\n\t\t{\n\t\t\tif(a[i]=='1')\n\t\t\t{\n\t\t\t\ty=i+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(x==0&&y==0)\n\t\tprintf(\"%d\\n\",f);\n\t\t\n\t\telse if(x>=y)\n\t\tprintf(\"%d\\n\",x*2);\n\t\telse\n\t\tprintf(\"%d\\n\",y*2);\n\t}\n\treturn 0;\n}\n\t\t"}
{"similarity_score": 0.7015057573073517, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "747df71c132ae61dd781063c3fb9072f", "bug_code_uid": "ea5d7e0e74252c51bba62b55d74ee902", "src_uid": "9693f60fc65065d00a1899df999405fe", "apr_id": "a963680af48abd04b666df6d14c18f85", "difficulty": 1300, "tags": ["combinatorics", "math", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <memory.h>\n\n#define DATA_SIZE 100005\nchar data[DATA_SIZE];\n\nint main()\n{\n\tint n;\n\tmemset(data, 0, sizeof(data));\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", data);\n\tint left_ptr = 1, right_ptr = n - 2;\n\twhile (left_ptr < n && data[left_ptr] == data[0])left_ptr++;\n\twhile (right_ptr >= 0 && data[right_ptr] == data[n - 1])right_ptr--;\n\tif (right_ptr == -1)\n\t{\n\t\tprintf(\"%d\", n);\n\t} else if (data[0] == data[n - 1])\n\t{\n\t\tprintf(\"%d\", left_ptr * (n - right_ptr - 1) * 2 + 2);\n\t} else\n\t{\n\t\tprintf(\"%d\", left_ptr + (n - right_ptr - 1) + 1);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <memory.h>\n\n#define DATA_SIZE 200005\nchar data[DATA_SIZE];\n\nint main()\n{\n\tlong long int n;\n\tmemset(data, 0, sizeof(data));\n\tscanf(\"%I64d\", &n);\n\tscanf(\"%s\", data);\n\tlong long int left_ptr = 1, right_ptr = n - 2;\n\twhile (left_ptr < n && data[left_ptr] == data[0])left_ptr++;\n\twhile (right_ptr >= 0 && data[right_ptr] == data[n - 1])right_ptr--;\n\tif (data[0] == data[n - 1])\n\t{\n\t\tlong long res = (left_ptr + 1) * (n - right_ptr) % 998244353;\n\t\tprintf(\"%I64d\", res);\n\t} else\n\t{\n\t\tprintf(\"%I64d\", left_ptr + n - right_ptr);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8567335243553008, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8b2d73b5cf63514bf8b1286d7d8f234c", "bug_code_uid": "98ba0f7e47652936ea0f06bea7b76971", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "a48266a5f202bdd9b07b14340c3ae226", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h> \n#include<math.h> \nint main()\n{\n      long long int t,n,x,a,b,c;\n      scanf(\"%lld\",&t);\n      while(t--){\n             scanf(\"%lld %lld %lld %lld\",&n,&x,&a,&b);\n             if(abs(a-b)==n-1) c=abs(a-b);\n             else if(a>b) c=(x+a)-b;\n             else c=(x+b)-a;\n             printf(\"%lld\\n\",c);\n      }\n      return 0;\n}", "fixed": "#include<stdio.h> \n#include<math.h> \nint main()\n{\n      long long int t,n,x,a,b,c;\n      scanf(\"%lld\",&t);\n      while(t--){\n             scanf(\"%lld %lld %lld %lld\",&n,&x,&a,&b);\n             if(a>b) c=(x+a)-b;\n             else c=(x+b)-a;\n             if(c<(n-1)) printf(\"%lld\\n\",c);\n             else printf(\"%lld\\n\",n-1);\n      }\n      return 0;\n}"}
{"similarity_score": 0.9772209567198178, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5f6567bcf7af045925543617af2d986e", "bug_code_uid": "b085d4ea51b92180f241e0bd96831a22", "src_uid": "c8531b2ab93993b2c3467595ad0679c5", "apr_id": "5a86daf0b83a925a410edd4fad5c4926", "difficulty": 1100, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nlong long int answers[103];\nlong long int clicks[103];\nint main()\n{\n    int n, i, click = 0;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++)\n        scanf(\"%I64d\", &answers[i]);\n    for(i = 0; i < n; i++)\n    {\n        clicks[i] = answers[i] + i;\n        if(i > 0)\n            clicks[i] = clicks[i] + clicks[i - 1];\n    }\n    printf(\"%I64d\\n\", clicks[n - 1]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nlong long int answers[103];\nlong long int clicks[103];\nint main()\n{\n    int n, i, click = 0;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++)\n        scanf(\"%I64d\", &answers[i]);\n    for(i = 0; i < n; i++)\n    {\n        clicks[i] = (answers[i] - 1)*(i + 1) + 1;\n        if(i > 0)\n            clicks[i] = clicks[i] + clicks[i - 1];\n    }\n    printf(\"%I64d\\n\", clicks[n - 1]);\n    return 0;\n}\n"}
{"similarity_score": 0.8492462311557789, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d0ac0b66084cbcd85efff53c72fdf497", "bug_code_uid": "bcfd6632007a4fbb9647199876d09d99", "src_uid": "3c06e3cb2d8468e738b736a9bf88b4ca", "apr_id": "5afa8c75fc7b4a1eebb39bc5ae46d13a", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){int n, j;\n\tchar v[2][11], m[2][11];\n\tgets(v[0]);\n\tgets(v[1]);\n\tputs(v[0]);\n\tputs(v[1]);\n\tscanf(\"%d\", &n);\n\tfor(j=0; j<n; j++){\n\t\tscanf(\"%s\", m[0]);\n\t\tscanf(\"%s\", m[1]);\n\t\tif(strcmp(m[0], v[0])==0){\n\t\t\tstrcpy(v[0],m[1]);\n\t\t\tprintf(\"%s %s\\n\", v[1], m[1]);\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tstrcpy(v[1],m[1]);\n\t\t\tprintf(\"%s %s\\n\", v[0], m[1]);\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){int n, j;\n\tchar v[2][11], m[2][11];\n\tscanf(\"%s\", v[0]);\n\tscanf(\"%s\", v[1]);\n\tprintf(\"%s %s \\n\", v[0], v[1]);\n\tscanf(\"%d\", &n);\n\tfor(j=0; j<n; j++){\n\t\tscanf(\"%s\", m[0]);\n\t\tscanf(\"%s\", m[1]);\n\t\tif(strcmp(m[0], v[0])==0){\n\t\t\tstrcpy(v[0],m[1]);\n\t\t\tprintf(\"%s %s\\n\", v[1], m[1]);\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tstrcpy(v[1],m[1]);\n\t\t\tprintf(\"%s %s\\n\", v[0], m[1]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3140877598152425, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ac8b96a9b51cf8a556ec22f50ab37de7", "bug_code_uid": "133872a5416d4e3fcdc2cdcd64ee102b", "src_uid": "2e837d3afc48177516578a950e957586", "apr_id": "f3e602c2f41c1f979159b326f9780aaf", "difficulty": 1200, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n\tint test, j;\r\n\tint n, k;\r\n\tscanf(\"%d\" , &test);\r\n\twhile (test--)\r\n\t{\r\n\t\tscanf(\"%d %d\", &n , &k);\r\n\t\tint a, b;\r\n\t\ta = n ;\r\n\t\tb = 1;\r\n\t\tfor (j = 1; j < k ; j++)\r\n\t\t{\r\n\t\t\ta -= 1;\r\n\t\t\tb += 1;\r\n\t\t\t\r\n\t\t\tif (a < 1){a = n;}\r\n\t\t\tif(b > n){b = 1;}\r\n\t\t\tif(a == b){ b += 1 ;}\r\n\t\t\tif(b > n){b = 1;}\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\",b);\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nvoid solve()\r\n{\r\n\tint n, k;\r\n\tscanf(\"%d %d\", &n, &k);\r\n\r\n\tif (n % 2 == 0)\r\n\t{\r\n\t\tif (k%n == 0)\r\n\t\t{\r\n\t\t\tprintf(\"%d\\n\",n);\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\telse{\r\n\t\tprintf(\"%d\\n\",k%n);\r\n\t\treturn ;\r\n\t\t}\r\n\t}else\r\n\t{if(((k+((k-1)/((n-1)/2)))%n) == 0)\r\n\t\t{printf(\"%d\\n\",n );}\r\n\t\telse{\r\n\t\t\tprintf(\"%d\\n\",(k+((k-1)/((n-1)/2)))%n);\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint test;\r\n\tscanf(\"%d\",&test);\r\n\twhile (test--)\r\n\t{\r\n\t\tsolve();\r\n\t}\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8697123519458545, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "761430a5fe4f7ad73c87723290a8b5ee", "bug_code_uid": "4af316c4e809c68b866f4dbd2dac08af", "src_uid": "2c58d94f37a9dd5fb09fd69fc7788f0d", "apr_id": "3c312cfebc70d57853e4cf656fa3cc6a", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 1001\nint a[N];\nint main(void)\n{\n    int t, i, n;\n    scanf(\"%d\", &n);\n\n    for(t = 0; t < n; t++){\n        scanf(\"%d\", &i);\n        a[i] = 1;\n    }\n\n    for(t = 0, i = 1; i < N; i++)\n        if(a[i])    t++;\n    printf(t >= n / 2 ? \"YES\\n\" : \"NO\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define N 1001\nint a[N];\nint main(void)\n{\n    int t, i, n;\n    scanf(\"%d\", &n);\n\n    for(t = 0; t < n; t++){\n        scanf(\"%d\", &i);\n        a[i]++;\n    }\n    for(i = 1; i < N; i++)\n        if(a[i] > (n+1) / 2)    break;\n    printf(i == N ? \"YES\\n\" : \"NO\\n\");\n    return 0;\n}"}
{"similarity_score": 0.9747899159663865, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "05f3a34c401c8ca8ef6f58cd51fc0cc3", "bug_code_uid": "526c57b14f612d55ac14d500f8a18613", "src_uid": "08cd22b8ee760a9d2dacb0d050dcf37a", "apr_id": "a2903a21c7dcf84cdad91f369efcef2b", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<string.h>\r\n#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n,k;\r\n        scanf(\"%d %d\", &n,&k);\r\n        char st[n];\r\n        scanf(\"%s\", st);\r\n        if(k==0){\r\n            printf(\"1\\n\");\r\n            continue;\r\n        }\r\n        else{\r\n            char temp1[n];\r\n            strcpy(temp1,st);\r\n            char strev[n];\r\n            strcpy(strev,strrev(st));\r\n            int n=strcmp(strev,temp1);\r\n            if(n==0){\r\n                printf(\"1\\n\");\r\n            }\r\n            else{\r\n                printf(\"2\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<string.h>\r\n#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n,k;\r\n        scanf(\"%d %d\", &n,&k);\r\n        char st[n+2];\r\n        scanf(\"%s\", st);\r\n        if(k==0){\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n            char temp1[n+2];\r\n            strcpy(temp1,st);\r\n            char strev[n+2];\r\n            strcpy(strev,strrev(st));\r\n            int s=strcmp(strev,temp1);\r\n            if(s==0){\r\n                printf(\"1\\n\");\r\n            }\r\n            else{\r\n                printf(\"2\\n\");\r\n            }\r\n\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9399656946826758, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "2b9bd6fd240329f87896a62604e8a298", "bug_code_uid": "cc40d1918c47b42d02766d93d535adb4", "src_uid": "fc37ef81bb36f3ac07ce2c4c3ec10d98", "apr_id": "28237cf9c45b512415e2320120918f21", "difficulty": 1100, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n\nint main() {\n\tint d, h, v, e;\n\tdouble n, r;\n\n\tscanf(\"%d%d%d%d\", &d, &h, &v, &e);\n\tr = (double) d / 2;\n\tn = (double) v * v * v / (r * r * M_PI * h);\n\tif (e >= n)\n\t\tprintf(\"NO\\n\");\n\telse {\n\t\tprintf(\"YES\\n\");\n\t\tprintf(\"%.12lf\\n\", 1 / (n - e));\n\t}\n\treturn 0;\n}\n", "fixed": "#include <math.h>\n#include <stdio.h>\n\nint main() {\n\tint d, h, v, e;\n\tdouble r, hv; \n\n\tscanf(\"%d%d%d%d\", &d, &h, &v, &e);\n\tr = (double) d / 2;\n\thv = (double) v / (r * r * M_PI);\n\tif (e >= hv)\n\t\tprintf(\"NO\\n\");\n\telse {\n\t\tprintf(\"YES\\n\");\n\t\tprintf(\"%.12lf\\n\", h / (hv - e));\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9885515181682429, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6f408f9f1145c1f078dbf3c530b8140b", "bug_code_uid": "0becb663929ee1da8b27d0994720c171", "src_uid": "d55660b8091bca2211fa1ad56402aebd", "apr_id": "ea4481f5357ba39a610e6dcd1128c81d", "difficulty": 2000, "tags": ["math", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\ninline int read() {\r\n    int x = 0, w = 1, ch = getchar();\r\n    if(ch == '_')w = -1, ch = getchar();\r\n    while (ch >= '0' && ch <= '9') x = x * 10 + (ch - '0'), ch = getchar();\r\n    return x * w; \r\n}\r\n#define min(x, y) ((x < y)?x:y)\r\n#define max(x, y) ((x > y)?x:y)\r\n#define MX (int)(2e5 + 10)\r\nint n, p[MX], loc[MX];\r\nsigned main(){\r\n    for(int T = read();T>0;T--){\r\n        n = read();\r\n        for(int i = 0;i<n;i++)p[i] = read();\r\n        for(int i = 0;i<n;i++)loc[p[i]] = i;\r\n        int added = 0, l = 1e9, r = -1e9, ans = 0;\r\n        for(int siz = 1;siz<=n;siz++){\r\n            if(added < (siz + 1)/2){\r\n                l = min(l, loc[added]);\r\n                r = max(r, loc[added]);\r\n                ++added;\r\n            }\r\n            if(r - l + 1 > siz)continue;\r\n            int lft = max(0, r - siz + 1), rt = min(n - 1, l + siz - 1);\r\n            ans += max(0, rt - lft + 1 - siz + 1);\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\ninline int read() {\r\n    int x = 0, w = 1, ch = getchar();\r\n    if(ch == '_')w = -1, ch = getchar();\r\n    while (ch >= '0' && ch <= '9') x = x * 10 + (ch - '0'), ch = getchar();\r\n    return x * w; \r\n}\r\n#define min(x, y) ((x < y)?x:y)\r\n#define max(x, y) ((x > y)?x:y)\r\n#define MX (int)(2e5 + 10)\r\nint n, p[MX], loc[MX];\r\nsigned main(){\r\n    for(int T = read();T>0;T--){\r\n        n = read();\r\n        for(int i = 0;i<n;i++)p[i] = read();\r\n        for(int i = 0;i<n;i++)loc[p[i]] = i;\r\n        int added = 0, l = 1e9, r = -1e9;\r\n        long long ans = 0;\r\n        for(int siz = 1;siz<=n;siz++){\r\n            if(added < (siz + 1)/2){\r\n                l = min(l, loc[added]);\r\n                r = max(r, loc[added]);\r\n                ++added;\r\n            }\r\n            if(r - l + 1 > siz)continue;\r\n            int lft = max(0, r - siz + 1), rt = min(n - 1, l + siz - 1);\r\n            ans += max(0, rt - lft + 1 - siz + 1);\r\n        }\r\n        printf(\"%lld\\n\", ans);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9989417989417989, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "87624ac5167cd8794d0e0534628776c9", "bug_code_uid": "d03c10eaad5e3124a15bc6c744f9b943", "src_uid": "8e182e0acb621c86901fb94b56ff991e", "apr_id": "fdfe56aa0a3e772479c300f357624010", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX(a,b) (((a)>(b))?(a):(b))\nint main() {\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--){\n        long long int n,k,i,j,l=0,li,max=0;\n        long long int a[200000],b[200000]={0},p[200000]={0};\n        scanf(\"%lld%lld\",&n,&k);\n        for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n        for(i=1;i<n-1;i++){\n            if(a[i]>a[i-1] && a[i]>a[i+1]){\n                p[i]=1;\n                b[i]=b[i-1]+1;\n            }\n            else\n            b[i]=b[i-1];\n        }\n        b[n-1]=b[n-2];\n        j=k-1; l=0;\n        while(j<n){\n            if(p[j]==1){\n                if(b[j-1]-b[l]>max){\n                    max= b[j-1]-b[l];\n                    li=l;}\n                }\n            else if(b[j]-b[l]>max){\n                max = b[j]-b[l];\n                li=l;\n            }\n            l++; j++;\n        }\n        printf(\"%lld %lld\\n\",max+1,li+1);\n        \n        \n    }\n\t//code\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define MAX(a,b) (((a)>(b))?(a):(b))\nint main() {\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--){\n        long long int n,k,i,j,l=0,li=0,max=0;\n        long long int a[200000],b[200000]={0},p[200000]={0};\n        scanf(\"%lld%lld\",&n,&k);\n        for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n        for(i=1;i<n-1;i++){\n            if(a[i]>a[i-1] && a[i]>a[i+1]){\n                p[i]=1;\n                b[i]=b[i-1]+1;\n            }\n            else\n            b[i]=b[i-1];\n        }\n        b[n-1]=b[n-2];\n        j=k-1; l=0;\n        while(j<n){\n            if(p[j]==1){\n                if(b[j-1]-b[l]>max){\n                    max= b[j-1]-b[l];\n                    li=l;}\n                }\n            else if(b[j]-b[l]>max){\n                max = b[j]-b[l];\n                li=l;\n            }\n            l++; j++;\n        }\n        printf(\"%lld %lld\\n\",max+1,li+1);\n        \n        \n    }\n\t//code\n\treturn 0;\n}"}
{"similarity_score": 0.9955357142857143, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8cef09d9dd9024f05bde77945a74cacb", "bug_code_uid": "d8ba4fa6b305261a3c20ed85e38d985f", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "b5a78297218aa7944e45b3940889f9b8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int n;\n    int count = 0;\n    scanf(\"%d\",&n);\n    int p,q;\n    while(n--){\n        scanf(\"%d%d\",&p,&q);\n        if(q-p <= 2)\n          count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int n;\n    int count = 0;\n    scanf(\"%d\",&n);\n    int p,q;\n    while(n--){\n        scanf(\"%d%d\",&p,&q);\n        if(q-p >= 2)\n          count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.9919786096256684, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "43193b42f6efc3ad742a647b98fb2088", "bug_code_uid": "0d46afd8e5ad3a938be906a596ed68a0", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "1f41dffb02f09a946561c5f75afebc0d", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint panduan(char *p);\n\nint main()\n{\n\tint i,n;\n\tchar str[100];\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tscanf(\"%s\",str);\n\t\ti=panduan(str);\n\t\tif(i>10)\n\t\t{\n\t\t\tprintf(\"%c%d%c\\n\",str[0],(i-2),str[i-1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%s\\n\",str);\n\t\t}\n\t}\n\treturn 0;\n}\nint panduan(char *p)\n{\n\tint i;\n\tfor(i=0;i<100;i++)\n\t{\n\t\tif(p[i]=='\\0')\n\t\t{\n\t\t\treturn i;\n\t\t\tbreak;\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint panduan(char *p);\n\nint main()\n{\n\tint i,n;\n\tchar str[105];\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tscanf(\"%s\",str);\n\t\ti=panduan(str);\n\t\tif(i>10)\n\t\t{\n\t\t\tprintf(\"%c%d%c\\n\",str[0],(i-2),str[i-1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%s\\n\",str);\n\t\t}\n\t}\n\treturn 0;\n}\nint panduan(char *p)\n{\n\tint i;\n\tfor(i=0;i<105;i++)\n\t{\n\t\tif(p[i]=='\\0')\n\t\t{\n\t\t\treturn i;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n"}
{"similarity_score": 0.9991079393398751, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "850b31c5145d773b7f4ce5cf7b2f769b", "bug_code_uid": "ab7bc77341c57fc8ff0697a93470e583", "src_uid": "99e5c907b623c310d6f1599f485ca21d", "apr_id": "7bd40d51414297d17522ce39ae12d0fd", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint res[100];\r\nint ctr=0;\r\nvoid display(int);\r\nvoid mergesort(int[],int,int);\r\nvoid merge(int[],int,int,int);\r\nint main()\r\n{\r\n int t,n,count;\r\nint a[100];\r\n scanf(\"%d\",&t);\r\nint flag=0;\r\nwhile(t--)\r\n{\r\n count=0;\r\n flag=0;\r\n scanf(\"%d\",&n);\r\n for(int i=0;i<n;++i)\r\n scanf(\"%d\",&a[i]);\r\nmergesort(a,0,n-1);\r\nfor(int i=n-1;i>0;--i)\r\n{\r\n if((a[i]>a[i-1])||(a[i]>a[0]))\r\n  count++;\r\n}\r\nres[ctr++]=count;\r\n}\r\ndisplay(ctr);\r\nreturn 0;\r\n}\r\n  void display(int n)\r\n{\r\n for(int i=0;i<n;++i)\r\nprintf(\"%d\\n\",res[i]);\r\n}\r\nvoid merge(int arr[],int l,int m,int r)\r\n{\r\n int i,j,k;\r\nint n1=m-l+1;\r\nint n2=r-m;\r\nint l1[n1],R1[n2];\r\nfor(i=0;i<n1;++i)\r\nl1[i]=arr[l+i];\r\nfor(j=0;j<n2;++j)\r\nR1[j]=arr[m+1+j];// m+l+j\r\ni=0;\r\nj=0;\r\nk=l;\r\nwhile((i<n1)&&(j<n2))\r\n{\r\n if(l1[i]<R1[j])\r\n {\r\n arr[k]=l1[i];\r\n i++;\r\n  }\r\n else\r\n { \r\n    arr[k]=R1[j];\r\n     j++;\r\n  }\r\n k++;\r\n }\r\nwhile(i<n1)\r\n{\r\n arr[k]=l1[i];\r\n i++;\r\nk++;\r\n}\r\nwhile(j<n2)\r\n{\r\n arr[k]=R1[j];\r\n k++;\r\n j++;\r\n}\r\n}\r\nvoid mergesort(int arr[],int l,int r)\r\n{\r\n int m;\r\n if(l<r)\r\n {\r\n   m=(l+r)/2;\r\n  mergesort(arr,l,m);\r\n  mergesort(arr,m+1,r);\r\n  merge(arr,l,m,r);\r\n  }\r\n}", "fixed": "#include<stdio.h>\r\nint res[500];\r\nint ctr=0;\r\nvoid display(int);\r\nvoid mergesort(int[],int,int);\r\nvoid merge(int[],int,int,int);\r\nint main()\r\n{\r\n int t,n,count;\r\nint a[100];\r\n scanf(\"%d\",&t);\r\nint flag=0;\r\nwhile(t--)\r\n{\r\n count=0;\r\n flag=0;\r\n scanf(\"%d\",&n);\r\n for(int i=0;i<n;++i)\r\n scanf(\"%d\",&a[i]);\r\nmergesort(a,0,n-1);\r\nfor(int i=n-1;i>0;--i)\r\n{\r\n if((a[i]>a[i-1])||(a[i]>a[0]))\r\n  count++;\r\n}\r\nres[ctr++]=count;\r\n}\r\ndisplay(ctr);\r\nreturn 0;\r\n}\r\n  void display(int n)\r\n{\r\n for(int i=0;i<n;++i)\r\nprintf(\"%d\\n\",res[i]);\r\n}\r\nvoid merge(int arr[],int l,int m,int r)\r\n{\r\n int i,j,k;\r\nint n1=m-l+1;\r\nint n2=r-m;\r\nint l1[n1],R1[n2];\r\nfor(i=0;i<n1;++i)\r\nl1[i]=arr[l+i];\r\nfor(j=0;j<n2;++j)\r\nR1[j]=arr[m+1+j];// m+l+j\r\ni=0;\r\nj=0;\r\nk=l;\r\nwhile((i<n1)&&(j<n2))\r\n{\r\n if(l1[i]<R1[j])\r\n {\r\n arr[k]=l1[i];\r\n i++;\r\n  }\r\n else\r\n { \r\n    arr[k]=R1[j];\r\n     j++;\r\n  }\r\n k++;\r\n }\r\nwhile(i<n1)\r\n{\r\n arr[k]=l1[i];\r\n i++;\r\nk++;\r\n}\r\nwhile(j<n2)\r\n{\r\n arr[k]=R1[j];\r\n k++;\r\n j++;\r\n}\r\n}\r\nvoid mergesort(int arr[],int l,int r)\r\n{\r\n int m;\r\n if(l<r)\r\n {\r\n   m=(l+r)/2;\r\n  mergesort(arr,l,m);\r\n  mergesort(arr,m+1,r);\r\n  merge(arr,l,m,r);\r\n  }\r\n}"}
{"similarity_score": 0.9985294117647059, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "67c22332014efa263522c5b093bdc7c7", "bug_code_uid": "7b44d04d8c9bc70e2caf2dd6dccfc162", "src_uid": "fd85ebe1dc975a71c72fac7eeb944a4a", "apr_id": "875b6f6a4e2a5918af49303b88772a4d", "difficulty": 1300, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    while(t--)\n    {\n        int n,k,i,b,j,d;\n        scanf(\"%d %d\\n\",&n,&k);\n        char a[n+1];\n        gets(a);\n        for(i=0;i<n;)\n        {\n            d=0;\n            for(j=i;j<i+k+1;j++)\n            {\n                if(a[j]=='1')\n                {\n                    i=j+k+1;\n                    d=1;\n                    break;\n                }\n                if(j==n-1)\n                {\n                    break;\n                }\n            }\n            if(d!=1)\n            {\n                i=i+k+1;\n                b++;\n            }\n        }\n        printf(\"%d\\n\",b);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    while(t--)\n    {\n        int n,k,i,b=0,j,d;\n        scanf(\"%d %d\\n\",&n,&k);\n        char a[n+1];\n        gets(a);\n        for(i=0;i<n;)\n        {\n            d=0;\n            for(j=i;j<i+k+1;j++)\n            {\n                if(a[j]=='1')\n                {\n                    i=j+k+1;\n                    d=1;\n                    break;\n                }\n                if(j==n-1)\n                {\n                    break;\n                }\n            }\n            if(d!=1)\n            {\n                i=i+k+1;\n                b++;\n            }\n        }\n        printf(\"%d\\n\",b);\n    }\n    return 0;\n}"}
{"similarity_score": 0.99836867862969, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "eb1f0c6c896d544ab0f17a2e3499c9f4", "bug_code_uid": "b88e340f3606be96ec3e591e8aad2bde", "src_uid": "189d6b94e2e7d11803d2873d03459c97", "apr_id": "6a20c89f88e25b6500e442713221ea78", "difficulty": 1300, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int T;\n    int a, b, c, d;\n    int iszheng;\n    int j01, j18, j08;\n\n    scanf(\"%d\", &T);\n    while(T--){\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        j01 = j08 = j18 = 0;\n        if((a+b) % 2 == 0)\n            iszheng = 1;\n        else\n            iszheng = 0;\n        if(a + d > 0 && b + c == 0)\n            j18 = 1;\n        if(a + d > 0 && b + c > 0)\n            j08 = 1;\n        if(a + d == 0 && b + c > 0)\n            j01 = 1;\n        if(iszheng && j18)\n            printf(\"Tidak Tidak Tidak Ya\\n\");\n        if(iszheng && j08)\n            printf(\"Tidak Tidak Ya Ya\\n\");\n        if(iszheng && j08)\n            printf(\"Tidak Tidak Ya Tidak\\n\");\n        if(!iszheng && j18)\n            printf(\"Ya Tidak Tidak Tidak\\n\");\n        if(!iszheng && j08)\n            printf(\"Ya Ya Tidak Tidak\\n\");\n        if(!iszheng && j01)\n            printf(\"Tidak Ya Tidak Tidak\\n\");\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int T;\n    int a, b, c, d;\n    int iszheng;\n    int j01, j18, j08;\n\n    scanf(\"%d\", &T);\n    while(T--){\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        j01 = j08 = j18 = 0;\n        if((a+b) % 2 == 0)\n            iszheng = 1;\n        else\n            iszheng = 0;\n        if(a + d > 0 && b + c == 0)\n            j18 = 1;\n        if(a + d > 0 && b + c > 0)\n            j08 = 1;\n        if(a + d == 0 && b + c > 0)\n            j01 = 1;\n        if(iszheng && j18)\n            printf(\"Tidak Tidak Tidak Ya\\n\");\n        if(iszheng && j08)\n            printf(\"Tidak Tidak Ya Ya\\n\");\n        if(iszheng && j01)\n            printf(\"Tidak Tidak Ya Tidak\\n\");\n        if(!iszheng && j18)\n            printf(\"Ya Tidak Tidak Tidak\\n\");\n        if(!iszheng && j08)\n            printf(\"Ya Ya Tidak Tidak\\n\");\n        if(!iszheng && j01)\n            printf(\"Tidak Ya Tidak Tidak\\n\");\n    }\n}\n"}
{"similarity_score": 0.08254322364751812, "equal_cnt": 18, "replace_cnt": 17, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "217f797a867ef483903266e0fe3b8c3b", "bug_code_uid": "57172a6e7d1b3802eab41897341f00e4", "src_uid": "ad242f98f1c8eb8d30789ec672fc95a0", "apr_id": "45c570f47df2778ad05d8f5acd8d3635", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<malloc.h>\n\nint main(void){\n\tint i,j,k,n,m,l,count1,count2,count,count3;\n\tint a[100];\n\tint b[100];\n\tcount1=0; \n\tcount2=0;\n\tcount3=0;\n\ti=0;\n\tscanf(\"%d\",&k);\n\tfor (m=0;m<k;m++){\n\t\tscanf(\"%d\",&n);\n\t\tfor(l=0;l<n;l++){\n\t\t\tscanf(\"%d\",&a[l]);\n\t\t}\n\t\tfor(l=0;l<n;l++){\n\t\t\tif(a[l]==0){\n\t\t\t\tcount1=1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tb[l]=a[l];\n\t\t\t\tfor (j=0;j<l;j++){\n\t\t\t\t\tif(a[l]==b[j]){\n\t\t\t\t\t\tcount2=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t\tif(count1==1){\n\t\t\tcount =n-i;\n\t\t}\n\t\tif(count2==1){\n\t\t\tif(count1==1){\n\t\t\t\tcount=count;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcount = n;\n\t\t\t}\n\t\t}\n\t\tif(count3==0){\n\t\t\tif(count1==1){\n\t\t\t\tcount = count+1;\n\t\t\t}\n\t\t\telse{\n\t\t\tcount = n+1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\t\n\treturn 0;\n}\n    \t\t   \t \t\t\t\t\t\t\t   \t\t\t\t \t \t \t", "fixed": "#include<stdio.h>\n\nint turns(int* a,int* option,int i,int n){\n\tint temp=-1;\n\toption[i]=0;\n\tfor(int s=0;s<n;s++){\n\t\tif(a[s]==0){\n\t\t\tfor(int q=0;q<n;q++){\n\t\t\t\tif(a[q]!=0)option[i]++;\n\t\t\t}\n\t\t\t//printf(\"%d\",option[i]);\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int p=j+1;p<n;p++){\n\t\t\t\tif(a[j]==a[p]){\n\t\t\t\t\ttemp=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(temp>=0)break;\n\t\t}\n\t\tif(temp>=0){\n\t\t\toption[i]=n;\n\t\t\t//printf(\"%d\",option[i]);\n\t\t\treturn 1;\n\t\t}\n\t\telse{\n\t\t\toption[i]=n+1;\n\t\t\t//printf(\"%d\",option[i]);\n\t\t\treturn 1;\n\t\t}\n\t\n}\nint main(){\n\tint cases;\n\tint option[1000];\n\tint n;\n\tint a[100];\n\tchar c;\n\tscanf(\"%d\",&cases);\n\tif(cases>1000||cases<1)return 0;\n\twhile(scanf(\"%c\",&c)&&c!='\\n');\n\tfor(int i=0;i<cases;i++){\n\t\tscanf(\"%d\",&n);\n\t\tif(n>100||n<2)return 0;\n\t\twhile(scanf(\"%c\",&c)&&c!='\\n');\n\t\tfor(int j=0;j<n;j++){\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t\tif(a[j]<0||a[j]>100)return 0;\n\t\t}\n\t\twhile(scanf(\"%c\",&c)&&c!='\\n');\n\t\t//printf(\"abd\\n\");\n\t\tturns(a,option,i,n);\n\t}\n\tfor(int k=0;k<cases;k++){\n\t\tprintf(\"%d\\n\",option[k]) ;\n\t}\n\t\n}\n\t\t\t  \t \t  \t  \t \t\t  \t     \t\t  \t\t"}
{"similarity_score": 0.8436482084690554, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c1ba414c4af271693aa4738a18ddd8f9", "bug_code_uid": "a69439e6b9ab7bb6b47aaef1c9c8be67", "src_uid": "cf86add6c92fa8a72b8e23efbdb38613", "apr_id": "ac2a4ec0ff98ad0bdf6d3a611fbbc0b6", "difficulty": 1700, "tags": ["combinatorics", "constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char a[1002], b[1002];\n   // while(1){\n    scanf(\"%s%s\", a, b);\n\n    int a_1 = 0, i;\n    int b_1 = 0;\n    for (i = 0; i < strlen(a); i++) {\n        if (a[i] == '1') {\n            a_1++;\n        }\n    }\n    for (i = 0; i < strlen(b); i++) {\n        if (b[i] == '1') {\n            b_1++;\n        }\n    }\n    if (a_1 == strlen(a) && b_1 == strlen(b)) {\n        printf(\"YES\\n\");\n    } else {\n        if (a_1 < b_1) {\n            printf(\"NO\\n\");\n        } else {\n            printf(\"YES\\n\");\n        }\n    }\n    //}\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char a[1002], b[1002];\n   // while(1){\n    scanf(\"%s%s\", a, b);\n\n    int a_1 = 0, i;\n    int b_1 = 0;\n    for (i = 0; i < strlen(a); i++) {\n        if (a[i] == '1') {\n            a_1++;\n        }\n    }\n    for (i = 0; i < strlen(b); i++) {\n        if (b[i] == '1') {\n            b_1++;\n        }\n    }\n    if (a_1 % 2 != 0) {\n        if (a_1 + 1 < b_1) {\n            printf(\"NO\\n\");\n        } else {\n            printf(\"YES\\n\");\n        }\n    } else {\n        if (a_1  < b_1) {\n            printf(\"NO\\n\");\n        } else {\n            printf(\"YES\\n\");\n        }\n    }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9380530973451328, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "41dd0408e2757da5cd0cf521fe6b951d", "bug_code_uid": "fdc98db8079009173a1c9e2f189dfe81", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "0d91feacc94649fe2b11f7770d453474", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        int a[m],t=0;\r\n        for(j=0;j<m;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            t+=a[j];\r\n        }\r\n        if(t%m==0 && t/m==1)\r\n        {\r\n            printf(\"0\");\r\n        }\r\n        else if(t<=0)\r\n        {\r\n            printf(\"1\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\",t-m);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        int a[m],t=0;\r\n        for(j=0;j<m;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            t+=a[j];\r\n        }\r\n        if(t%m==0 && t/m==1)\r\n        {\r\n            printf(\"0\");\r\n        }\r\n        else if(t<=0)\r\n        {\r\n            printf(\"1\");\r\n        }\r\n        else if(t<m)\r\n        {\r\n            printf(\"1\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\",t-m);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9787234042553191, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "11415b6c19515d63de7e8aeedad1fb5f", "bug_code_uid": "e814dd1b1c02782608e5efc660143eca", "src_uid": "ced70b400694fa16929d4b0bce3da294", "apr_id": "4ac4489c6e88d9bf8cbc91b646b12f64", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int a[100][100],k;\nint main(void)\n{\n    int i,j,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n            scanf(\"%I64d\",&a[i][j]);\n    }\n    k=sqrt(a[0][1]*a[0][2]/a[1][2]);\n    printf(\"%I64d \",k);\n    for(i=1;i<n;i++)\n        printf(\"%I64d \",a[0][i]/k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int a[2000][2000],k;\nint main(void)\n{\n    int i,j,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n            scanf(\"%I64d\",&a[i][j]);\n    }\n    k=sqrt(a[0][1]*a[0][2]/a[1][2]);\n    printf(\"%I64d \",k);\n    for(i=1;i<n;i++)\n        printf(\"%I64d \",a[0][i]/k);\n    return 0;\n}\n"}
{"similarity_score": 0.4671361502347418, "equal_cnt": 18, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "1e50f9c1f4c8a2d7a8cf1249f99dfb75", "bug_code_uid": "e869a70f22a3d6b5852ccc91619faa33", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "8c8406e566d794014db93ff19b7d9097", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int x = 0, i, n;\n    char str[100];\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++);\n    {\n        scanf(\"%s\", str[i]);\n        if(str[0] == '+' || str[1] == '+' )\n        x++;\n\n            else\n            x--;\n    }\n\n    printf(\"%d\", x);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n    int main(){\n        static int i, n, x;\n        char str[4];\n        //printf(\"%d\",x);\n        scanf(\"%d\",&n);\n        if(n >= 1 && n <= 150 )\n        {\n        for(i = 0; i < n; i++)\n        {\n            scanf(\"%s\", str);\n            if(str[0] == '+' && str[2] == 'X')++x;\n            if(str[0] == 'X' && str[1] == '+')x++;\n            if(str[0] == '-' && str[2] == 'X')--x;\n            if(str[0] == 'X' && str[1] == '-')x--;\n        }\n        printf(\"%d\", x);\n        }\n        return 0;\n    }\n"}
{"similarity_score": 0.9852941176470589, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9d964023f9c7c96c1de9cf50d86249dc", "bug_code_uid": "86714215189452b97d3701ffb95a46a1", "src_uid": "39480cdf697fc9743dc9665f989077d7", "apr_id": "a260b86578032e258a6fdc3d09f96c96", "difficulty": 1200, "tags": ["dp", "two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint time,i,n,j,x=0;\n\tlong long int num=0;\n\tscanf(\"%d\",&time);\n\tfor(int k=0;k<time;k++){\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t}\n\t\tj=0;i=1;x=a[0];num=0;\n\t\twhile(i<n){\n\t\t\tif(a[j]*a[i]>0){\n\t\t\t\tif(a[i]>x){\n\t\t\t\t\tx=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(a[j]*a[i]<0){\n\t\t\t\tnum=num+x;\n\t\t\t\tx=a[i];\n\t\t\t}\n\t\t\ti++;j++;\n\t\t}\n\t\tnum=num+x;\n\t\tprintf(\"%lld\\n\",num);\n\t}\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint time,i,n,j,x=0;\n\tlong long int num=0;\n\tscanf(\"%d\",&time);\n\tfor(int k=0;k<time;k++){\n\t\tscanf(\"%d\",&n);\n\t\tlong long int a[n];\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%lld\",&a[j]);\n\t\t}\n\t\tj=0;i=1;x=a[0];num=0;\n\t\twhile(i<n){\n\t\t\tif(a[j]*a[i]>0){\n\t\t\t\tif(a[i]>x){\n\t\t\t\t\tx=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(a[j]*a[i]<0){\n\t\t\t\tnum=num+x;\n\t\t\t\tx=a[i];\n\t\t\t}\n\t\t\ti++;j++;\n\t\t}\n\t\tnum=num+x;\n\t\tprintf(\"%lld\\n\",num);\n\t}\n}"}
{"similarity_score": 0.9988851727982163, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9659c3906b5e3e769e2acc21045436d3", "bug_code_uid": "6009f7d5bf7a85f18c35c744abb08390", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "f2c0b3d29c1de588f250ffa96b7e725f", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid bubbleSort(int *array, int size)\n{\n    for (int step = 0; step < size - 1; ++step)\n    {\n        for (int i = 0; i < size - step - 1; ++i)\n        {\n            // To sort in descending order, change\">\" to \"<\".\n            if (array[i] > array[i + 1])\n            {\n                int temp = array[i];\n                array[i] = array[i + 1];\n                array[i + 1] = temp;\n            }\n        }\n        \n    }\n    \n}\n\n\nint main() {\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    int a[1000];\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    bubbleSort(a, n);\n    double max = 2*a[0];\n    for(int i = 0; i < n-1; i++)\n    {\n        if(abs(a[i] - a[i+1]) > max)\n        {\n            max = abs(a[i] - a[i+1]);\n        }\n    }\n    if(2*(m - a[n-1])>max/2)\n    {\n        max = 2*(m - a[n-1]);\n    }\n    printf(\"%f\", max/2);\n    return 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n\nvoid bubbleSort(int *array, int size)\n{\n    for (int step = 0; step < size - 1; ++step)\n    {\n        for (int i = 0; i < size - step - 1; ++i)\n        {\n            // To sort in descending order, change\">\" to \"<\".\n            if (array[i] > array[i + 1])\n            {\n                int temp = array[i];\n                array[i] = array[i + 1];\n                array[i + 1] = temp;\n            }\n        }\n        \n    }\n    \n}\n\n\nint main() {\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    int a[1000];\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    bubbleSort(a, n);\n    double max = 2*a[0];\n    for(int i = 0; i < n-1; i++)\n    {\n        if(abs(a[i] - a[i+1]) > max)\n        {\n            max = abs(a[i] - a[i+1]);\n        }\n    }\n    if(2*(m - a[n-1])>max)\n    {\n        max = 2*(m - a[n-1]);\n    }\n    printf(\"%f\", max/2);\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9763617677286742, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "96f570b7bcc641affe050717db201a74", "bug_code_uid": "6208ce715e7ca68219969f0fd80337bd", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "a95f941197d4dfd4d19d54e210e871cd", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nchar s[100001],s1[27]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nint n,k,i,j,b,a[26],sum=0,temp,min;\nscanf(\"%d%d\",&n,&k);\nscanf(\"%s\",s);\nfor(i=0;i<26;i++)\n{\nb=0;\nfor(j=0;j<n;j++)\n{\nif(s1[i]==s[j])b++;\n}\na[i]=b;\n}\n\nfor(i=0;i<25;i++)\n{\nmin=i;\nfor(j=i+1;j<26;j++)\n{\nif(a[j]>a[min])\nmin=j;\n}\nif(min!=i)\n{\ntemp=a[i];\na[i]=a[min];\na[min]=temp;\n}\n}\nfor(i=0;i<26;i++)\n{\nif(a[i]>=k){sum=sum+k*k;break;}\nelse if(a[i]<k){sum=sum+a[i]*a[i];k=k-a[i];}\n}\nprintf(\"%d\",sum);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nchar s[100001],s1[27]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlong long  n,k,i,j,b,a[26],sum=0,temp,min;\nscanf(\"%I64d%I64d\",&n,&k);\nscanf(\"%s\",s);\nfor(i=0;i<26;i++)\n{\nb=0;\nfor(j=0;j<n;j++)\n{\nif(s1[i]==s[j])b++;\n}\na[i]=b;\n}\n\nfor(i=0;i<25;i++)\n{\nmin=i;\nfor(j=i+1;j<26;j++)\n{\nif(a[j]>a[min])\nmin=j;\n}\nif(min!=i)\n{\ntemp=a[i];\na[i]=a[min];\na[min]=temp;\n}\n}\nfor(i=0;i<26;i++)\n{\nif(a[i]>=k){sum=sum+k*k;break;}\nelse if(a[i]<k){sum=sum+a[i]*a[i];k=k-a[i];}\n}\nprintf(\"%I64d\",sum);\n}"}
{"similarity_score": 0.8423645320197044, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "13726d0e460c2f4cc855c5dd16eea514", "bug_code_uid": "da17f099ab37efbeda92885a799d3303", "src_uid": "d526af933b5afe9abfdf9815e9664144", "apr_id": "8c2c130eef12ac58d0c623a516b444a4", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n-1],i,k;\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    b[0]=a[0];\n    b[n-2]=a[n-1];\n    for(i=1;i<n-2;i++)\n    b[i]=a[i]<a[i+1]?a[i+1]:a[i];\n    for(i=0;i<n-2;i++)\n    {\n        if(b[i]<b[i+1])\n        {\n            k=b[i];\n            b[i]=b[i+1];\n            b[i+1]=k;\n        }\n    }\n    printf(\"%d\",b[n-2]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n+1],i,k;\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    b[0]=a[0];\n    b[n]=a[n-1];\n    for(i=1;i<n;i++)\n    b[i]=a[i-1]<a[i]?a[i]:a[i-1];\n    for(i=0;i<n;i++)\n    {\n        if(b[i]<b[i+1])\n        {\n            k=b[i];\n            b[i]=b[i+1];\n            b[i+1]=k;\n        }\n    }\n    printf(\"%d\",b[n]);\n    return 0;\n}\n"}
{"similarity_score": 0.946031746031746, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0e5010f797aa344838aecb43f47a4e9e", "bug_code_uid": "576e6107c28df93a32d028deb49b0853", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "678dd8bb5be724dd878ad410fa0c9826", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,a;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    if(a%10==9)\r\n        {\r\n            a=a/10;\r\n            printf(\"%d\\n\",a+1);\r\n        }\r\n        else\r\n        {\r\n            a=a/10;\r\n            printf(\"%d\\n\",a);\r\n        }\r\n   \r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,a;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&a);\r\n        if(a%10==9)\r\n        {\r\n            a=a/10;\r\n            printf(\"%d\\n\",a+1);\r\n        }\r\n        else\r\n        {\r\n            a=a/10;\r\n            printf(\"%d\\n\",a);\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.800711743772242, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8b0d625f0c1272dbc9af3cee4a74fbb1", "bug_code_uid": "ad514b75eeebf6b86e5a346d0bb6f0ec", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "f25aef98b62c97ecfe46b344111760fa", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint ar[100060],er[100060];\nint main()\n{\n\tint n,sira,i,j,a,k=0,l=0;\n\n\tscanf(\"%d %d\",&n,&sira);\n\n\tfor(a=1;a<=n;a++){\n\t\tscanf(\"%d\",&i);\n\t\tar[a]=i;\n\t}\n\n\tfor(a=1;;a++){\n\t\tk+=a;\n\t\tif(k>sira){\n\t\t\tl=k-a;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",ar[sira-l]);\n\n\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint ar[100060],er[100060];\nint main()\n{\n\tint n,sira,i,j,a,k=0,l=0;\n\n\tscanf(\"%d %d\",&n,&sira);\n\n\tfor(a=1;a<=n;a++){\n\t\tscanf(\"%d\",&i);\n\t\tar[a]=i;\n\t}\n\t\tfor(a=1;a<=n;a++){\n\n\t\t\tif(k+a>=sira){\n\t\t\t\tsira-=k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tk+=a;\n\t\t}\n\t\n\tprintf(\"%d\",ar[sira]);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.8869715271786023, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4d5143a81cbc0b911352bac746dee8c2", "bug_code_uid": "b2a4aa2beb3b24c181c63fdbe458324e", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "f0aa26298a4baf450d7968108e1e765f", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint abs(int a){\n\tif(a>0){\n\t\treturn a; \n\t}\n\telse{\n\t\treturn -a;\n\t}\n}\nint main()\n{ int x1,x2,y1,y2,d;\n\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\tif(x1==x2||y2==y1) { if(abs(x1-x2)>abs(y1-y2)) d=abs(x1-x2); else d=abs(y1-y2);\n\t\t\t\t\t\t if(x1==x2) {\n\t\t\t\t\t\t if(x1+d<=1000 && y1+d<=100) printf(\"%d %d %d %d\",x1+d,y1,x2+d,y2); else printf(\"%d %d %d %d\",x1-d,y1,x2-d,y2);}\n\t\t\t\t\t\t  else {if(y1+d<=1000 && y2+d<=1000) printf(\"%d %d %d %d\",x1,y1+d,x2,y2+d); else printf(\"%d %d %d %d\",x1,y1-d,x2,y2-d);\n\t\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\n", "fixed": "#include<stdio.h>\nint abs(int a){\n\tif(a>0){\n\t\treturn a; \n\t}\n\telse{\n\t\treturn -a;\n\t}\n}\nint main()\n{ int x1,x2,y1,y2,d;\n\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\tif(x1==x2||y2==y1) { if(abs(x1-x2)>abs(y1-y2)) d=abs(x1-x2); else d=abs(y1-y2);\n\t\t\t\t\t\t if(x1==x2) {\n\t\t\t\t\t\t if(x1+d<=1000 && y1+d<=100) printf(\"%d %d %d %d\",x1+d,y1,x2+d,y2); else printf(\"%d %d %d %d\",x1-d,y1,x2-d,y2);}\n\t\t\t\t\t\t  else {if(y1+d<=1000 && y2+d<=1000) printf(\"%d %d %d %d\",x1,y1+d,x2,y2+d); else printf(\"%d %d %d %d\",x1,y1-d,x2,y2-d);\n\t\t\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tif(abs(x1-x2)==abs(y1-y2)) printf(\"%d %d %d %d\",x1,y2,x2,y1); else printf(\"-1\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\n"}
{"similarity_score": 0.7934959349593496, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3adce324f6432754c2f7fe1553d4c882", "bug_code_uid": "db90af97727016bd2248dbfbed9a1f4a", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "7672c0b454e4671226afba92f267ac42", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main() {\n\tint a[1000], i, count, j;\n\ti = 0;\n\tj = 0;\n\twhile(scanf(\"%d\", &a[i]) != -1) {\n\t\ti++;\n\t\tcount++;\n\t}\n\ti = 0;\n\twhile(i < count) {\n\t\tif(a[i] % 2 == 0) {\n\t\t\ta[i]--;\n\t\t}\n\t\ti++;\n\t}\n\tj = 0;\n\twhile(j < count) {\n\t\tprintf(\"%d \", a[j]);\n\t\tj++;\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main() {\n\tint a[10000], i, count, j;\n\ti = 0;\n\tj = 0;\n\tscanf(\"%d\", &count);\n\twhile(i < count) {\n\t\tscanf(\"%d\", &a[i]);\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < count) {\n\t\tif(a[i] % 2 == 0) {\n\t\t\ta[i]--;\n\t\t}\n\t\ti++;\n\t}\n\tj = 0;\n\twhile(j < count) {\n\t\tprintf(\"%d \", a[j]);\n\t\tj++;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9989094874591058, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "527f573a8fc545d50c9a0822db115d12", "bug_code_uid": "1d6664c8f858fc244c8f2a01b257fe32", "src_uid": "9b8a5d9a6cfd6b3b5d0839eeece6f777", "apr_id": "5ef8c753624d9a303cef16358bac43bf", "difficulty": 1600, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (int argc, char **argv)\n{\n    int t, i, n;\n    scanf (\"%d\", &t);\n    while (t != 0)\n    {\n        scanf (\"%d\", &n);\n        if (n < 4)\n        { printf (\"-1\\n\"); --t; continue; }\n        for (i = n; i >= 1; i--)\n            if (i % 2 != 0)\n                printf (\"%d \", i);\n        printf (\"4 2 \");\n        for (i = 6; i < n; i += 2)\n            printf (\"%d \", i);\n        printf (\"\\n\");\n        --t;\n    }\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (int argc, char **argv)\n{\n    int t, i, n;\n    scanf (\"%d\", &t);\n    while (t != 0)\n    {\n        scanf (\"%d\", &n);\n        if (n < 4)\n        { printf (\"-1\\n\"); --t; continue; }\n        for (i = n; i >= 1; i--)\n            if (i % 2 != 0)\n                printf (\"%d \", i);\n        printf (\"4 2 \");\n        for (i = 6; i <= n; i += 2)\n            printf (\"%d \", i);\n        printf (\"\\n\");\n        --t;\n    }\n}"}
{"similarity_score": 0.8657035848047084, "equal_cnt": 22, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 11, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "c97f78dfd0e25b4e3e8ed87ef93b968e", "bug_code_uid": "b34651219eb36573b80329700b437a39", "src_uid": "8b075d96b3c0172d756109b4801d68de", "apr_id": "0f2df795b9ff1cde99ce76fdc1228ce1", "difficulty": 1200, "tags": ["two pointers", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#include <limits.h>\n\nvoid merge(int* t,int p,int q,int r){\n\tint n1 = q-p+1;\n\tint n2 = r-q;\n\tint L[n1+1],R[n2+1];\n\tint i,j,k;\n\t\n\tfor (i=0;i<n1;++i)\n\t\tL[i] = t[p+i];\n\tfor (j=0;j<n2;++j)\n\t\tR[j] = t[q+j+1];\n\tL[n1] = INT_MAX;\n\tR[n2] = INT_MAX;\n\t\n\ti = 0;\n\tj = 0;\n\tfor (k=p;k<r+1;++k){\n\t\tif (L[i]<=R[j]){\n\t\t\tt[k] = L[i];\n\t\t\t++i;\n\t\t}\n\t\telse{\n\t\t\tt[k] = R[j];\n\t\t\t++j;\n\t\t}\n\t}\n}\n\nvoid mergeSort(int* t,int p,int r){\n\tif (p<r){\n\t\tint q = (p+r)/2;\n\t\tmergeSort(t,p,q);\n\t\tmergeSort(t,q+1,r);\n\t\tmerge(t,p,q,r);\n\t}\n}\n\n\nint main(void){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint t[n];\n\tfor (int i=0;i<n;++i)\n\t\tscanf(\"%d\",t+i);\n\tmergeSort(t,0,n-1);\n\t\n\tint sum = 0,max=1,maxSoFar=1;\n\tfor (int i=1;i<n;++i){\n\t\tsum += t[i] - t[i-1];\n\t\tif (sum > 5){\n\t\t\tsum = 0;\n\t\t\tmax = 1;\n\t\t}\n\t\telse\n\t\t\t++max;\n\t\tmaxSoFar = (maxSoFar>max)?maxSoFar:max;\n\n\t}\n\tprintf(\"%d\\n\",maxSoFar);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#include <limits.h>\n\nvoid merge(unsigned int* t,int p,int q,int r){\n\tint n1 = q-p+1;\n\tint n2 = r-q;\n\tunsigned int L[n1+1],R[n2+1];\n\tint i,j,k;\n\t\n\tfor (i=0;i<n1;++i)\n\t\tL[i] = t[p+i];\n\tfor (j=0;j<n2;++j)\n\t\tR[j] = t[q+j+1];\n\tL[n1] = UINT_MAX;\n\tR[n2] = UINT_MAX;\n\t\n\ti = 0;\n\tj = 0;\n\tfor (k=p;k<r+1;++k){\n\t\tif (L[i]<=R[j]){\n\t\t\tt[k] = L[i];\n\t\t\t++i;\n\t\t}\n\t\telse{\n\t\t\tt[k] = R[j];\n\t\t\t++j;\n\t\t}\n\t}\n}\n\nvoid mergeSort(unsigned int* t,int p,int r){\n\tif (p<r){\n\t\tint q = (p+r)/2;\n\t\tmergeSort(t,p,q);\n\t\tmergeSort(t,q+1,r);\n\t\tmerge(t,p,q,r);\n\t}\n}\n\n\nint main(void){\n\tint n;\n\tscanf(\"%d\",&n);\n\tunsigned int t[n];\n\tfor (int i=0;i<n;++i)\n\t\tscanf(\"%u\",t+i);\n\tmergeSort(t,0,n-1);\n\t\n\tint j,firstOne=1,i=1,sum=0,max=1,maxSoFar=1;\n\twhile (i<n){\n\n\t\tint x = t[i]-t[i-1];\n\t\tif (firstOne && x>=1){\n\t\t\tj = i;\n\t\t\tfirstOne = 0;\n\t\t}\n\t\tsum += x;\n\t\tif (sum>5){\n\t\t\tsum = 0;\n\t\t\tmax = 1;\n\t\t\ti = j;\n\t\t\tfirstOne = 1;\n\t\t}\n\t\telse\n\t\t\t++max;\n\t\t++i;\n\t\tmaxSoFar = (max>maxSoFar)?max:maxSoFar;\n\t}\t\n\tprintf(\"%d\\n\",maxSoFar);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8694610778443114, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "703f793e74d4ff0950c51535bc474737", "bug_code_uid": "93eb2afa294d9ff44d3ae7c3092e7a49", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "25260feaab1936525ffa95a2f02a92da", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n  int a, b, n, t, k;\n  scanf(\"%d\", &k);\n\n  for(int i = 0; i < k; ++i){\n    int total = 0;\n    scanf(\"%d %d %d %d\", &a, &b, &n, &t);\n\n    int aux = t/n;\n    if(aux > a){\n      total = a*n;\n    }\n    else{\n      total = aux*n;\n    }\n\n    for(int j = 1; j <= b; ++j){\n      if(total+1 > t)\n        break;\n      ++total;\n    }\n\n    if(total == t){\n      printf(\"YES\\n\");\n    }\n    else{\n      printf(\"NO\\n\");\n    }\n  }\n  return 0;\n\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n  int a, b, n, t, k;\n  scanf(\"%d\", &k);\n\n  for(int i = 0; i < k; ++i){\n    int total = 0;\n    scanf(\"%d %d %d %d\", &a, &b, &n, &t);\n\n    int aux = t/n;\n    if(aux > a){\n      total = a*n;\n    }\n    else{\n      total = aux*n;\n    }\n\n    if(total + b >= t){\n      printf(\"YES\\n\");\n    }\n    else{\n      printf(\"NO\\n\");\n    }\n  }\n  return 0;\n\n}"}
{"similarity_score": 0.9206611570247933, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c83681a1373efa38cd271bf912395560", "bug_code_uid": "422f6e22fdb767826f641177666f01a6", "src_uid": "e512285d15340343e34f596de2be82eb", "apr_id": "42863867f23a3f8cfdf1d55f3ed2f6e6", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    int n,k,max,min,a[100],i,j;\n    scanf(\"%d %d\",&n,&k);\n    scanf(\"%d\",a[0]);\n    max=a[0];\n    min=a[0];\n    for ( i=1;i<n;i++ ) {\n        scanf(\"%d\",a[i]);\n        if( a[i]>max ) {\n            max=a[i];\n        }\n        if( a[i]<min ) {\n            min=a[i];\n        }\n    }\n    if( max>k+min ) {\n        printf(\"NO\");\n    }\n    else {\n        printf(\"YES\\n\");\n        for( i=0;i<n;i++ ) {\n            for( j=0;j<a[i];j++ ) {\n                printf(\"%d \",j+1);\n            }\n            printf(\"\\n\");\n        }\n    }\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n    int n,k,max,min,a[100],i,j,l;\n    scanf(\"%d %d\",&n,&k);\n    scanf(\"%d\",&a[0]);\n    max=a[0];\n    min=a[0];\n    for ( i=1;i<n;i++ ) {\n        scanf(\"%d\",&a[i]);\n        if( a[i]>max ) {\n            max=a[i];\n        }\n        if( a[i]<min ) {\n            min=a[i];\n        }\n    }\n    if( max>k+min ) {\n        printf(\"NO\");\n    }\n    else {\n        printf(\"YES\\n\");\n        for( i=0;i<n;i++ ) {\n            for( l=k,j=0;j<a[i];j++,l-- ) {\n                if( l==0 ) {\n                    l=k;\n                }\n                printf(\"%d \",l);\n            }\n            printf(\"\\n\");\n        }\n    }\nreturn 0;\n}"}
{"similarity_score": 0.286203941730934, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "8d31eca367773a9b0d6d588bde3a79ba", "bug_code_uid": "c5e2acfcb17f84807b3e2c20b1bb2600", "src_uid": "0197047cab6d83a189a5c1eabf5b1dd3", "apr_id": "b085a1845091cde8eafe684e63fe28be", "difficulty": 1400, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n;\n\nvoid solve(void){\n\tscanf(\"%d\", &n);\n\n\tint max[n];\n\tint i, j;\n\n\tfor(i = 0; i < n; i++){\n\t\tmax[i] = 1;\n\t}\n\n\tint seen[n];\n\tscanf(\"%d\", &seen[0]);\n\tfor(i = 1; i < n; i++){\n\t\tscanf(\"%d\", &seen[i]);\n\n\t\tj = i-1;\n\t\twhile(j >= 0){\n\t\t\tif((i+1)%(j+1) == 0 && seen[i] > seen[j]){\n\t\t\t\tmax[i] = max[j]+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tj--;\n\t\t}\n\t}\n\n\tint ans = max[0];\n\tfor(i = 1; i < n; i++){\n\t\tif(max[i] > ans)\n\t\t\tans = max[i];\n\t}\n\n\tprintf(\"%d\\n\", ans);\n\n\treturn;\n}\n\nint main(int arg, char** argv){\n\tint cases;\n\tscanf(\"%d\", &cases);\n\n\twhile(cases--){\n\t\tsolve();\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n;\n\nvoid solve(void){\n\tscanf(\"%d\", &n);\n\n\tint max[n+1];\n\tint i, j;\n\n\tfor(i = 1; i <= n; i++){\n\t\tmax[i] = 1;\n\t}\n\n\tint seen[n+1];\n\tfor(i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &seen[i]);\n\t}\n\n\tfor(i = 1; i <= n; i++){\n\t\tfor(j = 2*i; j <= n; j += i){\n\t\t\tif(seen[i] < seen[j])\n\t\t\t\tmax[j] = (max[j] >= max[i]+1) ? max[j] : max[i]+1;\n\t\t}\n\t}\n\n\tint ans = max[1];\n\tfor(i = 1; i <= n; i++){\n\t\tif(max[i] > ans)\n\t\t\tans = max[i];\n\t}\n\n\tprintf(\"%d\\n\", ans);\n\n\treturn;\n}\n\nint main(int arg, char** argv){\n\tint cases;\n\tscanf(\"%d\", &cases);\n\n\twhile(cases--){\n\t\tsolve();\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.8455598455598455, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0fe5dd5b864b2621e928d71b00770d9c", "bug_code_uid": "40af266beadad5eaa5204a0b6e4f59cf", "src_uid": "88e6651e1b0481d711e89c8071be1edf", "apr_id": "a61726ccbf1a4da91f74240bc592897d", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int  i, a,b,k,n;\n    scanf(\"%d\",&n);\n    for(i=1;i<=3;i++){\n        scanf(\"%d%d\",&a,&b);\n        if(a==n)    n=b;\n        else if(b==n)   n=a;\n    }\n    printf(\"%d\",n);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    freopen(\"input.txt\", \"r\", stdin) ;\n    freopen(\"output.txt\", \"w\", stdout) ;\n    int  i, a,b,k,n;\n    scanf(\"%d\",&n);\n    for(i=1;i<=3;i++){\n        scanf(\"%d%d\",&a,&b);\n        if(a==n)    n=b;\n        else if(b==n)   n=a;\n    }\n    printf(\"%d\",n);\n    return 0;\n}\n"}
{"similarity_score": 0.9994404029099049, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "19350420823ba1a6aacd3a09ddd5eb31", "bug_code_uid": "1498a7039e99e8caed58776d0ad96919", "src_uid": "20cbd67b7bfd8bb201f4113a09aae000", "apr_id": "7fe43f700ff23c880bcf4cd597f65610", "difficulty": 1900, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n\n#define N\t30000\n#define M\t800\n\nint min(int a, int b) { return a < b ? a : b; }\nint max(int a, int b) { return a > b ? a : b; }\n\nint main() {\n\tstatic int kk[N + 1], dp[N + 1][M];\n\tint n, d, a, i, j, l, l_, lower, upper, ans;\n\n\tscanf(\"%d%d\", &n, &d);\n\twhile (n--) {\n\t\tscanf(\"%d\", &a);\n\t\tkk[a]++;\n\t}\n\tlower = max(1, (int) sqrt(max(0, d * d - N * 2)) - 10);\n\tupper = d + (int) sqrt(N * 2) + 10;\n\tmemset(dp, -1, sizeof dp);\n\tdp[d][d - lower] = kk[d];\n\tans = 0;\n\tfor (i = 0; i < N; i++)\n\t\tfor (l = lower; l <= upper; l++) {\n\t\t\tint x = dp[i][l - lower];\n\n\t\t\tans = max(ans, x);\n\t\t\tif (x >= 0)\n\t\t\t\tfor (l_ = l - 1; l_ <= l + 1; l_++)\n\t\t\t\t\tif (l_ >= lower && l_ <= upper) {\n\t\t\t\t\t\tj = i + l_;\n\t\t\t\t\t\tif (j <= N)\n\t\t\t\t\t\t\tdp[j][l_ - lower] = max(dp[j][l_ - lower], x + kk[j]);\n\t\t\t\t\t}\n\t\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n\n#define N\t30000\n#define M\t800\n\nint min(int a, int b) { return a < b ? a : b; }\nint max(int a, int b) { return a > b ? a : b; }\n\nint main() {\n\tstatic int kk[N + 1], dp[N + 1][M];\n\tint n, d, a, i, j, l, l_, lower, upper, ans;\n\n\tscanf(\"%d%d\", &n, &d);\n\twhile (n--) {\n\t\tscanf(\"%d\", &a);\n\t\tkk[a]++;\n\t}\n\tlower = max(1, (int) sqrt(max(0, d * d - N * 2)) - 10);\n\tupper = d + (int) sqrt(N * 2) + 10;\n\tmemset(dp, -1, sizeof dp);\n\tdp[d][d - lower] = kk[d];\n\tans = 0;\n\tfor (i = 0; i <= N; i++)\n\t\tfor (l = lower; l <= upper; l++) {\n\t\t\tint x = dp[i][l - lower];\n\n\t\t\tans = max(ans, x);\n\t\t\tif (x >= 0)\n\t\t\t\tfor (l_ = l - 1; l_ <= l + 1; l_++)\n\t\t\t\t\tif (l_ >= lower && l_ <= upper) {\n\t\t\t\t\t\tj = i + l_;\n\t\t\t\t\t\tif (j <= N)\n\t\t\t\t\t\t\tdp[j][l_ - lower] = max(dp[j][l_ - lower], x + kk[j]);\n\t\t\t\t\t}\n\t\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9841534612176814, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "241969a96931d60852e723b5ab8fc266", "bug_code_uid": "5dcc07a89f5782617c8fbd42fd63efa9", "src_uid": "2fa3e88688b92c27ad26a23884e26009", "apr_id": "d96bd8449122b6d5edf23a357cee25bc", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint gcd(int a,int b)\n{\n    int n;\n    while(b!=0)\n    {\n        n=a%b;\n        a=b;\n        b=n;\n    }\n    return a;\n}\n\nint lcm(int a,int b, int n)\n{\n    int l=(a*b)/n;\n\n    return l;\n}\n\nint main()\n{\n    int n,m,t,j,i;\n    int a,b,x;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n        for(i=1; ;i++)\n        {\n            for(j=n-1; ;j--)\n            {\n                m=gcd(i,j);\n                n=lcm(i,j,m);\n                if(m+n==x) break;\n            }\n            if(m+n==x) break;\n        }\n        printf(\"%d %d\\n\",i,j);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint gcd(int a,int b)\n{\n    int n;\n    while(b!=0)\n    {\n        n=a%b;\n        a=b;\n        b=n;\n    }\n    return a;\n}\n\nint lcm(int a,int b, int n)\n{\n    int l=(a*b)/n;\n\n    return l;\n}\n\nint main()\n{\n    int n,m,t,j,i;\n    int a,b,x;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n        for(i=1; i<=x/2 ;i++)\n        {\n            for(j=x-1; j>=x/2;j--)\n            {\n                m=gcd(i,j);\n                n=lcm(i,j,m);\n                if(m+n==x) break;\n            }\n            if(m+n==x) break;\n        }\n        printf(\"%d %d\\n\",j,i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9629629629629629, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9644b51e15c3871ce8df916e164b9ece", "bug_code_uid": "c6029d46b0ee41a2117a557c95391dd1", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "87fecec8344e9896520f671485838565", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,l;\n    scanf(\"%d\",&n);\n    char a[n][100];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",a[i]);\n    }\n\n\n    for(i=0;i<n;i++)\n    {\n        printf(\"\\n\");\n        l=strlen(a[i]);\n        if(l>10 )\n        {\n            printf(\"%c%d%c\",a[i][0],l-2,a[i][l-1]);\n            l=0;\n        }\n        else printf(\"%s\",a[i]);\n\n    }\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,l;\n    scanf(\"%d\",&n);\n    char a[n][100];\n    /*for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",a[i]);\n    }*/\n\n\n    for(i=0;i<n;i++)\n    {\n        printf(\"\\n\");\n         scanf(\"%s\",a[i]);\n        l=strlen(a[i]);\n        if(l>10 )\n        {\n            printf(\"%c%d%c\",a[i][0],l-2,a[i][l-1]);\n            l=0;\n        }\n        else printf(\"%s\",a[i]);\n\n    }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9956331877729258, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "df2c2459ecb84556df959f4d71d236e2", "bug_code_uid": "d661ef15069f66adf2322f9684b9521c", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "c58f647de09e6fcc277b164fafda07b3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a, b, i;\n    scanf(\"%d\", &a);\n    for (i=0;i<a;i++)\n    {\n        scanf(\"%d\", &b);\n        if (b%2)\n        {\n            b++;\n        }\n        printf(\"%d\\n\", b/2-1);\n    }\n    return 0;", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a, b, i;\n    scanf(\"%d\", &a);\n    for (i=0;i<a;i++)\n    {\n        scanf(\"%d\", &b);\n        if (b%2)\n        {\n            b++;\n        }\n        printf(\"%d\\n\", b/2-1);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7227138643067846, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1792ac6f9ab8124a2e704bd98318b4e1", "bug_code_uid": "1f8a5b7ca61fb417bc55acce3f718cd4", "src_uid": "6d4744d7356e709f73891270becd14e3", "apr_id": "7695a7b0d6b167823c1ba7b03aab1bd2", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n  int t,n,a,i,j,start,count;\r\n  int out=0;\r\n  scanf(\"%d\",&t);\r\n  for(i=0;i<t;i++){\r\n    scanf(\"%d\",&n);\r\n    count=0;\r\n    start=0;\r\n    for(j=0;j<n;j++){\r\n      scanf(\"%d\",&a);\r\n      a>start?count=1:count++;\r\n      start =a;\r\n   }\r\n  out = count>out?count:out;\r\n  }\r\n  printf(\"%d\\n\",out);\r\n return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n  int t,n,a,i,j,start,count,out;\r\n  scanf(\"%d\",&t);\r\n  for(i=0;i<t;i++){\r\n    scanf(\"%d\",&n);\r\n    count=0;\r\n    start=0;\r\n\tout=0;\r\n    for(j=0;j<n;j++){\r\n      scanf(\"%d\",&a);\r\n      count=(a>start?1:++count);\r\n      start =a;\r\n\t  out = (count>out?count:out);\r\n   }\r\n  printf(\"%d\\n\",out);\r\n  }\r\n return 0;\r\n}"}
{"similarity_score": 0.46469833119383824, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "97019243ac237e56da833c2ed7976ecb", "bug_code_uid": "f4378b9a8f39253d4343bbc6009446be", "src_uid": "291601d6cdafa4113c1154f0dda3470d", "apr_id": "4d26b93458930b056cfdb5a8c5e748c6", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[10005];\nint main()\n{\n    int n, m, cnt = 1;\n\n    // freopen(\"test.txt\",\"r\",stdin);\n\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) scanf(\"%d\", &m), a[m]++;\n    // for(int i = 1; i <= n; i++) printf(\"%d \", a[i]); puts(\"\");\n    for(int i = 1; i <= n; i++)\n        if(a[i] && !a[i + 1])\n            cnt++;\n\n    printf(\"%d\\n\", cnt);\n\n    // fclose(stdin);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint a[10005], v[10005];\nint main()\n{\n    int n, cnt = 0;\n\n    // freopen(\"test.txt\",\"r\",stdin);\n\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n\n    int max = 0;\n    for(int i = 1; i <= n; i++)\n    {\n        if(max < a[i]) max = a[i];\n        if(i == max) cnt++;\n    }\n\n    printf(\"%d\\n\", cnt);\n\n    // fclose(stdin);\n\n    return 0;\n}"}
{"similarity_score": 0.40707964601769914, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "051b328b77b0c868d39fcbacd988f855", "bug_code_uid": "00e9991bd459570db2f6622bfae72b1f", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "68018f682b2bc0bbc65b596ebb30ff9d", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n  int i;\n  int n = 0;\n  char istr[200001];\n  char str[200001];\n  \n  scanf(\"%s\", istr);\n  for(i = 0; i < strlen(istr)+1; i++) {\n    if(n == 0 || str[n - 1] != istr[i]) str[n++] = istr[i];\n    else n--;\n  }\n\n  printf(\"%s\\n\", str);\n  return 0;\n}\n", "fixed": "\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n  int i;\n  int n = 0;\n  char str[200001];\n  \n  char c;\n  while((c = fgetc(stdin)) != '\\n') {\n    if(n == 0 || str[n - 1] != c) str[n++] = c;\n    else n--;\n  }\n  str[n] = '\\0';\n\n  printf(\"%s\\n\", str);\n  return 0;\n}\n"}
{"similarity_score": 0.1766848816029144, "equal_cnt": 11, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "f9351fc496cd1dcb202624cfbcd7811d", "bug_code_uid": "da25095fa982a2a4e3a213565fb67ee0", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "453335c809e969099c5cb7552e387a29", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,s,m;\n        scanf(\"%d%d\",&n,&s);\n        int i;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&m);\n            if(m%s==0)\n            {\n                printf(\"YES\\n\");\n                continue;\n            }\n            while(1)\n            {\n                m-=10;\n                if(m%s==0)\n                {\n                    printf(\"YES\\n\");\n                    break;\n                }\n                if(m<=10)\n                {\n                    printf(\"NO\\n\");\n                    break;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n \t \t\t \t   \t \t\t \t\t    \t  \t \t \t\t\t", "fixed": "#include<stdio.h>\nint t,q,d,tmp;\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\",&q,&d);\n\t\tfor(int i=1;i<=q;++i)\n\t\t{\n\t\t\tint ok = 0;\n\t\t\tscanf(\"%d\",&tmp);\n\t\t\tif(tmp >= 10*d) ok = 1;\n\t\t\tfor(int j=1;j<10;++j)\n\t\t\t{\n\t\t\t\tif(tmp >= j*d && (tmp - j*d)%10 == 0){\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok==1)puts(\"YES\");\n\t\t\telse puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n \t   \t\t \t\t   \t \t \t \t \t  \t"}
{"similarity_score": 0.9622222222222222, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5dcb9afb9a61e7ee66154b9f321e24b2", "bug_code_uid": "f567a77c317413854b6bd615e467624b", "src_uid": "ef2b90d5b1073430795704a7df748ac3", "apr_id": "5ab10f8d48b27f60918e1dff7349435b", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "implementation", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\nint min(int a,int b)\r\n{\r\n    if (a>b)\r\n    {\r\n        return b;\r\n    }\r\n    else\r\n    return a;  \r\n}\r\nint main()\r\n{\r\n    int t,i,j,k,count,n,m,l;\r\n    long long ans=100000;\r\n    scanf(\"%d\",&t);\r\n    for ( i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d %d\",&n,&m);\r\n       char s[100][100];\r\n        for ( j = 0; j < n; j++)\r\n        {\r\n            for ( k = 0; k < m; k++)\r\n            {\r\n              scanf(\" %c\",&s[j][k]);\r\n            } \r\n        }\r\n        for ( j = 0; j < n; j++)\r\n        {\r\n            for ( k =j+1; k <n; k++)\r\n            {\r\n                count=0;   \r\n                for ( l = 0; l < m; l++)\r\n                {\r\n                  count+=abs(s[j][l]-s[k][l]);\r\n                }\r\n               ans=min(ans,count);\r\n            }\r\n            \r\n        }\r\n        printf(\"%d\\n\",ans);\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\nint min(int a,int b)\r\n{\r\n    if (a>b)\r\n    {\r\n        return b;\r\n    }\r\n    else\r\n    return a;  \r\n}\r\nint main()\r\n{\r\n    int t,i,j,k,count,n,m,l;\r\n    scanf(\"%d\",&t);\r\n    for ( i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d %d\",&n,&m);\r\n       char s[100][100];\r\n        for ( j = 0; j < n; j++)\r\n        {\r\n            for ( k = 0; k < m; k++)\r\n            {\r\n              scanf(\" %c\",&s[j][k]);\r\n            } \r\n        }\r\n         long long ans=100000;\r\n        for ( j = 0; j < n; j++)\r\n        {\r\n            for ( k =j+1; k <n; k++)\r\n            {\r\n                count=0;   \r\n                for ( l = 0; l < m; l++)\r\n                {\r\n                  count+=abs(s[j][l]-s[k][l]);\r\n                }\r\n               ans=min(ans,count);\r\n            }\r\n            \r\n        }\r\n        printf(\"%d\\n\",ans); \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.86084142394822, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2483757ee86140264301f0babd7f2678", "bug_code_uid": "1ff8142206acc3086ebdea75d427682c", "src_uid": "f82058f6ba3ce0da15a5ce059674af35", "apr_id": "a3ed3175eebdff80d944542a87ddd042", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i,j,k,a,b=0,c[1000];\n    scanf(\"%d\",&a);\n    for(j=0;j<a;j++)\n    {\n        scanf(\"%d\",&k);\n        for(i=0;i<k;i++)\n        {\n            if((i+39)<1000)\n            printf(\"%d \",i+39);\n            else\n            printf(\"%d \",i-24);\n        }\n        printf(\"\\n\");\n    }\n    \n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i,j,k,a,b=0,c[1000];\n    scanf(\"%d\",&a);\n    for(j=0;j<a;j++)\n    {\n        scanf(\"%d\",&k);\n        for(i=0;i<k;i++)\n        {\n            \n            \n            printf(\"24 \");\n        }\n        printf(\"\\n\");\n    }\n    \n\n    return 0;\n}\n"}
