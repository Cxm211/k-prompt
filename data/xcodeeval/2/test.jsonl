{"similarity_score": 0.17070805043646944, "equal_cnt": 21, "replace_cnt": 16, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "cb764d605daf56d520e99e439c805128", "bug_code_uid": "b444e203dac41af9fdcefe8bfc079df5", "src_uid": "15aa3adb14c17023f71eec11e1c32efe", "apr_id": "352318619175997c69050992a1f73451", "difficulty": 1700, "tags": ["dp", "greedy", "graphs", "constructive algorithms", "shortest paths", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint i,m,q[1024];\nchar s[12];\n\nint r(int n,int d){\n\tint w = q[n] = d+1;\n\tfor( ; n<=m && w<11; w++)\n\t\tif(w!=q[n-1]&&s[w-1]-'0'&&r(n+1,w-d))\n\t\t\treturn 1;\n\t\treturn n>m;\n}\n\nint main(){\n\tscanf(\"%s%d\",s,&m);\n\tprintf(r(1,0)?\"YES\\n\":\"NO\");\n\tfor(;q[m+1]&&i<m;printf(\"%d \",q[++i]));\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint m,flag,ar[1005];\nchar s[100];\nint fun(int i,int prev,int l,int r)\n{\n\tint j;\n\tif(flag)\n\t\treturn 1;\n\tif(i==m)\n\t{\n\t\tflag=1;\n\t\treturn 1;\n\t}\n\tfor(j=0;j<10;j++)\n\t{\n\t\tif(s[j]=='1' && j!=prev)\n\t\t{\n\t\t\tif(i%2)\n\t\t\t{\n\t\t\t\tif((r+j+1)>l)\n\t\t\t\t{\n                    ar[i]=j+1;\n                    fun(i+1,j,l,r+j+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((l+j+1)>r)\n\t\t\t\t{\n                    ar[i]=j+1;\n                    fun(i+1,j,l+j+1,r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t\treturn 1;\n\t}\n\tif(flag)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nint main()\n{\n\tint j;\n\tscanf(\"%s\",s);\n\tscanf(\"%d\",&m);\n\tfun(0,-1,0,0);\n\tif(flag)\n\t{\n\t\tprintf(\"YES\\n\");\n\t\tfor(j=0;j<m;j++)\n\t\t\tprintf(\"%d \",ar[j]);\n\t\tprintf(\"\\n\");\n\t}\n\telse\n\t\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.3951890034364261, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "dbd74fbb71b460827cf4ced2a280a116", "bug_code_uid": "4e65ad585c24237eeab6d40a33cd52c0", "src_uid": "7eae40835f6e9580b985d636d5730e2d", "apr_id": "ac225c7cae0fd1e59d46d4c958c71736", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main()\n{\n    int q,l,m,i,j,sum=0,sum2=0,sign=-1;\n    scanf(\"%d\",&q);\n    int arr[q];\n    for(i=0; i<q; i++)\n    {\n        scanf(\"%d %d\",&l,&m);\n        for(j=l; j<=m; j++)\n        {\n            sum+=j*sign;\n            sign*=-1;\n\n        }\n        arr[i]=sum;\n        sum=0;\n    }\n    for(i=0; i<q; i++)\n        printf(\"%d\\n\",arr[i]);\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main()\n{\n    int i,s,f,m,neven,nodd,seven,sodd,st1,st2,q;\n    scanf(\"%d\",&q);\n    int ans[q];\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%d%d\",&s,&f);\n        if(f%2==0)\n            neven=nodd=f/2;\n        else\n        {\n            neven=f/2;\n            nodd=f/2+1;\n        }\n        sodd=nodd*nodd;\n        seven=neven*(neven+1);\n        st1=seven-sodd;\n        if((s-1)%2==0)\n            neven=nodd=(s-1)/2;\n        else\n        {\n            neven=(s-1)/2;\n            nodd=(s-1)/2+1;\n        }\n        sodd=nodd*nodd;\n        seven=neven*(neven+1);\n        st2=seven-sodd;\n        ans[i]=st1-st2;\n    }\n    for(i=0;i<q;i++)\n        printf(\"%d\\n\",ans[i]);\n}\n"}
{"similarity_score": 0.9229661627069834, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5def9547fd3029f1bc75c81096773943", "bug_code_uid": "b7c9f73c9075415bdb28100b31ed15dc", "src_uid": "c2a506d58a80a0fb6a16785605b075ca", "apr_id": "764f23024476df1412a2817a6b2a26bd", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint\r\nmain(int argc, char *argv[])\r\n{\r\n    if (argc > 1)\r\n        freopen(argv[1], \"r\", stdin);\r\n\r\n    int t;\r\n    long long a, b, c, d;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--) {\r\n        scanf(\"%lld %lld %lld %lld\", &a, &b, &c, &d);\r\n\r\n        if (a*d == b*c) {\r\n            puts(\"0\");\r\n            continue;\r\n        } else {\r\n            if (b*c % d == 0 && (b*c/d) % a == 0) {\r\n                puts(\"1\");\r\n                continue;\r\n            }\r\n            if (a*d % b == 0 && (a*d/b) % c == 0) {\r\n                puts(\"1\");\r\n                continue;\r\n            }\r\n        } \r\n        puts(\"2\");\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint\r\nmain(int argc, char *argv[])\r\n{\r\n    if (argc > 1)\r\n        freopen(argv[1], \"r\", stdin);\r\n\r\n    int t;\r\n    long long a, b, c, d;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--) {\r\n        scanf(\"%lld %lld %lld %lld\", &a, &b, &c, &d);\r\n\r\n        if (a*d == b*c) {\r\n            puts(\"0\");\r\n            continue;\r\n        } else {\r\n            if (a == 0 || c == 0) {\r\n                puts(\"1\");\r\n                continue;\r\n            }\r\n            if (b*c % d == 0 && (b*c/d) % a == 0) {\r\n                puts(\"1\");\r\n                continue;\r\n            }\r\n            if (a*d % b == 0 && (a*d/b) % c == 0) {\r\n                puts(\"1\");\r\n                continue;\r\n            }\r\n        } \r\n        puts(\"2\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.989247311827957, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "66525dc18b0eecee71fb06086ecdb7b0", "bug_code_uid": "c0ce36835223234f9baefd8e033e27d5", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "c0cd60b0a848a7ea45496a01e8e05380", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n       int main(){\n       int n;\n       scanf(\"%d\",&n);\n       int a[n],e=0,o=0;\n       for(int i=0;i<n;i++){\n              scanf(\"%d\",&a[i]);\n              if(a[i]%2==0){\n                     e++;\n              }\n              else{\n              o++;\n              }\n       }\n       for(int i=0;i<n;i++){\n              if(o==1){\n                     if(a[i]%2!=0){\n                            printf(\"%d\",a[i]);\n                     }\n              }\n              \n              if(e==1){\n                     if(a[i]%2==0){\n                            printf(\"%d\",a[i]);\n              }\n              }\n       }\n       return 0;\n}", "fixed": "#include<stdio.h>\n       int main(){\n       int n;\n       scanf(\"%d\",&n);\n       int a[n],e=0,o=0;\n       for(int i=0;i<n;i++){\n              scanf(\"%d\",&a[i]);\n              if(a[i]%2==0){\n                     e++;\n              }\n              else{\n              o++;\n              }\n       }\n       for(int i=0;i<n;i++){\n              if(o==1){\n                     if(a[i]%2!=0){\n                            printf(\"%d\",i+1);\n                     }\n              }\n              \n              if(e==1){\n                     if(a[i]%2==0){\n                            printf(\"%d\",i+1);\n              }\n              }\n       }\n       return 0;\n}"}
{"similarity_score": 0.7382297551789078, "equal_cnt": 54, "replace_cnt": 20, "delete_cnt": 19, "insert_cnt": 15, "fix_ops_cnt": 54, "lang": "GNU C11", "fix_code_uid": "73a087005639ff278201025b73c1ee47", "bug_code_uid": "ff4c482b8e19ad40fa71b845410e2acd", "src_uid": "fa761cd247a815f105668b716c20f0b4", "apr_id": "69eef7873fda6c118fef8ef17312783f", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include <stdio.h>\r\n     \r\n    int main() {\r\n        int t;\r\n        scanf(\"%d\",&t);\r\n        for(int o=0;o<t;o++)\r\n        {\r\n            long int a,b,c=0;\r\n            scanf(\"%ld\",&a);\r\n            char p[a];\r\n            scanf(\"%s\",p);\r\n            if(a%2==0)\r\n            {\r\n                for(b=a/2-2;b>-1;b--)\r\n                {\r\n                    if(p[b]==p[a/2])\r\n                    c++;\r\n                    else\r\n                    break;\r\n                }\r\n                printf(\"%ld\\n\",c*2+2);\r\n            }\r\n            else\r\n            {                \r\n                    if(a%2==0)\r\n                    c++;\r\n                    else\r\n                    break;\r\n               \r\n                printf(\"%ld\\n\",2*c+1);\r\n            }\r\n        }\r\n        \r\n        return 0;\r\n    }", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int x = 0; x < t; x++)\r\n    {\r\n        long int a, b, c = 0;\r\n        scanf(\"%ld\", &a);\r\n        char p[a];\r\n        scanf(\"%s\", p);\r\n        if (a % 2 == 0)\r\n        {\r\n            for (b = a / 2 - 1; b > -1; b--)\r\n            {\r\n                if (p[b] == p[a / 2])\r\n                    c++;\r\n                else\r\n                    break;\r\n            }\r\n            printf(\"%ld\\n\", c * 2);\r\n        }\r\n        else\r\n        {\r\n            for (b = a / 2 - 1; b > -1; b--)\r\n            {\r\n                if (p[b] == p[a / 2])\r\n                    c++;\r\n                else\r\n                    break;\r\n            }\r\n            printf(\"%ld\\n\", 2 * c + 1);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9993972272453285, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e51759e29f50d082fd3b01001616c871", "bug_code_uid": "d67fab2b643e87053170f6ce3d2e2ab4", "src_uid": "1fba9a290d0492a3d658a7a33388db13", "apr_id": "cc37bbbb9c3746d9b0113c70912c1283", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar a[20005];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\t//char a[2005];\n\t\t//memset(a,0,sizeof(a));\n\t\tscanf(\"%s\",a);\n\t\tint i;\n\t\tint b[6];\n\t\tmemset(b,0,sizeof(b));\n\t\tint len=strlen(a);\n\t\tfor(i=0;i<len;i++)\n\t\t{\n\t\t\tif(a[i]=='L')\n\t\t\t\tb[1]++;\n\t\t\tif(a[i]=='R')\n\t\t\t\tb[2]++;\n\t\t\tif(a[i]=='U')\n\t\t\t\tb[3]++;\n\t\t\tif(a[i]=='D')\n\t\t\t\tb[4]++;\n\t\t}\n\t\tint x,y;\n\t\tif(b[1]>=b[2])\n\t\t\tx=b[2];\n\t\telse\n\t\t\tx=b[1];\n\t\tif(b[3]>=b[4])\n\t\t\ty=b[4];\n\t\telse\n\t\t\ty=b[3];\n\t\tif(x==0&&y!=0)\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t\ty=1;\n\t\t\t}\n\t\tif(x!=0&&y==0)\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t\tx=1;\n\t\t\t}\n\t\tif((x==0&&y==0)||(x!=0&&y!=0))\n\t\t\tprintf(\"%d\\n\",x+x+y+y);\n\t\tfor(i=1;i<=x;i++)\n\t\t\tprintf(\"L\");\n\t\tfor(i=1;i<=y;i++)\n\t\t\tprintf(\"U\");\n\t\tfor(i=1;i<=x;i++)\n\t\t\tprintf(\"R\");\n\t\tfor(i=1;i<=y;i++)\n\t\t\tprintf(\"D\");\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n } ", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[200005];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\t//char a[2005];\n\t\t//memset(a,0,sizeof(a));\n\t\tscanf(\"%s\",a);\n\t\tint i;\n\t\tint b[6];\n\t\tmemset(b,0,sizeof(b));\n\t\tint len=strlen(a);\n\t\tfor(i=0;i<len;i++)\n\t\t{\n\t\t\tif(a[i]=='L')\n\t\t\t\tb[1]++;\n\t\t\tif(a[i]=='R')\n\t\t\t\tb[2]++;\n\t\t\tif(a[i]=='U')\n\t\t\t\tb[3]++;\n\t\t\tif(a[i]=='D')\n\t\t\t\tb[4]++;\n\t\t}\n\t\tint x,y;\n\t\tif(b[1]>=b[2])\n\t\t\tx=b[2];\n\t\telse\n\t\t\tx=b[1];\n\t\tif(b[3]>=b[4])\n\t\t\ty=b[4];\n\t\telse\n\t\t\ty=b[3];\n\t\tif(x==0&&y!=0)\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t\ty=1;\n\t\t\t}\n\t\tif(x!=0&&y==0)\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t\tx=1;\n\t\t\t}\n\t\tif((x==0&&y==0)||(x!=0&&y!=0))\n\t\t\tprintf(\"%d\\n\",x+x+y+y);\n\t\tfor(i=1;i<=x;i++)\n\t\t\tprintf(\"L\");\n\t\tfor(i=1;i<=y;i++)\n\t\t\tprintf(\"U\");\n\t\tfor(i=1;i<=x;i++)\n\t\t\tprintf(\"R\");\n\t\tfor(i=1;i<=y;i++)\n\t\t\tprintf(\"D\");\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n } "}
{"similarity_score": 0.9988193624557261, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8d9da5b074c3092ac2587d5dc18ecf05", "bug_code_uid": "084f037efc06b6226269cf0b7015662f", "src_uid": "5e23f02afc7446ecf8688ad2a8fa284d", "apr_id": "cc17831e84f9a221aef8e672f1b6b6a0", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 20009\nint main() {\n\tint n,cnt = 1; scanf(\"%d\", &n);\n\tint arr[MAX] = { 0 };\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (cnt % 2 == 1) {\n\t\t\tarr[i] = 2*i-1;\n\t\t\tarr[i + n] = 2*i;\n\t\t}\n\t\telse {\n\t\t\tarr[i + n] = 2 * i - 1;\n\t\t\tarr[i] = 2 * i;\n\t\t}\n\t\tcnt++;\n\t}\n\tif (n % 2 == 0) {\n\t\tprintf(\"NO\");\n\t}\n\telse {\n\t\tprintf(\"YES\\n\");\n\t\tfor (int i = 1; i <= 2 * n; i++) {\n\t\t\tprintf(\"%d \", arr[i]);\n\t\t}\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define MAX 200009\nint main() {\n\tint n,cnt = 1; scanf(\"%d\", &n);\n\tint arr[MAX] = { 0 };\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (cnt % 2 == 1) {\n\t\t\tarr[i] = 2*i-1;\n\t\t\tarr[i + n] = 2*i;\n\t\t}\n\t\telse {\n\t\t\tarr[i + n] = 2 * i - 1;\n\t\t\tarr[i] = 2 * i;\n\t\t}\n\t\tcnt++;\n\t}\n\tif (n % 2 == 0) {\n\t\tprintf(\"NO\");\n\t}\n\telse {\n\t\tprintf(\"YES\\n\");\n\t\tfor (int i = 1; i <= 2 * n; i++) {\n\t\t\tprintf(\"%d \", arr[i]);\n\t\t}\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.5048335123523093, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "4fbaebd4273d4dbe9ba84306c3a20991", "bug_code_uid": "64d2896c53a897b84f1c87f39838eb42", "src_uid": "2031f2ac5652609fda77830e93ffcc2c", "apr_id": "e536b77bf428f86b803d1d023c8e48f9", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAXINT 200000\nint main(){\n\tint a[200001],n,i,j;\n\t\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tint min1=MAXINT,min2=MAXINT;\n\t\tfor(j=i;j<=n;j++){\n\t\t\tif(a[j]==0){\n\t\t\t\tmin1=j-i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(j=i;j>=1;j--){\n\t\t\tif(a[j]==0){\n\t\t\t\tmin2=i-j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ta[i]=min1<min2?min1:min2;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%d \",a[i]);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define MAXINT 200000\nint main(){\n\tint a[200001],n,i,j,x;\n\t\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&x);\n\t\tif(x==0){\n\t\t\ta[i]=x;\n\t\t}\n\t\telse{\n\t\t\ta[i]=MAXINT;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]==0){\n\t\t\tfor(j=i-1;j>=1;j--){\n\t\t\t\tif(a[j]==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ta[j]=i-j;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]==0){\n\t\t\tfor(j=i+1;j<=n;j++){\n\t\t\t\tif(a[j]==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(a[j]>j-i){\n\t\t\t\t\ta[j]=j-i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%d \",a[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.982837528604119, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ba1622b73b32c078314bb96c9a3987b3", "bug_code_uid": "524651eca69d501c04849cdcf9dc810f", "src_uid": "55a1e9236cac9a6044e74b1975331535", "apr_id": "ebe0843440a4ab1b22e1cc5f04482d77", "difficulty": 1400, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\r\n#include <stdio.h>\r\n#define min(a,b) (a < b ? a : b)\r\n#define N 100000\r\ntypedef struct pair {\r\n    int a, b;\r\n} pr;\r\npr p[N];\r\nint ar[N];\r\nint cmp (const void * a, const void * b) {\r\n    return (*(pr*)b).a - (*(pr*)a).a;\r\n}\r\nint main () {\r\n    int t, s, an, ct, k, l;\r\n    scanf(\"%d\",&t);\r\n    while (t--) {\r\n        scanf(\"%d\",&s); an = k =1000000;\r\n        for (int i = 0; i< s; i++)\r\n            scanf(\"%d\",&ar[i]);\r\n        for (int i = 0; i < s; i++) {\r\n            scanf(\"%d\",&p[i].a);\r\n            p[i].b = i;\r\n        }\r\n        qsort(p, s, 8, cmp); ct = 0;\r\n        for (int i = 0; i < s; i++) {\r\n            for (; ct < s && p[ct].a > ar[i]; ct++)\r\n                if (k > p[ct].b) k = p[ct].b, l = ct;\r\n            if (ct < s) p[ct] = p[l];\r\n            an = min(an, k + i);\r\n        }\r\n        printf(\"%d\\n\",an);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdlib.h>\r\n#include <stdio.h>\r\n#define min(a,b) (a < b ? a : b)\r\n#define N 100000\r\ntypedef struct pair {\r\n    int a, b;\r\n} pr;\r\npr p[N];\r\nint ar[N];\r\nint cmp (const void * a, const void * b) {\r\n    return (*(pr*)b).a - (*(pr*)a).a;\r\n}\r\nint main () {\r\n    int t, s, an, ct, k, l;\r\n    scanf(\"%d\",&t);\r\n    while (t--) {\r\n        scanf(\"%d\",&s); an = k = 1000000;\r\n        for (int i = 0; i< s; i++)\r\n            scanf(\"%d\",&ar[i]);\r\n        for (int i = 0; i < s; i++) {\r\n            scanf(\"%d\",&p[i].a);\r\n            p[i].b = i;\r\n        }\r\n        qsort(p, s, 8, cmp); ct = 0;\r\n        for (int i = 0; i < s; i++) {\r\n            for (; ct < s && p[ct].a > ar[i]; ct++)\r\n                if (k > p[ct].b) k = p[ct].b, l = ct;\r\n            ct--;\r\n            p[ct] = p[l];\r\n            an = min(an, k + i);\r\n        }\r\n        printf(\"%d\\n\",an);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7327249022164276, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "04e23dc0c9f409e70fc23e9fbaa694d8", "bug_code_uid": "8b5412e56cae384e6a7d1d64cb3d51de", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "e99149975715a548f245e1bad8bc1216", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[100],b[100],n,i,j,x[100],max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&a[i],&b[i]);\n    x[0]=b[1]+b[0]-a[1];\n    max=x[0];\n    for(i=1;i<n-1;i++)\n    {\n        x[i]=x[i-1]+b[i+1]-a[i+1];\n        if(max<x[i])\n            max=x[i];\n    }\n    printf(\"%d\",max);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[2000],b[2000],n,i,j,x[2000],max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&a[i],&b[i]);\n    if(b[1]+b[0]-a[1]<b[0])\n    {\n        max=b[0];\n        x[0]=b[1]+b[0]-a[1];\n    }\n    else\n    {\n        x[0]=b[1]+b[0]-a[1];\n        max=x[0];\n    }\n    for(i=1;i<n-1;i++)\n    {\n        x[i]=x[i-1]+b[i+1]-a[i+1];\n        if(max<x[i])\n            max=x[i];\n    }\n    printf(\"%d\",max);\n}\n"}
{"similarity_score": 0.1016652059596845, "equal_cnt": 17, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "7854b1d8d471be3e53afe206c9e45086", "bug_code_uid": "fa95aac1d629a97e41153e96e789fe18", "src_uid": "7f9853be7ac857bb3c4eb17e554ad3f1", "apr_id": "c1ef33715377f950abd47e478f2ffc94", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\n#include<math.h>\n#include<stdio.h>\nint main()\n{\n\tchar  s[26];\n\tchar s1[26];\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tint a[100] = { 0 };\n\t\tscanf(\"%s\", s);\n\t\tscanf(\"%s\", s1);\n\t\tlong long sum = 0;\n\t\tint l = strlen(s);\n\t\tint ll = strlen(s1);\n\t\tfor (int i = 0; i < ll; i++)\n\t\t{\n\t\t\tfor (int j = 0; j < 26; j++)\n\t\t\t{\n\t\t\t\tif (s[j] == s1[i])\n\t\t\t\t{\n\t\t\t\t\ta[i] = j;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < ll - 1; i++)sum += labs(a[i + 1] - a[i]);\n\t\tprintf(\"%lld\\n\", sum);\n\n\t}\n\treturn 0;\n}\n\t \t\t      \t\t\t \t\t\t\t\t  \t\t  \t\t \t", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\\n\",&n);\n    int result[10000]={0};\n    for(i=0;i<n;i++)\n    {\n        char arr[27],word[1000];\n        gets(arr);\n        gets(word);\n        int lenth[strlen(word)],j;\n        for(j=0;j<strlen(word);j++)\n        {\n            char ser[2]={word[j],0};\n            lenth[j]=arr-strstr(arr,ser)+1;\n        }\n        for(j=0;j<strlen(word)-1;j++)\n        {\n            result[i]+=abs(lenth[j]-lenth[j+1]);\n        }\n    }\n    for(i=0;i<n;i++)\n        printf(\"%d\\n\",result[i]);\n    return 0;\n}\n\t  \t  \t\t \t\t\t  \t   \t   \t   \t\t\t\t\t"}
{"similarity_score": 0.5242030696576151, "equal_cnt": 13, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "cee0db3ec55fa49c0d76646e89950439", "bug_code_uid": "e545dd13f8db275d9136d1f6bcc85308", "src_uid": "f4779e16e0857e6507fdde55e6d4f982", "apr_id": "39e62007b34cf68ce66c7d675c9f58b8", "difficulty": null, "tags": ["constructive algorithms", "probabilities"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        for(int i=1; i<=n; i++)\n        {\n            printf(\"%d \",i);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,p=0,k=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        p=k=0;\n        scanf(\"%d\",&n);\n        if(n%2==0)\n        {\n            for(int i=n; i>=1; i--)\n            {\n                printf(\"%d \",i);\n            }\n            printf(\"\\n\");\n        }\n        else\n        {\n            k=n/2+1;\n            for(int i=n; i>=1; i--)\n            {\n                if(i==k)\n                {\n                    p=i;\n                    continue;\n                }\n                printf(\"%d \",i);\n            }\n            printf(\"%d\\n\",p);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.937888198757764, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1be5c897ffdf717fc8a6f6813813eb1f", "bug_code_uid": "fa752b495d83476543d231d018f3bec8", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "d0e0f91d6aad02cad0e746d4588f6731", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,a[1050],i,count;\n    while(scanf(\"%d\",&n)!=EOF){\n        count=0;\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n            if(a[i]==0) count++;\n        }\n        if(count==1||n==1&&a[0]==1) printf(\"YES\\n\");\n        else printf(\"NO\\n\"); \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,a[1050],i,count;\n    while(scanf(\"%d\",&n)!=EOF){\n        count=0;\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n            if(a[i]==0) count++;\n        }\n        \n        if((count==1&&n>1)||(n==1&&a[0]==1)) printf(\"YES\\n\");\n        else printf(\"NO\\n\"); \n    }\n    return 0;\n}"}
{"similarity_score": 0.07939914163090128, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "52750d8d66b99856f27e62df48d01ff4", "bug_code_uid": "d8fab260aceb26f8d81865d85c1dc1b1", "src_uid": "4867d014809bfc1d90672b32ecf43b43", "apr_id": "0cc7ae6fed1b1f34fdebaf377a2c1a09", "difficulty": 1900, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n\n#define N 1000000007\n\nunsigned arr[N];\n\nint main(){\n\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\n#define MOD 1000000007\ntypedef unsigned long long llu;\nllu arr[100009];\n\nllu expmod(llu a, llu x, llu n){\n  if(n==0)return a % MOD;\n  else if(n%2==0)return expmod(a, x*x%MOD, n/2);\n  else return expmod(a*x%MOD, x, n-1);\n}\n\n//  ([x,arr,n] + k*x^a) / (x^sum)\nllu g(llu arr[], llu n, llu a, llu k, llu sum, llu x){\n  if(a>=sum && k>0) return sum;\n  else if(n>0 && arr[n-1]==a)return g(arr, n-1, a, k+1, sum, x);\n  else if(k%x==0)return g(arr, n, a+1, k/x, sum, x);\n  else return a;\n}\n\n\nint main(){\n  unsigned nn, xx;\n  llu i, n, x;\n  llu sum=0;\n  scanf(\"%u%u\", &nn, &xx);\n  n = (llu)nn;\n  x = (llu)xx;\n\n  for(i=0;i<n;i++){\n    scanf(\"%llu\", arr+i);\n    sum+=arr[i];\n  }\n\n  for(i=0;i<n;i++)\n    arr[i]=sum-arr[i];\n\n\n\n  llu exp = (llu)g(arr, n, arr[n-1], 0, sum, x);\n  llu result = expmod(1, x, exp);\n  printf(\"%u\",(unsigned)result);\n\n  return 0;\n}\n"}
{"similarity_score": 0.2113323124042879, "equal_cnt": 20, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 7, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "ac4d874cc3646fb47448f405639f0eba", "bug_code_uid": "1ffb3925e11fa4033b797d847f44454d", "src_uid": "e4381bd9f22c0e49525cc05cc5cd2399", "apr_id": "3133686f75d5125d782436b1cec8d9f1", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int x=0,len=0,n,i,count=0,b,c;\n    scanf(\"%d\",&n);\n    char str[n+1];\n    scanf(\"%s\",str);\n    len=strlen(str);\n    if(len<=2)\n        printf(\"0\\n\");\n\n    else if(len>=3)\n    {\n        for(i=1; i<=n; i++)\n        {\n            if(str[i-1]=='U' && str[i]=='U' && str[i+1]=='U')\n                count++;\n            else if(str[i-1]=='R' && str[i]=='U' && str[i+1]=='U')\n                count++;\n            else if(str[i-1]=='U' && str[i]=='U' && str[i+1]=='R')\n                count++;\n            else if(str[i-1]=='R' && str[i]=='R' && str[i+1]=='R')\n                count++;\n        }\n        printf(\"%d\\n\",count-1);\n    }\n    return 0;\n}\n", "fixed": "//codeforces\n#include<Stdio.h>\n#include<string.h>\n\nint main()\n{\n    char str1[1000000];\n\n    int n=0,i,j,num,a=0,b=0;\n    scanf(\"%d\", &num);\n    if(num==1)\n    {\n        //need to print\n        printf(\"0\\n\");\n        return 0;\n    }\n    scanf(\"%s\", &str1);\n    for(i=0; i<num-1; i++)\n    {\n        if(str1[i]=='U')  b++;\n\n        else\n        {\n            //need count;\n            a++;\n\n        }\n\n        if(a==b)\n        {\n            if(str1[i+1]==str1[i])\n            {\n                //count\n                n++;\n            }\n        }\n    }\n    //need to print\n    printf(\"%d\\n\",n);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9968553459119497, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "15f8e174908bd7d8d9fba6f8286715fa", "bug_code_uid": "521ea5ab03f67bd712c832992f1f7f6c", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "b33ec264a7f49372397bad0cf965ac38", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\ntypedef long long ll;\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tll a,b;\r\n\t\tscanf(\"%lld %lld\",&a,&b);\r\n\t\tif(b==1&&a==1) printf(\"NO\\n\");\r\n\t\telse if(b==1) printf(\"NP\\n\");\r\n\t\telse \r\n\t\t{\r\n\t\t\tll m=a*b,n=a*(b+1);\r\n\t\t\tprintf(\"YES\\n%lld %lld %lld\\n\",a,m,n);\r\n\t    }\r\n\t } \r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\ntypedef long long ll;\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tll a,b;\r\n\t\tscanf(\"%lld %lld\",&a,&b);\r\n\t\tif(b==1&&a==1) printf(\"NO\\n\");\r\n\t\telse if(b==1) printf(\"NO\\n\");\r\n\t\telse \r\n\t\t{\r\n\t\t\tll m=a*b,n=a*(b+1);\r\n\t\t\tprintf(\"YES\\n%lld %lld %lld\\n\",a,m,n);\r\n\t    }\r\n\t } \r\n\treturn 0;\r\n}"}
{"similarity_score": 0.4309576837416481, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "d08265e7c4b16bfbf995ffb2ef4205d2", "bug_code_uid": "b37169f9861ae5bb11aa0aabdaeb9b07", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "2103edf0c09fff48c69f96437a9991cf", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    while(t--)\n    {\n        long long int a,b,n,max,c=0,i;\n        scanf(\"%lld %lld %lld\\n\",&a,&b,&n);\n        if(a>b)\n        {\n            max=a;\n        }\n        else\n        {\n            max=b;\n        }\n        i=0\n        while(a>n||b>n)\n        {\n            if(max==a)\n            {\n                if(i%2==0)\n                {\n                    b=b+a;\n                    c++;\n                }\n                else\n                {\n                    a=a+b;\n                    c++;\n                }\n            }\n            else\n            {\n                if(i%2==0)\n                {\n                    a=a+b;\n                    c++;\n                }\n                else\n                {\n                    b=b+a;\n                    c++;\n                }\n            }\n            i++;\n        }\n        printf(\"%lld\\n\",c);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\\n\",&t);\n    while(t--)\n    {\n        long long int a,b,n,i,c,d,j;\n        scanf(\"%lld %lld %lld\\n\",&a,&b,&n);\n        i=0;\n        while(a<=n&&b<=n)\n        {\n             if(a<b)\n             {\n                 a=a+b;\n                 if(a<=n)\n                 {\n                     b=b+a;\n                 }\n                 else\n                 {\n                     i++;\n                     break;\n                 }\n             }\n             else\n             {\n                 b=b+a;\n                 if(b<=n)\n                 {\n                     a=a+b;\n                 }\n                 else\n                 {\n                     i++;\n                     break;\n                 }\n             }\n             i=i+2;\n        }\n        printf(\"%lld\\n\",i);\n    }\n    return 0;\n}"}
{"similarity_score": 0.75, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d9a76b35fb455c6f1c82099b3f59f405", "bug_code_uid": "7b90476808dfc880538863ccda167f0e", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "3fae4614b4be639f9be74f540b74f70b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,k,s,ans;\n        scanf(\"%d %d\",&n,&k);\n        s=(n*k)/2;\n        ans=ceil(s);\n        printf(\"%d\\n\",ans+1);\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,k,s,ans;\n        scanf(\"%d %d\",&n,&k);\n        s=(n*k);\n        if(s%2==0)\n        {\n            ans=s/2;\n            printf(\"%d\\n\",ans);\n        }\n        else{\n        ans=ceil(s/2);\n        printf(\"%d\\n\",ans+1);\n    }\n}\n}"}
{"similarity_score": 0.5298245614035088, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7a41742d46691dd123761091f7b0c2ef", "bug_code_uid": "3a1d7a4a1d18dd7890ee6656a0fd7840", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "572510eb3182d0aad5cc9a936b295b15", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tint n, i, e, h_, cnt;\n\n\tscanf(\"%d\", &n);\n\te = h_ = cnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tint h;\n\n\t\tscanf(\"%d\", &h);\n\t\te += (h_ - h);\n\t\tif (e < 0) {\n\t\t\tcnt += (-e);\n\t\t\tprintf(\"%d \", i + 1);\n\t\t\te = 0;\n\t\t}\n\t\th_ = h;\n\t}\n\tprintf(\"\\n%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tint n, e, h_, cnt;\n\n\tscanf(\"%d\", &n);\n\te = h_ = cnt = 0;\n\twhile (n--) {\n\t\tint h;\n\n\t\tscanf(\"%d\", &h);\n\t\te += (h_ - h);\n\t\tif (e < 0) {\n\t\t\tcnt += (-e);\n\t\t\te = 0;\n\t\t}\n\t\th_ = h;\n\t}\n\tprintf(\"\\n%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.4856439704675964, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "5d1c453a8d682958efa91ddd1d9856eb", "bug_code_uid": "ef8b672d9a2238fa0d328a85cfd8f081", "src_uid": "d07ae42b7902ba3a49cf4463248710ea", "apr_id": "91b3aed51f925c80a40027344ddf1a4d", "difficulty": 1100, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t, n, i, p;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &n);\n        long long int a[n];\n        for(i=0;i<n;i++)\n            scanf(\"%lld\", &a[i]);\n        for(i=1;i<n;i++)\n        {\n            p=a[i]-a[i-1];\n            if(p==0)\n                printf(\"%lld \", a[i-1]);\n            else if(p<=n-1 && p>=-(n-1))\n                printf(\"%lld \", a[i-1]);\n            else\n            {\n                if(a[i]+a[i-1]<=n-1 && a[i]+a[i-1]<=-(n-1))\n                    printf(\"-%lld \", a[i-1]);\n                else\n                {    printf(\"%lld \", a[i-1]);\n                    a[i]=-a[i];\n                }\n            }\n            if(i==n-1)\n                printf(\"%lld\\n\", a[i]);\n        }\n        \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t, n, i;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &n);\n        long long int a[n], p;\n        for(i=0;i<n;i++)\n            scanf(\"%lld\", &a[i]);\n        for(i=0;i<n;i++)\n        {\n            p=abs(a[i]);\n            if(i%2==0)\n                printf(\"%lld \", p);\n            else\n                printf(\"%lld \", (p*-1));\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.6236162361623616, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "1b6b8535a8e2018c6ba1765816d3dd3a", "bug_code_uid": "1e645406dd17cafbf38c26122977195c", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "dc8244cd0d23710faf14e4994f01a850", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) {\n\tint i,n;\n\tprintf(\"enter a number\");\n\tscanf(\"%d\",&n);int a[n];int fl=0;\n\tfor(i=0;i<n;i++)\n\t{scanf(\"%d\",&a[i]);}\n\tfor(i=0;i<n;i++)\n\t{if(a[i]==1)\n\t\tif(a[n-1]==1)\n\t\t\t{\n\t\t\tprintf(\"YES\\n\");fl=1;break;}\n\t}if(fl==0)\n\t    printf(\"NO\\n\");\n\treturn 0;\n}\n\n\n", "fixed": "#include <stdio.h>\nint main(void) {\n\tint n,i;\n\tscanf(\"%d\",&n);int a[n];int c=0;\n\tfor(i=0;i<n;i++)\n\t{scanf(\"%d\",&a[i]);\n\tif(a[i]==0)\t\n\tc++;\n\t}\n\t\tif(c==1&&n>1)\n\t\t\t\tprintf(\"YES\");\n\t\telse if(c==0&&n==1)\n\t\t\t\tprintf(\"YES\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"NO\");\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9417040358744395, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b7db4cfc4f19bfea871f08a44861b3e8", "bug_code_uid": "2703e705dd6cd573c0c82acf9e16ecf5", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "0168edc5d03beb615ce25c6e734f0b3d", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long n, i, j, k, max;\n    scanf(\"%I64d\", &n);\n    unsigned long long a[n];\n\n    for(i=1; i<=n; i++)\n        scanf(\"%I64d\", &a[i]);\n    max=a[n-1];\n\n    for(i=n; i>=1; i--)\n    {\n        if(a[i]>=max)\n        {\n            max=a[i];\n            a[i]=0;\n        }\n        else a[i]= (max-a[i])+1;\n    }\n    for(i=1; i<=n; i++)\n        printf(\"%I64d \", a[i]);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    unsigned long long n, i, j, k, max;\n    scanf(\"%I64d\", &n);\n    unsigned long long a[n];\n\n    for(i=1; i<=n; i++)\n        scanf(\"%I64d\", &a[i]);\n    max=a[n];\n\n    for(i=n; i>=1; i--)\n    {\n        if(i==n) a[i]=0;\n        else{\n        if(a[i]>max)\n        {\n            max=a[i];\n            a[i]=0;\n        }\n        else a[i]= (max-a[i])+1;\n        }\n    }\n    for(i=1; i<=n; i++)\n        printf(\"%I64d \", a[i]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9976133651551312, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e2e1a6d3339bba0e3b231e3d572d2512", "bug_code_uid": "ac408b3c49489f3720325f095dc0fe39", "src_uid": "fcd88c7b64da4b839cda4273d928429d", "apr_id": "fa68d1c5a82501f4f5aba121b5e6238d", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[100001];\n\tint n,y=0,z=0;\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tint ans=0;\n\tint x;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(a[i]==0)\n\t\t{\n\t\t\tx=0;\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx++;\n\t\t\tif(x>ans)\n\t\t\t\tans=x;\n\t\t}\n\t}\n\tfor(i=1;a[i]!=0;i++)\n\t{\n\t\tif(a[i]==1)\n\t\t\ty++;\n\t}\n\tfor(i=n;a[i]!=0;i--)\n\t{\n\t\tif(a[i]==1)\n\t\t\tz++;\n\t}\n\tif(y+z>ans)\n\t\tans=y+z;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[200001];\n\tint n,y=0,z=0;\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tint ans=0;\n\tint x;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(a[i]==0)\n\t\t{\n\t\t\tx=0;\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx++;\n\t\t\tif(x>ans)\n\t\t\t\tans=x;\n\t\t}\n\t}\n\tfor(i=1;a[i]!=0;i++)\n\t{\n\t\tif(a[i]==1)\n\t\t\ty++;\n\t}\n\tfor(i=n;a[i]!=0;i--)\n\t{\n\t\tif(a[i]==1)\n\t\t\tz++;\n\t}\n\tif(y+z>ans)\n\t\tans=y+z;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9889415481832543, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "103471fc27a06c73df79af5892e8572c", "bug_code_uid": "23212b20bc70ca3a95df702be81826a5", "src_uid": "863a8124d46bb09b49fc88939fb5f364", "apr_id": "b61a7f7b3b8807d7eebf217c69c28bf9", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\nint main()\n{\n    long long int x,y,z,a,b,c=0;\n    scanf(\"%I64d %I64d %I64d\",&x,&y,&z);\n        a=x%z;\n        b=y%z;\n        if((a+b)>=z)\n        {\n            if(a>b)\n                c=z-a;\n            else c=z-b;\n        }\n\n       printf(\"%I64d %d\",(x+y)/z,c);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <conio.h>\nint main()\n{\n    long long int x,y,z,a,b,c=0;\n    scanf(\"%I64d %I64d %I64d\",&x,&y,&z);\n        a=x%z;\n        b=y%z;\n        if((a+b)>=z)\n        {\n            if(a>b)\n            c=z-a;\n            else c=z-b;\n        }\n\n       printf(\"%I64d %I64d\",(x+y)/z,c);\n    return 0;\n}\n"}
{"similarity_score": 0.9049180327868852, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "43e1cff20ae05e4c29de7273a25a80a6", "bug_code_uid": "7f379871ead3ac5865c20c28173dc46a", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "eebf31dfbc7b9a03b19516c7dd61da90", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\" , &t);\n\twhile(t--)\n\t{\n\tint n;\n\tint k;\n\tscanf(\"%d %d \" , &n , &k);\n\tint count = 0;\n\twhile(n != 0)\n\t{\n\t\tif(n%k == 0)\n\t\t{\n\t\t\tn = n/k;\n\t\t\tcount = count + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount = count + n%k;\n\t\t\tn = n - n%k;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\t}\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\" , &t);\n\twhile(t--)\n\t{\n\tlong long n;\n\tlong long k;\n\tscanf(\"%lld %lld \" , &n , &k);\n\tlong long count = 0;\n\twhile(n != 0)\n\t{\n\t\tif(n%k == 0)\n\t\t{\n\t\t\tn = n/k;\n\t\t\tcount = count + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount = count + n%k;\n\t\t\tn = n - n%k;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",count);\n\t}\n}"}
{"similarity_score": 0.8737300435413643, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f57975d29e1509c79fda9b2bfa898b2c", "bug_code_uid": "84e86c43b4ff931a3093d5ac446ca6b3", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "bd6127b7639654c198a600feab4a384e", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(;t;t--)\n    {\n        int n,x;\n        scanf(\"%d\",&n);\n        for(int i=2;;i++)\n        {\n            x=n/(i*i-i+1);\n            if(x*(i*i-i+1)==n)\n            {\n                printf(\"%d\\n\",x);\n                break;\n            }\n\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(;t;t--)\n    {\n        int n,x;\n        scanf(\"%d\",&n);\n        for(int i=2;i<30;i++)\n        {\n            x=pow(2,i)-1;\n            if(n%x==0)\n            {\n                printf(\"%d\\n\",n/x);\n                break;\n            }\n\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9947643979057592, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "18500b1ec261a12328b5b339063618bb", "bug_code_uid": "20394b814136d43e0ec8c69a04384e2a", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "14c39b2b7f878ed6a73b83faabe6ab53", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long int a;\r\n        scanf(\"%lld\",&a);\r\n        if(a<0){\r\n            a=a*(-1);\r\n        }\r\n        if(a==1){\r\n            printf(\"2\\n\");\r\n            continue;\r\n        }\r\n        if(a%3==0){\r\n            printf(\"%lld\\n\",a/3);\r\n        }\r\n        else{\r\n            if(a%3==1){\r\n                printf(\"%lld\",(a+2)/3);\r\n            }\r\n            else if(a%3==2){\r\n                printf(\"%lld\",(a+1)/3);\r\n            }\r\n            \r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long int a;\r\n        scanf(\"%lld\",&a);\r\n        if(a<0){\r\n            a=a*(-1);\r\n        }\r\n        if(a==1){\r\n            printf(\"2\\n\");\r\n            continue;\r\n        }\r\n        if(a%3==0){\r\n            printf(\"%lld\\n\",a/3);\r\n        }\r\n        else{\r\n            if(a%3==1){\r\n                printf(\"%lld\\n\",(a+2)/3);\r\n            }\r\n            else if(a%3==2){\r\n                printf(\"%lld\\n\",(a+1)/3);\r\n            }\r\n            \r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.984304932735426, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d128da0ec0fb0d0e095f964e6f9413a9", "bug_code_uid": "4c1cef93f5c3e12859cb0279a9ea207e", "src_uid": "cdcf95e29d3260a07dded74286fc3798", "apr_id": "20cb1a10433cc6052c3fb506da301b8c", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    int len;\r\n    scanf(\"%d\",&len);\r\n    int a[20];\r\n    int m = len  /2 + 1;\r\n    int index = 1;\r\n    if(len % 2==0){\r\n        for(int i = len;i >= 1;i--){\r\n            printf(\"%d \",i);\r\n        }\r\n        printf(\"\\n\");\r\n    }else if(len == 3){\r\n        printf(\"-1\\n\");\r\n    } else{\r\n        for(int i = len; i>=1; i--){\r\n        a[index++] = i;\r\n            if(i == m && m >3){\r\n                a[index - 1]++;\r\n                a[index - 2]--;\r\n            }else if(i == m) {\r\n                index--;\r\n                for(int j = 1;j <= m;j++){\r\n                    a[index++] = j;\r\n                }\r\n            }\r\n        }\r\n        for(int i = 1;i <=len;i++){\r\n            printf(\"%d \",a[i]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    \r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}", "fixed": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    int len;\r\n    scanf(\"%d\",&len);\r\n    int a[200010];\r\n    int m = len  /2 + 1;\r\n    int index = 1;\r\n    if(len % 2==0){\r\n        for(int i = len;i >= 1;i--){\r\n            printf(\"%d \",i);\r\n        }\r\n        printf(\"\\n\");\r\n    }else if(len == 3){\r\n        printf(\"-1\\n\");\r\n    } else{\r\n        for(int i = len; i>=1; i--){\r\n        a[index++] = i;\r\n            if(i == m && m >3){\r\n                a[index - 1]++;\r\n                a[index - 2]--;\r\n            }else if(i == m) {\r\n                index--;\r\n                for(int j = 1;j <= m;j++){\r\n                    a[index++] = j;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        for(int i = 1;i <=len;i++){\r\n            printf(\"%d \",a[i]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    \r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}"}
{"similarity_score": 0.9775880469583778, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "60b159d9a4dd24b127bd1e4c525bd2b8", "bug_code_uid": "6535487c9b288d57cf9aa423c7176bbe", "src_uid": "7224ffd4776af4129739e1b28f696050", "apr_id": "8c8e39cbe45020918fb9777027f113b5", "difficulty": 1100, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,a,b,c,d,e,f,x1,y1,x2,y2,x,y,s,i,p,q,r,x3,y3;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        scanf(\"%d%d%d%d%d%d\",&x,&y,&x1,&y1,&x2,&y2);\n        x=x-a;\n        y=y-c;\n        x3=x+b;\n        y3=y+d;\n      if (x3>=x1&&x3<=x2&&y3>=y1&&y3<=y2)\n\t  {\n\t  \tif((x2>x1||a+b==0)&&(y2>y1||c+d==0))\n\t\t{\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n        else printf(\"No\\n\");\n\t  }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,a,b,c,d,e,f,x1,y1,x2,y2,x,y,s,i,p,q,r,x3,y3;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        scanf(\"%d%d%d%d%d%d\",&x,&y,&x1,&y1,&x2,&y2);\n        x=x-a;\n        y=y-c;\n        x3=x+b;\n        y3=y+d;\n      if (x3>=x1&&x3<=x2&&y3>=y1&&y3<=y2)\n\t  {\n\t  \tif((x2>x1||a+b==0)&&(y2>y1||c+d==0))\n\t\t{\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n        else printf(\"No\\n\");\n\t  }\nelse printf(\"No\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.12934362934362933, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "25f4389014ee7cb57a2f6efae870859f", "bug_code_uid": "3f8262ef6bdd57560ed8a26a9dff8559", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "a756dde0b56989321d11db0dbabb3b14", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i, l, j, counter = 0, m;\n    char s1[100005]; char s2[35];\n    scanf(\"%s\", &s1); scanf(\"%s\", &s2);\n    l = strlen(s1);\n    m = strlen(s2);\n    for(i = 0, j = 0; i <= l;)\n    {\n        if(j == m)\n        {\n            counter = counter + 1;\n            j = 0;\n        }\n        if(s1[i] == s2[j])\n        {\n            i++; j++;\n        }\n        else\n        {\n            i++; j = 0;\n        }\n    }\n    printf(\"%d\", counter);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint ch(char ara[],int str,int end,char va[])\n{\nint i=str,k,j=1;\nfor(k=0;k<end;k++,i++)\n    {\n    if(ara[i]!=va[k]) { j=0; break; }\n    }\nreturn j;\n}\n\nint main()\n{\nchar s_m[100005],s_c[35];\nscanf(\"%s %s\",&s_m,&s_c);\n\nint cnt=0,l_m,l_c,i,v;\nl_m=strlen(s_m),l_c=strlen(s_c);\n//printf(\"%d %d\\n\",l_m,l_c);\n\nfor(i=0;i<=(l_m-l_c);)\n    {\n    v=ch(s_m,i,l_c,s_c);\n    //printf(\"%d %d\\n\",i,l_c+i);\n    if(v==1) { /*printf(\"!\\n\");*/ cnt++; i=i+l_c; }\n    else i++;\n    }\n\nprintf(\"%d\\n\",cnt);\nreturn 0;\n}\n"}
{"similarity_score": 0.33949579831932775, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "2531c1b33d92f068f033a11b64e5c902", "bug_code_uid": "cc83b167add2015ee3b07e88627fd5f4", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "c44e3c64350027dda819bd6ec4bbd8ab", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char **argv)\n{\n\tint n, a, b, c, d; \n\tint i=1,ind,s1=0, max=-1;\n\tscanf(\"%d\",&n);\n\tif(n==1)\n\t{\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tind=1;\n\t}\n\telse\n\t{\n\t\t\twhile(n--)\n\t\t\t{\n\t\t\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\t\t\ts1=a+b+c+d;\n\t\t\t\tif(s1>max)\n\t\t\t\t{\n\t\t\t\t\tind=i;\n\t\t\t\t\tmax=s1;\n\t\t\t\t}\n\t\t\ti++;\n\t\t\t}\n\t}\n\tprintf(\"%d\", ind);\n}\n\n", "fixed": "#include<stdio.h>\nint main ()\n{\n\tint n,s1,a,b,c,d;\n\tint s2,r,i;\n\tscanf (\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf (\"%d%d%d%d\",&a,&b,&c,&d);\n\t\ts1=a+b+c+d;\n\t\tif (i==0)\n\t\t{\n\t\t\ts2=s1;\n\t\t\tr=1;\n\t\t}\n\t\telse if(s1>s2)\n\t\tr++;\n\t}\n\tprintf (\"%d\",r);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9962216624685138, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5f9e8ff83bc718a5b380a42567d8feef", "bug_code_uid": "5fe2e0178951b054ed52221e8923345d", "src_uid": "84c88932e107e1d1f80b44aec88134e4", "apr_id": "e60ba94f62866702eda74da64a78a70f", "difficulty": 800, "tags": ["bitmasks", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid do_split(int n,int x,int a[n])\r\n{\r\n    int i;\r\n    for (i=0;i<n;i++)\r\n    {\r\n        a[i]=x%2;\r\n        x=x/2;\r\n    }\r\n}\r\n\r\nint do_combine(int n,int a[n])\r\n{\r\n    int i,ans;\r\n    ans=0;\r\n    for (i=0;i<n;i++) ans=ans*2+a[i];\r\n    return ans;\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j,k,t,n,l;\r\n    scanf(\"%d\",&t);\r\n    for (i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&l);\r\n        int x[n],a[l],b[l],c[l];\r\n        for (j=0;j<n;j++) scanf(\"%d\",&x[j]);\r\n        for (j=0;j<l;j++) b[j]=0;\r\n        for (j=0;j<n;j++)\r\n        {\r\n            do_split(l,x[j],a);\r\n            for (k=0;k<l;k++) b[k]+=a[k];\r\n        }\r\n        for (j=0;j<l;j++)\r\n        {\r\n            if (b[j]*2>l) c[j]=1;\r\n            else c[j]=0;\r\n        }\r\n        printf(\"%d\\n\",do_combine(l,c));\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid do_split(int n,int x,int a[n])\r\n{\r\n    int i;\r\n    for (i=0;i<n;i++)\r\n    {\r\n        a[i]=x%2;\r\n        x=x/2;\r\n    }\r\n}\r\n\r\nint do_combine(int n,int a[n])\r\n{\r\n    int i,ans;\r\n    ans=0;\r\n    for (i=0;i<n;i++) ans=ans*2+a[n-1-i];\r\n    return ans;\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j,k,t,n,l;\r\n    scanf(\"%d\",&t);\r\n    for (i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&l);\r\n        int x[n],a[l],b[l],c[l];\r\n        for (j=0;j<n;j++) scanf(\"%d\",&x[j]);\r\n        for (j=0;j<l;j++) b[j]=0;\r\n        for (j=0;j<n;j++)\r\n        {\r\n            do_split(l,x[j],a);\r\n            for (k=0;k<l;k++) b[k]+=a[k];\r\n        }\r\n        for (j=0;j<l;j++)\r\n        {\r\n            if (b[j]*2>n) c[j]=1;\r\n            else c[j]=0;\r\n        }\r\n        printf(\"%d\\n\",do_combine(l,c));\r\n    }\r\n}"}
{"similarity_score": 0.9922879177377892, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4e7c623374578ed71acbfa817db3510b", "bug_code_uid": "d72bf6516aa38068083f01c39e0c4be9", "src_uid": "ab7ab67941783da5c16f6294eb1910d9", "apr_id": "92bbd598f9fd31c97479dbf8948061f0", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<limits.h>\r\n#include<string.h>\r\n#include <math.h>\r\n \r\n#define loop(first,  size, decrement) for(int i=first; i < size; i+= decrement)\r\n \r\n#define int_i(x) scanf(\"%i\", &x)\r\n#define int_o(x) printf(\"%i\\n\", x)\r\n \r\n#define long_i(x) scanf(\"%lld\", &x)\r\n#define long_o(x) printf(\"%lld \", x)\r\n\r\n \r\n#define s_i(x) scanf(\"%s\", x)\r\n#define s_o(x) printf(\"%s\\n\", x)\r\n \r\n#define MIN(a,b) (((a)<(b))?(a):(b))\r\n#define MAX(a,b) (((a)>(b))?(a):(b))\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n    int size;\r\n    int_i(size);\r\n    \r\n    int arry[size];\r\n    \r\n    int ans = 0 ;\r\n    int n;\r\n    \r\n    int INT[10001];\r\n    loop(0,10001, 1) INT[i] = 0;\r\n    \r\n    \r\n    \r\n    loop(0,size, 1)\r\n    {\r\n        int_i(n);\r\n        \r\n        if (INT[n] == 0) INT[n]++;\r\n        \r\n    }\r\n   \r\n    loop(0,10001, 1) ans +=  (INT[i]==0)? 0: 1;\r\n   \r\n   \r\n   int_o(ans- size%2- ans%2);\r\n}\r\n \r\n \r\n \r\nint main()\r\n{\r\n    int N;\r\n    int_i(N);\r\n \r\n    \r\n    loop(0, N, 1) solve();\r\n    \r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include<limits.h>\r\n#include<string.h>\r\n#include <math.h>\r\n \r\n#define loop(first,  size, decrement) for(int i=first; i < size; i+= decrement)\r\n \r\n#define int_i(x) scanf(\"%i\", &x)\r\n#define int_o(x) printf(\"%i\\n\", x)\r\n \r\n#define long_i(x) scanf(\"%lld\", &x)\r\n#define long_o(x) printf(\"%lld \", x)\r\n\r\n \r\n#define s_i(x) scanf(\"%s\", x)\r\n#define s_o(x) printf(\"%s\\n\", x)\r\n \r\n#define MIN(a,b) (((a)<(b))?(a):(b))\r\n#define MAX(a,b) (((a)>(b))?(a):(b))\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n    int size;\r\n    int_i(size);\r\n    \r\n    int arry[size];\r\n    \r\n    int ans = 0 ;\r\n    int n;\r\n    \r\n    int INT[10001];\r\n    loop(0,10001, 1) INT[i] = 0;\r\n    \r\n    \r\n    \r\n    loop(0,size, 1)\r\n    {\r\n        int_i(n);\r\n        \r\n        if (INT[n] == 0) INT[n]++;\r\n        \r\n    }\r\n   \r\n    loop(0,10001, 1) ans +=  (INT[i]==0)? 0: 1;\r\n   \r\n   \r\n   int_o(ans-( (size%2== ans%2)? 0:1) );\r\n}\r\n \r\n \r\n \r\nint main()\r\n{\r\n    int N;\r\n    int_i(N);\r\n \r\n    \r\n    loop(0, N, 1) solve();\r\n    \r\n}\r\n"}
{"similarity_score": 0.9203539823008849, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "991d93db2e93e8fc521c4e368f92502d", "bug_code_uid": "6d1dfe942c8ad7464859b124ac44b178", "src_uid": "905df05453a12008fc9247ff4d02e7f0", "apr_id": "349fb7ff83822e4ae446b458d937eb86", "difficulty": 1700, "tags": ["data structures", "binary search", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N\t200000\n\nint dsu[N], rr[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));\n}\n\nvoid join(int i, int j) {\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\tdsu[i] = j;\n\telse {\n\t\tif (dsu[i] == dsu[j])\n\t\t\tdsu[i]--;\n\t\trr[i] = rr[j];\n\t\tdsu[j] = i;\n\t}\n}\n\nint main() {\n\tstatic int aa[N], kk[N];\n\tint n, i, a;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a);\n\t\tkk[a]++;\n\t}\n\tmemset(dsu, -1, sizeof dsu);\n\tfor (i = 0; i < n; i++)\n\t\trr[i] = i;\n\tfor (i = 0; i < n; i++) {\n\t\ta = n - aa[i];\n\t\tif (a == n || (kk[a] == 0 && (a = rr[find(a)] + 1) == n))\n\t\t\ta = kk[0] ? 0 : rr[find(0)] + 1;\n\t\tprintf(\"%d \", (a + aa[i]) % n);\n\t\tif (--kk[a] == 0) {\n\t\t\tif (a - 1 >= 0 && kk[a - 1] == 0)\n\t\t\t\tjoin(a - 1, a);\n\t\t\tif (a + 1 < n && kk[a + 1] == 0)\n\t\t\t\tjoin(a, a + 1);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define N\t200000\n\nint dsu[N], rr[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));\n}\n\nvoid join(int i, int j) {\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\tdsu[i] = j;\n\telse {\n\t\tif (dsu[i] == dsu[j])\n\t\t\tdsu[i]--;\n\t\trr[i] = rr[j];\n\t\tdsu[j] = i;\n\t}\n}\n\nint main() {\n\tstatic int aa[N], kk[N];\n\tint n, i, a;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a);\n\t\tkk[a]++;\n\t}\n\tmemset(dsu, -1, sizeof dsu);\n\tfor (i = 0; i < n; i++)\n\t\trr[i] = i;\n\tfor (a = 0; a < n; a++)\n\t\tif (kk[a] == 0) {\n\t\t\tif (a - 1 >= 0 && kk[a - 1] == 0)\n\t\t\t\tjoin(a - 1, a);\n\t\t\tif (a + 1 < n && kk[a + 1] == 0)\n\t\t\t\tjoin(a, a + 1);\n\t\t}\n\tfor (i = 0; i < n; i++) {\n\t\ta = n - aa[i];\n\t\tif (a == n || (kk[a] == 0 && (a = rr[find(a)] + 1) == n))\n\t\t\ta = kk[0] ? 0 : rr[find(0)] + 1;\n\t\tprintf(\"%d \", (a + aa[i]) % n);\n\t\tif (--kk[a] == 0) {\n\t\t\tif (a - 1 >= 0 && kk[a - 1] == 0)\n\t\t\t\tjoin(a - 1, a);\n\t\t\tif (a + 1 < n && kk[a + 1] == 0)\n\t\t\t\tjoin(a, a + 1);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.4603421461897356, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "0181abe7e80abb8ce8b4fff7dacccbfb", "bug_code_uid": "eefecab9969a7e7960f9738f691671b4", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "01996967247f3350dd937d66c7dca6fc", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n\n\nint contar_cadena(){\n\t\n\tint cont1  = 0;\n\tchar c = getchar();\n\tint cont = c - '0';\n\tint i;\n\t\n\tfor(i = 0; i < cont; i++){\n\t\tc = getchar();\n\t\tcont1 += c - '0';\n\t}\n\tint cont0 = cont - cont1;\n\t\n\treturn abs(cont0 - cont1);\n}\n\t\nint main(void){\n\tcontar_cadena();\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\n\n\nint contar_cadena(){\n\t\n\tint cont1  = 0;\n\tint c;\n\tchar arr[200001];\n\tscanf(\"%d\", &c);\n\tscanf(\"%s\", arr);\n\tint i;\n\t\n\tfor(i = 0; i < c; i++){\n\t\tif(arr[i] == '1')\n\t\t\tcont1++;\n\t}\n\tint cont0 = c - cont1;\n\t\n\treturn abs(cont0 - cont1);\n}\n\t\nint main(void){\n\tprintf(\"%d\\n\", contar_cadena());\n\treturn 0;\n}\n"}
{"similarity_score": 0.2723794950267789, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "9e0598ab2af65abef9f93aa5a4221518", "bug_code_uid": "6e1064e33f0452125861f14aab6fe72e", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "a699d80432812ee1697d9cf5d84e4dab", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic char cc[9][10];\n\t\tint i, j;\n\n\t\tfor (i = 0; i < 9; i++)\n\t\t\tfor (j = 0; j < 9; j++)\n\t\t\t\tscanf(\"%s\", cc[i][j]);\n\t\tcc[0][0] = (cc[0][0] - '0' + 1) % 10 + '0';\n\t\tcc[1][3] = (cc[1][3] - '0' + 1) % 10 + '0';\n\t\tcc[2][6] = (cc[2][6] - '0' + 1) % 10 + '0';\n\t\tcc[3][1] = (cc[3][1] - '0' + 1) % 10 + '0';\n\t\tcc[4][4] = (cc[4][4] - '0' + 1) % 10 + '0';\n\t\tcc[5][7] = (cc[5][7] - '0' + 1) % 10 + '0';\n\t\tcc[6][2] = (cc[6][2] - '0' + 1) % 10 + '0';\n\t\tcc[7][5] = (cc[7][5] - '0' + 1) % 10 + '0';\n\t\tcc[8][8] = (cc[8][8] - '0' + 1) % 10 + '0';\n\t\tfor (i = 0; i < 9; i++)\n\t\t\tprintf(\"%s\\n\", cc[i]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic char cc[9][10];\n\t\tint i;\n\n\t\tfor (i = 0; i < 9; i++)\n\t\t\tscanf(\"%s\", cc[i]);\n\t\tcc[0][0] = (cc[0][0] - '1' + 1) % 9 + '1';\n\t\tcc[1][3] = (cc[1][3] - '1' + 1) % 9 + '1';\n\t\tcc[2][6] = (cc[2][6] - '1' + 1) % 9 + '1';\n\t\tcc[3][1] = (cc[3][1] - '1' + 1) % 9 + '1';\n\t\tcc[4][4] = (cc[4][4] - '1' + 1) % 9 + '1';\n\t\tcc[5][7] = (cc[5][7] - '1' + 1) % 9 + '1';\n\t\tcc[6][2] = (cc[6][2] - '1' + 1) % 9 + '1';\n\t\tcc[7][5] = (cc[7][5] - '1' + 1) % 9 + '1';\n\t\tcc[8][8] = (cc[8][8] - '1' + 1) % 9 + '1';\n\t\tfor (i = 0; i < 9; i++)\n\t\t\tprintf(\"%s\\n\", cc[i]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.22610015174506828, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "f9a7b11b3f89ed449369b6d42a977050", "bug_code_uid": "0e4b981ce6d2bbbaa31a8e0b54fa08f1", "src_uid": "4ca13794471831953f2737ca9d4ba853", "apr_id": "64bfc8c9fdde90bd9e951360d7fcdab4", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\n\nint solve() {\n\tint n,m,r,c,i,j,cnt;\n\tchar** matrix;\n\tscanf(\"%d %d %d %d\", &n, &m, &r, &c);\n\n\tmatrix = malloc(n*sizeof(char*));\n\tcnt=0;\n\tfor(i=0;i<n;i++) {\n\t\tmatrix[i] = malloc(m*sizeof(char));\n\t\tscanf(\"%s\\n\", matrix[i]);\n\t}\n\tif(matrix[r-1][c-1] == 'B') {\n\t\tfree(matrix);\n\t\treturn 0;\n\t}\n\tfor(i=0;i<n;i++)\n\t\tif(matrix[i][c-1] == 'B') {\n\t\t\tfree(matrix);\n\t\t\treturn 1;\n\t\t}\n\tfor(i=0;i<m;i++)\n\t\tif(matrix[r-1][i] == 'B') {\n\t\t\tfree(matrix);\n\t\t\treturn 1;\n\t\t}\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<m;j++)\n\t\t\tif(matrix[i][j] == 'W')\n\t\t\t\tcnt++;\n\tif(cnt == n*m) {\n\t\tfree(matrix);\n\t\treturn -1;\n\t}\n\treturn 2;\n}\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) printf(\"%d\\n\", solve());\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nchar matrix[50][50];\n\nint solve() {\n\tint i,j,cnt,n,m,r,c;\n\tscanf(\"%d %d %d %d\", &n, &m, &r, &c);\n\tcnt=0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%s\", matrix[i]);\n\tif(matrix[r-1][c-1] == 'B') return 0;\n\tfor(i=0;i<n;i++)\n\t\tif(matrix[i][c-1] == 'B') return 1;\n\tfor(i=0;i<m;i++)\n\t\tif(matrix[r-1][i] == 'B') return 1;\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<m;j++)\n\t\t\tif(matrix[i][j] == 'W')\n\t\t\t\tcnt++;\n\tif(cnt == n*m) return -1;\n\treturn 2;\n}\n\nvoid helper() {\n\tprintf(\"%d\\n\", solve());\n\treturn;\n}\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t\thelper();\n\treturn 0;\n}\n"}
{"similarity_score": 0.9949820788530466, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "80ef837bf9c97e0cd96b10c1147a4f92", "bug_code_uid": "e65cbf25a2d89479bf19ae29554353e4", "src_uid": "37cf6edce77238db53d9658bc92b2cab", "apr_id": "d17c0037c40ac4c0a4e05a5f0b874800", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,p1[101],p2[101];\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n+1;++i)\n    scanf(\"%d\",&p1[i]);\n    for(i=0;i<m+1;++i)\n    scanf(\"%d\",&p2[i]);\n    if(n>m)\n    {\n        if(p1[0]*p2[0]>0)\n        printf(\"Infinity\");\n        else printf(\"-Infinity\");\n    }\n    else if(n<m)\n    printf(\"0/1\");\n    else\n    {\n        int p,q;\n        p=(p1[0]>0?p1[0]:-p1[0]);\n        q=(p2[0]>0?p2[0]:-p2[0]);\n        for(i=2;i<=p&&i<=q;++i)\n        {\n            if(p%i==0&&q%i==0)\n            {\n                p/=i;\n                q/=i;\n            }\n        }\n        if(p1[0]*p2[0]<0)\n        printf(\"-%d/%d\",p,q);\n        else printf(\"%d/%d\",p,q);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,p1[101],p2[101];\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n+1;++i)\n    scanf(\"%d\",&p1[i]);\n    for(i=0;i<m+1;++i)\n    scanf(\"%d\",&p2[i]);\n    if(n>m)\n    {\n        if(p1[0]*p2[0]>0)\n        printf(\"Infinity\");\n        else printf(\"-Infinity\");\n    }\n    else if(n<m)\n    printf(\"0/1\");\n    else\n    {\n        int p,q;\n        p=(p1[0]>0?p1[0]:-p1[0]);\n        q=(p2[0]>0?p2[0]:-p2[0]);\n        for(i=2;i<=p&&i<=q;++i)\n        {\n            while(p%i==0&&q%i==0)\n            {\n                p/=i;\n                q/=i;\n            }\n        }\n        if(p1[0]*p2[0]<0)\n        printf(\"-%d/%d\",p,q);\n        else printf(\"%d/%d\",p,q);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6297376093294461, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "bba33dee44b8cf9af511fce38fa996dd", "bug_code_uid": "48b7c31d2c9f7c01982e37de57e9169b", "src_uid": "f9f803c6850da1838d62a0cf85bb13f2", "apr_id": "35067e79211206f2cbd285739704eb36", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    for(int i=0;i<n;i++)\r\n    cout<<n-3<<1<<1<<1;\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,j;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&j);\r\n        printf(\"%d %d %d %d\\n\",j-3,1,1,1);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8556499020248204, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "52892b82091ed8582d0b100318cc9380", "bug_code_uid": "95a796b49c6403cf83cf2fce241e1147", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "273f1770b7f6cb47968987ddd6c7a5ed", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* DHUOJ solution #373701 @ 2019-01-13 09:23:12.320 */\n\n#include<stdio.h>\n#include<string.h>\nusing namespace std;\nchar s[100005];\n\nint main(){\n    while(scanf(\"%s\",s)!=EOF){\n        int tmp,len=strlen(s);\n        long long l=0,r=0;\n        for(int i=0;i<len;i++){\n            if(s[i]=='^'){\n                tmp=i;\n                break;\n            }\n        }\n        for(int i=tmp-1;i>=0;i--){\n            if(s[i]!='=')\n                l+=(s[i]-'0')*(tmp-i);\n        }\n        for(int i=tmp+1;i<len;i++){\n            if(s[i]!='=')\n                r+=(s[i]-'0')*(i-tmp);\n        }\n        if(l>r){\n            printf(\"left\\n\");\n        }else if(r>l){\n            printf(\"right\\n\");\n        }else{\n            printf(\"balance\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "/* DHUOJ solution #373750 @ 2019-01-13 10:33:38.168 */\n\n#include<stdio.h>\n#include<string.h>\nchar s[1000005];\nint main(){\n    while(scanf(\"%s\",s)!=EOF){\n        long long i,tmp,len,l=0,r=0;\n        for(i=0;;i++){\n            if(s[i]=='^'){\n                tmp=i;\n            }\n            if(s[i]=='\\0'){\n                len=i;\n                break;\n            }\n        }\n        for(i=tmp-1;i>=0;i--){\n            if(s[i]!='=')\n                l+=(s[i]-'0')*(tmp-i);\n        }\n        for(i=tmp+1;i<len;i++){\n            if(s[i]!='=')\n                r+=(s[i]-'0')*(i-tmp);\n        }\n        if(l>r){\n            printf(\"left\\n\");\n        }else if(r>l){\n            printf(\"right\\n\");\n        }else{\n            printf(\"balance\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6036161335187761, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "abe0aa253277f0fb44f34567fbe027c9", "bug_code_uid": "57753cbb54b1cc337efbde768d6c8cec", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "f3e253554442e4881504257f03ffffdb", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint judge(int n,int* b);\nint main()\n{\n\tint i,n,a[999];\n\tscanf(\"%d\",&n);\n\tjudge(n,a);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==1) printf(\"O\");\n\t\telse printf(\"o\");\n\t} \n} \nint judge(int n,int* b)\n{\n\tint z,c[499];\n\tc[0]=1;\n\tc[1]=1;\n\t*b=1;\n\tfor(int m=2;m<n;m++)\n\t{\n\t\tc[m]=c[m-1]+c[m-2];\n\t\tz=c[m]-1;\n\t\t*(b+z)=1;\n\t}\n}\n", "fixed": "#include<stdio.h> \nint judge(int n,int* b); \nint main() \n{ \t\n\tint i,n,a[1999]={1,1,1}; \t\n\tscanf(\"%d\",&n); \t\n\tjudge(n,a); \t\n\tfor(i=0;i<n;i++) \t\n\t{ \t\t\n\t\tif(a[i]==1) \n\t\tprintf(\"O\"); \t\t\n\t\telse if(a[i]==0) \n\t\tprintf(\"o\"); \t\n\t} \n} \nint judge(int n,int* b) \n{ \t\n\tint z=0,c[999]; \t\n\tc[0]=1; \t\n\tc[1]=1; \t\n\tfor(int m=2;(m<n)&&(z<1000);m++) \t\n\t{ \t\t\n\t\tc[m]=c[m-1]+c[m-2]; \t\t\n\t  z=c[m]-1; \t\t\n\t  *(b+z)=1; \t\n\t }\n}"}
{"similarity_score": 0.9813278008298755, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "0dfdae094da22b3049b357a006aafb0b", "bug_code_uid": "b4cfc3eeec9e8cf1b79f2b95f32e8703", "src_uid": "0b229ddf583949d43d6f1728e38c3cad", "apr_id": "414d7e216a194b3d59ba4bad207fb2de", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,x,i,c=1,a,s=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&x);\n    for(i=1;i<n;i++)\n    {\n       //  printf(\"x=%d\\ta=%d\\ts=%d\\n\",x,a,s);\n        scanf(\"%d\",&a);\n       // printf(\"x=%d\\t,a=%d\\t,s=%d\\n\",x,a,s);\n        if(x==a)\n            c++;\n        else\n        {\n            s=s+c*(c-1)/2;\n            c=1;\n            x=a;\n        }\n\n    }\n    if(c!=1)\n        s=s+c*(c-1)/2;\n    printf(\"%d\",n+s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n,x,i,c=1,a,s=0;\n    scanf(\"%lld\",&n);\n    scanf(\"%lld\",&x);\n    for(i=1;i<n;i++)\n    {\n       //  printf(\"x=%d\\ta=%d\\ts=%d\\n\",x,a,s);\n        scanf(\"%lld\",&a);\n       // printf(\"x=%d\\t,a=%d\\t,s=%d\\n\",x,a,s);\n        if(x==a)\n            c++;\n        else\n        {\n            s=s+c*(c-1)/2;\n            c=1;\n            x=a;\n        }\n\n    }\n    if(c!=1)\n        s=s+c*(c-1)/2;\n    printf(\"%lld\",n+s);\n    return 0;\n}\n"}
{"similarity_score": 0.9911504424778761, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7a1646f0c88cdd5589b62e3672f8102d", "bug_code_uid": "7ea31e3a39f86c9b019d59a433061dcc", "src_uid": "0515ac888937a4dda30cad5e2383164f", "apr_id": "53c47814d93ffaa604d04e5e9ddbcb12", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ int n,k,t;\n  char s[200000];\n\tscanf(\"%d%d\",&n,&k);\n\tscanf(\"%s\",s);\n\tif(k==0) printf(\"%s\",s); else {\tif(n==1) printf(\"0\"); else {\n\t\tt=1; if(s[0]!='1') {s[0]='1'; k--;} \n\t\twhile(k!=0) { if(s[t]!='0') {s[t]='0'; k--;}; t++;} printf(\"%s\",s);}\n\t\t\n\t\t}\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{ int n,k,t;\n  char s[200000];\n\tscanf(\"%d%d\",&n,&k);\n\tscanf(\"%s\",s);\n\tif(k==0) printf(\"%s\",s); else {\tif(n==1) printf(\"0\"); else {\n\t\tt=1; if(s[0]!='1') {s[0]='1'; k--;} \n\t\twhile(k!=0&&t<n) { if(s[t]!='0') {s[t]='0'; k--;}; t++;} printf(\"%s\",s);}\n\t\t\n\t\t}\n}\n\n"}
{"similarity_score": 0.8550295857988166, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7bff7e0361951125bac9abbafb504a34", "bug_code_uid": "a1e7d5fdd2fb1b59428d5cb1a6c0d722", "src_uid": "4ebea3f56ffd43efc9e1496a0ef7fa2d", "apr_id": "5f87b614eb91498621216feffc0b3c85", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\nint main()\n{\n    int a,i,b;\n  scanf(\"%d\", &a);\n  if (a % 2==0) \n  {\n      b=1;\n      for (i=1; i<a/2; i++)\n        {\n            b=b*10+1;\n        }\n  }\n  if (a % 2==1) \n  {\n      b=7;\n      for (i=1; i<(a-1)/2; i++)\n        {\n            b=b*10+1;\n        }\n  }\n  printf(\"%d\", b);\n}", "fixed": "#include <math.h>\n#include <stdio.h>\nint main()\n{\n    int a,i,b;\n  scanf(\"%d\", &a);\n  if (a % 2==0) \n  {\n      b=1;\n      for (i=1; i<=a/2; i++)\n        {\n            printf(\"%d\", b);\n        }\n  }\n  if (a % 2==1) \n  {\n      b=7;\n      printf(\"%d\", b);\n      for (i=1; i<(a-1)/2; i++)\n        {\n            b=1;\n            printf(\"%d\", b);\n        }\n  }\n}"}
{"similarity_score": 0.9828054298642533, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "63e164b5debf88d35a6ce4dd76400763", "bug_code_uid": "3be90902665878c0f6c4cd15470b0e49", "src_uid": "807c5ec37b0ea83ef40550698f1ff498", "apr_id": "33d48b032356a49c6bc51debd18cf426", "difficulty": 900, "tags": ["dp", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "//#include<stdio.h>\r\n//#include<string.h>\r\n//#include<stdlib.h>\r\n//int cake[1000003];\r\n//int butter[1000003]; \r\n//int main()\r\n//{\r\n//\tint N,t;\r\n//\tscanf(\"%d\",&t);\r\n//\twhile(t>0)\r\n//\t{\r\n//\t\tt--;\r\n//\t\tmemset(cake,0,sizeof(int)*1000003);\r\n//\t\tscanf(\"%d\",&N);\r\n//\t\tfor(int x=1;x<=N;x++)\tscanf(\"%d\",&butter[x]);\r\n//\t\tfor(int x=1;x<=N;x++)\r\n//\t\t{\r\n//\t\t\tif(butter[x])\r\n//\t\t\t{\r\n//\t\t\t\tfor(int y=x-butter[x]+1;y<=x;y++)\r\n//\t\t\t\t{\r\n//\t\t\t\t\tcake[y]=1;\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n//\t\tfor(int x=1;x<=N;x++)\r\n//\t\t{\r\n//\t\t\tprintf(\"%d \",cake[x]);\r\n//\t\t}\r\n//\t}\r\n//\treturn 0;\r\n//}\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\nint cream[200004];\r\nint cake[200004];\r\n\r\nint main()\r\n{\r\n\tint T;\r\n\tint n,i,min;\r\n\tscanf(\"%d\",&T);\r\n\twhile(T>0)\r\n\t{\r\n\t\tT--;\r\n\t\tmemset(cake,0,sizeof(int)*200004);\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int x=1;x<=n;x++)\tscanf(\"%d\",&cream[x]);\r\n\t\tcake[n]=cream[n];\r\n\t\tfor(int x=n-1;x>0;x--)\r\n\t\t{\r\n\t\t\tif(cream[x]>cake[x+1]-1)\r\n\t\t\t{\r\n\t\t\t\tcake[x]=cream[x];\r\n\t\t\t}\r\n\t\t\telse\tcake[x]=cake[x+1]-1;\r\n\t\t}\r\n\t\tfor(int x=1;x<=n;x++)\r\n\t\t{\r\n\t\t\tif(cake[x]>0)\tprintf(\"1 \");\r\n\t\t\telse printf(\"0 \");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "//#include<stdio.h>\r\n//#include<string.h>\r\n//#include<stdlib.h>\r\n//int cake[1000003];\r\n//int butter[1000003]; \r\n//int main()\r\n//{\r\n//\tint N,t;\r\n//\tscanf(\"%d\",&t);\r\n//\twhile(t>0)\r\n//\t{\r\n//\t\tt--;\r\n//\t\tmemset(cake,0,sizeof(int)*1000003);\r\n//\t\tscanf(\"%d\",&N);\r\n//\t\tfor(int x=1;x<=N;x++)\tscanf(\"%d\",&butter[x]);\r\n//\t\tfor(int x=1;x<=N;x++)\r\n//\t\t{\r\n//\t\t\tif(butter[x])\r\n//\t\t\t{\r\n//\t\t\t\tfor(int y=x-butter[x]+1;y<=x;y++)\r\n//\t\t\t\t{\r\n//\t\t\t\t\tcake[y]=1;\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n//\t\tfor(int x=1;x<=N;x++)\r\n//\t\t{\r\n//\t\t\tprintf(\"%d \",cake[x]);\r\n//\t\t}\r\n//\t}\r\n//\treturn 0;\r\n//}\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\nint cream[200004];\r\nint cake[200004];\r\n\r\nint main()\r\n{\r\n\tint T;\r\n\tint n,i,min;\r\n\tscanf(\"%d\",&T);\r\n\twhile(T>0)\r\n\t{\r\n\t\tT--;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int x=1;x<=n;x++)\tscanf(\"%d\",&cream[x]);\r\n\t\tcake[n]=cream[n];\r\n\t\tfor(int x=n-1;x>0;x--)\r\n\t\t{\r\n\t\t\tif(cream[x]>cake[x+1]-1)\r\n\t\t\t{\r\n\t\t\t\tcake[x]=cream[x];\r\n\t\t\t}\r\n\t\t\telse\tcake[x]=cake[x+1]-1;\r\n\t\t}\r\n\t\tfor(int x=1;x<=n;x++)\r\n\t\t{\r\n\t\t\tif(cake[x]>0)\tprintf(\"1 \");\r\n\t\t\telse printf(\"0 \");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9976415094339622, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1e56983f5162203513944a18dfd15c86", "bug_code_uid": "98020cccc8a82b87ef744779c470c584", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "0f1b0c2dabda0ff5909657299f7dcf7a", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n\n\nint main()\n{\n\n    int t;\n   scanf(\"%d\",&t);\n    while(t--)\n    {\n       int n;\n       scanf(\"%d\",&n);\n\n        if(n==1 || n==2)\n        {\n          printf(\"0\\n\");\n        }\n        else\n        {\n            if(n%2==0)\n            {\n              printf(\"%d\\n\",(n/2)-1);\n            }\n            else\n            {\n                  printf(\"%d\\n\",(n/2)-1);\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\n\n\nint main()\n{\n\n    int t;\n   scanf(\"%d\",&t);\n    while(t--)\n    {\n       int n;\n       scanf(\"%d\",&n);\n\n        if(n==1 || n==2)\n        {\n          printf(\"0\\n\");\n        }\n        else\n        {\n            if(n%2==0)\n            {\n              printf(\"%d\\n\",(n/2)-1);\n            }\n            else\n            {\n                  printf(\"%d\\n\",(n/2));\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9972826086956522, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e86518a10086d32f353c160eb9e24f56", "bug_code_uid": "b45a0753da7d8887961a5a7444d93ac8", "src_uid": "6bb26991c9ea70e51a6bda5653de8131", "apr_id": "4cd94a525b525ed09ab43f08d0f082e0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    \n    int a,t,b,l,s=0,i,c=0;\n    scanf(\"%d%d\",&n,&l);\n    for(i=0; i<t; i++)\n    {\n        c=0;\n        scanf(\"%d\",&a);\n        while(a!=0)\n        {\n            b = a%10;\n            a = a/10;\n            if(b==4 || b==7)c++;\n        }\n        if(c<=l)\n        {\n            s++;\n        }\n    }\n    printf(\"%d\\n\",s);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    \n    int a,t,b,l,s=0,i,c=0;\n    scanf(\"%d%d\",&t,&l);\n    for(i=0; i<t; i++)\n    {\n        c=0;\n        scanf(\"%d\",&a);\n        while(a!=0)\n        {\n            b = a%10;\n            a = a/10;\n            if(b==4 || b==7)c++;\n        }\n        if(c<=l)\n        {\n            s++;\n        }\n    }\n    printf(\"%d\\n\",s);\n    return 0;\n}"}
{"similarity_score": 0.993006993006993, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2e22b494370b00cfaa1831682e72c676", "bug_code_uid": "d787896f8ecfcf831a8e401479d400ef", "src_uid": "eb7457fe1e1b571e5ee8dd9689c7d66a", "apr_id": "26a689fba2b8bbb5d2fb2b01f6d48fc8", "difficulty": 1300, "tags": ["combinatorics", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,a,c,b,grid[5000];\n\tc=0;\n\tscanf(\"%d\",&n);\n\twhile(n)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tc=c+grid[a+b]+grid[5000+a-b];\n\t\tgrid[a+b]++;\n\t\tgrid[5000+a-b]++;\n\t\tn--;\n\t}\n\tprintf(\"%d\",c);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,a,c,b,grid[10000];\n\tc=0;\n\tscanf(\"%d\",&n);\n\twhile(n)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tc=c+grid[a+b]+grid[5000+a-b];\n\t\tgrid[a+b]++;\n\t\tgrid[5000+a-b]++;\n\t\tn--;\n\t}\n\tprintf(\"%d\",c);\n}\n"}
{"similarity_score": 0.9818731117824774, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c15492799c35b8cae73db15c4bbdfc60", "bug_code_uid": "972b5899e1fdfa3a95cf900483752d8c", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "3e7f98a9c24e154fb51a946d6351e2e9", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n\nint main()\n{\n    int n, n1, n2;\n    int A[100000];\n    double Ans = 0;\n    scanf(\"%d %d %d\", &n, &n1, &n2);\n    for(int i = 0; i < n; ++i) {\n        scanf(\"%d\", &A[i]);\n    }\n    qsort(A, n, sizeof(int), cmp);\n    if(n1 > n2) {\n        int temp = n1;\n        n1 = n2;\n        n2 = temp;\n    }\n    double sum;\n    sum = 0;\n    for(int i = 0; i < n1; ++i) {\n        sum += A[i];\n    }\n    Ans = sum / n1;\n    sum = 0;\n    for(int i = 0; i < n2; ++i) {\n        sum += A[n1 + i];\n    }\n    Ans += sum / n2;\n    printf(\"%lf\\n\", Ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b)\n{\n    return *(int *)b - *(int *)a;\n}\n\nint main()\n{\n    int n, n1, n2;\n    int A[100000];\n    double Ans = 0;\n    scanf(\"%d %d %d\", &n, &n1, &n2);\n    for(int i = 0; i < n; ++i) {\n        scanf(\"%d\", &A[i]);\n    }\n    qsort(A, n, sizeof(int), cmp);\n    if(n1 > n2) {\n        int temp = n1;\n        n1 = n2;\n        n2 = temp;\n    }\n    double sum;\n    sum = 0;\n    for(int i = 0; i < n1; ++i) {\n        sum += A[i];\n    }\n    Ans = sum / n1;\n    sum = 0;\n    for(int i = 0; i < n2; ++i) {\n        sum += A[n1 + i];\n    }\n    Ans += sum / n2;\n    printf(\"%lf\\n\", Ans);\n    return 0;\n}\n"}
{"similarity_score": 0.8004484304932735, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4a3c5b69c20c05885085d046e67eacde", "bug_code_uid": "4de52c3e8c768ddf54d4bf573adbc88d", "src_uid": "6ea491419f3ea387cf2aded8a8db914d", "apr_id": "90e7a4f46f6951224c5893d0b4aecdd9", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid swap(int *a,int*b)\r\n{\r\n    *a^=*b^=*a^=*b;\r\n}\r\nint cnt;\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       int n,a,b,coto[100]={0},boro[100]={0},i,m;\r\n       scanf(\"%d%d%d\",&n,&a,&b);\r\n       for(i=1;i<=(n/2);i++)boro[i-1]=i;\r\n       for(i=(n/2)+1;i<=n;i++)\r\n           coto[cnt++]=i;\r\n       if((a<=n/2&&b<=n/2)||(a>n/2&&b>n/2))printf(\"-1\\n\");\r\n       else if(a==((n/2)+1)&&b==(n/2)){\r\n        for(i=0;i<n/2;i++)printf(\"%d \",coto[i]);\r\n        for(i=0;i<n/2;i++)printf(\"%d \",boro[i]);\r\n        printf(\"\\n\");\r\n       }\r\n       else {\r\n        m=coto[b-(n/2)-1];\r\n        coto[b-(n/2)-1]=boro[a-1];\r\n        boro[a-1]=m;\r\n        \r\n        for(i=0;i<n/2;i++)printf(\"%d \",coto[i]);\r\n        for(i=0;i<n/2;i++)printf(\"%d \",boro[i]);\r\n        printf(\"\\n\");\r\n       }\r\n       cnt=0;\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nvoid swap(int *a,int*b)\r\n{\r\n    *a^=*b^=*a^=*b;\r\n}\r\nint cnt;\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       int n,a,b,coto[100]={0},boro[100]={0},i,m;\r\n       scanf(\"%d%d%d\",&n,&a,&b);\r\n       for(i=1;i<=(n/2);i++)boro[i-1]=i;\r\n       for(i=(n/2)+1;i<=n;i++)\r\n           coto[cnt++]=i;\r\n       if((a<=n/2&&b<=n/2)||(a>n/2&&b>n/2))printf(\"-1\\n\");\r\n       else if((a>n/2&&a!=(n/2)+1)||(b<=(n/2)&&b!=n/2))printf(\"-1\\n\");\r\n       else if(a==((n/2)+1)&&b==(n/2)){\r\n        for(i=0;i<n/2;i++)printf(\"%d \",coto[i]);\r\n        for(i=0;i<n/2;i++)printf(\"%d \",boro[i]);\r\n        printf(\"\\n\");\r\n       }\r\n       else {\r\n        m=coto[b-(n/2)-1];\r\n        coto[b-(n/2)-1]=boro[a-1];\r\n        boro[a-1]=m;\r\n        \r\n        for(i=0;i<n/2;i++)printf(\"%d \",coto[i]);\r\n        for(i=0;i<n/2;i++)printf(\"%d \",boro[i]);\r\n        printf(\"\\n\");\r\n       }\r\n       cnt=0;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6126482213438735, "equal_cnt": 19, "replace_cnt": 6, "delete_cnt": 10, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "8e9201d3b1a02d6f33f4bd34c2f7ebe8", "bug_code_uid": "22c8ba0497109c67a821e0d21757a02d", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "56f404ce82ef26bac3fd2cb69b0bfbe2", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,c=4,i;\n    scanf(\"%d\",&n);\n    for(i=2;i<n;i++)\n    {\n        if(i!=c && i!=n-c)\n        if(c%i==0 && (n-c)%i==0)\n        {\n            printf(\"%d %d\",c,n-c);\n            return 0;\n        }\n        if(i==n-1)\n        {\n            c++;\n            i=2;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int c=4;\n    if(n%2==0)\n        printf(\"%d %d\",c,n-c);\n    else\n        printf(\"%d %d\",9,n-9);\n    return 0;\n}\n"}
{"similarity_score": 0.19047619047619047, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6d6534146520b030cfab145a891c498a", "bug_code_uid": "c3e6c2f9b176c0e161c21c8a0ad873d7", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "d64ec2af149eed346f87e4b8419206ce", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#define size 100000\nmain()\n{\n\tint n,i,pos,min=200000,flag=0;\n\tscanf(\"%d\",&n);\n\tint a[size];\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]<min)\n\t\t{\n\t\t  min=a[i];\n\t\t  pos=i;\n\t    }\n\t}\nfor(i=pos+1;i<n;++i)\n{\n\tif(a[i]<a[i-1])\n\t{\n\t\tflag=1;\n\t\tbreak;\n\t}\n}\nfor(i=pos-1;i>0;--i)\n{\n\tif(a[i-1]>a[i])\n\t{\n\t\tflag=1;\n\t\tbreak;\n\t}\n}\nif(flag==1)\n{\n\tprintf(\"-1\");\n}\nelse\n{\n\tif(pos==0)\n\t{\n\t\tprintf(\"0\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",n-pos);\n\t}\n}\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define size 100000\nmain()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint a[size];\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\nfor(i=0;i<n-1;++i)\n{\n\tif(a[i]>a[i+1])\n\t  break;\n}\nj=i+1;\nfor(i=i+1;i<n-1;++i)\n{\n\tif(a[i]>a[i+1])\n\t  break;\n}\nif(j==n || ((i==n-1) && (a[0]>=a[n-1])))\n{\n\tprintf(\"%d\",n-j);\n}\nelse\n{\n\tprintf(\"-1\");\n}\n}"}
{"similarity_score": 0.46476761619190404, "equal_cnt": 7, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "b22b9ef4cbdcd4c648dc96af610f6a0f", "bug_code_uid": "ee8a0f60ef3a2ae475c3be8c3a07a767", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "4078addc84559ee0ab4ee5382930a89b", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long n, i, sum = 0;\n    scanf(\"%ld\", &n);\n    char s[n];\n    scanf(\"%s\", &s);\n    int x = 0;\n    i = 1;\n    while(i < strlen(s)){\n        if ((s[x] != s[i]) && (i != 1)){\n            sum++; x--; i++;\n        }else if (s[x] != s[i]) {\n            sum++; x--; i += 2;\n        }else i++;\n    }\n    printf(\"%ld\\n\", n - sum * 2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long n, i, sum = 0;\n    scanf(\"%ld\", &n);\n    char s[n];\n    scanf(\"%s\", &s);\n    for (i = 0; i < n; i++)\n        if (s[i] == s[0]) sum++; else sum--;\n    printf(\"%ld\\n\", (sum < 0)?sum * -1:sum);\n    return 0;\n}\n"}
{"similarity_score": 0.8282025819265144, "equal_cnt": 16, "replace_cnt": 2, "delete_cnt": 7, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "212fbe502c83406b0a1efa2d883b1544", "bug_code_uid": "c74f6e5f70612351466a7ae70d956002", "src_uid": "bf573af345509b2364ada6e613b6f998", "apr_id": "a2893ed97d2e1a0f5b301cdd00ca8362", "difficulty": 1100, "tags": ["implementation", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void) {\n\tlong int n,val,pos_arr[100],neg_arr[100],cosp=-1,cosn=-1,sum=0,flag,i,temp;\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%ld %ld\",&temp,&val);\n\t\tif(temp>0) {\n\t\t\tpos_arr[++cosp]=val;\n\t\t}\n\t\telse {\n\t\t\tneg_arr[++cosn]=val;\n\t\t}\n\t}\n\tif(cosp>cosn) {\n\t\ttemp=cosn;\n\t\tflag=1;\n\t}\n\telse if(cosp<cosn){\n\t\ttemp=cosp;\n\t\tflag=0;\n\t}\n\telse {\n\t\ttemp=cosp;\n\t\tflag=2;\n\t}\n\t/*for(i=0;i<=cosp;i++) {\n\t\tprintf(\"%ld\\n\",pos_arr[i]);\n\t}\n\tfor(i=0;i<=cosp;i++) {\n\t\tprintf(\"%ldhii\\n\",neg_arr[i]);\n\t}*/\n\tif(flag==1) {\n\t\tfor(i=0;i<=temp;i++) {\n\t\t\tsum+=neg_arr[i];\n\t\t}\n\t\tfor(i=0;i<=(temp+1);i++) {\n\t\t\tsum+=pos_arr[i];\n\t\t}\n\t}\n\telse if(flag==0){\n\t\tfor(i=0;i<=(temp+1);i++) {\n\t\t\tsum+=neg_arr[i];\n\t\t}\n\t\tfor(i=0;i<=temp;i++) {\n\t\t\tsum+=pos_arr[i];\n\t\t}\n\t}\n\telse {\n\t\tfor(i=0;i<=temp;i++) {\n\t\t\tsum+=pos_arr[i];\n\t\t\tsum+=neg_arr[i];\n\t\t}\n\t} \n\tprintf(\"%ld\\n\",sum);\n\t//scanf(\"%ld\",&n);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void) {\n\tlong int n,j,val,pos_arr[100000],pos[100],neg[100],neg_arr[100000],cosp=-1,cosn=-1,sum=0,flag,i,temp;\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<100000;i++) {\n\t\tpos_arr[i]=neg_arr[i]=0;\n\t}\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%ld %ld\",&temp,&val);\n\t\tif(temp>0) {\n\t\t\tpos_arr[temp-1]=val;\n\t\t\tcosp++;\n\t\t}\n\t\telse {\n\t\t\tneg_arr[(abs(temp))-1]=val;\n\t\t\tcosn++;\n\t\t}\n\t}\n\tj=0;\n\tfor(i=0;i<100000;i++) {\n\t\tif(pos_arr[i]!=0) {\n\t\t\tpos[j++]=pos_arr[i];\n\t\t}\n\t}\n\tj=0;\n\tfor(i=0;i<100000;i++) {\n\t\tif(neg_arr[i]!=0) {\n\t\t\tneg[j++]=neg_arr[i];\n\t\t}\n\t}\n\tif(cosp>cosn) {\n\t\ttemp=cosn;\n\t\tflag=1;\n\t}\n\telse if(cosp<cosn){\n\t\ttemp=cosp;\n\t\tflag=0;\n\t}\n\telse {\n\t\ttemp=cosp;\n\t\tflag=2;\n\t}\n\t/*for(i=0;i<=cosp;i++) {\n\t\tprintf(\"%ld\\n\",pos_arr[i]);\n\t}\n\tfor(i=0;i<=cosp;i++) {\n\t\tprintf(\"%ldhii\\n\",neg_arr[i]);\n\t}*/\n\tif(flag==1) {\n\t\tfor(i=0;i<=temp;i++) {\n\t\t\tsum+=neg[i];\n\t\t}\n\t\tfor(i=0;i<=(temp+1);i++) {\n\t\t\tsum+=pos[i];\n\t\t}\n\t}\n\telse if(flag==0){\n\t\tfor(i=0;i<=(temp+1);i++) {\n\t\t\tsum+=neg[i];\n\t\t}\n\t\tfor(i=0;i<=temp;i++) {\n\t\t\tsum+=pos[i];\n\t\t}\n\t}\n\telse {\n\t\tfor(i=0;i<=temp;i++) {\n\t\t\tsum+=pos[i];\n\t\t\tsum+=neg[i];\n\t\t}\n\t} \n\tprintf(\"%ld\\n\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9859594383775351, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8d295f447799d0f91591579913d136d6", "bug_code_uid": "88d6c7cfe7c69e2ddff8c0aa35b5c508", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "b3802db6279e4416f51a50748ef18d85", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,r,c=0,sum=0;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ar[i]);\n        sum+=ar[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        c+=ar[i];\n        if(c>=sum/2)\n        {\n            printf(\"%d\",i+1);\n            break;\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,r,c=0,sum=0;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ar[i]);\n        sum+=ar[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        c+=ar[i];\n        if(c>=sum/2 +(sum%2))\n        {\n            printf(\"%d\",i+1);\n            break;\n        }\n    }\n}"}
{"similarity_score": 0.9550561797752809, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "eea2da538c923583e76d62919f214f19", "bug_code_uid": "7654a1412b0e5b7a23904739bd819827", "src_uid": "46d734178b3acaddf2ee3706f04d603d", "apr_id": "ffeb35ce81d7061b5c683d4734d68146", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[101];\n    char b[101];\n    char c[101];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    scanf(\"%s\",c);\n    int l1=strlen(a);\n    int l2=strlen(b);\n    int l3=strlen(c);\n    int i,d=0,e=0,f=0;\n    for(i=0;i<l1;i++)\n    {\n        if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')\n            d++;\n    }\n    for(i=0;i<l2;i++)\n    {\n        if(b[i]=='a'||b[i]=='e'||b[i]=='i'||b[i]=='o'||b[i]=='u')\n            e++;\n    }\n    for(i=0;i<l3;i++)\n    {\n        if(c[i]=='a'||c[i]=='e'||c[i]=='i'||c[i]=='o'||c[i]=='u')\n            f++;\n    }\n    if(d==5 && e==7 && f==5)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[101];\n    char b[101];\n    char c[101];\n    gets(a);\n    gets(b);\n    gets(c);\n    int l1=strlen(a);\n    int l2=strlen(b);\n    int l3=strlen(c);\n    int i,d=0,e=0,f=0;\n    for(i=0;i<l1;i++)\n    {\n        if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')\n            d++;\n    }\n    for(i=0;i<l2;i++)\n    {\n        if(b[i]=='a'||b[i]=='e'||b[i]=='i'||b[i]=='o'||b[i]=='u')\n            e++;\n    }\n    for(i=0;i<l3;i++)\n    {\n        if(c[i]=='a'||c[i]=='e'||c[i]=='i'||c[i]=='o'||c[i]=='u')\n            f++;\n    }\n    if(d==5 && e==7 && f==5)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9483037156704361, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "08e0731160f2fb06e4bfa45824dcc15b", "bug_code_uid": "679f66c455792f6bb790625fdced08a2", "src_uid": "e0ea798c8ce0d8a4340e0fa3399bcc3b", "apr_id": "27c584cac9982d9d3308b9b54fdad97c", "difficulty": 1600, "tags": ["data structures", "two pointers", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int temp[1000001]={0},arr[500001];\nint main()\n{\n    long int i,n,k,j,max=0,u,l,ck=0,length=0;\n    scanf(\"%ld%ld\",&n,&k);\n    for(i=1;i<=n;i++)\n        scanf(\"%ld\",&arr[i]);\n    for(i=1,j=1;j<=n;j++)\n    {\n        if(!temp[arr[j]])\n        {\n            ck++;\n            temp[arr[j]]++;\n        }\n        length++;\n        if(ck>k)\n        {\n            temp[arr[i]]--;\n            i++;\n            ck--;\n            length--;\n        }\n\n        if(length>max)\n        {\n            u=i;\n            l=j;\n            max=length;\n        }\n    }\n    printf(\"%ld %ld \\n\",u,l);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong int temp[1000001]={0},arr[500001];\nint main()\n{\n    long int i,n,k,j,max=0,u,l,ck=0,length=0;\n    scanf(\"%ld%ld\",&n,&k);\n    for(i=1;i<=n;i++)\n        scanf(\"%ld\",&arr[i]);\n    for(i=1,j=1;j<=n;j++)\n    {\n        if(!temp[arr[j]])\n            ck++;\n        temp[arr[j]]++;\n\n        length++;\n        if(ck>k)\n        {\n            temp[arr[i]]--;\n            if(!temp[arr[i]])\n               ck--;\n            i++;\n            length--;\n        }\n\n        if(length>max)\n        {\n            u=i;\n            l=j;\n            max=length;\n        }\n    }\n    printf(\"%ld %ld \\n\",u,l);\n    return 0;\n}\n"}
{"similarity_score": 0.9987484355444305, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "55fac85e9197fc75c5e3c5d1768bfa21", "bug_code_uid": "fccdf7fe7af825a5d01091821653e487", "src_uid": "f1ac6da78aed11d9118a85182c5644de", "apr_id": "d36cd6506917c9af2afb87eb6346a17e", "difficulty": 1300, "tags": ["bitmasks", "greedy", "dfs and similar", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int c,c1,l,x,y;\n    while(scanf(\"%d\",&c)==1)\n    {\n        c1=c*(c-1)/2-1;\n        int w[c1],ls[c1],ara[c],araw[c];\n        for(l=0;l<c;l++)\n        {\n            ara[l]=0,araw[l]=0;\n        }\n        for(l=0;l<c1;l++)\n        {\n            scanf(\"%d%d\",&w[l],&ls[l]);\n            ara[w[l]-1]++,ara[ls[l]-1]++,araw[w[l]-1];\n        }\n        for(l=0;l<c;l++)\n        {\n            if(ara[l]!=c-1){\n                x=l;\n                break;\n            }\n        }\n        for(l=l+1;l<c;l++)\n        {\n            if(ara[l]!=c-1){\n                y=l;\n                break;\n            }\n        }\n        if(araw[x]>araw[y]){\n            printf(\"%d %d\\n\",x+1,y+1);\n        }\n        else{\n            printf(\"%d %d\\n\",y+1,x+1);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int c,c1,l,x,y;\n    while(scanf(\"%d\",&c)==1)\n    {\n        c1=c*(c-1)/2-1;\n        int w[c1],ls[c1],ara[c],araw[c];\n        for(l=0;l<c;l++)\n        {\n            ara[l]=0,araw[l]=0;\n        }\n        for(l=0;l<c1;l++)\n        {\n            scanf(\"%d%d\",&w[l],&ls[l]);\n            ara[w[l]-1]++,ara[ls[l]-1]++,araw[w[l]-1]++;\n        }\n        for(l=0;l<c;l++)\n        {\n            if(ara[l]!=c-1){\n                x=l;\n                break;\n            }\n        }\n        for(l=l+1;l<c;l++)\n        {\n            if(ara[l]!=c-1){\n                y=l;\n                break;\n            }\n        }\n        if(araw[x]>araw[y]){\n            printf(\"%d %d\\n\",x+1,y+1);\n        }\n        else{\n            printf(\"%d %d\\n\",y+1,x+1);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.43956043956043955, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8748613181fe82edc8c5fed02e184be3", "bug_code_uid": "43743f0b977420a2fd76393290f85ce4", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "8ec659f41c050cac31d7e2bf998a1d15", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n  int n,c=0;\n  scanf(\"%d\", &n);\n  int a[n];\n\n  for(int i=0; i<n; i++)\n    scanf(\"%d\", &a[i]);\n\n  if(n%2 != 0){\n    for(int i=0; i<n; i+=2){\n      if(a[i] != a[n-1])\n        c++;\n    }\n  }\n  else\n  {\n    for(int i=1; i<n; i+=2){\n      if(a[i] != a[n-1])\n        c++;\n    }\n  }\n  printf(\"%d\\n\", c);\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (){\n  int n,c=0,d=0;\n  scanf(\"%d\", &n);\n  int a[n];\n\n  for(int i=0; i<n; i++)\n    scanf(\"%d\", &a[i]);\n\n  for(int i=0; i<n; i++){\n    if(a[i] % 2 ==0)\n      c++;\n    else\n      d++;\n  }\n  if(c>d)\n    printf(\"%d\\n\", d);\n  else\n    printf(\"%d\\n\", c);\n\n  return 0;\n}\n"}
{"similarity_score": 0.9921259842519685, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f728fa1094873c34d051c6951c73f9f3", "bug_code_uid": "d5692130be95b7dff6759906179a6bc3", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "190400298aea307bcee4ae3293f48b91", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint h=0,l=99999,cnt=-2,n,i;\n\tscanf(\"%d\" ,&n);\n\twhile(n--){\n\t\tscanf(\"%d\" ,&i);\n\t\tif(i<l){l=i; cnt++;}\n\t\tif(h<i){h=i; cnt++;}\n\t}\n\tprintf(\"%d\" ,cnt); return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint h=-2,l=99999,cnt=-2,n,i;\n\tscanf(\"%d\" ,&n);\n\twhile(n--){\n\t\tscanf(\"%d\" ,&i);\n\t\tif(i<l){l=i; cnt++;}\n\t\tif(h<i){h=i; cnt++;}\n\t}\n\tprintf(\"%d\" ,cnt); return 0;\n}"}
{"similarity_score": 0.9746835443037974, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9169a02e5cd304b53a6f57b05750ed82", "bug_code_uid": "0f2611ee91b332982a09bcb24f0d8462", "src_uid": "6432a543eeee9833c6d849222ad6b93d", "apr_id": "6731ff410c471a956e412103b5955962", "difficulty": 1000, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong  l,r,i;\n\tscanf(\"%ld %ld\",&l,&r);\n\tprintf(\"YES\\n\");\n\tfor(i=l;i<=r;i=i+2){\n\t\tprintf(\"%ld %ld\\n\",i,i+1);\n\t}\n\treturn 0;\n} ", "fixed": "#include<stdio.h>\nint main(){\n\tlong long l,r,i;\n\tscanf(\"%lld %lld\",&l,&r);\n\tprintf(\"YES\\n\");\n\tfor(i=l;i<=r;i=i+2){\n\t\tprintf(\"%lld %lld\\n\",i,i+1);\n\t}\n\treturn 0;\n} "}
{"similarity_score": 0.9694960212201591, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "01289bf2d44d888f56794de11467a6a2", "bug_code_uid": "41a3297b5ca17e58b78d5d85460c04d6", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "241f088368fa7c96ade9daae80baf600", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 10000\n\nint main(void){\n\n    int n;\n    scanf(\"%d\", &n);\n\n    int i, j;\n    char entry[110];\n    int arr[N]={0}, reg[110], log[110]={0};\n\n    for(i=0; i<n; i++){\n        getchar();\n        scanf(\"%c%d\", &entry[i], &reg[i]);\n    }\n\n    for(i=0; i<n; i++){\n        if(entry[i]=='+'){\n            arr[reg[i]]++;\n            log[i+1] = log[i]+1;\n        }\n\n        else{\n            if(arr[reg[i]]==0){\n                for(j=0; j<=i; j++){\n                    log[j]++;\n                }\n            }\n            arr[reg[i]]--;\n            log[i+1] = log[i]-1;\n        }\n    }\n\n    int ans = 0;\n    for(i=0; i<=n; i++){\n        if(log[i]>ans) ans = log[i];\n    }\n\n    printf(\"%d\\n\", ans);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 1000000\n\nint main(void){\n\n    int n;\n    scanf(\"%d\", &n);\n\n    int i, j;\n    char entry[110];\n    int arr[N]={0}, reg[110], log[110]={0};\n\n    for(i=0; i<n; i++){\n        getchar();\n        scanf(\"%c%d\", &entry[i], &reg[i]);\n    }\n\n    int k;\n    for(i=0; i<n; i++){\n        if(entry[i]=='+'){\n            arr[reg[i]]++;\n            log[i+1] = log[i]+1;\n        }\n        else{\n            if(arr[reg[i]]==0){\n                for(j=0; j<=i; j++){\n                    log[j]++;\n                }\n                arr[reg[i]]++;\n            }\n            arr[reg[i]]--;\n            log[i+1] = log[i]-1;\n        }\n    }\n\n\n    int ans = 0;\n    for(i=0; i<=n; i++){\n        if(log[i]>ans) ans = log[i];\n    }\n\n    printf(\"%d\\n\", ans);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9853372434017595, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b3c958935f45c92229a0233aee87ebff", "bug_code_uid": "a8121d5f59312993b562ccdc691f5733", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "a4d6b1a4e06cc2f91c0c03e215f4f897", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\nlong int a;\r\nint b;\r\n    scanf(\"%d\\n\",&b);\r\n    for(int i=0;i<b;i++){\r\n        scanf(\"%ld\\n\",&a);\r\n        int c=1;\r\n        long int t=a;\r\n        while(a!=0){\r\n            c*=10;\r\n            a/=10;\r\n        }\r\n        c/=10;\r\n    long int y=t-c;\r\n        printf(\"%ld\\n\",y);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\nlong int a;\r\nint b;\r\n    scanf(\"%d\\n\",&b);\r\n    for(int i=0;i<b;i++){\r\n        scanf(\"%ld\\n\",&a);\r\n        long long int c=1;\r\n        long int t=a;\r\n        while(a!=0){\r\n            c*=10;\r\n            a/=10;\r\n        }\r\n        c/=10;\r\n    long int y=t-c;\r\n        printf(\"%ld\\n\",y);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.6161719549641761, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4ef2c7b3bd45a4ddc27938f91ddbf7bb", "bug_code_uid": "c3d47cacbe2b00578081be2655533f84", "src_uid": "b894e16e8c00f8d97fde4a104466b3ef", "apr_id": "83675728bf1206a4988f1263645dd940", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nstruct good\r\n{\r\n\t char num[100];\r\n};\r\nint main ()\r\n{\r\n\tint n,w;\r\n\tscanf(\"%d\",&n);\r\n\tstruct good y[2*n]; \r\n\tint i,x;\r\n\tfor(i=0;i<n;i++)\r\n\t{ \r\n\t    scanf(\"%d\",&w); \r\n\t\tscanf(\"%s\",&y[i]);\r\n\t\tfor(x=0;x<w;x++)\r\n\t\t{\r\n\t\t\tif(y[i].num[x]=='U')\r\n\t\t\ty[n+i].num[x]='D';\r\n\t\t\telse if(y[i].num[x]=='L')\r\n\t\t\ty[n+i].num[x]='L';\r\n\t\t\telse if(y[i].num[x]=='L')\r\n\t\t\ty[n+i].num[x]='L';\r\n\t\t\telse if(y[i].num[x]=='R')\r\n\t\t\ty[n+i].num[x]='R';\r\n\t\t\telse if(y[i].num[x]=='D')\r\n\t\t\ty[n+i].num[x]='U';\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tfor(i=n;i<2*n;i++)\r\n\t{\r\n\t\tprintf(\"%s \\n\",y[i].num);\r\n\t}\r\n\treturn 0;\r\n } \r\n", "fixed": "#include <stdio.h>\r\nstruct good\r\n{\r\n\t char num[100];\r\n};\r\nint main ()\r\n{\r\n\tint n,w;\r\n\tscanf(\"%d\",&n);\r\n\tstruct good y[n]; \r\n\tint i,x;\r\n\tfor(i=0;i<n;i++)\r\n\t{ \r\n\t    scanf(\"%d\",&w);\r\n\t\tscanf(\"%s\",&y[i]);\r\n\t\tfor(x=0;x<w;x++)\r\n\t\t{\r\n\t\t\tif(y[i].num[x]=='U')\r\n\t\t\ty[i].num[x]='D';\r\n\t\t\telse if(y[i].num[x]=='D')\r\n\t\t\ty[i].num[x]='U';\r\n\t\t\t\r\n\t\t}\t\r\n\t\tprintf(\"%s\\n\",y[i].num);\r\n\t}\r\n\t\r\n\t\t\r\n\t\r\n\t\r\n\treturn 0;\r\n } \r\n"}
{"similarity_score": 0.5025746652935118, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "c27cee80bd0bf31e382042d5c80da7fc", "bug_code_uid": "3af8461c67583d9a7088c8838cfce8c2", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "5ea2f074b4f4e221448d794a6fe630cd", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,ar[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&ar[i]);\n    }\n    int j,k;\n    for(j=0; j<n-1; j++)\n    {\n        for(k=0; k<n-1-j; k++)\n        {\n            if(ar[k]>ar[k+1])\n            {\n                ar[k]=ar[k]+ar[k+1];\n                ar[k+1]=ar[k]-ar[k+1];\n                ar[k]=ar[k]-ar[k+1];\n            }\n        }\n    }\n    int l,count=0;\n    for(l=0;l<n;l++)\n    {\n        if(ar[0]<ar[l]&&ar[l]<ar[n-1])\n            count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,max=0,count=0;\n    long long min=1000000001;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&ar[i]);\n        if(ar[i]>max)\n            max=ar[i];\n        if(ar[i]<min)\n            min=ar[i];\n    }\n    for(j=0;j<n;j++)\n    {\n        if(ar[j]>min&&ar[j]<max)\n            count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9948339483394834, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "caf81fdd6e15a94aa25d01ca47e6243e", "bug_code_uid": "8bbc243b2cc97a1630f09c064e57ac37", "src_uid": "436c00c832de8df739fc391f2ed6dac4", "apr_id": "36d5b1cec2a76ee6b8bba01219e05423", "difficulty": 1500, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 4000\nchar cont[N];\nint fy[26]={\n    //a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\n      0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1\n};\nint main(){\n    scanf(\"%s\",cont);\n    char *i;\n    for(i=cont;*(i+2);i++){\n        printf(\"%c\",*i);\n        if(*i==*(i+1)&&*i==*(i+2)){\n            if(*i!=*(i+3)){\n                printf(\"%c%c\",*i,*i);\n                i+=2;\n                continue;\n            }\n            continue;\n        }\n        if(fy[*i-'a']&&fy[*(i+1)-'a']&&fy[*(i+2)-'a']){\n            printf(\"%c \",*(i+1));\n            i++;\n        }\n    }\n    for(;*i;i++)\n        printf(\"%c\",*i);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define N 30000\nchar cont[N];\nint fy[26]={\n    //a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\n      0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1\n};\nint main(){\n    scanf(\"%s\",cont);\n    char *i;\n    for(i=cont;*(i+2);i++){\n        printf(\"%c\",*i);\n        if(*i==*(i+1)&&*i==*(i+2)){\n            /*if(*i!=*(i+3)){\n                printf(\"%c%c\",*i,*i);\n                i+=2;\n                continue;\n            }*/\n            continue;\n        }\n        if(fy[*i-'a']&&fy[*(i+1)-'a']&&fy[*(i+2)-'a']){\n            printf(\"%c \",*(i+1));\n            i++;\n        }\n    }\n    for(;*i;i++)\n        printf(\"%c\",*i);\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.5947368421052631, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "59738330774165a91c74c6c84d980df2", "bug_code_uid": "cc98524723b47e4e2cb85562d67cf551", "src_uid": "5358fff5b798ac5e500d0f5deef765c7", "apr_id": "228b1fc6dae8d0009c31202fd1c84cc0", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n , i,k, sum = 0 ;\n\n    scanf(\"%d\",&n);\n\n    int a[n] ,j=n-1, ad=0 ,add=0 ;\n\n    for(i=0 ; i<n ; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0 ; i<n-1 ; i++)\n    {\n        for(j=n-1 ; j>i ; j--)\n        {\n            ad += a[j] ;\n        }\n        add += a[i] ;\n        if(add==ad)sum++ ;\n\n        ad=0 ;\n\n    }\n\n    printf(\"%d\",sum) ;\n\n    return 0 ;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n , i,k, sum = 0 ;\n\n    scanf(\"%d\",&n);\n\n    int a[n] ,j=n-1, ad=0 ,add=0 ;\n\n    for(i=0 ; i<n ; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        add += a[i] ;\n    }\n\n    for(i=n-1 ; i>0 ; i--)\n    {\n        add -= a[i] ;\n        ad += a[i] ;\n        if(add==ad)sum++ ;\n    }\n\n    printf(\"%d\",sum) ;\n\n    return 0 ;\n}\n"}
{"similarity_score": 0.8151041666666666, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "3916c62b2cbbe13ee28493c641db034b", "bug_code_uid": "10a2a67dc19eb058e82869119608450c", "src_uid": "b18dac401b655c06bee331e71eb3e4de", "apr_id": "f4917bf9a7a5cc70043f4a3b7016633a", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int min(long int ,long int );\nlong int min(long int x,long int y){\n    if (x>y)\n    return y;\n    else \n    return x;\n    }\nvoid main(){\n  long  int q,c,m,x,t,r;\n    scanf(\"%ld\",&q);\n \n    while(q--){\n        scanf(\"%ld%ld%ld\",&c,&m,&x);\n        t=min(c,m);\n        r=min(t,((c+m+x)/3));\n        printf(\"%ld\",r);\n        return 0;\n    }\n}", "fixed": "#include<stdio.h>\nlong int min(long int ,long int );\nlong int min(long int x,long int y){\n    if (x>y)\n    return y;\n    else \n    return x;\n    }\nvoid main(){\n  long  int q,c,m,x,t;\n    scanf(\"%ld\",&q);\n \n    while(q--){\n        scanf(\"%ld%ld%ld\",&c,&m,&x);\n        t=(c+m+x)/3;\n        if(c<m)\n        printf(\"%ld\\n\",min(c,t));\n        else\n        printf(\"%ld\\n\",min(m,t));\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.7820773930753564, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "8277a9d5f58f4c24522f10633e6e47ac", "bug_code_uid": "e8dcbfa8d380d86ea6cff7ae25c939e3", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "909864a58640b4987f3622d13768db84", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//1295A_Display_the_number.\n#include<stdio.h>\n\nint main()\n{\n    int num_test_case, k, i;\n\n    scanf(\"%d\", &num_test_case);\n\n    int arr[num_test_case];\n\n    for(i = 0; i < num_test_case; ++i)\n    {\n    \tscanf(\"%d\",&arr[i]);\n    }\n\n    for(i = 0 ; i < num_test_case; ++i)\n    {\n    \tif(arr[i] & 1)\n\t{\n\t    for(k = 0; k < (arr[i] / 2) - 1; ++k)\n\t    \tprintf(\"1\");\n\t    printf(\"7\");\n\t}\n\telse\n\t{\n\t    for(k = 0; k < (arr[i] / 2); ++k)\n\t    \tprintf(\"1\");\n\t}\n\tprintf(\"\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "//1295A_Display_the_number.\n#include<stdio.h>\n\nint main()\n{\n    int num_test_case, k, i;\n\n    scanf(\"%d\", &num_test_case);\n\n    int arr[num_test_case];\n\n    for(i = 0; i < num_test_case; ++i)\n    {\n    \tscanf(\"%d\",&arr[i]);\n    }\n\n    for(i = 0 ; i < num_test_case; ++i)\n    {\n    \tif(arr[i] & 1)\n\t{\n\t    printf(\"7\");\n\t    for(k = 0; k < (arr[i] / 2) - 1; ++k)\n\t    \tprintf(\"1\");\n\t}\n\telse\n\t{\n\t    for(k = 0; k < (arr[i] / 2); ++k)\n\t    \tprintf(\"1\");\n\t}\n\tprintf(\"\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9989247311827957, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e9d83ffcde044384db9e2f4c10f1ffb5", "bug_code_uid": "09383c3692bab4c9494a20546ff90644", "src_uid": "a9143235c8e2b6b188ea3fc8a90f0c80", "apr_id": "025b24dc4260591124e3a64989b7d31f", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    char s1[3];\r\n    char s2[3];\r\n    char s[5];\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%s %s\",&s1,&s2);\r\n        for(int j=0;j<2;j++){\r\n            s[j]=s1[j];\r\n            s[j+2]=s2[j];\r\n        }\r\n        if(s[0]==s[1] && s[0]==s[2] && s[0]==s[3]){\r\n            printf(\"0\\n\");\r\n        }\r\n        else{\r\n        int count=0;\r\n        inr n=4;\r\n        for(int x=0;x<n;x++){\r\n            for(int y=x+1;y<n;y++){\r\n                if(s[x]==s[y]){\r\n                    count++;\r\n                    s[y]=s[n-1];\r\n                    n--;\r\n                    y--;\r\n                }\r\n            }\r\n        }\r\n        if(count==0){\r\n            printf(\"3\\n\");\r\n        }\r\n        else if(count==1){\r\n            printf(\"2\\n\");\r\n        }\r\n        else if(count==2){\r\n            printf(\"1\\n\");\r\n        }\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    char s1[3];\r\n    char s2[3];\r\n    char s[5];\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%s %s\",&s1,&s2);\r\n        for(int j=0;j<2;j++){\r\n            s[j]=s1[j];\r\n            s[j+2]=s2[j];\r\n        }\r\n        if(s[0]==s[1] && s[0]==s[2] && s[0]==s[3]){\r\n            printf(\"0\\n\");\r\n        }\r\n        else{\r\n        int count=0;\r\n        int n=4;\r\n        for(int x=0;x<n;x++){\r\n            for(int y=x+1;y<n;y++){\r\n                if(s[x]==s[y]){\r\n                    count++;\r\n                    s[y]=s[n-1];\r\n                    n--;\r\n                    y--;\r\n                }\r\n            }\r\n        }\r\n        if(count==0){\r\n            printf(\"3\\n\");\r\n        }\r\n        else if(count==1){\r\n            printf(\"2\\n\");\r\n        }\r\n        else if(count==2){\r\n            printf(\"1\\n\");\r\n        }\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9584214235377027, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fd56e7f31a31e2ffc5d372427e46020b", "bug_code_uid": "98aa796aa64f04d618ed1c9f637bfc8a", "src_uid": "024d7b1d5f7401080560174003456037", "apr_id": "ac5e0b2b5f5ec7ff75194cd487f43609", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "int main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n, x, y;\r\n\t\tscanf(\"%d%d%d\", &n, &x, &y);\r\n\t\tif (!x && !y)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint tmp = x > y ? x : y;\r\n\t\t\tif ((n - 1) % tmp != 0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tint* arr = (int*)calloc(n - 1, sizeof(int));\r\n\t\t\t\tint i = 0;\r\n\t\t\t\tint sign = 0;\r\n\t\t\t\tfor (i = 0; i < n - 1; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tarr[i] = i + 2;\r\n\t\t\t\t}\r\n\t\t\t\tint num = (n - 1) / tmp;\r\n\t\t\t\twhile (num--)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (i = 0; i < tmp; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"%d \", arr[sign]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsign += i;\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "int main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n, x, y;\r\n\t\tscanf(\"%d%d%d\", &n, &x, &y);\r\n\t\tif (!x && !y)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (x && y)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint tmp = x > y ? x : y;\r\n\t\t\tif ((n - 1) % tmp != 0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tint* arr = (int*)calloc(n - 1, sizeof(int));\r\n\t\t\t\tint i = 0;\r\n\t\t\t\tint sign = 0;\r\n\t\t\t\tfor (i = 0; i < n - 1; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tarr[i] = i + 2;\r\n\t\t\t\t}\r\n\t\t\t\tint num = (n - 1) / tmp;\r\n\t\t\t\twhile (num--)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (i = 0; i < tmp; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"%d \", arr[sign]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsign += i;\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9681528662420382, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "54f89cb0b546d1c91aaa837f19b218cd", "bug_code_uid": "29cbe24c6885ab91e9a244fd11c6cb09", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "4ae2b0fefc9c286d630ed1588e56e473", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include<stdio.h>\n\n    int main(){\n        int n,h;\n        scanf(\"%i %i\\n\",n,h);\n        char a[n];\n        int s=0;\n        for (int i = 0; i < n; i++){\n            scanf(\"%c\",a[i]);\n            if(a[i]>h)\n            s+=2;\n            else\n            s+=1;\n        }\n        printf(\"%i\",s);\n        \n    }", "fixed": "    #include<stdio.h>\n\n    int main(){\n        int n,h;\n        scanf(\"%i %i\\n\",&n,&h);\n        int a[n];\n        int s=0;\n        for (int i = 0; i < n; i++){\n            scanf(\"%i\",&a[i]);\n            if(a[i]>h)\n            s+=2;\n            else\n            s+=1;\n        }\n        printf(\"%i\",s);\n        \n    }"}
{"similarity_score": 0.999482669425763, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f02a82a048e4099206d4509119f8b086", "bug_code_uid": "ad429c0283d0f042419b0afbeacd459f", "src_uid": "eee23388aa7cda50302fc4da6e50e172", "apr_id": "b3794d89c6ec9e0c9028125d2df1ea67", "difficulty": 800, "tags": ["2-sat", "constructive algorithms", "greedy", "string suffix structures", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t, n, m, i;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n, &m);\r\n        char arr[m];\r\n        int ary[n];\r\n        for(i=0;i<m;i++)\r\n        arr[i]='B';\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&ary[i]);  \r\n            if(m-ary[i]>=ary[i]-1)\r\n            {\r\n                if(arr[ary[i]-1]=='B')\r\n                arr[ary[i]-1]='A';\r\n                else\r\n                {\r\n                    if(arr[m-ary[i]]=='B')\r\n                    arr[m-ary[i]]='A';\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(arr[m-ary[i]]=='B')\r\n                arr[m-ary[i]]='A';\r\n                else\r\n                {\r\n                    if(arr[ary[i]-1]=='B')\r\n                    arr[ary[i]-1]='A';\r\n                }           \r\n            }\r\n        } \r\n        for(i=0;i<m;i++)\r\n        printf(\"%c \",arr[i]);\r\n        puts(\"\");             \r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t, n, m, i;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n, &m);\r\n        char arr[m];\r\n        int ary[n];\r\n        for(i=0;i<m;i++)\r\n        arr[i]='B';\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&ary[i]);  \r\n            if(m-ary[i]>=ary[i]-1)\r\n            {\r\n                if(arr[ary[i]-1]=='B')\r\n                arr[ary[i]-1]='A';\r\n                else\r\n                {\r\n                    if(arr[m-ary[i]]=='B')\r\n                    arr[m-ary[i]]='A';\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(arr[m-ary[i]]=='B')\r\n                arr[m-ary[i]]='A';\r\n                else\r\n                {\r\n                    if(arr[ary[i]-1]=='B')\r\n                    arr[ary[i]-1]='A';\r\n                }           \r\n            }\r\n        } \r\n        for(i=0;i<m;i++)\r\n        printf(\"%c\",arr[i]);\r\n        puts(\"\");             \r\n    }\r\n}"}
{"similarity_score": 0.4748299319727891, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b6e213edafa3fbe5b8417f5e378b5832", "bug_code_uid": "de0fb982c8cad751ac9f3a6d127fe6d9", "src_uid": "38e884cbc5bede371bccbc848096f499", "apr_id": "cd3fb11dcff0237666e574bf02bf4228", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nvoid gen_str(char * s){\n    int curr;\n\n    curr = 0;\n\n    while(s[curr]!='\\0'){\n\n        if(s[curr] == 'R')\n            printf(\"P\");\n        else if(s[curr] == 'P')\n            printf(\"S\");\n        else if(s[curr] == 'S')\n            printf(\"R\");\n        \n        curr++;\n    }\n    printf(\"\\n\");\n\n}\n\n\n\nint main(){\n    int t;\n    char * s;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%s\",s);\n        gen_str(s);\n\n    }\n}", "fixed": "#include<stdio.h>\n\n\nvoid gen_str(char * s){\n    int curr,r_count,p_count,s_count;\n\n    curr = 0;\n    r_count = 0;\n    p_count = 0;\n    s_count = 0;\n\n    char ans;\n\n\n    while(s[curr]!='\\0'){\n\n        if(s[curr] == 'R')\n            r_count +=1;\n\n        else if(s[curr] == 'P')\n            p_count +=1;\n\n        else if(s[curr] == 'S')\n            s_count +=1;\n        \n        curr++;\n    }\n\n    if(r_count >= p_count){\n        if(r_count >= s_count)\n            ans = 'P';\n        else\n            ans = 'R';\n\n    }\n    else if (r_count >= s_count){\n        if(r_count >= p_count)\n            ans = 'P';\n        else\n            ans = 'S';\n    }\n\n    else if (p_count >= r_count){\n        if(p_count >= s_count)\n            ans = 'S';\n        else\n            ans = 'R';\n    }\n\n    for(int i = 0 ; i <(r_count + p_count + s_count) ; i++)\n        printf(\"%c\",ans);    \n\n    printf(\"\\n\");\n\n}\n\n\n\nint main(){\n    int t;\n    char s[200000];\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%s\",s);\n        gen_str(s);\n\n    }\n}"}
{"similarity_score": 0.2088888888888889, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "26f839844d3fefb69c4f81c2353a8d99", "bug_code_uid": "ff788613234db0407f6092af81d8593a", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "372d55456367ed962dbe542451e0b351", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i,j,k,s[\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int i,j,A=0,D=0,k;\n    char s[100001];\n    \n    scanf(\"%d\",&j);\n    scanf(\" %[^\\n]\",s);\n    k=strlen(s);\n    \n    for(i=0;i<k;i++){\n        if(s[i]=='A'){\n            A++;\n        }\n        else{\n            D++;\n        }\n    }\n    if(A>D){ printf(\"Anton\");}\n    else if(A==D){ printf(\"Friendship\");}\n    else{ printf(\"Danik\");}\n    return 0;\n}"}
{"similarity_score": 0.6524614254224834, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "9f8efc6e6133c87991be044fc4e54c85", "bug_code_uid": "c498686f730466ee4133aee3263a88b6", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "f056120a6de4ed418f3fdedcba27ff1c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int a,b,c;\n    int sum, greater;\n    for(int i=0;i<n;i++) {\n        scanf(\"%d%d%d\", &a, &b, &c);\n         if(a-b>0) {\n            sum=a-b;\n            greater=a;\n        }\n        else {\n            sum=b-a;\n            greater=b;\n        }\n        int arr[sum*2];\n        for(int j=0;j<sum*2;j++) \n            arr[j]=j+1;\n        if(c<=sum*2 && greater<=(sum*2)) {\n            if(c==(sum*2)/2)\n                printf(\"%d\\n\", sum*2);\n            else if(c>(sum*2)/2)\n                printf(\"%d\\n\", arr[c-sum-1]);\n            else\n                printf(\"%d\\n\", arr[c+sum-1]);\n        }\n        else\n            printf(\"%d\\n\", -1);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int a,b,c;\n    int sum, greater;\n    for(int i=0;i<n;i++) {\n        scanf(\"%d%d%d\", &a, &b, &c);\n        if(a-b>0) {\n            sum=a-b;\n            greater=a;\n        }\n        else {\n            sum=b-a;\n            greater=b;\n        }\n        \n        if(c<=sum*2 && greater<=(sum*2)) {\n            if(c==(sum*2)/2)\n                printf(\"%d\\n\", sum*2);\n            else if(c>(sum*2)/2)\n                printf(\"%d\\n\", c-sum);\n            else\n                printf(\"%d\\n\", c+sum);\n        }\n        else\n            printf(\"%d\\n\", -1);\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9274193548387096, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d3de3d0a79a3538e2cb8d030fc32f98c", "bug_code_uid": "1adfeb8efc94abdf1c1877e6f593f144", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "55400eef6df258f8b95d40cb0fbbd842", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,i;\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++){\n    printf(\"%d\\t\",1);\n}\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i;\nscanf(\"%d\",&n);\nprintf(\"%d\\n\",n);\nfor(i=1;i<=n;i++){\n    printf(\"%d\\t\",1);\n}\n    return 0;\n}\n\n"}
{"similarity_score": 0.9923484402589758, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6c3589f375f71673c54797de2b4a339c", "bug_code_uid": "4e9d77cb689a47e7a052a3b72a518b52", "src_uid": "1fba9a290d0492a3d658a7a33388db13", "apr_id": "b954b5035f694c05ccaeff759d665ab1", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint min(int a,int b){\n\tif(a<b)\n\t\treturn a;\n\telse \n\t\treturn b;\n}\nint main(void) {\n\tint t;\n\tscanf(\"%d\\n\",&t);\n\twhile(t--){\n\t\tchar a[100001];\n\t\tgets(a);\n\t\tint l=strlen(a);\n\t\tint b[4]={0};\n\t\tfor(int i=0;i<l;i++){\n\t\t\tif(a[i]=='U')\n\t\t\t\tb[0]++;\n\t\t\tif(a[i]=='D')\n\t\t\t\tb[1]++;\n\t\t\tif(a[i]=='R')\n\t\t\t\tb[2]++;\n\t\t\tif(a[i]=='L')\n\t\t\t\tb[3]++;\n\t\t}\n\t\tint x=min(b[0],b[1]);\n\t\tint y=min(b[2],b[3]);\n\t\tb[0]=x;\n\t\tb[1]=x;\n\t\tb[2]=y;\n\t\tb[3]=y;\n\t\tif(x==0 && y==0){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\tif(x==0){\n\t\t\tprintf(\"2\\nLR\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(y==0){\n\t\t\tprintf(\"2\\nUD\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%d\\n\",2*(x+y));\n\t\t\tint u=x,d=x,r=y,l=y;\n\t\t\twhile(u--){\n\t\t\t\tprintf(\"U\");\n\t\t\t}\n\t\t\twhile(r--){\n\t\t\t\tprintf(\"R\");\n\t\t\t}\n\t\t\twhile(d--){\n\t\t\t\tprintf(\"D\");\n\t\t\t}\n\t\t\twhile(l--){\n\t\t\t\tprintf(\"L\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\nint min(int a,int b){\n\tif(a<b)\n\t\treturn a;\n\telse \n\t\treturn b;\n}\nint main(void) {\n\tint t;\n\tscanf(\"%d\\n\",&t);\n\twhile(t--){\n\t\tchar a[100001];\n\t\tgets(a);\n\t\tint l=strlen(a);\n\t\tint b[4]={0};\n\t\tfor(int i=0;i<l;i++){\n\t\t\tif(a[i]=='U')\n\t\t\t\tb[0]++;\n\t\t\tif(a[i]=='D')\n\t\t\t\tb[1]++;\n\t\t\tif(a[i]=='R')\n\t\t\t\tb[2]++;\n\t\t\tif(a[i]=='L')\n\t\t\t\tb[3]++;\n\t\t}\n\t\tint x=min(b[0],b[1]);\n\t\tint y=min(b[2],b[3]);\n\t\tb[0]=x;\n\t\tb[1]=x;\n\t\tb[2]=y;\n\t\tb[3]=y;\n\t\tif(x==0 && y==0){\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(x==0){\n\t\t\tprintf(\"2\\nLR\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(y==0){\n\t\t\tprintf(\"2\\nUD\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%d\\n\",2*(x+y));\n\t\t\tint u=x,d=x,r=y,l=y;\n\t\t\twhile(u--){\n\t\t\t\tprintf(\"U\");\n\t\t\t}\n\t\t\twhile(r--){\n\t\t\t\tprintf(\"R\");\n\t\t\t}\n\t\t\twhile(d--){\n\t\t\t\tprintf(\"D\");\n\t\t\t}\n\t\t\twhile(l--){\n\t\t\t\tprintf(\"L\");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9522365428354814, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f70bde83c08d611bfa7090a7aea46dda", "bug_code_uid": "6a5c0fe1c51afeff41d9fceb6fc3cba8", "src_uid": "ca6b162f945d4216055bf92d7263dbd5", "apr_id": "6ca86d7b220de9e9ff0ca598ff597328", "difficulty": 800, "tags": ["math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,len=0,a=0,b=0,c=0;\r\n    char s[51];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",&s);\r\n        \r\n        len=strlen(s);\r\n        \r\n        for(int i=0;i<len;i++)\r\n        {\r\n            if(s[i]=='A')\r\n            {\r\n                a++;\r\n            }\r\n            if(s[i]=='B')\r\n            {\r\n                b++;\r\n            }\r\n            if(s[i]=='C')\r\n            {\r\n                c++;\r\n            }\r\n        }\r\n        if(b==a+c)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,len=0,a=0,b=0,c=0;\r\n    char s[100];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",&s);\r\n\r\n        len=strlen(s);\r\n\r\n        for(int i=0;i<len;i++)\r\n        {\r\n            if(s[i]=='A')\r\n            {\r\n                a++;\r\n            }\r\n            if(s[i]=='B')\r\n            {\r\n                b++;\r\n            }\r\n            if(s[i]=='C')\r\n            {\r\n                c++;\r\n            }\r\n        }\r\n        if(b==a+c)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        a=0;\r\n        b=0;\r\n        c=0;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9807121661721068, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ae4a3621b48066dde3bb960f6cfc3ef5", "bug_code_uid": "c334237295bc176730fc450b5a7eb888", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "767e78763d890eddb3e92467738e9385", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n     int t;\r\n     scanf(\"%d\",&t);\r\n     \r\n     for(int i=0;i<t;i++){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        \r\n        int a[n];\r\n        int flag = 1;\r\n        int op = 0;\r\n        \r\n        for(int j=0;j<n;j++){\r\n            scanf(\"%d\", a+j);\r\n            \r\n            if(a[j] < a[j-1]) flag = 0;\r\n            }\r\n            \r\n            \r\n           if((a[0] == 1) || (a[n-1] == n)) op = 1;\r\n           \r\n           else if( a[0] == n  && a[n-1] == 1) op = 3;\r\n            \r\n            else op = 2;\r\n            \r\n            if(flag == 1) op = 0;\r\n            \r\n            printf(\"%d \\n\", op);\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n     int t;\r\n     scanf(\"%d\",&t);\r\n     \r\n     for(int i=0;i<t;i++){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        \r\n        int a[n];\r\n        int flag = 1;\r\n        int op = 0;\r\n        \r\n        scanf(\"%d\",a);\r\n        for(int j=1;j<n;j++){\r\n            scanf(\"%d\", a+j);\r\n            \r\n            if(a[j] < a[j-1]) flag = 0;\r\n            }\r\n            \r\n            \r\n           if((a[0] == 1) || (a[n-1] == n)) op = 1;\r\n           \r\n           else if( a[0] == n  && a[n-1] == 1) op = 3;\r\n            \r\n            else op = 2;\r\n            \r\n            if(flag == 1) op = 0;\r\n            \r\n            printf(\"%d \\n\", op);\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.24807527801539778, "equal_cnt": 27, "replace_cnt": 22, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 27, "lang": "GNU C", "fix_code_uid": "145644d628018540eac7b7a57d4d3007", "bug_code_uid": "4e57d9b8799647bed064f8fcbdb0ea8e", "src_uid": "5fcc22cdc38693723d8a9577d685db12", "apr_id": "a5403c67a527a2bdaecf7f913d8f52a5", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long int n;\n    int i,j,flag=0;\n    scanf(\"%ld\",&n);\n    char a[n];\n    long long int b[n],c=1;\n    scanf(\"%s\",&a);\n    for (i=1;i<=n;i++)\n        scanf(\"%I64\",&b[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[c-1]=='>')\n            c=c+b[c];\n        else if(a[c-1]=='<')\n            c=c-b[c];\n        if(c<1 || c>n)\n            flag=1;\n        if(flag==1)\n            break;\n    }\n\tif(flag==1)\n\t\tprintf(\"FINITE\\n\");\n\telse\n\t\tprintf(\"INFINITE\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nchar Flag[100000];\nchar Str[100001];\nint Offset[100000];\n\nint main()\n{\n    int N, i;\n    char outFlag = 0;\n    scanf(\"%d %s\", &N, Str);\n    for(i = 0; i < N; ++i) {\n        scanf(\"%d\", &Offset[i]);\n    }\n    int s = 0;\n    Flag[0] = 1;\n    while(1) {\n        int new;\n        if(Str[s] == '>') {\n            new = s + Offset[s];\n        } else {\n            new = s - Offset[s];\n        }\n        if(new < 0 || new >= N) {\n            outFlag = 1;\n            break;\n        }\n        if(Flag[new]) {\n            break;\n        }\n        Flag[new] = 1;\n        s = new;\n    }\n    puts(outFlag ? \"FINITE\" : \"INFINITE\");\n    return 0;\n}\n"}
{"similarity_score": 0.7938144329896907, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7b51f023028a5b4ec9ffe1897e5765de", "bug_code_uid": "879963f60fe5292aa0da606d18b77f15", "src_uid": "e4a2354159fc4cab7088e016cf17ae6c", "apr_id": "a3c715e4fc6d9b28d39102d73f572524", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "*special"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "x=1000001,n,e,m;main(x){int a[x];for(scanf(\"%*d\");~scanf(\"%d\",&e);)++a[e]>m?m=a[x=e]:0;printf(\"%d\",x);}", "fixed": "a[1000001],n,e,m;main(x){for(;~scanf(\"%d\",n?&e:&n);)m=e&&++a[e]>m?a[x=e]:m;printf(\"%d\",x);}"}
{"similarity_score": 0.9576547231270358, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "78f8311e651d95caab0d728becb1383c", "bug_code_uid": "95a5f47f18e09b553e0553806762a71c", "src_uid": "6421a81f85a53a0c8c63fbc32750f77f", "apr_id": "cba015b389a42c6708fc72b1e11b4f59", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    double x,r,l,p,q;\n    scanf(\"%lf\\n%lf\\n%lf\",&l,&p,&q);\n    r=l/(p+q);\n    x=(r*p);\n\n    printf(\"%lf\",x);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    float x,r,l,p,q;\n    scanf(\"%f\\n%f\\n%f\",&l,&p,&q);\n    r=l/(p+q);\n    x=(r*p);\n\n    printf(\"%f\",x);\n    return 0;\n}\n"}
{"similarity_score": 0.7568093385214008, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "bff56f823931dbb608c538d8fcd1596b", "bug_code_uid": "0f5474c637d3bd1f7c98edde7b6e95af", "src_uid": "5088d1d358508ea3684902c8e32443a3", "apr_id": "5bde0c7f4efa270abef3c4c0e0d8297e", "difficulty": 1200, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n<0 || n>200000)\n\treturn 0;\n\tint a[n-1];\n\tint i;\n\tint b[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=1;\n\t\tif(a[i]<0 || a[i]>1000000000)\n\t\treturn 0;\n\t}\n\tint min=a[0];\n\tint count=1;\n\t\n\tint j=0;\n\tint temp;\n\ti=1;\n\twhile(i != n){\n\t\tif(min*2<a[i]){\n\t\t    b[j]=count;\n\t\t\tj++;\n\t\t\tcount=1;\n\t\t}\n\t\telse{\n\t\t\tcount++;\n\t\t}\n\t\tmin=a[i];\n\t\ti++;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=1;j<n;j++){\n\t\t\tif(b[i]<b[j]){\n\t\t\t\ttemp=b[j];\n\t\t\t\tb[j]=b[i];\n\t\t\t\tb[i]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",b[0]);\n\t\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n<0 || n>200000)\n\treturn 0;\n\tint a[n-1];\n\tint i;\n\tint b[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=1;\n\t\tif(a[i]<0 || a[i]>1000000000)\n\t\treturn 0;\n\t}\n\tint min=a[0];\n\tint count=1;\n\tint Lcount=1;\n\t\n\tint j=0;\n\tint temp;\n\ti=1;\n\twhile(i != n){\n\t\tif(min*2<a[i]){\n\t\t\tif(Lcount<=count){\n\t\t\t\tLcount=count;\n\t\t\t}\n\t\t\tcount=1;\n\t\t}\n\t\telse{\n\t\t\tcount++;\n\t\t}\n\t\tmin=a[i];\n\t\ti++;\n\t}\n\tif(Lcount<count)\n\t\tLcount = count;\n\t\n\tprintf(\"%d\",Lcount);\n\t\n}"}
{"similarity_score": 0.38335607094133695, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "b5251edebea40dffecf0ad69d10cc9a8", "bug_code_uid": "811124697ee6804f04ef3a367827ec42", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "eaf1ccc3c6b0521fbbcdf67ba33e9fed", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[1001],m;\n\n    gets(s);\n    if(s[0]=='{' && s[1]=='}')\n        {\n            printf(\"1\\n\");\n            return 0;\n        }\n    int i=0,j=0,l,p;\n    l=strlen(s);char b[l];\n    for(i=0;i<l;i++)\n    {\n        if(s[i]>='a' && s[i]<='z')\n        {b[j]=s[i];\n        j++;}\n    }\n    p=j;\n    for(i=0;i<p;i++)\n    {\n        for(j=i+1;j<p;j++)\n        {\n            if(b[i]>b[j])\n            {\n                m=b[i];\n                b[i]=b[j];\n                b[j]=m;\n            }\n        }\n    }\n    int y=0,k=1,t=0;\n    char c[p];\n\n    c[0]=b[0];\n    for(i=1;i<p;i++)\n    {\n        if(c[k-1]!=b[i])\n        {c[k]=b[i];k++;}\n    }\n    t=strlen(c);\n    printf(\"%d\",t);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[1001],m;\n\n    gets(s);\n    strlwr(s);\n    int i,j,c=0,l=strlen(s),n;\n    if(l==2)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    else if(l==3)\n    {\n        printf(\"1\\n\");\n        return 0;\n    }\n    for(i=0;i<l;i++)\n    {\n        for(j=i+1;j<l;j++)\n        {\n            if(s[i]>s[j])\n            {\n                m=s[i];\n                s[i]=s[j];\n                s[j]=m;\n            }\n        }\n    }\n    for(i=0;i<l;i++)\n    {\n        if(s[i]>='a' && s[i]<='z'){n=i;break;}\n    }\n    c=l/3;\n    for(i=n;i<l-2;i++)\n    {\n        for(j=i+1;j<l-2;j++)\n        {\n            if(s[i]==s[j])c--;break;\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.7487401007919366, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "cc3f09c589a65a6516cb3606b5b3c7fa", "bug_code_uid": "d45324708b6700dc7862a210a14be2e1", "src_uid": "de57b6b1aa2b6ec4686d1348988c0c63", "apr_id": "53f3870d29a88383c7b73e301ea38cd7", "difficulty": 1500, "tags": ["data structures", "constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,x,i,j,k,p,a,b;\n    char n[200005];\n\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n\n        scanf(\"%s\",&n);\n\n        a=1; b=1;\n        for(i=1;i<x;i++)\n        {\n            if(n[i]==n[i-1]&&n[i]=='0') a++;\n            else if(n[i]==n[i-1]&&n[i]=='1') b++;\n        }\n\n        k=a>b?a:b;\n\n        printf(\"%d\\n%d \",k,1);\n\n        a=1; b=1;\n        for(i=1;i<x;i++)\n        {\n            if(n[i]==n[i-1]&&n[i]=='0')\n            {\n                a++; printf(\"%d \",a);\n            }\n            else if(n[i]==n[i-1]&&n[i]=='1')\n            {\n                b++; printf(\"%d \",b);\n            }\n            else printf(\"1 \");\n        }\n\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,x,i,j,k,p,a,b;\n    char n[200005];\n\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n\n        scanf(\"%s\",&n);\n\n        a=0; b=0; k=0;\n        for(i=1;i<x;i++)\n        {\n            if(n[i]==n[i-1]&&n[i]=='0') k++;\n            else if(n[i]==n[i-1]&&n[i]=='1') k--;\n\n            if(k>a) a=k;\n            if(k<b) b=k;\n\n        }\n\n        k=(a-b)+1;\n        b=1-b;\n\n        printf(\"%d\\n%d \",k,b);\n\n        k=b;\n        for(i=1;i<x;i++)\n        {\n            if(n[i]==n[i-1]&&n[i]=='0') k++;\n\n            else if(n[i]==n[i-1]&&n[i]=='1') k--;\n\n            printf(\"%d \",k);\n        }\n\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.16740088105726872, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "8174809954c3eeaad8d40f52a45a6a83", "bug_code_uid": "20bad2877014fb3886307eb06a3cc9e5", "src_uid": "e2ff228091ca476926b8e905f1bc8dff", "apr_id": "ad93e458b548f8daa2f96cbacba72daf", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint a[1000000];\nint f(int i,int j,int n,int s)\n{\n   if(j==n)\n    return s ;\n    else\n   {if(a[i]!=a[j])\n      s++;\n       f(i,j+1,n,s);\n\n\n      return;\n   }\n\n}\nint main()\n{int m,q=0,k,h,ss=0;\nscanf(\"%d %d\",&m,&h);\nfor(k=0;k<m;k++)\n    scanf(\"%d\",&a[k]);\nfor(k=0;k<m;k++)\n{ss=f(k,k+1,m,q);\nq=ss;}\nprintf(\"%d\",ss);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,m,i,s=0,j;\nscanf(\"%d%d\",&n,&m);\nint a[n];\nint b[m];\nfor(i=0;i<m;i++)\n    b[i]=0;\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n    j=a[i];\n    b[j-1]++;\n\n}\nfor(i=0;i<n;i++)\n{j=a[i];\n    b[j-1]--;\n    s=s+((n-(i+1))-b[j-1]);\n\n}\nprintf(\"%d\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.9994314951677089, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3f78f7dc6eb307816de7248765a576d9", "bug_code_uid": "13d578108735882641a93fb1ea72e19e", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "d3f30cb7974a7902ce698b3fecc87d3b", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n\n#include <stdio.h>\n\nint a[101];\nint zero[101];\n\nint main(){\n\tint n, fi = -1, si = -1;\n\tint count = 0, ncount= 0;\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n;i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tif ( fi == -1 && a[i] < 0 )\n\t\t\tfi = i;\n\t\telse if (si == -1 && a[i] < 0)\n\t\t\tsi = i;\n\t\tif ( a[i] < 0 )\n\t\t\tncount++;\n\t\tif ( a[i] == 0 ){\n\t\t\tzero[count++] = i;\n\t\t}\n\t}\n\tprintf(\"1 %d\\n\", a[fi]);\n\tif ( ncount % 2 == 0){\n\t\tprintf(\"%d \", n -2-count );\n\t\tfor(int i =0 ; i < n ; i++){\n\t\t\tif ( i == si || i == fi || a[i] == 0)\n\t\t\t\tcontinue;\n\t\t\tprintf(\"%d \", a[i]);\n\t\t}\n\t} else {\n\t\tprintf(\"%d \", n -1-count);\n\t\tfor(int i =0 ; i < n ; i++){\n\t\t\tif ( i == fi || a[i] == 0)\n\t\t\t\tcontinue;\n\t\t\tprintf(\"%d \", a[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\tif ( ncount % 2 == 0)\n\t\tprintf(\"%d %d\", count + 1, a[si]);\n\telse \n\t\tprintf(\"%d \", count);\n\tfor(int i = 0 ; i < count ; i ++ ){\n\t\tprintf(\"0 \");\n\t}\n\tprintf(\"\\n\");\n\t\t\n\treturn 0;\n}", "fixed": "\n\n#include <stdio.h>\n\nint a[101];\nint zero[101];\n\nint main(){\n\tint n, fi = -1, si = -1;\n\tint count = 0, ncount= 0;\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n;i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tif ( fi == -1 && a[i] < 0 )\n\t\t\tfi = i;\n\t\telse if (si == -1 && a[i] < 0)\n\t\t\tsi = i;\n\t\tif ( a[i] < 0 )\n\t\t\tncount++;\n\t\tif ( a[i] == 0 ){\n\t\t\tzero[count++] = i;\n\t\t}\n\t}\n\tprintf(\"1 %d\\n\", a[fi]);\n\tif ( ncount % 2 == 0){\n\t\tprintf(\"%d \", n -2-count );\n\t\tfor(int i =0 ; i < n ; i++){\n\t\t\tif ( i == si || i == fi || a[i] == 0)\n\t\t\t\tcontinue;\n\t\t\tprintf(\"%d \", a[i]);\n\t\t}\n\t} else {\n\t\tprintf(\"%d \", n -1-count);\n\t\tfor(int i =0 ; i < n ; i++){\n\t\t\tif ( i == fi || a[i] == 0)\n\t\t\t\tcontinue;\n\t\t\tprintf(\"%d \", a[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\tif ( ncount % 2 == 0)\n\t\tprintf(\"%d %d \", count + 1, a[si]);\n\telse \n\t\tprintf(\"%d \", count);\n\tfor(int i = 0 ; i < count ; i ++ ){\n\t\tprintf(\"0 \");\n\t}\n\tprintf(\"\\n\");\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.9934640522875817, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "887901df61b3cc182ab4011dea546028", "bug_code_uid": "0a9c643fceb41410367aa4f0f7edb3cc", "src_uid": "4f3bec9c36d0ac2fdb8041469133458c", "apr_id": "68456bd4a0052c1802e45bb664f7972d", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) \n{\n\tchar arr[8][8],temp[9];\n\tint pos[2][2];\n\tint i,n,j,k;\n\tscanf(\"%d\\n\",&n);\n\twhile(n!=0)\n\t{\n\t\tk=0;\n\t\tfor(i=0;i<8;i++)\n\t\t{\n             scanf(\"%s\",temp);\n\t\t\tfor(j=0;j<8;j++)\n\t\t\t{\n                  arr[i][j]=temp[j];\n\t\t\t\t\n\t\t\t\t//scanf(\"%c\",&arr[i][j]);\n\t\t\t\tif(arr[i][j]=='K')\n\t\t\t\t{\n\t\t\t\tpos[k][0]=i+1;\n\t\t\t\tpos[k][1]=j+1;\n\t\t\t\t//printf(\"%d\",pos[k][0]);\n\t\t\t\t//printf(\"%d\",pos[k][1]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\n\t\tif((pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1])||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]))\n\t\t{\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\tn--;\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\tchar arr[8][8],temp[9];\n\tint pos[2][2];\n\tint i,n,j,k;\n\tscanf(\"%d\\n\",&n);\n\twhile(n!=0)\n\t{\n\t\tk=0;\n\t\tfor(i=0;i<8;i++)\n\t\t{\n             scanf(\"%s\",temp);\n\t\t\tfor(j=0;j<8;j++)\n\t\t\t{\n                  arr[i][j]=temp[j];\n\n\t\t\t\t//scanf(\"%c\",&arr[i][j]);\n\t\t\t\tif(arr[i][j]=='K')\n\t\t\t\t{\n\t\t\t\tpos[k][0]=i+1;\n\t\t\t\tpos[k][1]=j+1;\n\t\t\t\t//printf(\"%d\",pos[k][0]);\n\t\t\t\t//printf(\"%d\",pos[k][1]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif((pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1])||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]))\n\t\t{\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tn--;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9650455927051672, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9de386887b6fff3476130ef9e17580a9", "bug_code_uid": "9b73f19c6c7ad8881292eb164dde9097", "src_uid": "5c63f91eb955cb6c3172cb7c8f78976c", "apr_id": "4a3f4f2bba0969d45c1c417562ac3293", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[5005],i,c,n,num,max,min,t;\nint main()\n{\t\n\tscanf(\"%d\",&n);\n\tnum = n;\n\n\tmemset(a, 0, sizeof(a));\n\tmax = 0; min = 5000;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\",&c);\n\t\tif (a[c]<2) a[c]++;\n\t\telse num--;\n\t\tmax = max>c? max: c;\n\t\tmin = min<c? min: c;\n\t}\n\n\tif (a[max] == 2) \n\t{\n\t\ta[max]--;\n\t\tnum--;\n\t}\n\n\tprintf(\"%d\\n\",num);\n\tif (num == 1) \n\t{\n\t\tprintf(\"%d\\n\",min);\n\t\treturn 0;\n\t}\n\n\tif (a[min] == 1) t=min+1;\n\telse t = min;\n\tfor (i = t; i <= max; i++)\n\t\tif (a[i]) \n\t\t{\n\t\t\tprintf(\"%d \",i);\n\t\t\ta[i]--;\n\t\t}\n\tfor (i = max; i > min; i--)\n\t\tif (a[i]) \n\t\t{\n\t\t\tprintf(\"%d \",i);\n\t\t\ta[i]--;\n\t\t}\n\tprintf(\"%d\\n\",a[min]);\n\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint a[5005],i,c,n,num,max,min,t;\nint main()\n{\t\n\tscanf(\"%d\",&n);\n\tnum = n;\n\n\tmemset(a, 0, sizeof(a));\n\tmax = 0; min = 5000;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\",&c);\n\t\tif (a[c]<2) a[c]++;\n\t\telse num--;\n\t\tmax = max>c? max: c;\n\t\tmin = min<c? min: c;\n\t}\n//\tprintf(\"%d %d %d\\n\",max,min,num);\n\n\tif (a[max] == 2) \n\t{\n\t\ta[max]--;\n\t\tnum--;\n\t}\n\n\tprintf(\"%d\\n\",num);\n\tif (num == 1) \n\t{\n\t\tprintf(\"%d\\n\",min);\n\t\treturn 0;\n\t}\n\n\tif (a[min] == 1) t=min+1;\n\telse t = min;\n\tfor (i = t; i <= max; i++)\n\t\tif (a[i]) \n\t\t{\n\t\t\tprintf(\"%d \",i);\n\t\t\ta[i]--;\n\t\t}\n\tfor (i = max; i > min; i--)\n\t\tif (a[i]) \n\t\t{\n\t\t\tprintf(\"%d \",i);\n\t\t\ta[i]--;\n\t\t}\n\tprintf(\"%d\\n\",min);\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7902439024390244, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f8323206cd07d12f9d4400bd51fd70ff", "bug_code_uid": "a1f62a2db898987c112e039684b60064", "src_uid": "28610d192329c78580db354f8dfc4094", "apr_id": "b688be0d550db77a1d207cb4b503adda", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--)\n\t{\n\t\tlong long x,y,k,total = 0,temp,semen,count;\n\t\tscanf(\"%lld %lld %lld\",&x,&y,&k);\n\t\ttotal = k,temp = y * k + k-1, semen = 0,count = 0;\n\t\tprintf(\"%lld\\n\",temp/(x-1) + total);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--)\n\t{\n\t\tlong long x,y,k,total = 0,temp,semen,count,ans;\n\t\tscanf(\"%lld %lld %lld\",&x,&y,&k);\n\t\ttotal = k,temp = y * k + k-1, semen = x - 1;\n\t\tif(temp % semen == 0)\n\t\t{\n\t\t\tans = temp / semen;\n\t\t}\n\t\telse {\n\t\t\tans = temp / semen + 1;\t\n\t\t}\n\t\tprintf(\"%lld\\n\",ans + total);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9945694336695112, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1d92639dbb126c815285769e70e60217", "bug_code_uid": "dbb6d82b63500a7645f09db339898365", "src_uid": "dcc380c544225c8cadf0df8d8b6ffb4d", "apr_id": "cb6b3b197e729eaae51a89b35ad2d6f6", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n    int a[1000];\n\n\n    int n;\n    scanf(\"%d\",&n);\n    int totsum = 0;\n    for (int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            totsum += a[i];\n\n        }\n        int  sum0 = 0,sum1 = 0;\n        for (int i= 1 ; i<n ; i+= 2){\n            sum1 += a[i];\n        }\n        int ans = 0;\n        for (int i = 0 ; i<n ;i++){\n            if(i%2){\n                sum1 = totsum - sum0 - a[i];\n            }\n            else{\n                sum0 = totsum  - sum1 - a[i];\n            }\n\n        if (sum0 == sum1){\n            ans++;\n        }\n        }\n        printf(\"%d\",ans);\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n     int a[100000 * 2];\n\n\n    int n;\n    scanf(\"%d\",&n);\n    int totsum = 0;\n    for (int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            totsum += a[i];\n\n        }\n        int  sum0 = 0,sum1 = 0;\n        for (int i= 1 ; i<n ; i+= 2){\n            sum1 += a[i];\n        }\n        int ans = 0;\n        for (int i = 0 ; i<n ;i++){\n            if(i%2){\n                sum1 = totsum - sum0 - a[i];\n            }\n            else{\n                sum0 = totsum  - sum1 - a[i];\n            }\n\n        if (sum0 == sum1){\n            ans++;\n        }\n        }\n        printf(\"%d\",ans);\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9236234458259325, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3bb98d0579577f72dce93786459bb19d", "bug_code_uid": "92ce715c0b9147f1f7a7b96e4d1c6deb", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "c4378847626a5a9432879884a36d86f5", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n,m,a[102],b[102],i,j,k,l,x=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&b[i]);\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            k=a[i]+b[j];\n            for(l=0;l<m;l++){\n                if(k==b[l])x++;\n            }\n            if(x==0){\n                printf(\"%d %d\\n\",a[i],b[i]);\n                return 0;\n            }\n            x=0;\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n    int n,m,a[102],b[102],i,j,k,l,x=0,z;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&b[i]);\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            k=a[i]+b[j];\n            for(l=0;l<m;l++){\n                if(k==b[l])x++;\n            }\n            for(z=0;z<n;z++){\n                if(k==a[z])x++;\n            }\n            if(x==0){\n                printf(\"%d %d\\n\",a[i],b[j]);\n                return 0;\n            }\n            x=0;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.99880810488677, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "03859bc9c224e348dac8da6adc1772ce", "bug_code_uid": "06fe5a5077f522c7b1403e810f319e2d", "src_uid": "98a8fc06e8265bbf9c16ee3c7b9d0223", "apr_id": "a077337adc863430a4c968584695d6e6", "difficulty": 900, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int t;\n    scanf(\"%i\",&t);\n    while(t--){\n        int i,j,a[3],r=0;\n        for(i=0;i<3;i++)\n            scanf(\"%i\",a+i);\n        \n        for(i=0;i<2;i++)\n            for(j=i+1;j<3;j++)\n                if(a[i]<a[j]){\n                    a[i]^=a[j];\n                    a[j]^=a[i];\n                    a[i]^=a[j];\n                }\n        \n        for(i=0;i<3;i++)    // 1 - \u0431\u043b\u044e\u0434\u043e\n            if(a[i]){\n                r++;\n                a[i]--;\n            }\n            \n        for(i=0;i<2;i++)    // 2 - \u0431\u043b\u044e\u0434\u0430\n            for(j=i+1;j<3;j++)\n                if(a[i]*a[j]){\n                    a[i]--;\n                    a[j]--;\n                    r++;\n                }\n        \n        if(a[0]*a[1]*a[2]>0) // 3 \u0431\u043b\u044e\u0434\u0430\n            r++;\n        \n        printf(\"%i\",r);\n    }\n    return 0-0-0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int t;\n    scanf(\"%i\",&t);\n    while(t--){\n        int i,j,a[3],r=0;\n        for(i=0;i<3;i++)\n            scanf(\"%i\",a+i);\n        \n        for(i=0;i<2;i++)\n            for(j=i+1;j<3;j++)\n                if(a[i]<a[j]){\n                    a[i]^=a[j];\n                    a[j]^=a[i];\n                    a[i]^=a[j];\n                }\n        \n        for(i=0;i<3;i++)    // 1 - \u0431\u043b\u044e\u0434\u043e\n            if(a[i]){\n                r++;\n                a[i]--;\n            }\n            \n        for(i=0;i<2;i++)    // 2 - \u0431\u043b\u044e\u0434\u0430\n            for(j=i+1;j<3;j++)\n                if(a[i]*a[j]){\n                    a[i]--;\n                    a[j]--;\n                    r++;\n                }\n        \n        if(a[0]*a[1]*a[2]>0) // 3 \u0431\u043b\u044e\u0434\u0430\n            r++;\n        \n        printf(\"%i\\n\",r);\n    }\n    return 0-0-0;\n}"}
{"similarity_score": 0.9594659036719122, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a7b0707466d9bb679de307ab3776ae94", "bug_code_uid": "3cabc9e61c1a8948679190a985f1c63b", "src_uid": "3b8969f7f2051d559a1e375ce8275c73", "apr_id": "22c725775f9918d5e256dd03826d71ed", "difficulty": 1200, "tags": ["brute force", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint run() {\r\n    int n = 0;\r\n    char c;\r\n    scanf(\"%d %c\", &n, &c);\r\n    fflush(stdin);\r\n\r\n    char* s = (char*)malloc(sizeof(char)*(n+1));\r\n    scanf(\"%s\", s);\r\n    fflush(stdin);\r\n\r\n    int hasDifferentChar = 0;\r\n    int maxSameCharIndex = -1;\r\n    for (int i = n-1; i >= 0 && (!hasDifferentChar || maxSameCharIndex < 0); --i) {\r\n        if (s[i] != c) {\r\n            if (!hasDifferentChar) {\r\n                hasDifferentChar = 1;\r\n            }\r\n        } else {\r\n            if (i > maxSameCharIndex) {\r\n                maxSameCharIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!hasDifferentChar) {\r\n        printf(\"0\\n\");\r\n    } else {\r\n        if (maxSameCharIndex > n/2) {\r\n            printf(\"1\\n%d\\n\", maxSameCharIndex+1);\r\n        } else {\r\n            printf(\"2\\n%d %d\\n\", n, n-1);\r\n        }\r\n    }\r\n\r\n    free(s);\r\n    return 0;\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 0; i < n; ++i) {\r\n        run();\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint run() {\r\n    int n = 0;\r\n    char c;\r\n    scanf(\"%d %c\", &n, &c);\r\n\r\n    char* s = (char*)malloc(sizeof(char)*(n+1));\r\n    scanf(\"%s\", s);\r\n\r\n    int hasDifferentChar = 0;\r\n    int maxSameCharIndex = -1;\r\n    for (int i = n-1; i >= 0 && (!hasDifferentChar || maxSameCharIndex < 0); --i) {\r\n        if (s[i] != c) {\r\n            if (!hasDifferentChar) {\r\n                hasDifferentChar = 1;\r\n            }\r\n        } else {\r\n            if (i > maxSameCharIndex) {\r\n                maxSameCharIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!hasDifferentChar) {\r\n        printf(\"0\\n\");\r\n    } else {\r\n        if (maxSameCharIndex+1 > n/2) {\r\n            printf(\"1\\n%d\\n\", maxSameCharIndex+1);\r\n        } else {\r\n            printf(\"2\\n%d %d\\n\", n, n-1);\r\n        }\r\n    }\r\n\r\n    free(s);\r\n    return 0;\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 0; i < n; ++i) {\r\n        int ans = run();\r\n        // printf(\"%d\\n\", ans);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7525987525987526, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "4019f678f0053c23edecddd566c6c96e", "bug_code_uid": "d97dceb4daa0852131fcbea756fab343", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "9e95968d77aca4637dcb3f701a090865", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,i; \r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++) {\r\n        scanf(\"%d\",&rating);\r\n        {\r\n        if(1900<=rating)\r\n             printf(\"Division 1\");\r\n        if(1600<=rating<=1899)\r\n             printf(\"Division 2\");\r\n        if(1400<=rating<=1599)\r\n             printf(\"Division 3\");\r\n        if(rating<=1300)\r\n             printf(\"Division 4\");\r\n    }\r\n    }\r\n    return 0;\r\n}\r\n             \r\n        \r\n        ", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,rating,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++) {\r\n        scanf(\"%d\",&rating);\r\n        {\r\n            if(1900<=rating)\r\n               printf(\"Division 1\\n\");\r\n            else if(1600<=rating&&rating<=1899)\r\n               printf(\"Division 2\\n\");\r\n            else if(1400<=rating&&rating<=1599)\r\n               printf(\"Division 3\\n\");\r\n            else if(rating<=1399)\r\n               printf(\"Division 4\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9768399382398353, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d8f53aaaadebc458379dc6d56fa8e4db", "bug_code_uid": "fcbc9ca631c956f4756a4b8a74af2a5e", "src_uid": "e25b247975660c5005bd4da7afd38a56", "apr_id": "27759cf7d4ea611e5a101eb52a196ca4", "difficulty": 1400, "tags": ["data structures", "two pointers", "binary search", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\n\ntypedef struct topic{\n\tint a;\n\tint b;\n} Topic;\n\nint lower_bound(Topic arr[], int n, int x) {\n    int l = 0;\n    int h = n;\n    while (l < h) {\n        int mid = (l + h) / 2;\n        if (x <= (arr[mid].a - arr[mid].b)) {\n            h = mid;\n        } else {\n            l = mid + 1;\n        }\n    }\n    return l;\n}\n\n\nint cmp(const void* first, const void* second){\n\treturn (((Topic*)first)->a - ((Topic*)first)->b) - (((Topic*)second)->a - ((Topic*)second)->b);\n}\n\nint main(void){\n\tint n, count = 0;\n\tTopic arr[200000];\n\tscanf(\"%d\", &n);\n\n\tfor(int i = 0; i < n; i++){\n\t\tscanf(\"%d\", &arr[i].a);\n\t}\n\n\tfor(int i = 0; i < n; i++){\n\t\tscanf(\"%d\", &arr[i].b);\n\t}\n\n\tqsort(arr, n, sizeof(Topic), cmp);\n\n\tfor(int i = 0; i < n; i++){\n\t\tint k = lower_bound(arr, n, arr[i].b - arr[i].a + 1);\n\t\tcount += (k < i) ? (n - k - 1) : (n - k);\n\t}\n\n\tprintf(\"%d\", count / 2);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\n\ntypedef struct topic{\n\tint a;\n\tint b;\n} Topic;\n\nint lower_bound(Topic arr[], int n, int x) {\n    int l = 0;\n    int h = n;\n    while (l < h) {\n        int mid = (l + h) / 2;\n        if (x <= (arr[mid].a - arr[mid].b)) {\n            h = mid;\n        } else {\n            l = mid + 1;\n        }\n    }\n    return l;\n}\n\n\nint cmp(const void* first, const void* second){\n\treturn (((Topic*)first)->a - ((Topic*)first)->b) - (((Topic*)second)->a - ((Topic*)second)->b);\n}\n\nint main(void){\n\tlong long count = 0;\n\tint n;\n\tTopic arr[200000];\n\tscanf(\"%d\", &n);\n\n\tfor(int i = 0; i < n; i++){\n\t\tscanf(\"%d\", &arr[i].a);\n\t}\n\n\tfor(int i = 0; i < n; i++){\n\t\tscanf(\"%d\", &arr[i].b);\n\t}\n\n\tqsort(arr, n, sizeof(Topic), cmp);\n\n\tfor(int i = 0; i < n; i++){\n\t\tint k = lower_bound(arr, n, arr[i].b - arr[i].a + 1);\n\t\tcount += (k < i) ? (n - k - 1) : (n - k);\n\t}\n\n\tprintf(\"%lld\", count / 2);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9925925925925926, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c06e0f8cfa2d4a9aed13a0c653d5ed19", "bug_code_uid": "db20ff9630d5155bb5bee9f031cd9152", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "ecf0a248f39b2f757e5e2131ca914447", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int i,n;\n  scanf(\"%d\",&n);\n  int arr[n],od=0,ev=0,a1,a2;\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%d\",&arr[i]);\n    if(arr[i]%2) od++,a1=i;\n    else ev++,a2=i;\n  }\n  if(od==1)\n    printf(\"%d\",a1);\n  else\n    printf(\"%d\",a2);\n  return 0;    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n  int i,n;\n  scanf(\"%d\",&n);\n  int arr[n],od=0,ev=0,a1,a2;\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%d\",&arr[i]);\n    if(arr[i]%2) od++,a1=i+1;\n    else ev++,a2=i+1;\n  }\n  if(od==1)\n    printf(\"%d\",a1);\n  else\n    printf(\"%d\",a2);\n  return 0;    \n}"}
{"similarity_score": 0.9674861221252974, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "322c02b107747b1a113adfd8ce14fee5", "bug_code_uid": "2b9d1f4e006efcf4d72f0722963268c2", "src_uid": "6451507b21854d5b81aeaf0491ddf584", "apr_id": "e34930e26cc5d3b197a6fc276cd8c399", "difficulty": 1100, "tags": ["greedy", "implementation", "data structures", "binary search", "dfs and similar"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h> \n#include <string.h>\nconst int MAXLEN=2e5+9;\nchar buf[MAXLEN];\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    getchar();\n    while(t--){\n        char ch;\n        int d=0;\n        int last=0,pos=0;\n        int len=0;\n        while((ch=getchar())!='\\n'){\n            len+=1;\n            //putchar(ch);\n            pos += 1;\n            if(ch=='R'){\n                int tmp=pos-last;\n                if(tmp>d){\n                    d=tmp;\n                }\n                last=pos;\n            }\n        }\n        if(d<len+1-last){\n            d=len+1-last;\n        }\n        //puts(\"\");\n        printf(\"%d\\n\",d);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h> \n#include <string.h>\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    getchar();\n    while(t--){\n        char ch;\n        int d=0;\n        int last=0,pos=0;\n        int len=0;\n        while((ch=getchar())!='\\n'){\n            len+=1;\n            //putchar(ch);\n            pos += 1;\n            if(ch=='R'){\n                int tmp=pos-last;\n                if(tmp>d){\n                    d=tmp;\n                }\n                last=pos;\n            }\n        }\n        if(d<len+1-last){\n            d=len+1-last;\n        }\n        //puts(\"\");\n        printf(\"%d\\n\",d);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9638752052545156, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e199d1c9c7291dd5866556a7e346010d", "bug_code_uid": "12a800b1a0fe5244adf183e54d6e549e", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "1d12a2c55d79c5ac0f328ba9699d9c5c", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <math.h>\n#include <string.h>\n\n\nint main()\n{\n    int n,x,i,resultant1=0,resultant2=0,resultant3=0,point[3]={0,0,0};\n    scanf(\"%d\",&n);\n    if(n<=100&&n>=1){\n        for(i=0; i<n; i++){\n            for(x=0; x<3; x++){\n                scanf(\"%d\",&point[x]);\n                resultant1 += point[0];\n                resultant2 += point[1];\n                resultant3 += point[2];\n    }}\n        if(resultant1==0 && resultant2==0 && resultant3==0){\n            printf(\"YES\\n\");\n    }\n        else{\n            printf(\"NO\\n\");\n    }}\n\n\n\n\n\n\n return 0;", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <math.h>\n#include <string.h>\n\n\nint main()\n{\n    int n,x,i,resultant1=0,resultant2=0,resultant3=0,point[3]={0,0,0};\n    scanf(\"%d\",&n);\n    if(n<=100&&n>=1){\n        for(i=0; i<n; i++){\n            for(x=0; x<3; x++){\n                scanf(\"%d\",&point[x]);}\n            resultant1 += point[0];\n            resultant2 += point[1];\n            resultant3 += point[2];\n        }\n        if(resultant1==0 && resultant2==0 && resultant3==0){\n            printf(\"YES\\n\");\n    }\n        else{\n            printf(\"NO\\n\");\n    }}\n\n\n\n\n\n\n\n\n return 0;\n}"}
{"similarity_score": 0.4754521963824289, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "ab34f02564c12a847a2d002c3e1e4921", "bug_code_uid": "982725d087e5b2032cdf002d93b7aaf8", "src_uid": "5de66fbb594bb317654366fd2290c4d3", "apr_id": "b1882bc49b54361269df028ee504ff39", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=1; i<=n; i++)\n    {\n        int c=0,f=1;\n        char a[101],*p;\n        gets(a);\n        p=a;\n        while(*p!='\\0')\n        {\n            if(f==1)\n            {\n                if(*p=='1')\n                    f=0;\n                p++;\n            }\n            else\n            {\n                if(*p=='0')\n                {\n                    c++;\n                }\n                p++;\n            }\n        }\n        printf(\"%d\\n\",c);\n    }\n\n   return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int k,i,j,n,count,flag1;\n\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=1; i<=n; i++)\n    {\n        char a[100];\n        count=0;\n        flag1=0;\n        gets(a);\n        j=strlen(a);\n        for(k=0; k<j; k++)\n        {\n            if(a[k]=='1')\n                flag1=1;\n            if(a[k]=='0'&&flag1==1)\n                count++;\n        }\n        for(k=j-1; k>=0; k--)\n        {\n            if(a[k]=='0'&&flag1==1)\n                count--;\n            else\n                break;\n        }\n        printf(\"%d\\n\",count);\n\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4425770308123249, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0caf0564f0ed321f0c03d02c3407208d", "bug_code_uid": "9ae242f646ec6ec3e1d9c72a5aa21980", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "8a98006446c8e5a217df027ed577b52c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a;\n\tint k;\n\tscanf(\"%d\",&a);\t\n\tscanf(\"%d\",&k);\n\tint distance = a*k;\n\tprintf(\"%d\",distance);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tlong long int k,a,b,t;\n\tlong long sum;\n\tscanf(\"%I64d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%I64d%I64d%I64d\",&a,&b,&k);\n\t\tsum=(a*(k-(k/2)))-(b*(k/2));\n\t\tprintf(\"\\n%I64d\",sum);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3955094991364421, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "064b663758d2d01af738ef57cfd4465b", "bug_code_uid": "7a1b8d79358d60f68ed3022c0ca51d20", "src_uid": "e63de0fffd00b2da103545a7f1e405be", "apr_id": "6111aea76b4c9f1603e0ee150ccc60d6", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k,a;\n    int j=0;\n    int i=1;\n    int cont=1;\n    int s=0;\n    scanf(\"%d\",&n);\n    int tab[100000];\n    for(k=0;k<n;k++)\n    {\n        scanf(\"%d\",&tab[k]);\n        if (tab[k]==k)\n        {\n            s=s+1;\n        }\n    }\n    while(i<n){\n            j=0;\n            while((j<i)&&(cont==1))\n        {\n            if(tab[i]==j)\n            {\n                tab[i]=a;\n                tab[i]=tab[j];\n                tab[j]=a;\n                s=s+1;\n                cont=0;\n            }\n            j=j+1;\n        }\n        i=i+1;\n    }\n\n    printf(\"%d\",s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k,i;\n    int s1=0;\n    int s=0;\n\n    scanf(\"%d\",&n);\n    int tab[100000];\n    for(k=0;k<n;k++)\n    {\n        scanf(\"%d\",&tab[k]);\n    }\n   for (i=0;i<n;i++)\n   { if (tab[i]==i)\n        {\n            s=s+1;\n        }\n       else if (tab[tab[i]]==i)\n       {\n           s1=s1+1;\n       }\n   }\n   if(s==n)\n   {\n       printf(\"%d\",s);\n   }\n   else if(s1>0)\n   {\n       printf(\"%d\",s+2);\n   }\n   else if(s1==0)\n   {\n       printf(\"%d\",s+1);\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.24570673712021135, "equal_cnt": 25, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "334504cc9c72d80ce7606c8249cd20d6", "bug_code_uid": "3f259cd6fc2643fdb9b77a8fe785be16", "src_uid": "a27ad7c21cd6402bfd082da4f6c7ab9d", "apr_id": "ba8b0f8af6faebb40910665b79bdf053", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,n,m,i,j,l;\n    scanf(\"%d\",&t);\n    while(t--){\n        char s[101],t[101],p[101];\n        int a[127]={0},b[127]={0};\n        scanf(\"%s%s%s\",&s,&t,&p);\n        l=strlen(t);\n        m=strlen(s);\n        n=strlen(p);\n        j=0;\n        if(s[0]==t[0])\n        j++;\n        if(s[m-1]==t[l-1])\n        j++;\n        for(i=0;i<m;i++){\n            a[s[i]]++;\n        }\n        for(i=0;i<n;i++){\n            a[p[i]]++;\n        }\n        for(i=0;i<l;i++){\n            b[t[i]]++;\n        }n=1;\n        if(j==2){\n            for(i=0;i<l;i++){\n            if(a[t[i]]<b[t[i]])\n            n=0;\n            //printf(\"%d %d\\n\",a[t[i]],b[t[i]]);\n            }\n        }\n        if(j==2&&n==1) printf(\"Yes\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,c=0,i,j,k=0,d=0;\n    char s[101],t[101],p[101];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%s%s%s\",s,t,p);\n        for(i=0; i<strlen(t); i++)\n        {\n            if(t[i]==s[k])\n                k++,c++;\n            else\n                for(j=0; j<strlen(p); j++)\n                    if(t[i]==p[j])\n                    {\n                        d++;\n                        c++;\n                        p[j]='1';\n                        break;\n                    }\n        }\n        if(c==strlen(t)&&(strlen(s)+d==strlen(t)))\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n        c=0;\n        k=0;\n        d=0;\n    }\n    return 0;\n}"}
{"similarity_score": 0.999195494770716, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8d1116b47f6e53f78e4ab351bcea4a84", "bug_code_uid": "260583f579649ae5fa4a4355a3b61b8b", "src_uid": "7f3d3112f662caac747ca9c32de4e658", "apr_id": "e28d46826c7c6f4077a20e7358b4be87", "difficulty": 1600, "tags": ["two pointers", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int pep[200002];\n    long long int cum[200002];\n    long long int max = -1, sum;\n    long long int strt_tym, n, s, f, i, a;\n\n    scanf(\"%I64d\", &n);\n\n    for(i = 1; i <= n; i++){\n        scanf(\"%I64d\", &a);\n        pep[i] = a;\n        pep[i+n] = a;\n\n    }\n\n    scanf(\"%I64d %I64d\", &s, &f);\n\n    for(i = s; i <= 2*n; i++){\n        cum[i] = cum[i-1] + pep[i];\n    }\n\n\n    for(i = 1; i <= n; i++){\n        sum = cum[f-i+n] - cum[s-i+n];\n        if(sum >= max){\n            max = sum;\n            strt_tym = i;\n        }\n    }\n\n    printf(\"%I64d\\n\", strt_tym);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int pep[200002];\n    long long int cum[200002];\n    long long int max = -1, sum;\n    long long int strt_tym, n, s, f, i, a;\n\n    scanf(\"%I64d\", &n);\n\n    for(i = 1; i <= n; i++){\n        scanf(\"%I64d\", &a);\n        pep[i] = a;\n        pep[i+n] = a;\n\n    }\n\n    scanf(\"%I64d %I64d\", &s, &f);\n\n    for(i = s; i <= 2*n; i++){\n        cum[i] = cum[i-1] + pep[i];\n    }\n\n\n    for(i = 1; i <= n; i++){\n        sum = cum[f-i+n] - cum[s-i+n];\n        if(sum > max){\n            max = sum;\n            strt_tym = i;\n        }\n    }\n\n    printf(\"%I64d\\n\", strt_tym);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9344729344729344, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ee6b05abae1fcc7f2054bd80fddbf979", "bug_code_uid": "4cd8e6b6f3328fa03e13f409744c2d36", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "9c44197a751385d3924f863fa75df968", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[4],b[4]=\"X++\";\n    int n,i,x=0,j;\n    scanf(\"%d\",&n);\n\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%s\",a);\n            j=strcmp(a,b);\n            if(j==0)\n                x++;\n            else\n                --x;\n        }printf(\"%d\\n\",x);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[4],b[4]=\"X++\",c[4]=\"++X\";\n    int n,i,x=0,j,k;\n    scanf(\"%d\",&n);\n\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%s\",a);\n            j=strcmp(a,b);\n            k=strcmp(a,c);\n            if(j==0||k==0)\n                x++;\n            else\n                --x;\n        }printf(\"%d\\n\",x);\n    return 0;\n}\n"}
{"similarity_score": 0.9956521739130435, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e29e3ff75b9aa38a5304bfbf37e65d03", "bug_code_uid": "33f8b0c00960fa3ccbb914d125cf2061", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "5219c40b36edbaee81f16d195ce0817b", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int n,x=2,c=3,m=4;\n\t\tscanf(\"%d\",&n);\n\t\twhile(1)\n\t\t{\n\t\t\tif(n%c==0)\n\t\t\tbreak;\n\t\t\tc+=m;\n\t\t\tm*=2;\n\t\t\tx++;\n\t\t}\n\t\tprintf(\"%lld\\n\",n/c);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int n,x=2,c=3,m=4;\n\t\tscanf(\"%lld\",&n);\n\t\twhile(1)\n\t\t{\n\t\t\tif(n%c==0)\n\t\t\tbreak;\n\t\t\tc+=m;\n\t\t\tm*=2;\n\t\t\tx++;\n\t\t}\n\t\tprintf(\"%lld\\n\",n/c);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.3333333333333333, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "f75fde5a759cae24169bd09c7a2281d6", "bug_code_uid": "65641dee8f65297f2e06ae94e9a53570", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "6c78710f8a41a16ec31399463c2ceda1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,temp,flag=0;\n    scanf(\"%d\",&n);\n    int arr[n-1];\n    temp=n-1;\n    int a=1;\n    for(i=0;i<n-1;i++) scanf(\"%d\",&arr[i]);\n    while(temp--){\n    for(i=0;i<n-1;i++){\n        if(arr[i]==a){\n                flag=1;\n                break;\n        }\n    }\n\n    if(flag==0) break;\n    flag=0;\n    a++;\n    }\n    printf(\"%d\",a);\n}\n", "fixed": "#include<stdio.h>\nint cnt[1000000];\nint main()\n{\n    int n,i,temp,flag=0;\n    scanf(\"%d\",&n);\n    int arr[n-1];\n    for(i=0;i<n-1;i++){\n            scanf(\"%d\",&arr[i]);\n            cnt[arr[i]-1]++;\n    }\n    for(i=0;i<n-1;i++){\n        if(cnt[i]==0) break;\n    }\n    printf(\"%d\",i+1);\n}\n"}
{"similarity_score": 0.9430633520449078, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "01f5fe5925799bc6c63fdf94e35b3e49", "bug_code_uid": "e5c839d4db1c93b34031d9065f4109e8", "src_uid": "89b4a7b4a6160ce784c588409b6ce935", "apr_id": "2a6b95aa2dad8a4c287c5af376ffa733", "difficulty": 1600, "tags": ["data structures", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint top=-1;\n\nchar arr[100000];\n\nvoid push(char c)\n{\n    if(top==100000)\n        printf(\"Stack Overflow\");\n    else\n    arr[++top]=c;\n}\nvoid pop()\n{\n     top--;\n}\nint isEmpty()\n{\n    if(top == -1) return 1;\n    else return 0;\n}\nchar *Top()\n{\n    return arr[top];\n}\n\nint main()\n{\n    int i;\n    //scanf(\"%s\",arr);\n    fgets(arr, sizeof(arr), stdlin);\n    for(i=0;i<strlen(arr);i++)\n    {\n        if (isEmpty()==1 || Top()!=arr[i])\n               push(arr[i]);\n\n        else\n           pop();\n\n\n    }\n    isEmpty()==1? printf(\"YES\"):printf(\"NO\");\n     return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint top=-1;\n\nchar arr[100000];\n\nvoid push(char c)\n{\n    if(top==100000)\n        printf(\"Stack Overflow\");\n    else\n    arr[++top]=c;\n}\nvoid pop()\n{\n     top--;\n}\nint isEmpty()\n{\n    if(top == -1) return 1;\n    else return 0;\n}\nchar *Top()\n{\n    return arr[top];\n}\n\nint main()\n{\n    int i,length;\n    //scanf(\"%s\",arr);\n    gets(arr);\n    length= strlen(arr);\n    for(i=0;i<length;i++)\n    {\n        if (isEmpty()==1 || Top()!=arr[i])\n               push(arr[i]);\n\n        else\n           pop();\n\n\n    }\n    isEmpty()==1? printf(\"YES\"):printf(\"NO\");\n     return 0;\n\n}\n"}
{"similarity_score": 0.1858267716535433, "equal_cnt": 23, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "6643610f4c04aa06db9d2b9ac5d96b1b", "bug_code_uid": "0b53fc795a4d15835e48e079ca6679a2", "src_uid": "296560688b83b9b6de740568b8deffd1", "apr_id": "b7fe2c66423c2651a651b4c7bd34f1d6", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, m, k, l, i, j, row, value, column;\n\tint x , y;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tx = k;\n\ty = 3;\n\tint B[x][y];\n\tint A[n][m];\n\tfor(i =1; i <= x; i++)\n\t{\n\t\tfor(j = 1; j <= y; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &B[i][j]);\n\t\t}\n\t}\n\tfor(i =1; i <= n; i++)\n\t{\n\t\tfor(j = 1; j <= m; j++)\n\t\t{\n\t\t\tA[i][j] = 0;\n\t\t}\n\t}\n\n\twhile(k > 1)\n\t{\n\tfor(i = 1; i <= x; i++)\n\t{\n\t\tj = 1;\n\t\tswitch(B[i][j])\n\t\t{\n\t\t \tcase 1:\n\t\t \trow = B[i][j+1];\n\t\t \tvalue = B[i][j+2];\n\t\t \tfor(j =1; j <= m; j++)\n\t\t \t{\n\t\t \t\tA[row][j] = value;\n\t\t \t}\n\t\t \tbreak;\n\t\t \tcase 2:\n\t\t \tcolumn = B[i][j+1];\n\t\t \tvalue = B[i][j+2];\n\t\t \tfor(l =1; l <= n; l++)\n\t\t \t{\n\t\t \t\tA[l][column] = value;\n\t\t \t}\n\t\t \tbreak;\n\t\t}\n\t}\n\tk--;\n\n\t}\n\t\n\tfor(i =1; i <= n; i++)\n\t{\n\t\tfor(j = 1; j <= m; j++)\n\t\t{\n\t\t\tprintf(\"%d \", A[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nvoid create(int x,  int n, int m, int k, int trans);\nint main()\n{\n\tint n, m, k, trans;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tif(n <= m)\n\t{\n\t\ttrans = 0;\n\t\tcreate(k,n,m,k,trans);\n\t}\n\telse\n\t{\n\t\ttrans = 1;\n\t\tcreate(k,m,n,k,trans);\n\t}\n\t\n\n\treturn 0;\n}\n\nvoid create(int x, int n, int m, int k, int trans)\n{\n\n\tint l, i, j,row, value, row1;\n\tint B[k][3];\n\tint A[n][m];\n\tfor (i=0; i<k; i++)\n\t\tscanf(\"%d %d %d\", &B[i][0], &B[i][1], &B[i][2]);\n\tif(trans)\n\t\trow1=2;\n\telse\n\t\trow1=1;\n\tfor(i =0; i < n; i++)\n\t{\n\t\tfor(j = 0; j < m; j++)\n\t\t{\n\t\t\tA[i][j] = 0;\n\t\t}\n\t}\n\n\tfor(i = 0; i < k; i++)\n\t{\n\t\t\trow = B[i][1];\n\t\t \tvalue = B[i][2];\n\t\t\n\t\t\tif(B[i][0] == row1)\n\t\t\t{\t\n\t\t\t \tfor(j =0; j < m; j++)\n\t\t\t \t{\n\t\t\t \t\tA[row-1][j] = value;\n\t\t\t \t}\n\t\t \t}\n\t\t \telse\n\t\t \t{\n\t\t\t \tfor(l =0; l < n; l++)\n\t\t\t \t{\n\t\t\t \t\tA[l][row-1] = value;\n\t\t\t \t}\n\t\t\t}\n\t}\n\t\n\tif(trans == 0)\n\t{\n\t\tfor(i =0; i < n; i++)\n\t\t{\n\t\t\tfor(j = 0; j < m; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", A[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\telse\n\t{\n\n\t\tfor(i =0; i < m; i++)\n\t\t{\n\t\t\tfor(j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", A[j][i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\n}"}
{"similarity_score": 0.8128654970760234, "equal_cnt": 20, "replace_cnt": 10, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "5ba10330470b38e328d169067c22be80", "bug_code_uid": "f42832c9b1edfe3130bcef421e2828b9", "src_uid": "7e765c1b0e3f3e9c44de825a79bc1da2", "apr_id": "fb07a564de20a9b636fd526511e66666", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main()\n{\n int times;\n scanf(\"%d\",&times);\n while(times--)\n {\n  int *a,*b;  \n  a=(int*)malloc(n*sizeof(int));\n  b=(int*)malloc(n*sizeof(int));\n  int n,x;\n  int text=0;\n  scanf(\"%d %d\",&n,&x);  \n  for(int i=0;i<n;i++)\n  scanf(\"%d\",&a[i]);\n  for(int i=0;i<n;i++)\n  scanf(\"%d\",&b[i]);\n  for(int i=0;i<n;i++)\n  {       \n     if(a[i]+b[n-i-1]>x)\n     {\n   printf(\"No\\n\");\n   text=1;\n   break;\n   }  \n      \n  }\n  if(text==0)\n  printf(\"Yes\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n int times;\n scanf(\"%d\",&times);\n while(times--)\n {\n  int *a,*b;\n  int n,x;\n  int text=0;\n  scanf(\"%d %d\",&n,&x);  \n  a=(int*)malloc(n*sizeof(int));\n  b=(int*)malloc(n*sizeof(int));\n  for(int i=0;i<n;i++)\n  scanf(\"%d\",&a[i]);\n  for(int j=0;j<n;j++)\n  scanf(\"%d\",&b[j]);\n  for(int k=0;k<n;k++)\n  {       \n     if(a[k]+b[n-k-1]>x)\n     {\n       printf(\"No\\n\");\n       text=1;\n       break;\n\t }      \n  }\n  if(text==0)\n  printf(\"Yes\\n\");\n  }\n  return 0;\n}"}
{"similarity_score": 0.873218304576144, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "6c8895cec3142e8ffcb55091b3800faa", "bug_code_uid": "6fff07d9a84ed3496951ac65331799ea", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "fb0c9f852e66bdfa51ea2876fcd87af7", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    double e,max;\n    long long int i,j,n,l,a[1000],temp,b,c,d;\n    scanf(\"%I64d%I64d\",&n,&l);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=1; i<n; i++)\n    {\n        for(j=0; j<i; j++)\n        {\n            if(a[j]>a[i])\n            {\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n\n    b=a[0];\n    c=l-a[n-1];\n    if(b>c)\n        max=b;\n    else\n        max=c;\n    for(i=0; i<n-1; i++)\n    {3\n        d=a[i+1]-a[i];\n        e=(double)d/2;\n        if(e>max)\n            max=e;\n    }\n    printf(\"%lf\",max);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    double e,max,mx;\n    long long int i,j,n,l,a[1000],temp,b,c,d;\n    scanf(\"%I64d%I64d\",&n,&l);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=1; i<n; i++)\n    {\n        for(j=0; j<i; j++)\n        {\n            if(a[j]>a[i])\n            {\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n\n    b=a[0]-0.0;\n    c=l-a[n-1];\n    if(b>c)\n        max=(double)b;\n    else\n        max=(double)c;\n        mx=0;\n    for(i=0; i<n-1; i++)\n    {\n        e=(a[i+1]-a[i])/2.0;\n        if(e>mx)\n            mx=e;\n    }\n    if(mx>max)\n        printf(\"%f\",mx);\n    else\n    printf(\"%f\",max);\n}\n"}
{"similarity_score": 0.6617336152219874, "equal_cnt": 4, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "144838b029db08f63f333e4391120d06", "bug_code_uid": "74a311bcf97204d2ee2ace888125bc16", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "f3acc6f55e6738e03504b174db95e8d4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint fx(int x, int a){\r\n    return x/a + x%a;\r\n} \r\nint max(int a, int b ){\r\n    if(a>b)\r\n    return a;\r\n    else\r\n    return b;\r\n}\r\nint main(void) {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t    int l, r, a, m1, m2=0;\r\n\t    scanf(\"%d %d %d\", &l, &r, &a);\r\n\t    m1 = fx(r, a);\r\n\t    while(r!=l){\r\n\t      if(r%a==0){\r\n\t      m2 = fx(r-1, a);\r\n\t      break;\r\n\t      }\r\n\t      r--;\r\n\t    } \r\n\t        \r\n\t    printf(\"%d\\n\", max(m1, m2));\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n", "fixed": "#include <stdio.h>\r\n\r\nint fx(int x, int a){\r\n    return x/a + x%a;\r\n} \r\nint max(int a, int b ){\r\n    if(a>b)\r\n    return a;\r\n    else\r\n    return b;\r\n}\r\nint main(void) {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t    int l, r, a, m1, m2=0;\r\n\t    scanf(\"%d %d %d\", &l, &r, &a);\r\n\t    m1 = fx(r, a);\r\n\t   if(r%a==0&&r!=l)\r\n\t   m2 = fx(r-1, a);\r\n\t   else if(r - r%a - 1>=l)\r\n\t   m2 = fx(r-r%a-1, a);\r\n\t        \r\n\t    printf(\"%d\\n\", max(m1, m2));\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n"}
{"similarity_score": 0.9927536231884058, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ab399a67827d8f6116b41880ed97058e", "bug_code_uid": "392411d894f9e025d01b6dd91c6797e2", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "8a59b78f468f0ee2899fec7be764406f", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    int a,b,c;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        //b=360/(180-a);\n        //c=b%1.0;\n        if(360%(180-a)==0)\n            printf(\"YES\");\n        else\n            printf(\"NO\");\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    int a,b,c;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        //b=360/(180-a);\n        //c=b%1.0;\n        if(360%(180-a)==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.9916279069767442, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "134e1d2c8ce846fc4200daef90e197cc", "bug_code_uid": "c36362bb8974caa4a87019a5f348a694", "src_uid": "f84b7122ffc7f585fd4ac8f1b3ef977a", "apr_id": "cda11674b7a591880c4b06912cfc9747", "difficulty": 1800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    long n,m,i,t,Min,Max;\n    double base,x;\n    scanf(\"%d\",&n);\n    n=n<<1;\n    for(i=1,m=base=0;i<=n;i++){\n       scanf(\"%lf\",&x);\n       base+=x-floor(x);\n       if(ceil(x)>floor(x)) m++;\n    }\n    if(m<=n/2){Min=1;Max=m;}\n      else {Min=m-n/2;Max=n/2;}\n    if(ceil(base)-base<=0.5) t=ceil(base);\n      else t=floor(base);\n    if(t<Min) printf(\"%.3lf\",-base+Min);\n      else\n        if(t>Max) printf(\"%.3lf\",base-Max);\n          else  printf(\"%.3lf\",fabs(base-t));\n    return 0;\n}\n\n\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int n,m,i,t,Min,Max;\n    double base,x;\n    scanf(\"%d\",&n);\n    n=n<<1;\n    for(i=1,m=base=0;i<=n;i++){\n       scanf(\"%lf\",&x);\n       base+=x-floor(x);\n       if(ceil(x)>floor(x)) m++;\n    }\n    if(m<=n/2){Min=0;Max=m;}\n      else {Min=m-n/2;Max=n/2;}\n    if(ceil(base)-base<=0.5) t=ceil(base);\n      else t=floor(base);\n    if(t<Min) printf(\"%.3lf\",-base+Min);\n      else\n        if(t>Max) printf(\"%.3lf\",base-Max);\n          else  printf(\"%.3lf\",fabs(base-t));\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9980713596914176, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4d4f42ebce7cc53d94326a8232c753aa", "bug_code_uid": "c3e4ca95b9470a3c3b0a30fe1af5f9fb", "src_uid": "3cd56870a96baf8860e9b7e89008d895", "apr_id": "19d777cbaf1e00e792d3d7b3b47d684e", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n   int n,k;\r\n   scanf(\"%d\",&n);\r\n   for(int i=1;i<=n;i++)\r\n   { \r\n       int check1,check2,check3;\r\n       char ar[51];\r\n       scanf(\"%s\",ar);\r\n       k=strlen(ar);\r\n      \r\n       char ar1[51],ar2[51],ar3[51];\r\n       for(int h=0;h<=(k-1);h++)\r\n       {\r\n           if((h%3)==0)\r\n           {\r\n               ar1[h]='Y';\r\n               ar2[h]='e';\r\n               ar3[h]='s';\r\n           }\r\n            if((h%3)==1)\r\n           {\r\n               ar1[h]='e';\r\n               ar2[h]='s';\r\n               ar3[h]='Y';\r\n           }\r\n            if((h%3)==2)\r\n           {\r\n               ar1[h]='s';\r\n               ar2[h]='Y';\r\n               ar3[h]='e';\r\n           }\r\n           \r\n       }\r\n       ar1[k]='\\0';\r\n       ar2[k]='\\0';\r\n       ar3[k]='\\0';\r\n      check1=strcmp(ar,ar1);\r\n      check2=strcmp(ar,ar2);\r\n      check3=strcmp(ar,ar3);\r\n      if((check1*check2*check3)==0)\r\n      {\r\n          printf(\"YES\");\r\n      }\r\n      else printf(\"NO\");\r\n   }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n   int n,k;\r\n   scanf(\"%d\",&n);\r\n   for(int i=1;i<=n;i++)\r\n   { \r\n       int check1,check2,check3;\r\n       char ar[51];\r\n       scanf(\"%s\",ar);\r\n       k=strlen(ar);\r\n      \r\n       char ar1[51],ar2[51],ar3[51];\r\n       for(int h=0;h<=(k-1);h++)\r\n       {\r\n           if((h%3)==0)\r\n           {\r\n               ar1[h]='Y';\r\n               ar2[h]='e';\r\n               ar3[h]='s';\r\n           }\r\n            if((h%3)==1)\r\n           {\r\n               ar1[h]='e';\r\n               ar2[h]='s';\r\n               ar3[h]='Y';\r\n           }\r\n            if((h%3)==2)\r\n           {\r\n               ar1[h]='s';\r\n               ar2[h]='Y';\r\n               ar3[h]='e';\r\n           }\r\n           \r\n       }\r\n       ar1[k]='\\0';\r\n       ar2[k]='\\0';\r\n       ar3[k]='\\0';\r\n      check1=strcmp(ar,ar1);\r\n      check2=strcmp(ar,ar2);\r\n      check3=strcmp(ar,ar3);\r\n      if((check1*check2*check3)==0)\r\n      {\r\n          printf(\"YES\\n\");\r\n      }\r\n      else printf(\"NO\\n\");\r\n   }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9941520467836257, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a03b093e44fb63144e68f7dee9425760", "bug_code_uid": "50d610cf92c974b953d60c0f6d0879e4", "src_uid": "8864c6a04fed970fcbc04e220df9d88d", "apr_id": "21959368b0425af703b770c03a6f564b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define min(x,y) x>y?y:x\n#define max(x,y) x>y?x:y\n\nint main() {\n\tint T, x, y, big, small;\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tbig = max(x,y);\n\t\tsmall = min(x,y);\n\t\tif(big-small>=2){\n\t\t\tprintf(\"%d\", big*2-1);\n\t\t}\n\t\telse printf(\"%d\", big + small);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define min(x,y) x>y?y:x\n#define max(x,y) x>y?x:y\n\nint main() {\n\tint T, x, y, big, small;\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tbig = max(x,y);\n\t\tsmall = min(x,y);\n\t\tif(big-small>=2){\n\t\t\tprintf(\"%d\\n\", big*2-1);\n\t\t}\n\t\telse printf(\"%d\\n\", big + small);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8300395256916996, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "21d89876d5a2e86250738261a6d64f2a", "bug_code_uid": "d92e7fed559972efb3ea0b4c0e29b2bc", "src_uid": "eb39ac8d703516c7f81f95a989791b21", "apr_id": "80d08712daba3ad21be59f7c17536743", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint t; scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long i; scanf(\"%lld\",&i);\n\t\tprintf(\"%lld\\n\",i-1);\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i; scanf(\"%d\",&t);\n    while(t--)\n\t{\n\t\tscanf(\"%d\",&i);printf(\"%d\\n\",(i/2)+1);\n\t}\n}\n\n"}
{"similarity_score": 0.9986468200270636, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2533ca079c16780f8168fe9ecd41f762", "bug_code_uid": "d6504b79cc1c7c689b8fa50b370b77cf", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "54190933c4e55f9b6b71816f29f92f0e", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nmain(){\n\tint n,len;\n\tscanf(\"%d\",&n);\n\tchar s[n][100];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%s\",&s[i]);\n\t\ts[i][100]=NULL;\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tlen=strlen(s[i]);\n\t\tif(len>10){\n\t\t\tprintf(\"%c\",s[i][0]);\n\t\t\tprintf(\"%d\",len-2);\n\t\t\tprintf(\"%c\",s[i][len-1]);\n\t\t}\n\t\telse printf(\"%s\",s[i]);\n\t\tif(i<n-1) printf(\"\\n\");\n\t}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nmain(){\n\tint n,len;\n\tscanf(\"%d\",&n);\n\tchar s[n][1000];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%s\",&s[i]);\n\t\ts[i][100]=NULL;\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tlen=strlen(s[i]);\n\t\tif(len>10){\n\t\t\tprintf(\"%c\",s[i][0]);\n\t\t\tprintf(\"%d\",len-2);\n\t\t\tprintf(\"%c\",s[i][len-1]);\n\t\t}\n\t\telse printf(\"%s\",s[i]);\n\t\tif(i<n-1) printf(\"\\n\");\n\t}\n}"}
{"similarity_score": 0.9848308051341891, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "49c196b3102f8f27596d5aee4bfc0ea2", "bug_code_uid": "f4b1ad3a797fec03c1eb61058e50bfcd", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "09926fdb8926a3b7c8fa901ed0b4a1c9", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <iostream>\r\nint main()\r\n{\r\n    int a,b,i,j,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int ar[50000],min=5000,s=0;\r\n        scanf(\"%d\",&a);\r\n        for(i=0;i<a;i++)\r\n        {\r\n        scanf(\"%d\",&ar[i]);\r\n        if(ar[i]<min)\r\n        min=ar[i];\r\n        }\r\n        for(i=0;i<a;i++)\r\n        {\r\n        if(min<ar[i])\r\n        s++;\r\n        }\r\n       printf(\"%d\\n\",s);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int ar[50000],min=5000,s=0;\r\n        scanf(\"%d\",&a);\r\n        for(i=0;i<a;i++)\r\n        {\r\n        scanf(\"%d\",&ar[i]);\r\n        if(ar[i]<min)\r\n        min=ar[i];\r\n        }\r\n        for(i=0;i<a;i++)\r\n        {\r\n        if(min<ar[i])\r\n        s++;\r\n        }\r\n       printf(\"%d\\n\",s);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.35198261814231396, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "eaed1ffb78d6dc9fbd5b2a7ea7746e18", "bug_code_uid": "5b8bee3354e0b128eb17ce8361f83283", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "4ce716956648faeefa766e74c1995cc5", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\n    int n,i,j,k,l,r,max,len;\n    scanf(\"%d\",&n);\n    int arr[n];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n\n    max=0;\n    for(i=0; i<n-1; i++)\n    {\n        int l=i;\n        int r=i+1;\n        int len = 0;\n        int cntl = 1, cntr = 1;\n        for(j=l-1;j>=0;j--)\n        {\n            if(arr[j] == arr[l])\n            {\n                cntl++;\n            }\n            else\n            {\n                break;\n            }\n            \n        }\n        for(j=r+1; j<n && arr[r]!=arr[l]; j++)\n        {\n            if(arr[j] == arr[r])\n            {\n                cntr++;\n            }\n            else\n            {\n                break;\n            }\n            \n        }\n\n        \n        len = 2*((cntl<cntr)?cntl:cntr);\n        if(len>max)\n        {\n            max = len;\n        }\n\n    }\n\n    printf(\"%d\\n\",max);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\n    int n,i,j,k,l,r,max,len,state,cnt1,cnt2;\n    scanf(\"%d\",&n);\n    int arr[n];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n\n    max=0,cnt1=0,cnt2=0;\n    state = arr[0];\n    int cnt[2] = {0,0};\n    \n    for(i=0;i<n;i++)\n    {\n        if(arr[i] == state)\n        {\n            /*if(state==1)\n            {\n                cnt1++;\n            }\n            else\n            {\n                cnt2++;\n            }*/\n            cnt[state-1]++;\n        }\n        else\n        {\n            len = 2 * (cnt[0]<cnt[1]?cnt[0]:cnt[1]);\n            // printf(\"%d--%d\\n\",len,i);\n            state = arr[i];\n            cnt[state-1] = 1;\n            if(len>max)\n            {\n                max = len;\n            }\n        }\n    }\n    len = 2 * (cnt[0]<cnt[1]?cnt[0]:cnt[1]);\n    // printf(\"%d--\\n\",len);\n    if(len>max)\n    {\n        max = len;\n    }\n\n    printf(\"%d\\n\",max);\n\n    return 0;\n}"}
{"similarity_score": 0.9847328244274809, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1478b1ce8409d061473659056f9c4e15", "bug_code_uid": "fe21c5a316a9a53ccaecc244a387fb31", "src_uid": "3270260030fc56dda3e375af4dad9330", "apr_id": "03ec5eb3c00680accb5f44668c4dff73", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    char s[n+1][n+1];\n    for(i=0;i<n;i++)\n        scanf(\"%s\",&s[i][0]);\n        int count=0;\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(s[i][j]=='X'&&s[i-1][j-1]=='X'&&s[i-1][j+1]=='X'&&s[i+1][j-1]=='X'&&s[i+1][j+1]=='X'){\n                count++;\n            }\n        }\n    }\n    printf(\"%d\\n\",count);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    char s[n+2][n+2];\n    for(i=0;i<n;i++)\n        scanf(\"%s\",&s[i][0]);\n        int count=0;\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(s[i][j]=='X'&&s[i-1][j-1]=='X'&&s[i-1][j+1]=='X'&&s[i+1][j-1]=='X'&&s[i+1][j+1]=='X'){\n                count++;\n            }\n        }\n    }\n    printf(\"%d\\n\",count);\n}\n"}
{"similarity_score": 0.8362956033676333, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9cec45ef6d31c21c1750b237a171d3be", "bug_code_uid": "d5c4972bc99d115debd7d08b0617f890", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "7baac8bc6682ef20345713b3e2a82dda", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n\n#include <iostream>\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,x,y;\n    \n    char a[100000];\n    scanf(\"%s\",a);\n    n=strlen(a);\n    i=(100 * (a[n-3]-'0'))+(10 * (a[n-2]-'0'))+(a[n-1]-'0');\n    x=i%4;\n    y=i%2;\n    if(x==0) n=2;\n    else if(x==1) n=5;\n    else if(x==2) n=8;\n    else n=5;\n    \n    if(y==0)\n        n+=1;\n    else n+=4;\n    \n    n++;\n    \n    printf(\"%d\",n%5);\n    //4 ke liye last three digit\n    //3 sum of last three\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,x,y;\n    \n    char a[100005];\n    scanf(\"%s\",a);\n    n=strlen(a);\n    if(n>2)\n    i=(100 * (a[n-3]-'0'))+(10 * (a[n-2]-'0'))+(a[n-1]-'0');\n    else if(n>1)\n            i=(10 * (a[n-2]-'0'))+(a[n-1]-'0');\n    else i=(a[n-1]-'0');\n    x=i%4;\n    y=(a[n-1]-'0')%2;\n    if(x==0) n=2;\n    else if(x==1) n=5;\n    else if(x==2) n=8;\n    else n=5;\n    \n    if(y==0)\n        n+=1;\n    else n+=4;\n    \n    n++;\n    if(n<5) printf(\"%d\",n);\n    else printf(\"%d\",n%5);\n    //4 ke liye last three digit\n    //3 sum of last three\n    return 0;\n}\n\n"}
{"similarity_score": 0.9678362573099415, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "456bd6730d588873d9e8c5bbae278be3", "bug_code_uid": "14d2af7acfe33f128883831f41324b8b", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "4d982f622a665f5fa6fbd35cc66e1275", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\n    int *ptr,t,n,x,sum,maxbeau,minbeau;\n    scanf(\"%d\", &t);\n    while(t--){\n        sum=0;  maxbeau=0;  minbeau=0;\n        scanf(\"%d%d\", &n,&x);\n        ptr = (int*)malloc(n*sizeof(int));\n        for(int i=0;i<n;i++){\n            scanf(\"%d\", ptr+i);\n            sum+=*(ptr+i);\n            if(*(ptr+i)%x==0)\n                maxbeau+=*(ptr+i)/x;\n            else\n                maxbeau+=*(ptr+i)/x + 1;\n        }\n        if(sum%x==0)\n            minbeau = sum/x;\n        else\n            minbeau = sum/x + 1;\n        printf(\"%d %d\\n\", minbeau,maxbeau);\n        free(ptr);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\n    long long *ptr,t,n,x,sum,maxbeau,minbeau;\n    scanf(\"%lld\", &t);\n    while(t--){\n        sum=0;  maxbeau=0;  minbeau=0;\n        scanf(\"%lld%lld\", &n,&x);\n        ptr = (long long int*)malloc(n*sizeof(long long int));\n        for(int i=0;i<n;i++){\n            scanf(\"%lld\", ptr+i);\n            sum+=*(ptr+i);\n            if(*(ptr+i)%x==0)\n                maxbeau+=*(ptr+i)/x;\n            else\n                maxbeau+=*(ptr+i)/x + 1;\n        }\n        if(sum%x==0)\n            minbeau = sum/x;\n        else\n            minbeau = sum/x + 1;\n        printf(\"%lld %lld\\n\", minbeau,maxbeau);\n        free(ptr);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.596816976127321, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "dfa851bd5a870f0701b1450974c1fc99", "bug_code_uid": "c0808f9d591580fa66a048b03b4e2528", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "5dec05317a2143685a2602c8342d2880", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint num_b,i,resp,num_a,n,m,b[3000],a[3000];\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++) scanf(\"%d\",&b[i]);\n\tnum_a=n-1;\n\tresp=0;\n\tnum_b=m-1;\n\twhile(1){\n\t\tif(b[num_b]>=a[num_a]){\n\t\t\tnum_a--;\n\t\t\tnum_b--;\n\t\t}\n\t\telse{\n\t\t\tnum_a--;\n\t\t\tresp++;\n\t\t}\n\t\tif(num_a==-1) break;\n\t\tif(num_b==-1) break;\n\t}\n\tprintf(\"%d\",resp);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint num_b,i,resp,num_a,n,m,b[3000],a[3000];\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++) scanf(\"%d\",&b[i]);\n\tnum_a=0;\n\tresp=0;\n\tnum_b=0;\n\twhile(1){\n\t\tif(b[num_b]>=a[num_a]){\n\t\t\tresp++;\n\t\t\tnum_a++;\n\t\t\tnum_b++;\n\t\t}\n\t\telse num_b++;\n\t\tif(num_b==m || num_a==n) break;\n\t}\n\tprintf(\"%d\",n-resp);\n\treturn 0;\n}\n"}
{"similarity_score": 0.37641154328732745, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a831576a421a50a81487d3ff4ceb0f66", "bug_code_uid": "a6ec4da2f4e2514649f9e5af81eee5ba", "src_uid": "6e5b4d43e64645cf26d5eac31437b1a9", "apr_id": "0de8049afe33ac3e15c7995f7d055c08", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <algorithm>\nusing namespace std;\n\nint a[100001]={0,};\nint main(){\n\tint t,n;\n\tscanf(\"%d\",&t);\n\tfor(int i=0; i<t; i++){\n\t\tint sum=0, maxi=-999999999;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1; i<=n; i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tsum+=a[i];\n\t\t\tif(i<n){\n\t\t\ta[i]=(max(a[i-1],0)+a[i]);\n\t\t\tmaxi=max(maxi,a[i]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\",maxi < sum ? \"YES\":\"NO\");\n\t}\n}\t", "fixed": "#include <stdio.h>\n\nint a[100001]={0,};\nint t,n;\n\t\nint solve(){\n\tlong long sum=0; \n\tfor(int i=1; i<=n; i++){\n\t\tsum+=a[i];\n\t\tif(sum<=0) return 0;\n\t}\n\tsum=0;\n\tfor(int i=n; i>=1; i--){\n\t\tsum+=a[i];\n\t\tif(sum<=0) return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\n\tscanf(\"%d\",&t);\n\tfor(int i=0; i<t; i++){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1; i<=n; i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tif(solve()) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n}\t"}
{"similarity_score": 0.9935483870967742, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "363430fb265c4b97ff98c5b2825037db", "bug_code_uid": "c4f02b04b369c65876e8d261cc24aa4b", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "8bb39f807853faf80cc5ad3ed95677f8", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tfor( int i=0;i<t;i++)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(n<2020)\r\n\t\t\t{printf(\"NO\\n\"); continue;}\r\n\t\tn=n-2021*(n%10);\r\n\t\tif(n==0){printf(\"YES\\n\"); }\r\n        else if(n%2020==0 && n>0){printf(\"YES\\n\");}\r\n\t\telse printf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tfor( int i=0;i<t;i++)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(n<2020)\r\n\t\t\t{printf(\"NO\\n\"); continue;}\r\n\t\tn=n-2021*(n%2020);\r\n\t\tif(n==0){printf(\"YES\\n\"); }\r\n        else if(n%2020==0 && n>0){printf(\"YES\\n\");}\r\n\t\telse printf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.47921225382932164, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "ba6c737d5755da29a899330c229659b6", "bug_code_uid": "af0e2e64b1955ba2d4787a77423a5b2a", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "954c8ab0c45b4fcbe9869390519be447", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n\n{\n      int n,flag,i,j;\n      scanf(\"%d\",&n);\n      if (n%2==0){printf (\"%d\\n\",n*n/2);}\n      else {printf(\"%d\\n\",(n*n+1)/2);}\n      for (i=0;i<n;i++){\n            if (i%2==0){flag=0;}\n            else {flag=1;}\n            for (j=0;j<n;j++){\n                  if(flag==1^j%2==0)printf (\"C\");\n                  else printf(\".\");\n            }\n            printf (\"\\n\");\n      }\n      return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n\n{\n      int n,i,j;\n      scanf(\"%d\",&n);\n      if (n%2==0){printf (\"%d\\n\",n*n/2);}\n            else {printf(\"%d\\n\",(n*n+1)/2);}\n                  for (i=0;i<n;i++){\n                  for (j=0;j<n;j++){\n                        if ((i+j)%2==0)\n                        {putchar ('C');}\n                        else {putchar ('.');}\n                  }\n                        putchar('\\n');\n                  }\n                  return 0;\n                  }"}
{"similarity_score": 0.3716475095785441, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "b26581bf3cbe2b10c1a87dac65ca909d", "bug_code_uid": "72a1f8bc9188cf62f74b138adac45a17", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "befd93ede469d744ab223179e939c1cf", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint n,k,k1,i,j,ans,count=0;\n\tscanf(\"%d %d\",&n,&k);\n\tk1=n*(n+1)*.5;\n\tint r[n],p[k1];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&r[i]);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<=i;j++){\n\t\t\tcount++;\n\t\t\tif(count==k){\n\t\t\t\tans=r[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}if(count==k){\n\t\tbreak;}\n\t}\n\tprintf(\"%d\",ans);\n}\n\t\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,m,i,j,q;\n\tscanf(\"%d %d\",&n,&m);\n\tint r[n];\n\tfor( i=1 ; i <= n ; i++ )\n\t{\n\t\tscanf(\"%d\",&r[i]);\n\t}\n\tfor( i=1 ; i < m ; i++ )\n\t{\n\t\tm=m-i;\n\t}\n\tprintf(\"%d\",r[m]);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.687875150060024, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "fbfd4ec3905c576860c611d9bcb1d8ec", "bug_code_uid": "1efb66f1bb5ab040523d2b4036557288", "src_uid": "345e76bf67ae4342e850ab248211eb0b", "apr_id": "39d596c20ea646c69ee78142cfd491a0", "difficulty": 1300, "tags": ["dsu", "dfs and similar", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,k,sum2,min,f,r,o,sum1,sum=0,y,b,count1, a[100000];\nscanf(\"%lld\",&test);\nwhile(test--){\nscanf(\"%lld\",&n);\nlong long int b[100000]={0};\nfor(i=1;i<=n;i++){\n    scanf(\"%lld\",&a[i]);\n}\ncount=0;\nfor(i=1;i<=n;i++){\n    j=a[i];\n    if(i==a[i]){\n        b[i]=1;\n        count++;\n    }else{\n        if(a[j]==i){\n            b[i]=2;\n            count++;\n        }\n    }\n    \n    \n}\nfor(i=1;i<=n;i++){\n   if(b[i]==0){\n       printf(\"%lld \",n-count);\n   }else{\n       printf(\"%lld \",b[i]);\n   }\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,k,sum2,min,f,r,o,sum1,sum=0,y,b,count1, a[200002];\nscanf(\"%lld\",&test);\nwhile(test--){\nscanf(\"%lld\",&n);\nlong long int b[200002]={0};\nfor(i=1;i<=n;i++){\n    scanf(\"%lld\",&a[i]);\n}\ncount=0;\nfor(i=1;i<=n;i++){\n   \n    count=1;\n    if(b[i]==0 && i!=a[i]){\n    j=a[i];\n    while(a[j]!=i){\n        count++;\n        j=a[j];\n    }\n    count++;\n    b[i]=count;\n    j=a[i];\n    while(a[j]!=i){\n        b[j]=count;\n        j=a[j];\n    }\n    printf(\"%lld \",count);\n    }else{\n        if(i==a[i]){\n        printf(\"1 \");\n        }else{\n            printf(\"%lld \",b[i]);\n        }\n    }\n    //printf(\"%lld \",b[i]);\n}\n    \n\n\nprintf(\"\\n\");\n}\nreturn 0;\n}"}
{"similarity_score": 0.8258823529411765, "equal_cnt": 18, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "e2d6a6f3b633741ec68b7663a2c7810c", "bug_code_uid": "88cc064414511881a455bcec7a706c73", "src_uid": "1d4aaf15e5c6fcde50515880aae74720", "apr_id": "9c5a87b13e4fa4d508b5f531423de01a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint comp ( const void *a, const void *b )\n{\n    return * ( int * ) b - * ( int * ) a;\n}\nint main()\n{\n\tint n,i,p[1000],k,max;\n\twhile(scanf(\"%d\",&n)!=EOF){\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&p[i]);\n\t\tmax=p[0];\n\t\tfor(i=1;i<n;i++)\n\t\t\tif(p[i]>max){\n\t\t\tmax=p[i];\n\t\t\tk=i;}\n\t    qsort(p,n,sizeof(p[0]),comp);\n\t    printf(\"%d %d\\n\",i,p[1]);\n\t}\n\treturn 0;\t\t\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint comp ( const void *a, const void *b )\n{\n    return * ( int * ) b - * ( int * ) a;\n}\nint main()\n{\n    int n,i,p[1000],k,max;\n    while(scanf(\"%d\",&n)!=EOF){\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&p[i]);\n        max=p[0];\n        for(i=0;i<n;i++)\n            if(p[i]>=max){\n            max=p[i];\n            k=i+1;}\n        qsort(p,n,sizeof(p[0]),comp);\n        printf(\"%d %d\\n\",k,p[1]);\n    }\n    return 0;       \n}"}
{"similarity_score": 0.8784773060029283, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "94af62dc5885ff565ac84466a04e7496", "bug_code_uid": "f25e3934b7615354ae1cbc39128df37f", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "a3233b2233f966cd709bb24494b3c2c8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define EXIT_SUCCESS 0\n\nint main (int argc, char *argv[])\n{\n    int t, i, j;\n    int n;\n    int counter;\n    scanf (\"%d\", &t);\n    while (t != 0)\n    {\n        scanf (\"%d\", &n);\n        printf (\"%d\\n\", n / 2 - 1);\n        --t;\n    }\n    exit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define EXIT_SUCCESS 0\n\nint main (int argc, char *argv[])\n{\n    int t, i, j;\n    int n;\n    int counter;\n    scanf (\"%d\", &t);\n    while (t != 0)\n    {\n        scanf (\"%d\", &n);\n        if (n % 2 == 0)\n               printf (\"%d\\n\", n / 2 - 1);\n        else\n               printf (\"%d\\n\", n / 2);\n        --t;\n    }\n    exit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9774193548387097, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7ecfc3dd2468981388768c2b00055239", "bug_code_uid": "f328ddd48cb552e129e9abe96613c89a", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "7978e9668f50f5e992be89bcba5840b1", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid solve(int n, int k, char* res) {\n    for(int i = 0; i * k < n; i++) \n        for(int j = 0; j < k; j++) \n            res[i * k + j] = 'a' + j;\n}\nint main(void) {\n    char str[110];\n    scanf(\"%d%d\", &n, &k);\n    solve(n, k, str);\n    str[n] = '\\0';\n    puts(str);\n    return 0;\n}", "fixed": "#include <stdio.h>\nvoid solve(int n, int k, char* res) {\n    for(int i = 0; i * k < n; i++) \n        for(int j = 0; j < k; j++) \n            res[i * k + j] = 'a' + j;\n}\nint main(void) {\n    char str[110];\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    solve(n, k, str);\n    str[n] = '\\0';\n    puts(str);\n    return 0;\n}"}
{"similarity_score": 0.9857651245551602, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "95b5c14ee7705dce759a7b5e19165679", "bug_code_uid": "fc54e660642e92bb73015c116dc99e23", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "6bac7f22d2127df6e5737c44c709159e", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{   \n    int n;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"1\\n1\\n\");\n    }\n    else if(n==2)\n    {\n        printf(\"1\\n1\\n\");\n    }\n    else if(n==3)\n    {\n        printf(\"2\\n1 3\\n\");\n    }\n    else if(n==4)\n    {\n        printf(\"3\\n4 1 3\\n\");\n    }\n    else \n    {\n        printf(\"%d\\n\",n);\n        int i;\n        for(i=1;i<=n;i+=2)printf(\"%d \",i);\n        for(i=2;i<=n;i+=2)\n        {   if((i+2)>n)\n                printf(\"%d\\n\",i);\n            else\n                printf(\"%d \",i);\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(void)\n{   \n    int n;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"1\\n1\\n\");\n    }\n    else if(n==2)\n    {\n        printf(\"1\\n1\\n\");\n    }\n    else if(n==3)\n    {\n        printf(\"2\\n1 3\\n\");\n    }\n    else if(n==4)\n    {\n        printf(\"4\\n2 4 1 3\\n\");\n    }\n    else \n    {\n        printf(\"%d\\n\",n);\n        int i;\n        for(i=1;i<=n;i+=2)printf(\"%d \",i);\n        for(i=2;i<=n;i+=2)\n        {   if((i+2)>n)\n                printf(\"%d\\n\",i);\n            else\n                printf(\"%d \",i);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.7664041994750657, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a4ece9d19bdc929b1cf8fa883fb7dbee", "bug_code_uid": "3ac9a321bc5e5507195a9a58d77866c5", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "5657b57b3cb1387e0eb512302c3cf0c2", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nusing namespace std;\n\nint main() {\n  int h1,a1,c1, h2, a2;\n  int n=0;\n  int t[100];\n  scanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n  while(h2>0) {\n    if (h1-a2>0 || h2-a1<=0) {\n      t[n++] = 1;\n      h2-=a1;\n    } else {\n      t[n++] = 0;\n      h1+=c1;\n    }\n    h1-=a2;\n  }\n  printf(\"%d\\n\", n);\n  for (int i=0; i<n;i++){\n    printf(\"%s\\n\",t[i]?\"STRIKE\":\"HEAL\");\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n  int h1,a1,c1, h2, a2;\n  int n=0;\n  int t[1000000];\n  scanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n  while(h2>0) {\n    if (h1-a2>0 || h2-a1<=0) t[n++] = 1,h2-=a1;\n      else t[n++] = 0,h1+=c1;\n    h1-=a2;\n  }\n  printf(\"%d\\n\", n);\n  for (int i=0; i<n;i++)\n    printf(\"%s\\n\",t[i]?\"STRIKE\":\"HEAL\");\n  return 0;\n}\n"}
