{"similarity_score": 0.9979633401221996, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fbdaeb823e8034be50658993644d58ef", "bug_code_uid": "89c2acd6342332d73d992c6708dbb06d", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "f124122e92f57033c5c9a0028a3b68f5", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int i=0,j,n,a=0,d=0;\n    scanf(\"%d\",&n);char w[n+1];\n    scanf(\"%s\",w);\n    for(i=0;i<=n;i++) if(w[i]=='A') a++; else d++;\n    if(a>d) printf(\"Anton\"); else if(a==d) printf(\"Friendship\"); else printf(\"Danik\");\n}", "fixed": "#include <stdio.h>\nint main(){\n    int i=0,j,n,a=0,d=0;\n    scanf(\"%d\",&n);char w[n+1];\n    scanf(\"%s\",w);\n    for(i=0;i<n;i++) if(w[i]=='A') a++; else d++;\n    if(a>d) printf(\"Anton\"); else if(a==d) printf(\"Friendship\"); else printf(\"Danik\");\n}"}
{"similarity_score": 0.822477650063857, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "625ea5c43293f15d72ea4d6332eee39f", "bug_code_uid": "b0511f3515f06fe093adbcd15c2e05db", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "a3278df817bd2b239a66ead1aae3ea94", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n// typedef long long int lli;\nint main()\n{\n\tint n,p[3][5000],a[3]={0,0,0},num;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&num);\n\t\tp[num-1][a[num-1]]=i+1;\n\t\ta[num-1]++;\n\t}\t\n\tif(a[0]>a[1])\n\t\tnum=a[1];\n\telse\n\t{\n\t\tnum=a[0];\n\t}\n\t\n\tif(num > a[2])\n\t\tnum=a[2];\n\tprintf(\"%d\\n\",a[2]);\n\tfor(int i=0;i<num;i++)\n\t\tprintf(\"%d %d %d\\n\",p[0][i],p[1][i],p[2][i]);\n\treturn 0;\n\t\n}", "fixed": "#include<stdio.h>\n// typedef long long int lli;\nint main()\n{\n\tint n,p[3][5000],a[3]={0,0,0},num;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&num);\n\t\tp[num-1][a[num-1]]=i+1;\n\t\ta[num-1]++;\n\t}\t\n\tif(a[0]>a[1])\n\t\tnum=a[1];\n\telse\n\t{\n\t\tnum=a[0];\n\t}\n\t\n\tif(num > a[2])\n\t\tnum=a[2];\n\tprintf(\"%d\\n\",num);\n\tfor(int i=0;i<num;i++)\n\t\tprintf(\"%d %d %d\\n\",p[0][i],p[1][i],p[2][i]);\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.6515270164447925, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5e9067f24f68c55f9c5315383b02940b", "bug_code_uid": "1423e973b9b487221ac6024da998932b", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "e36b2d8d900dd8628499bbf6f5975fbb", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint cmpfunc (const void * a, const void * b) {\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\nint main()\r\n{\r\n\tint n,h,i,t,j,k,temp,count;\r\n\tscanf(\"%d\",&t);\r\n\tint a[t],out[t];\r\n\tfor(k=0;k<t;k++)\r\n\t{ count=0;\r\n\t\tscanf(\"%d %d\",&n,&h);\r\n\t\tint a[n];\r\n\t\tfor(i = 0; i < n; i++)    \r\n        scanf (\"%d\",&a[i]);\r\n\t\t    qsort(a, n, sizeof(int), cmpfunc); \r\n\t  while(h>0)\r\n\t  {\r\n\t  \tif(count%2==0)\r\n\t  \th=h-a[n-1];\r\n\t  \telse\r\n\t  \th=h-a[n-2];\r\n\t  \tcount++;\r\n\t  }\r\n\t   out[k]=count; \t\r\n\t}\r\n\tfor(k=0;k<t;k++)\r\n\t{\r\n\t\tprintf(\"%d\\n\",out[k]);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint cmpfunc (const void * a, const void * b) {\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\nint main()\r\n{\r\n\tint n,h,i,t,op,k,temp,count;\r\n\tscanf(\"%d\",&t);\r\n\tint a[t],out[t];\r\n\tfor(k=0;k<t;k++)\r\n\t{ count=0;\r\n\t\tscanf(\"%d %d\",&n,&h);\r\n\t\tint a[n];\r\n\t\tfor(i = 0; i < n; i++)    \r\n        scanf (\"%d\",&a[i]);\r\n\t\t    qsort(a, n, sizeof(int), cmpfunc); \r\n\t    temp=a[n-1]+a[n-2];\r\n\t   if(h%temp==0)\r\n\t   op=0;\r\n\t   else if(h%temp<=a[n-1])\r\n\t    op=1;\r\n\t    else \r\n\t\top=2;\r\n\t    if(h<=a[n-1])\r\n\t    out[k]=1;\r\n\t    else if(h<=temp)\r\n\t    out[k]=2;\r\n\t    else\r\n\t   out[k]=2*(int)(h/temp)+op;\r\n\t   \t}\r\n\tfor(k=0;k<t;k++)\r\n\t{\r\n\t\tprintf(\"%d\\n\",out[k]);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9941520467836257, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "d31e04923550a567ec477213b51b19a8", "bug_code_uid": "c2f500acf8e2eb8d17125f3ced599cc2", "src_uid": "d715095ff068f4d081b58fbfe103a02c", "apr_id": "7412e228de43058ec507b73504eda411", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar map[55][55];\n    int i,n,j,m,up,left,right,down;\nint hangyou(int hang)\n{\n    int i;\n    for(i = 0;i < m;i++)\n        if(map[hang][i] == '*' ) return 1;\n    return 0; \n}\n\nint lieyou(int lie)\n{\n    int i;for(i = 0;i < m;i++)\n        if(map[i][lie] == '*' ) return 1;\n    return 0;\n}\n\n\nint main(void)\n{\n\n\n    while(scanf(\"%d%d\",&n,&m) != EOF)\n    {\n        getchar();\n        for(i = 0;i < n;i++)\n        {\n            for(j = 0;j < m;j++)\n                {scanf(\"%c\",&map[i][j]);}\n                getchar();\n        }\n        up = 0;down = n-1;left = 0;right = m-1;\n        while(!hangyou(up)) up++;\n        while(!hangyou(down)) down--;\n        while(!lieyou(left)) left++;\n        while(!lieyou(right)) right--;\n        for(i = up;i <= down;i++)\n        {\n            for(j = left;j <= right;j++)\n                printf(\"%c\",map[i][j]);\n            printf(\"\\n\");\n        }   \n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar map[55][55];\nint i,n,j,m,up,left,right,down;\nint hangyou(int hang)\n{\n    int i;\n    for(i = 0;i < m;i++)\n        if(map[hang][i] == '*' ) return 1;\n    return 0; \n}\n\nint lieyou(int lie)\n{\n    int i;\n    for(i = 0;i < n;i++)\n        if(map[i][lie] == '*' ) return 1;\n    return 0;\n}\n\n\nint main(void)\n{\n\n\n    while(scanf(\"%d%d\",&n,&m) != EOF)\n    {\n        getchar();\n        for(i = 0;i < n;i++)\n        {\n            for(j = 0;j < m;j++)\n                {scanf(\"%c\",&map[i][j]);}\n                getchar();\n        }\n        up = 0;down = n-1;left = 0;right = m-1;\n        while(!hangyou(up)) up++;\n        while(!hangyou(down)) down--;\n        while(!lieyou(left)) left++;\n        while(!lieyou(right)) right--;\n        for(i = up;i <= down;i++)\n        {\n            for(j = left;j <= right;j++)\n                printf(\"%c\",map[i][j]);\n            printf(\"\\n\");\n        }   \n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7125557680050988, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "acf8c6ad0e2d6811caa2fb60969b0dae", "bug_code_uid": "1a2452243a2fb655eff2babf30f8d567", "src_uid": "c4c8cb860ea9a5b56bb35532989a9192", "apr_id": "b0fde7a77ce98a9132e130f5b788419e", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,n,i;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        char s[n+1],a[n+1],b[n+1];\n        scanf(\"%s\",&s);\n        i=0;\n        while(s[i]!='\\0')\n        {\n            if(s[i]=='0')\n            {\n                a[i]='0';\n                b[i]='0';\n            }\n            else if(s[i]=='1')\n            {\n                a[i]='1';\n                b[i]='0';\n            }\n            else\n            {\n                a[i]='1';\n                b[i]='1';\n            }\n            i++;\n        }\n        a[i]='\\0';\n        b[i]='\\0';\n        printf(\"%s\\n%s\\n\",a,b);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,n,i,count=0;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        count=0;\n        scanf(\"%d\",&n);\n        char s[n+1],a[n+1],b[n+1];\n        scanf(\"%s\",&s);\n        i=0;\n        while(s[i]!='\\0')\n        {\n            if(s[i]=='0')\n            {\n                a[i]='0';\n                b[i]='0';\n            }\n            else if(s[i]=='1')\n            {\n                a[i]='1';\n                b[i]='0';\n                count++;\n                break;\n            }\n            else\n            {\n                a[i]='1';\n                b[i]='1';\n            }\n            i++;\n        }\n        if(count!=0)\n        {\n            while(s[++i]!='\\0')\n            {\n                b[i]=s[i];\n                a[i]='0';\n            }\n        }\n        a[i]='\\0';\n        b[i]='\\0';\n        printf(\"%s\\n%s\\n\",a,b);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9914821124361158, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6a714b9e7c0e9b8b1d7731ea32ad2880", "bug_code_uid": "bff6786b86c01c5b4809e23019c942ae", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "9138206a410bc0299d3827ff289b7ac9", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        int a;\r\n        int b;\r\n        scanf(\"%d %d\",&a,&b);\r\n        int max=(a+B)/4;\r\n        if(a<max)\r\n        max=a;\r\n        if(b<max)\r\n        max=b;\r\n        printf(\"%d\",max);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        int a;\r\n        int b;\r\n        scanf(\"%d %d\",&a,&b);\r\n        int max=(a+b)/4;\r\n        if(a<max)\r\n        max=a;\r\n        if(b<max)\r\n        max=b;\r\n        printf(\"%d \\n\",max);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8080949057920447, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "fd8498b38a0f8292d6350156c3f20baa", "bug_code_uid": "bca744a302cd05a9052d8fe21d872637", "src_uid": "91541d10c5ae52be8da33412359bd019", "apr_id": "86bc79bcde86d8d87f1e6ca3a042e9f2", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void * a, const void * b){\n    return(*(int *)b - *(int *)a);\n}\n\nmain(){\n    int i, n, m, qt, c= 0;\n    long long int su= 0, sc= 0;\n    scanf(\"%i %i\", &n, &m);\n    int a_u[n], a_c[n], a_d[n];\n    for(i=0; i<n; ++i){\n        scanf(\"%i %i\", &a_u[i], &a_c[i]);\n        a_d[i]= a_u[i]- a_c[i];\n        su= su+ a_u[i];\n        sc= sc+ a_c[i];\n    }\n\n    if(su<= m){\n        printf(\"0\");\n    }\n    else{\n        if(sc> m){\n            printf(\"-1\");\n        }\n        else{\n            qsort(a_d, n, sizeof(int), comp);\n            qt= su-m;\n            for(i=0; qt>=0; ++i){\n                qt= qt-a_d[i];\n                c++;\n            }\n            printf(\"%i\", c);\n        }\n    }\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void * a, const void * b){\n    return(*(int *)b - *(int *)a);\n}\n\nmain(){\n    int i, n, m, qt, c= 0;\n    long long int su= 0, sc= 0;\n    scanf(\"%i %i\", &n, &m);\n    int a_u[n], a_c[n], a_d[n];\n    for(i=0; i<n; ++i){\n        scanf(\"%i %i\", &a_u[i], &a_c[i]);\n        a_d[i]= a_u[i]- a_c[i];\n        su= su+ a_u[i];\n        sc= sc+ a_c[i];\n    }\n\n    if(su<= m){\n        printf(\"0\");\n        return 0;\n    }\n    if(sc> m){\n        printf(\"-1\");\n        return 0;\n    }\n    qsort(a_d, n, sizeof(int), comp);\n    for(i=0; i<n; ++i){\n        su= su-a_d[i];\n        c++;\n        if(su<= m){\n            break;\n        }\n    }\n    printf(\"%i\", c);\n}"}
{"similarity_score": 0.988558352402746, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f188602c68cac64713eb73e85658fbc0", "bug_code_uid": "77edddbf37c029fee36cb9d7de876a09", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "8041520c5a884cb400626312e10cf537", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n\tshort n;\n\tshort i;\n\n\tscanf(\" %hd\", &n);\n\n\tprintf(\"I hate \");\n\n\tfor (i = 1; i < n; i++)\n\t    printf(\"%s\", i % 2 == 0 ? \"that I hate \" : \"that I love \");\n\tprintf(\"it\");\n\treturn 1;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\tshort n;\n\tshort i;\n\n\tscanf(\" %hd\", &n);\n\n\tprintf(\"I hate \");\n\n\tfor (i = 1; i < n; i++)\n\t    printf(\"%s\", i % 2 == 0 ? \"that I hate \" : \"that I love \");\n\n\n\n\tprintf(\"it\");\n\treturn 0;\n}"}
{"similarity_score": 0.9984871406959153, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "75689d826589391925079fe5d4406713", "bug_code_uid": "430baf5eef7d9b49eb6297342bb89ee1", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "a1022b0d53a54436ea96447b02ee86fe", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int ara[n],i;\n    for(i=0 ; i<n ; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n\n    int max=ara[n-1],count[n],c=0;\n    for(i=n-1 ; i>=0 ; i--)\n    {\n        if(ara[i]==max && c==0)\n        {\n            count[i]=0;\n            c=1;\n        }\n        else if(ara[i] < max)\n        {\n            count[i]=max+1-ara[i];\n        }\n        else if(ara[i] > max)\n        {\n            max=ara[i];\n            count[i]=0;\n            c=0;\n        }\n        else\n        {\n            count[i]=1;\n        }\n    }\n\n    for(i=0; i<n; i++)\n    {\n        printf(\"%d \",count[i]);\n    }\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int ara[n],i;\n    for(i=0 ; i<n ; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n\n    int max=ara[n-1],count[n],c=0;\n    for(i=n-1 ; i>=0 ; i--)\n    {\n        if(ara[i]==max && c==0)\n        {\n            count[i]=0;\n            c=1;\n        }\n        else if(ara[i] < max)\n        {\n            count[i]=max+1-ara[i];\n        }\n        else if(ara[i] > max)\n        {\n            max=ara[i];\n            count[i]=0;\n            c=1;\n        }\n        else\n        {\n            count[i]=1;\n        }\n    }\n\n    for(i=0; i<n; i++)\n    {\n        printf(\"%d \",count[i]);\n    }\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9987546699875467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5531e9821e77acc82ffd7535dd4deaaf", "bug_code_uid": "a25ff65dea30ff75a25b9a2498d6a487", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "6071b272a9cf07a2dcc4e53babf42e5f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint verify(int num){\r\n\t\tif( 1900 < num){\r\n\t\t\treturn 1;\r\n\t\t}else if((1600 <= num) && (num<= 1899)){\r\n\t\t\treturn 2;\r\n\t\t}else if((1400 <= num) && (num <= 1599)){\r\n\t\t\treturn 3;\r\n\t\t}else if(num <= 1399){\r\n\t\t\treturn 4;\r\n\t\t}\r\n}\r\n\r\nint main(){\r\n\tint t, i = 1, aux;\r\n\tscanf(\"%d\", &t);\r\n\twhile(i <= t){\r\n\t\tscanf(\"%d\", &aux);\r\n\t\tprintf(\"Division %d\\n\",verify(aux));\r\n\t\ti++;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint verify(int num){\r\n\t\tif( 1900 <= num){\r\n\t\t\treturn 1;\r\n\t\t}else if((1600 <= num) && (num<= 1899)){\r\n\t\t\treturn 2;\r\n\t\t}else if((1400 <= num) && (num <= 1599)){\r\n\t\t\treturn 3;\r\n\t\t}else if(num <= 1399){\r\n\t\t\treturn 4;\r\n\t\t}\r\n}\r\n\r\nint main(){\r\n\tint t, i = 1, aux;\r\n\tscanf(\"%d\", &t);\r\n\twhile(i <= t){\r\n\t\tscanf(\"%d\", &aux);\r\n\t\tprintf(\"Division %d\\n\",verify(aux));\r\n\t\ti++;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8542435424354243, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "b099785b75cc5d2498dea75b69e24c70", "bug_code_uid": "49488d7e5a8b4d0c2f7988a37eecfe79", "src_uid": "3c8bfd3199a9435cfbdee1daaacbd1b3", "apr_id": "269c7f622c73869da43b21d9ef497e7a", "difficulty": 1200, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int com(void const *a, void const *b){\n\treturn (*(long long int*)a)-(*(long long int*)b);\n}\nint main()\n{\n\tlong long int t,n,i,j,d;\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\tscanf(\"%lld\",&n);\n\t\tlong long int a[n];\n\t\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\t\tqsort(a,n,8,com);\n\t\td=n/2;\n\t\tif(n%2==0){\n\t\t\tprintf(\"%lld %lld \",a[d-1],a[d]);\n\t\tfor(i=d-2,j=d+1;i>=0 && j<n;i--,j++){\n\t\t\tprintf(\"%lld %lld \",a[i],a[j]);\n\t\t}\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%lld \",a[d]);\n\t\t\tfor(i=d-1,j=d+1;i>=0 && j<n;i--,j++){\n\t\t\t\tprintf(\"%lld %lld \",a[i],a[j]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}", "fixed": "#include<stdio.h>\nint com(void const *a, void const *b){\n\treturn (*(int*)a)-(*(int*)b);\n}\nint main()\n{\n\tint t,n,i,j,d;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\t\tqsort(a,n,4,com);\n\t\td=n/2;\n\t\tif(n%2==0){\n\t\t\tprintf(\"%d %d \",a[d-1],a[d]);\n\t\tfor(i=d-2,j=d+1;i>=0 && j<n;i--,j++){\n\t\t\tprintf(\"%d %d \",a[i],a[j]);\n\t\t}\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%d \",a[d]);\n\t\t\tfor(i=d-1,j=d+1;i>=0 && j<n;i--,j++){\n\t\t\t\tprintf(\"%d %d \",a[i],a[j]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}"}
{"similarity_score": 0.38822593476531425, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "6d17e707f334672136e8549824551a49", "bug_code_uid": "3e0c1992875450311ae6b4547b82a036", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "1fef7a625b4ec55f4cc7d94f06930898", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint f(int n){\nlong long int i;\nfor(i=2;i<=n/2;i++){\n    if(n%i==0)return 0;\n}\nreturn 1;\n}\n\nint main(){\nlong long int a,b,c,i,j,n;\nscanf(\"%lld\",&n);\nfor(i=4;i<=n;i++){\n    a=f(i);\n    if(a==0){\n        for(j=4;j<=n;j++){\n            b=f(j);\n            if(b==0 && i+j==n){\n                printf(\"%lld %lld\\n\",i,j);\n                goto l;\n            }\n\n        }\n    }\n}\nl:\nfor(;;)break;\n}\n", "fixed": "#include<stdio.h>\nint f(int n){\nlong long int i;\nfor(i=2;i<=n/2;i++){\n    if(n%i==0)return 0;\n}\nreturn 1;\n}\n\nint main(){\nlong long int a,b,c,i,k,j,n;\nscanf(\"%lld\",&n);\nif(n%2==0){\n    a=f(n/2);\n    if(a==0)printf(\"%lld %lld\\n\",n/2,n/2);\n    if(a==1){\n            b=n/2;\n            c=n/2;\n        for(i=1;;i++){\n            b++;\n            c--;\n            j=f(b);\n            k=f(c);\n            if(j==0 && k==0){\n                printf(\"%lld %lld\\n\",b,c);\n                break;\n            }\n        }\n    }\n}\nif(n%2!=0){\n    a=f(n-4);\n    if(a==0)printf(\"%lld 4\\n\",n-4);\n    if(a==1){   b=4;\n                c=n-4;\n        for(i=1;;i++){\n            b+=2;\n            c-=2;\n            j=f(b);\n            k=f(c);\n            if(j==0 && k==0){\n                printf(\"%lld %lld\\n\",b,c);\n                break;\n            }\n        }\n    }\n}\n}"}
{"similarity_score": 0.6788321167883211, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "07ed82335997ca103da0a2ba33657192", "bug_code_uid": "7aba6f5cb1045ca3b98b55361c6a9b8a", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "9352817c068b2a01615861cfd56b02b4", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong int m,n,t=0;\nscanf(\"%ld %ld\",&m,&n);\nlong int a[m],i,sum=0;\nfor(i=0;i<m;i++){\nscanf(\"%ld\",&a[i]);\nif(a[i]<0){t++;\nsum+=a[i];\nif(t==n)\nbreak;}}\nprintf(\"%ld\",-1*sum);\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong int m,n,t=0,y,j;\nscanf(\"%ld %ld\",&m,&n);\nlong int a[m],i,sum=0,b[m];\nfor(i=0;i<m;i++){\nscanf(\"%ld\",&a[i]);\nif(a[i]<0){\nb[t++]=a[i];}}\nfor(i=0;i<t;i++)\n{for(j=i;j<t;j++)\n{if(b[i]>b[j])\n{y=b[i];\nb[i]=b[j];\nb[j]=y;\n}}}\nfor(i=0;i<t;i++)\n{sum+=b[i];\n if(i+1==n)\n break;\n}\nprintf(\"%ld\",-1*sum);\nreturn 0;}\n"}
{"similarity_score": 0.982060481804203, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "dd753cb6130cf86481cd0a85d2426a25", "bug_code_uid": "4a9212e2dc1ebec39d8023f38cc24fc8", "src_uid": "311f74b766818633581af67a88244709", "apr_id": "d2dd4b3abfea740dfcd8fe7a95f1f6b4", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int n,m,time=0,tpp,i,workingFrom,workingTo,flag=0,check;\n    scanf(\"%lld\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&tpp);\n        time += tpp;\n    }\n    scanf(\"%lld\",&m);\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%lld %lld\",&workingFrom,&workingTo);\n        if(flag == 0)\n        {\n            if(workingFrom == time)\n            {\n                check = workingFrom;\n                flag = 1;\n            }\n            else if(workingFrom > time)\n            {\n                check = workingFrom;\n                flag = 1;\n            }\n            else if(time > workingFrom && time <= workingTo)\n            {\n                check = time;\n                flag = 1;\n            }\n            else if(i == m && time <= workingTo)\n                check = time;\n            else if(i == m && time > workingTo)\n                check = -1;\n        }\n    }\n    printf(\"%lld\",check);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int n,m,time=0,tpp,i,workingFrom,workingTo,flag=0,check;\n    scanf(\"%lld\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&tpp);\n        time += tpp;\n    }\n    scanf(\"%lld\",&m);\n    if(m == 0)\n        check = -1;\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%lld %lld\",&workingFrom,&workingTo);\n        if(flag == 0)\n        {\n            if(workingFrom == time)\n            {\n                check = workingFrom;\n                flag = 1;\n            }\n            else if(workingFrom > time)\n            {\n                check = workingFrom;\n                flag = 1;\n            }\n            else if(time > workingFrom && time <= workingTo)\n            {\n                check = time;\n                flag = 1;\n            }\n            else if(i == m && time <= workingTo)\n                check = time;\n            else if(i == m && time > workingTo)\n                check = -1;\n        }\n    }\n    printf(\"%lld\",check);\n    return 0;\n}\n"}
{"similarity_score": 0.8065843621399177, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1af9e6fd6bc7900885c891101425faa7", "bug_code_uid": "8e87dedd50f24534d29e12c6553072ba", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "4aae57a7d1c51ee887aba1d84f6c03eb", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n\nlong long int max=1000000001;\nint n;\n\nvoid test()\n{\n       char wcz[max];\n\n    scanf(\"%d%s\", &n , (wcz+1));\n    int w=1;\n    while(w!=n+1 && wcz[w]!='8')\n        w++;\n    if(n-w+1>=11)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n}\n\nint main()\n{\n    int t;\n\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        test();\n    }\n    return 0 ;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\n\n\nint n;\n       char wcz[100001];\n\n\nvoid test()\n{\n\n    scanf(\"%d%s\", &n , wcz);\n    int w=0;\n    while(w!=n+1 && wcz[w]!='8')\n        w++;\n    if(n-w>=11)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n}\n\nint main()\n{\n    int t;\n\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        test();\n    }\n    return 0 ;\n}"}
{"similarity_score": 0.40998487140695916, "equal_cnt": 25, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "c96999c1ae456f20ceb906434e2a5510", "bug_code_uid": "380f3c96e9f48cbb7914a811b5c3d125", "src_uid": "d1d50f0780d5c70e6773d5601d7d41e8", "apr_id": "726f34a2ed83932a4f3dc3327d387e0e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[50][50],i,j,k,l,s=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n        for(j=0; j<n; j++)\n            scanf(\"%d\",&a[i][j]);\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(a[i][j]==1)\n                continue;\n            for(k=0; k<n; k++)\n            {\n                for(l=0; l<n; l++)\n                {\n                    if(a[i][j]==a[k][l]+a[l][k])\n                        goto up;\n                }\n            }\n            printf(\"No\\n\");\n            return 0;\n        }\nup:\n        ;\n    }\n    printf(\"Yes\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int aa[50][50];\n    int n, x, y, s, t, yes;\n    scanf(\"%d\", &n);\n    for (x = 0; x < n; x++)\n        for (y = 0; y < n; y++)\n            scanf(\"%d\", &aa[x][y]);\n    for (x = 0; x < n; x++)\n        for (y = 0; y < n; y++)\n            if (aa[x][y] != 1)\n            {\n                for (s = 0; s < n; s++)\n                    for (t = 0; t < n; t++)\n                        if (aa[x][y] == aa[x][s] + aa[t][y])\n                        {\n                            yes = 1;\n                            goto out;\n                        }\n                printf(\"No\\n\");\n                return 0;\nout:\n                ;\n            }\n    printf(\"Yes\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9982993197278912, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3cc972db3fb18f0b1150d7fb984ffa3c", "bug_code_uid": "e8034e74e4baaa9ac8cc28aba58ea544", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "1c9777bda7920751487481051d2a18ed", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int n,m;\n    int neg=0, pos=0;\n    int temp;\n    scanf(\"%d %d\", &n ,&m);\n    int l, r;\n    for(int i=0; i<n; i++){\n        scanf(\"%d\", &temp);\n        if (temp<0){\n            neg++;\n\n        }else{\n            pos++;\n        }\n    }\n    for (int i=0; i<m; i++){\n        scanf(\"%d %d\", &l,&r);\n        if(((r-l)+1)%2==1 || r==l){\n            printf(\"0\\n\");\n        }else{\n            if (pos*2>=((r-l)) && neg*2>=((r-l)/2)){\n                printf(\"1\\n\");\n            }else{\n                printf(\"0\\n\");\n            }\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    int n,m;\n    int neg=0, pos=0;\n    int temp;\n    scanf(\"%d %d\", &n ,&m);\n    int l, r;\n    for(int i=0; i<n; i++){\n        scanf(\"%d\", &temp);\n        if (temp<0){\n            neg++;\n\n        }else{\n            pos++;\n        }\n    }\n    for (int i=0; i<m; i++){\n        scanf(\"%d %d\", &l,&r);\n        if(((r-l)+1)%2==1 || r==l){\n            printf(\"0\\n\");\n        }else{\n            if (pos*2>=((r-l)) && neg*2>=((r-l))){\n                printf(\"1\\n\");\n            }else{\n                printf(\"0\\n\");\n            }\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.2519148936170213, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "59e6f86d8856ef6e7a9181434670febb", "bug_code_uid": "9f7c8ab23c629be2d69083f1759c43ab", "src_uid": "39d8677b310bee8747c5112af95f0e33", "apr_id": "dca4a8eb697f14b3d8ce8e75ef5812fd", "difficulty": 1500, "tags": ["binary search", "number theory", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n\n  for (; t > 0; t--) {\n    int l, r, m;\n    scanf(\"%d %d %d\", &l, &r, &m);\n\n    // m = n * a + b - c\n    // x = (b - c)\n    // n = (m - x) / a\n    int found = 0;\n    for (int a = l; !found && a <= r; a++) {\n      for (int x = l - r; !found && x <= r - l; x++) {\n        if ((m - x) % a == 0) {\n          int n = (m - x) / a;\n          if (n > 0) {\n            if (x >= 0) {\n              printf(\"%d %d %d\\n\", a, (l + x), l);\n            } else {\n              printf(\"%d %d %d\\n\", a, l, (l - x));\n            }\n            found = 1;\n          }\n        }\n      }\n    }\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdint.h>\n#include <stdio.h>\n\nint main() {\n  int t;\n\n  scanf(\"%d\", &t);\n\n  for (int i = 0; i < t; i++) {\n    int l, r;\n    int64_t m;\n    scanf(\"%d %d %lld\", &l, &r, &m);\n\n    for (int a = l; a <= r; a++) {\n      int x = m % a;\n\n      if (x <= r - l && (m - x) > 0) {\n        printf(\"%d %d %d\\n\", a, l + x, l);\n        break;\n      } else if (r - l >= a - x && (m + a - x) > 0) {\n        x = a - x;\n        printf(\"%d %d %d\\n\", a, l, l + x);\n        break;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.958904109589041, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ac68649348ae75bff4fcf353a307e713", "bug_code_uid": "eaf45fb7dbafd92fd8f70f19f0a5a0a2", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "bc36aec2fc819e0d4087a0e8aebe2823", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        long long int a;\n        scanf(\"%lld\",&a);\n        if(a>3 && a%4==0)\n        {\n            printF(\"YES\");\n        }\n        else\n        {\n            printf(\"NO\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        long long int a;\n        scanf(\"%lld\",&a);\n        if(a>3 && a%4==0)\n        {\n            printf(\"YES\");\n        }\n        else\n        {\n            printf(\"NO\");\n        }\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.9898190045248869, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d9afb69e2f9d572404b767d708ff9c26", "bug_code_uid": "e1ee145ca817b2ecfe8f83306d0a616d", "src_uid": "58ee86d4913787582ccdb54073656dc0", "apr_id": "f18dd54e0e7c8f52a827bebe74ef5098", "difficulty": 800, "tags": ["sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,n,m;\r\n    char temp;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int c=0;\r\n        scanf(\"%d\",&n);\r\n        char store;\r\n        scanf(\"%c\",&store);\r\n        char s[n+1];\r\n        char p[n+1];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%c\",&s[i]);\r\n        }\r\n        s[n]='\\0';\r\n        strcpy(p,s);\r\n        m=strlen(s);\r\n        //bubble sorting\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            for(int j=i+1;j<m;j++)\r\n            {\r\n                if(s[i]>s[j])\r\n                {\r\n                    temp=s[i];\r\n                    s[i]=s[j];\r\n                    s[j]=temp;\r\n                }\r\n            }\r\n        }\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            if(s[i]!=p[i])\r\n                c++;\r\n        }\r\n        printf(\"%d\\n\",c);\r\n        return 0;\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,n,m;\r\n    char temp;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int c=0;\r\n        scanf(\"%d\",&n);\r\n        char store;\r\n        scanf(\"%c\",&store);\r\n        char s[n+1];\r\n        char p[n+1];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%c\",&s[i]);\r\n        }\r\n        s[n]='\\0';\r\n        strcpy(p,s);\r\n        m=strlen(s);\r\n        //bubble sorting\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            for(int j=i+1;j<m;j++)\r\n            {\r\n                if(s[i]>s[j])\r\n                {\r\n                    temp=s[i];\r\n                    s[i]=s[j];\r\n                    s[j]=temp;\r\n                }\r\n            }\r\n        }\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            if(s[i]!=p[i])\r\n                c++;\r\n        }\r\n        printf(\"%d\\n\",c);\r\n    }\r\n\r\n        return 0;\r\n\r\n}\r\n"}
{"similarity_score": 0.8902564102564102, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c8bd0b8b6a9e3d789349f444f99fb856", "bug_code_uid": "1345b0836669620d98f90d536beccd71", "src_uid": "0816295355375a2d3f1cd45852b86360", "apr_id": "155dec1bc636aa2aaf3a263eff8041c2", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint solve (int str, int inl, int exp);\n\nint main (void)\n{\n    int T;\n    scanf (\"%i\", &T);\n    \n    for (int query = 0; query < T; query++)\n    {\n        int str, inl, exp;\n        scanf (\"%i %i %i\", &str, &inl, &exp);\n        int res = solve (str, inl, exp);\n        printf (\"%i\\n\", res);\n    }\n    \n    return 0;\n}\n\nint solve (int str, int inl, int exp)\n{\n    int ret = (str + exp - inl + 1) / 2;\n    return (ret > 0) ? ret : 0;\n}\n", "fixed": "#include <stdio.h>\n\nint solve (int str, int inl, int exp);\n\nint main (void)\n{\n    int T;\n    scanf (\"%i\", &T);\n    \n    for (int query = 0; query < T; query++)\n    {\n        int str, inl, exp;\n        scanf (\"%i %i %i\", &str, &inl, &exp);\n        int res = solve (str, inl, exp);\n        printf (\"%i\\n\", res);\n    }\n    \n    return 0;\n}\n\nint solve (int str, int inl, int exp)\n{\n    int ret = (str + exp - inl + 1) / 2;\n    if (ret > exp + 1)\n        ret = exp + 1;\n    else if (ret < 0)\n        ret = 0;\n    return ret;\n}\n"}
{"similarity_score": 0.9784615384615385, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7a935503fb3429f5a8082b9da1957677", "bug_code_uid": "b2d87331c4702da0c43f677e4ce4afe6", "src_uid": "09f5623c3717c9d360334500b198d8e0", "apr_id": "ad17b7f01e7ff689a72c37eaac859c49", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nusing namespace std;\nint a[100005];\nint main()\n{\n    __int64 n,t,sum,mx;\n    int i;\n\n       sum=0;\n        mx=0;\n        scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        sum+=a[i];\n        if(a[i]>mx)\n        {\n            mx=a[i];\n        }\n    }\n    if(sum%(n-1)==0)\n    {\n        if(mx<sum/(n-1))mx=sum/(n-1);\n        printf(\"%I64d\\n\",mx);\n    }\n    else\n    {\n        if(mx<sum/(n-1)+1)mx=sum/(n-1)+1;\n        printf(\"%I64d\\n\",mx);\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint a[100005];\nint main()\n{\n    __int64 n,t,sum,mx;\n    int i;\n\n       sum=0;\n        mx=0;\n        scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        sum+=a[i];\n        if(a[i]>mx)\n        {\n            mx=a[i];\n        }\n    }\n    if(sum%(n-1)==0)\n    {\n        if(mx<sum/(n-1))mx=sum/(n-1);\n        printf(\"%I64d\\n\",mx);\n    }\n    else\n    {\n        if(mx<sum/(n-1)+1)mx=sum/(n-1)+1;\n        printf(\"%I64d\\n\",mx);\n    }\n\n}\n"}
{"similarity_score": 0.8180379746835443, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "f70fb024fe63c1ff596699c4a69a6835", "bug_code_uid": "d59ebb956ce9643af52aebde96decc7c", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "638a400baaebbbe88b87785f6771f7d8", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\r\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint n;\r\n\tchar** a;\r\n\tscanf(\"%d\", &n);\r\n\tgetchar();\r\n\ta = (char**)malloc(sizeof(char**) * n);\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\ta[i] = (char*)malloc(sizeof(char*) * 4);\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tgets(a[i]);\r\n\t}\r\n\tint j;\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tif (a[i][0] == 'Y' || a[i][1] == 'y')\r\n\t\t{\r\n\t\t\tif (a[i][1] == 'E' || a[i][1] == 'e')\r\n\t\t\t{\r\n\t\t\t\tif (a[i][2] == 'S' || a[i][2] == 's')\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn 0;\r\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\r\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tgetchar();\r\n\tchar** arr;\r\n\tarr = (char**)malloc(sizeof(char**) * n);\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tarr[i] = (char*)malloc(sizeof(char*) * 4);\r\n\t\tarr[i][3] = '\\0';\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tgets(arr[i]);\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tint flag = 0;\r\n\t\tif (arr[i][0] == 'Y' || arr[i][0] == 'y')\r\n\t\t{\r\n\t\t\tif (arr[i][1] == 'E' || arr[i][1] == 'e')\r\n\t\t\t{\r\n\t\t\t\tif (arr[i][2] == 'S' || arr[i][2] == 's')\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t\tflag = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (flag == 0)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.8059701492537313, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "30354a783e6a5aa32cba4ad7bbe50f95", "bug_code_uid": "36ce45c97bdf86ebdc147e0a0a3c8214", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "651dfff1b23e5c640d88a3e4129704cb", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nchar str[n][5];\nint i,j,flag=0;\nfor(i=0;i<n;i++)\n{\nscanf(\"%s\",str[i]);\n}\n\nfor(i=0;i<n;i+=1)\n{\nfor(j=0;j<5;j+=1)\n{\n\nif(str[i][j]==str[i][j+1] && str[i][j]=='O')\nflag++;\nif(flag>0)\nbreak;\n}\nif(flag>0)\n{str[i][j]='+';\nstr[i][j+1]='+';}\nbreak;\n}\nif(flag>0)\n{printf(\"YES\\n\");\nfor(i=0;i<n;i++)\n{\nfor(j=0;j<5;j++)\n{\nprintf(\"%c\",str[i][j]);\n}\nprintf(\"\\n\");\n}}\nelse\nprintf(\"NO\");\nreturn 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nchar str[n][5];\nint i,j,flag=0;\nfor(i=0;i<n;i++)\n{\nscanf(\"%s\",str[i]);\n}\n\nfor(i=0;i<n;i+=1)\n{\nfor(j=1;j<5;j+=1)\n{\n\nif((str[i][j]=='O') && (str[i][j-1]=='O'))\n{flag++;\nbreak;}\n}\n\nif(flag==1)\n{str[i][j]='+';\nstr[i][j-1]='+';\nbreak;}\n}\nif(flag>0)\n{printf(\"YES\\n\");\nfor(i=0;i<n;i++)\n{\nfor(j=0;j<5;j++)\n{\nprintf(\"%c\",str[i][j]);\n}\nprintf(\"\\n\");\n}}\nelse\nprintf(\"NO\");\nreturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.4316205533596838, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "4a924c20cbb19a86f6ecf046eea5f8d1", "bug_code_uid": "0c719809f2a1bba6f8f2e8d4cafc13df", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "a2a792f99c02db80f9f0172865f241b5", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a,b;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    int array[n],i,cost;\n    char str[n];\n    scanf(\"%s\",str);\n    for(i=0; i<n; i++)\n    {\n        array[i]=str[i]-'0';\n    }\n    if(b>a)\n    {\n        if(array[a-1]==array[b-1])\n            cost=0;\n        else\n        {\n            for(i=b-2; i>a; i--)\n            {\n                if(array[a-1]==array[i])\n                {\n                    cost=(b-1)-i;\n                    break;\n                }\n            }\n\n        }\n        printf(\"%d\\n\",cost);\n    }\n    else if(a>b)\n    {\n        if(array[a-1]==array[b-1])\n            cost=0;\n        else\n        {\n            for(i=b; i<a; i++)\n            {\n                if(array[a-1]==array[i])\n                {\n                    cost=i-(b-1);\n                    break;\n                }\n            }\n        }\n        printf(\"%d\\n\",cost);\n    }\n    else\n        printf(\"0\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a,b;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    int array[n];\n    int i,cost;\n    char str[n];\n    scanf(\"%s\",&str);\n    for(i=0; i<n; i++)\n    {\n        array[i]=str[i]-'0';\n    }\n    if(array[a-1]==array[b-1])\n        cost=0;\n    else\n        cost=1;\n    printf(\"%d\\n\",cost);\n    return 0;\n}\n"}
{"similarity_score": 0.8888888888888888, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a359c064e91d4e3b48d119242c610ed5", "bug_code_uid": "aece7178e4fde5baebef1e8f33d08528", "src_uid": "2a414730d1bc7eef50bdb631ea966366", "apr_id": "663adbc5e5c3565aad9244b1b0f80524", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) \n{\n    int n,med,i,count;\n    scanf(\"%d\",&n);\n    char s[2005],x[2005];\n    scanf(\"%s\",s);\n    med=(n+1)/2;\n    //x[med-1]=s[0];\n    int j,k;\n  if(n%2==1){\n    j=med-1;k=med;count=0;}\n    else{\n    j=med;k=med+1;count=1;}\n    printf(\"%d %d  \",j,k);\n    for(i=0;i<n;i++)\n    {\n        if((i%2==1&&count==0)||(i%2==0&&count==1)){\n        x[j]=s[i];\n        j--;}\n        else{\n            x[k]=s[i];\n            k++;}\n            printf(\"%d %d  \",j,k);\n    }\n    for(i=1;i<=n;i++)\n    printf(\"%c\",x[i]);\n    return 0;\n    }", "fixed": "#include <stdio.h>\n\nint main(void) \n{\n    int n,med,i,count;\n    scanf(\"%d\",&n);\n    char s[2005],x[2005];\n    scanf(\"%s\",s);\n    med=(n+1)/2;\n    //x[med-1]=s[0];\n    int j,k;\n  if(n%2==1){\n    j=med-1;k=med;count=0;}\n    else{\n    j=med;k=med+1;count=1;}\n \n    for(i=0;i<n;i++)\n    {\n        if((i%2==1&&count==0)||(i%2==0&&count==1)){\n        x[j]=s[i];\n        j--;}\n        else{\n            x[k]=s[i];\n            k++;}\n\n    }\n    for(i=1;i<=n;i++)\n    printf(\"%c\",x[i]);\n    return 0;\n    }"}
{"similarity_score": 0.6208378088077336, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c4653b98a45160d13e651b51ddec4a5a", "bug_code_uid": "b604b6b0f87d9dc103370323db0ee641", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "a7efc4dbb15a22ffc772c3c5a3e45fec", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int m,i,p,len;\n    char c[100005];\n    scanf(\"%s\",&c);\n    getchar();\n    len=strlen(c);\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n            int count=0,j,a[100005],b[100005];\n        scanf(\"%d %d\",&a[i],&b[i]);\n        for(j=a[i];j<b[i];j++){\n            if(c[j-1]==c[j])\n                count++;\n        }\n        printf(\"%d\\n\",count);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int m,i,p,len,sum[100005]={},cum[100005];\n    char c[100005];\n    scanf(\"%s\",&c);\n    getchar();\n    len=strlen(c);\n    for(i=0;i<len-1;i++){\n        if(c[i]==c[i+1])\n        sum[i]=1;\n    }\n    cum[0]=sum[0];\n    for(i=1;i<len;i++){\n        cum[i]=cum[i-1]+sum[i];\n    }\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n            int count=0,j,a[100005],b[100005];\n        scanf(\"%d %d\",&a[i],&b[i]);\n        count=cum[b[i]-2]-cum[a[i]-2];\n\n        printf(\"%d\\n\",count);\n    }\n}\n"}
{"similarity_score": 0.7964426877470355, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5151c5a658d60f946209d502fa01972a", "bug_code_uid": "8ac03be46739e3d54176a6cf6dfcd33e", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "b85178708a92e5df377414cfa3b6a57b", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int t;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       int n,a[200],max=0;\n       scanf(\"%d\",&n);\n       for(int i=0;i<n;i++)\n       {\n           scanf(\"%d\",&a[i]);\n           if(a[i]>max)\n            max=a[i];\n       }\n       long long int sum=0;\n        for(int i=0;i<n;i++)\n       {\n           sum+=max-a[i];\n       }\n       if(sum%2==0)\n        printf(\"YES\\n\");\n       else\n        printf(\"NO\\n\");\n   }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int t;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       int n,a[200],max=0,flag=0;\n       scanf(\"%d\",&n);\n       for(int i=0;i<n;i++)\n       {\n           scanf(\"%d\",&a[i]);\n           if(a[i]>max)\n            max=a[i];\n       }\n        int sum=0;\n        for(int i=0;i<n;i++)\n       {\n           sum=max-a[i];\n        if(sum%2==1)\n       {\n            printf(\"NO\\n\");\n            flag=1;\n            break;\n       }\n\n       }\n        if(!flag)\n        printf(\"YES\\n\");\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.4592973436161097, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2416f3bc2f65ffe477c023f4fb1b4356", "bug_code_uid": "177342537e033a580b5b03237b3502bb", "src_uid": "710c7211d23cf8c01fae0b476a889276", "apr_id": "9e8d8218556ff08354a8fedfc9b72480", "difficulty": 1000, "tags": ["brute force", "math", "number theory", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n   int t;\r\n   \r\n   scanf(\"%d\",&t);\r\nwhile(t--){\r\n    int i,z=1,l,h,g=0,n,m,c=0,q=1;\r\n    char s[10000],p[290],k[1000000],b[1000000];\r\n    scanf(\"%s%s\",s,p); n=strlen(s);\r\n   m=strlen(p); \r\n   for(l=n>m?n:m;l<=m*n;l=l+(n>m?n:m))\r\n        if(l%n==0&&l%m==0) break;\r\n   for(i=0;i<l;i++){if(i+1>m*z){g=z*m;z++;}  k[i]=p[i-g];}\r\n   for(i=0;i<l;i++){if(i+1>n*q){c=q*n;q++;}  b[i]=s[i-c];}\r\n   for(i=0;i<l;i++){if(k[i]!=b[i])break;}if(i==l){for(i=0;i<l;i++)printf(\"%c\",k[i]);printf(\"\\n\");}\r\n   else printf(\"-1\\n\");\r\n   \r\n}\r\n  return(0);   \r\n}", "fixed": "#include <stdio.h>\r\n#include<string.h>\r\n #include<stdlib.h>\r\nint main()\r\n{\r\n   int t,j;\r\n  char s[10000],p[24],k[100000],b[1000000],o[1000000];\r\n   scanf(\"%d\",&t);\r\nfor(j=0;j<t;j++){\r\n    int i,z=1,l,h,g=0,n,m,c=0,q=1;\r\n    \r\n    \r\n    scanf(\"%s%s\",s,p); n=strlen(s);\r\n   m=strlen(p); \r\n   for(l=n>m?n:m;l<=m*n;l=l+(n>m?n:m))\r\n        if(l%n==0&&l%m==0) break;\r\n          \r\n   for(i=0;i<l/m;i++)strcat(k,p);\r\n   for(i=0;i<l/n;i++)strcat(b,s);\r\n   h=strcmp(k,b);\r\n   if(h==0)printf(\"%s\\n\",k);\r\n   else printf(\"-1\\n\");\r\n    strcpy(k,o);\r\n    strcpy(b,o);\r\n}\r\n  return(0);   \r\n}"}
{"similarity_score": 0.9891304347826086, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5aa9e11eff6213b5f503ae7d5082546b", "bug_code_uid": "3ac6b6490ca0e2dad8d998336de6abd6", "src_uid": "a8f3e94845cb15a483ce8f774779efac", "apr_id": "21b54b114692bac271324515c6d0bf5f", "difficulty": 1900, "tags": ["dp", "greedy", "fft", "ternary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() \n{\n\n\tunsigned long long N, count=0;\n\tlong long int carry=0;\n\tscanf(\"%I64u\", &N);\n        long long int curr;\n\twhile (N>0) \n\t{\t\n\t\tscanf(\"%I64d\", &curr);\n\n\t\twhile (carry>0 && curr>1)\n\t       \t{\n\t\t        carry--;\n\t\t\tcurr=curr-2;\n\t\t\tcount++;\n\t\t}\n\n\t\tcount=count+(curr/3);\n\t\tcarry=curr%3;\n\t\tN--;\n\t}\n\n\tprintf(\"%I64u\", count);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main() \n{\n\n\tunsigned long long N, count=0;\n\tlong long int carry=0;\n\tscanf(\"%I64u\", &N);\n        long long int curr;\n\twhile (N>0) \n\t{\t\n\t\tscanf(\"%I64d\", &curr);\n\n\t\twhile (carry>0 && curr>1)\n\t       \t{\n\t\t        carry--;\n\t\t\tcurr=curr-2;\n\t\t\tcount++;\n\t\t}\n\n\t\tcount=count+(curr/3);\n\t\tcarry=carry+(curr%3);\n\t\tN--;\n\t}\n\n\tprintf(\"%I64u\", count);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9626769626769627, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cbe2b5c3a967945c790122f1588b5cf5", "bug_code_uid": "26f5c5eb8e439f56e5e4f96e505d9a4f", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "a8ff19ad381b9cd279aba70e9c133404", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int ncase ;\r\n    while(ncase--){\r\n        int n, prev = 0, appeared[200]={0},s=0;\r\n        scanf(\"%d\\n\", &n);\r\n        while(n--){\r\n            int c = getchar();\r\n            if(appeared[c]&&c!=prev){\r\n                s = 1;\r\n            }\r\n            appeared[prev=c]=1;\r\n        }\r\n        puts(s?\"NO\":\"YES\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n    int ncase;\r\n    scanf(\"%d\\n\", &ncase);\r\n    while(ncase--){\r\n        int n, prev = 0, appeared[200]={0},s=0;\r\n        scanf(\"%d\\n\", &n);\r\n        while(n--){\r\n            int c = getchar();\r\n            if(appeared[c]&&c!=prev){\r\n                s = 1;\r\n            }\r\n            appeared[prev=c]=1;\r\n        }\r\n        puts(s?\"NO\":\"YES\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9946043165467626, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "32079426dc2c0c8f43540c182865fd27", "bug_code_uid": "98560b2544a0ea14adbea98556c6e732", "src_uid": "a585045a9a6f62bfe1c0618c2ee02f48", "apr_id": "a1dbe520dbfdecab0ef4fd96e13d03ec", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\tint i,n,k,index,temp,id[1003],a[1003],small,j;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tid[i]=i;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tsmall=a[i];\n\t\tindex=i;\n\t\tfor(j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(a[j]<small)\n\t\t\t{\n\t\t\t\tsmall=a[j];\n\t\t\t\tindex=j;\n\t\t\t}\n\t\t}\n\t\ttemp=a[i];\n\t\ta[i]=small;\n\t\ta[index]=temp;\n\t\ttemp=id[i];\n\t\tid[i]=id[index];\n\t\tid[index]=temp;\n\t}\n\tprintf(\"%d\\n\",a[n-k+1]);\n\tfor(i=n;i>n-k;i--)\n\t{\n\t\tprintf(\"%d \",id[i]);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tint i,n,k,index,temp,id[1003],a[1003],small,j;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tid[i]=i;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tsmall=a[i];\n\t\tindex=i;\n\t\tfor(j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(a[j]<small)\n\t\t\t{\n\t\t\t\tsmall=a[j];\n\t\t\t\tindex=j;\n\t\t\t}\n\t\t}\n\t\ttemp=a[i];\n\t\ta[i]=small;\n\t\ta[index]=temp;\n\t\ttemp=id[i];\n\t\tid[i]=id[index];\n\t\tid[index]=temp;\n\t}\n\tprintf(\"%d\\n\",a[n-k+1]);\n\tfor(i=n;i>n-k;i--)\n\t{\n\t\tprintf(\"%d \",id[i]);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.613998613998614, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "24d8a7b97dc35c6afc62221b529dbc0d", "bug_code_uid": "83f58316f9d708273fbc26a7bc9449ac", "src_uid": "e21e768dbb2e5f72873dc1c7de4879fd", "apr_id": "629df98bed3bcc523e789600e78c2dbb", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n,rem=0,c=0,one_seat=0,two_seat=0,x=0,a,b;\n\n    scanf(\"%d%d%d\",&n,&one_seat,&two_seat);\n    int ar[n];\n\n    for(i=0;i<n;i++)\n        {scanf(\"%d\",&ar[i]);\n       // c+=ar[i];\n        }\n    for(i=0;i<n;i++)\n    {\n        if(ar[i]==1)\n        {\n            if(one_seat>0){\n                one_seat--;\n            }\n            else if(rem==1)\n            {\n                rem=0;\n            }\n            else if(two_seat>0)\n            {\n                rem=1;\n                two_seat--;\n            }\n            else\n                x++;\n        }\n        else\n        {\n            if(two_seat>0)\n                two_seat--;\n            else\n                x+=2;\n        }\n    }\n    printf(\"%d\",x);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,n,rem=0,c=0,one_seat=0,two_seat=0,x=0;\n\n    scanf(\"%d%d%d\",&n,&one_seat,&two_seat);\n    int ar[n];\n\n    for(i=0;i<n;i++)\n        {scanf(\"%d\",&ar[i]);\n        }\n    for(i=0;i<n;i++)\n    {\n        if(ar[i]==1)\n        {\n            if(one_seat>0){\n                one_seat--;\n            }\n            else if(two_seat>0)\n            {\n                rem++;\n                two_seat--;\n            }\n            else if(rem>0)\n                rem--;\n            else\n                x++;\n        }\n        else\n        {\n            if(two_seat>0)\n                two_seat--;\n            else\n                x+=2;\n        }\n    }\n    printf(\"%d\",x);\n}\n"}
{"similarity_score": 0.8340080971659919, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a0f704d60cc5e052861eb77237499e22", "bug_code_uid": "5565f9813f8f6f87130c4fa8ebb0486d", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "7c9c64994d7c6435802beff5ccd1a88c", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <inttypes.h>\n#include <string.h>\n#include <math.h>\n\nvoid solve() {\n    \n    size_t t;\n\n    scanf(\"%zu\", &t);\n\n    while (t--) {\n        \n        int a, b, c;\n        scanf(\"%d%d%d\", &a, &b, &c);\n         \n        if ((a < b && a > c) || (a < c && a > b)) {\n             printf(\"%d\\n\", a);\n        } else if ((b < a && b > c) || (b < c && b > a)) {\n             printf(\"%d\\n\", b);\n        } else {\n             printf(\"%d\\n\", c);\n        }\n    }\n}\n\nint main (void)\n{\n    solve();\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (void)\n{\n    int t;\n\n    scanf(\"%d\", &t);\n\n    while (t--) {\n        \n        int a, b, c;\n        scanf(\"%d%d%d\", &a, &b, &c);\n         \n        if ((a < b && a > c) || (a < c && a > b)) {\n             printf(\"%d\\n\", a);\n        } else if ((b < a && b > c) || (b < c && b > a)) {\n             printf(\"%d\\n\", b);\n        } else {\n             printf(\"%d\\n\", c);\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.602510460251046, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "e96bd45b47e49ac82dd64968636cbde1", "bug_code_uid": "110e749b58d87c7bcb7a1967ed77e833", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "a6d2e0a2da6823f3539d1718073d3df6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n    int main ()\n    {\n\n        int t,i,h,m,n,l;\n\n        scanf(\"%d\", &t);\n        i=1;\n\n        while(i<=t){\n\n        scanf(\"%d%d\", &h, &m);\n\n        n=h*60+m;\n        l=1440-n;\n\n        printf(\"%d\\n\",l);\n                    }\n\n\n        return 0;\n    }\n\n", "fixed": "#include<stdio.h>\n\nint main()\n\n{\n    int t,h,m,i,x;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++) {\n        scanf(\"%d%d\",&h,&m);\n        x=1440-((h*60)+m);\n        printf(\"%d\\n\",x);\n    }\n    return 0;\n\n}\n\n\n\n"}
{"similarity_score": 0.5906921241050119, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "8d7e3232d4e9d3088424c094f86bd137", "bug_code_uid": "59030b14287f2f1a4640df14e6271434", "src_uid": "ce0579e9c5b4c157bc89103c76ddd4c3", "apr_id": "85a9ee100f548e99ff325a144f4b8aa9", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\r\n\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int test;\r\n    scanf(\"%d\", &test);\r\n    while(test--)\r\n    {\r\n        int n, t=0;\r\n        scanf(\"%d\", &n);\r\n        int H[n+1], M[n+1];\r\n        scanf(\"%d %d\", &H[0], &M[0]);\r\n        for(int i=1; i<n+1; i++){\r\n            scanf(\"%d %d\", &H[i], &M[i]);\r\n            if((H[i]==H[0]) && (M[i]==M[0])){\r\n                t=1;\r\n            }\r\n        }\r\n        if(t==1){\r\n            printf(\"0 0\\n\");\r\n        }\r\n        else{\r\n            if(M[n]>M[0]){\r\n            M[0]=M[n]-M[0];\r\n        }\r\n        else{\r\n            M[0]=M[n]-M[0]+60;\r\n            H[n]=H[n]-1;\r\n        }\r\n        if(H[n]>H[0]){\r\n            H[0]=H[n]-H[0];\r\n        }\r\n        else{\r\n            H[0]=H[n]-H[0]+24;\r\n        }\r\n        printf(\"%d %d\\n\", H[0], M[0]);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "\r\n\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int test;\r\n    scanf(\"%d\", &test);\r\n    while(test--)\r\n    {\r\n        int n, t=0, x=24*60, y=x;\r\n        scanf(\"%d\", &n);\r\n        int H[n+1], M[n+1], T[n+1];\r\n        scanf(\"%d %d\", &H[0], &M[0]);\r\n        T[0]=H[0]*60 + M[0];\r\n        for(int i=1; i<n+1; i++){\r\n            scanf(\"%d %d\", &H[i], &M[i]);\r\n            T[i]=H[i]*60 + M[i];\r\n            if((H[i]==H[0]) && (M[i]==M[0])){\r\n                t=1;\r\n            }\r\n            if((T[i]-T[0])<0){\r\n                x=T[i]-T[0]+24*60;\r\n            }\r\n            else{\r\n                x=T[i]-T[0];\r\n            }\r\n            if(x<y){\r\n                y=x;\r\n            }\r\n        }\r\n        if(t==1){\r\n            printf(\"0 0\\n\");\r\n        }\r\n        else{\r\n            printf(\"%d %d\\n\", y/60, y%60);\r\n        }\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9884332281808622, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1398a9ee9a28d763555e437661ee6c43", "bug_code_uid": "c4ad68e354233afd37ee5082c48a5e07", "src_uid": "7b80d3f3cd4f93e4277c76c76dc41f42", "apr_id": "9f4010192be94882dbabd1c085525f39", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a[1000000], n, i, j;\n   int T;\n   scanf(\"%d\", &T);\n   while(T--)\n   {\n       scanf(\"%lld\", &n);\n       for(i=0;i<n;i++)\n       {\n           scanf(\"%lld\", &a[i]);\n\n       }\n       int cn=0;\n       for(j=0;j<n-1;j++)\n       {\n           if(a[j]!=a[j+1])\n           {\n               cn=1;\n               break;\n           }\n       }\n     if(cn!=0)\n        printf(\"1\");\n     else\n        printf(\"%lld\", &n);\n\n   }\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a[1000000], n, i, j;\n   int T;\n   scanf(\"%d\", &T);\n   while(T--)\n   {\n       scanf(\"%lld\", &n);\n       for(i=0;i<n;i++)\n       {\n           scanf(\"%lld\", &a[i]);\n\n       }\n       int cn=0;\n       for(j=0;j<n-1;j++)\n       {\n           if(a[j]!=a[j+1])\n           {\n               cn=1;\n               break;\n           }\n       }\n     if(cn!=0)\n        printf(\"1\\n\");\n     else\n        printf(\"%lld\\n\", n);\n\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9989462592202318, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ca7791f27eb0b94eb72fb5c8fa8334cd", "bug_code_uid": "05a06f7d038d722c6271a458cf4cfa20", "src_uid": "3b158306d335459ff55dcf29e46010e8", "apr_id": "26971dffec4d7e32ec4a171bf5879093", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n\tlong long q;\n\tscanf(\"%I64d\",&q);\n\twhile(q--){\n\t\tlong long n,k;\n\t\tscanf(\"%I64d%I64d\",&n,&k);\n\t\tlong long arr[n];\n\t\tlong long i;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%I64d\",&arr[i]);\n\t\tlong long min=arr[0];\n\t\tlong long max=arr[0];\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(arr[i]>max)\n\t\t\t\tmax=arr[i];\n\t\t\tif(arr[i]<min)\n\t\t\t\tmin=arr[i];\n\t\t}\n\t\tmin=min*-1;\n\t\tmin=k-min;\n\t\tmax=abs(k-max);\n\t\tlong long flag1=0;long long a[n];long long flag2=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\ta[i]=arr[i];\n\t\t}\n\t\tfor(i=0;i<n;i++){\n\t\t\tarr[i]=abs(arr[i]-min);\n\t\t\tif(arr[i]>k)\n\t\t\t{\n\t\t\t\tflag1=1;break;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++){\n\t\t\ta[i]=abs(a[i]-max);\n\t\t\tif(a[i]>k)\n\t\t\t{\n\t\t\t\tflag2=1;break;\n\t\t\t}\n\t\t}\n\t\tif(min>max&&flag1==0)\n\t\t\tprintf(\"%I64d\\n\",min);\n\t\telse if(max>min&&flag2==0)\n\t\t\t\tprintf(\"%I64d\\n\",max);\n\t\telse if(flag1==1&&flag2==0)\n\t\t\t\tprintf(\"%I64d\\n\",max);\n\t\telse if(flag1==0&&flag2==1)\n\t\t\t\tprintf(\"%I64d\\n\",min);\n\t\telse\n\t\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n\tlong long q;\n\tscanf(\"%I64d\",&q);\n\twhile(q--){\n\t\tlong long n,k;\n\t\tscanf(\"%I64d%I64d\",&n,&k);\n\t\tlong long arr[n];\n\t\tlong long i;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%I64d\",&arr[i]);\n\t\tlong long min=arr[0];\n\t\tlong long max=arr[0];\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(arr[i]>max)\n\t\t\t\tmax=arr[i];\n\t\t\tif(arr[i]<min)\n\t\t\t\tmin=arr[i];\n\t\t}\n\t\tmin=min*-1;\n\t\tmin=k-min;\n\t\tmax=abs(k-max);\n\t\tlong long flag1=0;long long a[n];long long flag2=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\ta[i]=arr[i];\n\t\t}\n\t\tfor(i=0;i<n;i++){\n\t\t\tarr[i]=abs(arr[i]-min);\n\t\t\tif(arr[i]>k)\n\t\t\t{\n\t\t\t\tflag1=1;break;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++){\n\t\t\ta[i]=abs(a[i]-max);\n\t\t\tif(a[i]>k)\n\t\t\t{\n\t\t\t\tflag2=1;break;\n\t\t\t}\n\t\t}\n\t\tif(min>=max&&flag1==0)\n\t\t\tprintf(\"%I64d\\n\",min);\n\t\telse if(max>=min&&flag2==0)\n\t\t\t\tprintf(\"%I64d\\n\",max);\n\t\telse if(flag1==1&&flag2==0)\n\t\t\t\tprintf(\"%I64d\\n\",max);\n\t\telse if(flag1==0&&flag2==1)\n\t\t\t\tprintf(\"%I64d\\n\",min);\n\t\telse\n\t\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5770020533880903, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "062ca7be515765e852008f8f0ad033ad", "bug_code_uid": "80c88ae5aaa470aae8a2ba579e55bedc", "src_uid": "388450021f2f33177d905879485bb531", "apr_id": "46626b7f4e4377628f12c1b91b09f1ab", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,t,a,b,c;\n    scanf(\"%d\",&t);\n    for(i=1;i<t+1;i++){\n        scanf(\"%d%d\",&a,&b);\n        if(a>=b){\n            c=a-b;\n            if(c>=b){\n                printf(\"Finite\\n\");\n            }\n            else {\n                printf(\"Infinite\\n\");\n            }\n        }\n        else {\n            c=b-a;\n            if(c>=a){\n                printf(\"Finite\\n\");\n            }\n            else {\n                printf(\"Infinite\\n\");\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int j,t,a,b;\n        scanf(\"%d\",&t);\n        for(j=1;j<t+1;j++){\n                int gcd,i;\n            scanf(\"%d%d\",&a,&b);\n            for(i=1;i<=a&&i<=b;i++){\n                if(a%i==0&&b%i==0)\n                    gcd=i;\n            }\n            if(gcd==1){\n                printf(\"Finite\\n\");\n            }\n            else {\n                printf(\"Infinite\\n\");\n            }\n        }\n        return 0;\n}\n"}
{"similarity_score": 0.5124555160142349, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "b4a9c9488c75afc81a52021e8fba5fd6", "bug_code_uid": "3690052dd72878c83c5d459a2d37ab97", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "f34411a1f0ad07a54838343c266b3a47", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i,T=0;\nchar A[100000];\nscanf(\"%s\",A);\nfor(i=0;A[i]!='\\0';i++)\n{\nif((A[i]=='A' && A[i+1]=='B' && A[i+2]=='A')||(A[i]=='B' && A[i+1]=='A' && A[i+2]=='B'))\n{\nprintf(\"NO\\n\");\nT=1;\nbreak;\n}\nelse if(A[i]=='A' && A[i+1]=='B')\n{\nT+=3;\n}\nelse if(A[i]=='B' && A[i+1]=='A')\n{\nT+=4;\n}\n}\nif(T==7)\n{\nprintf(\"YES\\n\");\n}\nelse if(T!=1)\n{\nprintf(\"NO\\n\");\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i,T=0,j;\nchar A[100005];\nscanf(\"%s\",A);\nfor(i=0;A[i]!='\\0';i++)\n{\nif(T==3 || T==4 || T==7)\n{\nbreak;\n}\nelse if(A[i]=='A' && A[i+1]=='B')\n{\nfor(j=i+2;A[j]!='\\0';j++)\n{\nif(A[j]=='B' && A[j+1]=='A')\n{\nT+=3;\nprintf(\"YES\\n\");\nbreak;\n}\n}\n}\nelse if(A[i]=='B' && A[i+1]=='A')\n{\nfor(j=i+2;A[j]!='\\0';j++)\n{\nif(A[j]=='A' && A[j+1]=='B')\n{\nT+=4;\nprintf(\"YES\\n\");\nbreak;\n}\n}\n}\n}\nif(T!=7 && T!=4 && T!=3)\n{\nprintf(\"NO\\n\");\n}\nreturn 0;\n}"}
{"similarity_score": 0.9966394623139703, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "793b66337aa4d88521d0eb6c4356ccc2", "bug_code_uid": "0ee5dd293a02f09d2475b7811cfc6db9", "src_uid": "8f00837e04627e445dfb8b6cd0216640", "apr_id": "ff0a40626220997c3f66b5d499a9b242", "difficulty": 900, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,n,i,x,y,a,b,j,m;\n    char s[3005];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        x=0;\n        y=0;\n        j=1;\n        m=1;\n        scanf(\"%d\",&n);\n        scanf(\"%s\",s);\n        for(i=0;s[i];i++)\n        {\n            if(((s[i]-48)%2!=0)&&j)\n            {\n                x++;\n                a=i;\n                j--;\n            }\n            else if(((s[i]-48)%2!=0)&&m)\n            {\n                x++;\n                b=i;\n                m--;\n            }\n            else if((s[i]-48)%2!=0)\n            {\n                x++;\n            }\n            else if((s[i]-48)%2==0)\n                y++;\n        }\n        if(n==1||x==1)\n            printf(\"-1\\n\");\n        else if(n>1&&x>1)\n        {\n            if(((s[i-1]-48)%2!=0)&&(x%2==0))\n                puts(s);\n            else\n            {\n            for(i=a;i<=b;i++)\n            {\n                printf(\"%c\",s[i]);\n            }\n            printf(\"\\n\");\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,n,i,x,y,a,b,j,m;\n    char s[3005];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        x=0;\n        y=0;\n        j=1;\n        m=1;\n        scanf(\"%d\",&n);\n        scanf(\"%s\",s);\n        for(i=0;s[i];i++)\n        {\n            if(((s[i]-48)%2!=0)&&j)\n            {\n                x++;\n                a=i;\n                j--;\n            }\n            else if(((s[i]-48)%2!=0)&&m)\n            {\n                x++;\n                b=i;\n                m--;\n            }\n            else if((s[i]-48)%2!=0)\n            {\n                x++;\n            }\n            else if((s[i]-48)%2==0)\n                y++;\n        }\n        if(n==1||x==1||x==0)\n            printf(\"-1\\n\");\n        else if(n>1&&x>1)\n        {\n            if(((s[i-1]-48)%2!=0)&&(x%2==0))\n                puts(s);\n            else\n            {\n            for(i=a;i<=b;i++)\n            {\n                printf(\"%c\",s[i]);\n            }\n            printf(\"\\n\");\n            }\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.3154121863799283, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "cb13b251d2e45c3679046fd9a76feb25", "bug_code_uid": "dde1706d24564a07f5e24fc2e6813e98", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "cd59f1506f44c746ca3b97af4751b0bc", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n int n;\n scanf(\"%d \\n\",&n);\n int i=0;\n int nf,nj,nau;\n do{i++;\n    scanf(\"%d %d %d \\n\",&nf,&nj,&nau);\n    if (nf==nj  & nf==nau) {printf(\"%d \\n\",1);}\n    else if (nf == nj+nau) {printf(\"%d \\n \",2);}\n    else if (nf > nj+nau)   {printf(\"%d \\n\",(float)nf/2);}\n\n\n      }while(i<n);\n  return 0;\n}\n\ufffd", "fixed": "#include <stdio.h>\nmain()\n{\n int n;\n scanf(\"%d \\n\",&n);\n int i=0;\n int nf,nj,nau,min;\n while(i<n){\n    scanf(\"%d  %d  %d \\n\",&nf,&nj,&nau);\n    if(nj<nau){min=nj;}\n    else min=nau;\n    printf(\"%d \\n\",nf-min+1);\n    i++;}\n  return 0;\n}\n"}
{"similarity_score": 0.1925925925925926, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "eb041b467371e52c88863dfc788f9510", "bug_code_uid": "00b054fac48176ba2dc96131105a7791", "src_uid": "6581dbaff7eb52b63ccfe9c0c4117c09", "apr_id": "28011421b0c8a5711dbb9de65dbdf23f", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n, i, j, strln;\n    char str[100];\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++);\n    {\n        for(j = 0; j < n; j++)\n        {\n            scanf(\"%s\", str);\n\n            if(strlen(str) <= 10)\n                 printf(\"%s\\n\", str);\n\n            else\n            {\n                strln = strlen(str) - 2;\n                printf(\"%c%d%c\\n\", str[0], strln, str[strlen(str)-1]);\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define sz 5000\n\nint main()\n{\n    int i = 0, na = 0, nb = 0, nc = 0;\n    int sequenc = 1;\n    char string[sz];\n\n    scanf(\"%s\", string);\n\n    while(i < (strlen(string) - 1))\n    {\n        if(string[i] > string[i+1])\n        {\n            printf(\"NO\\n\");\n            sequenc = 0;\n            break;\n        }\n        i++;\n    }\n    if(sequenc != 0)\n    {\n\n        for(i = 0; i < strlen(string); i++)\n        {\n             if(string[i] == 'a')\n                 na++;\n             if(string[i] == 'b')\n                 nb++;\n             if(string[i] == 'c')\n                 nc++;\n        }\n        if(na > 0 && nb > 0)\n        {\n             if(nc == na || nc == nb)\n                printf(\"YES\\n\");\n             else\n                printf(\"NO\\n\");\n        }\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9824046920821115, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "16133c0206dca60f38575fcb11a9fa79", "bug_code_uid": "1bf8c19e4c96ac73f332799043303ec6", "src_uid": "14570079152bbf6c439bfceef9816f7e", "apr_id": "7a3fc18b5b968be127033481fc9a9f01", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,k,i,j,p=2;\n    scanf(\"%d%d\",&n,&k);\n    if(2*k+1>n)printf(\"-1\\n\");else{\n    printf(\"%d\\n\",(n*(n-1))/2);\n    for(i=1;i<=n;i++)\n           for(j=1;j<=k;j++){\n               printf(\"%d \",i);\n               if(i+j>n){printf(\"%d\\n\",i+j-n);}\n               else printf(\"%d\\n\",i+j);\n           }}\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,k,i,j,p=2;\n    scanf(\"%d%d\",&n,&k);\n    if(2*k+1>n)printf(\"-1\\n\");else{\n    printf(\"%d\\n\",k*n);\n    for(i=1;i<=n;i++)\n           for(j=1;j<=k;j++){\n               printf(\"%d \",i);\n               if(i+j>n){printf(\"%d\\n\",i+j-n);}\n               else printf(\"%d\\n\",i+j);\n           }}\n    return 0;\n}"}
{"similarity_score": 0.8400852878464818, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "10f11fb535ec5f62e32838f1962a4336", "bug_code_uid": "efe5eef1a365304abfa34a44e7fddd9c", "src_uid": "b3978805756262e17df738e049830427", "apr_id": "0022ecb5ef0677ecf57c129a9ed635a3", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint i,t,x,y;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x>=y)\n\t\tprintf(\"YES\\n\");\n\t\telse{\n\t\t\tif(x>=4)\n\t\t\tprintf(\"YES\\n\");\n\t\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint i,t,x,y;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x>=y)\n\t\tprintf(\"YES\\n\");\n\t\telse{\n\t\t\tif(x>=4)\n\t\t\tprintf(\"YES\\n\");\n\t\t\telse{\n\t\t\t\tif(x*1.5==y)\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\telse\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t}\n\t\t\n\t\t}\n\t}\n}\n\n"}
{"similarity_score": 0.9546769527483124, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "55251d4c095ceaa7487029425e9f9354", "bug_code_uid": "616931f186f8dbd56977bc2c9440158f", "src_uid": "a003d645999934c255f7b05d8494fa40", "apr_id": "d1a96616479fee4b23a0b33fbece327c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint i,j,n,k;\n\tprintf(\"Input  :  \\n\");\n\tscanf(\"%d\",&n);\n\tk=(n-1)/2;\n\tprintf(\"Output : \\n\");\n\tfor(i=0;i<n;i++){\n\t\tif(i<k){\n\t\tfor(j=0;j<=k-i-1;j++)\n\t\t\tprintf(\"*\");\n\t\tfor(j=k-i;j<=k+i;j++)\n\t\t\tprintf(\"D\");\n\t\tfor(j=k+i+1;j<=n-1;j++)\n\t\t\tprintf(\"*\");\n\t\tprintf(\"\\n\");\n\t\t}\n\t\tif(i==k){\n\t\t\tfor(j=0;j<=n-1;j++)\n\t\t\tprintf(\"D\");\n\t\tprintf(\"\\n\");\n\t\t}\n\n\t\tif(i>k){\n\t\tfor(j=0;j<=i-k-1;j++)\n\t\t\tprintf(\"*\");\n\t\tfor(j=i-k;j<=n-i+k-1;j++)\n\t\t\tprintf(\"D\");\n\t\tfor(j=n-i+k;j<=n-1;j++)\n\t\t\tprintf(\"*\");\n\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint i,j,n,k;\n\n\tscanf(\"%d\",&n);\n\tk=(n-1)/2;\n\n\tfor(i=0;i<n;i++){\n\t\tif(i<k){\n\t\tfor(j=0;j<=k-i-1;j++)\n\t\t\tprintf(\"*\");\n\t\tfor(j=k-i;j<=k+i;j++)\n\t\t\tprintf(\"D\");\n\t\tfor(j=k+i+1;j<=n-1;j++)\n\t\t\tprintf(\"*\");\n\t\tprintf(\"\\n\");\n\t\t}\n\t\tif(i==k){\n\t\t\tfor(j=0;j<=n-1;j++)\n\t\t\tprintf(\"D\");\n\t\tprintf(\"\\n\");\n\t\t}\n\n\t\tif(i>k){\n\t\tfor(j=0;j<=i-k-1;j++)\n\t\t\tprintf(\"*\");\n\t\tfor(j=i-k;j<=n-i+k-1;j++)\n\t\t\tprintf(\"D\");\n\t\tfor(j=n-i+k;j<=n-1;j++)\n\t\t\tprintf(\"*\");\n\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9082240762812872, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "045af4e9d719a705897ad731dcefd1c1", "bug_code_uid": "74cfff8cf7f46581eda46af76ebac1ad", "src_uid": "32855bb8ba33973178fde7c3d0beb2ce", "apr_id": "7020b95861ac86e0a15620dc9d8fdc1d", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t,z,n,k,i,j;\r\n    scanf(\"%d\",&t);\r\n    for(z=0;z<t;z++){\r\n        scanf(\"%d%d\",&n,&k);\r\n        int h[n];\r\n        for(i=0;i<n;i++) scanf(\"%d\",&h[i]);\r\n        for(j=0;j<k;j++){\r\n        for(i=0;i<n-1&&h[i]>=h[i+1];i++);\r\n        if(i<n-1) h[i]++;}\r\n        i=i+1<n-1?i:-1;\r\n        printf(\"%d\\n\",i);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t,z,n,k,i,j;\r\n    scanf(\"%d\",&t);\r\n    for(z=0;z<t;z++){\r\n        scanf(\"%d%d\",&n,&k);\r\n        int h[n];\r\n        for(i=0;i<n;i++) scanf(\"%d\",&h[i]);\r\n        if(k<20000){\r\n        for(j=0;j<k;j++){\r\n        for(i=0;i<n-1&&h[i]>=h[i+1];i++);\r\n        if(i<n-1) h[i]++;}\r\n        i=i<n-1?i:-2;\r\n        printf(\"%d\\n\",i+1);}\r\n        else printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9444444444444444, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "a93f955ae31667e1ab4299245eb95d18", "bug_code_uid": "ce931cb5e3b7204fd1016f909f90afc9", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "56fca6f5a9de137277835813249d6899", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n, i, m = 1, f = 0, c;\n    scanf (\"%d\", &n);\n    getchar();\n    char tm[n][7];\n    for (i = 0; i < n; i++) {\n        gets(tm[i]);\n    }\n    i = 0;\n    while (i < n) {\n        c = 1;\n        while (0 == strcmp(tm[i], tm[i+1])) {\n            c++;\n            i++;\n        }\n        i++;\n        if (c > 1) {\n            m = m + c - f;\n        }\n        f = m;\n    }\n    printf (\"%d\\n\", m);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n, i, m = 0, f = 0, c;\n    scanf (\"%d\", &n);\n    getchar();\n    char tm[n][7];\n    for (i = 0; i < n; i++) {\n        gets(tm[i]);\n    }\n    i = 0;\n    while (i < n) {\n        c = 0;\n        while (0 == strcmp(tm[i], tm[i+1])) {\n            c++;\n            i++;\n        }\n        if (c > f) {\n            m = m + (c - f);\n            f = c;\n        }\n        i++;\n    }\n    printf (\"%d\\n\", m + 1);\n    return 0;\n}\n"}
{"similarity_score": 0.42024832855778416, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "71f9ac1c3185b5643b9c58870fe4aecb", "bug_code_uid": "e1276c3eb3ca4f6e31b2eda5d30804de", "src_uid": "67a70d58415dc381afaa74de1fee7215", "apr_id": "5924a72f09692c15d9cb169930a36ea7", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint num = 0, people = 0;\n\tscanf(\"%d%d\", &num, &people);\n\tchar str[100] = {'0'};\n\tscanf(\"%s\", str);\n\n\n\tint i = 0;\n\tchar x = '0', y = '0';\n\tfor(i = 0; i < people; i++){\n\tscanf(\" %c %c\", &x, &y);\n\tint j = 0;\n\tfor(j = 0; j < num; j++){\n\tif(str[j] == x){\n\tstr[j] = y;\n\t}\n\telse if(str[j] == y){\n\tstr[j] = x;\n\t}\n\t}\n\t}\n\n\tprintf(\"%s\\n\", str);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint num = 0, people = 0, find1 = 0, find2 = 0;\n\tscanf(\"%d%d\", &num, &people);\n\tchar str[200100] = {'0'};\n\tchar tra[200100] = {'0'};\n\tscanf(\"%s\", str);\n\n\n\tint i = 0;\n\tchar x = '0', y = '0';\n\tfor(i = 0; i < 26; i++){\n\t\ttra[i] = i + 97;\n\t\t//printf(\"%c\", tra[i]);\n\t}\n\t//printf(\"\\n\");\n\n\tfor(i = 0; i < people; i++){\n\t\tscanf(\" %c %c\", &x, &y);\n\t\tint k = 0, re = 0;\n\t\tfor(k = 0; k < 26; k++){\n\t\t\tif(tra[k] == x){\n\t\t\t\ttra[k] = y;\n\t\t\t\t//printf(\"%c\\n\", tra[k]);\n\t\t\t}\n\t\t\telse if(tra[k] == y){\n\t\t\t\ttra[k] = x;\n\t\t\t\t//printf(\"%c\\n\", tra[k]);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n\n\tfor(i = 0; i < num; i++){\n\tprintf(\"%c\", tra[str[i] - 97]);\n\t}\n\tprintf(\"\\n\");\n\n\treturn 0;\n}"}
{"similarity_score": 0.9989082969432315, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a7e9bf7da243c15022d568700cd99f2e", "bug_code_uid": "3a1f74f6000bde1cc79dfa8bd975b4a2", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "9077a0e2296c31bab66d4d2abf8d1ac1", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i = 0, n = 0, first = 0, second = 0, neg = -1, zeros = 0,fornow = 0;\n    scanf(\"%d\",&n);\n    int arrayo[n], pos[n-2];\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&arrayo[i]);\n        if(arrayo[i] < 0)\n        {\n            neg++;\n            second = first;\n            first = i;\n        }\n        else if(arrayo[i] == 0)\n            zeros++;\n        else\n            pos[fornow++] = arrayo[i];\n\n    }\n    printf(\"1 %d\\n\",arrayo[first]);\n    printf(\"%d \",neg % 2 == 0 ? neg+fornow:neg-1+fornow);\n    for(i = 0; i < neg % 2 == 0? first: second; i++)\n        if(arrayo[i] < 0)\n            printf(\"%d \",arrayo[i]);\n    for(i = 0; i < fornow; i++)\n        printf(\"%d \",pos[i]);\n    printf(\"\\n\");\n    printf(\"%d \",neg % 2 == 0 ?zeros:zeros+(neg > 0? 1:0));\n    for(i = 0; i < zeros; i++)\n        printf(\"0 \");\n    if(neg % 2 == 1)\n        printf(\"%d \",arrayo[second]);\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i = 0, n = 0, first = 0, second = 0, neg = -1, zeros = 0,fornow = 0;\n    scanf(\"%d\",&n);\n    int arrayo[n], pos[n-2];\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&arrayo[i]);\n        if(arrayo[i] < 0)\n        {\n            neg++;\n            second = first;\n            first = i;\n        }\n        else if(arrayo[i] == 0)\n            zeros++;\n        else\n            pos[fornow++] = arrayo[i];\n\n    }\n    printf(\"1 %d\\n\",arrayo[first]);\n    printf(\"%d \",neg % 2 == 0 ? neg+fornow:neg-1+fornow);\n    for(i = 0; i < (neg % 2 == 0? first: second); i++)\n        if(arrayo[i] < 0)\n            printf(\"%d \",arrayo[i]);\n    for(i = 0; i < fornow; i++)\n        printf(\"%d \",pos[i]);\n    printf(\"\\n\");\n    printf(\"%d \",neg % 2 == 0 ?zeros:zeros+(neg > 0? 1:0));\n    for(i = 0; i < zeros; i++)\n        printf(\"0 \");\n    if(neg % 2 == 1)\n        printf(\"%d \",arrayo[second]);\n}\n"}
{"similarity_score": 0.16156670746634028, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "01f83e4a1e3bcf8cb3e1c6551669c85d", "bug_code_uid": "5f8490b83eb07e39a14f82103e5c83dc", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "236afb0a31a3b0c9d9d8d36a2f745f7f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n\tint a;\n\tint m,n,j,k;\n\tscanf(\"%d\",&j);\n\tfor(m=1;m<=j;m++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tk=a;\n\t\tfor(n=1;n<=a;n++)\n\t\t{\n\t\t\tif(n%3==0)\n\t\t\t{\n\t\t\t\tk--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if((n-3)%10==0)\n\t\t\t{\n\t\t\t\tk--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\",k);\n\t\t\n\t}\n}\n\t \t\t      \t\t\t\t \t \t \t   \t\t \t  \t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[1665];\n\tint i;\n\tfor(int i=1;i<=1666;i++){\n\t\tif((i%10)!=3&&(i%3)!=0){\n\t\t\ta[i-1]=i;\n\t\t}else{\n\t\t\ta[i-1]=0;\n\t\t}\n\t\t//printf(\"%d\\n\",a[i-1]);\t\n\t}\n\tint result[1000];\n\tint x=0;\n    for(int i=1;i<=1000;){\n\tif(a[x]!=0){\t\n\t\tresult[i]=a[x];\n\t\t//printf(\"%d\\n\",result[i]);\t\t\n\t\ti++;\n\t}\n\tx++;\n}\n    int n;\n    scanf(\"%d\",&n);\n\tint b;\n    for(int i=1;i<=n;i++){\n    \tscanf(\"%d\",&b);\n \t\tprintf(\"%d\\n\",result[b]);\n\t}\nreturn 0;\t\n}\n \t\t \t \t  \t\t\t  \t\t\t\t \t\t\t\t \t\t\t\t\t\t"}
{"similarity_score": 0.9968652037617555, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f5523f536b0fc4793de0493a4bdc69aa", "bug_code_uid": "3835ec460a82257496e6e2c6148128af", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "0a519338fe14cb0f5d77c085640e2476", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar a[100000][33],b[33];\nint c[100000];\nint main(){\n\tint s=0,j,n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%s\",b);\n\t\tfor(j=0;j<s;j++)\n\t\t\tif(strcmp(a[j],b)==0)\n\t\t\t\tbreak;\n\t\tif(j==s){\n\t\t\tprintf(\"OK\\n\");\n\t\t\tstrcpy(a[s++],b);\n\t\t}\n\t\telse{\n\t\t\tc[j]++;\n\t\t\tprintf(\"%s%d\",a[j],c[j]);\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[100000][33],b[33];\nint c[100000];\nint main(){\n\tint s=0,j,n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%s\",b);\n\t\tfor(j=0;j<s;j++)\n\t\t\tif(strcmp(a[j],b)==0)\n\t\t\t\tbreak;\n\t\tif(j==s){\n\t\t\tprintf(\"OK\\n\");\n\t\t\tstrcpy(a[s++],b);\n\t\t}\n\t\telse{\n\t\t\tc[j]++;\n\t\t\tprintf(\"%s%d\\n\",a[j],c[j]);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.6068111455108359, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "896c8b8b2af95b888fa8fcb7996c292d", "bug_code_uid": "d269f9befc982fcc49cdcc91a44ad53e", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "df7a931b6b89f2a51d46268bf2068f56", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n\nint main(){\n    \n    int season, eps[100000], d, array[100], swap, z, x=0, eps2[100], i;\n    scanf(\"%d\",&season);\n    for(z=0;z<season-1;z++){\n        scanf(\"%d\",&eps[z]);\n    }\n\n    i=0;\n    z=0;\n    for(i=1;i<=season;i++){\n        z = 0;\n         for(d=0;d<season-1;d++){\n    \n        \n                if(i!=eps[d]){\n                    z++;\n                }\n                            \n        }\n        if(z==season -1){\n            printf(\"%d\",i);\n            return 0;\n        }\n    }   \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\n\nint main(){\n    \n    int season, eps[100000], d, array[100], swap, z, x=0, eps2[100], i;\n    scanf(\"%d\",&season);\n    for(z=0;z<season-1;z++){\n        scanf(\"%d\",&eps[z]);\n    }\n    int sum=0, sum2=0;\n    for(i=1;i<=season;i++){\n        sum=sum+i;\n            \n    }\n\n    for(i=0;i<season-1;i++){\n        sum2=sum2+eps[i];\n    }\n    printf(\"%d\",sum-sum2);\n    \n    return 0;\n}"}
{"similarity_score": 0.956081081081081, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2f383bc608814eaa5db8c398823ec26d", "bug_code_uid": "e1bffc85cd339ddf8c871cf3e5d85e2a", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "3641101bc41ca7f0658eeaf5ae962e70", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tchar a[100005];\n\tint n,i,f1=0,f2=0,flag=0;\n\tscanf(\"%s\",a);\n\tn=strlen(a);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='A' && a[i+1]=='B' && i+1<n && f1==0)\n\t\t{\n\t//\t\tprintf(\"s\\n\");\n\t\t\tf1=1;\n\t\t\tif(a[i+2]=='A')\n\t\t\ti+=2;\n\t\t}\n\t\tif(f1==1 && a[i]=='B' && a[i+1]=='A' && i+1<n)\n\t\t{\n\t//\t\tprintf(\"s\\n\");\n\t\tflag=1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='B' && a[i+1]=='A' && i+1<n && f2==0)\n\t\t{\n\t\t\tf2=1;\n\t\t}\n\t\tif(a[i+2]=='B')\n\t\ti+=2;\n\t\tif(f2==1 && a[i]=='A' && a[i+1]=='B' && i+1<n)\n\t\tflag=1;\n\t}\n\tif(flag==1)\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tchar a[100005];\n\tint n,i,f1=0,f2=0,flag=0;\n\tscanf(\"%s\",a);\n\tn=strlen(a);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='A' && a[i+1]=='B' && i+1<n && f1==0)\n\t\t{\n\t//\t\tprintf(\"s\\n\");\n\t\t\tf1=1;\n\t\t\tif(a[i+2]=='A')\n\t\t\ti+=2;\n\t\t}\n\t\tif(f1==1 && a[i]=='B' && a[i+1]=='A' && i+1<n)\n\t\t{\n\t//\t\tprintf(\"s\\n\");\n\t\tflag=1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='B' && a[i+1]=='A' && i+1<n && f2==0)\n\t\t{\n\t\t\tf2=1;\n\t\tif(a[i+2]=='B')\n\t\ti+=2;\n\t\t}\n\t\tif(f2==1 && a[i]=='A' && a[i+1]=='B' && i+1<n)\n\t\tflag=1;\n\t}\n\tif(flag==1)\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.6529147982062781, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "6fd9de1dda6062b32a8de80cf4ce1fa4", "bug_code_uid": "f60e5c24c84139d96d07ec114e71b2e1", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "ca972f9102570bec9cb8602cf5547b03", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<math.h>\nint main ()\n{\n    long int a,b,c,d,i,f,n;\n    int x[101];\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        for(int j=1; j<=b; j++)\n        {\n            for(int k=2; k<=a; k++)\n            {\n                d=a%k;\n                if(d==0)\n                {\n                    a=a+k;\n                    break;\n                }\n            }\n        }\n        x[i]=a;\n    }\n    for(i=1; i<=n; i++)\n    {\n        printf(\"%d\\n\",x[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<math.h>\nint main ()\n{\n    long int a,b,d,i,n;\n    int x[101];\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a%2==0)\n            x[i]=a+(b*2);\n        else\n        {\n            for(int j=2; j<=a; j++)\n            {\n                d=a%j;\n                if(d==0)\n                {\n                    x[i]=a+((b-1)*2)+j;\n                    break;\n                }\n            }\n        }\n    }\n    for(i=1; i<=n; i++)\n    {\n        printf(\"%d\\n\",x[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6579804560260586, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "c444c9cfb208b072ea370b317a148505", "bug_code_uid": "d0ed5f4d6ade409f4b08a27d5285317b", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "c4c29af7a46303e51a58529a842ae8cc", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint a,b,c;\nscanf(\"%d\",a);\nprintf(\"%d %d\\n\",1,4);\nprintf(\"%d %d\\n\",2,3);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint a,b,c,d,e;\nscanf(\"%d\",&a);\nd=1;\ne=a*a;\n//d=a*(a+1)/2;\nfor(b=1;b<=a;b++)\n{\nfor(c=1;c<=a/2;c++)\n{\nprintf(\"%d %d \",d,e);\nd++;\ne--;\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9464788732394366, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ad88775ce10caafeeb209086e5a7d2f2", "bug_code_uid": "c77f9b06b24f14ceef271bc571908666", "src_uid": "075988685fa3f9b20bd215037c504a4f", "apr_id": "f274ae708c5caf4ff3f5c64f0a6dbfef", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n long long  int j,t,i,f,x,w,n,m,z=0,d,g=0,k=0,sum=0,count=1,l=0;\n\n scanf(\"%lld %lld %lld\",&n,&m,&x);\nchar a[n];\nchar b[n];\nscanf(\"%s\",a);\n\nd=n%m;\nfor(i=n-m;i<n;i++){\n    if( a[i] =='1'){for(j=i;j<n;j++){\n            if(a[j]=='1'){\n                l++;\n            }\n        b[k]=a[j];\n        k++;\n    }\nb[k]='\\0';\n\n\n\n       if(b[k-x-1]=='1'){\n\n           sum=l-1;\n     }\n     else  sum=l+1;\n\n\n     printf(\"%lld\",sum);\n     break;\n    }\n}\n\n            //2|1);\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n long long  int j,t,i,f,x,w,n,m,z=0,d,g=0,k=0,sum=0,count=1,l=0;\n\n scanf(\"%lld %lld %lld\",&n,&m,&x);\nchar a[n];\nchar b[n];\nscanf(\"%s\",a);\n\nd=n%m;\nfor(i=n-m;i<n;i++){\n    if( a[i] =='1'){\n            for(j=i;j<n;j++){\n            if(a[j]=='1'){\n                l++;\n            }\n        b[k]=a[j];\n        k++;\n    }\nb[k]='\\0';\n\n\n\n       if(b[k-x-1]=='1'){\n\n           sum=l-1;\n     }\n     else  sum=l+1;\n\n\n     printf(\"%lld\",sum);\n     break;\n    }\n\n}\n  if(i==n){\n        printf(\"1\");\n\n    }\n            //2|1);\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9725888324873097, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "bb2f82b1abccf02878bd580744188eab", "bug_code_uid": "38b08f779c790c20cc15eaf96db4ad5c", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "892d54c3a7b676c5c13d6851d133e2f4", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define N 1003\n\nint cnt[26];\nint size=sizeof(cnt[0]);\nint cmp(const void *a, const void *b)\n{\n\treturn *(int*)b-*(int*)a;\n}\nint min(int a, int b)\n{\n\treturn a<b? a : b;\n}\nchar s[N];\n\nint main(void)\n{\n\tint n, k, i, ans, t;\n\t\n\tscanf(\"%d%d%*c\", &n, &k);\n\tgets(s);\n\tfor (i=0; i<n; ++i)\n\t\t++cnt[s[i]-'A'];\n\tqsort(cnt, 26, size, cmp);\n\tans = 0;\n\tfor (i=0; i<n && k; ++i) {\n\t\tt = min(k,cnt[i]);\n\t\tans += t*t;\n\t\tk -= t;\n\t}\n\tprintf(\"%d\\n\", ans);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define N 100005\n\nint cnt[26];\nint size=sizeof(cnt[0]);\nint cmp(const void *a, const void *b)\n{\n\treturn *(int*)b-*(int*)a;\n}\nint min(int a, int b)\n{\n\treturn a<b? a : b;\n}\nchar s[N];\n\nint main(void)\n{\n\tint n, k, i;\n\tlong long ans, t;\n\t\n\tscanf(\"%d%d%*c\", &n, &k);\n\tgets(s);\n\tfor (i=0; i<n; ++i)\n\t\t++cnt[s[i]-'A'];\n\tqsort(cnt, 26, size, cmp);\n\tans = 0;\n\tfor (i=0; k; ++i) {\n\t\tt = min(k,cnt[i]);\n\t\tans += t*t;\n\t\tk -= t;\n\t}\n\tprintf(\"%I64d\\n\", ans);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9533678756476683, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b1b39bdad3e2556e1c91a6889a09c1be", "bug_code_uid": "a548b702d9ef84010160aa253595777a", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "5e9cbb3d2a1b4228e4f09f38b10ab11e", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void){\n  int n,m,sa,i;\n  scanf(\"%d %d\",&n,&m);\n  int array[n+m];\n  if((n*2+2<m)||(m<n-1)){\n    puts(\"-1\");\n    return 0;\n  }\n  if(m==n-1) for(i=0;i<n+m;i++) printf(\"%d\",i%2);\n  else{\n    sa=m-n;\n    for(i=0;i<sa;i++){\n      if(i==n) break;\n      printf(\"110\");\n    }\n    for(i=0;i<sa-n;i++) printf(\"1\");\n  }\n  putchar('\\n'); \n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void){\n  int n,m,sa,i;\n  scanf(\"%d %d\",&n,&m);\n  int array[n+m];\n  if((n*2+2<m)||(m<n-1)){\n    puts(\"-1\");\n    return 0;\n  }\n  if(m==n-1) for(i=0;i<n+m;i++) printf(\"%d\",i%2);\n  else{\n    sa=m-n;\n    for(i=0;i<sa;i++){\n      if(i==n) break;\n      printf(\"110\");\n    }\n    for(i=0;i<sa-n;i++) printf(\"1\");\n    for(i=sa;i<n;i++) printf(\"10\");\n  }\n  putchar('\\n'); \n  return 0;\n}\n"}
{"similarity_score": 0.9944341372912802, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "17a3b30d3bfa487629e150af8011b7e8", "bug_code_uid": "6b397f38d2c978ee337d987eac50df53", "src_uid": "0ce05499cd28f0825580ff48dae9e7a9", "apr_id": "a5c49cbe320d7d108c2d71d23d104cc3", "difficulty": 1200, "tags": ["brute force", "implementation", "math", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int n,l,i,j,k,num;\r\n    int a[10007],aa[20007]={0};\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n        num=0;\r\n        scanf(\"%d\",&l);\r\n        for(j=0;j<l;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            aa[a[j]]=j+1;\r\n            }\r\n        for(j=1;j<=2*l;j++){\r\n            for(k=1;k<=2*l/j;k++)\r\n                if(aa[j]&&aa[k]&&aa[j]+aa[k]==j*k&&aa[j]<aa[k]) num++;\r\n        }\r\n    printf(\"%d\\n\",num);\r\n    for(j=0;j<l;j++){\r\n            aa[a[j]]=0;\r\n            }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int n,l,i,j,k,num;\r\n    int a[100007],aa[200007]={0};\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n        num=0;\r\n        scanf(\"%d\",&l);\r\n        for(j=0;j<l;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            aa[a[j]]=j+1;\r\n            }\r\n        for(j=1;j<=2*l;j++){\r\n            for(k=1;k<=(2*l+1)/j;k++)\r\n                if(aa[j]&&aa[k]&&aa[j]+aa[k]==j*k&&aa[j]<aa[k]) num++;\r\n        }\r\n    printf(\"%d\\n\",num);\r\n    for(j=0;j<l;j++){\r\n            aa[a[j]]=0;\r\n            }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9948783610755442, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4d985bd99a824ee4f5fc58f3acb6a8e6", "bug_code_uid": "0d8aea70cbe48efe13a2f88902cdd4a4", "src_uid": "fd63aeefba89bef7d16212a0d9e756cd", "apr_id": "e345afba10dba716a17818ba241329e7", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<stdbool.h>\nint main()\n{\n\tchar a[1000000],b[1000000],Na[1000000],Nb[1000000];\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\n\tint A=strlen(a),B=strlen(b),i=0,j=0,flag=0;\n\tfor(i=0;i<A;i++)\n\t{\n\t\tif(a[i]!='0')\n\t\t{\n\t\t\tflag=1;\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tNa[j]=a[i];\n\t\t\tj++;\n\t\t}\n\t}\n\tflag=0;int k=0;\n\tfor(i=0;i<B;i++)\n\t{\n\t\tif(b[i]!='0')\n\t\t{\n\t\t\tflag=1;\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tNb[k]=b[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tint count=0;\n//\tprintf(\"%s %d\t%s %d\",Na,j,Nb,k); \n\tif(j>k) printf(\">\");\n\telse if(k>j) printf(\"<\");\n\telse{\n\tfor(i=0;i<j;i++)\n\t{\n\t\tif(Na[i]>Nb[i])\n\t\t{\n\t\t\tprintf(\">\");\n\t\t\treturn 0;\n\t\t}\n\t\telse if(Na[i]<Nb[i])\n\t\t{\n\t\t\tprintf(\"<\");\n\t\t\treturn 0;\n\t\t}\n\t\tcount++;\n\t}\n\tif(count==k) printf(\"=\");\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<stdbool.h>\nint main()\n{\n\tchar a[1000005],b[1000005],Na[1000005],Nb[1000005];\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\n\tint A=strlen(a),B=strlen(b),i=0,j=0,flag=0;\n\tfor(i=0;i<A;i++)\n\t{\n\t\tif(a[i]!='0')\n\t\t{\n\t\t\tflag=1;\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tNa[j]=a[i];\n\t\t\tj++;\n\t\t}\n\t}\n\tflag=0;int k=0;\n\tfor(i=0;i<B;i++)\n\t{\n\t\tif(b[i]!='0')\n\t\t{\n\t\t\tflag=1;\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tNb[k]=b[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tint count=0;\n//\tprintf(\"%s %d\t%s %d\",Na,j,Nb,k); \n\tif(j>k) printf(\">\");\n\telse if(k>j) printf(\"<\");\n\telse{\n\tfor(i=0;i<j;i++)\n\t{\n\t\tif(Na[i]>Nb[i])\n\t\t{\n\t\t\tprintf(\">\");\n\t\t\treturn 0;\n\t\t}\n\t\telse if(Na[i]<Nb[i])\n\t\t{\n\t\t\tprintf(\"<\");\n\t\t\treturn 0;\n\t\t}\n\t\tcount++;\n\t}\n\tif(count==k) printf(\"=\");\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6777706598334401, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "648cdbacc212211c26a08adffcd76f00", "bug_code_uid": "b06452260dc897afbcc84c710dfee4ee", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "a01e1df10412525b77af45fcb7415542", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\nint main(void) {\n\t//INPUT TESTCASE\n\tint t;\n\tscanf(\"%d\",&t);\n\t//CONSTRAINT ON T\n\tif(t>=1&&t<=1000)\n\t{\n\t    int i;\n\t    //LOOP FOR EACH TESTCASE(T-LOOP)\n\t    for(i=1;i<=t;i++)\n        {\n            //INPUT 4 NUMBERS A,B,C,D\n            int a,b,c,d;\n            scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n            //CONSTRAINT ON A,B,C,D\n            if(a>=1&&a<=b&&b<=c&&c<=d&&d<=1000000000)\n            {\n                //3 NUMBERS X,Y,Z\n                int x,y,z;\n                if(a+b>c)\n                {\n                    printf(\"%d %d %d\",a,b,c);\n                }\n                else\n                {\n                    for(x=a;x<=b;x++)\n                    {\n                        if(x+b>c)\n                            {printf(\"%d %d %d\",x,b,c);\n                            break;}\n                    }\n                }\n\n            }\n            if(i<t)\n            {\n                printf(\"\\n\");\n            }\n        }\n\t}\n\treturn (0);\n}\n\n", "fixed": "#include <stdio.h>\nint main(void) {\n\t//INPUT TESTCASE\n\tint t;\n\tscanf(\"%d\",&t);\n\t//CONSTRAINT ON T\n\tif(t>=1&&t<=1000)\n\t{\n\t    int i;\n\t    //LOOP FOR EACH TESTCASE(T-LOOP)\n\t    for(i=1;i<=t;i++)\n        {\n            //INPUT 4 NUMBERS A,B,C,D\n            int a,b,c,d;\n            scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n            //CONSTRAINT ON A,B,C,D\n            if(a>=1&&a<=b&&b<=c&&c<=d&&d<=1000000000)\n            {\n                printf(\"%d %d %d\",b,c,c);\n            }\n            if(i<t)\n            {\n                printf(\"\\n\");\n            }\n        }\n\t}\n\treturn (0);\n}\n\n"}
{"similarity_score": 0.9767201241593378, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "84efa46798dc2a6ee8963e1c5eca3320", "bug_code_uid": "5df014ebbca1f0b200b4e390155edec4", "src_uid": "656e44f1aa0202a3e8414bbce9381b09", "apr_id": "1d5a229871dad1485e05d4ec63f901e3", "difficulty": 2400, "tags": ["graphs", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define N 5008\n\nint a[N];\nint b[1000008];\n\nint delta[1000008];\nint cmp(const void *p1, const void *p2)\n{\n\treturn *(int *)p1 - *(int *)p2;\n}\n\nint main()\n{\n\tint n, k;\n\n\tscanf(\"%d%d\", &n, &k);\n\tint i, j;\n\tfor (i=0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tqsort(a, n, sizeof(a[0]), cmp);\n\tmemset(delta, 0, sizeof(delta));\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < i; j++)\n\t\t\tdelta[a[i]-a[j]]++;\n\n\tint m;\n\tfor (m = 1;;m++) {\n\t\tint isok = 1;\n\t\tint cnt = 0;\n\t\tint sum = 0;\n//\t\tmemset(b, 0, sizeof(b));\n\t\tfor (i = m; i <= a[n-1]+1; i += m) {\n\t\t\tsum += delta[i];\n\t\t\tif (sum > k)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (sum > k)\n\t\t\tcontinue;\n\n\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tint temp = a[i] % m;\n\t\t\tif (b[temp] == 0)\n\t\t\t\tb[temp] = 1;\n\t\t\telse {\n\t\t\t\tcnt++;\n\t\t\t\tif (cnt > k) {\n\t\t\t\t\tisok = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(j = 0; j < i; j++) b[ a[j]%m ] = 0;\n\t\tif (isok == 1) {\n\t\t\tprintf(\"%d\\n\", m);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define N 5008\n\nint a[N];\nint b[1000008];\n\nint delta[1000008];\nint cmp(const void *p1, const void *p2)\n{\n\treturn *(int *)p1 - *(int *)p2;\n}\n\nint main()\n{\n\tint n, k;\n\n\tscanf(\"%d%d\", &n, &k);\n\tint i, j;\n\tfor (i=0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tqsort(a, n, sizeof(a[0]), cmp);\n\tmemset(delta, 0, sizeof(delta));\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < i; j++)\n\t\t\tdelta[a[i]-a[j]]++;\n\n\tint m;\n\tfor (m = 1;;m++) {\n\t\tint isok = 1;\n\t\tint cnt = 0;\n\t\tint sum = 0;\n//\t\tmemset(b, 0, sizeof(b));\n\t\tfor (i = m; i <= a[n-1]+1; i += m) {\n\t\t\tsum += delta[i];\n\t\t\tif (sum > k*(k+1)/2)\n\t\t\t\tbreak;\n\t\t}\n//\t\tprintf(\"sum:%d\\n\", sum);\n\t\tif (sum > k*(k+1)/2)\n\t\t\tcontinue;\n\n\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tint temp = a[i] % m;\n\t\t\tif (b[temp] == 0)\n\t\t\t\tb[temp] = 1;\n\t\t\telse {\n\t\t\t\tcnt++;\n\t\t\t\tif (cnt > k) {\n\t\t\t\t\tisok = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(j = 0; j < i; j++) b[ a[j]%m ] = 0;\n\t\tif (isok == 1) {\n\t\t\tprintf(\"%d\\n\", m);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.20757363253856942, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "6dcb2994c201fba56f8e7fa113cb943a", "bug_code_uid": "8162db08d96b518be838c412911c5967", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "5ffaf910cb296c3685cca53b893f34c8", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n long int n,count1=0,count2=0,k,i,j;\n scanf(\"%ld\",&n);\n int a[n];\n for(i=0;i<n;i++)\n scanf(\"%d\",&a[i]);\n long int m;\n  scanf(\"%ld\",&m);\n  int b[m];\n for(i=0;i<m;i++)\n scanf(\"%d\",&b[i]);\n for(j=0;j<m;j++)\n {for(i=0;i<n;i++){\n count1++;\n if(b[j]==a[i])\n break;}\n for(k=n-1;k>=0;k--){\n count2++;\n if(b[j]==a[k])\n break;\n }\n }\n printf(\"%d %d\",count1, count2);\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nlong long int a[100005];\nint main()\n{\nlong long  int n,b,m,d,sum1=0,sum2=0,i;\n\nscanf(\"%I64d\",&n);\nfor(i=1;i<=n;i++)\n { scanf(\"%I64d\",&b);\n   a[b]=i;\n }\n scanf(\"%I64d\",&m);\n for(i=1;i<=m;i++)\n { scanf(\"%I64d\",&d);\n   sum1+=a[d];\n   sum2+=n-a[d]+1;\n}\nprintf(\"%I64d %I64d\",sum1, sum2);\nreturn 0;\n}\n"}
{"similarity_score": 0.5603511338697879, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "58d7f09417ba55b5e6317bd0ff15f465", "bug_code_uid": "1d6934db39c75aa777e1d98e4775c190", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "31560e3575e6d4299d8e309ee6a59af9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(a==b&&a==c)\r\n            printf(\"%d %d %d\\n\",a+1,b+1,c+1);\r\n        else if(a>b&&a>c)\r\n            printf(\"%d %d %d\\n\",a-a,a-b+1,a-c+1);\r\n        else if(b>a&&b>c)\r\n            printf(\"%d %d %d\\n\",b-a+1,b-b,b-c+1);\r\n        else if(a==0&&b==c)\r\n            printf(\"%d 1 1\\n\",b+1);\r\n        else if(b==0&&a==c)\r\n            printf(\"1 %d 1\\n\",a+1);\r\n        else if(c==0&&b==a)\r\n            printf(\"1 1 %d\\n\",b+1);\r\n        else\r\n            printf(\"%d %d %d\\n\",c-a+1,c-b+1,c-c);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b,c;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(a==b&&a==c)\r\n            printf(\"%d %d %d\\n\",1,1,1);\r\n        else if(a>b&&a>c)\r\n            printf(\"%d %d %d\\n\",a-a,a-b+1,a-c+1);\r\n        else if(b>a&&b>c)\r\n            printf(\"%d %d %d\\n\",b-a+1,b-b,b-c+1);\r\n        else if(a!=c&&b==c&&a<b&&a<c)\r\n            printf(\"%d %d %d\\n\",b-a+1,1,1);\r\n        else if(b!=c&&a==c&&b<a&b<c)\r\n            printf(\"%d %d %d\\n\",1,a-b+1,1);\r\n        else if(c!=a&&b==a&&c<b&&c<a)\r\n            printf(\"%d %d %d\\n\",1,1,b-c+1);\r\n        else\r\n            printf(\"%d %d %d\\n\",c-a+1,c-b+1,c-c);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.998992950654582, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e362e2c51d4dc9183277f97ce4116477", "bug_code_uid": "889bbc8a4cd6effad28e8653b995b89e", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "6edb1eea1cef80e31228dc30beb57589", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main(){\r\n    int t, n, ans;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        ans=0;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for(int i=0; i<n; ++i){\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        int l=0, r=n-1, g=0;\r\n        for(int i=0; i<n; ++i){\r\n            if(arr[i]==1 || arr[i]==n){\r\n                l=i+1;\r\n                ans+=i+1;\r\n                g=(n+1)-arr[i];\r\n                break;\r\n            }\r\n            else if(arr[n-1-i]==1 || arr[n-1-i]==n){\r\n                r=n-2-i;\r\n                ans+=i+1;\r\n                g=(n+1)-arr[n-1-i];\r\n                break;\r\n            }\r\n        }\r\n        for(int i=0; i<n; ++i){\r\n            if(arr[l+i]==g){\r\n                ans+=i+1;\r\n                break;\r\n            }\r\n            else if(arr[r-i]==g){\r\n                ans+=i+1;\r\n                break;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    system(\"pause\");\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main(){\r\n    int t, n, ans;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        ans=0;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for(int i=0; i<n; ++i){\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        int l=0, r=n-1, g=0;\r\n        for(int i=0; i<n; ++i){\r\n            if(arr[i]==1 || arr[i]==n){\r\n                l=i+1;\r\n                ans+=i+1;\r\n                g=(n+1)-arr[i];\r\n                break;\r\n            }\r\n            else if(arr[n-1-i]==1 || arr[n-1-i]==n){\r\n                r=n-2-i;\r\n                ans+=i+1;\r\n                g=(n+1)-arr[n-1-i];\r\n                break;\r\n            }\r\n        }\r\n        for(int i=0; i<n; ++i){\r\n            if(arr[l+i]==g){\r\n                ans+=i+1;\r\n                break;\r\n            }\r\n            else if(arr[r-i]==g){\r\n                ans+=i+1;\r\n                break;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    //system(\"pause\");\r\n    return 0;\r\n}"}
{"similarity_score": 0.9610169491525423, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4269d66c47188d934a12b9f22315a836", "bug_code_uid": "952796826c5ce2b62a4b8acc37553c70", "src_uid": "6854ad3597f9f41d475aacb774b823ed", "apr_id": "de758012779302b191d52cd714ea09ac", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n   int n,j,i,t;\r\n   long int k;\r\n   scanf(\"%d\",&t);\r\n   for(i=0;i<t;i++){int s=0;\r\n      scanf(\"%d\",&n);\r\n      scanf(\"%ld\",&k);\r\n      int a[n];\r\n      for(j=0;j<n;j++){\r\n         scanf(\"%d\",&a[j]);\r\n      }\r\n      while(k--){if(s==(n-1)){\r\n         break;\r\n      }\r\n      \r\n         if(a[s]>0){\r\n            a[s]=a[s]-1;\r\n             a[n-1]=a[n-1]+1;\r\n         }\r\n         else{s=s+1;\r\n          a[s]=a[s]-1;\r\n             a[n-1]=a[n-1]+1;}\r\n         \r\n      }\r\n      for(j=0;j<n;j++){\r\n         printf(\"%d \",a[j]);\r\n\r\n      }\r\n      printf(\"\\n\");\r\n   }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n   int n,j,i,t;\r\n   long int k;\r\n   scanf(\"%d\",&t);\r\n   for(i=0;i<t;i++){int s=0;\r\n      scanf(\"%d\",&n);\r\n      scanf(\"%ld\",&k);\r\n      int a[n];\r\n      for(j=0;j<n;j++){\r\n         scanf(\"%d\",&a[j]);\r\n      }\r\n      while(k--){if(s==(n-1)){\r\n         break;\r\n      }\r\n      \r\n         if(a[s]>0){\r\n            a[s]=a[s]-1;\r\n             a[n-1]=a[n-1]+1;\r\n         }\r\n         else{s=s+1;\r\n             k=k+1;}\r\n         \r\n      }\r\n      for(j=0;j<n;j++){\r\n         printf(\"%d \",a[j]);\r\n\r\n      }\r\n      printf(\"\\n\");\r\n   }\r\n    return 0;\r\n}"}
{"similarity_score": 0.998766954377312, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "04c9c6700a045570f29b8d7f96d44523", "bug_code_uid": "1f3a78a01d04de5968d9a00bbc570323", "src_uid": "a48ef749bf54d673772e09025ae806de", "apr_id": "dfc238181099d8b5eea3e0f5c66b40cc", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint a[100002];\nstruct name{\n\tint in;\n\tchar s[51];\n} ar[200005];\nint cstringcmp(struct name *a, struct name *b) \n{ \n    int i=0;\n    while((*a).s[i]!='\\0' && (*b).s[i]!='\\0'){\n    \tif((*a).s[i]>(*b).s[i]){\n    \t\treturn 1;\n    \t}else if((*a).s[i]<(*b).s[i]){\n    \t\treturn -1;\n    \t} \n    \ti++;\n    }\n    if((*a).s[i]=='\\0')\treturn -1;\n    if((*b).s[i]!='\\0') return 1;\n    return 0;\n} \n\nint main(){\n\tint n,i,j,k;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=2*n;i++){\n\t\tscanf(\"%s\",ar[i].s);\n\t\tif(i%2==0)\tar[i].in=i/2;\n\t\telse ar[i].in=(i+1)/2;\n\t}\n\t\n\tqsort(ar+1,2*n,sizeof(struct name),cstringcmp);\n\tfor(i=1;i<=n;i++)\tscanf(\"%d\",&a[i]);\n\tj=1;\n\tk=1;\n\twhile(j<=n && k<=2*n){\n\t\tif(a[j]==ar[k].in){\n\t\t\tj++;k++;\n\t\t}else\tk++;\n\t}\n\tif(j==(n+1))\tprintf(\"YES\\n\");\n\telse\tprintf(\"NO\\n\");\n\treturn 0;\n}\n\t\t\n\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint a[100002];\nstruct name{\n\tint in;\n\tchar s[51];\n} ar[200005];\nint cstringcmp(struct name *a, struct name *b) \n{ \n    int i=0;\n    while((*a).s[i]!='\\0' && (*b).s[i]!='\\0'){\n    \tif((*a).s[i]>(*b).s[i]){\n    \t\treturn 1;\n    \t}else if((*a).s[i]<(*b).s[i]){\n    \t\treturn -1;\n    \t} \n    \ti++;\n    }\n    if((*a).s[i]=='\\0')\treturn -1;\n    if((*b).s[i]=='\\0') return 1;\n    return 0;\n} \n\nint main(){\n\tint n,i,j,k;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=2*n;i++){\n\t\tscanf(\"%s\",ar[i].s);\n\t\tif(i%2==0)\tar[i].in=i/2;\n\t\telse ar[i].in=(i+1)/2;\n\t}\n\t\n\tqsort(ar+1,2*n,sizeof(struct name),cstringcmp);\n\tfor(i=1;i<=n;i++)\tscanf(\"%d\",&a[i]);\n\tj=1;\n\tk=1;\n\twhile(j<=n && k<=2*n){\n\t\tif(a[j]==ar[k].in){\n\t\t\tj++;k++;\n\t\t}else\tk++;\n\t}\n\tif(j==(n+1))\tprintf(\"YES\\n\");\n\telse\tprintf(\"NO\\n\");\n\treturn 0;\n}\n\t\t\n\t\n"}
{"similarity_score": 0.7779349363507779, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0a1a91fc2da2b8f2a3388bcba94d9ca7", "bug_code_uid": "48c2e57bbd3bb3c33f15b0fcd18cf5a7", "src_uid": "5172d358f1d451b42efff1019219a54d", "apr_id": "d24ddc112400d6f7e5686fc1c122d0b2", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,a,b,x,mod,d;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        if((x<a&&x<b)||(x>a&&x>b))\n        {\n           mod=a%x;\n           d=x/2;\n           if(mod>=d)\n           {\n               printf(\"YES\\n\");\n           }\n           else\n           {\n               printf(\"NO\\n\");\n           }\n        }\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,a,b,x,d;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n\n           if(a*2>b)\n           {\n               printf(\"YES\\n\");\n           }\n           else\n           {\n               printf(\"NO\\n\");\n           }\n\n\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9151572926596759, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "936fa13b9d778e89481b1e59916965a8", "bug_code_uid": "40100f434db109764ecf584f1770cc64", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "43f23ee3d3ba72fe9432ba8631d74beb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define INF 1000000009\n#define NUM 100\n\nint main(void){\n    int t,n,control;\n    scanf(\"%d\", &t);\n\n    for(int i=0; i<t; i++){\n        scanf(\"%d\",&n);\n        int maxindex = 0, minindex = 0, max =0, min =INF;\n\n        for(int j=0;j<n;j++){\n            scanf(\"%d\",&control);\n            if(control>=max){\n                max = control;\n            }\n            else if(control<=min){\n                min = control;\n            }\n        }\n        int diff = max-min;\n        printf(\"%d\\n\", diff);\n    }\n}", "fixed": "#include <stdio.h>\n#define INF 1000000009\n#define NUM 100\n\nint main(void){\n    int t,n,control;\n    scanf(\"%d\", &t);\n\n    for(int i=0; i<t; i++){\n        scanf(\"%d\",&n);\n        int max = 0, min = INF;\n        control = 0;\n\n        for(int j=0;j<n;j++){\n            scanf(\"%d\",&control);\n            \n            if(control>=max){\n                max = control;\n            }\n            if(control<=min){\n                min = control;\n            }\n        }\n        int diff = max-min;\n        printf(\"%d\\n\", diff);\n    }\n}"}
{"similarity_score": 0.6826706676669168, "equal_cnt": 16, "replace_cnt": 7, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "269ab7dd59f5d89c6d64b8d1f62ddb2f", "bug_code_uid": "156121b36d1b96b2a657c52edd840259", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "5e771a0a455bcc97dde78628dcadee69", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint cmpfunc(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b); \n}\nint main(void) \n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[100001],j=1,i,flag=0,t;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(arr[i]>=arr[i-1])\n        {\n            j++;\n        }\n    }\n    t=n-j;\n    if(arr[n-1]>arr[0])\n    {\n        if(i!=n)\n        {\n            flag=1;\n        }\n    }\n    \n    for(j=i;j<n-1;j++)\n    {\n        if(arr[j]>arr[j+1] && flag!=1)\n        {\n            flag=1;\n        }\n    }\n        if(flag==0)\n            printf(\"%d\\n\",t);\n        else\n        {\n            printf(\"-1\\n\");\n        }\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint cmpfunc(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b); \n}\nint main(void) \n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[100001],j=1,i,flag=0,t=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    i=1;\n    while(arr[i]>=arr[i-1] && i<n)\n            i++;\n    t=n-i;\n    if(arr[n-1]>arr[0] && i!=n)\n    {\n        flag=1;\n    }\n \n    for(j=i;j<n-1;j++)\n    {\n        if(arr[j]>arr[j+1] && flag!=1)\n        {\n            flag=1;\n        }\n    }\n    if(flag==0)\n    {\n        printf(\"%d\\n\",t);\n    }\n    else\n    {\n        printf(\"-1\\n\");\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.9971590909090909, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4b3fbb91ba19479c9f90e42230fa050a", "bug_code_uid": "d4907d26ab7520b0b49e56dbdd0d5603", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "3356fe74c4cd934a2591422f926d4292", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tlong long int n,k,ans;\n\tscanf(\"%lld\",&n);\n    k=n/2;\n    printf(\"%lld\\n\",k);\n\tif(n%2==0)\n\t{\n\t    for(i=0;i<k;i++)\n\t    {\n\t        ans=2;\n\t        printf(\"%lld \",ans);\n\t    }\n\t}\n\telse \n\t{\n\t for(i=0;i<k;i++)\n\t {\n\t     ans=2;\n\t     if(i==k-1)\n\t     {\n\t     ans=3;\n\t     }\n\t     printf(\"%lld \",ans);\n\t }\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tlong long int n,k,i,ans;\n\tscanf(\"%lld\",&n);\n    k=n/2;\n    printf(\"%lld\\n\",k);\n\tif(n%2==0)\n\t{\n\t    for(i=0;i<k;i++)\n\t    {\n\t        ans=2;\n\t        printf(\"%lld \",ans);\n\t    }\n\t}\n\telse \n\t{\n\t for(i=0;i<k;i++)\n\t {\n\t     ans=2;\n\t     if(i==k-1)\n\t     {\n\t     ans=3;\n\t     }\n\t     printf(\"%lld \",ans);\n\t }\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.2816166883963494, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "94525cf88cfbc8dc8d7b4960441640ff", "bug_code_uid": "28786a16252c5c1d4ea64d98d457e496", "src_uid": "097e35b5e9c96259c54887158ebff544", "apr_id": "098044f31ef71c4d53e7ddd0ae7af08c", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#define size 100005\nmain()\n{\n\tint n,i,c=0,k=0;\n\tscanf(\"%d\",&n);\n\tint a[size];\n\tint was[size]={0};\n\tint arr[size][2];\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\twas[a[i]]++;\n\t}\nfor(i=0;i<100005;++i)\n{\n\tif(was[i]!=0)\n\t{\n\t\tif(was[i]==1)\n\t\t{\n\t\t\tarr[k][0]=i;\n\t\t\tarr[k][1]=0;\n\t\t\tk++;\n\t\t\tc++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint count=0,i1,i2,d,j,flag=0;\n\t\t\tfor(j=0;j<n;++j)\n\t\t\t{\n\t\t\t\tif(count==1 && a[j]==i)\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ti2=j;\n\t\t\t\t\td=i2-i1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(count==0 && a[j]==i)\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ti1=j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(j=i2;j<n;j+=d)\n\t\t\t{\n\t\t\t\tif(a[j]!=i)\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\tfor(j=n-1;j>=i2+1;--j)\n\t\t\t{\n\t\t\t\tif(a[j]==i)\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t    }\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tc++;\n\t\t\t\tarr[k][0]=i;\n\t\t\t\tarr[k][1]=d;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n}\nprintf(\"%d\\n\",c);\nfor(i=0;i<k;++i)\n{\n\tprintf(\"%d %d\\n\",arr[i][0],arr[i][1]);\n}\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define size 100005\nmain()\n{\n\tint n,i,c=0,k=0,temp;\n\tscanf(\"%d\",&n);\n\tint pos[size];\n\tint ok[size];\n\tint d[size];\n\tfor(i=0;i<100005;++i)\n\t{\n\t\tok[i]=-1;\n\t\td[i]=-1;\n\t}\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tif(d[temp]==-1)\n\t\t{\n\t\t\td[temp]=0;\n\t\t\tok[temp]=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(d[temp]==0)\n\t\t\t{\n\t\t\t\td[temp]=i-pos[temp];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(d[temp]!=(i-pos[temp]))\n\t\t\t\t{\n\t\t\t\t\tok[temp]=-1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpos[temp]=i;\n\t}\nfor(i=0;i<100005;++i)\n{\n\tif(ok[i]!=-1)\n\t  c++;\n}\nprintf(\"%d\\n\",c);\nfor(i=0;i<100005;++i)\n{\n\tif(ok[i]!=-1)\n\t{\n\t\tprintf(\"%d %d\\n\",i,d[i]);\n\t}\n}\n}"}
{"similarity_score": 0.9930875576036866, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bb23760610a80e29dd9f557460df60cf", "bug_code_uid": "d577cf4a2799bbe9b7e8451465fe4380", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "af4c626a173a403ca673a3251cd8d072", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    long long int arr[n][2];\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        scanf(\"%d\",&arr[i][0]);\r\n        scanf(\"%d\",&arr[i][1]);\r\n    }\r\n\r\n    long long int ans[n];\r\n\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        ans[i] = (arr[i][1]/(arr[i][0]*arr[i][0]));\r\n    }\r\n\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        printf(\"%d\\n\",ans[i]);\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    long long int arr[n][2];\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        scanf(\"%lld\",&arr[i][0]);\r\n        scanf(\"%lld\",&arr[i][1]);\r\n    }\r\n\r\n    long long int ans[n];\r\n\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        ans[i] = (arr[i][1]/(arr[i][0]*arr[i][0]));\r\n    }\r\n\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        printf(\"%lld\\n\",ans[i]);\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.565680473372781, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0e2dc00e38c28b8242c7fa6b86b647b7", "bug_code_uid": "676d2fac4a2a414c948f1f718da1ba16", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "e52a011c658841b60e197d48b675da03", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int s = 0; s < t; s++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int c1 = n / 3;\r\n        int c2 = n / 3;\r\n        int d = n % 3;\r\n        switch (d) {\r\n            case 1:\r\n                c1 += 1;\r\n                break;\r\n            case 2:\r\n                c2 += 1;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        printf(\"%d %d\\n\", c1, c2);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int s = 0; s < t; s++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int c1 = n / 3;\r\n        int c2 = n / 3;\r\n        int d=n%3;\r\n        if (d==1)\r\n            c1+=1;\r\n        if (d==2)\r\n            c2+=1;\r\n\r\n        printf(\"%d %d\\n\", c1, c2);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9972375690607734, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8c0bd8bb171fd96a28adaf53ed2dc36d", "bug_code_uid": "269c0c598d39062c077b5458135c49fe", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "76f9340482a516312965d9847b22890d", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n,m,i,sum=0;\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&m);\r\n        while(n--){\r\n            scanf(\"%d\",&i);\r\n            sum+=i;          \r\n        }\r\n        if(sum>m){\r\n        printf(\"%d\\n\",sum-m);\r\n        }else{\r\n            printf(\"0\");   \r\n        }\r\n        sum=0;\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n,m,i,sum=0;\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&m);\r\n        while(n--){\r\n            scanf(\"%d\",&i);\r\n            sum+=i;          \r\n        }\r\n        if(sum>m){\r\n        printf(\"%d\\n\",sum-m);\r\n        }else{\r\n            printf(\"0\\n\");   \r\n        }\r\n        sum=0;\r\n    }\r\n}"}
{"similarity_score": 0.9909814323607427, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2fd900bab4549ba591c346bd3edf2365", "bug_code_uid": "4df0babb5872e9ba56d089d8d9359c59", "src_uid": "e7f84300e9480a94a2399fcd5f47ecec", "apr_id": "ec001646d784651aa57eeb3ff92f9a24", "difficulty": 1400, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint max(int a, int b)\r\n{\r\n    if (a > b)\r\n    {\r\n        return a;\r\n    }\r\n    return b;\r\n}\r\nint isDiverse(int arr[])\r\n{\r\n    int c = 0, k = 0;\r\n    for (int i = 0; i < 10; i++)\r\n    {\r\n        if (arr[i] > 0)\r\n        {\r\n            c++;\r\n            k = max(k, arr[i]);\r\n        }\r\n    }\r\n    return k <= c;\r\n}\r\nvoid solve(int n, char *s)\r\n{\r\n    int ans = 0;\r\n    int arr[10];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int i = 0; i < 10; i++)\r\n        {\r\n            arr[i] = 0;\r\n        }\r\n        for (int j = i; j < n; j++)\r\n        {\r\n            arr[s[j] - '0']++;\r\n            if (isDiverse(arr))\r\n            {\r\n                ans++;\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        char s[n + 1];\r\n        scanf(\"%s\", s);\r\n        solve(n, s);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint max(int a, int b)\r\n{\r\n    if (a > b)\r\n    {\r\n        return a;\r\n    }\r\n    return b;\r\n}\r\nint isDiverse(int arr[])\r\n{\r\n    int c = 0, k = 0;\r\n    for (int i = 0; i < 10; i++)\r\n    {\r\n        if (arr[i] > 0)\r\n        {\r\n            c++;\r\n            k = max(k, arr[i]);\r\n        }\r\n    }\r\n    return k <= c;\r\n}\r\nvoid solve(int n, char *s)\r\n{\r\n    int ans = 0;\r\n    int arr[10];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int i = 0; i < 10; i++)\r\n        {\r\n            arr[i] = 0;\r\n        }\r\n        for (int j = i; j - i < 100 && j < n; j++)\r\n        {\r\n            arr[s[j] - '0']++;\r\n            if (isDiverse(arr))\r\n            {\r\n                ans++;\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        char s[n + 1];\r\n        scanf(\"%s\", s);\r\n        solve(n, s);\r\n    }\r\n}"}
{"similarity_score": 0.9984301412872841, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7dd50eaef3d309857345b58c39bc9c04", "bug_code_uid": "f93566da0a0eb0da60dd87623d03ebe7", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "20bec8bc4232b5ee0e03d2da3b88d813", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*\n\n*/\n#include<stdio.h>\nint main()\n{\n    int n,i,t=1;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++)scanf(\"%d\",&arr[i]);\n\n    int n1=n;\n    while(n1--){\n        for(i=0;i<n;i++){\n            if(arr[i]==t){\n                printf(\"%d\",i+1);\n                t++;\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "/*\n\n*/\n#include<stdio.h>\nint main()\n{\n    int n,i,t=1;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++)scanf(\"%d\",&arr[i]);\n\n    int n1=n;\n    while(n1--){\n        for(i=0;i<n;i++){\n            if(arr[i]==t){\n                printf(\"%d \",i+1);\n                t++;\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9562289562289562, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d16be89374fdf059dbaced28d02ab866", "bug_code_uid": "e88cf54813c0b907798e4d6e18eca50d", "src_uid": "5c12573b3964ee30af0349c11c0ced3b", "apr_id": "0bc7b5d8c4b4ef0d50cf478df33f434d", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint ara[1010];\nint main()\n{\n    int i, n, m, bla, max = -1, time=0, f, t;\n    scanf(\"%d %d\", &n, &m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\", &f, &t);\n        ara[f] = t;\n        if(f>max) max = f;\n    }\n    time = m - max - 1;\n    for(i=max;i>=0;i--)\n    {\n        time++;\n        if(ara[i] && time < ara[i])\n        {\n            time += ara[i] - time;\n        }\n    }\n    printf(\"%d\\n\", time);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint ara[1010];\nint main()\n{\n    int i, n, m, bla, max = -1, time=0, f, t;\n    scanf(\"%d %d\", &n, &m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\", &f, &t);\n        if(ara[f] < t) ara[f] = t;\n        if(f>max) max = f;\n    }\n    time = m - max - 1;\n    for(i=max;i>=0;i--)\n    {\n        time++;\n        if(ara[i] && time < ara[i])\n        {\n            time = ara[i];\n        }\n    }\n    printf(\"%d\\n\", time);\n    return 0;\n}\n"}
{"similarity_score": 0.5986754966887418, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "08077741861f46ff2aa4b14361b18702", "bug_code_uid": "57eaf645ef5b085c74d47af3b11b91e0", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "c6ce68eb334b398a0106cab18185c5a2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    printf(\"%d\\n\",(n*n+1)>>1);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n            if((i+j)&1)\n                printf(\".\");\n            else\n                printf(\"C\");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    printf(\"%d\\n\",(n*n+1)>>1);\n    char a[1001]={},b[1001]={};\n    for(i=0;i<n;i++)\n    {\n        if(i%2)\n        {\n            a[i] = '.';\n            b[i] = 'C';\n        }\n        else\n        {\n            a[i] = 'C';\n            b[i] = '.';\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i%2)\n            printf(\"%s\\n\",b);\n        else\n            printf(\"%s\\n\",a);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8839779005524862, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "072aacec04957e84c35f67a08cd28fbf", "bug_code_uid": "974c5e6ea00bd0b6bfeeaefbae058c98", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "74c7896d83b73f519a1abb320ac9a351", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\\n\",&n);\r\n    for(int i=0 ; i<n ; i++)\r\n    {\r\n        int t;\r\n        scanf(\"%d\\n\",&t);\r\n        int arr[t];\r\n        int sum=0;\r\n        for(int j=0 ; j<t ; j++)\r\n        {\r\n            scanf(\"%d\",&arr[j]);\r\n            sum+=arr[j];\r\n        }\r\n     if(sum<=0)\r\n        printf(\"1\\n\");\r\n     else\r\n        printf(\"%d\\n\",sum-t);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\\n\",&n);\r\n    for(int i=0 ; i<n ; i++)\r\n    {\r\n        int t;\r\n        scanf(\"%d\\n\",&t);\r\n        int arr[t];\r\n        int sum=0;\r\n        for(int j=0 ; j<t ; j++)\r\n        {\r\n            scanf(\"%d\",&arr[j]);\r\n            sum+=arr[j];\r\n        }\r\n     if(sum<=0)\r\n     {\r\n          printf(\"1\\n\");\r\n     }\r\n\r\n     else\r\n     {\r\n         if(sum>=t)\r\n          printf(\"%d\\n\",sum-t);\r\n          else\r\n            printf(\"1\\n\");\r\n     }\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.7335811648079306, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fea585f2d8414e8e87333fc714bbd316", "bug_code_uid": "ebce5d3bfd13ceaa202836a620800b68", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "284a69539de236c829ee23d73fbc51e5", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nchar str[200000];\nint main()\n{\n\tint num,start,aim,i,j;\n\twhile(~scanf(\"%d%d%d\",&num,&start,&aim)){\n\t\tgetchar();\n\t\tfor(i=1;i<=num;i++){\n\t\t\tscanf(\"%c\",&str[i]);\n\t\t}\n\t\tif(str[start]==str[aim]||start==aim){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse{\n\t\t\ti=j=start;\n\t\t\twhile(1){\n\t\t\t\tif(i>1&&str[--i]!=str[start]){\n\t\t\t\t\tprintf(\"%d\\n\",abs(i-start));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(j<num&&str[++j]!=str[start]){\n\t\t\t\t\tprintf(\"%d\\n\",abs(j-start));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgetchar();\n\t}\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nchar str[200000];\nint main()\n{\n\tint num,start,aim,i,j;\n\twhile(~scanf(\"%d%d%d\",&num,&start,&aim)){\n\t\tgetchar();\n\t\tfor(i=1;i<=num;i++){\n\t\t\tscanf(\"%c\",&str[i]);\n\t\t}\n\t\tif(str[start]==str[aim]||start==aim){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"1\\n\");\n\t\t}\n\t\tgetchar();\n\t}\n}"}
{"similarity_score": 0.4853658536585366, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "fa167cca1bdc0508a7606cd8dabd9976", "bug_code_uid": "62b0a1020c919b2670c5326a07709bec", "src_uid": "2070955288b2e2cdbae728d8e7ce78ab", "apr_id": "71b8f94b23a5ed80762efaf6e65637fd", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <cstdio>\n\nint n,m;\nint A[100010],vt[100010];\nint main(){\n   // freopen(\"input.txt\",\"r\",stdin);\n    scanf(\"%d %d\",&n,&m);\n    int i;\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&A[i]);\n    }\n    int cnt=1,val=0;\n    for(i=0;i<m;i++){\n        if(vt[A[i]]==cnt-1){\n            val++;\n        }\n        vt[A[i]]++;\n        if(val==n*cnt){\n            printf(\"1\");\n            cnt++;\n        }else printf(\"0\");\n    }\n    printf(\"\\n\");\n}\n", "fixed": "#include <stdio.h>\n\nint n,m;\nint cnt[100010],exist[100010],A[100010];\nint main(){\n    //freopen(\"input.txt\",\"r\",stdin);\n    scanf(\"%d %d\",&n,&m);\n    int i,c=1;\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&A[i]);\n    }\n    for(i=0;i<m;i++){\n        cnt[A[i]]++;\n        exist[cnt[A[i]]]++;\n        if(exist[c]==n){printf(\"1\"); c++;}\n        else printf(\"0\");\n    }\n    printf(\"\\n\");\n}\n"}
{"similarity_score": 0.8446808510638298, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "db269375a5eafdd5f61bc2fbe9059692", "bug_code_uid": "15b30f4b30aa316a73d41d42bb1ed4f2", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "b7ccc308a349e3a58950dc85dfc536ce", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long int n, a, b, c, t, sum=0, s;\n    scanf(\"%ld\", &n);\n    while(n--)\n    {\n        scanf(\"%ld %ld %ld %ld\", &a, &b, &c, &t);\n        sum=a+b+c+t;\n        if(a>=b && a>=c)\n            s=a;\n        else if(b>=a && b>=c)\n            s=b;\n        else\n            s=c;\n        if(sum%3==0 && t>s)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long int n, a, b, c, t, sum=0, s, f=0,i;\n    double x;\n    scanf(\"%ld\", &n);\n    while(n--)\n    {\n        f=0;\n        scanf(\"%ld %ld %ld %ld\", &a, &b, &c, &t);\n        sum=a+b+c+t;\n        x=(double)sum/3;\n        if(a>=b && a>=c)\n            s=a;\n        else if(b>=a && b>=c)\n            s=b;\n        else\n            s=c;\n\n        if(x>=s && t==(x-a)+(x-b)+(x-c))\n        {\n            printf(\"YES\\n\");\n        }\n        else\n            printf(\"NO\\n\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7283464566929134, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "8f113ed8c08d040be54e0cbecb0ef375", "bug_code_uid": "66f0dd10996a9910d422c2c74dde289c", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "b70542031e19367a8d41ef40b7968790", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i, j, n, m, x, y, z, k, g;\n    scanf(\"%d %d\", &n, &m);\n    int a[n], b[m], c[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\", &a[i]);\n    x=0;\n    k=0;\n    for(j=n-1;j>=0;j--)\n    {\n        z=0;\n        if(a[j]!=0)\n        {\n            z=1;\n            for(i=j-1;i>=0;i--)\n            {\n                if(a[j]==a[i])\n                {\n                    a[i]=0;\n                }\n            }\n        }\n        x=x+z;\n        c[j]=x;\n        k++;\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\", &g);\n        printf(\"%d\\n\", c[g-1]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i, n, m, x, g, c[100005]={0};\n    scanf(\"%d %d\", &n, &m);\n    int a[n], b[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\", &a[i]);\n    x=0;\n    for(i=n-1;i>=0;i--)\n    {\n        if(c[a[i]]==0)\n        {\n            c[a[i]]=1;\n            x++;\n        }\n        b[i]=x;\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\", &g);\n        printf(\"%d\\n\", b[g-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6408450704225352, "equal_cnt": 16, "replace_cnt": 7, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "e36b81d38c6b459d6341f141815c2753", "bug_code_uid": "f13a8e6298987af6f1b56316737ceeb2", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "729392364c708499efa7c1143ddf5fdb", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long long int n,k,f,t,min=999999,a,i;\n    scanf(\"%lld %lld\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        a=0;\n        scanf(\"%lld %lld\",&f,&t);\n        a=f-(t-k);\n        if(a<min)\n        {\n            min=a;\n        }\n    }\n    printf(\"%lld\\n\",min);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,k,f,t,max,result=-2000000000,a1,a2,i;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0; i<n; i++)\n    {\n        a1=-2000000000;\n        a2=-2000000000;\n        scanf(\"%d %d\",&f,&t);\n        if(t>k)\n        {\n            a1=f-(t-k);\n        }\n        else\n        {\n            a2=f;\n        }\n        max=a1;\n        if(a2>a1)\n        {\n            max=a2;\n        }\n        if(max>result)\n        {\n            result=max;\n        }\n    }\n    printf(\"%d\\n\",result);\n    return 0;\n}\n"}
{"similarity_score": 0.7032967032967034, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d6b16217bb21ab681acbd278ffb91e34", "bug_code_uid": "173f57dba4258608afdf767836d308ca", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "646ed1b5fa710d7eef1a22022ca23413", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i,t,a,b,c,n;\n\n    scanf(\"%d\",&t);\n\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d %d %d %d\",&a,&b,&c,&n);\n\n        if((n-(a-b)-(a-c))%3==0 && n>=(a-b)+(a-c))\n           {\n               printf(\"YES\\n\");\n           }\n\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int i,t,a,b,c,n,max,r;\n\n    scanf(\"%d\",&t);\n\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d %d %d %d\",&a,&b,&c,&n);\n\n        if(a<b)\n        {\n            r=b;\n            b=a;\n            a=r;\n        }\n\n        if(b<c)\n        {\n            r=c;\n            c=b;\n            b=r;\n        }\n\n        if(a<b)\n        {\n            r=b;\n            b=a;\n            a=r;\n        }\n\n        if((n-(a-b)-(a-c))%3==0 && n>=(a-b)+(a-c))\n           {\n               printf(\"YES\\n\");\n           }\n\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9984101748807631, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c0ff6cc868f107208f3cfc5347b9d26d", "bug_code_uid": "5c9ad802d4a0f6c9e9f1371b49bfda1f", "src_uid": "c4398a9f342a23baf1d7ebc9f4e9577d", "apr_id": "05eb61cbfb92ddf2be435c9b44daa14e", "difficulty": 1200, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint mod(int a)\n{\n    if(a>0)\n\treturn a;\n    else\n\treturn -a;\n}\nint main()\n{\n    int n,m,arr[100009]={},c,t,i;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0; i<n; i++)\n    {\n\tscanf(\"%d%d\",&c,&t);\n\tif(i==0)\n\t    arr[i]=c*t;\n\telse\n\t    arr[i]=c*t + arr[i-1];\n    }\n    int x;\n    while(m--)\n    {\n\tint ans;\n\tscanf(\"%d\",&x);\n\tif(x<=arr[0])\n\t    printf(\"1\\n\");\n\telse\n\t{\n\t    int pos1=0,pos2=n-1;\n\t    while(1)\n\t    {\n\t\tif(x>arr[(pos1+pos2)/2])\n\t\t    pos1=(pos1+pos2)/2;\n\t\telse if(x<=arr[(pos1+pos2)/2])\n\t\t    pos2=(pos1+pos2)/2;\n\t\tif(mod(pos1-pos2)==1)\n\t\t    break;\n\t    }\n\t    printf(\"%d\\n\",pos2);\n\t}\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint mod(int a)\n{\n    if(a>0)\n\treturn a;\n    else\n\treturn -a;\n}\nint main()\n{\n    int n,m,arr[100009]={},c,t,i;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0; i<n; i++)\n    {\n\tscanf(\"%d%d\",&c,&t);\n\tif(i==0)\n\t    arr[i]=c*t;\n\telse\n\t    arr[i]=c*t + arr[i-1];\n    }\n    int x;\n    while(m--)\n    {\n\tint ans;\n\tscanf(\"%d\",&x);\n\tif(x<=arr[0])\n\t    printf(\"1\\n\");\n\telse\n\t{\n\t    int pos1=0,pos2=n-1;\n\t    while(1)\n\t    {\n\t\tif(x>arr[(pos1+pos2)/2])\n\t\t    pos1=(pos1+pos2)/2;\n\t\telse if(x<=arr[(pos1+pos2)/2])\n\t\t    pos2=(pos1+pos2)/2;\n\t\tif(mod(pos1-pos2)==1)\n\t\t    break;\n\t    }\n\t    printf(\"%d\\n\",pos2+1);\n\t}\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9948542024013722, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "cf313e567fe6e96509a2dfb9400cf6c0", "bug_code_uid": "b7d55cb79550e2be01cf7a096d4e9b58", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "4855e0a7c4c0d40855fcbae863872afd", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int n, sum, i;\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        scanf(\"%lld\", &n);\n        sum=0;\n        for(i=1; i<=n; i*=2)\n            sum-= 2 * i;\n        sum += n*(n+1)/2;\n        printf(\"%l64d\\n\", sum);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int n, sum, i;\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        scanf(\"%lld\", &n);\n        sum=0;\n        for(i=1; i<=n; i*=2)\n            sum-= 2 * i;\n        sum += n*(n+1)/2;\n        printf(\"%I64d\\n\", sum);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9571567672833495, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6d4c04650cd6ff252295a0402025ec83", "bug_code_uid": "654b87a59b6815a63bef881c05c35062", "src_uid": "62df8b1821558bea910f422591618e29", "apr_id": "0b21d36f1ead4c25c06be140f5a8b34f", "difficulty": 1500, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\ntypedef struct _cell {\n\tint r, c;\n\tint dr, dc;\n}CELL;\n\nint main(void)\n{\n\tint i, j, k, cnt, s, n, x, c[64];\n\tint hash[63][63];\n\tCELL cell[4096];\n\twhile (scanf(\"%d\", &n) != EOF) {\n\t\tfor (i = s = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", c + i);\n\t\t\ts += c[i];\n\t\t}\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfor (j = 0; j < c[i]; j++) {\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\tcell[x].r = cell[x].dr = i + 1;\n\t\t\t\tcell[x].c = cell[x].dc = j + 1;\n\t\t\t\thash[i+1][j+1] = x;\n\t\t\t}\n\t\t}\n\t\tk = cnt = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfor (j = 0; j < c[i]; j++) {\n\t\t\t\tk++;\n\t\t\t\tif (k != hash[i+1][j+1]) {\n\t\t\t\t\tcell[k].dr = i + 1;\n\t\t\t\t\tcell[k].dc = j + 1;\n\t\t\t\t\tcell[hash[i+1][j+1]].r = cell[k].r;\n\t\t\t\t\tcell[hash[i+1][j+1]].c = cell[k].c;\n\t\t\t\t\thash[cell[k].r][cell[k].c] = hash[i+1][j+1];\n\t\t\t\t\thash[i+1][j+1] = k;\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", cnt);\n\t\tfor (i = 1; cnt && i <= s; i++) {\n\t\t\tif (cell[i].r == cell[i].dr && cell[i].c == cell[i].dc) continue;\n\t\t\tcnt--;\n\t\t\tprintf(\"%d %d %d %d\\n\", cell[i].r, cell[i].c, cell[i].dr, cell[i].dc);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n\ntypedef struct _cell {\n\tint r, c;\n\tint dr, dc;\n}CELL;\n\nint main(void)\n{\n\tint i, j, k, cnt, s, n, x, c[64];\n\tint hash[63][63];\n\tCELL cell[4096];\n\twhile (scanf(\"%d\", &n) != EOF) {\n\t\tfor (i = s = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", c + i);\n\t\t\ts += c[i];\n\t\t}\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfor (j = 0; j < c[i]; j++) {\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\tcell[x].r = cell[x].dr = i + 1;\n\t\t\t\tcell[x].c = cell[x].dc = j + 1;\n\t\t\t\thash[i+1][j+1] = x;\n\t\t\t}\n\t\t}\n\t\tk = cnt = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfor (j = 0; j < c[i]; j++) {\n\t\t\t\tk++;\n\t\t\t\tif (k != hash[i+1][j+1]) {\n\t\t\t\t\tcell[k].dr = i + 1;\n\t\t\t\t\tcell[k].dc = j + 1;\n\t\t\t\t\tcell[hash[i+1][j+1]].r = cell[k].r;\n\t\t\t\t\tcell[hash[i+1][j+1]].c = cell[k].c;\n\t\t\t\t\thash[cell[k].r][cell[k].c] = hash[i+1][j+1];\n\t\t\t\t\thash[i+1][j+1] = k;\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", cnt);\n\t\tfor (i = 1; i <= s; i++) {\n\t\t\tif (i == hash[cell[i].r][cell[i].c]) continue;\n\t\t\tcnt--;\n\t\t\tprintf(\"%d %d %d %d\\n\", cell[i].r, cell[i].c, cell[i].dr, cell[i].dc);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9959049959049959, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "629254b602fa838f5a4269ec6a6494ed", "bug_code_uid": "3f762dadbadc031d5a62fc82bd1505d5", "src_uid": "8d2845c33645ac45d4d37f9493b0c380", "apr_id": "73cf1870a1caf395a31074f6634816bc", "difficulty": 1400, "tags": ["geometry", "math", "implementation", "data structures", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define M 1000000\nint x[1000],y[1000];\nint main()\n{\n    int n,a,b,i,j,u,v;\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(i=0;i<n;++i)\n        scanf(\"%d%d\",(x+i),(y+i));\n    int p=n,ans=0;\n    for(i=0;i<n;++i)\n    {\n        if(x[0]==M)\n            continue;\n        p--;\n        ans++;\n        if(p==0)\n            break;\n        for(j=i+1;j<n;++j)\n        {\n            int eq=(x[i]-a)*(y[j]-b)-(y[i]-b)*(x[j]-a);\n            if(eq==0)\n            {\n                x[j]=M;\n                p--;\n            }\n        }\n        if(p==0)\n            break;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define M 1000000000\nint x[1000],y[1000];\nint main()\n{\n    int n,a,b,i,j,u,v;\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(i=0;i<n;++i)\n        scanf(\"%d%d\",(x+i),(y+i));\n    int p=n,ans=0;\n    for(i=0;i<n;++i)\n    {\n        if(x[i]==M)\n            continue;\n        p--;\n        ans++;\n        if(p==0)\n            break;\n        for(j=i+1;j<n;++j)\n        {\n            int eq=(x[i]-a)*(y[j]-b)-(y[i]-b)*(x[j]-a);\n            if(eq==0)\n            {\n                x[j]=M;\n                p--;\n            }\n        }\n        if(p==0)\n            break;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9181232750689973, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a2ecd47021d0ea339471a6f8be5a172b", "bug_code_uid": "1d86c3a90f0aa307099aaf0531ae22a7", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "ba2c90238408ad984ae16c1fd6fdaee5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main() {\n\tint t, n, counter_odd = 0, flag = 0, number;\n\tscanf(\"%d\\n\", &t);\n\t\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%d\\n\", &n);\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d \", &number);\n\t\t\tif (number%2==1) counter_odd++;\n\t\t\telse flag = 1; //at least one even number to turn into an odd one\n\t\t}\n\t\tif (counter_odd%2==1 || flag == 1) {\n\t\t\tprintf(\"YES\\n\");\n\t\t} else {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tcounter_odd = 0;\n\t\tflag = 0;\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main() {\n\tint t, n, counter_odd = 0, flag = 0, number;\n\tscanf(\"%d\\n\", &t);\n\t\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%d\\n\", &n);\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d \", &number);\n\t\t\tif (number%2==1) counter_odd++;\n\t\t\telse flag = 1; //at least one even number to turn into an odd one\n\t\t}\n\t\tif (counter_odd%2==1 || (flag == 1 && counter_odd > 0)) { //odd number of odd numbers or at least one odd and one even number\n\t\t\tprintf(\"YES\\n\");\n\t\t} else {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tcounter_odd = 0;\n\t\tflag = 0;\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9220338983050848, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4693aad07c04797949ce0bcf175d76e7", "bug_code_uid": "d346903717c41cb4f13d2e13c38626ce", "src_uid": "e2836276aee2459979b232e5b29e6d57", "apr_id": "6c38ede8f947885db6b62573d3dcd1f6", "difficulty": 1400, "tags": ["dsu"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N 100\n#define M 100\n\nint dsu[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : find(dsu[i]);\n}\n\nvoid join(int i, int j) {\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\tdsu[i] = j;\n\telse {\n\t\tif (dsu[i] == dsu[j])\n\t\t\tdsu[i]--;\n\t\tdsu[j] = i;\n\t}\n}\n\nint main() {\n\tstatic int kk[N], aa[N][M];\n\tint n, m, i, j, k, l, x;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &kk[i]);\n\t\tfor (j = 0; j < kk[i]; j++)\n\t\t\tscanf(\"%d\", &aa[i][j]);\n\t}\n\tmemset(dsu, -1, sizeof dsu);\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tfor (k = 0; k < kk[i]; k++)\n\t\t\t\tfor (l = 0; l < kk[j]; l++)\n\t\t\t\t\tif (aa[i][k] == aa[j][l])\n\t\t\t\t\t\tjoin(i, j);\n\tx = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (dsu[i] < 0)\n\t\t\tx++;\n\tprintf(\"%d\\n\", x - 1);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define N 100\n#define M 100\n\nint dsu[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : find(dsu[i]);\n}\n\nvoid join(int i, int j) {\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\tdsu[i] = j;\n\telse {\n\t\tif (dsu[i] == dsu[j])\n\t\t\tdsu[i]--;\n\t\tdsu[j] = i;\n\t}\n}\n\nint main() {\n\tstatic int kk[N], aa[N][M];\n\tint n, m, i, j, k, l, zero, x;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &kk[i]);\n\t\tfor (j = 0; j < kk[i]; j++)\n\t\t\tscanf(\"%d\", &aa[i][j]);\n\t}\n\tzero = 1;\n\tfor (i = 0; i < n; i++)\n\t\tif (kk[i] != 0) {\n\t\t\tzero = 0;\n\t\t\tbreak;\n\t\t}\n\tif (zero) {\n\t\tprintf(\"%d\\n\", n);\n\t\treturn 0;\n\t}\n\tmemset(dsu, -1, sizeof dsu);\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tfor (k = 0; k < kk[i]; k++)\n\t\t\t\tfor (l = 0; l < kk[j]; l++)\n\t\t\t\t\tif (aa[i][k] == aa[j][l])\n\t\t\t\t\t\tjoin(i, j);\n\tx = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (dsu[i] < 0)\n\t\t\tx++;\n\tprintf(\"%d\\n\", x - 1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9500674763832658, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "794b80ce450e6546eee11edc2885d162", "bug_code_uid": "56ff096673c533ef9a3df0647f4c72ff", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "f6f19810a9ae9f323999948a127a10a2", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tlong int n,i,j;\t\n\tlong int min;\n\tscanf(\"%ld\",&n);\n\tlong int A[n],B[n];\n\t\n\tfor(i=0 ; i<n ; i++){\n\t\tscanf(\"%ld\",&A[i]);\n\t\tif(i==0){min=A[i];}\n\t\telse if(min>A[i]){min=A[i];}\n\t}\n\t\n\tfor(i=0,j=0 ; i<n ; i++){\n\t\tif(min==A[i]){B[j]=i;j++;}\n\t}\n\tmin = j;\n\tfor(i=0 ; i<j-1 ; i++){\n\t\tif(min>(B[i+1]-B[i])){min=B[i+1]-B[i];}\n\t}\n\tprintf(\"%ld\",min);\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tlong int n,i,j;\t\n\tlong int min;\n\tscanf(\"%ld\",&n);\n\tlong int A[n],B[n];\n\t\n\tfor(i=0 ; i<n ; i++){\n\t\tscanf(\"%ld\",&A[i]);\n\t\tif(i==0){min=A[i];}\n\t\telse if(min>A[i]){min=A[i];}\n\t}\n\t\n\tfor(i=0,j=0 ; i<n ; i++){\n\t\tif(min==A[i]){B[j]=i;j++;}\n\t}\n\tmin = B[j-1];\n\tfor(i=0 ; i<j-1 ; i++){\n\t\tif(min>(B[i+1]-B[i])){min=B[i+1]-B[i];}\n\t}\n\tprintf(\"%ld\",min);\n}"}
{"similarity_score": 0.13100436681222707, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c7017b2d3740302a39ad313c6d36438a", "bug_code_uid": "f8d2876e1fe004a9887b37ad4a41ff28", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "03574c5920c87ef963ca526586fce693", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n\n{\n    int arr[10000],i,j,br[3]={0,0,0},a,b,c,n;\n\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n      if(arr[i]==1)\n        br[0]++;\n      if(arr[i]==2)\n        br[1]++;\n      if(arr[i]==3)\n        br[2]++;\n\n    }\n\n    a=br[0]+br[1];\n    b=br[1]+br[2];\n    c=br[2]+br[0];\n\n    if(a<b && a<c)\n        printf(\"%d\\n\",a);\n    else if(b<a && b<c)\n        printf(\"%d\\n\",a);\n    else if(c<a && c<b)\n        printf(\"%d\\n\",c);\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n\n{\n    int a=0,b=0,c=0,n;\n\n    scanf(\"%d\",&n);\n\n    int arr[n],i;\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n\n        if(arr[i]==1)\n            a++;\n\n        else if(arr[i]==2)\n            b++;\n        else\n            c++;\n    }\n\n    if(a>=b && a>=c)\n        printf(\"%d\\n\",b+c);\n\n    else if(b>=c && b>=a)\n        printf(\"%d\\n\",a+c);\n\n    else if(c>=a && c>=b)\n    printf(\"%d\\n\",a+b);\n}\n"}
{"similarity_score": 0.9984126984126984, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "840283f78c0c3dd1ea363dc07c9fc84f", "bug_code_uid": "d498363d4dcba31532b359e7676bc923", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "64631a942959542989350cfc59c55824", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int n,dia,side,i,j;\n    dia=side=0;\n    scanf(\"%d\",&n);\n    char ara[n][n],d,s;\n    for(i=0; i<n; i++)\n        scanf(\"%s\",&ara[i]);\n    d=ara[0][0];\n    s=ara[0][1];\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(i==j || n-1-i==j)\n            {\n                if(ara[i][j]==d)\n                    dia++;\n            }\n            else if(ara[i][j]==s)\n                side++;\n        }\n    }\n    if(d==a)\n        printf(\"NO\\n\");\n    else if((dia==(2*n)-1) && side == (n-1)*(n-1))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int n,dia,side,i,j;\n    dia=side=0;\n    scanf(\"%d\",&n);\n    char ara[n][n],d,s;\n    for(i=0; i<n; i++)\n        scanf(\"%s\",&ara[i]);\n    d=ara[0][0];\n    s=ara[0][1];\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(i==j || n-1-i==j)\n            {\n                if(ara[i][j]==d)\n                    dia++;\n            }\n            else if(ara[i][j]==s)\n                side++;\n        }\n    }\n    if(d==s)\n        printf(\"NO\\n\");\n    else if((dia==(2*n)-1) && side == (n-1)*(n-1))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n}\n"}
{"similarity_score": 0.7948207171314741, "equal_cnt": 12, "replace_cnt": 1, "delete_cnt": 7, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "987c3b9d5313823df9989ecbeee02e19", "bug_code_uid": "789b7c37042b56cf765c52a80ef0373c", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "25c5ea8f705cf2c7a76bfa4ea4b42cee", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int num1[4],burned=0;\n    for(int count=0;count<=3;count++){\n    scanf(\"%d\",&num1[count]);\n    }\n\n    unsigned long input;\n    scanf(\"%d\",&input);\n\n    unsigned long num=1,subtract=0,mult=1;\n    while(subtract!=input){\n    num=input%(10*mult);\n    num-=subtract;\n    subtract+=num;\n    burned+=num1[(num-1)/mult];\n    mult*=10;\n    }\n\n    printf(\"%ld\",burned);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main()\n{\nint num1[4],burned=0;\nfor(int count=0;count<4;count++){\nscanf(\"%d\",&num1[count]);\n}\n    /*\n    unsigned long input;\n    scanf(\"%d\",&input);\n    unsigned long num=1,subtract=0,mult=1;\n    while(subtract!=input){\n    num=input%(10*mult);\n    num-=subtract;\n    subtract+=num;\n    burned+=num1[(num-1)/mult];\n    mult*=10;\n    */\n    char input[1000000];\n    scanf(\"%s\",&input);\n    int len=strlen(input);\n    for(int count=0;count<len;count++){\n    burned+=num1[input[count]-49];\n    }\n    printf(\"%d\",burned);\n}\n"}
{"similarity_score": 0.9217391304347826, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "090d12eb67587ebbc2bfb456060223d2", "bug_code_uid": "a4e058008cb452223b4cc4c1342ac733", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "c7060667730615e02e121f1e9df56bee", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0,y=0,j,m=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    y=a[0];\n    for(i=1;i<n;i++)\n    {\n        for(j=i-1;j>=0;j--)\n        {\n            if(a[i]<a[j])\n            m++;\n        }\n        if(m==i)\n        {\n           c++;\n           m==0;\n        }\n    }\n    for(i=1;i<n;i++)\n    {\n        if(a[i]>y)\n        {\n            c++;\n            y=a[i];\n        }\n    }\n    printf(\"%d\",c);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0,y=0,j;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    y=a[0];\n    for(i=1;i<n;i++)\n    {\n        int m=0;\n        for(j=i-1;j>=0;j--)\n        {\n            if(a[i]<a[j])\n            m++;\n        }\n        if(m==i)\n           c++;\n    }\n    for(i=1;i<n;i++)\n    {\n        if(a[i]>y)\n        {\n            c++;\n            y=a[i];\n        }\n    }\n    printf(\"%d\",c);\n}"}
{"similarity_score": 0.969939879759519, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ede526ba9e682937c38d14340a176f36", "bug_code_uid": "5f54bdd8d4ddc455abd40f636d7bd5a8", "src_uid": "dc548fe1d8683b4b0ee4e0fa67638185", "apr_id": "adefc7d15e1f023bec6f5f6fd77bc3c5", "difficulty": 1200, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n, k, i, a[1000001];\n    scanf(\"%d %d\", &n, &k);\n    if(k>n-1)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    int diff=n-1-k;\n    for(i=n; i>diff+1; i--)\n    {\n        a[i]=i;\n        //printf(\"in first, assigning %d to a[%d]\\n\", a[i], i);\n    }\n    for(i=1; i<=diff+1; i++)\n    {\n        a[i]=diff+2-i;\n        //printf(\"in second, assigning %d to a[%d]\\n\", a[i], i);\n    }\n    for(i=1; i<=n; i++)\n        printf(\"%d \", a[i]);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n, k, i, a[1000001];\n    scanf(\"%d %d\", &n, &k);\n    if(k>n-1)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    int diff=n-1-k;\n    for(i=n; i>diff+1; i--)\n    {\n        a[i]=i;\n        //printf(\"in first, assigning %d to a[%d]\\n\", a[i], i);\n    }\n    for(i=1; i<=diff; i++)\n    {\n        a[i]=i+1;\n        //printf(\"in second, assigning %d to a[%d]\\n\", a[i], i);\n    }\n    a[diff+1]=1;\n    for(i=1; i<=n; i++)\n        printf(\"%d \", a[i]);\n    return 0;\n}"}
{"similarity_score": 0.9010416666666666, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cf1cc5923bc99f6adbc497de19e08b34", "bug_code_uid": "224ecc6db7b1a25e298ff0cdb3d67a3c", "src_uid": "3cd56870a96baf8860e9b7e89008d895", "apr_id": "a4a8151ba6a788da17bfbcac3e344db6", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\r\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    int i = 0;\r\n    char s1[51] = \"YesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYe\";\r\n    char s2[1000][51] = { 0 };\r\n    char s3[1000][4] = { 0 };\r\n    for (i = 0; i < t; i++)\r\n    {\r\n\r\n        scanf(\"%s\", s2[i]);\r\n        if (strstr(s1,s2[i]) != NULL)\r\n        {\r\n            strcpy(s3[i], \"YES\");\r\n        }\r\n        else\r\n        {\r\n            strcpy(s3[i], \"NO\");\r\n\r\n        }\r\n    }\r\n    for (i = 0; i < t; i++)\r\n    {\r\n        puts(s3[i]);\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "\r\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    int i = 0;\r\n    char s1[53] = \"YesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesY\";\r\n    char s2[1000][51] = { 0 };\r\n    char s3[1000][4] = { 0 };\r\n    for (i = 0; i < t; i++)\r\n    {\r\n\r\n        scanf(\"%s\", s2[i]);\r\n        if (strstr(s1,s2[i]) != NULL)\r\n        {\r\n            strcpy(s3[i], \"YES\");\r\n        }\r\n        else\r\n        {\r\n            strcpy(s3[i], \"NO\");\r\n\r\n        }\r\n    }\r\n    for (i = 0; i < t; i++)\r\n    {\r\n        puts(s3[i]);\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6690777576853526, "equal_cnt": 21, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 12, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "cff1b6d57696a6bf2a4c99189f831bcd", "bug_code_uid": "c7ec3a681ec115c5f694bba98c9411ba", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "5096339f5ae4fd7db8e2c365282615d3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j,k,m=0;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        int sum=0;\r\n\r\n        for(k=0;k<n;k++)\r\n        {\r\n            if(a[k]<=0)\r\n            {\r\n                printf(\"1\\n\");\r\n                break;\r\n            }\r\n            else\r\n            {\r\n                sum=sum+a[k];\r\n                if(k==(n-1))\r\n                {\r\n                printf(\"%d\\n\",sum-n);\r\n                break;\r\n                }\r\n\r\n            }\r\n\r\n          }\r\n          \r\n        }\r\n        \r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,n,i,j,k;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        int sum=0;\r\n        int count=0;\r\n        for(k=0;k<n;k++)\r\n        {\r\n                sum=sum+a[k];\r\n\r\n                if(k==(n-1))\r\n                {\r\n                    if(sum==n)\r\n                    {\r\n                        printf(\"0\\n\");\r\n                        break;\r\n                    }\r\n                    else if(sum<n)\r\n                    {\r\n                        printf(\"1\\n\");\r\n                        break;\r\n                    }\r\n                    else{\r\n\r\n                    \r\n                  printf(\"%d\\n\",sum-n);\r\n                count=0;\r\n                break;\r\n                    }\r\n                }\r\n\r\n            }\r\n          \r\n\r\n          }\r\n            \r\n          \r\n          \r\n        }\r\n        "}
{"similarity_score": 0.6902086677367576, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "594d85c1b6504612100f80f44fd3903d", "bug_code_uid": "87ceac3d0c604de62bd171e1abfd4f44", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "a95f183e2182aad43dfca008913755dc", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n   int n;\n   scanf(\"%d\", &n);\n   \n   int h[100000], i;\n   for(i = 0; i < n; ++i) scanf(\"%d\", &h[i]);\n   \n   long long sum = 0;\n   for(i = n-1; i > 0; --i) sum += h[i] - h[i-1];\n   \n   if(sum <= 0) printf(\"%d\\n\", h[0]);\n   else printf(\"%I64d\\n\", h[0]+sum);\n   \n   return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n   int n;\n   scanf(\"%d\", &n);\n   \n   int h[100000], i;\n   for(i = 0; i < n; ++i) scanf(\"%d\", &h[i]);\n   \n   long long sum = -h[0], min = -h[0];\n   for(i = 1; i < n; ++i){\n      sum += h[i-1] - h[i];\n      if(sum < min) min = sum;\n   }\n   \n   printf(\"%I64d\\n\", -min);\n \n   return 0;\n}\n"}
{"similarity_score": 0.9849726775956285, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ffc2a11ed2f8c94779948f8360c5296a", "bug_code_uid": "f281c630345c2c0ca5875f2f91e39e2b", "src_uid": "414d1f0cef26fbbf4ede8eac32a1dd48", "apr_id": "8767164d1726f2f7d5ccf6b089fcab64", "difficulty": 1600, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,n,a[300001],b[300001],m,i,c[300001],x=0,s=0,d[300001],min;\n    scanf(\"%lld\",&t);\n    for(m=1;m<=t;m++)\n    {\n     scanf(\"%lld\",&n);\n     for(i=1;i<=n;i++)\n     {scanf(\"%lld %lld\",&a[i],&b[i]);}\n     for(i=1;i<=n;i++)\n     {\n      if(i!=n)\n      {c[i]=b[i]-a[i+1];}\n      else\n      {c[i]=b[i]-a[1];}\n      if(c[i]<0)\n      {x=x+c[i]*(-1);}\n     }\n     for(i=1;i<=n;i++)\n     {\n      s=a[i]+x;\n      if(i!=1)\n      {if(c[i-1]<0)\n       {s=s+c[i-1];}\n      }\n      else\n      {if(c[n]<0)\n       {s=s+c[n];}\n      }\n      d[i]=s;\n     }\n     min=d[1];\n     for(i=1;i<=n;i++)\n     {if(d[i]<min)\n      {min=d[i];}\n     }\n     printf(\"%lld\\n\",min);\n    }\n    return 0;\n}\n     \n\n    ", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,n,a[300001],b[300001],m,i,c[300001],x,s,d[300001],min;\n    scanf(\"%lld\",&t);\n    for(m=1;m<=t;m++)\n    {x=0;\n     s=0;\n     scanf(\"%lld\",&n);\n     for(i=1;i<=n;i++)\n     {scanf(\"%lld %lld\",&a[i],&b[i]);}\n     for(i=1;i<=n;i++)\n     {\n      if(i!=n)\n      {c[i]=b[i]-a[i+1];}\n      else\n      {c[i]=b[i]-a[1];}\n      if(c[i]<0)\n      {x=x+c[i]*(-1);}\n     }\n     for(i=1;i<=n;i++)\n     {\n      s=a[i]+x;\n      if(i!=1)\n      {if(c[i-1]<0)\n       {s=s+c[i-1];}\n      }\n      else\n      {if(c[n]<0)\n       {s=s+c[n];}\n      }\n      d[i]=s;\n     }\n     min=d[1];\n     for(i=1;i<=n;i++)\n     {if(d[i]<min)\n      {min=d[i];}\n     }\n     printf(\"%lld\\n\",min);\n    }\n    return 0;\n}\n     \n\n    "}
{"similarity_score": 0.9192913385826772, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b917c968e965a8e2512fc31ec115150c", "bug_code_uid": "509dcb178c25eba3c8bb68ec73bc6b14", "src_uid": "0e0ef011ebe7198b7189fce562b7d6c1", "apr_id": "b329352f1503e76f0e7df5111f151209", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t; scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n, i, b, c=0;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&a[i]);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&b);\n            a[i]=b-a[i];\n            if(a[i]<0) c=1;\n        }\n        if(c==1) {printf(\"NO\\n\"); continue;}\n        for(i=1;i<n;i++)\n            if(a[i]!=a[i-1]) c++;\n        printf(c==0&&a[0]>0?\"YES\\n\":(c<=2?\"YES\\n\":\"NO\\n\"));\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t; scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n, i, b, k=0;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&a[i]);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&b);\n            a[i]=b-a[i];\n            if(a[i]<0) k=-1;\n        }\n        if(k==-1) {printf(\"NO\\n\"); continue;}\n        if(a[0]>0) k++;\n        for(i=1;i<n;i++)\n            if(a[i]!=a[i-1]&& a[i]) k++;\n        printf(k<=1?\"YES\\n\":\"NO\\n\");\n    }\n}\n"}
{"similarity_score": 0.9990592662276576, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "31c232bd485958a2b904fe54facbbfa4", "bug_code_uid": "08e1f1f66ca329333d943d9bf96f5be0", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "468038bec75d60950a8b580677ba3442", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAXN    100001\ntypedef __in64 LL_t;\n\nint main()\n{\n    int N, Num, Max;\n    LL_t i;\n    LL_t Sum[MAXN];\n    int Cnt[MAXN];\n    scanf(\"%d\", &N);\n    Max = 0;\n    for(i=0; i<N; ++i)\n    {\n        scanf(\"%d\", &Num);\n        ++Cnt[Num];\n        if(Num > Max)\n        {\n            Max = Num;\n        }\n    }\n    Sum[0] = 0;\n    Sum[1] = Cnt[1];\n    for(i=2; i<=Max; ++i)\n    {\n        Sum[i] = (Sum[i-1]>(Sum[i-2]+Cnt[i]*i))?Sum[i-1]:Sum[i-2]+Cnt[i]*i;\n    }\n    printf(\"%I64d\\n\", Sum[Max]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define MAXN    100001\ntypedef __int64 LL_t;\n\nint main()\n{\n    int N, Num, Max;\n    LL_t i;\n    LL_t Sum[MAXN];\n    int Cnt[MAXN];\n    scanf(\"%d\", &N);\n    Max = 0;\n    for(i=0; i<N; ++i)\n    {\n        scanf(\"%d\", &Num);\n        ++Cnt[Num];\n        if(Num > Max)\n        {\n            Max = Num;\n        }\n    }\n    Sum[0] = 0;\n    Sum[1] = Cnt[1];\n    for(i=2; i<=Max; ++i)\n    {\n        Sum[i] = (Sum[i-1]>(Sum[i-2]+Cnt[i]*i))?Sum[i-1]:Sum[i-2]+Cnt[i]*i;\n    }\n    printf(\"%I64d\\n\", Sum[Max]);\n    return 0;\n}\n"}
{"similarity_score": 0.7544615384615385, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ae159047fc84f8e91c4240a8cc05b058", "bug_code_uid": "5b570b907fc6b172dced814725ace89c", "src_uid": "c4541021337252c7e2c4afd2de8cd766", "apr_id": "3b47f78fb447f69eefee1b22d5e05590", "difficulty": 1600, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n    \tint n,j;\r\n    \tscanf(\"%d\",&n);\r\n    \tint arr[n],brr[n];\r\n    \tfor(j=0;j<n;j++)\r\n    \t{\r\n    \t\tscanf(\"%d\",&arr[j]);\r\n\t\t}\r\n    \tif(n%2==0)\r\n    \t{\r\n    \t\tfor(j=0;j<n;j=j+2)\r\n    \t\t{\r\n    \t\t\tbrr[j] = -arr[j+1];\r\n    \t\t\tbrr[j+1] = arr[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(j=0;j<n-3;j=j+2)\r\n\t\t\t{\r\n\t\t\t\tbrr[j] = -arr[j+1];\r\n    \t\t\tbrr[j+1] = arr[j];\r\n\t\t\t}\r\n\t\t\tbrr[n-3] = brr[n-2] = -arr[n-1];\r\n\t\t\tbrr[n-1] = arr[n-3] + arr[n-2];\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tprintf(\"%d \",brr[j]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n    \tint n,j;\r\n    \tscanf(\"%d\",&n);\r\n    \tint arr[n],brr[n];\r\n    \tfor(j=0;j<n;j++)\r\n    \t{\r\n    \t\tscanf(\"%d\",&arr[j]);\r\n\t\t}\r\n    \tif(n%2==0)\r\n    \t{\r\n    \t\tfor(j=0;j<n;j=j+2)\r\n    \t\t{\r\n    \t\t\tbrr[j] = -arr[j+1];\r\n    \t\t\tbrr[j+1] = arr[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(j=0;j<n-3;j=j+2)\r\n\t\t\t{\r\n\t\t\t\tbrr[j] = -arr[j+1];\r\n    \t\t\tbrr[j+1] = arr[j];\r\n\t\t\t}\r\n\t\t\tif(arr[n-3]+arr[n-2]!=0)\r\n\t\t\t{\r\n\t\t\t\tbrr[n-3] = brr[n-2] = -arr[n-1];\r\n\t\t\t    brr[n-1] = arr[n-3] + arr[n-2];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\tif(arr[n-2]+arr[n-1]!=0)\r\n\t\t\t{\r\n\t\t\t\tbrr[n-2] = brr[n-1] = -arr[n-3];\r\n\t\t\t\tbrr[n-3] = arr[n-2]+arr[n-1];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\tif(arr[n-1]+arr[n-3]!=0)\r\n\t\t\t{\r\n\t\t\t\tbrr[n-1] = brr[n-3] = -arr[n-2];\r\n\t\t\t\tbrr[n-2] = arr[n-1]+ arr[n-3];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tprintf(\"%d \",brr[j]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9908256880733946, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2897bd6311c16ccc0d2621dca09b66cd", "bug_code_uid": "75c0fe65505c2fc1bc2b80b6d1dbae90", "src_uid": "5953b898995a82edfbd42b6c0f7138af", "apr_id": "f49226364e23d0d8b60755de7f8921d4", "difficulty": 1300, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main(void)\n{\n\tint q, reverse_3[50];\n\tlong long n, answer;\n\tscanf(\"%d\", &q);\n\tfor (int i = 0; i < q; i++)\n\t{\n\t\tanswer = 0;\n\t\tfor (int j = 0; j < 50; j++)\n\t\t\treverse_3[j] = 0;\n\t\tscanf(\"%lld\", &n);\n\n\t\tfor (long long k = n, j = 0; k != 0; k /= 3, j++)\n\t\t{\n\t\t\treverse_3[j] = k % 3;\n\t\t}\n\t\tfor (int j = 0; j < 49; j++)\n\t\t\tif (reverse_3[j] > 1)\n\t\t\t{\n\t\t\t\tfor (int l = j; l >= 0; l--)\n\t\t\t\t\treverse_3[l] = 0;\n\t\t\t\treverse_3[j + 1]++;\n\t\t\t}\n\n\t\tfor (int j = 0; j < 49; j++)\n\t\t\tif(reverse_3[j])\n\t\t\t\tanswer += (long long)pow(3, j);\n\t\t\n\t\t\tprintf(\"%lld\\n\", answer);\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(void)\n{\n\tint q, reverse_3[50];\n\tlong long n, answer;\n\tscanf(\"%d\", &q);\n\tfor (int i = 0; i < q; i++)\n\t{\n\t\tanswer = 0;\n\t\tfor (int j = 0; j < 50; j++)\n\t\t\treverse_3[j] = 0;\n\t\tscanf(\"%lld\", &n);\n\n\t\tfor (long long k = n, j = 0; k != 0; k /= 3, j++)\n\t\t{\n\t\t\treverse_3[j] = k % 3;\n\t\t}\n\t\tfor (int j = 0; j < 49; j++)\n\t\t\tif (reverse_3[j] > 1)\n\t\t\t{\n\t\t\t\tfor (int l = j; l >= 0; l--)\n\t\t\t\t\treverse_3[l] = 0;\n\t\t\t\treverse_3[j + 1]++;\n\t\t\t}\n\n\t\tfor (int j = 0; j < 49; j++)\n\t\t\tif(reverse_3[j])\n\t\t\t\tanswer += pow(3, j);\n\t\t\n\t\t\tprintf(\"%lld\\n\", answer);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.931067044381492, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "79ec7185ed4c5ab68d25b3a418187544", "bug_code_uid": "d6d78b28ccdc2e4fb1a39678442c3bc5", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "d05cd9973ded16c781907e97effaed6b", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,i,j,k,l,sum=0,max=-9999999999,temp,min1=9999999999;\n\tscanf(\"%lld\",&n);\n\tlong long int a[n],min2=9999999999;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tsum=sum+a[i];\n\t\tif(max < sum)\n\t\t{\n\t\t\tmax = sum;\n\t\t\ttemp = a[i];\n\t\t}\n\t\tif((min1 > a[i])&&(a[i]%2==0))\n\t\t\tmin1 = a[i];\n\t\telse if((min2 > a[i])&&(a[i]%2!=0))\n\t\t\tmin2 = a[i];\n\n\t}\n\tif(max%2==0)\n\t\tprintf(\"%lld\\n\",max);\n\telse\n\t{\n\t\tif(min1==9999999999)\n\t\t\tmax=max-min2;\n\t\telse\n\t\t\tmax=max-(min1+min2);\n\t\tprintf(\"%lld\\n\",max);\n\t}\n\treturn 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,i,j,k,l,sum=0,max=-9999999999,temp,min1=9999999999;\n\tscanf(\"%lld\",&n);\n\tlong long int a[n],min2=9999999999;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tsum=sum+a[i];\n\t\tif(max < sum)\n\t\t{\n\t\t\tmax = sum;\n\t\t\ttemp = a[i];\n\t\t}\n\t\t//if((min1 > a[i])&&(a[i]%2==0))\n\t\t//\tmin1 = a[i];\n\t\t if((min2 > a[i])&&(a[i]%2!=0))\n\t\t\tmin2 = a[i];\n\n\t}\n\tif(max%2==0)\n\t\tprintf(\"%lld\\n\",max);\n\telse\n\t{\n\t\tmax = max-min2;\n\t\tprintf(\"%lld\\n\",max);\n\t}\n\treturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.4977293369663942, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "be6405879ae3e451814a6defdf12dd2e", "bug_code_uid": "25fd20a5078d9c9a0ec47ec28d77dc78", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "acee67537838163e5d48a7ea78956eb3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n#include <stdint.h>\r\n\r\n\r\nint main() {\r\n\t __int64 t, p, a, b, c;\r\n\tscanf(\"%lld\", &t);\r\n\tfor (__int64 i = 0; i < t; i++) {\r\n\t\tscanf(\"%lld\", &p); \r\n\t\tscanf(\"%lld\", &a); \r\n\t\tscanf(\"%lld\", &b); \r\n\t\tscanf(\"%lld\", &c); \r\n\t\t__int64 res = -1, rb = -1, rc = -1,k = 1;\r\n\t\twhile (res < 0) {\r\n\t\t\tres =  a * k - p;\r\n\t\t\t++k;\r\n\t\t}\r\n\t\tk = 1;\r\n\t\twhile (rb < 0) {\r\n\t\t\trb =  b * k - p;\r\n\t\t\t++k;\r\n\t\t}\r\n\t\tk = 1;\r\n\t\twhile (rc < 0) {\r\n\t\t\trc = c * k - p;\r\n\t\t\t++k;\r\n\t\t}\r\n\r\n\t\tif (res > rb) {\r\n\t\t\tres = rb;\r\n\t\t}\r\n\t\tif (res > rc) {\r\n\t\t\tres = rc;\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%lld\\n\", res);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n#include <stdint.h>\r\n\r\n\r\nint main() {\r\n\t __int64 t, p, a, b, c, pc, pb,k,res;\r\n\tscanf(\"%lld\", &t);\r\n\tfor (__int64 i = 0; i < t; i++) {\r\n\t\tscanf(\"%lld\", &p); \r\n\t\tscanf(\"%lld\", &a); \r\n\t\tscanf(\"%lld\", &b); \r\n\t\tscanf(\"%lld\", &c); \r\n\t\tres = a - 1 - (p - 1) % a;\r\n\t\tpb = b - 1 - (p - 1) % b;\r\n\t\tpc = c - 1 - (p - 1) % c;\r\n\t\tif (res > pb)\r\n\t\t\tres = pb;\r\n\t\tif (res > pc)\r\n\t\t\tres = pc;\r\n\t\tprintf(\"%lld\\n\", res);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.43056397816858705, "equal_cnt": 24, "replace_cnt": 11, "delete_cnt": 9, "insert_cnt": 3, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "6c18fe77a5326cb8a28ba86e65cb555f", "bug_code_uid": "603e8203eff7d5a47aa349a058821936", "src_uid": "994a9cb52cf0fdab72be068eab1b27ef", "apr_id": "1d52f1cb5167894194a06b26215cbbef", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n//unsigned long long int abs(unsigned long long int a ,unsigned long long int b)\r\n//{\r\n//\treturn a>b?a-b:b-a;\r\n//}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t-->0)\r\n\t{\r\n\t\tunsigned long long int a;\r\n\t\tunsigned long long int b;\r\n\t\tscanf(\"%llu%llu\",&a,&b);\r\n\t\tif(a%b==0) printf(\"0 0\\n\");\r\n\t\telse if(a>b)\r\n\t\t{\r\n\t\t\tprintf(\"%d \",a-b);\r\n\t\t\tif(a-b>b) \r\n\t\t\t{\r\n\t\t\t\tif(2*b>a-b) printf(\"%d\\n\",a-2*b);\r\n\t\t\t\telse printf(\"%d\\n\",b);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tif(2*(b%(a-b))>a-b) printf(\"%d\\n\",(a-b)-b%(a-b));\r\n\t\t\t\telse printf(\"%d\\n\",b%(a-b));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tprintf(\"%d \",b-a);\r\n\t\t\tif(b-a>a) \r\n\t\t\t{\r\n\t\t\t\tif(2*a>b-a) printf(\"%d\\n\",b-2*a);\r\n\t\t\t\telse printf(\"%d\\n\",a);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tif(2*(a%(b-a))>b-a) printf(\"%d\\n\",(b-a)-a%(b-a));\r\n\t\t\t\telse printf(\"%d\\n\",a%(b-a));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t-->0)\r\n\t{\r\n\t\tlong long int a;\r\n\t\tlong long int b;\r\n\t\tscanf(\"%lld%lld\",&a,&b);\r\n\t\tif(a==b) printf(\"0 0\\n\");\r\n\t\telse if(a>b)\r\n\t\t{\r\n\t\t\tif(b<=a-b)\r\n\t\t\t{\r\n\t\t\t\tif(2*b<a-b) printf(\"%lld %lld\\n\",a-b,b);\r\n\t\t\t\telse printf(\"%lld %lld\\n\",a-b,a-2*b);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(b%(a-b)==0) printf(\"%lld 0\\n\",a-b);\r\n\t\t\t\telse if(2*(b%(a-b))<=a-b) printf(\"%lld %lld\\n\",a-b,b%(a-b));\r\n\t\t\t\telse printf(\"%lld %lld\\n\",a-b,(a-b)-(b%(a-b)));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(a<=b-a)\r\n\t\t\t{\r\n\t\t\t\tif(2*a<b-a) printf(\"%lld %lld\\n\",b-a,a);\r\n\t\t\t\telse printf(\"%lld %lld\\n\",b-a,b-2*a);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(a%(b-a)==0) printf(\"%lld 0\\n\",b-a);\r\n\t\t\t\telse if(2*(a%(b-a))<=b-a) printf(\"%lld %lld\\n\",b-a,a%(b-a));\r\n\t\t\t\telse printf(\"%lld %lld\\n\",b-a,(b-a)-(a%(b-a)));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.6042154566744731, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "41b404b8b0d2b474cf550e9146a79759", "bug_code_uid": "d9ec60c9d4f93a8aa68ad02b05d296c7", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "d6c56e7460b47b2eedf80347d6dc207f", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,j,n1;\r\n\tscanf(\"%d\",&n);\r\n\tint a[n];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\tscanf(\"%d\",&n1);\r\n\tif(n1%2==0)\r\n\ta[i]=n1-1;else\r\n\ta[i]=n1-2;\t\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\tprintf(\"%d\\n\",a[i]);\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,j,n1,j1;\r\n\tscanf(\"%d\",&n);\r\n\tint a[n];\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\tscanf(\"%d\",&n1);\r\n\tfor(j1=2;j1<=n1;j1*=2);\r\n\ta[i]=j1/2-1;\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\tprintf(\"%d\\n\",a[i]);\r\n}"}
{"similarity_score": 0.9407061958694204, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8499476007f4a0f57bb31365918bb7f2", "bug_code_uid": "5b8aa06897648f0ebd6ca4c7ae34d53e", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "ae1b188cdb182ce225ce77794e9598e2", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint min(int k, int l, int m){\n    if(m<=k&&m<=l){\n        return m;\n    }\n    else if(k<=m&&k<=l){\n        return k;\n    }\n    else{\n        return l;\n    }\n\n}\nint main()\n{\nint n,team[1001],i,onepost[350],twopostion[350],threepostion[350],k=0,l=0,m=0,teamnumber;\nscanf(\"%d\",&n);\nfor(i=0;i<n;++i){\n    scanf(\"%d\",&team[i]);\n}\nfor(i=0;i<n;++i){\n    if(team[i]==1){\n        onepost[k]=i+1;\n        k++;\n    }\n    else if(team[i]==2){\n            twopostion[l]=i+1;\n            l++;\n\n    }\n    else{\n        threepostion[m]=i+1;\n        m++;\n    }\n}\nteamnumber=min(k,l,m);\nprintf(\"%d\\n\",teamnumber);\nfor(i=0;i<teamnumber;++i){\n    printf(\"%d %d %d\\n\",onepost[i],twopostion[i],threepostion[i]);\n}\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint min(int k, int l, int m){\n    if(m<=k&&m<=l){\n        return m;\n    }\n    else if(k<=m&&k<=l){\n        return k;\n    }\n    else{\n        return l;\n    }\n\n}\nint main()\n{\nint n,team[5001],i,onepost[5001],twopostion[5001],threepostion[5001],k=0,l=0,m=0,teamnumber;\nscanf(\"%d\",&n);\nfor(i=0;i<n;++i){\n    scanf(\"%d\",&team[i]);\n}\nfor(i=0;i<n;++i){\n    if(team[i]==1){\n        onepost[k]=i+1;\n        k++;\n    }\n    else if(team[i]==2){\n            twopostion[l]=i+1;\n            l++;\n\n    }\n    else{\n        threepostion[m]=i+1;\n        m++;\n    }\n}\nteamnumber=min(k,l,m);\nprintf(\"%d\\n\",teamnumber);\nfor(i=0;i<teamnumber;++i){\n    printf(\"%d %d %d\\n\",onepost[i],twopostion[i],threepostion[i]);\n}\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8404494382022472, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b4ef736d751873ece31e9103163475fb", "bug_code_uid": "4e5bab85bc421fd7daa8d0639a674114", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "812b3638f7ed8b91da843df8559bbb39", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, i, max, min, i_max, i_min, ans;\n    scanf(\"%d\", &n);\n\n    int ar[n];\n\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &ar[i]);\n    }\n    max = ar[0];\n    for(i = 1; i < n; i++){\n        if(max < ar[i]){\n            max = ar[i];\n            i_max = i;\n\n        }\n    }\n\n    min = ar[n - 1];\n    for(i = n - 2; i >= 0; i--){\n        if(min > ar[i]){\n            min = ar[i];\n            i_min = i;\n\n\n        }\n    }\n    ans = i_max + (n - 1) - i_min;\n\n    if(i_max > i_min) ans--;\n    printf(\"%d\", ans);\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, i, max, min, i_max = 0, i_min, ans;\n    scanf(\"%d\", &n);\n\n    int ar[n];\n\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &ar[i]);\n    }\n    i_min = n - 1;\n\n    max = ar[0];\n    for(i = 1; i < n; i++){\n        if(max < ar[i]){\n            max = ar[i];\n            i_max = i;\n\n        }\n    }\n    //printf(\"imax = %d, max = %d\\n\",i_max, max);\n\n    min = ar[n - 1];\n    for(i = n - 1; i >= 0; i--){\n        if(min > ar[i]){\n            min = ar[i];\n            i_min = i;\n\n\n        }\n    }\n    //printf(\"imin = %d, min = %d\\n\", i_min, min);;\n\n    if(i_max == 0 && i_min == n - 1){\n        printf(\"0\");\n        return 0;\n    }\n    ans = i_max + (n - 1) - i_min;\n\n    if(i_max > i_min) ans--;\n    printf(\"%d\", ans);\n\n    return 0;\n\n}\n\n"}
{"similarity_score": 0.9892294946147473, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "711cef8e6fa1211a20a4fc1a996b6411", "bug_code_uid": "b39cf9c1228553f0449840c182bc5627", "src_uid": "6ae754639d96790c890f9d1ab259332a", "apr_id": "5a3bf43befc94451f1a91ae084656e1e", "difficulty": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(;t>0;t--)\r\n    {\r\n        int n,c=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<100000;i++)\r\n        {\r\n            if(2*i*i==n)\r\n            {\r\n                c++;\r\n                break;\r\n            }\r\n            else if(2*i*i==n)\r\n            {\r\n                c++;\r\n                break;\r\n            }\r\n            \r\n            \r\n            \r\n        }\r\n        if(c==1)\r\n        {\r\n            printf(\"YES\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(;t>0;t--)\r\n    {\r\n        int n,c=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<100000;i++)\r\n        {\r\n            if(2*i*i==n)\r\n            {\r\n                c++;\r\n                break;\r\n            }\r\n            else if(4*i*i==n)\r\n            {\r\n                c++;\r\n                break;\r\n            }\r\n            \r\n            \r\n            \r\n        }\r\n        if(c==1)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6982829108748978, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2349cfeeb042621d956278909f0d859a", "bug_code_uid": "2d2bad36817ec5e8a6eab3bfb9ece6a8", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "9d36f75eedadba26c69a06ee2f0f8391", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],i,fiv=0,zer=0;\n    for(i=0;i<n;i++)\n     {\n         scanf(\"%d\",&a[i]);\n         if(a[i]==5)\n          fiv++;\n         else zer++;\n     }\n     for(i=1;i<=9*(fiv/9);i++)\n      {\n          printf(\"5\");\n      }\n      if((fiv/9)>0)\n      {\n          for(i=0;i<zer;i++)\n           printf(\"0\");\n      }\n      else printf(\"0\");\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],i,fiv=0,zer=0;\n    for(i=0;i<n;i++)\n     {\n         scanf(\"%d\",&a[i]);\n         if(a[i]==5)\n          fiv++;\n         else zer++;\n     }\n     if(zer<=0)\n       printf(\"-1\");\n     else\n     {\n         if((fiv/9)>0)\n          {\n              for(i=1;i<=9*(fiv/9);i++)\n                 printf(\"5\");\n              for(i=0;i<zer;i++)\n                 printf(\"0\");\n          }\n          else printf(\"0\");\n     }\n     /*for(i=1;i<=9*(fiv/9);i++)\n      {\n          printf(\"5\");\n      }\n      if((fiv/9)>0)\n      {\n          for(i=0;i<zer;i++)\n           printf(\"0\");\n      }\n      else printf(\"0\");*/\n}"}
{"similarity_score": 0.9950980392156863, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "aec537d00d2ab27ac4cefbfd0338cdf3", "bug_code_uid": "d22fa9c754e1798a5e0986d56cf8dd85", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "143aa98b030f84b21c94ea6113488b01", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int i;\n    scanf(\"%d\",& i);\n    int j ;\n    char ch[4];\n    int var =0 ;\n    for (j=0 ;j<i;j++){\n        scanf(\"%s\", ch);\n        if ((strcmp(ch,\"++X\") == 0)||(strcmp(ch,\"X++\") == 0)){\n            var=var+1;\n        }\n        else if((strcmp(ch,\"--X\") == 0)||(strcmp(ch,\"X++\") == 0)){\n            var=var-1;\n        }\n        \n     }\n    printf(\"%d\", var );\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int i;\n    scanf(\"%d\",& i);\n    int j ;\n    char ch[4];\n    int var =0 ;\n    for (j=0 ;j<i;j++){\n        scanf(\"%s\", ch);\n        if ((strcmp(ch,\"++X\") == 0)||(strcmp(ch,\"X++\") == 0)){\n            var=var+1;\n        }\n        else if((strcmp(ch,\"--X\") == 0)||(strcmp(ch,\"X--\") == 0)){\n            var=var-1;\n        }\n        \n     }\n    printf(\"%d\", var );\n    return 0;\n}"}
{"similarity_score": 0.9375481881264457, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7e75638d327b115d61cac9073da2b736", "bug_code_uid": "0cb79dcbd0c57c800de8fb484f0ac9b0", "src_uid": "926c01419301caff034988aff98edc9d", "apr_id": "8b6a1ec50d24b0b9e01cb81c2242085f", "difficulty": 1300, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint comp(const void* a, const void* b)\n{\n    return *(int*)a - *(int*)b;\n}\n//#define scanf scanf_s\nlong long n, i, a[200000],b[200000],max,sum1=0,sum2=1,k,j=0,l;\nint main()\n{\n    scanf(\"%lld %lld\", &n,&k);\n    for (i = 0; i < n; i++)\n        scanf(\"%lld\", &a[i]);\n    printf(\"%lld \", (n + (n - k + 1)) * k / 2);\n    for (i = 0; i < n; i++)\n    {\n        if(a[i]>n-k)\n        {\n            b[j++]=i;\n        }\n        if(j==k)\n            break;\n    }\n    qsort(b, k, sizeof(long long), comp);\n    for (i = 0; i < k - 1; i++)\n    {\n        sum2 *= b[i + 1] - b[i];\n    }\n    printf(\"%lld\", sum2%998244353);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint comp(const void* a, const void* b)\n{\n    return *(int*)a - *(int*)b;\n}\n//#define scanf scanf_s\nlong long n, i, a[200000],b[200000],max,sum1=0,sum2=1,k,j=0,l;\nint main()\n{\n    scanf(\"%lld %lld\", &n,&k);\n    for (i = 0; i < n; i++)\n        scanf(\"%lld\", &a[i]);\n    printf(\"%lld \", (n + (n - k + 1)) * k / 2);\n    for (i = 0; i < n; i++)\n    {\n        if(a[i]>n-k)\n        {\n            b[j++]=i;\n        }\n        if(j==k)\n            break;\n    }\n    qsort(b, k, sizeof(long long), comp);\n    for (i = 0; i < k - 1; i++)\n    {\n        sum2 =(sum2*( b[i + 1] - b[i]))%998244353;\n    }\n    printf(\"%lld\", sum2);\n}\n"}
{"similarity_score": 0.995221843003413, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c426656fa45cc52c4fe6dc81ad8ba445", "bug_code_uid": "2fbc169e527e4522aa20888f0d189449", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "5649b768992c0f28a993ed6417eff913", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdbool.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        int n,a=0;\r\n        scanf(\"%d\",&n);\r\n        int arr[200000],count[200000]= {0};\r\n        for(int i=1; i<=n; i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            int value=arr[i];\r\n            count[value]++;\r\n        }\r\n        bool counter=false;\r\n        for(int value=1; value<=n; value++)\r\n        {\r\n            if(count[value]>=3)\r\n            {\r\n                counter=true;\r\n                printf(\"%d\\n\",value);\r\n                break;\r\n            }\r\n        }\r\n        if(!counter)\r\n        {\r\n            printf(\"-1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdbool.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        int n,a=0;\r\n        scanf(\"%d\",&n);\r\n        int arr[200001],count[200001]= {0};\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            int value=arr[i];\r\n            count[value]++;\r\n        }\r\n        bool counter=false;\r\n        for(int value=1; value<=n; value++)\r\n        {\r\n            if(count[value]>=3)\r\n            {\r\n                counter=true;\r\n                printf(\"%d\\n\",value);\r\n                break;\r\n            }\r\n        }\r\n        if(!counter)\r\n        {\r\n            printf(\"-1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7219613980177361, "equal_cnt": 17, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "c93feba8175e1b671b4d5b98ee92b9a4", "bug_code_uid": "5a5f182d820aa4e88d82afc8d1caf158", "src_uid": "ada28bbbd92e0e7c6381bb9a4b56e7f9", "apr_id": "cc6dcb7bc031b0e5a4ad9812ef1de033", "difficulty": 1500, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid sort(int n, int* ptr) \n{ \n    int i, j, t; \n    for (i = 0; i < n; i++) { \n        for (j = i + 1; j < n; j++) { \n            if (*(ptr + j) < *(ptr + i)) { \n                t = *(ptr + i); \n                *(ptr + i) = *(ptr + j); \n                *(ptr + j) = t; \n            } \n        } \n    }\n}\nint main() \n{\n\tint n,a,b,k,score=0,m,j=0;\n\tscanf(\"%d %d %d %d\",&n,&a,&b,&k);\n\tint arr1[n],arr2[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t    scanf(\"%d\",&arr1[i]);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t    arr1[i]=arr1[i]%(a+b);\n\t    if(arr1[i]<=a && arr1[i]>0)\n\t    {\n\t        score=score+1;\n\t    }\n\t    else\n\t    {\n\t        arr2[j]=arr1[i];\n\t        j=j+1;\n\t    }\n\t}\n\tj=j-1;\n\tsort(j,arr2);\n\tfor(int i=0;i<j;i++)\n\t{\n\t    m= arr2[i];\n\t    if(m==0){m=a+b;}\n\t    while(m>0)\n\t    {\n\t        m=m-a;\n\t        if(m<=0)\n\t        {\n\t            score=score+1;\n\t            break;\n\t        }\n\t        m=m-b;\n\t        if(m<=0 && k>0)\n\t        {\n\t            m=m+b;\n\t            k=k-1;\n\t        }\n\t    }\n\t}\n\t\n\tprintf(\"%d\",score);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main() \n{\n\tint n,a,b,k,score=0,m,j=0;\n\tscanf(\"%d %d %d %d\",&n,&a,&b,&k);\n\tint arr1[n],arr2[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t    scanf(\"%d\",&arr1[i]);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t    arr1[i]=arr1[i]%(a+b);\n\t    if(arr1[i]<=a && arr1[i]>0)\n\t    {\n\t        score=score+1;\n\t    }\n\t    else if(arr1[i]==0)\n\t    {\n\t        arr2[j]=a+b;\n\t        j=j+1;\n\t    }\n\t    else\n\t    {\n\t        arr2[j]=arr1[i];\n\t        j=j+1;\n\t    }\n\t}\n\tqsort(arr2,j, sizeof(int), cmpfunc);\n\t\n\tfor(int i=0;i<j;i++)\n\t{\n\t    m= arr2[i];\n\t    while(m>0)\n\t    {\n\t        m=m-a;\n\t        if(m<=0)\n\t        {\n\t            score=score+1;\n\t            break;\n\t        }\n\t        m=m-b;\n\t        if(m<=0 && k>0)\n\t        {\n\t            m=m+b;\n\t            k=k-1;\n\t        }\n\t    }\n\t}\n\t\n\tprintf(\"%d\",score);\n}\n"}
{"similarity_score": 0.5906499429874572, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "37eb397c824ed304ef0e08f52c3465d8", "bug_code_uid": "2973fea04833d2c1abe80c389bb2fd1c", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "deceebafc8bbf855de48922f93d7415e", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,l=0;\n    scanf(\"%d\",&t);\n    long long int n,k,x;\n    int ara[t];\n    for(i=0;i<t;i++){\n        scanf(\"%lld%lld\",&n,&k);\n        x=n;\n        while(x!=0){\n            if(x%k==0){\n                x=x/k;\n            }\n            else{\n                x=x-1;\n            }\n            l++;\n        }\n        ara[i]=l;\n        l=0;\n    }\n    for(i=0;i<t;i++){\n        printf(\"%d\\n\",ara[i]);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    long long int n,k,x,b,y;\n    long long int ara[t],l=0,a;\n    for(i=0;i<t;i++){\n        scanf(\"%lld%lld\",&n,&k);\n        x=n;\n        while(x!=0){\n            a=x/k;\n            y=a*k;\n            l=l+x-y+1;\n            x=x/k;\n\n        }\n        ara[i]=l-1;\n        l=0;\n    }\n    for(i=0;i<t;i++){\n        printf(\"%lld\\n\",ara[i]);\n    }\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9210526315789473, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "767aa3ae45b5d81b5c230b7da4792a07", "bug_code_uid": "29f50d2d8e068ef53ce8f436275e1dca", "src_uid": "9edbe28b5be43a9cc6c633db98bc5a36", "apr_id": "ac02e33461b88854ca7bc5424d71b61c", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n    \tint n,k;\n    \tscanf(\"%d %d\",&n,&k);\n    \tlong long a[100010]={0};\n    \tfor(int i=1;i<=k;i++){\n    \t\tscanf(\"%lld\",&a[i]);\n\t\t}\n\t\tif(k==1){\n\t\t\tprintf(\"YES\\n\");\n\t\t}else{\n\t\t\tint re=1;\n\t    \tlong long b[100100]={0};\n\t    \tint i;\n\t    \tfor(i=k;i>=1;i--){\n\t    \t\tb[i]=a[i]-a[i-1];\n\t    \t\tif(i<k&&i!=1){\n\t    \t\t\tif(b[i]>b[i+1]){\n\t    \t\t\t\tre=0;\n\t    \t\t\t\tbreak;\n\t    \t\t\t}\n\t    \t\t}\n\t    \t}\n\t    \tif(i==0){\n\t    \t\tlong long cha=n-k+1;\n\t    \t\tif(cha*b[2]<a[1]){\n    \t\t    \tre=0;\n\t        \t}\n    \t\t}\n    \t\tif(re==0){\n\t    \t\tprintf(\"NO\\n\");\n    \t\t}else{\n    \t\t\tprintf(\"YES\\n\");\n\t    \t}\n\t\t}\n\t}\n\treturn 0;\n}\n\t \t\t\t\t    \t\t\t  \t\t\t \t \t \t\t\t \t \t\t", "fixed": "#include<stdio.h>\n#include<string.h>\n  \tlong long a[100010];\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n    \tint n,k;\n    \tscanf(\"%d %d\",&n,&k);\n  \n    \tfor(int i=1;i<=k;i++){\n    \t\tscanf(\"%lld\",&a[i]);\n\t\t}\n\t\tif(k==1){\n\t\t\tprintf(\"YES\\n\");\n\t\t}else{\n\t\t\tint re=1;\n\t    \tlong long b[100100]={0};\n\t    \tint i;\n\t    \tfor(i=k;i>=1;i--){\n\t    \t\tb[i]=a[i]-a[i-1];\n\t    \t\tif(i<k&&i!=1){\n\t    \t\t\tif(b[i]>b[i+1]){\n\t    \t\t\t\tre=0;\n\t    \t\t\t\tbreak;\n\t    \t\t\t}\n\t    \t\t}\n\t    \t}\n\t    \tif(i==0){\n\t    \t\tlong long cha=n-k+1;\n\t    \t\tif(cha*b[2]<a[1]){\n    \t\t    \tre=0;\n\t        \t}\n    \t\t}\n    \t\tif(re==0){\n\t    \t\tprintf(\"NO\\n\");\n    \t\t}else{\n    \t\t\tprintf(\"YES\\n\");\n\t    \t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n\t  \t \t\t   \t\t\t\t\t \t \t\t\t\t\t\t \t\t\t \t\t"}
{"similarity_score": 0.9323943661971831, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "62525a605db7fe3ca6b106f27198e793", "bug_code_uid": "4e949f3d83beccca772186844a99a8be", "src_uid": "e70708f72da9a203b21fc4112ede9268", "apr_id": "b3e6e8800e4ae39224176a6346a2e95d", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,x=-1,y=-1,f=0;\n\tchar s[100005];\n\tscanf(\"%s\",s);\n\tn=strlen(s);\n\tfor(i=0;i<n;i++){\n\t\tif(x==-1 && s[i]!='a')\n\t\t{ x=i; y=i; }\n\t\telse if(x!=-1 && s[i]=='a')\n\t\t{\n\t\t\tf=1;\n\t\t\ty=i-1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(f==0 && x!=-1)\n\ty=n-1;\n\tfor(i=x;i<=y;i++)\n\ts[i]--;\n\tprintf(\"%s\\n\",s);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,x=-1,y=-1,f=0;\n\tchar s[100005];\n\tscanf(\"%s\",s);\n\tn=strlen(s);\n\tfor(i=0;i<n;i++){\n\t\tif(x==-1 && s[i]!='a')\n\t\t{ x=i; y=i; }\n\t\telse if(x!=-1 && s[i]=='a')\n\t\t{\n\t\t\tf=1;\n\t\t\ty=i-1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(f==0 && x!=-1)\n\ty=n-1;\n\tif(x!=-1){\n\t\tfor(i=x;i<=y;i++)\n\t\ts[i]--;\n\t}\n\telse\n\ts[n-1]='z';\n\tprintf(\"%s\\n\",s);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9320905459387483, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "48e6884a35a90bf21641005c54b913db", "bug_code_uid": "6b60c9f55593da916be1c15cc5b8203e", "src_uid": "29d4ca13888c0e172dde315b66380fe5", "apr_id": "f57a4a1083cb22f13eb377139c6b2a24", "difficulty": 1600, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include\"stdio.h\"\n#include\"string.h\"\n#include\"math.h\"\n#include\"stdlib.h\"\n#include\"ctype.h\"\n#include\"limits.h\"\n#include\"time.h\"\n#include\"stdbool.h\"\n\nint main()\n{\n\tclock_t lnh = clock();\n\tdouble x1, x2, x3, y1, y2, y3, d, r, R;\n\tscanf(\"%lf%lf%lf%lf%lf\", &R, &x2, &y2, &x1, &y1);\n\td = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\tif (d >= R)\n\t\tr = R, x3 = x2, y3 = y2;\n\n\telse\n\t{\n\t\tif (x1 == x2 && y1 == y2)\n\t\t{\n\t\t\tr = R / 2;\n\t\t\td = sqrt(x2 * x2 + y2 * y2);\n\t\t\tx3 = (d + R / 2) * x2;\n\t\t\ty3 = (d + R / 2) * y2;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tr = (d + R) / 2;\n\t\t\tx3 = x1 + (r * (x2 - x1)) / d;\n\t\t\ty3 = y1 + (r * (y2 - y1)) / d;\n\t\t}\n\t}\n\n\tprintf(\"%.9lf %.9lf %.9lf\", x3, y3, r);\n\tprintf(\"\\n\");\n\n\n\tclock_t cls = clock();\n\t//printf(\"%fms\\n\",(double)((cls-lnh)*1000)/CLOCKS_PER_SEC);\n\treturn 0;\n}", "fixed": "#include\"stdio.h\"\n#include\"string.h\"\n#include\"math.h\"\n#include\"stdlib.h\"\n#include\"ctype.h\"\n#include\"limits.h\"\n#include\"time.h\"\n#include\"stdbool.h\"\n\nint main()\n{\n\tclock_t lnh = clock();\n\tdouble x1, x2, x3, y1, y2, y3, d, r, R;\n\tscanf(\"%lf%lf%lf%lf%lf\", &R, &x2, &y2, &x1, &y1);\n\td = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\tif (d >= R)\n\t\tr = R, x3 = x2, y3 = y2;\n\n\telse\n\t{\n\t\tif (x1 == x2 && y1 == y2)\n\t\t{\n\t\t\tr = R / 2;\n\t\t\tx3 = x1;\n\t\t\ty3 = y1+r;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = (d + R) / 2;\n\t\t\tx3 = x1 + (r * (x2 - x1)) / d;\n\t\t\ty3 = y1 + (r * (y2 - y1)) / d;\n\t\t}\n\t}\n\n\tprintf(\"%.9lf %.9lf %.9lf\", x3, y3, r);\n\tprintf(\"\\n\");\n\n\n\tclock_t cls = clock();\n\t//printf(\"%fms\\n\",(double)((cls-lnh)*1000)/CLOCKS_PER_SE\n\treturn 0;\n}"}
{"similarity_score": 0.9286726499763817, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "9a1738598b8332c7f73017b31fbbc085", "bug_code_uid": "d43ba899badd7747ab6a24dce9697c2b", "src_uid": "43009fe44c2b5905c8160ac7ae9c595a", "apr_id": "894874a25c4d6d270a41b2d36f9224af", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#define MAX 2000\r\nint list[MAX][2000];\r\nint list_t[MAX][2000];\r\nint main()\r\n{\r\n\tint t1, i, len, lent, t2, ax, time, st;\r\n\r\n\tscanf(\"%d\", &t1);\r\n\twhile (t1--)\r\n\t{\r\n\t\tst = 0;\r\n\t\ti = 0;\r\n\t\tmemset(list, 0, sizeof(list));\r\n\r\n\t\tscanf(\"%d\", &len);\r\n\t\tlent = len;\r\n\t\twhile (len--)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &list[0][i]);\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tlen = lent;\r\n\t\tscanf(\"%d\", &t2);\r\n\t\twhile (t2--)\r\n\t\t{\r\n\t\t\tint flag = 1;\r\n\t\t\tscanf(\"%d %d\", &ax, &time);\r\n\t\t\tif (time > len)\r\n\t\t\t\ttime = len;\r\n\t\t\tif (time > st)\r\n\t\t\t{\r\n\t\t\t\tst++;\r\n\t\t\t\tfor (; st <= time && flag; st++)\r\n\t\t\t\t{\r\n\t\t\t\t\tmemset(list_t, 0, sizeof(list_t));\r\n\t\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\t\tlist_t[st][list[st - 1][i]]++;//1 0\r\n\t\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\t\tlist[st][i] = list_t[st][list[st - 1][i]];\r\n\t\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\t\tif (list[st][i] != len)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tif (i == len)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = 0;\r\n\t\t\t\t\t\ttime = st;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tst--;\r\n\t\t\t\tprintf(\"%d\\n\", list[time][--ax]);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", list[time][--ax]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#define MAX 2001\r\nint list[MAX][2001];\r\nint list_t[MAX][2001];\r\nint main()\r\n{\r\n\tint t1, i, len, lent, t2, ax, time, st;\r\n\r\n\tscanf(\"%d\", &t1);\r\n\twhile (t1--)\r\n\t{\r\n\t\tst = 0;\r\n\t\ti = 0;\r\n\r\n\t\tscanf(\"%d\", &len);\r\n\t\tlent = len;\r\n\t\twhile (len--)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &list[0][i]);\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tlen = lent;\r\n\t\tscanf(\"%d\", &t2);\r\n\t\twhile (t2--)\r\n\t\t{\r\n\t\t\tint flag = 1;\r\n\t\t\tscanf(\"%d %d\", &ax, &time);\r\n\t\t\tif (time > len)\r\n\t\t\t\ttime = len;\r\n\t\t\tif (time > st)\r\n\t\t\t{\r\n\t\t\t\tst++;\r\n\t\t\t\tfor (; st <= time && flag; st++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (i = 0; i < 2002; i++)\r\n\t\t\t\t\t\tlist_t[0][i] = 0;\r\n\t\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\t\tlist_t[0][list[st - 1][i]]++;//1 0\r\n\t\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\t\tlist[st][i] = list_t[0][list[st - 1][i]];\r\n\t\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\t\tif (list[st][i] != len)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tif (i == len)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = 0;\r\n\t\t\t\t\t\ttime = st;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tst--;\r\n\t\t\t\tprintf(\"%d\\n\", list[time][--ax]);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", list[time][--ax]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9982238010657194, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2dc3a66b6f0c10d27044f9125c5dbcfd", "bug_code_uid": "dac529a7c62fd1613da0c99641afd7dc", "src_uid": "2052b0b4abdcf7d613b56842b1267f60", "apr_id": "30e8258ced1497b6cdfe3967f3e2d329", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int l[n],r[n];\n    int l_cnt_0=0,l_cnt_1=0,r_cnt_0=0,r_cnt_1=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n        if(l[i]==0)\n            l_cnt_0++;\n        else\n            l_cnt_1++;\n        if(r[i]==0)\n            r_cnt_0++;\n        else\n            l_cnt_1++;\n    }\n    int count=0;\n    if(l_cnt_0<l_cnt_1)\n        count+=l_cnt_0;\n    else\n        count+=l_cnt_1;\n    if(r_cnt_0<r_cnt_1)\n        count+=r_cnt_0;\n    else\n        count+=r_cnt_1;\n    printf(\"%d\",count);\n    return 0;\n\n}\n", "fixed": "int main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int l[n],r[n];\n    int l_cnt_0=0,l_cnt_1=0,r_cnt_0=0,r_cnt_1=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n        if(l[i]==0)\n            l_cnt_0++;\n        else\n            l_cnt_1++;\n        if(r[i]==0)\n            r_cnt_0++;\n        else\n            r_cnt_1++;\n    }\n    int count=0;\n    if(l_cnt_0<l_cnt_1)\n        count+=l_cnt_0;\n    else\n        count+=l_cnt_1;\n    if(r_cnt_0<r_cnt_1)\n        count+=r_cnt_0;\n    else\n        count+=r_cnt_1;\n    printf(\"%d\",count);\n    return 0;\n\n}\n"}
{"similarity_score": 0.4423676012461059, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1c09d765516f5c86470d69bece8622a9", "bug_code_uid": "8abd22db89e1f121d1bdaccd5b888d10", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "354d2add78a452b66182c772938b1b7e", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint mod(int j, int k)\n{\n\tif(j>k)\n\t\treturn j-k;\n\telse\n\t\treturn k-j;\n}\nint main()\n{\n\tint t,a,b,c,d,ans,n,emp,full,g,m,rem,i;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint l[1000];\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(a==1)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse if(a==2)\n\t\t{\n\t\t\tprintf(\"%d\\n\",m);\n\t\t}\n\t\telse if(a>2)\n\t\t{\n\t\t\tif(a%2==1)\n\t\t\t{\n\t\t\t\temp = a/2+1;\n\t\t\t\tfull = a-emp;\n\t\t\t\trem = b%full;\n\t\t\t\tg = b/full;\n\t\t\t\tfor(i=0;i<a;i++)\n\t\t\t\t{\n\t\t\t\t\tif(i%2==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tl[i]=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tl[i]=g;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint sum=0;\n\t\t\t\tfor(i=0;i<a-1;i++)\n\t\t\t\t{\n\t\t\t\t\tint e=l[i];\n\t\t\t\t\tint h=l[i+1];\n\t\t\t\t\tint an=mod(e,h);\n\t\t\t\t\tsum=sum+an;\t\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\",sum+(2*rem));\n\t\t\t}\n\t\t\telse if(a%2==0)\n\t\t\t{\n\t\t\t\temp = a/2;\n\t\t\t\tfull = a-emp;\n\t\t\t\trem = b%full;\n\t\t\t\tg = b/full;\n\t\t\t\tfor(i=0;i<a;i++)\n\t\t\t\t{\n\t\t\t\t\tif(i%2==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tl[i]=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tl[i]=g;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint sum=0;\n\t\t\t\tfor(i=0;i<a-1;i++)\n\t\t\t\t{\n\t\t\t\t\tint e=l[i];\n\t\t\t\t\tint h=l[i+1];\n\t\t\t\t\tint an=mod(e,h);\n\t\t\t\t\tsum=sum+an;\t\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\",sum+(2*rem));\n\t\t\t}\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,a,b,c,d,ans,n,emp,full,g,m,rem,i;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint l[1000];\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(a==1)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse if(a==2)\n\t\t{\n\t\t\tprintf(\"%d\\n\",b);\n\t\t}\n\t\telse if(a>2)\n\t\t{\n\t\t\tif(a%2==1)\n\t\t\t{\n\t\t\t\temp = a/2+1;\n\t\t\t\tfull = a-emp;\n\t\t\t\trem = b%full;\n\t\t\t\tg = b/full;\n\t\t\t\tint sum=g*full*2;\n\t\t\t\tprintf(\"%d\\n\",sum+(2*rem));\n\t\t\t}\n\t\t\telse if(a%2==0)\n\t\t\t{\n\t\t\t\temp = a/2;\n\t\t\t\tfull = a-emp;\n\t\t\t\trem = b%full;\n\t\t\t\tg = b/full;\n\t\t\t\tint sum=g*full*2;\n\t\t\t\tprintf(\"%d\\n\",sum+(2*rem));\n\t\t\t}\n\t\t}\n\t}\n}"}
{"similarity_score": 0.6696378830083566, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a5c16fd4ea322f5526caddb2120f42ca", "bug_code_uid": "3aafe760c4c82c3c9d358bc2d768256b", "src_uid": "a67ea891cd6084ceeaace8894cf18e60", "apr_id": "a25384994e8b7f0fb7fd8f81035b91bf", "difficulty": 1600, "tags": ["greedy", "graphs", "math", "dsu", "sortings", "dfs and similar"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[300][300];\nint p[300];\nint n;\n\nvoid dfs(int i,int& index)\n{\n    if (i == n - 1)\n        return;\n    int j;\n    for (j = i + 1; j < n; ++j)\n    {\n        if (a[i][j])\n        {\n            if (p[j] < p[index])\n                index = j;\n            dfs(j, index);\n        }\n    }\n}\n\nint main()\n{\n    int i, j, k, tmp;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; ++i)\n        scanf(\"%d\", p + i);\n    for (i = 0; i < n; ++i)\n    for (j = 0; j < n; ++j)\n        scanf(\"%1d\", &a[i][j]);\n    for (i = 0; i < n - 1; ++i)\n    {\n        k = i;\n        dfs(i, k);\n        if (k != i)\n        {\n            tmp = p[i];\n            p[i] = p[k];\n            p[k] = tmp;\n        }\n        printf(\"%d \", p[i]);\n    }\n    printf(\"%d\\n\", p[i]);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint a[300][300];\nint take[300];\nint p[300];\nint connect[300];\nint n;\n\nvoid getConnect(int i,int now)\n{\n    if (take[i])\n        return;\n    take[i] = 1;\n    int j;\n    for (j = 0; j < n; ++j)\n    {\n        if (a[i][j])\n        {\n//          a[i][j] = 0;\n            connect[j] = now;\n            getConnect(j,now);\n        }\n    }\n}\n\nint main()\n{\n    int i, j, k, tmp, con;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; ++i)\n        scanf(\"%d\", p + i);\n    for (i = 0; i < n; ++i)\n    for (j = 0; j < n; ++j)\n        scanf(\"%1d\", &a[i][j]);\n    for (i = 0; i < n;++i)\n    if (!connect[i])\n    {\n        connect[i] = i + 1;\n        getConnect(i, i + 1);\n    }\n    for (i = 0; i < n - 1; ++i)\n    {\n        k = i;\n        for (j = i + 1; j < n;++j)\n        if (connect[j] == connect[i] && p[j] < p[k])\n            k = j;\n        if (k != i)\n        {\n            tmp = p[i];\n            p[i] = p[k];\n            p[k] = tmp;\n        }\n        printf(\"%d \", p[i]);\n    }\n    printf(\"%d\\n\", p[i]);\n    return 0;\n}"}
{"similarity_score": 0.9814402375649591, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3d18b13386e7f4073a483b6aa7e9476d", "bug_code_uid": "91ab0987c1f042c439c6ed303cf34e33", "src_uid": "e3a03f3f01a77a1983121bab4218c39c", "apr_id": "01b8190318f9eb5982998516aee7df41", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char a[110];\n    int i,n,k=0,total=0;\n    scanf(\"%d %d\\n\",&n,&k);\n\n       for(i=0;i<n;i++)\n         scanf(\"%c\",&a[i+1]);\n\n\n    total=n;\n    if((k)>(total/2))\n    {\n        while(k!=total)\n        {\n            printf(\"RIGHT\\n\");\n            k++;\n        }\n\n    for(i=n;i>=2;i--)\n    {\n        printf(\"PRINT %c\\n\",a[i]);\n        printf(\"LEFT\\n\");\n    }\n\n    printf(\"PRINT %c\\n\",a[1]);\n    }\n\n    else    {\n        while(k!=1)\n        {\n            printf(\"LEFT\\n\");\n            k--;\n        }\n\n    for(i=1;i<=n-1;i++)\n    {\n        printf(\"PRINT %c\\n\",a[i]);\n        printf(\"RIGHT\\n\");\n    }\n\n    printf(\"PRINT %c\\n\",a[n]);\n    }\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char a[100];\n    int i=0,n=0,k=0,total=0;\n    scanf(\"%d %d\\n\",&n,&k);\n\n       for(i=0;i<n;i++)\n         scanf(\"%c\",&a[i+1]);\n\n\n    total=n;\n    if((k)>(total/2))\n    {\n        while(k!=total)\n        {\n            printf(\"RIGHT\\n\");\n            k++;\n        }\n\n    for(i=n;i>=2;i--)\n    {\n        printf(\"PRINT %c\\n\",a[i]);\n        printf(\"LEFT\\n\");\n    }\n\n    printf(\"PRINT %c\",a[1]);\n    }\n\n    else    {\n        while(k!=1)\n        {\n            printf(\"LEFT\\n\");\n            k--;\n        }\n\n    for(i=1;i<=n-1;i++)\n    {\n        printf(\"PRINT %c\\n\",a[i]);\n        printf(\"RIGHT\\n\");\n    }\n\n    printf(\"PRINT %c\",a[n]);\n\n    }\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9721577726218097, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e6ea6918d8d908a8feb921d815453203", "bug_code_uid": "f1f02c5dcdd607d55a9fb1518454db35", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "b38896e9cb355585c9e5c8091a73851f", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,m,i,j,k;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n      scanf(\"%d\",&n);\r\n      int A[n],sum=0;\r\n      for(j=0;j<n;j++)\r\n      {\r\n          scanf(\"%d\",&A[j]);\r\n      }\r\n      scanf(\"%d\",&m);\r\n      int B[m];\r\n      for(k=0;k<m;k++)\r\n      {\r\n          scanf(\"%d\",&B[k]);\r\n          sum=sum+B[k];\r\n      }\r\n      printf(\"%d\\n\",A[sum%n]);\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,m,i,j,k;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n      scanf(\"%d\",&n);\r\n      int A[n];\r\n      long long int sum=0;\r\n      for(j=0;j<n;j++)\r\n      {\r\n          scanf(\"%d\",&A[j]);\r\n      }\r\n      scanf(\"%d\",&m);\r\n      int B[m];\r\n      for(k=0;k<m;k++)\r\n      {\r\n          scanf(\"%d\",&B[k]);\r\n          sum=sum+B[k];\r\n      }\r\n      printf(\"%d\\n\",A[sum%n]);\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.3178726035868893, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "e551996e71f11275e6fd8fd4ff2dc3b4", "bug_code_uid": "e73c4e304e412c58e2c4fcb8a75fb3a8", "src_uid": "4bd7ef5f6b3696bb44e22aea87981d9a", "apr_id": "951c6054d65b766e1e0c00a517a0df1f", "difficulty": 1000, "tags": ["brute force", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint minimum(int n,int a[]);\nvoid modify(int n,int a[],int min);\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,i;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tint r=minimum(n,a);\n\t\tn--;\n\t\tmodify(n,a,r);\n\t\tfor(i=n;i>0;i--)\n\t\t{\n\t\t\tint x=minimum(n,a);\n\t\t\tmodify(n--,a,x);\n\t\t\tif(x>r)\n\t\t\t\tr=x;\n\t\t}\n\t\tprintf(\"%d\\n\",r);\n\t}\n\t\t\t\t\n}\n\nint minimum(int n,int a[])\n{\n\tint i,min=1000000000,p=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]<min)\n\t\t{\n\t\t\tmin=a[i];\n\t\t\tp=i;\n\t\t}\n\t}\n\ta[p]=a[n-1];\n\ta[n-1]=min;\n\treturn min;\n}\n\nvoid modify(int n,int a[],int min)\n{\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\ta[i]=a[i]-min;\n\t}\n}\n", "fixed": "#include<stdio.h>\nvoid merge_sort(int a[],int l,int r);\nvoid merge(int a[],int l,int m,int r);\n//void modify(int n,int a[],int min_index);\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,i;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tmerge_sort(a,0,n-1);\n\t\tint r=a[0];\n\t\t//modify(n,a,0);\n\t\tint temp=a[0];\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tint x=a[i]-temp;\n\t\t\ttemp=temp+x;\n\t\t\tif(x>r)\n\t\t\t\tr=x;\n\t\t}\n\t\tprintf(\"%d\\n\",r);\n\t}\n\t\t\t\t\n}\n\nvoid merge_sort(int a[],int l,int r)\n{\n\tint m=(l+r)/2;\n\tif(l<r)\n\t{\n\t\tmerge_sort(a,l,m);\n\t\tmerge_sort(a,m+1,r);\n\t\tmerge(a,l,m,r);\n\t}\n}\n\nvoid merge(int a[],int l,int m,int r)\n{\n\tint i,j,k,temp[r];\n\ti=l,j=m+1,k=l;\n\twhile(i<=m&&j<=r)\n\t{\n\t\tif(a[i]<a[j])\n\t\t{\n\t\t\ttemp[k]=a[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k]=a[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\tif(i>m)\n\t{\n\t\tfor(;j<=r;j++)\n\t\t{\n\t\t\ttemp[k]=a[j];\n\t\t\tk++;\n\t\t}\n\t}\n\telse if(j>r)\n\t{\n\t\tfor(;i<=m;i++)\n\t\t{\n\t\t\ttemp[k]=a[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tfor(i=l;i<=r;i++)\n\t\ta[i]=temp[i];\n}\n\n\n\n\n"}
{"similarity_score": 0.8840579710144928, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0e1c8e1788ca42834406a2c73ba14a21", "bug_code_uid": "4deb85a83d02f0cccf371cf0ec6677d3", "src_uid": "206eb67987088843ef42923b0c3939d4", "apr_id": "4ca43baf50c2b0f20092b9d549f47f60", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nlong long int lenthen(long long int a,long long int b)\n{\n    long long int n=a*10;\n    for (long long int i=0;i<=9;i++)\n    {\n        if ( (n+i)%b==0)\n        {\n            n=n+i;\n            return n;\n        }\n    }\n    return 0;\n}\nint main()\n{\n    long long int a,b,n,i;\n    scanf (\"%lld\",&a);\n    scanf (\"%lld\",&b);\n    scanf (\"%lld\",&n);\n    long long int x=lenthen(a,b);\n    if (x==0){printf (\"-1\");}\n    else\n    {\n        a=x;\n        n--;\n        x=(long long int)(pow(10,n)+0.5);\n        a=a*x;\n        //printf (\"%lld \",x);\n        printf (\"%lld\",a);\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nlong long int lenthen(long long int a,long long int b)\n{\n    long long int n=a*10;\n    for (long long int i=0;i<=9;i++)\n    {\n        if ( (n+i)%b==0)\n        {\n            n=n+i;\n            return n;\n        }\n    }\n    return 0;\n}\nint main()\n{\n    long long int a,b,n,i;\n    scanf (\"%lld\",&a);\n    scanf (\"%lld\",&b);\n    scanf (\"%lld\",&n);\n    long long int x=lenthen(a,b);\n    if (x==0){printf (\"-1\");}\n    else\n    {\n        a=x;\n        n--;\n        printf (\"%lld\",a);\n        for (long long int i=0;i<n;i++)\n        {\n            printf (\"0\");\n            //a=a*10;\n        }\n        /*x=(long long int)(pow(10,n)+0.5);\n        a=a*x;\n        //printf (\"%lld \",x);*/\n        //printf (\"%lld\",a);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9878234398782344, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "47f8f903fda2ef82c34907944ee88440", "bug_code_uid": "91a24304249fdd24452746e725daf38e", "src_uid": "0515ac888937a4dda30cad5e2383164f", "apr_id": "500a36a76f2aed6469955f78cdaba6dc", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\ntypedef  long long int ll;\n \nint main(void) {\n  int n, k, i;\n  scanf(\"%d %d\",&n,&k);\n  char s[n+1];\n  scanf(\"%s\",s);\n  if(n==1)\n  {\n    if(k==1)\n    {\n      printf(\"0\");\n    }\n    else\n      printf(\"%s\",s);\n  }\n  else\n  { \n    i=0;\n    while((k!=0)&&(i<n))\n    {\n      if(i==0)\n      {\n        if((int)s[i]!=1)\n         { s[i]='1';\n          i++;\n          k--;\n         }\n         else\n         i++;\n      }\n      \n      else if(i>0)\n      {\n        if((int)s[i]!=0)\n        {\n          s[i]='0';\n          i++;\n          k--;\n        }\n        else\n        i++;\n      }\n    }\n    for(i=0;i<n;i++)\n      printf(\"%c\",s[i]);\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\ntypedef  long long int ll;\n \nint main(void) {\n  int n, k, i;\n  scanf(\"%d %d\",&n,&k);\n  char s[n+1];\n  scanf(\"%s\",s);\n  if(n==1)\n  {\n    if(k==1)\n    {\n      printf(\"0\");\n    }\n    else\n      printf(\"%s\",s);\n  }\n  else\n  { \n    i=0;\n    while((k!=0)&&(i<n))\n    {\n      if(i==0)\n      {\n        if(s[i]!='1')\n         { s[i]='1';\n          i++;\n          k--;\n         }\n         else\n         i++;\n      }\n      \n      else if(i>0)\n      {\n        if(s[i]!='0')\n        {\n          s[i]='0';\n          i++;\n          k--;\n        }\n        else\n        i++;\n      }\n    }\n    for(i=0;i<n;i++)\n      printf(\"%c\",s[i]);\n  }\n  return 0;\n}"}
{"similarity_score": 0.9133589415279556, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "92259dac23bc3ac6977302b54ec1e6e2", "bug_code_uid": "1cf71603ad4161a8ad5a3e4ff185355f", "src_uid": "b1f78130d102aa5f425e95f4b5b3a9fb", "apr_id": "d689509cf6d01a164d9dcea7948b94fb", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tchar home[21],away[21];\n\tint h[91][100]={0},a[91][100]={0},flag1[100]={0},flag2[100]={0};\n\tint i,min,num,j,n;\n\tchar team,card;\n\tscanf(\"%s\",home);\n\tscanf(\"%s\",away);\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %c %d %c\",&min,&team,&num,&card);\n\t\tif((team=='h')&&(card=='r')&&(flag1[num]>=0)&&(flag1[num]<=1))\n\t\t{\n\t\t\th[min][num]=-1;\n\t\t\tflag1[num]=3;\n\t\t}\n\t\telse\n\t\t\tif((team=='a')&&(card=='r')&&(flag2[num]>=0)&&(flag2[num]<=1))\n\t\t{\n\t\t\ta[min][num]=-1;\n\t\t\tflag2[num]=3;\n\t\t}\n\t\telse\n\t\t\tif((team=='h')&&(card=='y')&&(h[min][num]>=0)&&(flag1[num]>=0)&&(flag1[num]<2))\n\t\t{\n\t\t\tflag1[num]++;\n\t\t\tif(flag1[num]>=2)\n\t\t\t{\n\t\t\t\th[min][num]=-1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tif((team=='a')&&(card=='y')&&(h[min][num]>=0)&&(flag2[num]>=0)&&(flag2[num]<2))\n\t\t{\n\t\t\tflag2[num]++;\n\t\t\tif(flag2[num]>=2)\n\t\t\t{\n\t\t\t\ta[min][num]=-1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=90;i++)\n\t{\n\t\tfor(j=1;j<=99;j++)\n\t\t{\n\t\t\tif(h[i][j]==-1)\n\t\t\t{\n\t\t\t\tprintf(\"%s \",home);\n\t\t\t\tprintf(\"%d \",j);\n\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(i=1;i<=90;i++)\n\t{\n\t\tfor(j=1;j<=99;j++)\n\t\t{\n\t\t\tif(a[i][j]==-1)\n\t\t\t{\n\t\t\t\tprintf(\"%s \",away);\n\t\t\t\tprintf(\"%d \",j);\n\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\t\n\n\n\n\n\n\t\n\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tchar home[21],away[21];\n\tint h[91][100]={0},a[91][100]={0},flag1[100]={0},flag2[100]={0};\n\tint i,min,num,j,n;\n\tchar team,card;\n\tscanf(\"%s\",home);\n\tscanf(\"%s\",away);\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %c %d %c\",&min,&team,&num,&card);\n\t\tif((team=='h')&&(card=='r')&&(flag1[num]>=0)&&(flag1[num]<=1))\n\t\t{\n\t\t\th[min][num]=-1;\n\t\t\tflag1[num]=3;\n\t\t}\n\t\telse\n\t\t\tif((team=='a')&&(card=='r')&&(flag2[num]>=0)&&(flag2[num]<=1))\n\t\t{\n\t\t\ta[min][num]=-1;\n\t\t\tflag2[num]=3;\n\t\t}\n\t\telse\n\t\t\tif((team=='h')&&(card=='y')&&(h[min][num]>=0)&&(flag1[num]>=0)&&(flag1[num]<2))\n\t\t{\n\t\t\tflag1[num]++;\n\t\t\tif(flag1[num]>=2)\n\t\t\t{\n\t\t\t\th[min][num]=-1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tif((team=='a')&&(card=='y')&&(h[min][num]>=0)&&(flag2[num]>=0)&&(flag2[num]<2))\n\t\t{\n\t\t\tflag2[num]++;\n\t\t\tif(flag2[num]>=2)\n\t\t\t{\n\t\t\t\ta[min][num]=-1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=90;i++)\n\t{\n\t\tfor(j=1;j<=99;j++)\n\t\t{\n\t\t\tif(h[i][j]==-1)\n\t\t\t{\n\t\t\t\tprintf(\"%s \",home);\n\t\t\t\tprintf(\"%d \",j);\n\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\tbreak;\n\t\t\t}\nelse\n\t\t\tif(a[i][j]==-1)\n\t\t\t{\n\t\t\t\tprintf(\"%s \",away);\n\t\t\t\tprintf(\"%d \",j);\n\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\t\n\n\n"}
{"similarity_score": 0.6540362438220758, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c483f4a721ac491f8926b2eac24a8eb1", "bug_code_uid": "85f539d183b9ec2cfa84ff31eb362780", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "578bd8db54c6338ae8b7ab9e6ee11ee2", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define INVERT 1\n#define GET 2\n\nlong long num_items, num_queries, i, query_type, idx, ones;\nint *items, *item;\n\nint main() {\n\tscanf(\"%d %d\", &num_items, &num_queries);\n\titems = (int*)malloc(num_items * sizeof(int));\n\titem = items;\n\tones = 0;\n\tfor (i = 0; i != num_items; i++) {\n\t\tscanf(\"%d\", item);\n\t\tif (*(item++)) ones++;\n\t}\n\tfor (i = 0; i != num_queries; i++) {\n\t\tscanf(\"%d %d\", &query_type, &idx);\n\t\tif (query_type == INVERT) {\n\t\t\tif (items[idx]) ones++;\n\t\t\telse ones--;\n\t\t\titems[idx] ^= 1;\n\t\t} else printf(\"%d\\n\", idx <= ones ? 1 : 0);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define INVERT 1\n#define GET 2\n\nint num_items, num_queries, i, query_type, idx, ones;\nint *items;\n\nint main() {\n\tscanf(\"%d %d\", &num_items, &num_queries);\n\titems = (int*)malloc(num_items * sizeof(int));\n\tones = 0;\n\tfor (i = 0; i != num_items; i++) {\n\t\tscanf(\"%d\", items + i);\n\t\tif (items[i]) ones++;\n\t}\n\tfor (i = 0; i != num_queries; i++) {\n\t\tscanf(\"%d %d\", &query_type, &idx);\n\t\tif (query_type == INVERT) {\n\t\t\tif (items[idx-1]) ones--;\n\t\t\telse ones++;\n\t\t\titems[idx-1] ^= 1;\n\t\t} else printf(\"%d\\n\", idx <= ones ? 1 : 0);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.13793103448275862, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "00e9f2edf0ed6c2ea11cd00ff1c42357", "bug_code_uid": "0f46ff4ba904a04d1500fc6678fc2a25", "src_uid": "d43d4fd6c1e2722da185f34d902ace97", "apr_id": "46219c5b436c2fda016a3d00bae3b3be", "difficulty": 1600, "tags": ["data structures", "constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tfloat ind,a,k,x,val,n,s=0,num=1,arr[200000];\n\tint i,j=0;\n\tscanf(\"%f\", &n);\n\tarr[0] = 0;\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%f\", &val);\n\t\tif(val == 1)\n\t\t{\n\t\t\tscanf(\"%f %f\",&a, &x);\n\t\t\ts = s + a*x;\n\t\t\tfor(ind=0; ind<a; ind++)\n\t\t\t{\n\t\t\t\tarr[ind] = arr[ind] + x;\n\t\t\t}\n\t\t\tprintf(\"%f\\n\", s/num);\n\t\t}\n\t\tif(val == 2)\n\t\t{\n\t\t\tscanf(\"%f\", &k);\n\t\t\ts = s + k;\n\t\t\tarr[j+1] = k;\n\t\t\tj++;\n\t\t\tnum++;\n\t\t\tprintf(\"%f\\n\", s/num);\n\t\t}\n\t\tif(val == 3)\n\t\t{\n\t\t\ts = s - arr[j];\n\t\t\tj--;\n\t\t\tnum--;\n\t\t\tprintf(\"%f\\n\", s/num);\n\t\t}\n\t}\n}\n", "fixed": "#include <stdio.h>\n\nlong long seq[300000] = {0};\nlong long add[300000] = {0};\nint N = 1,Q;\n\nint main(){\n\tint i,q,x,n;\n\tlong long sum = 0;\n\tscanf(\"%d\",&Q);\n\n\tfor(i = 0;i < Q; i++){\n\t\tscanf(\"%d\",&q);\n\t\tif(q == 1){\n\t\t\tscanf(\"%d%d\",&n,&x);\n\t\t\tsum += x*n;\n\t\t\tadd[n-1] += x;\n\t\t}else if(q == 2){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tseq[N++] = x;\n\t\t\tsum += x;\n\t\t}else{\n\t\t\t--N;\n\t\t\tsum -= seq[N] + add[N];\n\t\t\tadd[N-1] += add[N];\n\t\t\tadd[N] = 0;\n\t\t}\n\t\tif(N) printf(\"%.6f\\n\", (double)sum/N);\n\t\telse {printf(\"0.000000\\n\");}\n\t}\n\n\treturn 0;\n}\n"}
